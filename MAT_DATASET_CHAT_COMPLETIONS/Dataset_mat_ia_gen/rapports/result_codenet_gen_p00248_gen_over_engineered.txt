================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:21:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class MagicCircleRealizabilityChecker:
    class Edge:
        def __init__(self, u: int, v: int):
            self.u = u
            self.v = v

    class Graph:
        def __init__(self, n: int):
            self.vertex_count = n
            self.adj = [[] for _ in range(n + 1)]

        def add_edge(self, u: int, v: int):
            self.adj[u].append(v)
            self.adj[v].append(u)

    class BipartiteChecker:
        def __init__(self, graph):
            self.graph = graph
            self.colors = [None] * (graph.vertex_count + 1)
            self.is_bipartite = True

        def check(self):
            for v in range(1, self.graph.vertex_count + 1):
                if self.colors[v] is None:
                    self._dfs(v, 0)
                    if not self.is_bipartite:
                        return False
            return True

        def _dfs(self, v, c):
            self.colors[v] = c
            for nv in self.graph.adj[v]:
                if self.colors[nv] is None:
                    self._dfs(nv, 1 - c)
                    if not self.is_bipartite:
                        return
                elif self.colors[nv] == c:
                    self.is_bipartite = False
                    return

    class CompleteSubgraphDetector:
        def __init__(self, graph):
            self.graph = graph
            self.visited = [False] * (graph.vertex_count + 1)

        def has_k5(self):
            # Checking for K5 is complex in huge graphs, but we rely on:
            # K5 is not planar => the problem asks about 1D line embeddability
            # We'll use a heuristic: if there's a complete subgraph with 5 vertices (K5),
            # it must be detected.
            # Detecting K5 naively is expensive: O(n^5) impossible on input sizes.
            # Instead, for sophistication and future extension,
            # we prepare a high-level function, but here do a special check:
            # We'll implement an abstraction; actual detection skipped (not feasible).
            return False  # Placeholder in this implementation

        def _find_complete_subgraph(self, k):
            # Placeholder for future extension:
            # sophisticated algorithm to find Kk subgraph if needed
            pass

    class CompleteBipartiteSubgraphDetector:
        def __init__(self, graph):
            self.graph = graph

        def has_k33(self):
            # Same complexity issue: detecting K3,3 explicitly is complicated
            # We'll rely on a future-extension placeholder.
            return False  # Placeholder in this implementation

    @staticmethod
    def can_be_drawn_on_line(n: int, edges: list) -> bool:
        # Step 1: Build graph abstraction
        graph = MagicCircleRealizabilityChecker.Graph(n)
        for u, v in edges:
            graph.add_edge(u, v)

        # Step 2: Check if graph is linear (path graphs or unions of paths)
        # In 1D line embeddability, the graph must be a linear forest:
        # each connected component is a path (no node degree > 2 and no cycles)

        # We'll decompose to connected components and check conditions
        used = [False] * (n + 1)

        def dfs_check_path(v, parent):
            used[v] = True
            deg = len(graph.adj[v])
            if deg > 2:
                # vertex with degree more than 2 => can't embed on a line
                return False
            for nx in graph.adj[v]:
                if not used[nx]:
                    if not dfs_check_path(nx, v):
                        return False
                elif nx != parent:
                    # cycle detected
                    return False
            return True

        for vertex in range(1, n + 1):
            if not used[vertex]:
                if not dfs_check_path(vertex, -1):
                    return False

        # Step 3: Actually the above suffices for line embeddability: disjoint paths or isolated points

        return True

    def process_dataset(self, n: int, m: int, edges: list) -> str:
        if self.can_be_drawn_on_line(n, edges):
            return "yes"
        else:
            return "no"

def main():
    import sys
    checker = MagicCircleRealizabilityChecker()
    lines = (line.rstrip('\n') for line in sys.stdin)
    while True:
        try:
            line = next(lines)
        except StopIteration:
            break
        if line.strip() == "":
            continue
        if line == "0 0":
            break
        n, m = map(int, line.split())
        edges = []
        for _ in range(m):
            u, v = map(int, next(lines).split())
            edges.append((u, v))
        print(checker.process_dataset(n, m, edges))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Magic' (ID: 29113)
  → Token d'amorce (pas de prédiction)

Token 2: 'Circle' (ID: 28055)
  → Token d'amorce (pas de prédiction)

Token 3: 'Real' (ID: 16418)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21123558282852173
    2. '(' → logprob: -1.836235523223877
    3. '{' → logprob: -3.711235523223877
    4. '.' → logprob: -5.211235523223877
    5. ' {' → logprob: -7.711235523223877
    6. '```' → logprob: -8.836236000061035
    7. '(:' → logprob: -8.961236000061035
    8. ' :' → logprob: -9.086236000061035
    9. '():' → logprob: -9.211236000061035
    10. '[' → logprob: -10.211236000061035

Token 4: 'iz' (ID: 482)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.34891077876091003
    2. '(' → logprob: -1.4739108085632324
    3. ':' → logprob: -2.8489108085632324
    4. ' {' → logprob: -5.098910808563232
    5. '[' → logprob: -7.223910808563232
    6. ' ' → logprob: -8.723910331726074
    7. '.' → logprob: -8.723910331726074
    8. '(:' → logprob: -8.973910331726074
    9. '```' → logprob: -9.348910331726074
    10. ' :' → logprob: -9.723910331726074

Token 5: 'ability' (ID: 3563)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.1649945080280304
    2. 'e' → logprob: -2.039994478225708
    3. 'a' → logprob: -4.164994716644287
    4. 'er' → logprob: -5.289994716644287
    5. '```' → logprob: -7.539994716644287
    6. 'ed' → logprob: -8.164994239807129
    7. 'at' → logprob: -8.664994239807129
    8. 'able' → logprob: -8.789994239807129
    9. '{' → logprob: -8.914994239807129
    10. 'atio' → logprob: -9.664994239807129

Token 6: 'Checker' (ID: 39016)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2005351036787033
    2. ':' → logprob: -1.9505350589752197
    3. '{' → logprob: -3.3255350589752197
    4. ' {' → logprob: -6.200535297393799
    5. ' :' → logprob: -7.950535297393799
    6. '.' → logprob: -7.950535297393799
    7. ' ' → logprob: -8.45053482055664
    8. ' (' → logprob: -8.70053482055664
    9. '(:' → logprob: -8.95053482055664
    10. '[' → logprob: -9.32553482055664

Token 7: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4623711109161377
    2. ':' → logprob: -1.3373711109161377
    3. '.' → logprob: -2.7123711109161377
    4. '{' → logprob: -3.2123711109161377
    5. '[' → logprob: -7.837370872497559
    6. ' {' → logprob: -8.337370872497559
    7. '```' → logprob: -8.962370872497559
    8. ' (' → logprob: -9.962370872497559
    9. '(:' → logprob: -9.962370872497559
    10. '(
' → logprob: -10.337370872497559

Token 8: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.041128598153591156
    2. ':' → logprob: -3.291128635406494
    3. '.' → logprob: -5.916128635406494
    4. '```' → logprob: -8.916128158569336
    5. '(
' → logprob: -9.666128158569336
    6. '():' → logprob: -9.791128158569336
    7. '   ' → logprob: -10.666128158569336
    8. '\' → logprob: -10.666128158569336
    9. ' (' → logprob: -10.916128158569336
    10. '()' → logprob: -11.041128158569336

Token 9: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7632458209991455
    2. '(' → logprob: -1.0132458209991455
    3. '```' → logprob: -2.3882458209991455
    4. ':' → logprob: -3.3882458209991455
    5. '\' → logprob: -3.8882458209991455
    6. ' ' → logprob: -5.388245582580566
    7. '.' → logprob: -5.763245582580566
    8. ' (' → logprob: -6.138245582580566
    9. ''' → logprob: -6.513245582580566
    10. '()' → logprob: -6.888245582580566

Token 10: ' Edge' (ID: 16396)
  Prédit: ' Magic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Magic' → logprob: -0.6881968379020691
    2. ' Meta' → logprob: -1.5631968975067139
    3. ' Checker' → logprob: -2.063196897506714
    4. ' Real' → logprob: -3.313196897506714
    5. ' Methods' → logprob: -3.688196897506714
    6. ' Method' → logprob: -3.688196897506714
    7. '   ' → logprob: -4.813196659088135
    8. 'Method' → logprob: -5.063196659088135
    9. 'Methods' → logprob: -5.188196659088135
    10. 'Meta' → logprob: -5.313196659088135

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04357260465621948
    2. '(' → logprob: -3.1685726642608643
    3. ' :' → logprob: -8.293572425842285
    4. ':
' → logprob: -8.668572425842285
    5. '<|end|>' → logprob: -9.668572425842285
    6. '```' → logprob: -11.293572425842285
    7. '(
' → logprob: -11.543572425842285
    8. '   ' → logprob: -11.793572425842285
    9. ' (' → logprob: -11.793572425842285
    10. '[' → logprob: -12.418572425842285

Token 12: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005975842475891113
    2. '<|end|>' → logprob: -6.255975723266602
    3. ':' → logprob: -6.755975723266602
    4. ' (' → logprob: -7.130975723266602
    5. '(
' → logprob: -7.755975723266602
    6. ' ' → logprob: -8.255975723266602
    7. '\' → logprob: -8.505975723266602
    8. '   ' → logprob: -8.755975723266602
    9. '[' → logprob: -9.005975723266602
    10. '(object' → logprob: -9.005975723266602

Token 13: ' def' (ID: 1056)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16345126926898956
    2. ' (' → logprob: -2.6634511947631836
    3. '        ' → logprob: -3.4134511947631836
    4. '       ' → logprob: -4.788451194763184
    5. '           ' → logprob: -5.038451194763184
    6. '(n' → logprob: -5.038451194763184
    7. ' ' → logprob: -5.163451194763184
    8. '            ' → logprob: -5.913451194763184
    9. '    ' → logprob: -6.288451194763184
    10. '_' → logprob: -6.288451194763184

Token 14: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.018872907385230064
    2. '__' → logprob: -4.2688727378845215
    3. '_' → logprob: -5.5188727378845215
    4. ' ' → logprob: -7.8938727378845215
    5. ' init' → logprob: -8.76887321472168
    6. ' _' → logprob: -9.76887321472168
    7. '_init' → logprob: -10.14387321472168
    8. 'init' → logprob: -10.14387321472168
    9. ' ___' → logprob: -12.14387321472168
    10. ' ' → logprob: -12.64387321472168

Token 15: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.098748053773306e-05
    2. ' init' → logprob: -9.75006103515625
    3. 'ini' → logprob: -13.00006103515625
    4. 'in' → logprob: -15.75006103515625
    5. 'i' → logprob: -16.62506103515625
    6. 'int' → logprob: -17.12506103515625
    7. 'inite' → logprob: -17.62506103515625
    8. '	init' → logprob: -18.00006103515625
    9. 'inti' → logprob: -18.37506103515625
    10. ' ' → logprob: -18.37506103515625

Token 16: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10510551929473877
    2. '__' → logprob: -2.355105400085449
    3. '(' → logprob: -5.605105400085449
    4. '__(
' → logprob: -7.355105400085449
    5. '__('' → logprob: -8.10510540008545
    6. '__((' → logprob: -8.73010540008545
    7. '_' → logprob: -10.48010540008545
    8. '__(*' → logprob: -11.10510540008545
    9. '```' → logprob: -11.60510540008545
    10. '__("' → logprob: -11.73010540008545

Token 17: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014202173799276352
    2. ' self' → logprob: -4.264202117919922
    3. ')' → logprob: -10.764202117919922
    4. '(self' → logprob: -11.389202117919922
    5. ' )' → logprob: -13.889202117919922
    6. '_self' → logprob: -14.139202117919922
    7. '<|end|>' → logprob: -14.264202117919922
    8. ' ' → logprob: -14.389202117919922
    9. ',' → logprob: -14.514202117919922
    10. '<|end|>' → logprob: -15.014202117919922

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2605093717575073
    2. ' ,' → logprob: -2.135509490966797
    3. '(self' → logprob: -3.260509490966797
    4. 'self' → logprob: -3.635509490966797
    5. ' (' → logprob: -3.760509490966797
    6. ' self' → logprob: -4.385509490966797
    7. ' ' → logprob: -5.760509490966797
    8. '(' → logprob: -5.885509490966797
    9. ')' → logprob: -6.260509490966797
    10. ' )' → logprob: -6.760509490966797

Token 19: ' u' (ID: 337)
  Prédit: ' source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' source' → logprob: -0.4940473139286041
    2. ' self' → logprob: -1.9940472841262817
    3. 'source' → logprob: -2.3690474033355713
    4. ' u' → logprob: -3.3690474033355713
    5. 'self' → logprob: -3.6190474033355713
    6. ' node' → logprob: -3.7440474033355713
    7. ' start' → logprob: -3.9940474033355713
    8. ' src' → logprob: -4.119047164916992
    9. 'src' → logprob: -4.744047164916992
    10. ' from' → logprob: -4.869047164916992

Token 20: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013948804698884487
    2. ' ,' → logprob: -6.626394748687744
    3. ':' → logprob: -10.376395225524902
    4. ')' → logprob: -10.751395225524902
    5. ',u' → logprob: -12.376395225524902
    6. '):' → logprob: -12.501395225524902
    7. 'u' → logprob: -13.376395225524902
    8. '_,' → logprob: -13.751395225524902
    9. '=' → logprob: -14.251395225524902
    10. ' ' → logprob: -14.376395225524902

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1430921107530594
    2. 'int' → logprob: -2.018092155456543
    3. ' u' → logprob: -9.518092155456543
    4. '<|end|>' → logprob: -9.643092155456543
    5. ' ' → logprob: -9.893092155456543
    6. ' str' → logprob: -10.143092155456543
    7. ' '' → logprob: -10.268092155456543
    8. '[int' → logprob: -10.393092155456543
    9. 'u' → logprob: -10.518092155456543
    10. '<|end|>' → logprob: -11.018092155456543

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003961185284424573
    2. ' ,' → logprob: -7.875396251678467
    3. ')' → logprob: -11.625395774841309
    4. '<|end|>' → logprob: -12.625395774841309
    5. ',u' → logprob: -13.375395774841309
    6. ',int' → logprob: -14.250395774841309
    7. '‌,' → logprob: -14.625395774841309
    8. ',
' → logprob: -15.000395774841309
    9. '<|end|>' → logprob: -15.750395774841309
    10. '):' → logprob: -16.250396728515625

Token 23: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.055157244205474854
    2. 'v' → logprob: -2.93015718460083
    3. ' ' → logprob: -8.680157661437988
    4. ' u' → logprob: -10.180157661437988
    5. 'u' → logprob: -11.055157661437988
    6. ' ' → logprob: -11.305157661437988
    7. ')' → logprob: -11.555157661437988
    8. '<|end|>' → logprob: -11.805157661437988
    9. '	v' → logprob: -12.180157661437988
    10. ' w' → logprob: -12.555157661437988

Token 24: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23834168910980225
    2. ',' → logprob: -1.7383416891098022
    3. ')' → logprob: -3.988341808319092
    4. '):' → logprob: -4.113341808319092
    5. ':int' → logprob: -7.113341808319092
    6. ' ,' → logprob: -7.988341808319092
    7. ' :' → logprob: -9.738341331481934
    8. ' ):' → logprob: -9.738341331481934
    9. ' )' → logprob: -10.363341331481934
    10. '):
' → logprob: -11.488341331481934

Token 25: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.14272692799568176
    2. 'int' → logprob: -2.0177268981933594
    3. ':int' → logprob: -10.64272689819336
    4. '=int' → logprob: -11.89272689819336
    5. ' ' → logprob: -12.51772689819336
    6. '[int' → logprob: -12.64272689819336
    7. '<int' → logprob: -12.76772689819336
    8. ')' → logprob: -13.14272689819336
    9. '	int' → logprob: -13.14272689819336
    10. ',int' → logprob: -13.51772689819336

Token 26: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1721726953983307
    2. '):' → logprob: -2.047172784805298
    3. ')' → logprob: -3.547172784805298
    4. ' ,' → logprob: -8.797172546386719
    5. '):
' → logprob: -10.422172546386719
    6. ':' → logprob: -10.672172546386719
    7. '<|end|>' → logprob: -11.047172546386719
    8. ' ):' → logprob: -11.422172546386719
    9. ' )' → logprob: -11.922172546386719
    10. '),' → logprob: -12.297172546386719

Token 27: '           ' (ID: 352)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4558773338794708
    2. ',' → logprob: -1.8308773040771484
    3. ')' → logprob: -1.9558773040771484
    4. '       ' → logprob: -4.330877304077148
    5. '<|end|>' → logprob: -4.455877304077148
    6. ' ):' → logprob: -4.830877304077148
    7. '           ' → logprob: -4.955877304077148
    8. 'u' → logprob: -5.080877304077148
    9. ' ,' → logprob: -5.205877304077148
    10. 'self' → logprob: -5.705877304077148

Token 28: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5333089232444763
    2. 'self' (adapté à ' self') → logprob: -0.9083089232444763
    3. '               ' → logprob: -5.283308982849121
    4. ' ' → logprob: -6.033308982849121
    5. '           ' → logprob: -6.908308982849121
    6. ' ' → logprob: -7.533308982849121
    7. '            ' → logprob: -7.783308982849121
    8. '       ' → logprob: -8.908308982849121
    9. '             ' → logprob: -9.033308982849121
    10. '                ' → logprob: -9.283308982849121

Token 29: '.u' (ID: 22262)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05121013894677162
    2. '.u' → logprob: -3.0512101650238037
    3. 'u' → logprob: -7.301209926605225
    4. ' =' → logprob: -7.301209926605225
    5. ' .' → logprob: -8.051210403442383
    6. '=' → logprob: -8.551210403442383
    7. '.user' → logprob: -8.676210403442383
    8. ' u' → logprob: -8.676210403442383
    9. '=u' → logprob: -8.676210403442383
    10. ',' → logprob: -9.426210403442383

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5994594693183899
    2. '=' → logprob: -1.2244594097137451
    3. ',' → logprob: -1.9744594097137451
    4. ' ,' → logprob: -5.224459648132324
    5. ')' → logprob: -5.349459648132324
    6. '.' → logprob: -5.974459648132324
    7. ' ' → logprob: -5.974459648132324
    8. '<|end|>' → logprob: -6.974459648132324
    9. '            ' → logprob: -7.599459648132324
    10. ' ==' → logprob: -8.349459648132324

Token 31: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.12692999839782715
    2. 'u' → logprob: -2.126929998397827
    3. '	u' → logprob: -14.001930236816406
    4. ' ' → logprob: -14.876930236816406
    5. ' ' → logprob: -15.001930236816406
    6. '=u' → logprob: -15.001930236816406
    7. '(u' → logprob: -17.001930236816406
    8. '            ' → logprob: -17.376930236816406
    9. '*u' → logprob: -18.001930236816406
    10. '[u' → logprob: -18.126930236816406

Token 32: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13301844894886017
    2. 'self' (adapté à ' self') → logprob: -2.8830184936523438
    3. 'v' → logprob: -3.5080184936523438
    4. '       ' → logprob: -3.7580184936523438
    5. '
' → logprob: -4.633018493652344
    6. '   ' → logprob: -6.883018493652344
    7. ' ' → logprob: -7.383018493652344
    8. '=' → logprob: -7.383018493652344
    9. '               ' → logprob: -7.508018493652344
    10. '
' → logprob: -7.758018493652344

Token 35: '.v' (ID: 5520)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0032021927181631327
    2. '.v' → logprob: -5.753201961517334
    3. '.u' → logprob: -10.878202438354492
    4. ' .' → logprob: -12.503202438354492
    5. 'v' → logprob: -14.378202438354492
    6. ')' → logprob: -15.628202438354492
    7. ',' → logprob: -16.003202438354492
    8. '.e' → logprob: -16.253202438354492
    9. '.)' → logprob: -16.253202438354492
    10. '.

' → logprob: -16.503202438354492

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4779627323150635
    2. '=' → logprob: -1.1029627323150635
    3. '<|end|>' → logprob: -3.1029627323150635
    4. ')' → logprob: -6.977962493896484
    5. '.' → logprob: -7.352962493896484
    6. '<|end|>' → logprob: -7.477962493896484
    7. ' ' → logprob: -8.227962493896484
    8. '=v' → logprob: -8.477962493896484
    9. '           ' → logprob: -9.352962493896484
    10. ' ==' → logprob: -9.852962493896484

Token 37: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5231289267539978
    2. ' v' → logprob: -0.8981289267539978
    3. ' ' → logprob: -13.273128509521484
    4. ' ' → logprob: -13.898128509521484
    5. '	v' → logprob: -13.898128509521484
    6. 'u' → logprob: -14.898128509521484
    7. ')v' → logprob: -15.273128509521484
    8. '_v' → logprob: -15.398128509521484
    9. '0' → logprob: -15.523128509521484
    10. '1' → logprob: -16.023128509521484

Token 38: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7837398052215576
    2. '<|end|>' → logprob: -1.0337398052215576
    3. '       ' → logprob: -2.4087398052215576
    4. '   ' → logprob: -3.6587398052215576
    5. '    
' → logprob: -3.9087398052215576
    6. '\n' → logprob: -3.9087398052215576
    7. 'newline' → logprob: -4.908740043640137
    8. '    ' → logprob: -5.158740043640137
    9. '        
' → logprob: -5.783740043640137
    10. '<|end|>' → logprob: -5.783740043640137

Token 39: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' class' (ID: 744)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.403681218624115
    2. '   ' → logprob: -2.0286812782287598
    3. '
' → logprob: -2.2786812782287598
    4. '    
' → logprob: -3.0286812782287598
    5. '    ' → logprob: -4.02868127822876
    6. '        
' → logprob: -4.77868127822876
    7. ' def' → logprob: -5.02868127822876
    8. '       ' → logprob: -5.15368127822876
    9. '<|end|>' → logprob: -5.40368127822876
    10. ' ' → logprob: -6.90368127822876

Token 41: ' Graph' (ID: 15559)
  Prédit: ' Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Node' → logprob: -0.47378823161125183
    2. ' Vertex' → logprob: -1.0987882614135742
    3. 'Node' → logprob: -4.598788261413574
    4. ' State' → logprob: -4.723788261413574
    5. ' Vert' → logprob: -4.723788261413574
    6. ' Graph' → logprob: -5.598788261413574
    7. 'Vertex' → logprob: -5.598788261413574
    8. ' Path' → logprob: -5.973788261413574
    9. ' Token' → logprob: -7.223788261413574
    10. ' Face' → logprob: -7.223788261413574

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000261216628132388
    2. ':
' → logprob: -8.875261306762695
    3. '(' → logprob: -9.875261306762695
    4. '):' → logprob: -10.750261306762695
    5. '():' → logprob: -11.000261306762695
    6. '<|end|>' → logprob: -11.500261306762695
    7. '(object' → logprob: -11.750261306762695
    8. ':**' → logprob: -13.250261306762695
    9. '```' → logprob: -13.500261306762695
    10. ' :' → logprob: -13.500261306762695

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32928767800331116
    2. '<|end|>' → logprob: -1.3292876482009888
    3. '   ' → logprob: -5.454287528991699
    4. '
' → logprob: -5.454287528991699
    5. ':' → logprob: -5.579287528991699
    6. '<|end|>' → logprob: -6.329287528991699
    7. '        
' → logprob: -8.2042875289917
    8. '    ' → logprob: -8.2042875289917
    9. '\' → logprob: -8.5792875289917
    10. '        ' → logprob: -8.8292875289917

Token 44: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7102524042129517
    2. 'def' (adapté à ' def') → logprob: -0.9602524042129517
    3. '   ' → logprob: -2.585252285003662
    4. ':' → logprob: -3.960252285003662
    5. '       ' → logprob: -4.085252285003662
    6. '<|end|>' → logprob: -5.835252285003662
    7. '    ' → logprob: -5.960252285003662
    8. ':
' → logprob: -6.460252285003662
    9. '
' → logprob: -6.835252285003662
    10. ' ' → logprob: -6.835252285003662

Token 45: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007698671892285347
    2. '__' → logprob: -4.8826985359191895
    3. 'init' → logprob: -9.757699012756348
    4. '_init' → logprob: -11.132699012756348
    5. ' init' → logprob: -11.257699012756348
    6. ' def' → logprob: -12.757699012756348
    7. 'def' → logprob: -13.132699012756348
    8. ' ' → logprob: -13.882699012756348
    9. '___' → logprob: -15.132699012756348
    10. ' _' → logprob: -15.507699012756348

Token 46: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.3902033970225602e-05
    2. 'i' → logprob: -11.500014305114746
    3. 'in' → logprob: -12.750014305114746
    4. 'ini' → logprob: -14.250014305114746
    5. 'int' → logprob: -15.875014305114746
    6. 'def' → logprob: -17.50001335144043
    7. ' init' → logprob: -17.75001335144043
    8. 'inite' → logprob: -18.12501335144043
    9. '```' → logprob: -18.37501335144043
    10. 'inti' → logprob: -18.62501335144043

Token 47: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.22151987254619598
    2. '__(' → logprob: -1.8465198278427124
    3. '(' → logprob: -3.221519947052002
    4. ' (' → logprob: -7.721519947052002
    5. ')(' → logprob: -8.346519470214844
    6. '_(' → logprob: -9.096519470214844
    7. 'self' → logprob: -9.596519470214844
    8. '__' → logprob: -10.346519470214844
    9. '__(
' → logprob: -10.721519470214844
    10. '<|end|>' → logprob: -10.846519470214844

Token 48: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006741777528077364
    2. ' self' → logprob: -5.006742000579834
    3. ')' → logprob: -10.881741523742676
    4. ' ' → logprob: -12.881741523742676
    5. '0' → logprob: -13.381741523742676
    6. '(self' → logprob: -13.631741523742676
    7. ' )' → logprob: -14.756741523742676
    8. '_self' → logprob: -14.756741523742676
    9. '	self' → logprob: -14.881741523742676
    10. ' ' → logprob: -15.381741523742676

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010785412741824985
    2. 'self' → logprob: -7.1260786056518555
    3. ' ,' → logprob: -8.751078605651855
    4. '):' → logprob: -9.501078605651855
    5. ')' → logprob: -10.626078605651855
    6. '(self' → logprob: -12.376078605651855
    7. ',self' → logprob: -12.376078605651855
    8. ' self' → logprob: -13.001078605651855
    9. ' ' → logprob: -13.626078605651855
    10. '_self' → logprob: -13.751078605651855

Token 50: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.46590930223464966
    2. ' self' → logprob: -1.4659092426300049
    3. 'n' → logprob: -2.590909242630005
    4. 'self' → logprob: -2.965909242630005
    5. ')' → logprob: -5.465909481048584
    6. ' )' → logprob: -5.965909481048584
    7. ' vertices' → logprob: -6.715909481048584
    8. ' vertex' → logprob: -6.840909481048584
    9. ' node' → logprob: -6.965909481048584
    10. ' num' → logprob: -6.965909481048584

Token 51: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38920098543167114
    2. '):' → logprob: -1.1392009258270264
    3. ')' → logprob: -6.8892011642456055
    4. ',' → logprob: -7.1392011642456055
    5. ' ):' → logprob: -8.264201164245605
    6. ':int' → logprob: -8.514201164245605
    7. '):
' → logprob: -10.389201164245605
    8. ' :' → logprob: -11.389201164245605
    9. ' )' → logprob: -12.389201164245605
    10. '=' → logprob: -13.014201164245605

Token 52: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4289928674697876
    2. 'int' → logprob: -1.0539928674697876
    3. '[int' → logprob: -9.178993225097656
    4. ' ' → logprob: -9.553993225097656
    5. ')' → logprob: -10.303993225097656
    6. '<|end|>' → logprob: -10.428993225097656
    7. ']int' → logprob: -10.928993225097656
    8. '=int' → logprob: -11.553993225097656
    9. ',int' → logprob: -12.178993225097656
    10. ' )' → logprob: -12.178993225097656

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16082893311977386
    2. ',' → logprob: -1.910828948020935
    3. ')' → logprob: -8.410828590393066
    4. '):
' → logprob: -8.660828590393066
    5. ' ):' → logprob: -8.910828590393066
    6. ' ,' → logprob: -10.410828590393066
    7. '<|end|>' → logprob: -11.660828590393066
    8. '   ' → logprob: -12.035828590393066
    9. '       ' → logprob: -12.160828590393066
    10. '<|end|>' → logprob: -12.285828590393066

Token 54: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013224351219832897
    2. ',' → logprob: -5.263224124908447
    3. 'self' → logprob: -5.763224124908447
    4. ' ' → logprob: -6.763224124908447
    5. '               ' → logprob: -7.263224124908447
    6. '):
' → logprob: -7.513224124908447
    7. '```' → logprob: -7.888224124908447
    8. ' self' → logprob: -8.013224601745605
    9. 'n' → logprob: -8.138224601745605
    10. ' ' → logprob: -8.263224601745605

Token 55: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.429879754781723
    2. 'self' (adapté à ' self') → logprob: -1.0548797845840454
    3. '       ' → logprob: -7.429879665374756
    4. '        ' → logprob: -8.179880142211914
    5. ' ' → logprob: -9.054880142211914
    6. ' ' → logprob: -9.679880142211914
    7. '           ' → logprob: -9.929880142211914
    8. '	self' → logprob: -10.554880142211914
    9. '```' → logprob: -11.679880142211914
    10. '   ' → logprob: -11.929880142211914

Token 56: '.vertex' (ID: 95344)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.36179792881011963
    2. '.n' → logprob: -1.4867979288101196
    3. ' .' → logprob: -2.73679780960083
    4. '.nodes' → logprob: -4.98679780960083
    5. '.edges' → logprob: -5.98679780960083
    6. '.vertices' → logprob: -7.61179780960083
    7. '.graph' → logprob: -8.111798286437988
    8. '.num' → logprob: -8.361798286437988
    9. '.user' → logprob: -8.486798286437988
    10. '.u' → logprob: -8.611798286437988

Token 57: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0045823766849935055
    2. '_count' → logprob: -5.629582405090332
    3. '_s' → logprob: -7.379582405090332
    4. 'Count' → logprob: -9.004582405090332
    5. ' s' → logprob: -9.254582405090332
    6. 'count' → logprob: -10.004582405090332
    7. '_num' → logprob: -10.879582405090332
    8. '_' → logprob: -11.129582405090332
    9. '_list' → logprob: -11.504582405090332
    10. '_cnt' → logprob: -11.879582405090332

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026304941624403
    2. '=' → logprob: -3.6513049602508545
    3. ' ' → logprob: -12.651305198669434
    4. ')' → logprob: -14.651305198669434
    5. '    ' → logprob: -15.401305198669434
    6. '  ' → logprob: -15.651305198669434
    7. 's' → logprob: -15.651305198669434
    8. '<|end|>' → logprob: -16.151304244995117
    9. ' =
' → logprob: -16.276304244995117
    10. '   ' → logprob: -16.401304244995117

Token 59: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.01815333589911461
    2. 'n' → logprob: -4.018153190612793
    3. ' ' → logprob: -13.018153190612793
    4. ' ' → logprob: -14.268153190612793
    5. '	n' → logprob: -14.518153190612793
    6. '0' → logprob: -17.76815414428711
    7. ' н' → logprob: -17.76815414428711
    8. ')n' → logprob: -17.89315414428711
    9. '```' → logprob: -18.14315414428711
    10. '<|end|>' → logprob: -18.14315414428711

Token 60: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03521748632192612
    2. '
' → logprob: -3.410217523574829
    3. 'self' → logprob: -7.78521728515625
    4. '<|end|>' → logprob: -7.91021728515625
    5. '       ' → logprob: -8.03521728515625
    6. '   ' → logprob: -9.53521728515625
    7. '    
' → logprob: -9.78521728515625
    8. '               ' → logprob: -9.78521728515625
    9. '            
' → logprob: -9.91021728515625
    10. '        
' → logprob: -10.03521728515625

Token 62: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3301069438457489
    2. 'self' (adapté à ' self') → logprob: -1.3301069736480713
    3. ' self' → logprob: -4.205106735229492
    4. '       ' → logprob: -6.580106735229492
    5. '   ' → logprob: -8.705106735229492
    6. '
' → logprob: -8.955106735229492
    7. ' ' → logprob: -10.955106735229492
    8. '	self' → logprob: -10.955106735229492
    9. '```' → logprob: -11.080106735229492
    10. '               ' → logprob: -11.205106735229492

Token 63: '.ad' (ID: 19775)
  Prédit: '.edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.12533830106258392
    2. ' .' → logprob: -2.875338315963745
    3. '.ad' → logprob: -3.250338315963745
    4. '.graph' → logprob: -4.625338077545166
    5. '.edge' → logprob: -5.375338077545166
    6. '.vertices' → logprob: -5.625338077545166
    7. '.' → logprob: -5.750338077545166
    8. '._' → logprob: -8.125338554382324
    9. '.nodes' → logprob: -8.625338554382324
    10. '.vertex' → logprob: -8.750338554382324

Token 64: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006761906202882528
    2. 'jac' → logprob: -5.0067620277404785
    3. 'js' → logprob: -10.13176155090332
    4. 'ja' → logprob: -13.13176155090332
    5. 'jc' → logprob: -13.75676155090332
    6. 'jec' → logprob: -14.38176155090332
    7. 'acency' → logprob: -14.50676155090332
    8. ' j' → logprob: -14.75676155090332
    9. 'jl' → logprob: -15.63176155090332
    10. '[j' → logprob: -15.75676155090332

Token 65: ' =' (ID: 314)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.037312719970941544
    2. '=' → logprob: -4.1623125076293945
    3. '_list' → logprob: -4.4123125076293945
    4. ' =' → logprob: -5.1623125076293945
    5. 'acent' → logprob: -6.2873125076293945
    6. 'ac' → logprob: -7.9123125076293945
    7. '[' → logprob: -8.162312507629395
    8. 'list' → logprob: -8.662312507629395
    9. '_lists' → logprob: -9.037312507629395
    10. '=[]' → logprob: -9.162312507629395

Token 66: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.254402756690979
    2. '[' → logprob: -1.504402756690979
    3. ' [' → logprob: -6.0044026374816895
    4. ' defaultdict' → logprob: -13.629403114318848
    5. '[]' → logprob: -14.504403114318848
    6. '[:]' → logprob: -15.004403114318848
    7. ' []' → logprob: -16.00440216064453
    8. ' {' → logprob: -16.12940216064453
    9. '[List' → logprob: -16.12940216064453
    10. '[len' → logprob: -16.62940216064453

Token 67: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8275248408317566
    2. 'for' → logprob: -1.2025249004364014
    3. ']' → logprob: -1.8275249004364014
    4. ')' → logprob: -2.4525249004364014
    5. '()' → logprob: -4.952524662017822
    6. ' ]' → logprob: -5.827524662017822
    7. '()]' → logprob: -6.827524662017822
    8. '<|end|>' → logprob: -6.827524662017822
    9. '(' → logprob: -7.452524662017822
    10. '       ' → logprob: -7.577524662017822

Token 68: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40291041135787964
    2. ' _' → logprob: -1.1529104709625244
    3. ' range' → logprob: -4.402910232543945
    4. ' ' → logprob: -6.652910232543945
    5. '(range' → logprob: -6.902910232543945
    6. '(' → logprob: -7.402910232543945
    7. 'range' → logprob: -7.402910232543945
    8. ' (' → logprob: -10.027910232543945
    9. ' in' → logprob: -10.152910232543945
    10. '_range' → logprob: -10.527910232543945

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023395370692014694
    2. 'in' → logprob: -3.773395299911499
    3. ' ' → logprob: -9.898395538330078
    4. 'range' → logprob: -9.898395538330078
    5. 'i' → logprob: -10.523395538330078
    6. '  ' → logprob: -11.898395538330078
    7. '_' → logprob: -12.273395538330078
    8. '   ' → logprob: -13.148395538330078
    9. 's' → logprob: -13.648395538330078
    10. '    ' → logprob: -13.773395538330078

Token 70: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031781906727701426
    2. ' range' → logprob: -5.753178119659424
    3. ' ' → logprob: -16.003177642822266
    4. '	range' → logprob: -16.253177642822266
    5. '_range' → logprob: -16.503177642822266
    6. '   ' → logprob: -16.503177642822266
    7. '  ' → logprob: -16.878177642822266
    8. '(range' → logprob: -17.003177642822266
    9. '_' → logprob: -17.128177642822266
    10. 'rang' → logprob: -18.503177642822266

Token 71: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0027484113816171885
    2. '(' → logprob: -6.377748489379883
    3. '(self' → logprob: -6.877748489379883
    4. ' (' → logprob: -11.127748489379883
    5. ')' → logprob: -15.752748489379883
    6. '(s' → logprob: -16.502748489379883
    7. 'self' → logprob: -16.502748489379883
    8. ')(' → logprob: -16.627748489379883
    9. '(nn' → logprob: -17.377748489379883
    10. ')n' → logprob: -17.377748489379883

Token 72: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.137130498653278e-05
    2. ')' → logprob: -9.750081062316895
    3. ' )' → logprob: -11.500081062316895
    4. ')])' → logprob: -11.750081062316895
    5. ']' → logprob: -13.375081062316895
    6. '])' → logprob: -13.875081062316895
    7. ')]
' → logprob: -14.250081062316895
    8. '       ' → logprob: -14.750081062316895
    9. '])]' → logprob: -15.000081062316895
    10. '))' → logprob: -15.125081062316895

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06994687765836716
    2. ' ' → logprob: -2.694946765899658
    3. '2' → logprob: -11.569947242736816
    4. '0' → logprob: -15.069947242736816
    5. '   ' → logprob: -15.569947242736816
    6. ')' → logprob: -15.569947242736816
    7. '7' → logprob: -16.0699462890625
    8. '```' → logprob: -16.8824462890625
    9. '  ' → logprob: -17.1324462890625
    10. ' )' → logprob: -17.3199462890625

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005635190173052251
    2. ' ' → logprob: -7.500563621520996
    3. '2' → logprob: -11.500563621520996
    4. '(' → logprob: -15.375563621520996
    5. '0' → logprob: -16.12556266784668
    6. '7' → logprob: -17.00056266784668
    7. '   ' → logprob: -17.50056266784668
    8. ')' → logprob: -18.12556266784668
    9. '3' → logprob: -18.12556266784668
    10. '```' → logprob: -18.25056266784668

Token 75: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0030352321919053793
    2. ')' → logprob: -5.878035068511963
    3. '])' → logprob: -9.253035545349121
    4. ']' → logprob: -9.253035545349121
    5. ')])' → logprob: -10.378035545349121
    6. '])]' → logprob: -13.003035545349121
    7. ' )' → logprob: -13.128035545349121
    8. '<|end|>' → logprob: -14.378035545349121
    9. '))' → logprob: -14.628035545349121
    10. ')],' → logprob: -15.003035545349121

Token 76: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1514345109462738
    2. '   ' → logprob: -2.9014344215393066
    3. '
' → logprob: -3.0264344215393066
    4. ' def' → logprob: -4.026434421539307
    5. '       ' → logprob: -4.151434421539307
    6. '    
' → logprob: -6.526434421539307
    7. '        
' → logprob: -7.151434421539307
    8. '<|end|>' → logprob: -7.401434421539307
    9. ' ' → logprob: -8.026434898376465
    10. '<|end|>' → logprob: -9.651434898376465

Token 78: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.02324839122593403
    2. 'add' → logprob: -3.7732484340667725
    3. '	add' → logprob: -13.773248672485352
    4. ' addedge' → logprob: -14.148248672485352
    5. '_add' → logprob: -14.523248672485352
    6. ')add' → logprob: -15.148248672485352
    7. ' ' → logprob: -16.39824867248535
    8. '.add' → logprob: -16.52324867248535
    9. '   ' → logprob: -16.77324867248535
    10. 'adde' → logprob: -17.14824867248535

Token 79: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.00024323153775185347
    2. '_' → logprob: -8.375243186950684
    3. '_vertex' → logprob: -12.625243186950684
    4. '_neighbor' → logprob: -12.750243186950684
    5. '_edges' → logprob: -13.125243186950684
    6. '_node' → logprob: -13.375243186950684
    7. 'edge' → logprob: -14.500243186950684
    8. '_connection' → logprob: -14.500243186950684
    9. '_e' → logprob: -15.125243186950684
    10. '_endpoint' → logprob: -16.000244140625

Token 80: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018192199990153313
    2. '(' → logprob: -4.018192291259766
    3. 'self' → logprob: -11.393192291259766
    4. ' (' → logprob: -11.643192291259766
    5. '(s' → logprob: -11.768192291259766
    6. '(
' → logprob: -12.018192291259766
    7. '(u' → logprob: -12.268192291259766
    8. '(sel' → logprob: -13.893192291259766
    9. '<|end|>' → logprob: -14.268192291259766
    10. ' self' → logprob: -14.518192291259766

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11525002121925354
    2. ')' → logprob: -2.4902501106262207
    3. '(' → logprob: -4.240250110626221
    4. ' ,' → logprob: -5.240250110626221
    5. '<|end|>' → logprob: -5.615250110626221
    6. ' )' → logprob: -7.740250110626221
    7. '(u' → logprob: -7.740250110626221
    8. ' (' → logprob: -7.740250110626221
    9. ',u' → logprob: -7.865250110626221
    10. 'u' → logprob: -8.240249633789062

Token 82: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.01257510669529438
    2. 'u' → logprob: -4.387575149536133
    3. ' self' → logprob: -10.012575149536133
    4. 'self' → logprob: -11.137575149536133
    5. ')' → logprob: -12.887575149536133
    6. ' ' → logprob: -13.137575149536133
    7. ' )' → logprob: -14.637575149536133
    8. '(u' → logprob: -14.637575149536133
    9. '	u' → logprob: -14.637575149536133
    10. '<|end|>' → logprob: -16.387575149536133

Token 83: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.721228368813172e-05
    2. ' ,' → logprob: -9.375086784362793
    3. ':' → logprob: -13.500086784362793
    4. ',
' → logprob: -15.125086784362793
    5. '<|end|>' → logprob: -15.125086784362793
    6. ')' → logprob: -15.750086784362793
    7. '‌,' → logprob: -16.00008773803711
    8. ',u' → logprob: -16.37508773803711
    9. '<|end|>' → logprob: -17.50008773803711
    10. ',

' → logprob: -17.87508773803711

Token 84: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3401843309402466
    2. ' int' → logprob: -1.3401843309402466
    3. ',' → logprob: -1.7151843309402466
    4. ' ,' → logprob: -1.8401843309402466
    5. ' ' → logprob: -2.215184211730957
    6. ',int' → logprob: -4.465184211730957
    7. '<|end|>' → logprob: -4.840184211730957
    8. ')' → logprob: -5.590184211730957
    9. ' )' → logprob: -6.340184211730957
    10. ' u' → logprob: -6.590184211730957

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.008129963040119e-06
    2. ' ,' → logprob: -13.250003814697266
    3. ',u' → logprob: -13.750003814697266
    4. '‌,' → logprob: -14.750003814697266
    5. '<|end|>' → logprob: -15.125003814697266
    6. ',
' → logprob: -15.875003814697266
    7. ')' → logprob: -15.875003814697266
    8. ',v' → logprob: -16.750003814697266
    9. ',int' → logprob: -17.375003814697266
    10. ',user' → logprob: -17.500003814697266

Token 86: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.01417714636772871
    2. 'v' → logprob: -4.264177322387695
    3. ' ' → logprob: -12.639177322387695
    4. ' ' → logprob: -12.889177322387695
    5. '	v' → logprob: -13.014177322387695
    6. ')' → logprob: -13.264177322387695
    7. '<|end|>' → logprob: -13.264177322387695
    8. ')v' → logprob: -14.014177322387695
    9. ' )' → logprob: -14.389177322387695
    10. ' 
' → logprob: -15.514177322387695

Token 87: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28258782625198364
    2. ')' → logprob: -1.5325877666473389
    3. ':' → logprob: -3.532587766647339
    4. '):
' → logprob: -7.782588005065918
    5. ',' → logprob: -8.282588005065918
    6. ' ):' → logprob: -8.282588005065918
    7. ' )' → logprob: -10.657588005065918
    8. '):

' → logprob: -11.907588005065918
    9. ' ' → logprob: -12.907588005065918
    10. '):
' → logprob: -13.782588005065918

Token 88: ' int' (ID: 677)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5336905717849731
    2. ')' → logprob: -1.0336905717849731
    3. ' ' → logprob: -3.2836904525756836
    4. ' int' → logprob: -4.533690452575684
    5. 'int' → logprob: -5.533690452575684
    6. '1' → logprob: -5.533690452575684
    7. ' ):' → logprob: -6.783690452575684
    8. '):' → logprob: -8.533690452575684
    9. ' ):
' → logprob: -9.783690452575684
    10. ' ,' → logprob: -9.908690452575684

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.055122267454862595
    2. ')' → logprob: -2.9301223754882812
    3. '):
' → logprob: -8.555122375488281
    4. ' ):' → logprob: -10.180122375488281
    5. ':' → logprob: -12.555122375488281
    6. ' )' → logprob: -13.305122375488281
    7. ',' → logprob: -13.805122375488281
    8. '   ' → logprob: -13.930122375488281
    9. ')->' → logprob: -14.430122375488281
    10. ' ' → logprob: -14.805122375488281

Token 90: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03794439136981964
    2. ' ' → logprob: -4.662944316864014
    3. ' 
' → logprob: -5.037944316864014
    4. '               ' → logprob: -5.412944316864014
    5. '<|end|>' → logprob: -5.412944316864014
    6. ')' → logprob: -6.037944316864014
    7. ' self' → logprob: -6.162944316864014
    8. '            ' → logprob: -6.412944316864014
    9. 'self' → logprob: -6.537944316864014
    10. '       ' → logprob: -6.537944316864014

Token 91: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.062427863478660583
    2. ' self' → logprob: -2.8124277591705322
    3. '           ' → logprob: -7.687427997589111
    4. '       ' → logprob: -14.437427520751953
    5. '               ' → logprob: -14.562427520751953
    6. '	self' → logprob: -15.187427520751953
    7. '   ' → logprob: -15.687427520751953
    8. '```' → logprob: -16.812427520751953
    9. '
' → logprob: -17.562427520751953
    10. ' ' → logprob: -17.687427520751953

Token 92: '.ad' (ID: 19775)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6329258680343628
    2. '.ad' → logprob: -0.7579258680343628
    3. '.user' → logprob: -9.007925987243652
    4. ' .' → logprob: -9.007925987243652
    5. '.add' → logprob: -11.757925987243652
    6. '.Ad' → logprob: -12.257925987243652
    7. '.append' → logprob: -12.257925987243652
    8. '.edges' → logprob: -12.257925987243652
    9. '.u' → logprob: -12.632925987243652
    10. '.
' → logprob: -12.632925987243652

Token 93: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.013325169682502747
    2. '.append' → logprob: -4.513325214385986
    3. '.' → logprob: -6.263325214385986
    4. 'd' → logprob: -9.388324737548828
    5. '[' → logprob: -9.513324737548828
    6. ''.' → logprob: -9.638324737548828
    7. '['' → logprob: -10.763324737548828
    8. '```' → logprob: -11.013324737548828
    9. '`.' → logprob: -11.263324737548828
    10. '.j' → logprob: -11.388324737548828

Token 94: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -9.13388703338569e-06
    2. '[' → logprob: -11.625009536743164
    3. '[v' → logprob: -15.875009536743164
    4. '[self' → logprob: -18.125009536743164
    5. '[
' → logprob: -18.500009536743164
    6. 'u' → logprob: -18.750009536743164
    7. '[user' → logprob: -19.250009536743164
    8. ' [' → logprob: -20.125009536743164
    9. '[s' → logprob: -21.125009536743164
    10. '[int' → logprob: -21.250009536743164

Token 95: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.011548066511750221
    2. ').' → logprob: -5.011548042297363
    3. '.append' → logprob: -5.886548042297363
    4. '.' → logprob: -6.261548042297363
    5. ']' → logprob: -9.261548042297363
    6. ' ].' → logprob: -10.386548042297363
    7. ')' → logprob: -12.011548042297363
    8. '}.' → logprob: -13.636548042297363
    9. '.Append' → logprob: -14.386548042297363
    10. ' ).' → logprob: -14.511548042297363

Token 96: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.7432603272027336e-06
    2. ' append' → logprob: -13.625001907348633
    3. '.append' → logprob: -14.875001907348633
    4. 'appen' → logprob: -16.375001907348633
    5. 'Append' → logprob: -19.250001907348633
    6. '_append' → logprob: -19.250001907348633
    7. '	append' → logprob: -19.625001907348633
    8. 'app' → logprob: -19.750001907348633
    9. 'push' → logprob: -20.250001907348633
    10. '```' → logprob: -20.375001907348633

Token 97: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.008718105033040047
    2. 'v' → logprob: -4.758718013763428
    3. '(' → logprob: -9.258718490600586
    4. ' v' → logprob: -12.508718490600586
    5. ' (' → logprob: -13.008718490600586
    6. '(
' → logprob: -13.258718490600586
    7. '((' → logprob: -15.258718490600586
    8. ')v' → logprob: -15.258718490600586
    9. '	v' → logprob: -16.383718490600586
    10. ',v' → logprob: -17.508718490600586

Token 98: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.3464544432936236e-05
    2. ' )' → logprob: -10.625043869018555
    3. ')
' → logprob: -10.875043869018555
    4. '<|end|>' → logprob: -16.125043869018555
    5. ')return' → logprob: -16.625043869018555
    6. ')

' → logprob: -17.250043869018555
    7. ' )
' → logprob: -18.500043869018555
    8. ')`' → logprob: -18.500043869018555
    9. '),' → logprob: -18.750043869018555
    10. '))' → logprob: -18.750043869018555

Token 99: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.23964333534240723
    2. '<|end|>' → logprob: -1.7396433353424072
    3. ' self' → logprob: -3.9896433353424072
    4. ' ' → logprob: -4.739643096923828
    5. ' 
' → logprob: -5.614643096923828
    6. '
' → logprob: -6.364643096923828
    7. '           ' → logprob: -6.614643096923828
    8. '<|end|>' → logprob: -6.864643096923828
    9. '       ' → logprob: -7.864643096923828
    10. 'newline' → logprob: -8.239643096923828

Token 101: '.ad' (ID: 19775)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3151855766773224
    2. '.ad' → logprob: -1.315185546875
    3. ' .' → logprob: -7.065185546875
    4. '.
' → logprob: -7.190185546875
    5. 'adj' → logprob: -10.190185546875
    6. '<|end|>' → logprob: -10.190185546875
    7. '[' → logprob: -10.315185546875
    8. ' ' → logprob: -10.815185546875
    9. '.

' → logprob: -10.815185546875
    10. '<|end|>' → logprob: -10.940185546875

Token 102: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.2617008400848135e-05
    2. '.' → logprob: -11.375032424926758
    3. '[' → logprob: -11.500032424926758
    4. '```' → logprob: -12.000032424926758
    5. '[j' → logprob: -13.250032424926758
    6. 'jac' → logprob: -14.500032424926758
    7. '.j' → logprob: -14.875032424926758
    8. '   ' → logprob: -14.875032424926758
    9. 'ј' → logprob: -15.125032424926758
    10. 'f' → logprob: -15.375032424926758

Token 103: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0006538204033859074
    2. '[' → logprob: -7.6256537437438965
    3. '[u' → logprob: -8.750654220581055
    4. 'v' → logprob: -12.625654220581055
    5. '```' → logprob: -14.125654220581055
    6. '[self' → logprob: -14.250654220581055
    7. ' [' → logprob: -14.875654220581055
    8. '[
' → logprob: -15.125654220581055
    9. '	v' → logprob: -15.125654220581055
    10. '   ' → logprob: -15.250654220581055

Token 104: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.030653318390250206
    2. ').' → logprob: -3.530653238296509
    3. '.' → logprob: -7.530653476715088
    4. ']' → logprob: -8.65565299987793
    5. ')' → logprob: -9.15565299987793
    6. '}.' → logprob: -10.15565299987793
    7. ' ].' → logprob: -10.78065299987793
    8. '.append' → logprob: -11.15565299987793
    9. '<|end|>' → logprob: -12.15565299987793
    10. ' .' → logprob: -13.15565299987793

Token 105: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.339278580620885e-06
    2. ' append' → logprob: -13.500001907348633
    3. '.append' → logprob: -14.125001907348633
    4. 'appen' → logprob: -15.625001907348633
    5. '	append' → logprob: -16.750001907348633
    6. 'add' → logprob: -18.750001907348633
    7. '_append' → logprob: -19.500001907348633
    8. ' ' → logprob: -20.000001907348633
    9. 'app' → logprob: -20.125001907348633
    10. '   ' → logprob: -20.750001907348633

Token 106: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0009126556105911732
    2. '(' → logprob: -7.000912666320801
    3. 'u' → logprob: -14.2509126663208
    4. '(
' → logprob: -14.6259126663208
    5. ' (' → logprob: -18.500911712646484
    6. '((' → logprob: -18.750911712646484
    7. '(

' → logprob: -18.750911712646484
    8. ')' → logprob: -19.250911712646484
    9. '	u' → logprob: -19.750911712646484
    10. '(U' → logprob: -20.000911712646484

Token 107: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.143808109802194e-05
    2. ')
' → logprob: -10.125041007995605
    3. ' )' → logprob: -13.875041007995605
    4. '<|end|>' → logprob: -15.750041007995605
    5. ')

' → logprob: -16.625041961669922
    6. '       ' → logprob: -17.875041961669922
    7. ')return' → logprob: -18.000041961669922
    8. ')
' → logprob: -18.250041961669922
    9. ')`' → logprob: -18.250041961669922
    10. '))' → logprob: -18.375041961669922

Token 108: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.283451646566391
    2. '<|end|>' → logprob: -1.4084516763687134
    3. '\n' → logprob: -7.658451557159424
    4. '   ' → logprob: -7.783451557159424
    5. '<|end|>' → logprob: -7.783451557159424
    6. '```' → logprob: -7.908451557159424
    7. '       ' → logprob: -8.033452033996582
    8. '    
' → logprob: -9.408452033996582
    9. 'newline' → logprob: -9.783452033996582
    10. '

' → logprob: -9.783452033996582

Token 109: ' class' (ID: 744)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029206953942775726
    2. '   ' → logprob: -3.6542069911956787
    3. '    
' → logprob: -6.7792067527771
    4. ' 
' → logprob: -7.2792067527771
    5. '

' → logprob: -8.154207229614258
    6. '<|end|>' → logprob: -8.154207229614258
    7. 'def' → logprob: -8.779207229614258
    8. '       ' → logprob: -9.529207229614258
    9. '```' → logprob: -9.529207229614258
    10. ' ' → logprob: -10.529207229614258

Token 110: ' Bip' (ID: 172840)
  Prédit: ' DFS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' DFS' → logprob: -0.9900587201118469
    2. ' Node' → logprob: -1.7400586605072021
    3. ' Vertex' → logprob: -1.8650586605072021
    4. ' BFS' → logprob: -2.990058660507202
    5. ' D' → logprob: -3.490058660507202
    6. ' Tar' → logprob: -3.865058660507202
    7. ' Depth' → logprob: -4.240058898925781
    8. ' Cycle' → logprob: -4.615058898925781
    9. ' DF' → logprob: -4.740058898925781
    10. ' Bip' → logprob: -4.865058898925781

Token 111: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.00017553119687363505
    2. 'ar' → logprob: -10.250175476074219
    3. 'artisan' → logprob: -10.375175476074219
    4. 'arti' → logprob: -10.500175476074219
    5. '   ' → logprob: -10.750175476074219
    6. 'arat' → logprob: -11.125175476074219
    7. '       ' → logprob: -11.875175476074219
    8. '```' → logprob: -12.125175476074219
    9. '  ' → logprob: -12.875175476074219
    10. '
' → logprob: -13.000175476074219

Token 112: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.0005687602679245174
    2. '```' → logprob: -8.000568389892578
    3. 'ition' → logprob: -10.125568389892578
    4. 'ate' → logprob: -10.250568389892578
    5. ' ite' → logprob: -10.375568389892578
    6. 'e' → logprob: -10.375568389892578
    7. 'te' → logprob: -10.750568389892578
    8. '

' → logprob: -12.000568389892578
    9. '   ' → logprob: -12.250568389892578
    10. '#' → logprob: -12.250568389892578

Token 113: 'Checker' (ID: 39016)
  Prédit: 'Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -0.5060341358184814
    2. 'Matcher' → logprob: -1.6310341358184814
    3. 'Checker' → logprob: -2.0060341358184814
    4. ':' → logprob: -2.7560341358184814
    5. 'Checking' → logprob: -7.506033897399902
    6. 'Detector' → logprob: -7.881033897399902
    7. 'Matching' → logprob: -8.256033897399902
    8. 'Verifier' → logprob: -8.256033897399902
    9. 'Validator' → logprob: -8.381033897399902
    10. 'Helper' → logprob: -8.381033897399902

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005004895501770079
    2. ':
' → logprob: -7.625500679016113
    3. '(' → logprob: -11.625500679016113
    4. '):' → logprob: -13.625500679016113
    5. ':

' → logprob: -14.250500679016113
    6. ' :' → logprob: -14.500500679016113
    7. '():' → logprob: -15.375500679016113
    8. ':**' → logprob: -16.000499725341797
    9. '(object' → logprob: -16.250499725341797
    10. ':def' → logprob: -16.750499725341797

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5893833637237549
    2. '
' → logprob: -1.2143833637237549
    3. '<|end|>' → logprob: -2.214383363723755
    4. '   ' → logprob: -3.839383363723755
    5. '<|end|>' → logprob: -5.839383125305176
    6. '(' → logprob: -6.214383125305176
    7. ' ' → logprob: -6.339383125305176
    8. ' def' → logprob: -6.589383125305176
    9. ' 
' → logprob: -6.589383125305176
    10. '  
' → logprob: -6.714383125305176

Token 116: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.030857522040605545
    2. 'def' (adapté à ' def') → logprob: -3.530857563018799
    3. '       ' → logprob: -6.905857563018799
    4. '   ' → logprob: -9.28085708618164
    5. ' ' → logprob: -12.40585708618164
    6. '    ' → logprob: -12.90585708618164
    7. '	def' → logprob: -13.03085708618164
    8. '           ' → logprob: -14.28085708618164
    9. '        ' → logprob: -14.78085708618164
    10. '  ' → logprob: -15.15585708618164

Token 117: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0723411813378334
    2. ' init' → logprob: -2.822341203689575
    3. 'init' → logprob: -4.822340965270996
    4. '_init' → logprob: -6.947340965270996
    5. ' def' → logprob: -7.697340965270996
    6. ' ' → logprob: -7.947340965270996
    7. '__' → logprob: -8.197340965270996
    8. ' _' → logprob: -8.697340965270996
    9. ' ' → logprob: -10.697340965270996
    10. ' check' → logprob: -11.447340965270996

Token 118: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00992253515869379
    2. 'nit' → logprob: -5.384922504425049
    3. 'it' → logprob: -5.634922504425049
    4. 'def' → logprob: -7.134922504425049
    5. 'int' → logprob: -7.759922504425049
    6. 'new' → logprob: -8.884922981262207
    7. '```' → logprob: -9.134922981262207
    8. '
' → logprob: -9.884922981262207
    9. 'in' → logprob: -10.134922981262207
    10. '   ' → logprob: -10.384922981262207

Token 119: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.007344888988882303
    2. '(self' → logprob: -5.882344722747803
    3. '__' → logprob: -6.007344722747803
    4. '__(
' → logprob: -7.007344722747803
    5. '(' → logprob: -7.132344722747803
    6. '<|end|>' → logprob: -8.507345199584961
    7. '_(' → logprob: -9.882345199584961
    8. '__((' → logprob: -10.257345199584961
    9. ' (' → logprob: -10.507345199584961
    10. '_' → logprob: -11.757345199584961

Token 120: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0029479898512363434
    2. ' self' → logprob: -5.877947807312012
    3. '           ' → logprob: -9.377947807312012
    4. '       ' → logprob: -10.252947807312012
    5. ')' → logprob: -11.252947807312012
    6. ',' → logprob: -12.377947807312012
    7. 's' → logprob: -13.627947807312012
    8. '(self' → logprob: -14.002947807312012
    9. '   ' → logprob: -14.127947807312012
    10. ' ' → logprob: -14.252947807312012

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000990295666269958
    2. ' ,' → logprob: -7.000990390777588
    3. 'self' → logprob: -9.62598991394043
    4. ')' → logprob: -12.12598991394043
    5. '(self' → logprob: -13.00098991394043
    6. ' self' → logprob: -13.12598991394043
    7. ',self' → logprob: -13.37598991394043
    8. ' ' → logprob: -14.87598991394043
    9. '<|end|>' → logprob: -14.87598991394043
    10. ' )' → logprob: -15.25098991394043

Token 122: ' graph' (ID: 7465)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2828662693500519
    2. 'self' → logprob: -1.7828662395477295
    3. ' graph' → logprob: -2.6578662395477295
    4. 'graph' → logprob: -5.032866477966309
    5. ' n' → logprob: -6.907866477966309
    6. 'n' → logprob: -8.657866477966309
    7. ' ' → logprob: -9.532866477966309
    8. '   ' → logprob: -9.657866477966309
    9. ' g' → logprob: -10.032866477966309
    10. ')' → logprob: -10.032866477966309

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01637193188071251
    2. ':' → logprob: -4.516371726989746
    3. ' ):' → logprob: -5.516371726989746
    4. '):
' → logprob: -7.016371726989746
    5. ',' → logprob: -8.141371726989746
    6. ' :' → logprob: -9.891371726989746
    7. '   ' → logprob: -11.016371726989746
    8. ')' → logprob: -12.141371726989746
    9. ' ' → logprob: -12.141371726989746
    10. '  ' → logprob: -12.641371726989746

Token 124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08368080109357834
    2. '<|end|>' → logprob: -2.7086808681488037
    3. ' ' → logprob: -5.208680629730225
    4. '       ' → logprob: -6.083680629730225
    5. '<|end|>' → logprob: -6.833680629730225
    6. ' ' → logprob: -7.333680629730225
    7. '               ' → logprob: -7.833680629730225
    8. '        ' → logprob: -7.958680629730225
    9. '          ' → logprob: -8.083681106567383
    10. '            ' → logprob: -8.083681106567383

Token 125: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.016248082742094994
    2. 'self' (adapté à ' self') → logprob: -4.1412482261657715
    3. '           ' → logprob: -8.891247749328613
    4. '       ' → logprob: -9.766247749328613
    5. ' ' → logprob: -11.641247749328613
    6. '        ' → logprob: -12.516247749328613
    7. '	self' → logprob: -13.641247749328613
    8. '               ' → logprob: -13.766247749328613
    9. '         ' → logprob: -14.016247749328613
    10. '   ' → logprob: -14.141247749328613

Token 126: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.06531404703855515
    2. '.' → logprob: -2.8153140544891357
    3. ' .' → logprob: -5.940313816070557
    4. ' graph' → logprob: -7.940313816070557
    5. ' =' → logprob: -8.565314292907715
    6. '	graph' → logprob: -10.315314292907715
    7. 'graph' → logprob: -10.440314292907715
    8. '.g' → logprob: -10.565314292907715
    9. '.Graph' → logprob: -10.690314292907715
    10. '=' → logprob: -10.815314292907715

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890355587005615
    2. '=' → logprob: -2.5789036750793457
    3. ' ' → logprob: -11.703903198242188
    4. '   ' → logprob: -13.203903198242188
    5. '.' → logprob: -13.703903198242188
    6. '    ' → logprob: -14.453903198242188
    7. ',' → logprob: -14.953903198242188
    8. '  ' → logprob: -15.203903198242188
    9. '(graph' → logprob: -15.203903198242188
    10. ':' → logprob: -15.453903198242188

Token 128: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.04867014288902283
    2. 'graph' → logprob: -3.0486700534820557
    3. '	graph' → logprob: -9.423669815063477
    4. '(graph' → logprob: -13.548669815063477
    5. '_graph' → logprob: -15.548669815063477
    6. '.graph' → logprob: -15.798669815063477
    7. '<|end|>' → logprob: -16.548669815063477
    8. 'raph' → logprob: -17.298669815063477
    9. 'Graph' → logprob: -17.548669815063477
    10. ' graphene' → logprob: -17.548669815063477

Token 129: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07263221591711044
    2. '           ' → logprob: -2.947632312774658
    3. '<|end|>' → logprob: -4.072632312774658
    4. '       ' → logprob: -7.947632312774658
    5. '<|end|>' → logprob: -9.4476318359375
    6. ' 
' → logprob: -10.4476318359375
    7. '    
' → logprob: -11.1976318359375
    8. '        
' → logprob: -11.4476318359375
    9. ',' → logprob: -11.4476318359375
    10. '   ' → logprob: -11.6976318359375

Token 130: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08224601298570633
    2. '           ' → logprob: -2.5822460651397705
    3. '<|end|>' → logprob: -5.957245826721191
    4. '       ' → logprob: -7.332245826721191
    5. ' 
' → logprob: -10.707245826721191
    6. '   ' → logprob: -10.707245826721191
    7. '<|end|>' → logprob: -11.582245826721191
    8. '    
' → logprob: -11.582245826721191
    9. '        
' → logprob: -12.082245826721191
    10. '               ' → logprob: -12.082245826721191

Token 131: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0031620340887457132
    2. ' self' → logprob: -6.003161907196045
    3. '           ' → logprob: -7.378161907196045
    4. '       ' → logprob: -10.378162384033203
    5. 'n' → logprob: -10.878162384033203
    6. '   ' → logprob: -11.753162384033203
    7. '               ' → logprob: -14.003162384033203
    8. ' ' → logprob: -14.503162384033203
    9. ' n' → logprob: -14.878162384033203
    10. '          ' → logprob: -15.253162384033203

Token 132: '.colors' (ID: 57861)
  Prédit: '.color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.color' → logprob: -0.037334538996219635
    2. '.colors' → logprob: -3.662334442138672
    3. ' .' → logprob: -5.662334442138672
    4. '.' → logprob: -5.662334442138672
    5. ' color' → logprob: -6.412334442138672
    6. 'color' → logprob: -6.662334442138672
    7. '.n' → logprob: -8.037334442138672
    8. 'colors' → logprob: -8.037334442138672
    9. '.col' → logprob: -8.537334442138672
    10. ' colors' → logprob: -8.787334442138672

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0014058287488296628
    2. '=' → logprob: -6.626405715942383
    3. '<|end|>' → logprob: -9.751405715942383
    4. ' ' → logprob: -11.251405715942383
    5. '[' → logprob: -12.626405715942383
    6. '<|end|>' → logprob: -13.376405715942383
    7. ',' → logprob: -13.626405715942383
    8. ':' → logprob: -13.751405715942383
    9. ')' → logprob: -14.751405715942383
    10. '=[]' → logprob: -15.376405715942383

Token 134: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.009289316833019257
    2. '[' → logprob: -5.009289264678955
    3. ' [-' → logprob: -6.009289264678955
    4. '[-' → logprob: -9.259289741516113
    5. ' {}' → logprob: -11.009289741516113
    6. '{}' → logprob: -14.009289741516113
    7. ' ' → logprob: -14.259289741516113
    8. '[:]' → logprob: -14.259289741516113
    9. ' []' → logprob: -15.634289741516113
    10. '[n' → logprob: -15.884289741516113

Token 135: 'None' (ID: 8505)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016873370856046677
    2. 'None' → logprob: -4.266873359680176
    3. '0' → logprob: -6.891873359680176
    4. ' -' → logprob: -7.016873359680176
    5. ' None' → logprob: -7.141873359680176
    6. ' ' → logprob: -13.391873359680176
    7. '_None' → logprob: -15.516873359680176
    8. '   ' → logprob: -15.641873359680176
    9. '
' → logprob: -16.141874313354492
    10. ',None' → logprob: -16.516874313354492

Token 136: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.34302854537963867
    2. ' for' → logprob: -1.5930285453796387
    3. ' ]' → logprob: -2.4680285453796387
    4. ',' → logprob: -7.218028545379639
    5. ' ' → logprob: -7.343028545379639
    6. 'for' → logprob: -7.593028545379639
    7. ' if' → logprob: -8.593029022216797
    8. ']*' → logprob: -9.718029022216797
    9. '](' → logprob: -10.343029022216797
    10. '<|end|>' → logprob: -10.468029022216797

Token 137: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.028746753931045532
    2. ' (' → logprob: -4.653746604919434
    3. '(' → logprob: -4.778746604919434
    4. ' *' → logprob: -5.528746604919434
    5. 'for' → logprob: -6.153746604919434
    6. '[' → logprob: -6.778746604919434
    7. '(len' → logprob: -7.403746604919434
    8. ' ' → logprob: -7.528746604919434
    9. ']' → logprob: -8.028746604919434
    10. '(n' → logprob: -8.153746604919434

Token 138: ' (' (ID: 350)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.5952253937721252
    2. '(len' → logprob: -0.8452253937721252
    3. ' (' → logprob: -4.5952253341674805
    4. '(self' → logprob: -4.7202253341674805
    5. '(n' → logprob: -9.84522533416748
    6. '((' → logprob: -11.22022533416748
    7. 'len' → logprob: -11.72022533416748
    8. '(g' → logprob: -12.59522533416748
    9. '(length' → logprob: -13.59522533416748
    10. '(' → logprob: -13.59522533416748

Token 139: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4752735495567322
    2. 'self' → logprob: -1.225273609161377
    3. ' graph' → logprob: -3.225273609161377
    4. 'len' → logprob: -3.850273609161377
    5. ' self' → logprob: -4.225273609161377
    6. '(graph' → logprob: -5.225273609161377
    7. ' len' → logprob: -6.100273609161377
    8. '(self' → logprob: -7.725273609161377
    9. '   ' → logprob: -7.975273609161377
    10. '(len' → logprob: -8.350273132324219

Token 140: '.vertex' (ID: 95344)
  Prédit: '.vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertex' → logprob: -0.0005195511621423066
    2. '.' → logprob: -8.125519752502441
    3. ' .' → logprob: -8.750519752502441
    4. '.graph' → logprob: -10.500519752502441
    5. 'vertex' → logprob: -10.750519752502441
    6. '	vertex' → logprob: -12.875519752502441
    7. '.
' → logprob: -13.000519752502441
    8. '   ' → logprob: -13.125519752502441
    9. '.vertices' → logprob: -13.375519752502441
    10. ' vertex' → logprob: -13.625519752502441

Token 141: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.36574100604048e-06
    2. 'count' → logprob: -12.875004768371582
    3. '_' → logprob: -14.250004768371582
    4. ' _' → logprob: -15.375004768371582
    5. '_COUNT' → logprob: -15.875004768371582
    6. ' count' → logprob: -16.000003814697266
    7. ' ' → logprob: -16.375003814697266
    8. '   ' → logprob: -16.375003814697266
    9. 'Count' → logprob: -16.750003814697266
    10. ')_' → logprob: -16.875003814697266

Token 142: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2744396924972534
    2. '+' → logprob: -1.6494396924972534
    3. ')' → logprob: -3.274439811706543
    4. ' )' → logprob: -4.649439811706543
    5. ' ' → logprob: -8.149439811706543
    6. '<|end|>' → logprob: -9.274439811706543
    7. ' +
' → logprob: -11.149439811706543
    8. '+)' → logprob: -11.274439811706543
    9. '1' → logprob: -12.149439811706543
    10. ' )
' → logprob: -12.899439811706543

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021853535436093807
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -15.252185821533203
    4. '```' → logprob: -17.377185821533203
    5. ')' → logprob: -17.502185821533203
    6. '0' → logprob: -17.627185821533203
    7. '2' → logprob: -18.377185821533203
    8. '  ' → logprob: -18.627185821533203
    9. '    ' → logprob: -18.752185821533203
    10. '
' → logprob: -18.752185821533203

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015872348740231246
    2. ' ' → logprob: -8.750158309936523
    3. '0' → logprob: -16.750158309936523
    4. '   ' → logprob: -17.000158309936523
    5. '```' → logprob: -17.750158309936523
    6. ')' → logprob: -18.500158309936523
    7. '
' → logprob: -18.500158309936523
    8. '2' → logprob: -18.625158309936523
    9. '１' → logprob: -18.937658309936523
    10. '۱' → logprob: -19.000158309936523

Token 145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.184812031686306e-05
    2. ')
' → logprob: -9.875082015991211
    3. ' )' → logprob: -11.000082015991211
    4. '<|end|>' → logprob: -11.250082015991211
    5. ')

' → logprob: -15.750082015991211
    6. '```' → logprob: -16.37508201599121
    7. '}' → logprob: -16.75008201599121
    8. '<|end|>' → logprob: -16.87508201599121
    9. '
' → logprob: -17.00008201599121
    10. '       ' → logprob: -17.12508201599121

Token 146: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25381574034690857
    2. '<|end|>' → logprob: -1.503815770149231
    3. '       ' → logprob: -6.753815650939941
    4. '<|end|>' → logprob: -8.003815650939941
    5. '   ' → logprob: -8.878815650939941
    6. ' 
' → logprob: -9.878815650939941
    7. '

' → logprob: -10.253815650939941
    8. ' ' → logprob: -10.503815650939941
    9. '    
' → logprob: -10.628815650939941
    10. '  
' → logprob: -10.878815650939941

Token 147: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.7206572890281677
    2. 'def' → logprob: -0.9706572890281677
    3. '       ' → logprob: -2.2206573486328125
    4. '
' → logprob: -4.2206573486328125
    5. ' self' → logprob: -5.0956573486328125
    6. '   ' → logprob: -5.7206573486328125
    7. ' def' → logprob: -7.3456573486328125
    8. '           ' → logprob: -7.3456573486328125
    9. '<|end|>' → logprob: -8.095657348632812
    10. 'for' → logprob: -9.220657348632812

Token 148: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.40184104442596436
    2. '.queue' → logprob: -1.7768410444259644
    3. '.stack' → logprob: -2.526841163635254
    4. '.' → logprob: -3.651841163635254
    5. '.b' → logprob: -3.901841163635254
    6. '.result' → logprob: -4.401841163635254
    7. '.color' → logprob: -5.401841163635254
    8. '.conf' → logprob: -5.901841163635254
    9. '.valid' → logprob: -6.026841163635254
    10. 'def' → logprob: -6.026841163635254

Token 149: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.991464786347933e-05
    2. 'b' → logprob: -10.250060081481934
    3. '_' → logprob: -11.000060081481934
    4. ' bip' → logprob: -12.625060081481934
    5. '_possible' → logprob: -13.625060081481934
    6. '_valid' → logprob: -13.875060081481934
    7. 'B' → logprob: -14.375060081481934
    8. '	b' → logprob: -14.875060081481934
    9. '   ' → logprob: -15.125060081481934
    10. '_
' → logprob: -16.250059127807617

Token 150: 'ip' (ID: 488)
  Prédit: 'ip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.00024751186720095575
    2. 'i' → logprob: -8.375247955322266
    3. 'icol' → logprob: -12.750247955322266
    4. 'icolor' → logprob: -13.125247955322266
    5. '```' → logprob: -13.375247955322266
    6. 'is' → logprob: -13.625247955322266
    7. 'ipr' → logprob: -14.000247955322266
    8. 'ipu' → logprob: -14.000247955322266
    9. 'ipal' → logprob: -14.125247955322266
    10. 'ipt' → logprob: -14.625247955322266

Token 151: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.00018125296628568321
    2. 'ar' → logprob: -9.000181198120117
    3. 'arte' → logprob: -11.625181198120117
    4. 'arti' → logprob: -11.875181198120117
    5. '_art' → logprob: -12.000181198120117
    6. 'a' → logprob: -12.125181198120117
    7. '```' → logprob: -12.250181198120117
    8. 'арт' → logprob: -12.375181198120117
    9. '_' → logprob: -12.625181198120117
    10. 'artisan' → logprob: -13.000181198120117

Token 152: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -5.908022285439074e-05
    2. 'i' → logprob: -10.875059127807617
    3. 'ile' → logprob: -11.750059127807617
    4. 'it' → logprob: -12.125059127807617
    5. ' ite' → logprob: -12.250059127807617
    6. '
' → logprob: -12.375059127807617
    7. '

' → logprob: -12.625059127807617
    8. '```' → logprob: -13.000059127807617
    9. '   ' → logprob: -13.750059127807617
    10. 'itle' → logprob: -13.750059127807617

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01823902688920498
    2. '=' → logprob: -4.0182390213012695
    3. ' ' → logprob: -9.39323902130127
    4. '=True' → logprob: -12.51823902130127
    5. ' =
' → logprob: -14.64323902130127
    6. '  ' → logprob: -14.89323902130127
    7. '<|end|>' → logprob: -15.01823902130127
    8. '   ' → logprob: -15.39323902130127
    9. ',' → logprob: -15.89323902130127
    10. '    ' → logprob: -16.143239974975586

Token 154: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6931484341621399
    2. ' True' → logprob: -0.6931484341621399
    3. '(True' → logprob: -14.318148612976074
    4. '=True' → logprob: -14.693148612976074
    5. '   ' → logprob: -15.943148612976074
    6. 'Tr' → logprob: -17.193147659301758
    7. ' Tru' → logprob: -17.693147659301758
    8. 'true' → logprob: -18.068147659301758
    9. ' ' → logprob: -18.193147659301758
    10. '_true' → logprob: -18.318147659301758

Token 155: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3391352891921997
    2. '   ' → logprob: -1.8391352891921997
    3. '       ' → logprob: -2.21413516998291
    4. ' def' → logprob: -3.96413516998291
    5. '
' → logprob: -8.58913516998291
    6. '	def' → logprob: -8.71413516998291
    7. ' ' → logprob: -10.33913516998291
    8. '    
' → logprob: -11.08913516998291
    9. '        
' → logprob: -11.46413516998291
    10. '  ' → logprob: -11.96413516998291

Token 158: ' check' (ID: 2371)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.7653845548629761
    2. 'dfs' → logprob: -1.140384554862976
    3. ' check' → logprob: -1.640384554862976
    4. 'check' → logprob: -4.140384674072266
    5. ' bfs' → logprob: -6.390384674072266
    6. 'color' → logprob: -6.640384674072266
    7. ' color' → logprob: -7.140384674072266
    8. ' ' → logprob: -7.390384674072266
    9. 'def' → logprob: -8.015384674072266
    10. ' def' → logprob: -8.390384674072266

Token 159: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42934662103652954
    2. '(self' → logprob: -1.3043465614318848
    3. '_color' → logprob: -2.8043465614318848
    4. '_' → logprob: -4.304346561431885
    5. '_colors' → logprob: -6.929346561431885
    6. '_b' → logprob: -7.179346561431885
    7. '_self' → logprob: -7.679346561431885
    8. '_graph' → logprob: -7.804346561431885
    9. '_(' → logprob: -7.929346561431885
    10. ' (' → logprob: -9.179347038269043

Token 160: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.162736713886261
    2. ' ,' → logprob: -1.9127366542816162
    3. 'self' → logprob: -7.412736892700195
    4. '):' → logprob: -7.662736892700195
    5. ')' → logprob: -7.787736892700195
    6. '_color' → logprob: -8.287736892700195
    7. ' )' → logprob: -8.537736892700195
    8. '_node' → logprob: -9.037736892700195
    9. ' ):' → logprob: -9.162736892700195
    10. '_vertex' → logprob: -9.537736892700195

Token 161: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3240015208721161
    2. '       ' → logprob: -1.3240015506744385
    3. ' for' → logprob: -5.199001312255859
    4. '
' → logprob: -6.199001312255859
    5. '        ' → logprob: -7.199001312255859
    6. '   ' → logprob: -7.824001312255859
    7. 'for' → logprob: -7.949001312255859
    8. '               ' → logprob: -8.32400131225586
    9. ',' → logprob: -8.94900131225586
    10. '        
' → logprob: -8.94900131225586

Token 162: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18858012557029724
    2. 'for' (adapté à ' for') → logprob: -1.8135801553726196
    3. '           ' → logprob: -5.93858003616333
    4. ' def' → logprob: -6.18858003616333
    5. '       ' → logprob: -6.31358003616333
    6. 'def' → logprob: -6.31358003616333
    7. '   ' → logprob: -8.063580513000488
    8. 'n' → logprob: -10.063580513000488
    9. 'from' → logprob: -10.313580513000488
    10. ' n' → logprob: -10.938580513000488

Token 163: ' v' (ID: 323)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.0292266383767128
    2. 'u' → logprob: -4.529226779937744
    3. ' vertex' → logprob: -4.904226779937744
    4. ' node' → logprob: -4.904226779937744
    5. ' v' → logprob: -6.279226779937744
    6. ' i' → logprob: -7.154226779937744
    7. 'vertex' → logprob: -8.529226303100586
    8. 'node' → logprob: -9.154226303100586
    9. ' ' → logprob: -9.529226303100586
    10. '   ' → logprob: -9.654226303100586

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005261033773422241
    2. 'in' → logprob: -5.505260944366455
    3. ' ' → logprob: -6.755260944366455
    4. ' i' → logprob: -12.130261421203613
    5. ' ,' → logprob: -12.880261421203613
    6. ',' → logprob: -13.005261421203613
    7. 'v' → logprob: -13.505261421203613
    8. '	in' → logprob: -13.630261421203613
    9. ' v' → logprob: -14.005261421203613
    10. '  ' → logprob: -14.380261421203613

Token 165: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326258182525635
    2. ' range' → logprob: -1.3132625818252563
    3. '(range' → logprob: -15.063262939453125
    4. '	range' → logprob: -15.438262939453125
    5. ' ' → logprob: -15.563262939453125
    6. '   ' → logprob: -15.813262939453125
    7. '  ' → logprob: -17.563262939453125
    8. '
' → logprob: -18.313262939453125
    9. '.range' → logprob: -18.813262939453125
    10. '    ' → logprob: -18.813262939453125

Token 166: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.13388703338569e-06
    2. ' (' → logprob: -12.000009536743164
    3. '(
' → logprob: -13.750009536743164
    4. '(self' → logprob: -14.000009536743164
    5. '           ' → logprob: -14.000009536743164
    6. '               ' → logprob: -16.250009536743164
    7. '1' → logprob: -16.500009536743164
    8. ',' → logprob: -17.125009536743164
    9. ' ' → logprob: -17.375009536743164
    10. '   ' → logprob: -18.625009536743164

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021524035837501287
    2. '(' → logprob: -6.252152442932129
    3. 'self' → logprob: -9.002152442932129
    4. ' ' → logprob: -10.002152442932129
    5. '   ' → logprob: -10.627152442932129
    6. '           ' → logprob: -10.877152442932129
    7. '(self' → logprob: -12.002152442932129
    8. 'len' → logprob: -13.377152442932129
    9. '
' → logprob: -13.627152442932129
    10. ' self' → logprob: -14.252152442932129

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023107275774236768
    2. ' ,' → logprob: -8.37523078918457
    3. ',
' → logprob: -15.12523078918457
    4. ',self' → logprob: -16.37523078918457
    5. ',len' → logprob: -16.75023078918457
    6. ',

' → logprob: -17.12523078918457
    7. '

' → logprob: -17.87523078918457
    8. ' ' → logprob: -18.75023078918457
    9. 'self' → logprob: -18.75023078918457
    10. ')' → logprob: -19.00023078918457

Token 169: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029912130907177925
    2. ' self' → logprob: -3.529912233352661
    3. 'len' → logprob: -8.904911994934082
    4. ' len' → logprob: -10.904911994934082
    5. '           ' → logprob: -11.904911994934082
    6. '   ' → logprob: -15.404911994934082
    7. '               ' → logprob: -15.529911994934082
    8. '       ' → logprob: -16.0299129486084
    9. '
' → logprob: -16.5299129486084
    10. '	self' → logprob: -16.7799129486084

Token 170: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.31382009387016296
    2. '.vertex' → logprob: -1.3138201236724854
    3. '.' → logprob: -8.188819885253906
    4. ' .' → logprob: -8.313819885253906
    5. '.vertices' → logprob: -11.938819885253906
    6. 'vertex' → logprob: -12.063819885253906
    7. '.vector' → logprob: -12.188819885253906
    8. 'graph' → logprob: -12.313819885253906
    9. '   ' → logprob: -13.188819885253906
    10. '.graphics' → logprob: -13.313819885253906

Token 171: '.vertex' (ID: 95344)
  Prédit: '.vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertex' → logprob: -5.7530574849806726e-05
    2. '.' → logprob: -10.750057220458984
    3. ' .' → logprob: -11.000057220458984
    4. 'vertex' → logprob: -11.250057220458984
    5. '	vertex' → logprob: -12.875057220458984
    6. '   ' → logprob: -13.875057220458984
    7. '.vertices' → logprob: -14.250057220458984
    8. '(vertex' → logprob: -14.750057220458984
    9. ' vertex' → logprob: -15.500057220458984
    10. '_vertex' → logprob: -15.625057220458984

Token 172: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.008888727985322475
    2. '.vertex' → logprob: -4.7588887214660645
    3. 'vertex' → logprob: -9.008889198303223
    4. '.count' → logprob: -10.008889198303223
    5. '._' → logprob: -10.258889198303223
    6. '   ' → logprob: -11.508889198303223
    7. '.' → logprob: -11.633889198303223
    8. '_.' → logprob: -11.758889198303223
    9. 'count' → logprob: -11.883889198303223
    10. ' vertex' → logprob: -12.008889198303223

Token 173: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04301197826862335
    2. '+' → logprob: -3.1680119037628174
    3. ' ' → logprob: -11.668011665344238
    4. ' +
' → logprob: -13.418011665344238
    5. '
' → logprob: -14.043011665344238
    6. '):
' → logprob: -14.293011665344238
    7. '   ' → logprob: -15.168011665344238
    8. ')' → logprob: -15.168011665344238
    9. '+
' → logprob: -15.668011665344238
    10. '()+' → logprob: -15.793011665344238

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048054322600365
    2. ' ' → logprob: -4.511047840118408
    3. ')' → logprob: -16.26104736328125
    4. '   ' → logprob: -16.51104736328125
    5. '
' → logprob: -17.01104736328125
    6. '```' → logprob: -18.51104736328125
    7. '(' → logprob: -19.26104736328125
    8. ',' → logprob: -19.38604736328125
    9. '

' → logprob: -19.38604736328125
    10. '    ' → logprob: -19.51104736328125

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.250031471252441
    4. '
' → logprob: -16.375032424926758
    5. '```' → logprob: -17.250032424926758
    6. ')' → logprob: -17.500032424926758
    7. '           ' → logprob: -18.125032424926758
    8. '       ' → logprob: -18.750032424926758
    9. '``' → logprob: -19.500032424926758
    10. '  ' → logprob: -19.875032424926758

Token 176: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07146412134170532
    2. '):
' → logprob: -2.8214640617370605
    3. ':' → logprob: -4.6964640617370605
    4. ')' → logprob: -8.446464538574219
    5. ' ):' → logprob: -9.446464538574219
    6. ':
' → logprob: -11.071464538574219
    7. ' ):
' → logprob: -11.571464538574219
    8. '):
' → logprob: -13.071464538574219
    9. ' :' → logprob: -13.571464538574219
    10. '):

' → logprob: -14.446464538574219

Token 177: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.545139491558075
    2. ':' → logprob: -0.920139491558075
    3. '           ' → logprob: -4.295139312744141
    4. ':
' → logprob: -5.045139312744141
    5. ' if' → logprob: -6.920139312744141
    6. ',' → logprob: -8.79513931274414
    7. ' :' → logprob: -8.92013931274414
    8. '       ' → logprob: -9.17013931274414
    9. '   ' → logprob: -9.67013931274414
    10. 'if' → logprob: -9.92013931274414

Token 178: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.021529071033000946
    2. 'if' (adapté à ' if') → logprob: -4.021529197692871
    3. '               ' → logprob: -5.896529197692871
    4. '                   ' → logprob: -7.646529197692871
    5. '                ' → logprob: -10.021529197692871
    6. '           ' → logprob: -10.146529197692871
    7. '   ' → logprob: -10.896529197692871
    8. '
' → logprob: -11.521529197692871
    9. ' ' → logprob: -11.521529197692871
    10. '            ' → logprob: -12.146529197692871

Token 179: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.01603870838880539
    2. 'self' → logprob: -4.14103889465332
    3. '	self' → logprob: -13.51603889465332
    4. '(self' → logprob: -13.76603889465332
    5. ' ' → logprob: -14.39103889465332
    6. '   ' → logprob: -14.76603889465332
    7. ' not' → logprob: -15.14103889465332
    8. ' ' → logprob: -15.26603889465332
    9. '[self' → logprob: -16.14103889465332
    10. '_self' → logprob: -16.14103889465332

Token 180: '.colors' (ID: 57861)
  Prédit: '.colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.colors' → logprob: -0.0010579373920336366
    2. '.' → logprob: -7.376058101654053
    3. 'colors' → logprob: -8.126057624816895
    4. ' .' → logprob: -9.126057624816895
    5. ' colors' → logprob: -10.876057624816895
    6. '.color' → logprob: -12.626057624816895
    7. '.
' → logprob: -13.501057624816895
    8. '_colors' → logprob: -13.501057624816895
    9. '.s' → logprob: -15.751057624816895
    10. ' `.' → logprob: -15.876057624816895

Token 181: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.700132997939363e-05
    2. '[' → logprob: -11.000017166137695
    3. '[
' → logprob: -15.625017166137695
    4. ' [' → logprob: -15.625017166137695
    5. ' v' → logprob: -17.500017166137695
    6. ' ' → logprob: -18.125017166137695
    7. 'v' → logprob: -18.500017166137695
    8. '   ' → logprob: -18.625017166137695
    9. '
' → logprob: -19.250017166137695
    10. '	v' → logprob: -19.500017166137695

Token 182: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.027748258784413338
    2. 'is' → logprob: -3.7777483463287354
    3. ')' → logprob: -5.652748107910156
    4. ']' → logprob: -7.027748107910156
    5. ' ' → logprob: -9.902748107910156
    6. ' )' → logprob: -10.402748107910156
    7. ')is' → logprob: -11.652748107910156
    8. ' ]' → logprob: -12.527748107910156
    9. '	is' → logprob: -13.652748107910156
    10. '）' → logprob: -14.652748107910156

Token 183: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014205467887222767
    2. 'is' → logprob: -4.264205455780029
    3. ' ' → logprob: -10.139205932617188
    4. ')' → logprob: -13.639205932617188
    5. '	is' → logprob: -14.639205932617188
    6. '==' → logprob: -15.889205932617188
    7. ' i' → logprob: -16.014205932617188
    8. ')is' → logprob: -16.139205932617188
    9. ' )' → logprob: -16.389205932617188
    10. '<|end|>' → logprob: -16.514205932617188

Token 184: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0029646267648786306
    2. 'None' → logprob: -5.877964496612549
    3. ' ' → logprob: -8.752964973449707
    4. ' N' → logprob: -14.002964973449707
    5. ' not' → logprob: -14.252964973449707
    6. '_None' → logprob: -15.502964973449707
    7. ' ' → logprob: -16.62796401977539
    8. '(None' → logprob: -16.75296401977539
    9. '=None' → logprob: -17.12796401977539
    10. ' none' → logprob: -17.25296401977539

Token 185: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023389432579278946
    2. ':
' → logprob: -3.7733893394470215
    3. '):
' → logprob: -9.52338981628418
    4. '):' → logprob: -10.52338981628418
    5. '                   ' → logprob: -11.14838981628418
    6. '               ' → logprob: -11.77338981628418
    7. ' and' → logprob: -12.02338981628418
    8. ' :' → logprob: -12.27338981628418
    9. ':

' → logprob: -12.77338981628418
    10. '           ' → logprob: -13.02338981628418

Token 186: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9408278465270996
    2. ':
' → logprob: -0.9408278465270996
    3. ':' → logprob: -1.5658278465270996
    4. '               ' → logprob: -4.9408278465271
    5. '           ' → logprob: -7.1908278465271
    6. '):
' → logprob: -7.5658278465271
    7. ' and' → logprob: -7.6908278465271
    8. ' :
' → logprob: -7.6908278465271
    9. '                       ' → logprob: -7.9408278465271
    10. ',' → logprob: -8.690828323364258

Token 187: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4146001636981964
    2. '                   ' → logprob: -1.164600133895874
    3. '                       ' → logprob: -4.039600372314453
    4. 'self' (adapté à ' self') → logprob: -4.789600372314453
    5. '               ' → logprob: -7.164600372314453
    6. '   ' → logprob: -8.164600372314453
    7. '           ' → logprob: -9.164600372314453
    8. '                    ' → logprob: -9.914600372314453
    9. ' if' → logprob: -10.039600372314453
    10. '                     ' → logprob: -10.414600372314453

Token 188: '._' (ID: 2697)
  Prédit: '.colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.colors' → logprob: -0.3036642074584961
    2. '._' → logprob: -1.803664207458496
    3. '.' → logprob: -2.428664207458496
    4. ' .' → logprob: -5.803664207458496
    5. 'colors' → logprob: -6.178664207458496
    6. '.check' → logprob: -6.928664207458496
    7. ' colors' → logprob: -7.303664207458496
    8. '_colors' → logprob: -7.428664207458496
    9. '.def' → logprob: -8.053664207458496
    10. '   ' → logprob: -8.553664207458496

Token 189: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.002453065011650324
    2. 'color' → logprob: -6.252452850341797
    3. 'b' → logprob: -7.752452850341797
    4. '_color' → logprob: -10.252452850341797
    5. 'assign' → logprob: -10.627452850341797
    6. ' dfs' → logprob: -11.002452850341797
    7. 'paint' → logprob: -12.002452850341797
    8. '_b' → logprob: -13.127452850341797
    9. 'df' → logprob: -13.377452850341797
    10. 'check' → logprob: -13.627452850341797

Token 190: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0032049233559519053
    2. '(' → logprob: -5.753204822540283
    3. '(
' → logprob: -10.878205299377441
    4. ' (' → logprob: -11.878205299377441
    5. '(u' → logprob: -14.878205299377441
    6. '(

' → logprob: -15.378205299377441
    7. '(vertex' → logprob: -15.878205299377441
    8. '(s' → logprob: -16.253204345703125
    9. '<|end|>' → logprob: -16.378204345703125
    10. 'v' → logprob: -16.628204345703125

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022988072305452079
    2. ' ,' → logprob: -8.500229835510254
    3. ')' → logprob: -10.625229835510254
    4. '   ' → logprob: -14.000229835510254
    5. ',v' → logprob: -15.125229835510254
    6. ',
' → logprob: -15.625229835510254
    7. '0' → logprob: -15.875229835510254
    8. ' )' → logprob: -15.875229835510254
    9. '    ' → logprob: -16.37523078918457
    10. 'v' → logprob: -16.62523078918457

Token 192: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011052416637539864
    2. ' ' → logprob: -4.51105260848999
    3. ')' → logprob: -13.011052131652832
    4. '   ' → logprob: -14.011052131652832
    5. '1' → logprob: -14.261052131652832
    6. '  ' → logprob: -15.636052131652832
    7. ',' → logprob: -16.13605308532715
    8. '    ' → logprob: -16.13605308532715
    9. '
' → logprob: -16.38605308532715
    10. 'color' → logprob: -17.01105308532715

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000182921823579818
    2. ' ' → logprob: -8.62518310546875
    3. '1' → logprob: -13.12518310546875
    4. 'False' → logprob: -14.50018310546875
    5. 'True' → logprob: -15.12518310546875
    6. '   ' → logprob: -15.37518310546875
    7. ')' → logprob: -15.37518310546875
    8. '  ' → logprob: -16.62518310546875
    9. ' True' → logprob: -17.87518310546875
    10. '    ' → logprob: -18.25018310546875

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029594001825898886
    2. ')
' → logprob: -5.877959251403809
    3. ' )' → logprob: -8.877959251403809
    4. '           ' → logprob: -12.377959251403809
    5. ')

' → logprob: -12.877959251403809
    6. ' )
' → logprob: -13.002959251403809
    7. ')
' → logprob: -13.377959251403809
    8. '               ' → logprob: -13.502959251403809
    9. '                   ' → logprob: -13.752959251403809
    10. '       ' → logprob: -14.377959251403809

Token 195: '                   ' (ID: 699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5527993440628052
    2. '<|end|>' → logprob: -1.1777993440628052
    3. '       ' → logprob: -2.3027992248535156
    4. '   ' → logprob: -5.177799224853516
    5. '\n' → logprob: -6.052799224853516
    6. '<|end|>' → logprob: -6.427799224853516
    7. '  
' → logprob: -6.802799224853516
    8. '    
' → logprob: -6.927799224853516
    9. ' ' → logprob: -6.927799224853516
    10. '           ' → logprob: -7.052799224853516

Token 196: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6270563006401062
    2. '           ' → logprob: -0.8770563006401062
    3. '
' → logprob: -3.502056360244751
    4. '               ' → logprob: -5.127056121826172
    5. '       ' → logprob: -5.252056121826172
    6. 'if' (adapté à ' if') → logprob: -6.002056121826172
    7. '   ' → logprob: -6.127056121826172
    8. ' if' → logprob: -6.502056121826172
    9. ' ' → logprob: -7.752056121826172
    10. '                       ' → logprob: -8.127056121826172

Token 197: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.31330153346061707
    2. 'not' → logprob: -1.3133015632629395
    3. '   ' → logprob: -11.313301086425781
    4. '!' → logprob: -11.688301086425781
    5. ' ' → logprob: -11.938301086425781
    6. '	not' → logprob: -12.188301086425781
    7. '
' → logprob: -12.438301086425781
    8. '    ' → logprob: -14.563301086425781
    9. '

' → logprob: -14.813301086425781
    10. 'n' → logprob: -14.813301086425781

Token 198: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4287114441394806
    2. 'self' → logprob: -1.0537114143371582
    3. ' ' → logprob: -12.553711891174316
    4. '	self' → logprob: -13.303711891174316
    5. '   ' → logprob: -13.678711891174316
    6. ' ' → logprob: -13.678711891174316
    7. '(self' → logprob: -13.928711891174316
    8. '
' → logprob: -14.178711891174316
    9. '           ' → logprob: -14.803711891174316
    10. '_self' → logprob: -15.553711891174316

Token 199: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -2.3080716346157715e-05
    2. '.' → logprob: -11.125022888183594
    3. 'is' → logprob: -12.375022888183594
    4. ' .' → logprob: -13.000022888183594
    5. ').' → logprob: -15.000022888183594
    6. '.b' → logprob: -15.375022888183594
    7. '._' → logprob: -15.375022888183594
    8. '.s' → logprob: -15.500022888183594
    9. '.has' → logprob: -16.250022888183594
    10. '.ai' → logprob: -16.500022888183594

Token 200: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0009836276294663548
    2. '_' → logprob: -7.625983715057373
    3. ' _' → logprob: -7.625983715057373
    4. '_s' → logprob: -13.875983238220215
    5. '._' → logprob: -13.875983238220215
    6. 'b' → logprob: -14.250983238220215
    7. '_a' → logprob: -14.250983238220215
    8. '<|end|>' → logprob: -14.250983238220215
    9. ' ' → logprob: -14.750983238220215
    10. ')_' → logprob: -15.000983238220215

Token 201: 'ip' (ID: 488)
  Prédit: 'ip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -1.4259644558478612e-05
    2. 'ipat' → logprob: -12.000014305114746
    3. 'i' → logprob: -13.250014305114746
    4. '
' → logprob: -13.750014305114746
    5. 'ipot' → logprob: -14.125014305114746
    6. 'ipit' → logprob: -14.375014305114746
    7. 'ipt' → logprob: -14.625014305114746
    8. 'ipal' → logprob: -14.750014305114746
    9. 'ип' → logprob: -14.875014305114746
    10. 'ipr' → logprob: -15.000014305114746

Token 202: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.007077998481690884
    2. 'ar' → logprob: -5.007078170776367
    3. 'arat' → logprob: -8.507078170776367
    4. 'arti' → logprob: -9.882078170776367
    5. 'arte' → logprob: -10.132078170776367
    6. 'ari' → logprob: -11.132078170776367
    7. 'artisan' → logprob: -11.632078170776367
    8. '```' → logprob: -11.757078170776367
    9. 'arit' → logprob: -12.007078170776367
    10. 'at' → logprob: -12.757078170776367

Token 203: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.050825659185647964
    2. 'art' → logprob: -3.050825595855713
    3. 'ar' → logprob: -6.425825595855713
    4. 'ate' → logprob: -8.425826072692871
    5. 'arte' → logprob: -8.550826072692871
    6. 'rite' → logprob: -9.050826072692871
    7. 'site' → logprob: -10.425826072692871
    8. 'e' → logprob: -11.175826072692871
    9. 'te' → logprob: -11.675826072692871
    10. 'a' → logprob: -12.175826072692871

Token 204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04338051751255989
    2. ':
' → logprob: -3.1683804988861084
    3. ':return' → logprob: -8.043380737304688
    4. '           ' → logprob: -11.168380737304688
    5. ' :' → logprob: -11.293380737304688
    6. ':

' → logprob: -12.168380737304688
    7. '               ' → logprob: -12.293380737304688
    8. '():
' → logprob: -12.418380737304688
    9. '):
' → logprob: -12.418380737304688
    10. '):' → logprob: -12.543380737304688

Token 205: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.009175453335046768
    2. '                   ' → logprob: -4.7591753005981445
    3. 'break' → logprob: -7.8841753005981445
    4. '               ' → logprob: -9.509175300598145
    5. ' break' → logprob: -10.759175300598145
    6. 'return' → logprob: -11.384175300598145
    7. '                           ' → logprob: -11.509175300598145
    8. '                        
' → logprob: -11.634175300598145
    9. ':' → logprob: -11.884175300598145
    10. '       ' → logprob: -12.009175300598145

Token 206: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.4115560054779053
    2. ' break' → logprob: -1.4115560054779053
    3. 'break' → logprob: -1.4115560054779053
    4. '                           ' → logprob: -1.9115560054779053
    5. ' return' → logprob: -2.1615560054779053
    6. '                   ' → logprob: -5.911556243896484
    7. '                       ' → logprob: -6.161556243896484
    8. '   ' → logprob: -8.161556243896484
    9. '               ' → logprob: -8.411556243896484
    10. '                               ' → logprob: -8.661556243896484

Token 207: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.014232496730983257
    2. ' False' → logprob: -4.264232635498047
    3. '
' → logprob: -10.139232635498047
    4. '               ' → logprob: -11.639232635498047
    5. 'None' → logprob: -12.014232635498047
    6. 'self' → logprob: -12.514232635498047
    7. '(False' → logprob: -12.889232635498047
    8. '                   ' → logprob: -14.014232635498047
    9. '           ' → logprob: -14.139232635498047
    10. 'True' → logprob: -14.139232635498047

Token 208: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04543028026819229
    2. '
' → logprob: -3.5454301834106445
    3. '       ' → logprob: -4.2954301834106445
    4. '               ' → logprob: -7.4204301834106445
    5. '   ' → logprob: -7.5454301834106445
    6. '                   ' → logprob: -8.795430183410645
    7. '    
' → logprob: -9.045430183410645
    8. '		' → logprob: -9.045430183410645
    9. ' return' → logprob: -9.420430183410645
    10. 'return' → logprob: -9.670430183410645

Token 209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08172455430030823
    2. '       ' → logprob: -2.7067246437072754
    3. '               ' → logprob: -5.831724643707275
    4. '
' → logprob: -5.956724643707275
    5. '   ' → logprob: -5.956724643707275
    6. '		' → logprob: -7.081724643707275
    7. '                   ' → logprob: -7.081724643707275
    8. '	       ' → logprob: -7.456724643707275
    9. '	return' → logprob: -7.831724643707275
    10. '	' → logprob: -8.831724166870117

Token 210: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40681812167167664
    2. '           ' → logprob: -1.656818151473999
    3. 'return' (adapté à ' return') → logprob: -2.281818151473999
    4. '   ' → logprob: -3.906818151473999
    5. ' return' → logprob: -3.906818151473999
    6. '	return' → logprob: -7.53181791305542
    7. '               ' → logprob: -7.65681791305542
    8. '
' → logprob: -9.656818389892578
    9. '	   ' → logprob: -10.781818389892578
    10. '	' → logprob: -11.031818389892578

Token 211: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.25192928314208984
    2. ' True' → logprob: -1.5019292831420898
    3. 'self' → logprob: -15.62692928314209
    4. '(True' → logprob: -17.501930236816406
    5. ' self' → logprob: -18.251930236816406
    6. ' ' → logprob: -19.126930236816406
    7. 'False' → logprob: -19.751930236816406
    8. '=True' → logprob: -20.876930236816406
    9. 'true' → logprob: -21.001930236816406
    10. 'Tr' → logprob: -21.126930236816406

Token 212: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37882497906684875
    2. '<|end|>' → logprob: -1.3788249492645264
    3. '
' → logprob: -3.1288249492645264
    4. '   ' → logprob: -4.5038251876831055
    5. ' ' → logprob: -5.8788251876831055
    6. '<|end|>' → logprob: -6.7538251876831055
    7. '        
' → logprob: -7.2538251876831055
    8. ' 
' → logprob: -7.3788251876831055
    9. '	' → logprob: -7.3788251876831055
    10. 'def' → logprob: -7.5038251876831055

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035725463181734085
    2. '
' → logprob: -3.6607253551483154
    3. '<|end|>' → logprob: -5.4107255935668945
    4. '   ' → logprob: -5.9107255935668945
    5. 'def' → logprob: -7.1607255935668945
    6. '        
' → logprob: -7.6607255935668945
    7. ' 
' → logprob: -8.035725593566895
    8. ' ' → logprob: -8.660725593566895
    9. '<|end|>' → logprob: -9.160725593566895
    10. '    
' → logprob: -9.160725593566895

Token 214: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.24181167781352997
    2. '       ' → logprob: -1.7418116331100464
    3. '   ' → logprob: -3.241811752319336
    4. ' def' → logprob: -7.991811752319336
    5. '	def' → logprob: -9.491811752319336
    6. '
' → logprob: -10.241811752319336
    7. '	   ' → logprob: -10.491811752319336
    8. '	' → logprob: -11.616811752319336
    9. ' ' → logprob: -11.991811752319336
    10. '    ' → logprob: -12.866811752319336

Token 215: ' _' (ID: 1175)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00020807012333534658
    2. ' _' → logprob: -8.500207901000977
    3. '_' → logprob: -12.875207901000977
    4. '_def' → logprob: -14.125207901000977
    5. '_df' → logprob: -14.250207901000977
    6. '_ds' → logprob: -16.250207901000977
    7. ' ' → logprob: -16.375207901000977
    8. 'def' → logprob: -16.375207901000977
    9. '   ' → logprob: -16.500207901000977
    10. ' dfs' → logprob: -16.625207901000977

Token 216: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -8.41866585687967e-06
    2. ' dfs' → logprob: -12.500008583068848
    3. 'df' → logprob: -13.250008583068848
    4. 'def' → logprob: -13.375008583068848
    5. 'd' → logprob: -13.875008583068848
    6. '_d' → logprob: -15.000008583068848
    7. '_' → logprob: -18.00000762939453
    8. 'ds' → logprob: -18.37500762939453
    9. 'dfa' → logprob: -18.62500762939453
    10. 'depth' → logprob: -19.25000762939453

Token 217: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000158842682139948
    2. '(' → logprob: -8.75015926361084
    3. '(s' → logprob: -15.50015926361084
    4. ' (' → logprob: -16.875158309936523
    5. 'self' → logprob: -17.625158309936523
    6. '(
' → logprob: -17.750158309936523
    7. '(sel' → logprob: -18.875158309936523
    8. '(this' → logprob: -19.125158309936523
    9. '   ' → logprob: -19.125158309936523
    10. '(v' → logprob: -19.625158309936523

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002562137378845364
    2. ' ,' → logprob: -8.500256538391113
    3. 'self' → logprob: -10.000256538391113
    4. '(self' → logprob: -12.375256538391113
    5. ',self' → logprob: -13.625256538391113
    6. ',v' → logprob: -13.875256538391113
    7. '<|end|>' → logprob: -15.000256538391113
    8. ',
' → logprob: -15.875256538391113
    9. ' self' → logprob: -15.875256538391113
    10. '       ' → logprob: -16.875255584716797

Token 219: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.011800091713666916
    2. ' v' → logprob: -4.511800289154053
    3. 'u' → logprob: -7.386800289154053
    4. 'vertex' → logprob: -9.261799812316895
    5. 'node' → logprob: -11.261799812316895
    6. ' vertex' → logprob: -11.511799812316895
    7. ' u' → logprob: -11.761799812316895
    8. ' node' → logprob: -12.386799812316895
    9. '   ' → logprob: -13.261799812316895
    10. 'self' → logprob: -14.261799812316895

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3782830137643032e-05
    2. ' ,' → logprob: -11.25001335144043
    3. ',v' → logprob: -14.50001335144043
    4. '           ' → logprob: -17.25001335144043
    5. '   ' → logprob: -17.37501335144043
    6. ',
' → logprob: -17.37501335144043
    7. '       ' → logprob: -17.62501335144043
    8. '               ' → logprob: -18.50001335144043
    9. '‌,' → logprob: -18.50001335144043
    10. ')' → logprob: -19.00001335144043

Token 221: ' c' (ID: 274)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.1772676408290863
    2. ' color' → logprob: -2.177267551422119
    3. 'c' → logprob: -3.177267551422119
    4. ' c' → logprob: -4.927267551422119
    5. 'col' → logprob: -9.177268028259277
    6. ' ' → logprob: -10.802268028259277
    7. '   ' → logprob: -11.302268028259277
    8. 'current' → logprob: -12.677268028259277
    9. '	color' → logprob: -13.302268028259277
    10. 'curr' → logprob: -13.427268028259277

Token 222: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04908279702067375
    2. '):
' → logprob: -3.0490827560424805
    3. 'olor' → logprob: -8.29908275604248
    4. ' ):' → logprob: -9.79908275604248
    5. '   ' → logprob: -9.92408275604248
    6. '):

' → logprob: -10.67408275604248
    7. ':' → logprob: -10.67408275604248
    8. 'urrent' → logprob: -10.79908275604248
    9. ')' → logprob: -10.92408275604248
    10. 'on' → logprob: -10.92408275604248

Token 223: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03154315799474716
    2. ':
' → logprob: -4.281543254852295
    3. '           ' → logprob: -4.531543254852295
    4. '<|end|>' → logprob: -5.406543254852295
    5. '):
' → logprob: -7.531543254852295
    6. '):' → logprob: -7.656543254852295
    7. '       ' → logprob: -7.906543254852295
    8. '               ' → logprob: -8.656542778015137
    9. '<|end|>' → logprob: -9.156542778015137
    10. ',' → logprob: -9.406542778015137

Token 224: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0593399740755558
    2. ' self' → logprob: -3.434340000152588
    3. '           ' → logprob: -3.684340000152588
    4. 'if' → logprob: -8.68433952331543
    5. '   ' → logprob: -10.80933952331543
    6. '       ' → logprob: -11.05933952331543
    7. ' if' → logprob: -11.43433952331543
    8. '	self' → logprob: -11.43433952331543
    9. '               ' → logprob: -11.55933952331543
    10. '```' → logprob: -12.30933952331543

Token 225: '.colors' (ID: 57861)
  Prédit: '.colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.colors' → logprob: -0.00019138160860165954
    2. '.' → logprob: -9.000191688537598
    3. ' .' → logprob: -9.625191688537598
    4. '.states' → logprob: -14.625191688537598
    5. 'colors' → logprob: -14.875191688537598
    6. '.codes' → logprob: -15.750191688537598
    7. '.faces' → logprob: -16.50019073486328
    8. '.s' → logprob: -16.50019073486328
    9. '.types' → logprob: -16.75019073486328
    10. '.users' → logprob: -16.75019073486328

Token 226: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.125001907348633
    3. 'v' → logprob: -16.375001907348633
    4. '[u' → logprob: -19.000001907348633
    5. '[c' → logprob: -19.375001907348633
    6. ' [' → logprob: -19.500001907348633
    7. '[val' → logprob: -19.500001907348633
    8. '```' → logprob: -19.750001907348633
    9. '[s' → logprob: -20.250001907348633
    10. ')[' → logprob: -20.625001907348633

Token 227: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05483206734061241
    2. ')' → logprob: -3.1798319816589355
    3. ' ]' → logprob: -4.8048319816589355
    4. ' =' → logprob: -6.6798319816589355
    5. '=' → logprob: -6.8048319816589355
    6. ' )' → logprob: -7.1798319816589355
    7. ']=' → logprob: -8.054832458496094
    8. ' ' → logprob: -9.429832458496094
    9. '[' → logprob: -10.804832458496094
    10. '])' → logprob: -11.804832458496094

Token 228: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132627606391907
    2. ' =' → logprob: -1.313262701034546
    3. ' ' → logprob: -14.688262939453125
    4. '[' → logprob: -15.813262939453125
    5. ')' → logprob: -16.438262939453125
    6. '＝' → logprob: -17.188262939453125
    7. '=c' → logprob: -17.438262939453125
    8. '=
' → logprob: -17.563262939453125
    9. ' =
' → logprob: -17.563262939453125
    10. '=v' → logprob: -17.563262939453125

Token 229: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005530327325686812
    2. ' c' → logprob: -7.500553131103516
    3. '	c' → logprob: -18.750553131103516
    4. ')c' → logprob: -19.500553131103516
    5. ' ' → logprob: -21.250553131103516
    6. '   ' → logprob: -21.375553131103516
    7. '$c' → logprob: -21.625553131103516
    8. '           ' → logprob: -22.000553131103516
    9. '```' → logprob: -22.375553131103516
    10. '
' → logprob: -22.500553131103516

Token 230: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11673815548419952
    2. '
' → logprob: -2.3667380809783936
    3. ' for' → logprob: -4.616738319396973
    4. '<|end|>' → logprob: -5.366738319396973
    5. 'for' → logprob: -7.241738319396973
    6. '       ' → logprob: -7.741738319396973
    7. ' if' → logprob: -9.116738319396973
    8. '            
' → logprob: -9.241738319396973
    9. ' 
' → logprob: -9.366738319396973
    10. '               ' → logprob: -9.616738319396973

Token 231: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1031903550028801
    2. ' for' → logprob: -3.2281904220581055
    3. '       ' → logprob: -3.6031904220581055
    4. '
' → logprob: -4.2281904220581055
    5. 'for' → logprob: -4.7281904220581055
    6. '   ' → logprob: -4.9781904220581055
    7. '	       ' → logprob: -8.228190422058105
    8. '    
' → logprob: -8.478190422058105
    9. '        
' → logprob: -8.853190422058105
    10. '	for' → logprob: -9.603190422058105

Token 232: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004338852595537901
    2. ' for' → logprob: -5.50433874130249
    3. '           ' → logprob: -8.254339218139648
    4. '	for' → logprob: -16.37933921813965
    5. '   ' → logprob: -16.62933921813965
    6. '       ' → logprob: -17.12933921813965
    7. '```' → logprob: -17.50433921813965
    8. '               ' → logprob: -17.75433921813965
    9. '            
' → logprob: -18.37933921813965
    10. ' ' → logprob: -19.25433921813965

Token 233: ' nv' (ID: 68641)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3702208697795868
    2. 'w' → logprob: -1.3702208995819092
    3. ' u' → logprob: -3.495220899581909
    4. ' w' → logprob: -4.37022066116333
    5. 'to' → logprob: -5.12022066116333
    6. 'neighbor' → logprob: -5.24522066116333
    7. ' nxt' → logprob: -8.370221138000488
    8. ' nei' → logprob: -8.495221138000488
    9. ' neighbor' → logprob: -8.620221138000488
    10. ' to' → logprob: -8.995221138000488

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020559990778565407
    2. 'in' → logprob: -3.8955600261688232
    3. ' ' → logprob: -11.395560264587402
    4. '	in' → logprob: -12.270560264587402
    5. 'n' → logprob: -13.895560264587402
    6. '   ' → logprob: -15.395560264587402
    7. '  ' → logprob: -15.520560264587402
    8. '    ' → logprob: -15.520560264587402
    9. '<|end|>' → logprob: -16.145559310913086
    10. ',' → logprob: -16.645559310913086

Token 235: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3484943211078644
    2. 'self' → logprob: -1.223494291305542
    3. '	self' → logprob: -11.098494529724121
    4. '(self' → logprob: -11.223494529724121
    5. ' ' → logprob: -11.473494529724121
    6. '[self' → logprob: -11.848494529724121
    7. '   ' → logprob: -13.223494529724121
    8. '=self' → logprob: -14.848494529724121
    9. ':self' → logprob: -15.223494529724121
    10. '  ' → logprob: -15.348494529724121

Token 236: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.0006752623594366014
    2. '.' → logprob: -7.375675201416016
    3. ' .' → logprob: -10.375675201416016
    4. 'graph' → logprob: -12.000675201416016
    5. '	graph' → logprob: -12.250675201416016
    6. '
' → logprob: -13.500675201416016
    7. '.ad' → logprob: -14.250675201416016
    8. '.
' → logprob: -14.500675201416016
    9. '.g' → logprob: -14.625675201416016
    10. '.graphics' → logprob: -14.750675201416016

Token 237: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -6.313314952421933e-05
    2. ' .' → logprob: -9.875062942504883
    3. '[u' → logprob: -12.375062942504883
    4. '.' → logprob: -12.500062942504883
    5. '.u' → logprob: -13.750062942504883
    6. '[v' → logprob: -13.875062942504883
    7. '   ' → logprob: -14.500062942504883
    8. '.v' → logprob: -14.875062942504883
    9. 'adj' → logprob: -15.125062942504883
    10. '.Ad' → logprob: -16.000062942504883

Token 238: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.9027791495318525e-05
    2. '[j' → logprob: -11.250019073486328
    3. '[v' → logprob: -12.250019073486328
    4. ' j' → logprob: -13.750019073486328
    5. '[' → logprob: -16.625019073486328
    6. 'v' → logprob: -17.375019073486328
    7. '
' → logprob: -17.500019073486328
    8. '[
' → logprob: -17.875019073486328
    9. '	j' → logprob: -18.250019073486328
    10. '```' → logprob: -19.125019073486328

Token 239: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.0
    3. ' [' → logprob: -18.25
    4. 'v' → logprob: -18.25
    5. '[u' → logprob: -19.875
    6. '[self' → logprob: -20.5
    7. '[
' → logprob: -20.625
    8. '][' → logprob: -21.375
    9. '[val' → logprob: -22.0
    10. '   ' → logprob: -22.125

Token 240: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0013655929360538721
    2. ']:
' → logprob: -6.751365661621094
    3. ']' → logprob: -9.126365661621094
    4. ':' → logprob: -9.501365661621094
    5. '):' → logprob: -12.376365661621094
    6. ']:
' → logprob: -12.376365661621094
    7. ']:

' → logprob: -13.501365661621094
    8. ']):' → logprob: -15.251365661621094
    9. '}:' → logprob: -15.376365661621094
    10. '               ' → logprob: -15.376365661621094

Token 241: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014455914497375488
    2. ' if' → logprob: -7.376445770263672
    3. '<|end|>' → logprob: -7.876445770263672
    4. '           ' → logprob: -9.376445770263672
    5. '                
' → logprob: -9.376445770263672
    6. ':' → logprob: -9.501445770263672
    7. ' ' → logprob: -10.126445770263672
    8. ':
' → logprob: -10.376445770263672
    9. 'if' → logprob: -10.876445770263672
    10. '                ' → logprob: -11.126445770263672

Token 242: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4142802357673645
    2. '                   ' → logprob: -1.1642801761627197
    3. 'if' (adapté à ' if') → logprob: -4.414280414581299
    4. '               ' → logprob: -4.414280414581299
    5. '                ' → logprob: -6.539280414581299
    6. ' ' → logprob: -7.914280414581299
    7. '                       ' → logprob: -8.28927993774414
    8. '<|end|>' → logprob: -8.53927993774414
    9. '                    ' → logprob: -8.66427993774414
    10. '           ' → logprob: -9.78927993774414

Token 243: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25210168957710266
    2. ' self' → logprob: -1.5021016597747803
    3. '                   ' → logprob: -9.25210189819336
    4. '               ' → logprob: -9.75210189819336
    5. '	self' → logprob: -12.00210189819336
    6. '(self' → logprob: -13.12710189819336
    7. '   ' → logprob: -13.25210189819336
    8. ' ' → logprob: -13.37710189819336
    9. '[self' → logprob: -13.37710189819336
    10. '           ' → logprob: -13.62710189819336

Token 244: '.colors' (ID: 57861)
  Prédit: '.colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.colors' → logprob: -0.00014036978245712817
    2. 'colors' → logprob: -8.875140190124512
    3. ' .' → logprob: -15.750140190124512
    4. ' colors' → logprob: -16.375141143798828
    5. '.' → logprob: -17.000141143798828
    6. '(colors' → logprob: -17.875141143798828
    7. 'Colors' → logprob: -18.125141143798828
    8. '_colors' → logprob: -18.125141143798828
    9. '/colors' → logprob: -18.375141143798828
    10. '.color' → logprob: -18.750141143798828

Token 245: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.4736459888808895e-05
    2. 'nv' → logprob: -11.500014305114746
    3. '[' → logprob: -13.375014305114746
    4. ' [' → logprob: -13.750014305114746
    5. '   ' → logprob: -14.375014305114746
    6. '[
' → logprob: -15.000014305114746
    7. '       ' → logprob: -15.375014305114746
    8. '[v' → logprob: -16.250015258789062
    9. ' nv' → logprob: -16.250015258789062
    10. '```' → logprob: -16.375015258789062

Token 246: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.68153518543113e-05
    2. '[v' → logprob: -10.125057220458984
    3. '[' → logprob: -11.875057220458984
    4. '[n' → logprob: -12.500057220458984
    5. 'nv' → logprob: -13.875057220458984
    6. ' nv' → logprob: -13.875057220458984
    7. '```' → logprob: -14.125057220458984
    8. 'в' → logprob: -14.625057220458984
    9. ']' → logprob: -14.750057220458984
    10. '
' → logprob: -14.875057220458984

Token 247: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.004534080624580383
    2. 'is' → logprob: -5.5045342445373535
    3. ' ' → logprob: -8.254533767700195
    4. ')' → logprob: -8.754533767700195
    5. ']' → logprob: -10.504533767700195
    6. ' )' → logprob: -12.254533767700195
    7. ')is' → logprob: -13.754533767700195
    8. '    ' → logprob: -14.004533767700195
    9. '	is' → logprob: -14.004533767700195
    10. ' ]' → logprob: -14.129533767700195

Token 248: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007619399111717939
    2. 'is' → logprob: -4.882619380950928
    3. ' ' → logprob: -11.507619857788086
    4. ')' → logprob: -13.132619857788086
    5. ')is' → logprob: -15.007619857788086
    6. '	is' → logprob: -15.257619857788086
    7. ' )' → logprob: -15.632619857788086
    8. '[' → logprob: -16.007619857788086
    9. '==' → logprob: -16.257619857788086
    10. '<|end|>' → logprob: -16.382619857788086

Token 249: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.02975083328783512
    2. ' None' → logprob: -3.5297508239746094
    3. '_None' → logprob: -15.40475082397461
    4. '(None' → logprob: -16.02975082397461
    5. ' ' → logprob: -16.90475082397461
    6. '=None' → logprob: -17.40475082397461
    7. '   ' → logprob: -18.40475082397461
    8. '_none' → logprob: -18.40475082397461
    9. '.None' → logprob: -19.15475082397461
    10. '  ' → logprob: -19.77975082397461

Token 250: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4874299168586731
    2. ':
' → logprob: -1.2374298572540283
    3. '                   ' → logprob: -2.3624298572540283
    4. '               ' → logprob: -7.362430095672607
    5. ' or' → logprob: -8.11242961883545
    6. '                       ' → logprob: -8.36242961883545
    7. ' :
' → logprob: -10.11242961883545
    8. ':

' → logprob: -10.23742961883545
    9. ' and' → logprob: -10.23742961883545
    10. '<|end|>' → logprob: -10.36242961883545

Token 251: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0181143619120121
    2. ':
' → logprob: -4.7681145668029785
    3. ':' → logprob: -5.0181145668029785
    4. '               ' → logprob: -6.2681145668029785
    5. '                       ' → logprob: -7.8931145668029785
    6. '           ' → logprob: -8.89311408996582
    7. '):
' → logprob: -9.39311408996582
    8. '<|end|>' → logprob: -9.64311408996582
    9. ' :
' → logprob: -10.01811408996582
    10. ',' → logprob: -10.26811408996582

Token 252: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.031609226018190384
    2. ' self' → logprob: -3.531609296798706
    3. '                       ' → logprob: -6.406609058380127
    4. '                   ' → logprob: -8.531609535217285
    5. '               ' → logprob: -12.531609535217285
    6. '	self' → logprob: -12.781609535217285
    7. '   ' → logprob: -13.781609535217285
    8. '       ' → logprob: -14.781609535217285
    9. '           ' → logprob: -14.906609535217285
    10. '                     ' → logprob: -15.156609535217285

Token 253: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0002690840628929436
    2. '_d' → logprob: -8.250268936157227
    3. '.' → logprob: -12.750268936157227
    4. '   ' → logprob: -13.125268936157227
    5. ' .' → logprob: -13.500268936157227
    6. '.d' → logprob: -13.750268936157227
    7. '
' → logprob: -16.625268936157227
    8. '  ' → logprob: -17.000268936157227
    9. ' ' → logprob: -17.250268936157227
    10. '     ' → logprob: -17.250268936157227

Token 254: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.9361264946837764e-07
    2. ' dfs' → logprob: -16.125
    3. 'df' → logprob: -18.25
    4. 'd' → logprob: -20.5
    5. 'DFS' → logprob: -21.0
    6. 'ds' → logprob: -21.125
    7. 'dsl' → logprob: -21.25
    8. 'dns' → logprob: -21.75
    9. 'def' → logprob: -21.875
    10. '_d' → logprob: -22.0

Token 255: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00026646157493814826
    2. '(' → logprob: -8.250266075134277
    3. '(
' → logprob: -13.125266075134277
    4. ' (' → logprob: -13.250266075134277
    5. '(nx' → logprob: -13.625266075134277
    6. '(nb' → logprob: -17.000267028808594
    7. '(nn' → logprob: -17.000267028808594
    8. '(nd' → logprob: -17.125267028808594
    9. '(

' → logprob: -17.875267028808594
    10. '((' → logprob: -18.125267028808594

Token 256: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00017517358355689794
    2. ' nv' → logprob: -9.375175476074219
    3. 'nv' → logprob: -9.375175476074219
    4. '```' → logprob: -13.750175476074219
    5. ',' → logprob: -14.125175476074219
    6. '   ' → logprob: -14.375175476074219
    7. '_nv' → logprob: -15.000175476074219
    8. '
' → logprob: -15.125175476074219
    9. ',v' → logprob: -15.375175476074219
    10. ' ' → logprob: -15.687675476074219

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.096126576769166e-05
    2. ' ,' → logprob: -10.125041007995605
    3. ',
' → logprob: -15.000041007995605
    4. ',n' → logprob: -15.375041007995605
    5. '1' → logprob: -16.50004005432129
    6. '(n' → logprob: -17.00004005432129
    7. ',v' → logprob: -17.12504005432129
    8. ' nv' → logprob: -18.12504005432129
    9. ',(' → logprob: -18.25004005432129
    10. '(' → logprob: -18.37504005432129

Token 258: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006746663711965084
    2. 'c' → logprob: -7.750674724578857
    3. ' ' → logprob: -8.3756742477417
    4. '   ' → logprob: -11.6256742477417
    5. ' c' → logprob: -13.0006742477417
    6. '               ' → logprob: -13.8756742477417
    7. '                   ' → logprob: -14.2506742477417
    8. '           ' → logprob: -15.3756742477417
    9. '(c' → logprob: -16.250675201416016
    10. '	c' → logprob: -16.250675201416016

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00046606172691099346
    2. 'c' → logprob: -7.7504658699035645
    3. ' ' → logprob: -10.625466346740723
    4. '   ' → logprob: -11.625466346740723
    5. '               ' → logprob: -14.750466346740723
    6. '                   ' → logprob: -14.750466346740723
    7. ' c' → logprob: -14.875466346740723
    8. '(c' → logprob: -15.125466346740723
    9. '           ' → logprob: -15.500466346740723
    10. '```' → logprob: -16.500465393066406

Token 260: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12911313772201538
    2. '-' → logprob: -2.12911319732666
    3. '-c' → logprob: -6.12911319732666
    4. ')' → logprob: -13.00411319732666
    5. ' ' → logprob: -14.00411319732666
    6. 'c' → logprob: -15.12911319732666
    7. '   ' → logprob: -15.37911319732666
    8. ' ^' → logprob: -15.50411319732666
    9. '-C' → logprob: -16.129112243652344
    10. '<|end|>' → logprob: -16.379112243652344

Token 261: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.627176768844947e-05
    2. ' c' → logprob: -9.250096321105957
    3. ')c' → logprob: -17.50009536743164
    4. '	c' → logprob: -18.12509536743164
    5. '<|end|>' → logprob: -18.37509536743164
    6. ' ' → logprob: -19.37509536743164
    7. ')' → logprob: -20.12509536743164
    8. '_c' → logprob: -20.37509536743164
    9. '
' → logprob: -20.50009536743164
    10. '   ' → logprob: -20.75009536743164

Token 262: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002993544621858746
    2. ')
' → logprob: -8.125299453735352
    3. ' )' → logprob: -12.750299453735352
    4. ')

' → logprob: -14.875299453735352
    5. ')
' → logprob: -16.87529945373535
    6. '               ' → logprob: -18.00029945373535
    7. '))' → logprob: -18.00029945373535
    8. '<|end|>' → logprob: -18.12529945373535
    9. ' )
' → logprob: -18.37529945373535
    10. '),' → logprob: -18.37529945373535

Token 263: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.0100624169572257e-05
    2. 'elif' → logprob: -11.000020027160645
    3. ' elif' → logprob: -13.250020027160645
    4. '                   ' → logprob: -14.875020027160645
    5. '			' → logprob: -15.250020027160645
    6. '<|end|>' → logprob: -15.375020027160645
    7. '		       ' → logprob: -15.625020027160645
    8. 'else' → logprob: -15.750020027160645
    9. '           ' → logprob: -16.12502098083496
    10. '	           ' → logprob: -16.25002098083496

Token 264: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04046928137540817
    2. '                   ' → logprob: -3.290469169616699
    3. 'elif' → logprob: -6.415469169616699
    4. 'if' (adapté à ' if') → logprob: -7.415469169616699
    5. ' if' → logprob: -9.0404691696167
    6. ' elif' → logprob: -10.2904691696167
    7. '           ' → logprob: -11.1654691696167
    8. 'else' → logprob: -12.4154691696167
    9. '       ' → logprob: -12.5404691696167
    10. '   ' → logprob: -12.5404691696167

Token 265: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4741443395614624
    2. ' not' → logprob: -0.9741443395614624
    3. '   ' → logprob: -10.724143981933594
    4. '               ' → logprob: -10.724143981933594
    5. '                   ' → logprob: -11.349143981933594
    6. '           ' → logprob: -12.099143981933594
    7. '	not' → logprob: -12.724143981933594
    8. '                       ' → logprob: -13.724143981933594
    9. '
' → logprob: -14.224143981933594
    10. '       ' → logprob: -14.849143981933594

Token 266: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3133074641227722
    2. ' self' → logprob: -1.313307523727417
    3. '                   ' → logprob: -11.063307762145996
    4. '               ' → logprob: -12.063307762145996
    5. '           ' → logprob: -12.188307762145996
    6. '
' → logprob: -12.438307762145996
    7. '   ' → logprob: -12.438307762145996
    8. ' ' → logprob: -12.688307762145996
    9. '	self' → logprob: -13.188307762145996
    10. '                       ' → logprob: -13.438307762145996

Token 267: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -3.79811754100956e-05
    2. '.' → logprob: -10.250038146972656
    3. 'is' → logprob: -13.125038146972656
    4. ' .' → logprob: -14.875038146972656
    5. '.
' → logprob: -16.625038146972656
    6. '.s' → logprob: -16.750038146972656
    7. '
' → logprob: -17.375038146972656
    8. '   ' → logprob: -17.625038146972656
    9. ').' → logprob: -17.875038146972656
    10. '.user' → logprob: -18.375038146972656

Token 268: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -6.749814019713085e-06
    2. 'b' → logprob: -12.000006675720215
    3. '           ' → logprob: -15.500006675720215
    4. '       ' → logprob: -15.750006675720215
    5. '               ' → logprob: -17.12500762939453
    6. 'self' → logprob: -17.62500762939453
    7. '_' → logprob: -17.62500762939453
    8. ' bip' → logprob: -17.87500762939453
    9. 's' → logprob: -18.00000762939453
    10. '                   ' → logprob: -18.25000762939453

Token 269: 'ip' (ID: 488)
  Prédit: 'ip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -2.248469718324486e-05
    2. 'part' → logprob: -11.250022888183594
    3. 'p' → logprob: -12.000022888183594
    4. 'ipat' → logprob: -13.750022888183594
    5. 'op' → logprob: -14.625022888183594
    6. 'pat' → logprob: -15.125022888183594
    7. 'ип' → logprob: -15.750022888183594
    8. 'ipt' → logprob: -16.000022888183594
    9. 'i' → logprob: -16.125022888183594
    10. 'pro' → logprob: -16.125022888183594

Token 270: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -2.9875325708417222e-05
    2. 'part' → logprob: -12.000029563903809
    3. 'arte' → logprob: -12.250029563903809
    4. 'ort' → logprob: -12.250029563903809
    5. 'rt' → logprob: -12.375029563903809
    6. 'ar' → logprob: -13.000029563903809
    7. 'арт' → logprob: -13.375029563903809
    8. 'at' → logprob: -14.250029563903809
    9. 'article' → logprob: -14.250029563903809
    10. 'ert' → logprob: -14.500029563903809

Token 271: 'ite' (ID: 651)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.23992453515529633
    2. 'ar' → logprob: -1.8649245500564575
    3. 'ite' → logprob: -2.864924430847168
    4. 'arte' → logprob: -6.739924430847168
    5. 'ate' → logprob: -9.364924430847168
    6. 'a' → logprob: -9.614924430847168
    7. 'site' → logprob: -10.114924430847168
    8. 'rite' → logprob: -11.364924430847168
    9. '
' → logprob: -11.989924430847168
    10. 'ari' → logprob: -12.364924430847168

Token 272: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3891676068305969
    2. ':' → logprob: -1.1391675472259521
    3. ':return' → logprob: -6.514167785644531
    4. '                       ' → logprob: -7.264167785644531
    5. '                   ' → logprob: -10.139167785644531
    6. '                           ' → logprob: -11.139167785644531
    7. ':

' → logprob: -11.264167785644531
    8. '):
' → logprob: -11.389167785644531
    9. '               ' → logprob: -11.389167785644531
    10. '                               ' → logprob: -11.889167785644531

Token 273: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -8.65707261255011e-06
    2. ' return' → logprob: -12.875008583068848
    3. 'return' → logprob: -13.000008583068848
    4. '       ' → logprob: -14.125008583068848
    5. '                           ' → logprob: -14.375008583068848
    6. '                        ' → logprob: -14.625008583068848
    7. '                   ' → logprob: -14.625008583068848
    8. '               ' → logprob: -14.875008583068848
    9. '                        
' → logprob: -15.375008583068848
    10. '                      ' → logprob: -15.500008583068848

Token 274: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3176254630088806
    2. ' return' → logprob: -1.3176255226135254
    3. '                           ' → logprob: -5.567625522613525
    4. '                       ' → logprob: -7.817625522613525
    5. '                               ' → logprob: -9.817625045776367
    6. '   ' → logprob: -10.192625045776367
    7. '                   ' → logprob: -10.692625045776367
    8. '               ' → logprob: -11.817625045776367
    9. '           ' → logprob: -12.942625045776367
    10. '	return' → logprob: -13.192625045776367

Token 275: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002912486088462174
    2. '           ' → logprob: -9.000290870666504
    3. '
' → logprob: -9.125290870666504
    4. '                   ' → logprob: -10.750290870666504
    5. '       ' → logprob: -11.250290870666504
    6. '                
' → logprob: -11.750290870666504
    7. 'self' → logprob: -12.375290870666504
    8. '   ' → logprob: -12.750290870666504
    9. '              ' → logprob: -13.375290870666504
    10. '                ' → logprob: -13.375290870666504

Token 276: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010270876373397186
    2. 'elif' → logprob: -9.250102996826172
    3. '```' → logprob: -12.500102996826172
    4. 'else' → logprob: -13.750102996826172
    5. '           ' → logprob: -14.500102996826172
    6. '		       ' → logprob: -14.625102996826172
    7. ' elif' → logprob: -15.250102996826172
    8. '			' → logprob: -15.625102996826172
    9. '	           ' → logprob: -16.000102996826172
    10. '       ' → logprob: -16.000102996826172

Token 277: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.226210817694664
    2. 'elif' (adapté à ' elif') → logprob: -1.6012108325958252
    3. '           ' → logprob: -7.851210594177246
    4. ' elif' → logprob: -7.976210594177246
    5. '	elif' → logprob: -10.476210594177246
    6. 'else' → logprob: -10.601210594177246
    7. '                   ' → logprob: -13.101210594177246
    8. '       ' → logprob: -13.101210594177246
    9. 'elseif' → logprob: -13.101210594177246
    10. '```' → logprob: -13.226210594177246

Token 278: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078878089785576
    2. ' self' → logprob: -5.5040788650512695
    3. '	self' → logprob: -15.12907886505127
    4. '(self' → logprob: -15.75407886505127
    5. '
' → logprob: -17.754079818725586
    6. '   ' → logprob: -17.879079818725586
    7. '[self' → logprob: -17.879079818725586
    8. 'Self' → logprob: -18.004079818725586
    9. 'c' → logprob: -18.504079818725586
    10. ' ' → logprob: -18.629079818725586

Token 279: '.colors' (ID: 57861)
  Prédit: '.colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.colors' → logprob: -5.1928003813372925e-05
    2. 'colors' → logprob: -9.875051498413086
    3. ' colors' → logprob: -16.250051498413086
    4. '.' → logprob: -16.375051498413086
    5. ' .' → logprob: -16.375051498413086
    6. '_colors' → logprob: -17.500051498413086
    7. '.color' → logprob: -18.000051498413086
    8. '/colors' → logprob: -18.125051498413086
    9. 'Colors' → logprob: -18.250051498413086
    10. '(colors' → logprob: -18.375051498413086

Token 280: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.981667537620524e-06
    2. '[v' → logprob: -14.125001907348633
    3. 'nv' → logprob: -14.250001907348633
    4. ' [' → logprob: -15.000001907348633
    5. '[' → logprob: -16.375001907348633
    6. ' nv' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.125001907348633
    8. '[
' → logprob: -17.375001907348633
    9. '	n' → logprob: -17.875001907348633
    10. '_nv' → logprob: -18.250001907348633

Token 281: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.372916686814278e-05
    2. '[v' → logprob: -9.8750638961792
    3. '[n' → logprob: -12.0000638961792
    4. '[' → logprob: -13.1250638961792
    5. 'nv' → logprob: -13.1250638961792
    6. '
' → logprob: -15.3750638961792
    7. ' nv' → logprob: -15.3750638961792
    8. 'в' → logprob: -15.5000638961792
    9. 'av' → logprob: -15.6250638961792
    10. 'o' → logprob: -15.8750638961792

Token 282: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7597091197967529
    2. '==' → logprob: -1.009709119796753
    3. ']==' → logprob: -2.134709119796753
    4. ' ==' → logprob: -3.009709119796753
    5. ' ]' → logprob: -8.509709358215332
    6. ')==' → logprob: -10.759709358215332
    7. ')' → logprob: -10.759709358215332
    8. '==
' → logprob: -11.009709358215332
    9. '[' → logprob: -11.509709358215332
    10. '']==' → logprob: -12.134709358215332

Token 283: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.016059475019574165
    2. ' ==' → logprob: -4.141059398651123
    3. ']==' → logprob: -11.516059875488281
    4. '=' → logprob: -11.766059875488281
    5. '==
' → logprob: -12.016059875488281
    6. ')==' → logprob: -14.391059875488281
    7. '===' → logprob: -14.891059875488281
    8. '```' → logprob: -15.391059875488281
    9. '()==' → logprob: -16.39105987548828
    10. '[' → logprob: -17.39105987548828

Token 284: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05489729344844818
    2. 'self' → logprob: -2.9298973083496094
    3. ' c' → logprob: -11.55489730834961
    4. ' self' → logprob: -12.30489730834961
    5. 'colors' → logprob: -15.30489730834961
    6. '   ' → logprob: -15.42989730834961
    7. '	c' → logprob: -15.55489730834961
    8. '	self' → logprob: -17.17989730834961
    9. '$c' → logprob: -17.67989730834961
    10. '
' → logprob: -17.67989730834961

Token 285: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25316470861434937
    2. ':
' → logprob: -1.5031647682189941
    3. '                   ' → logprob: -6.878164768218994
    4. '               ' → logprob: -9.003164291381836
    5. '                       ' → logprob: -9.878164291381836
    6. '           ' → logprob: -11.878164291381836
    7. ':

' → logprob: -11.878164291381836
    8. '):
' → logprob: -12.378164291381836
    9. ':
' → logprob: -12.878164291381836
    10. '.' → logprob: -13.503164291381836

Token 286: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007992653991095722
    2. 'self' → logprob: -7.250799179077148
    3. '               ' → logprob: -9.750799179077148
    4. '                       ' → logprob: -11.375799179077148
    5. '           ' → logprob: -11.750799179077148
    6. ' self' → logprob: -11.875799179077148
    7. '   ' → logprob: -12.500799179077148
    8. '       ' → logprob: -15.250799179077148
    9. '                  ' → logprob: -15.500799179077148
    10. '                           ' → logprob: -16.37579917907715

Token 287: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.14140208065509796
    2. ' self' → logprob: -2.141402006149292
    3. '                   ' → logprob: -4.391402244567871
    4. '                       ' → logprob: -6.516402244567871
    5. '   ' → logprob: -7.891402244567871
    6. '               ' → logprob: -9.391402244567871
    7. '           ' → logprob: -10.766402244567871
    8. '       ' → logprob: -10.891402244567871
    9. ' ' → logprob: -12.391402244567871
    10. '	self' → logprob: -12.391402244567871

Token 288: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -4.084206375409849e-05
    2. '.' → logprob: -10.250041007995605
    3. 'is' → logprob: -12.250041007995605
    4. ' .' → logprob: -15.000041007995605
    5. '
' → logprob: -15.500041007995605
    6. '.
' → logprob: -16.62504005432129
    7. '.has' → logprob: -17.12504005432129
    8. '`.' → logprob: -18.12504005432129
    9. '   ' → logprob: -18.37504005432129
    10. '```' → logprob: -18.50004005432129

Token 289: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -4.320199877838604e-07
    2. 'b' → logprob: -15.125
    3. '_' → logprob: -16.5
    4. '_not' → logprob: -17.625
    5. '._' → logprob: -18.625
    6. '_a' → logprob: -18.75
    7. ' _' → logprob: -19.25
    8. '_c' → logprob: -19.25
    9. '_B' → logprob: -20.0
    10. '_s' → logprob: -20.125

Token 290: 'ip' (ID: 488)
  Prédit: 'ip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.00017147827020380646
    2. 'part' → logprob: -8.875171661376953
    3. 'b' → logprob: -10.625171661376953
    4. 'ipat' → logprob: -12.875171661376953
    5. 'p' → logprob: -13.750171661376953
    6. 'pat' → logprob: -14.250171661376953
    7. 'pro' → logprob: -14.750171661376953
    8. 'op' → logprob: -15.000171661376953
    9. '
' → logprob: -15.250171661376953
    10. 'ип' → logprob: -15.375171661376953

Token 291: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -2.045823566731997e-05
    2. 'part' → logprob: -11.000020027160645
    3. 'арт' → logprob: -14.000020027160645
    4. '_art' → logprob: -14.375020027160645
    5. 'arte' → logprob: -14.875020027160645
    6. 'ip' → logprob: -15.125020027160645
    7. 'ar' → logprob: -15.250020027160645
    8. 'arti' → logprob: -15.500020027160645
    9. 'artisan' → logprob: -15.500020027160645
    10. 'arp' → logprob: -15.625020027160645

Token 292: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.014502651058137417
    2. 'art' → logprob: -4.38950252532959
    3. 'ar' → logprob: -6.38950252532959
    4. 'ate' → logprob: -9.13950252532959
    5. 'site' → logprob: -9.38950252532959
    6. 'arte' → logprob: -9.51450252532959
    7. 'rite' → logprob: -10.88950252532959
    8. '
' → logprob: -11.38950252532959
    9. ' ite' → logprob: -13.38950252532959
    10. 'it' → logprob: -13.63950252532959

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01105159055441618
    2. '=' → logprob: -4.511051654815674
    3. '=False' → logprob: -12.511051177978516
    4. ' ' → logprob: -16.761051177978516
    5. '   ' → logprob: -17.261051177978516
    6. '           ' → logprob: -18.886051177978516
    7. '	' → logprob: -19.136051177978516
    8. 'False' → logprob: -19.386051177978516
    9. '  ' → logprob: -19.511051177978516
    10. '    ' → logprob: -19.511051177978516

Token 294: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -6.2729995988775045e-06
    2. ' False' → logprob: -12.000006675720215
    3. '=False' → logprob: -20.5000057220459
    4. '(False' → logprob: -21.3750057220459
    5. '   ' → logprob: -21.8750057220459
    6. '_false' → logprob: -22.7500057220459
    7. 'false' → logprob: -23.2500057220459
    8. '.False' → logprob: -23.7500057220459
    9. '
' → logprob: -25.5000057220459
    10. 'F' → logprob: -25.6250057220459

Token 295: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017793069127947092
    2. '<|end|>' → logprob: -6.626779079437256
    3. '           ' → logprob: -8.376779556274414
    4. '               ' → logprob: -9.626779556274414
    5. '
' → logprob: -10.126779556274414
    6. '   ' → logprob: -10.251779556274414
    7. '       ' → logprob: -10.251779556274414
    8. '                       ' → logprob: -11.251779556274414
    9. 'return' → logprob: -11.751779556274414
    10. '                  ' → logprob: -12.376779556274414

Token 296: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 297: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000889067945536226
    2. '                   ' → logprob: -7.500889301300049
    3. ' return' → logprob: -8.00088882446289
    4. '                       ' → logprob: -15.12588882446289
    5. '   ' → logprob: -15.50088882446289
    6. ':return' → logprob: -15.87588882446289
    7. '           ' → logprob: -16.00088882446289
    8. '               ' → logprob: -16.62588882446289
    9. '       ' → logprob: -17.62588882446289
    10. '	return' → logprob: -17.75088882446289

Token 298: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 299: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7811137437820435
    2. '<|end|>' → logprob: -1.4061137437820435
    3. '   ' → logprob: -1.5311137437820435
    4. 'def' → logprob: -2.656113624572754
    5. '       ' → logprob: -5.406113624572754
    6. 'class' → logprob: -6.281113624572754
    7. '    
' → logprob: -6.656113624572754
    8. '<|end|>' → logprob: -6.781113624572754
    9. '```' → logprob: -8.031113624572754
    10. '

' → logprob: -8.281113624572754

Token 300: ' class' (ID: 744)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014637866988778114
    2. '   ' → logprob: -4.3896379470825195
    3. 'class' (adapté à ' class') → logprob: -6.6396379470825195
    4. ' def' → logprob: -7.2646379470825195
    5. '       ' → logprob: -10.26463794708252
    6. '	def' → logprob: -10.51463794708252
    7. '<|end|>' → logprob: -10.63963794708252
    8. '
' → logprob: -11.63963794708252
    9. '    
' → logprob: -11.76463794708252
    10. '    ' → logprob: -12.51463794708252

Token 301: ' Complete' (ID: 29031)
  Prédit: ' Two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Two' → logprob: -2.4172542095184326
    2. ' Strong' → logprob: -2.7922542095184326
    3. ' Edge' → logprob: -2.9172542095184326
    4. ' Solver' → logprob: -3.0422542095184326
    5. ' SCC' → logprob: -3.2922542095184326
    6. 'Two' → logprob: -3.2922542095184326
    7. ' Cycle' → logprob: -3.4172542095184326
    8. 'Cycle' → logprob: -3.5422542095184326
    9. ' Magic' → logprob: -3.6672542095184326
    10. ' Path' → logprob: -3.7297542095184326

Token 302: 'Sub' (ID: 3638)
  Prédit: 'Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -0.021978270262479782
    2. 'B' → logprob: -3.8969783782958984
    3. 'Magic' → logprob: -8.271978378295898
    4. 'Binary' → logprob: -8.271978378295898
    5. 'Multipart' → logprob: -8.521978378295898
    6. '```' → logprob: -8.646978378295898
    7. '_B' → logprob: -9.271978378295898
    8. 'b' → logprob: -9.271978378295898
    9. 'Graphs' → logprob: -9.771978378295898
    10. 'graph' → logprob: -10.146978378295898

Token 303: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0008411920862272382
    2. 'class' → logprob: -8.12584114074707
    3. 'set' → logprob: -8.25084114074707
    4. 'raph' → logprob: -9.00084114074707
    5. 'g' → logprob: -9.50084114074707
    6. 'gra' → logprob: -10.25084114074707
    7. 'graphs' → logprob: -10.62584114074707
    8. 'tree' → logprob: -11.62584114074707
    9. 'gr' → logprob: -12.75084114074707
    10. 'b' → logprob: -13.37584114074707

Token 304: 'Detector' (ID: 40139)
  Prédit: 'Checker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -0.27090272307395935
    2. ':' → logprob: -1.7709027528762817
    3. 'Finder' → logprob: -3.145902633666992
    4. ':
' → logprob: -4.020902633666992
    5. 'Detector' → logprob: -5.895902633666992
    6. 'Builder' → logprob: -6.770902633666992
    7. 'Check' → logprob: -7.520902633666992
    8. 'Searcher' → logprob: -7.895902633666992
    9. '(' → logprob: -8.645902633666992
    10. 'Real' → logprob: -9.020902633666992

Token 305: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011355629976605996
    2. ':
' → logprob: -9.125113487243652
    3. '(' → logprob: -13.375113487243652
    4. ':def' → logprob: -13.625113487243652
    5. ' :' → logprob: -14.125113487243652
    6. ':

' → logprob: -15.250113487243652
    7. '(object' → logprob: -15.375113487243652
    8. '():' → logprob: -15.625113487243652
    9. '(Abstract' → logprob: -16.00011444091797
    10. '):' → logprob: -16.37511444091797

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010092249140143394
    2. '   ' → logprob: -5.010092258453369
    3. '<|end|>' → logprob: -6.635092258453369
    4. ':
' → logprob: -7.135092258453369
    5. ':' → logprob: -7.635092258453369
    6. 'def' → logprob: -7.885092258453369
    7. ' def' → logprob: -8.135091781616211
    8. '(' → logprob: -10.635091781616211
    9. '     ' → logprob: -11.635091781616211
    10. '      ' → logprob: -11.760091781616211

Token 307: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.47565045952796936
    2. 'def' (adapté à ' def') → logprob: -0.975650429725647
    3. '   ' → logprob: -6.850650310516357
    4. '       ' → logprob: -7.600650310516357
    5. 'class' → logprob: -11.975650787353516
    6. '	def' → logprob: -12.225650787353516
    7. '    ' → logprob: -14.100650787353516
    8. ' ' → logprob: -14.725650787353516
    9. '  ' → logprob: -15.850650787353516
    10. ' class' → logprob: -15.850650787353516

Token 308: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02969321236014366
    2. ' def' → logprob: -3.779693126678467
    3. '__' → logprob: -5.404693126678467
    4. 'def' → logprob: -6.654693126678467
    5. 'init' → logprob: -7.529693126678467
    6. ' init' → logprob: -9.279693603515625
    7. '_init' → logprob: -12.029693603515625
    8. 'class' → logprob: -13.279693603515625
    9. ' ' → logprob: -13.529693603515625
    10. ' ' → logprob: -14.279693603515625

Token 309: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.3438327843905427e-05
    2. 'it' → logprob: -11.00002384185791
    3. 'def' → logprob: -12.75002384185791
    4. '_init' → logprob: -14.00002384185791
    5. 'nit' → logprob: -14.12502384185791
    6. ' init' → logprob: -14.50002384185791
    7. '   ' → logprob: -14.62502384185791
    8. 'iter' → logprob: -15.12502384185791
    9. '__' → logprob: -15.50002384185791
    10. 'class' → logprob: -15.75002384185791

Token 310: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0032652919180691242
    2. '__(' → logprob: -5.878265380859375
    3. ' (' → logprob: -8.503265380859375
    4. '(' → logprob: -8.753265380859375
    5. 'self' → logprob: -10.253265380859375
    6. '       ' → logprob: -10.378265380859375
    7. ')(' → logprob: -12.003265380859375
    8. '_(' → logprob: -12.128265380859375
    9. '   ' → logprob: -12.378265380859375
    10. ',' → logprob: -12.753265380859375

Token 311: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002682496269699186
    2. ' self' → logprob: -8.25026798248291
    3. '       ' → logprob: -12.62526798248291
    4. ',' → logprob: -13.12526798248291
    5. '           ' → logprob: -14.00026798248291
    6. '(self' → logprob: -15.12526798248291
    7. ')' → logprob: -15.25026798248291
    8. '   ' → logprob: -16.125268936157227
    9. '
' → logprob: -16.625268936157227
    10. 'elf' → logprob: -17.000268936157227

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008274946012534201
    2. 'self' → logprob: -7.125827312469482
    3. ' self' → logprob: -12.12582778930664
    4. '       ' → logprob: -12.25082778930664
    5. ' ,' → logprob: -12.25082778930664
    6. '(self' → logprob: -12.25082778930664
    7. ',self' → logprob: -13.50082778930664
    8. ',
' → logprob: -14.12582778930664
    9. '   ' → logprob: -14.87582778930664
    10. '           ' → logprob: -15.00082778930664

Token 313: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.1713008880615234
    2. ' graph' → logprob: -1.2963008880615234
    3. 'self' → logprob: -1.2963008880615234
    4. ' self' → logprob: -2.0463008880615234
    5. ' n' → logprob: -5.421300888061523
    6. 'n' → logprob: -5.671300888061523
    7. '       ' → logprob: -6.171300888061523
    8. '   ' → logprob: -7.046300888061523
    9. '           ' → logprob: -7.171300888061523
    10. ' edges' → logprob: -7.421300888061523

Token 314: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030641425400972366
    2. '):
' → logprob: -4.030641555786133
    3. '):' → logprob: -4.405641555786133
    4. '           ' → logprob: -9.405641555786133
    5. ':' → logprob: -10.405641555786133
    6. ' ,' → logprob: -10.530641555786133
    7. ',
' → logprob: -10.530641555786133
    8. '       ' → logprob: -10.655641555786133
    9. '   ' → logprob: -12.405641555786133
    10. '):
' → logprob: -12.655641555786133

Token 315: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1609182357788086
    2. '       ' → logprob: -1.9109182357788086
    3. 'self' → logprob: -7.535918235778809
    4. ' self' → logprob: -10.035918235778809
    5. ',' → logprob: -10.285918235778809
    6. '   ' → logprob: -10.660918235778809
    7. '<|end|>' → logprob: -10.785918235778809
    8. '	       ' → logprob: -10.910918235778809
    9. '               ' → logprob: -12.410918235778809
    10. '(self' → logprob: -12.410918235778809

Token 316: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1004360094666481
    2. ' self' → logprob: -2.350435972213745
    3. '       ' → logprob: -8.600436210632324
    4. '           ' → logprob: -10.100436210632324
    5. '	self' → logprob: -13.600436210632324
    6. '   ' → logprob: -14.225436210632324
    7. '        ' → logprob: -14.475436210632324
    8. ' ' → logprob: -14.600436210632324
    9. '(self' → logprob: -14.725436210632324
    10. ' ' → logprob: -15.350436210632324

Token 317: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.0022281676065176725
    2. '.' → logprob: -7.002228260040283
    3. ' .' → logprob: -7.252228260040283
    4. 'graph' → logprob: -8.252227783203125
    5. ' graph' → logprob: -9.252227783203125
    6. '	graph' → logprob: -9.627227783203125
    7. '=' → logprob: -9.877227783203125
    8. 'self' → logprob: -10.127227783203125
    9. ' =' → logprob: -10.252227783203125
    10. '   ' → logprob: -11.252227783203125

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741121828556061
    2. '=' → logprob: -0.9741121530532837
    3. '   ' → logprob: -11.224112510681152
    4. '.' → logprob: -11.599112510681152
    5. ' ' → logprob: -12.724112510681152
    6. '       ' → logprob: -13.099112510681152
    7. '           ' → logprob: -13.474112510681152
    8. '    ' → logprob: -13.974112510681152
    9. '.graph' → logprob: -14.099112510681152
    10. '	' → logprob: -14.224112510681152

Token 319: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6931578516960144
    2. 'graph' → logprob: -0.6931578516960144
    3. '	graph' → logprob: -11.818158149719238
    4. '(graph' → logprob: -12.943158149719238
    5. 'Graph' → logprob: -14.693158149719238
    6. '.graph' → logprob: -15.193158149719238
    7. '_graph' → logprob: -16.693157196044922
    8. 'raph' → logprob: -16.943157196044922
    9. 'graphql' → logprob: -17.818157196044922
    10. 'graphs' → logprob: -17.818157196044922

Token 320: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7022894024848938
    2. '<|end|>' → logprob: -1.077289342880249
    3. '       ' → logprob: -1.827289342880249
    4. '<|end|>' → logprob: -6.202289581298828
    5. 'def' → logprob: -7.577289581298828
    6. '   ' → logprob: -7.702289581298828
    7. '        
' → logprob: -9.202289581298828
    8. '

' → logprob: -10.577289581298828
    9. '           ' → logprob: -11.327289581298828
    10. '```' → logprob: -11.827289581298828

Token 321: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26170918345451355
    2. '
' → logprob: -2.136709213256836
    3. '<|end|>' → logprob: -2.761709213256836
    4. '           ' → logprob: -3.136709213256836
    5. 'def' → logprob: -6.011709213256836
    6. '   ' → logprob: -6.511709213256836
    7. '<|end|>' → logprob: -7.011709213256836
    8. '        
' → logprob: -7.636709213256836
    9. ' def' → logprob: -9.261709213256836
    10. 'from' → logprob: -10.386709213256836

Token 322: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.019892461597919464
    2. 'def' → logprob: -4.894892692565918
    3. '       ' → logprob: -5.144892692565918
    4. '           ' → logprob: -6.019892692565918
    5. 'from' → logprob: -6.019892692565918
    6. 'import' → logprob: -7.519892692565918
    7. ' self' → logprob: -7.769892692565918
    8. '
' → logprob: -8.019892692565918
    9. '   ' → logprob: -8.519892692565918
    10. '	self' → logprob: -12.144892692565918

Token 323: '.vis' (ID: 15800)
  Prédit: '.cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cl' → logprob: -1.1370717287063599
    2. '.vis' → logprob: -1.2620717287063599
    3. '.n' → logprob: -2.3870716094970703
    4. '.f' → logprob: -2.7620716094970703
    5. '.vertex' → logprob: -3.2620716094970703
    6. '.max' → logprob: -3.5120716094970703
    7. '.size' → logprob: -3.7620716094970703
    8. '.count' → logprob: -3.8870716094970703
    9. '.degree' → logprob: -3.8870716094970703
    10. '.colors' → logprob: -4.01207160949707

Token 324: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -5.514650183613412e-05
    2. '[' → logprob: -10.500055313110352
    3. '_' → logprob: -11.000055313110352
    4. 'iting' → logprob: -13.125055313110352
    5. 'isted' → logprob: -13.500055313110352
    6. '=' → logprob: -13.750055313110352
    7. 'it' → logprob: -13.875055313110352
    8. 'itted' → logprob: -14.250055313110352
    9. '   ' → logprob: -14.375055313110352
    10. '```' → logprob: -14.375055313110352

Token 325: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868728280067444
    2. ' =' → logprob: -1.1368727684020996
    3. ' ' → logprob: -14.261873245239258
    4. '[' → logprob: -14.511873245239258
    5. ':' → logprob: -15.011873245239258
    6. '=set' → logprob: -15.636873245239258
    7. '   ' → logprob: -17.136873245239258
    8. '	' → logprob: -17.136873245239258
    9. '=[]' → logprob: -17.511873245239258
    10. ')' → logprob: -17.511873245239258

Token 326: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13106274604797363
    2. ' [' → logprob: -2.1310627460479736
    3. ' set' → logprob: -5.8810625076293945
    4. 'set' → logprob: -6.6310625076293945
    5. '[]' → logprob: -11.756062507629395
    6. '   ' → logprob: -13.131062507629395
    7. '[node' → logprob: -13.756062507629395
    8. ' []' → logprob: -14.381062507629395
    9. '[n' → logprob: -14.381062507629395
    10. ' ' → logprob: -14.381062507629395

Token 327: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -6.869017852295656e-06
    2. ' False' → logprob: -12.000006675720215
    3. '0' → logprob: -14.375006675720215
    4. '(False' → logprob: -17.62500762939453
    5. '   ' → logprob: -18.00000762939453
    6. ']' → logprob: -19.37500762939453
    7. 'None' → logprob: -19.62500762939453
    8. '=False' → logprob: -19.87500762939453
    9. '.False' → logprob: -20.37500762939453
    10. '[' → logprob: -20.75000762939453

Token 328: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012368128227535635
    2. ' ]' → logprob: -9.500123977661133
    3. ']*' → logprob: -10.625123977661133
    4. ' for' → logprob: -11.000123977661133
    5. '*' → logprob: -13.000123977661133
    6. ' ' → logprob: -13.625123977661133
    7. '   ' → logprob: -13.750123977661133
    8. ']*(' → logprob: -13.875123977661133
    9. 'for' → logprob: -14.125123977661133
    10. ')' → logprob: -14.625123977661133

Token 329: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06731680035591125
    2. '*' → logprob: -2.817316770553589
    3. ']' → logprob: -5.442317008972168
    4. ' for' → logprob: -8.317317008972168
    5. ' ' → logprob: -8.942317008972168
    6. '*(' → logprob: -8.942317008972168
    7. '   ' → logprob: -9.442317008972168
    8. ')' → logprob: -9.442317008972168
    9. ']*' → logprob: -9.567317008972168
    10. '            ' → logprob: -9.692317008972168

Token 330: ' (' (ID: 350)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.003404659451916814
    2. '(len' → logprob: -6.12840461730957
    3. ' (' → logprob: -6.75340461730957
    4. '(self' → logprob: -10.25340461730957
    5. '(' → logprob: -11.75340461730957
    6. '   ' → logprob: -12.37840461730957
    7. '(grid' → logprob: -14.12840461730957
    8. '(Graph' → logprob: -14.25340461730957
    9. '((' → logprob: -14.62840461730957
    10. '(game' → logprob: -15.00340461730957

Token 331: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.2132159322500229
    2. '(graph' → logprob: -1.963215947151184
    3. 'self' → logprob: -3.3382158279418945
    4. ' graph' → logprob: -4.3382158279418945
    5. '(self' → logprob: -6.5882158279418945
    6. ' (' → logprob: -7.0882158279418945
    7. ' self' → logprob: -7.8382158279418945
    8. '           ' → logprob: -8.338215827941895
    9. 'len' → logprob: -9.463215827941895
    10. '	graph' → logprob: -10.588215827941895

Token 332: '.vertex' (ID: 95344)
  Prédit: '.vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertex' → logprob: -0.00011594036914175376
    2. '.' → logprob: -9.625116348266602
    3. 'vertex' → logprob: -10.750116348266602
    4. ' .' → logprob: -10.875116348266602
    5. '	vertex' → logprob: -12.625116348266602
    6. '.graph' → logprob: -13.625116348266602
    7. '   ' → logprob: -13.750116348266602
    8. '.vector' → logprob: -13.875116348266602
    9. '.vertices' → logprob: -14.375116348266602
    10. '.
' → logprob: -14.750116348266602

Token 333: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.650518920039758e-06
    2. 'count' → logprob: -13.125003814697266
    3. '.count' → logprob: -14.125003814697266
    4. '   ' → logprob: -15.250003814697266
    5. '._' → logprob: -15.750003814697266
    6. 'vertex' → logprob: -15.875003814697266
    7. '_COUNT' → logprob: -16.250003814697266
    8. '       ' → logprob: -16.875003814697266
    9. 'Count' → logprob: -17.000003814697266
    10. '.Count' → logprob: -17.750003814697266

Token 334: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868747651576996
    2. ' +' → logprob: -1.136874794960022
    3. '+
' → logprob: -14.01187515258789
    4. '   ' → logprob: -14.01187515258789
    5. '       ' → logprob: -14.38687515258789
    6. ' ' → logprob: -14.63687515258789
    7. '()+' → logprob: -15.13687515258789
    8. ')' → logprob: -15.38687515258789
    9. ' +
' → logprob: -15.63687515258789
    10. '           ' → logprob: -16.26187515258789

Token 335: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008065330912359059
    2. ' ' → logprob: -7.1258063316345215
    3. '   ' → logprob: -13.75080680847168
    4. '
' → logprob: -14.75080680847168
    5. '2' → logprob: -15.87580680847168
    6. '       ' → logprob: -15.87580680847168
    7. '           ' → logprob: -16.12580680847168
    8. '(' → logprob: -16.37580680847168
    9. '```' → logprob: -17.68830680847168
    10. '+' → logprob: -17.81330680847168

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -12.000009536743164
    3. '(' → logprob: -12.750009536743164
    4. '2' → logprob: -15.000009536743164
    5. '   ' → logprob: -16.500009536743164
    6. '
' → logprob: -17.750009536743164
    7. ' (' → logprob: -17.875009536743164
    8. '       ' → logprob: -19.375009536743164
    9. '```' → logprob: -19.375009536743164
    10. '{' → logprob: -19.937509536743164

Token 337: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00494969729334116
    2. ')
' → logprob: -5.379949569702148
    3. '           ' → logprob: -8.629949569702148
    4. '       ' → logprob: -9.004949569702148
    5. ' )' → logprob: -10.754949569702148
    6. '<|end|>' → logprob: -13.129949569702148
    7. '   ' → logprob: -13.379949569702148
    8. ')

' → logprob: -13.754949569702148
    9. ' )
' → logprob: -14.879949569702148
    10. ')
' → logprob: -15.254949569702148

Token 338: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46201783418655396
    2. '       ' → logprob: -1.0870177745819092
    3. '   ' → logprob: -3.837017774581909
    4. 'def' → logprob: -5.212018013000488
    5. '<|end|>' → logprob: -5.337018013000488
    6. '

' → logprob: -7.962018013000488
    7. ' def' → logprob: -8.837018013000488
    8. '        
' → logprob: -8.837018013000488
    9. '    
' → logprob: -9.337018013000488
    10. '<|end|>' → logprob: -9.587018013000488

Token 339: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007579309749417007
    2. '   ' → logprob: -8.000758171081543
    3. '       ' → logprob: -8.125758171081543
    4. ' def' → logprob: -9.125758171081543
    5. '
' → logprob: -11.000758171081543
    6. '	def' → logprob: -14.000758171081543
    7. '        
' → logprob: -16.250757217407227
    8. '

' → logprob: -16.750757217407227
    9. ' ' → logprob: -17.000757217407227
    10. '  ' → logprob: -17.375757217407227

Token 340: ' has' (ID: 853)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.8385117650032043
    2. 'detect' → logprob: -0.9635117650032043
    3. 'has' → logprob: -2.5885117053985596
    4. ' dfs' → logprob: -2.8385117053985596
    5. 'find' → logprob: -3.9635117053985596
    6. ' find' → logprob: -4.463511943817139
    7. ' detect' → logprob: -4.713511943817139
    8. ' has' → logprob: -5.088511943817139
    9. 'is' → logprob: -6.588511943817139
    10. 'count' → logprob: -6.713511943817139

Token 341: '_k' (ID: 11637)
  Prédit: '_complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_complete' → logprob: -0.145610973238945
    2. '_triangle' → logprob: -2.145611047744751
    3. '_cl' → logprob: -4.145610809326172
    4. '_k' → logprob: -6.895610809326172
    5. '_self' → logprob: -7.770610809326172
    6. '_' → logprob: -8.020610809326172
    7. '(self' → logprob: -8.145610809326172
    8. '_three' → logprob: -8.895610809326172
    9. '_tri' → logprob: -8.895610809326172
    10. '_cycle' → logprob: -9.520610809326172

Token 342: '5' (ID: 20)
  Prédit: '_cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cl' → logprob: -0.33596640825271606
    2. '_complete' → logprob: -1.5859663486480713
    3. '(self' → logprob: -2.5859663486480713
    4. '_sub' → logprob: -5.71096658706665
    5. '(' → logprob: -7.96096658706665
    6. '_(' → logprob: -8.335966110229492
    7. '_' → logprob: -8.335966110229492
    8. '_vertex' → logprob: -8.710966110229492
    9. '_triangle' → logprob: -8.960966110229492
    10. '_node' → logprob: -9.210966110229492

Token 343: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0031850787345319986
    2. '(' → logprob: -5.753185272216797
    3. 'self' → logprob: -12.378185272216797
    4. ' (' → logprob: -13.128185272216797
    5. '(
' → logprob: -14.503185272216797
    6. ' self' → logprob: -16.003185272216797
    7. '_(' → logprob: -16.003185272216797
    8. '_' → logprob: -16.503185272216797
    9. '(s' → logprob: -17.003185272216797
    10. '   ' → logprob: -17.003185272216797

Token 344: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011320014018565416
    2. ' ,' → logprob: -7.876132011413574
    3. '):
' → logprob: -8.001132011413574
    4. 'self' → logprob: -8.251132011413574
    5. '):' → logprob: -9.001132011413574
    6. '   ' → logprob: -11.501132011413574
    7. '(self' → logprob: -11.876132011413574
    8. ',v' → logprob: -12.251132011413574
    9. '       ' → logprob: -12.626132011413574
    10. ',self' → logprob: -13.626132011413574

Token 345: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002315953141078353
    2. ' for' → logprob: -6.252315998077393
    3. '       ' → logprob: -8.627315521240234
    4. 'for' → logprob: -9.127315521240234
    5. '   ' → logprob: -11.252315521240234
    6. '	       ' → logprob: -11.252315521240234
    7. '```' → logprob: -11.627315521240234
    8. '
' → logprob: -11.877315521240234
    9. '               ' → logprob: -12.002315521240234
    10. '<|end|>' → logprob: -12.002315521240234

Token 346: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9191296100616455
    2. 'for' → logprob: -1.0441296100616455
    3. '           ' → logprob: -1.5441296100616455
    4. '       ' → logprob: -4.044129371643066
    5. ' n' → logprob: -4.794129371643066
    6. 'n' → logprob: -4.794129371643066
    7. '   ' → logprob: -7.669129371643066
    8. '#' (adapté à ' #') → logprob: -8.169129371643066
    9. 'from' → logprob: -8.294129371643066
    10. 'def' → logprob: -8.544129371643066

Token 347: ' Checking' (ID: 93085)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.534639298915863
    2. ' for' → logprob: -0.909639298915863
    3. '#' → logprob: -5.659639358520508
    4. '           ' → logprob: -5.909639358520508
    5. ' n' → logprob: -6.159639358520508
    6. 'n' → logprob: -6.534639358520508
    7. ' #' → logprob: -7.159639358520508
    8. 'from' → logprob: -8.159639358520508
    9. '       ' → logprob: -8.409639358520508
    10. 'import' → logprob: -9.034639358520508

Token 348: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06037518009543419
    2. 'for' → logprob: -2.935375213623047
    3. ' if' → logprob: -5.435375213623047
    4. ' self' → logprob: -8.435375213623047
    5. '   ' → logprob: -8.685375213623047
    6. '    ' → logprob: -9.185375213623047
    7. ' vertices' → logprob: -9.310375213623047
    8. 'if' → logprob: -9.435375213623047
    9. 'self' → logprob: -9.560375213623047
    10. ' all' → logprob: -9.685375213623047

Token 349: ' K' (ID: 658)
  Prédit: ' cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cl' → logprob: -0.5285710096359253
    2. ' any' → logprob: -1.2785710096359253
    3. ' k' → logprob: -2.653571128845215
    4. 'cl' → logprob: -4.403571128845215
    5. 'k' → logprob: -4.903571128845215
    6. ' presence' → logprob: -4.903571128845215
    7. ' self' → logprob: -5.153571128845215
    8. ' all' → logprob: -5.153571128845215
    9. ' complete' → logprob: -5.278571128845215
    10. ' a' → logprob: -5.903571128845215

Token 350: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0788998156785965
    2. '_' → logprob: -2.57889986038208
    3. '   ' → logprob: -12.703899383544922
    4. '_{' → logprob: -12.828899383544922
    5. '\xe2\x82' → logprob: -13.703899383544922
    6. ' ' → logprob: -13.828899383544922
    7. '```' → logprob: -14.328899383544922
    8. '  ' → logprob: -15.453899383544922
    9. '(' → logprob: -15.453899383544922
    10. '__' → logprob: -15.953899383544922

Token 351: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4053325653076172
    2. '       ' → logprob: -1.6553325653076172
    3. '<|end|>' → logprob: -3.405332565307617
    4. ' in' → logprob: -3.655332565307617
    5. '
' → logprob: -4.155332565307617
    6. ' for' → logprob: -4.405332565307617
    7. '...' → logprob: -4.655332565307617
    8. '   ' → logprob: -4.780332565307617
    9. ',' → logprob: -5.030332565307617
    10. ' is' → logprob: -5.530332565307617

Token 352: ' complex' (ID: 8012)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.9900699853897095
    2. ' False' → logprob: -1.8650699853897095
    3. ' not' → logprob: -2.11506986618042
    4. ' True' → logprob: -2.49006986618042
    5. 'True' → logprob: -2.74006986618042
    6. ' self' → logprob: -2.74006986618042
    7. 'self' → logprob: -3.11506986618042
    8. 'def' → logprob: -3.36506986618042
    9. '   ' → logprob: -4.11506986618042
    10. ' def' → logprob: -4.36506986618042

Token 353: ' in' (ID: 306)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6816276907920837
    2. '           ' → logprob: -1.5566277503967285
    3. ',' → logprob: -2.0566277503967285
    4. '<|end|>' → logprob: -2.9316277503967285
    5. '.' → logprob: -3.1816277503967285
    6. 'and' → logprob: -3.9316277503967285
    7. '       ' → logprob: -4.1816277503967285
    8. '...' → logprob: -4.8066277503967285
    9. '<|end|>' → logprob: -5.3066277503967285
    10. ';' → logprob: -5.4316277503967285

Token 354: ' huge' (ID: 9560)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.9696024060249329
    2. ' code' → logprob: -1.844602346420288
    3. ' this' → logprob: -2.094602346420288
    4. 'the' → logprob: -2.719602346420288
    5. ' general' → logprob: -2.969602346420288
    6. ' Python' → logprob: -3.469602346420288
    7. 'def' → logprob: -3.469602346420288
    8. 'code' → logprob: -3.844602346420288
    9. 'python' → logprob: -3.844602346420288
    10. ' the' → logprob: -4.094602584838867

Token 355: ' graphs' (ID: 73392)
  Prédit: ' graphs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graphs' → logprob: -0.1434631645679474
    2. 'graphs' → logprob: -2.018463134765625
    3. ' graph' → logprob: -8.143463134765625
    4. '   ' → logprob: -8.643463134765625
    5. 'graph' → logprob: -8.643463134765625
    6. 'raph' → logprob: -10.018463134765625
    7. '_graph' → logprob: -10.518463134765625
    8. 's' → logprob: -11.268463134765625
    9. '#' → logprob: -11.393463134765625
    10. '           ' → logprob: -11.768463134765625

Token 356: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015484489500522614
    2. ',' → logprob: -5.39048433303833
    3. '<|end|>' → logprob: -5.51548433303833
    4. ' and' → logprob: -6.14048433303833
    5. '.' → logprob: -6.39048433303833
    6. '
' → logprob: -6.51548433303833
    7. '<|end|>' → logprob: -7.64048433303833
    8. '       ' → logprob: -8.265484809875488
    9. ';' → logprob: -8.640484809875488
    10. ' but' → logprob: -9.640484809875488

Token 357: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02451503835618496
    2. ' so' → logprob: -4.399515151977539
    3. ' but' → logprob: -4.649515151977539
    4. 'but' → logprob: -7.024515151977539
    5. ' return' → logprob: -7.649515151977539
    6. 'return' → logprob: -7.899515151977539
    7. '#' → logprob: -8.774515151977539
    8. '       ' → logprob: -8.899515151977539
    9. 'so' → logprob: -9.274515151977539
    10. ' and' → logprob: -10.149515151977539

Token 358: ' we' (ID: 581)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.2255760431289673
    2. ' for' → logprob: -1.4755760431289673
    3. '#' → logprob: -2.6005759239196777
    4. 'self' → logprob: -2.6005759239196777
    5. '           ' → logprob: -2.7255759239196777
    6. ' if' → logprob: -2.9755759239196777
    7. ' True' → logprob: -3.3505759239196777
    8. 'def' → logprob: -3.6005759239196777
    9. 'if' → logprob: -4.100575923919678
    10. 'for' → logprob: -4.225575923919678

Token 359: ' rely' (ID: 25222)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.004173491150140762
    2. 'can' → logprob: -6.629173278808594
    3. '           ' → logprob: -7.004173278808594
    4. ' def' → logprob: -7.504173278808594
    5. ' will' → logprob: -8.004173278808594
    6. 'def' → logprob: -8.254173278808594
    7. '       ' → logprob: -8.504173278808594
    8. ' may' → logprob: -9.129173278808594
    9. ''ll' → logprob: -9.129173278808594
    10. ' could' → logprob: -9.129173278808594

Token 360: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.09724815934896469
    2. 'on' → logprob: -2.847248077392578
    3. '           ' → logprob: -3.472248077392578
    4. '            ' → logprob: -6.222248077392578
    5. '       ' → logprob: -7.847248077392578
    6. '    ' → logprob: -8.222248077392578
    7. '            
' → logprob: -8.347248077392578
    8. '   ' → logprob: -8.597248077392578
    9. '               ' → logprob: -8.972248077392578
    10. '        ' → logprob: -9.097248077392578

Token 361: ':
' (ID: 734)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5350342988967896
    2. 'self' → logprob: -1.1600342988967896
    3. ' the' → logprob: -3.1600341796875
    4. ' self' → logprob: -3.7850341796875
    5. '   ' → logprob: -5.0350341796875
    6. '       ' → logprob: -5.2850341796875
    7. 'a' → logprob: -5.5350341796875
    8. '           ' → logprob: -5.7850341796875
    9. 'len' → logprob: -6.2850341796875
    10. 'False' → logprob: -6.5350341796875

Token 362: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016167386202141643
    2. ' #' → logprob: -7.626616954803467
    3. '#' → logprob: -7.876616954803467
    4. '       ' → logprob: -8.501616477966309
    5. '            ' → logprob: -8.876616477966309
    6. ' pass' → logprob: -9.001616477966309
    7. ' return' → logprob: -9.501616477966309
    8. 'pass' → logprob: -10.376616477966309
    9. ' for' → logprob: -10.626616477966309
    10. '   ' → logprob: -10.751616477966309

Token 363: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.34039339423179626
    2. '           ' → logprob: -1.9653934240341187
    3. ' #' → logprob: -2.090393304824829
    4. ' for' → logprob: -3.965393304824829
    5. 'for' → logprob: -5.590393543243408
    6. '       ' → logprob: -7.090393543243408
    7. ' return' → logprob: -8.21539306640625
    8. 'return' → logprob: -8.71539306640625
    9. 'def' → logprob: -8.96539306640625
    10. 'import' → logprob: -9.09039306640625

Token 364: ' K' (ID: 658)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14146427810192108
    2. ' #' → logprob: -2.5164642333984375
    3. '           ' → logprob: -3.3914642333984375
    4. ' for' → logprob: -5.5164642333984375
    5. 'for' → logprob: -5.8914642333984375
    6. 'def' → logprob: -6.3914642333984375
    7. 'pass' → logprob: -6.3914642333984375
    8. '       ' → logprob: -6.3914642333984375
    9. ' return' → logprob: -7.0164642333984375
    10. 'return' → logprob: -7.0164642333984375

Token 365: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.02664951980113983
    2. '_' → logprob: -3.6516494750976562
    3. '4' → logprob: -8.776649475097656
    4. '   ' → logprob: -10.526649475097656
    5. '_{' → logprob: -10.776649475097656
    6. '
' → logprob: -10.901649475097656
    7. '  ' → logprob: -11.401649475097656
    8. '
    
' → logprob: -11.526649475097656
    9. '_s' → logprob: -11.651649475097656
    10. ' ' → logprob: -11.776649475097656

Token 366: ' is' (ID: 382)
  Prédit: ' detection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' detection' → logprob: -0.23117579519748688
    2. ' is' → logprob: -2.7311758995056152
    3. ' sub' → logprob: -2.8561758995056152
    4. ' presence' → logprob: -3.9811758995056152
    5. 'sub' → logprob: -4.356175899505615
    6. '_detection' → logprob: -5.606175899505615
    7. '_sub' → logprob: -5.731175899505615
    8. ' contains' → logprob: -5.731175899505615
    9. ' =' → logprob: -5.981175899505615
    10. ' consists' → logprob: -5.981175899505615

Token 367: ' not' (ID: 625)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5799259543418884
    2. ' a' → logprob: -1.4549260139465332
    3. '   ' → logprob: -2.829926013946533
    4. 'the' → logprob: -3.579926013946533
    5. 'not' → logprob: -3.829926013946533
    6. 'complete' → logprob: -4.204926013946533
    7. 'False' → logprob: -4.329926013946533
    8. ' False' → logprob: -4.579926013946533
    9. ' forbidden' → logprob: -4.829926013946533
    10. ' not' → logprob: -4.954926013946533

Token 368: ' planar' (ID: 175798)
  Prédit: 'plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plan' → logprob: -0.763127326965332
    2. 'present' → logprob: -1.763127326965332
    3. 'possible' → logprob: -2.013127326965332
    4. ' planar' → logprob: -2.888127326965332
    5. 'a' → logprob: -3.263127326965332
    6. ' present' → logprob: -3.388127326965332
    7. 'allowed' → logprob: -3.763127326965332
    8. '_plan' → logprob: -4.138127326965332
    9. ' possible' → logprob: -4.263127326965332
    10. ' a' → logprob: -4.513127326965332

Token 369: ' =>' (ID: 871)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 370: ' the' (ID: 290)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6291296482086182
    2. 'return' → logprob: -1.1291296482086182
    3. '#' → logprob: -2.504129648208618
    4. ' if' → logprob: -4.004129409790039
    5. '           ' → logprob: -4.129129409790039
    6. ' #' → logprob: -4.879129409790039
    7. 'if' → logprob: -5.129129409790039
    8. ' any' → logprob: -5.629129409790039
    9. ' for' → logprob: -5.754129409790039
    10. '       ' → logprob: -6.379129409790039

Token 371: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5566794872283936
    2. '#' → logprob: -2.0566794872283936
    3. 'next' → logprob: -2.0566794872283936
    4. 'return' → logprob: -2.9316794872283936
    5. 'K' → logprob: -2.9316794872283936
    6. 'absence' → logprob: -3.4316794872283936
    7. 'complete' → logprob: -3.4316794872283936
    8. 'code' → logprob: -3.5566794872283936
    9. 'class' → logprob: -3.6816794872283936
    10. ' code' → logprob: -3.8066794872283936

Token 372: ' asks' (ID: 31064)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14744682610034943
    2. ' is' → logprob: -3.147446870803833
    3. '<|end|>' → logprob: -3.647446870803833
    4. '.' → logprob: -3.772446870803833
    5. '       ' → logprob: -3.897446870803833
    6. ',' → logprob: -5.522446632385254
    7. '...' → logprob: -5.897446632385254
    8. ' to' → logprob: -6.022446632385254
    9. '<|end|>' → logprob: -6.022446632385254
    10. '   ' → logprob: -6.147446632385254

Token 373: ' about' (ID: 1078)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18776355683803558
    2. ' to' → logprob: -2.4377634525299072
    3. ' for' → logprob: -2.9377634525299072
    4. 'to' → logprob: -4.437763690948486
    5. 'for' → logprob: -4.437763690948486
    6. '       ' → logprob: -5.687763690948486
    7. '#' → logprob: -6.062763690948486
    8. '   ' → logprob: -7.687763690948486
    9. 'def' → logprob: -8.437763214111328
    10. '               ' → logprob: -9.062763214111328

Token 374: ' ' (ID: 220)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.086629033088684
    2. ' K' → logprob: -1.586629033088684
    3. ' complete' → logprob: -2.5866289138793945
    4. ' a' → logprob: -3.0866289138793945
    5. 'complete' → logprob: -3.0866289138793945
    6. ' the' → logprob: -3.4616289138793945
    7. ' non' → logprob: -3.5866289138793945
    8. 'the' → logprob: -3.7116289138793945
    9. 'plan' → logprob: -3.8366289138793945
    10. 'a' → logprob: -4.2116289138793945

Token 375: '1' (ID: 16)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.8428609371185303
    2. 'complete' → logprob: -1.5928609371185303
    3. 'non' → logprob: -2.4678609371185303
    4. 'magic' → logprob: -2.5928609371185303
    5. 'plan' → logprob: -2.7178609371185303
    6. 'real' → logprob: -3.4678609371185303
    7. 'the' → logprob: -4.217861175537109
    8. 'a' → logprob: -4.467861175537109
    9. 'com' → logprob: -4.592861175537109
    10. 'detect' → logprob: -4.592861175537109

Token 376: 'D' (ID: 35)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2226423025131226
    2. '2' → logprob: -1.2226423025131226
    3. ' ' → logprob: -1.8476423025131226
    4. '5' → logprob: -2.597642421722412
    5. ',' → logprob: -4.222642421722412
    6. ' -' → logprob: -4.222642421722412
    7. '   ' → logprob: -4.472642421722412
    8. ' and' → logprob: -4.472642421722412
    9. '
' → logprob: -4.597642421722412
    10. '-' → logprob: -4.722642421722412

Token 377: ' line' (ID: 2543)
  Prédit: ' graphs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graphs' → logprob: -1.7776867151260376
    2. ' or' → logprob: -2.027686595916748
    3. ' and' → logprob: -2.152686595916748
    4. '<|end|>' → logprob: -2.527686595916748
    5. ' def' → logprob: -3.027686595916748
    6. '       ' → logprob: -3.152686595916748
    7. '           ' → logprob: -3.152686595916748
    8. 'def' → logprob: -3.277686595916748
    9. '
' → logprob: -3.277686595916748
    10. '   ' → logprob: -3.402686595916748

Token 378: ' emb' (ID: 6588)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9143854975700378
    2. '           ' → logprob: -1.2893855571746826
    3. '<|end|>' → logprob: -1.6643855571746826
    4. '       ' → logprob: -3.0393855571746826
    5. '        
' → logprob: -3.5393855571746826
    6. 'def' → logprob: -4.0393853187561035
    7. '<|end|>' → logprob: -5.1643853187561035
    8. '            
' → logprob: -5.6643853187561035
    9. ' and' → logprob: -5.7893853187561035
    10. ',' → logprob: -5.7893853187561035

Token 379: 'edd' (ID: 5116)
  Prédit: 'edding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edding' → logprob: -0.19029010832309723
    2. 'edd' → logprob: -2.0652902126312256
    3. 'eddings' → logprob: -3.1902902126312256
    4. 'ed' → logprob: -5.5652899742126465
    5. 'edded' → logprob: -7.4402899742126465
    6. '       ' → logprob: -8.190290451049805
    7. '           ' → logprob: -8.315290451049805
    8. 'eding' → logprob: -8.940290451049805
    9. '   ' → logprob: -10.065290451049805
    10. 'dding' → logprob: -10.190290451049805

Token 380: 'ability' (ID: 3563)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.05001068115234375
    2. 'able' → logprob: -3.4250106811523438
    3. 'ability' → logprob: -4.550010681152344
    4. 'ings' → logprob: -5.425010681152344
    5. 'ed' → logprob: -7.175010681152344
    6. '       ' → logprob: -8.550010681152344
    7. '           ' → logprob: -8.800010681152344
    8. '   ' → logprob: -9.425010681152344
    9. '```' → logprob: -11.050010681152344
    10. 'edding' → logprob: -11.675010681152344

Token 381: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 382: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028294680640101433
    2. '       ' → logprob: -4.403294563293457
    3. '<|end|>' → logprob: -4.778294563293457
    4. '
' → logprob: -5.153294563293457
    5. '   ' → logprob: -8.028294563293457
    6. '<|end|>' → logprob: -8.153294563293457
    7. ' and' → logprob: -8.403294563293457
    8. ',' → logprob: -8.653294563293457
    9. '        
' → logprob: -9.278294563293457
    10. ')' → logprob: -9.778294563293457

Token 383: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08441194891929626
    2. '       ' → logprob: -2.584411859512329
    3. '   ' → logprob: -6.334412097930908
    4. ' pass' → logprob: -6.959412097930908
    5. '<|end|>' → logprob: -7.334412097930908
    6. '#' (adapté à ' #') → logprob: -7.584412097930908
    7. ' return' → logprob: -8.08441162109375
    8. ' ' → logprob: -8.45941162109375
    9. 'pass' → logprob: -9.20941162109375
    10. '               ' → logprob: -9.20941162109375

Token 384: ' We'll' (ID: 46830)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.904061496257782
    2. ' return' → logprob: -1.1540615558624268
    3. '#' → logprob: -2.0290615558624268
    4. 'return' → logprob: -2.7790615558624268
    5. ' #' → logprob: -3.1540615558624268
    6. ' pass' → logprob: -4.029061317443848
    7. '       ' → logprob: -4.654061317443848
    8. 'def' → logprob: -5.529061317443848
    9. ' for' → logprob: -5.904061317443848
    10. 'pass' → logprob: -5.904061317443848

Token 385: ' use' (ID: 1199)
  Prédit: 'implement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'implement' → logprob: -0.31438788771629333
    2. 'check' → logprob: -3.064387798309326
    3. ' implement' → logprob: -3.314387798309326
    4. 'continue' → logprob: -3.314387798309326
    5. 'def' → logprob: -3.439387798309326
    6. 'return' → logprob: -3.689387798309326
    7. 'use' → logprob: -4.189387798309326
    8. 'pass' → logprob: -4.814387798309326
    9. 'not' → logprob: -4.814387798309326
    10. 'complete' → logprob: -4.939387798309326

Token 386: ' a' (ID: 261)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5423775911331177
    2. ' a' → logprob: -1.6673775911331177
    3. 'a' → logprob: -2.292377471923828
    4. 'self' → logprob: -2.542377471923828
    5. ' brute' → logprob: -4.417377471923828
    6. ' the' → logprob: -4.792377471923828
    7. 'the' → logprob: -5.167377471923828
    8. ' back' → logprob: -5.417377471923828
    9. ' clique' → logprob: -5.542377471923828
    10. ' an' → logprob: -5.667377471923828

Token 387: ' heuristic' (ID: 146226)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7357476949691772
    2. ' brute' → logprob: -2.235747814178467
    3. 'dfs' → logprob: -2.735747814178467
    4. ' def' → logprob: -2.860747814178467
    5. 'simple' → logprob: -3.235747814178467
    6. ' simple' → logprob: -3.360747814178467
    7. ' heuristic' → logprob: -3.610747814178467
    8. ' depth' → logprob: -3.860747814178467
    9. 'br' → logprob: -3.860747814178467
    10. ' placeholder' → logprob: -3.860747814178467

Token 388: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47324660420417786
    2. '       ' → logprob: -1.8482465744018555
    3. '
' → logprob: -2.8482465744018555
    4. 'def' → logprob: -3.3482465744018555
    5. '<|end|>' → logprob: -3.3482465744018555
    6. '<|end|>' → logprob: -3.5982465744018555
    7. ' to' → logprob: -4.2232465744018555
    8. ',' → logprob: -4.7232465744018555
    9. '        
' → logprob: -4.8482465744018555
    10. ' for' → logprob: -5.0982465744018555

Token 389: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5579607486724854
    2. '           ' → logprob: -1.3079607486724854
    3. ' return' → logprob: -2.6829607486724854
    4. ' n' → logprob: -3.8079607486724854
    5. 'for' → logprob: -3.8079607486724854
    6. ' pass' → logprob: -4.432960510253906
    7. '       ' → logprob: -4.432960510253906
    8. 'return' → logprob: -5.057960510253906
    9. 'n' → logprob: -5.432960510253906
    10. '#' → logprob: -6.182960510253906

Token 390: ' there's' (ID: 15333)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.4828026592731476
    2. ' any' → logprob: -0.9828026294708252
    3. 'self' → logprob: -5.107802867889404
    4. ' self' → logprob: -6.857802867889404
    5. 'max' → logprob: -7.607802867889404
    6. 'False' → logprob: -7.607802867889404
    7. ' False' → logprob: -7.857802867889404
    8. 'len' → logprob: -9.732802391052246
    9. ' max' → logprob: -10.107802391052246
    10. ' there' → logprob: -10.607802391052246

Token 391: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0420684814453125
    2. ' a' → logprob: -1.2920684814453125
    3. ' any' → logprob: -1.4170684814453125
    4. 'any' → logprob: -2.0420684814453125
    5. ' an' → logprob: -9.167068481445312
    6. 'an' → logprob: -10.042068481445312
    7. 'self' → logprob: -10.167068481445312
    8. ' ' → logprob: -10.292068481445312
    9. ' self' → logprob: -10.417068481445312
    10. '5' → logprob: -10.542068481445312

Token 392: ' complete' (ID: 5533)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.07315366715192795
    2. ' vertex' → logprob: -2.8231537342071533
    3. 'node' → logprob: -4.948153495788574
    4. 'complete' → logprob: -6.073153495788574
    5. 'cl' → logprob: -7.698153495788574
    6. ' node' → logprob: -7.823153495788574
    7. 'v' → logprob: -8.448153495788574
    8. ' clique' → logprob: -9.073153495788574
    9. '```' → logprob: -9.323153495788574
    10. 'degree' → logprob: -10.073153495788574

Token 393: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.021321957930922508
    2. 'sub' → logprob: -3.896322011947632
    3. ' ' → logprob: -8.146322250366211
    4. '_sub' → logprob: -8.646322250366211
    5. ' clique' → logprob: -9.271322250366211
    6. '   ' → logprob: -9.646322250366211
    7. ' subset' → logprob: -10.146322250366211
    8. ' graph' → logprob: -10.396322250366211
    9. ' set' → logprob: -10.771322250366211
    10. '  ' → logprob: -11.646322250366211

Token 394: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.00045474470243789256
    2. 'raph' → logprob: -8.375454902648926
    3. '           ' → logprob: -8.750454902648926
    4. '_graph' → logprob: -10.500454902648926
    5. '               ' → logprob: -11.250454902648926
    6. ' graph' → logprob: -11.625454902648926
    7. '   ' → logprob: -12.500454902648926
    8. 'Graph' → logprob: -13.000454902648926
    9. 'agraph' → logprob: -13.125454902648926
    10. 'set' → logprob: -13.125454902648926

Token 395: ' with' (ID: 483)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0457061268389225
    2. ' with' → logprob: -3.795706033706665
    3. ' on' → logprob: -4.295706272125244
    4. 'of' → logprob: -5.545706272125244
    5. 'with' → logprob: -6.170706272125244
    6. '           ' → logprob: -7.045706272125244
    7. 'on' → logprob: -7.545706272125244
    8. '       ' → logprob: -8.295705795288086
    9. '   ' → logprob: -8.295705795288086
    10. '    ' → logprob: -8.420705795288086

Token 396: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.05713840201497078
    2. ' ' → logprob: -3.807138442993164
    3. ' k' → logprob: -4.432138442993164
    4. ' five' → logprob: -4.807138442993164
    5. 'k' → logprob: -5.307138442993164
    6. 'five' → logprob: -5.557138442993164
    7. '   ' → logprob: -5.932138442993164
    8. 'size' → logprob: -7.182138442993164
    9. ' size' → logprob: -8.307138442993164
    10. '    ' → logprob: -9.057138442993164

Token 397: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0014108279719948769
    2. 'k' → logprob: -7.501410961151123
    3. 'five' → logprob: -7.626410961151123
    4. 'size' → logprob: -8.626410484313965
    5. ' ' → logprob: -9.126410484313965
    6. ' five' → logprob: -11.126410484313965
    7. '```' → logprob: -11.126410484313965
    8. '   ' → logprob: -11.251410484313965
    9. 'node' → logprob: -11.751410484313965
    10. 'vertex' → logprob: -12.251410484313965

Token 398: ' vertices' (ID: 38360)
  Prédit: ' vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertices' → logprob: -0.10648056119680405
    2. ' nodes' → logprob: -2.606480598449707
    3. 'vertices' → logprob: -4.106480598449707
    4. ' connected' → logprob: -5.606480598449707
    5. ' or' → logprob: -6.106480598449707
    6. '   ' → logprob: -6.231480598449707
    7. 'nodes' → logprob: -6.856480598449707
    8. '```' → logprob: -7.731480598449707
    9. 'connected' → logprob: -8.731480598449707
    10. ' vertex' → logprob: -8.731480598449707

Token 399: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1135968267917633
    2. '           ' → logprob: -2.3635969161987305
    3. ' in' → logprob: -4.8635969161987305
    4. '       ' → logprob: -6.8635969161987305
    5. ' or' → logprob: -6.8635969161987305
    6. '               ' → logprob: -7.3635969161987305
    7. ' for' → logprob: -7.9885969161987305
    8. ' and' → logprob: -8.11359691619873
    9. 'def' → logprob: -8.11359691619873
    10. ' ,' → logprob: -8.11359691619873

Token 400: 'K' (ID: 42)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5195144414901733
    2. ')' → logprob: -1.0195144414901733
    3. ' in' → logprob: -4.394514560699463
    4. ',' → logprob: -4.769514560699463
    5. 'in' → logprob: -5.394514560699463
    6. ' ),' → logprob: -6.144514560699463
    7. ' or' → logprob: -6.269514560699463
    8. 'def' → logprob: -6.394514560699463
    9. ' any' → logprob: -6.644514560699463
    10. '           ' → logprob: -6.644514560699463

Token 401: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0015278366627171636
    2. '_' → logprob: -6.501527786254883
    3. '   ' → logprob: -11.251527786254883
    4. '
' → logprob: -11.626527786254883
    5. '    ' → logprob: -14.126527786254883
    6. ' ' → logprob: -14.626527786254883
    7. '    
' → logprob: -14.751527786254883
    8. '```' → logprob: -14.751527786254883
    9. ')' → logprob: -14.876527786254883
    10. '
    
' → logprob: -15.251527786254883

Token 402: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.13589943945407867
    2. ')' → logprob: -2.135899543762207
    3. ',' → logprob: -5.635899543762207
    4. '           ' → logprob: -6.760899543762207
    5. ' in' → logprob: -7.260899543762207
    6. ' or' → logprob: -7.260899543762207
    7. ' ),' → logprob: -7.385899543762207
    8. '       ' → logprob: -7.510899543762207
    9. ')
' → logprob: -7.760899543762207
    10. 'in' → logprob: -8.635899543762207

Token 403: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004328045062720776
    2. '<|end|>' → logprob: -7.00432825088501
    3. '               ' → logprob: -7.12932825088501
    4. '       ' → logprob: -7.12932825088501
    5. 'return' → logprob: -7.87932825088501
    6. '<|end|>' → logprob: -8.254327774047852
    7. ' return' → logprob: -8.379327774047852
    8. '            ' → logprob: -8.629327774047852
    9. ' then' → logprob: -8.879327774047852
    10. '            
' → logprob: -9.504327774047852

Token 404: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.02616548538208
    2. 'return' → logprob: -1.15116548538208
    3. ' return' → logprob: -1.90116548538208
    4. '#' (adapté à ' #') → logprob: -2.02616548538208
    5. '       ' → logprob: -3.52616548538208
    6. 'def' → logprob: -4.90116548538208
    7. '   ' → logprob: -6.27616548538208
    8. '               ' → logprob: -6.77616548538208
    9. ' #' → logprob: -7.77616548538208
    10. ':return' → logprob: -7.77616548538208

Token 405: ' it' (ID: 480)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5876960754394531
    2. '           ' → logprob: -1.4626960754394531
    3. 'return' → logprob: -2.212696075439453
    4. ' return' → logprob: -2.837696075439453
    5. ' for' → logprob: -4.087696075439453
    6. 'for' → logprob: -4.462696075439453
    7. ' #' → logprob: -4.462696075439453
    8. '       ' → logprob: -7.087696075439453
    9. '   ' → logprob: -7.587696075439453
    10. '               ' → logprob: -7.712696075439453

Token 406: ' must' (ID: 2804)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.23970843851566315
    2. ''s' → logprob: -2.739708423614502
    3. ' may' → logprob: -2.989708423614502
    4. ' def' → logprob: -3.614708423614502
    5. 'def' → logprob: -4.114708423614502
    6. 'is' → logprob: -4.114708423614502
    7. ' are' → logprob: -5.239708423614502
    8. ' will' → logprob: -5.239708423614502
    9. ' can' → logprob: -5.364708423614502
    10. '#' → logprob: -5.489708423614502

Token 407: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.960217297077179
    2. 'not' → logprob: -1.4602172374725342
    3. 'be' → logprob: -1.9602172374725342
    4. 'return' → logprob: -2.585217237472534
    5. ' not' → logprob: -2.585217237472534
    6. 'have' → logprob: -3.210217237472534
    7. ' have' → logprob: -4.210217475891113
    8. 'contain' → logprob: -4.585217475891113
    9. 'exist' → logprob: -4.585217475891113
    10. ' return' → logprob: -5.335217475891113

Token 408: ' detected' (ID: 28357)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.8203567266464233
    2. 'det' → logprob: -1.6953567266464233
    3. 'present' → logprob: -1.6953567266464233
    4. ' present' → logprob: -3.320356845855713
    5. 'True' → logprob: -3.320356845855713
    6. 'False' → logprob: -3.695356845855713
    7. 'contained' → logprob: -3.945356845855713
    8. ' detected' → logprob: -4.195356845855713
    9. ' False' → logprob: -4.570356845855713
    10. ' found' → logprob: -4.695356845855713

Token 409: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21811877191066742
    2. '       ' → logprob: -1.9681187868118286
    3. ',' → logprob: -3.468118667602539
    4. '.' → logprob: -5.093118667602539
    5. ' by' → logprob: -5.468118667602539
    6. ' at' → logprob: -5.968118667602539
    7. ' in' → logprob: -5.968118667602539
    8. ' for' → logprob: -6.343118667602539
    9. '   ' → logprob: -6.593118667602539
    10. '<|end|>' → logprob: -6.718118667602539

Token 410: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43469417095184326
    2. '       ' → logprob: -1.5596941709518433
    3. '<|end|>' → logprob: -2.434694290161133
    4. '
' → logprob: -4.309694290161133
    5. '        
' → logprob: -4.309694290161133
    6. ' for' → logprob: -5.059694290161133
    7. 'def' → logprob: -5.309694290161133
    8. '<|end|>' → logprob: -5.934694290161133
    9. ' 
' → logprob: -6.059694290161133
    10. '            
' → logprob: -6.434694290161133

Token 411: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5239533185958862
    2. '       ' → logprob: -2.148953437805176
    3. ' pass' → logprob: -2.398953437805176
    4. ' n' → logprob: -3.023953437805176
    5. ' return' → logprob: -3.148953437805176
    6. 'return' → logprob: -3.648953437805176
    7. 'n' → logprob: -3.648953437805176
    8. 'pass' → logprob: -4.273953437805176
    9. ' for' → logprob: -4.523953437805176
    10. 'def' → logprob: -4.648953437805176

Token 412: ' Detect' (ID: 60694)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1687912940979004
    2. 'def' → logprob: -1.5437912940979004
    3. '       ' → logprob: -2.0437912940979004
    4. '#' → logprob: -2.6687912940979004
    5. ' pass' → logprob: -3.0437912940979004
    6. 'return' → logprob: -3.5437912940979004
    7. ' n' → logprob: -3.5437912940979004
    8. 'n' → logprob: -3.6687912940979004
    9. ' return' → logprob: -3.7937912940979004
    10. ' for' → logprob: -3.7937912940979004

Token 413: 'ing' (ID: 289)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.2935451567173004
    2. '       ' → logprob: -2.4185452461242676
    3. '           ' → logprob: -2.6685452461242676
    4. ' for' → logprob: -3.7935452461242676
    5. 'ing' → logprob: -3.9185452461242676
    6. 'for' → logprob: -3.9185452461242676
    7. 'def' → logprob: -4.543545246124268
    8. '#' → logprob: -5.293545246124268
    9. 'ions' → logprob: -5.668545246124268
    10. 'ed' → logprob: -5.793545246124268

Token 414: ' K' (ID: 658)
  Prédit: ' cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cl' → logprob: -0.8232353329658508
    2. ' K' → logprob: -0.8232353329658508
    3. 'K' → logprob: -2.698235273361206
    4. ' all' → logprob: -3.823235273361206
    5. ' a' → logprob: -4.323235511779785
    6. ' complete' → logprob: -4.948235511779785
    7. 'cl' → logprob: -5.823235511779785
    8. 'complete' → logprob: -6.323235511779785
    9. 'a' → logprob: -6.448235511779785
    10. ' self' → logprob: -7.073235511779785

Token 415: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00034177995985373855
    2. '_' → logprob: -8.000341415405273
    3. '4' → logprob: -12.500341415405273
    4. ' ' → logprob: -13.125341415405273
    5. '   ' → logprob: -16.375341415405273
    6. '_{' → logprob: -16.750341415405273
    7. '  ' → logprob: -16.875341415405273
    8. 'sub' → logprob: -16.875341415405273
    9. '_cl' → logprob: -17.125341415405273
    10. '3' → logprob: -17.125341415405273

Token 416: ' na' (ID: 898)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.626897931098938
    2. '       ' → logprob: -2.2518978118896484
    3. '           ' → logprob: -2.3768978118896484
    4. ' is' → logprob: -2.7518978118896484
    5. 'self' → logprob: -3.1268978118896484
    6. ' involves' → logprob: -3.1268978118896484
    7. '   ' → logprob: -3.6268978118896484
    8. ' self' → logprob: -3.8768978118896484
    9. 'def' → logprob: -4.501897811889648
    10. ' requires' → logprob: -4.751897811889648

Token 417: 'ively' (ID: 5861)
  Prédit: 'ively'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ively' → logprob: -0.04043137654662132
    2. 'ive' → logprob: -3.415431261062622
    3. 'ï' → logprob: -5.790431499481201
    4. 't' → logprob: -5.915431499481201
    5. 'vel' → logprob: -7.790431499481201
    6. 'n' → logprob: -9.040431022644043
    7. 've' → logprob: -9.290431022644043
    8. 'r' → logprob: -9.665431022644043
    9. 'v' → logprob: -9.790431022644043
    10. '#' → logprob: -9.915431022644043

Token 418: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.124418020248413
    2. ' def' → logprob: -1.249418020248413
    3. '           ' → logprob: -1.999418020248413
    4. '       ' → logprob: -2.874418020248413
    5. ',' → logprob: -3.249418020248413
    6. 'def' → logprob: -3.374418020248413
    7. ' for' → logprob: -3.999418020248413
    8. ':' → logprob: -4.124418258666992
    9. ' involves' → logprob: -4.249418258666992
    10. '.' → logprob: -4.499418258666992

Token 419: ' expensive' (ID: 14818)
  Prédit: ' computational'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' computational' → logprob: -0.237335667014122
    2. ' very' → logprob: -2.612335681915283
    3. 'O' → logprob: -3.112335681915283
    4. 'def' → logprob: -3.862335681915283
    5. ' quite' → logprob: -4.112335681915283
    6. ' O' → logprob: -4.737335681915283
    7. 'very' → logprob: -4.987335681915283
    8. ' extremely' → logprob: -5.112335681915283
    9. ' not' → logprob: -5.237335681915283
    10. 'not' → logprob: -5.487335681915283

Token 420: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0193592309951782
    2. '           ' → logprob: -1.2693592309951782
    3. '       ' → logprob: -1.5193592309951782
    4. '.' → logprob: -2.5193591117858887
    5. ' and' → logprob: -4.019359111785889
    6. '
' → logprob: -4.269359111785889
    7. '   ' → logprob: -5.519359111785889
    8. '<|end|>' → logprob: -5.519359111785889
    9. '...' → logprob: -6.144359111785889
    10. ',
' → logprob: -6.144359111785889

Token 421: ' O' (ID: 532)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08865489065647125
    2. ' for' → logprob: -3.3386549949645996
    3. ' n' → logprob: -3.5886549949645996
    4. ' pass' → logprob: -4.7136549949646
    5. '       ' → logprob: -5.3386549949646
    6. ' return' → logprob: -6.4636549949646
    7. 'n' → logprob: -6.5886549949646
    8. ' #' → logprob: -6.9636549949646
    9. '#' → logprob: -7.5886549949646
    10. 'for' → logprob: -7.7136549949646

Token 422: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.016322676092386246
    2. '(N' → logprob: -4.516322612762451
    3. '(' → logprob: -6.016322612762451
    4. '(V' → logprob: -6.516322612762451
    5. '(self' → logprob: -6.891322612762451
    6. '(|' → logprob: -8.89132308959961
    7. '(len' → logprob: -9.01632308959961
    8. '((' → logprob: -11.39132308959961
    9. '(
' → logprob: -11.39132308959961
    10. 'n' → logprob: -11.76632308959961

Token 423: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.3226752281188965
    2. '**' → logprob: -1.3226752281188965
    3. ')' → logprob: -5.5726752281188965
    4. ' **' → logprob: -5.9476752281188965
    5. '
' → logprob: -6.6976752281188965
    6. '³' → logprob: -7.1976752281188965
    7. '```' → logprob: -7.6976752281188965
    8. ' )' → logprob: -8.822675704956055
    9. '²' → logprob: -10.322675704956055
    10. '*' → logprob: -10.322675704956055

Token 424: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0026697113644331694
    2. '2' → logprob: -6.627669811248779
    3. '6' → logprob: -6.752669811248779
    4. '4' → logprob: -9.002669334411621
    5. '3' → logprob: -11.127669334411621
    6. ' ' → logprob: -11.377669334411621
    7. '```' → logprob: -11.877669334411621
    8. '^' → logprob: -12.627669334411621
    9. '
' → logprob: -13.002669334411621
    10. '1' → logprob: -13.252669334411621

Token 425: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017301112413406372
    2. ' )' → logprob: -4.767301082611084
    3. '),' → logprob: -5.142301082611084
    4. ')
' → logprob: -6.017301082611084
    5. ' )
' → logprob: -9.392301559448242
    6. ' ),' → logprob: -9.392301559448242
    7. ').' → logprob: -9.642301559448242
    8. '   ' → logprob: -9.892301559448242
    9. '           ' → logprob: -10.892301559448242
    10. '       ' → logprob: -10.892301559448242

Token 426: ' impossible' (ID: 19786)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 427: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2340996414422989
    2. '       ' → logprob: -2.8590996265411377
    3. ',' → logprob: -2.9840996265411377
    4. '
' → logprob: -3.7340996265411377
    5. ' to' → logprob: -3.8590996265411377
    6. ' for' → logprob: -3.9840996265411377
    7. '.' → logprob: -4.234099864959717
    8. '<|end|>' → logprob: -4.234099864959717
    9. '<|end|>' → logprob: -6.484099864959717
    10. ' in' → logprob: -6.484099864959717

Token 428: ' input' (ID: 3422)
  Prédit: ' large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' large' → logprob: -0.2552916705608368
    2. 'large' → logprob: -1.5052917003631592
    3. '<|end|>' → logprob: -6.38029146194458
    4. ' huge' → logprob: -7.88029146194458
    5. 'larg' → logprob: -8.755291938781738
    6. '<|end|>' → logprob: -9.130291938781738
    7. 'n' → logprob: -9.255291938781738
    8. '_large' → logprob: -9.505291938781738
    9. 'dense' → logprob: -9.755291938781738
    10. '#' → logprob: -9.755291938781738

Token 429: ' sizes' (ID: 16174)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3244565725326538
    2. ' size' → logprob: -1.5744565725326538
    3. '           ' → logprob: -1.8244565725326538
    4. '   ' → logprob: -1.9494565725326538
    5. 'size' → logprob: -1.9494565725326538
    6. '
' → logprob: -3.6994566917419434
    7. ' for' → logprob: -4.449456691741943
    8. ',' → logprob: -5.074456691741943
    9. 's' → logprob: -5.074456691741943
    10. ')' → logprob: -5.199456691741943

Token 430: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11798135936260223
    2. '.' → logprob: -2.992981433868408
    3. ',' → logprob: -3.367981433868408
    4. ' for' → logprob: -4.867981433868408
    5. ')' → logprob: -5.367981433868408
    6. ',
' → logprob: -5.617981433868408
    7. '       ' → logprob: -5.867981433868408
    8. '.
' → logprob: -5.992981433868408
    9. '...' → logprob: -6.242981433868408
    10. '
' → logprob: -7.492981433868408

Token 431: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14440903067588806
    2. '       ' → logprob: -2.644408941268921
    3. '<|end|>' → logprob: -2.894408941268921
    4. '        ' → logprob: -6.1444091796875
    5. '<|end|>' → logprob: -6.2694091796875
    6. '
' → logprob: -7.0194091796875
    7. '        
' → logprob: -7.0194091796875
    8. '            ' → logprob: -7.5194091796875
    9. '   ' → logprob: -8.2694091796875
    10. ' ' → logprob: -8.3944091796875

Token 432: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1180645227432251
    2. '#' (adapté à ' #') → logprob: -2.9930644035339355
    3. '       ' → logprob: -4.2430644035339355
    4. 'n' → logprob: -4.3680644035339355
    5. ' n' → logprob: -4.8680644035339355
    6. 'return' → logprob: -4.8680644035339355
    7. ' #' → logprob: -5.1180644035339355
    8. ' pass' → logprob: -5.4930644035339355
    9. ' return' → logprob: -5.6180644035339355
    10. 'pass' → logprob: -6.6180644035339355

Token 433: ' Instead' (ID: 21050)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6850576996803284
    2. ' n' → logprob: -2.0600576400756836
    3. ' return' → logprob: -2.3100576400756836
    4. 'return' → logprob: -2.5600576400756836
    5. 'n' → logprob: -2.6850576400756836
    6. '#' → logprob: -3.3100576400756836
    7. '       ' → logprob: -3.3100576400756836
    8. ' #' → logprob: -4.060057640075684
    9. 'from' → logprob: -4.810057640075684
    10. 'import' → logprob: -5.560057640075684

Token 434: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03081313520669937
    2. ',' → logprob: -4.030813217163086
    3. '       ' → logprob: -5.780813217163086
    4. 'def' → logprob: -6.030813217163086
    5. ' for' → logprob: -6.155813217163086
    6. '   ' → logprob: -6.905813217163086
    7. '            
' → logprob: -7.655813217163086
    8. ' we' → logprob: -7.780813217163086
    9. '            ' → logprob: -8.030813217163086
    10. ' def' → logprob: -8.280813217163086

Token 435: ' for' (ID: 395)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1920106410980225
    2. '           ' → logprob: -1.4420106410980225
    3. '#' → logprob: -1.6920106410980225
    4. ' return' → logprob: -2.6920106410980225
    5. 'n' → logprob: -3.1920106410980225
    6. '       ' → logprob: -3.5670106410980225
    7. 'for' → logprob: -3.5670106410980225
    8. ' n' → logprob: -3.9420106410980225
    9. ' #' → logprob: -4.067010879516602
    10. 'degree' → logprob: -4.067010879516602

Token 436: ' sophistication' (ID: 112044)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11865322291851044
    2. ' v' → logprob: -2.4936532974243164
    3. 'u' → logprob: -3.9936532974243164
    4. 'vertex' → logprob: -5.618653297424316
    5. ' u' → logprob: -6.368653297424316
    6. ' vertex' → logprob: -6.868653297424316
    7. 'each' → logprob: -6.993653297424316
    8. 'self' → logprob: -6.993653297424316
    9. 'now' → logprob: -8.118653297424316
    10. 'i' → logprob: -8.368653297424316

Token 437: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32316890358924866
    2. '           ' → logprob: -1.3231688737869263
    3. ' we' → logprob: -6.198168754577637
    4. '       ' → logprob: -6.323168754577637
    5. 'def' → logprob: -6.948168754577637
    6. '...' → logprob: -7.198168754577637
    7. ' ,' → logprob: -7.198168754577637
    8. '            
' → logprob: -7.448168754577637
    9. ':' → logprob: -7.698168754577637
    10. 'we' → logprob: -7.823168754577637

Token 438: ' future' (ID: 5277)
  Prédit: 'simp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simp' → logprob: -0.36442700028419495
    2. 'brev' → logprob: -2.114427089691162
    3. ' brev' → logprob: -3.114427089691162
    4. 'eff' → logprob: -3.114427089691162
    5. 'performance' → logprob: -3.489427089691162
    6. 'pr' → logprob: -3.489427089691162
    7. ' correctness' → logprob: -5.364427089691162
    8. 'clar' → logprob: -5.489427089691162
    9. 'correct' → logprob: -5.614427089691162
    10. 'read' → logprob: -5.864427089691162

Token 439: ' extension' (ID: 15369)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -1.1818150281906128
    2. 'extensions' → logprob: -1.1818150281906128
    3. 'proof' → logprob: -2.4318151473999023
    4. ' use' → logprob: -3.0568151473999023
    5. 'exp' → logprob: -3.0568151473999023
    6. 'implementation' → logprob: -3.4318151473999023
    7. 'implement' → logprob: -3.4318151473999023
    8. 'def' → logprob: -3.6818151473999023
    9. 'expand' → logprob: -3.8068151473999023
    10. 'work' → logprob: -4.056815147399902

Token 440: ',
' (ID: 412)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39388155937194824
    2. ',' → logprob: -1.1438815593719482
    3. '       ' → logprob: -6.393881797790527
    4. ':' → logprob: -6.393881797790527
    5. '.' → logprob: -6.893881797790527
    6. '<|end|>' → logprob: -7.018881797790527
    7. ' we' → logprob: -7.893881797790527
    8. ' ,' → logprob: -8.268881797790527
    9. '               ' → logprob: -8.768881797790527
    10. '<|end|>' → logprob: -8.893881797790527

Token 441: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00720418244600296
    2. '       ' → logprob: -5.257204055786133
    3. 'return' → logprob: -8.007204055786133
    4. ' pass' → logprob: -8.132204055786133
    5. ' return' → logprob: -8.507204055786133
    6. '            ' → logprob: -8.632204055786133
    7. 'pass' → logprob: -8.882204055786133
    8. ' we' → logprob: -9.007204055786133
    9. '<|end|>' → logprob: -9.007204055786133
    10. '   ' → logprob: -9.007204055786133

Token 442: ' #' (ID: 1069)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.8062978982925415
    2. '           ' → logprob: -2.056297779083252
    3. 'def' → logprob: -2.056297779083252
    4. 'return' → logprob: -2.181297779083252
    5. '       ' → logprob: -2.431297779083252
    6. ' pass' → logprob: -3.056297779083252
    7. '#' (adapté à ' #') → logprob: -3.306297779083252
    8. ' return' → logprob: -4.806297779083252
    9. '   ' → logprob: -5.931297779083252
    10. 'import' → logprob: -7.556297779083252

Token 443: ' we' (ID: 581)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.4513794183731079
    2. '#' → logprob: -1.576379418373108
    3. ' pass' → logprob: -2.8263792991638184
    4. '           ' → logprob: -2.9513792991638184
    5. 'return' → logprob: -3.7013792991638184
    6. 'def' → logprob: -4.826379299163818
    7. '       ' → logprob: -4.951379299163818
    8. ' #' → logprob: -6.451379299163818
    9. 'self' → logprob: -6.701379299163818
    10. 'for' → logprob: -7.451379299163818

Token 444: ' prepare' (ID: 13708)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8645311594009399
    2. 'pass' → logprob: -1.36453115940094
    3. ' def' → logprob: -2.1145310401916504
    4. 'return' → logprob: -3.2395310401916504
    5. ' pass' → logprob: -3.2395310401916504
    6. ' can' → logprob: -3.4895310401916504
    7. '#' → logprob: -4.11453104019165
    8. '       ' → logprob: -4.23953104019165
    9. ' will' → logprob: -4.36453104019165
    10. 'can' → logprob: -4.73953104019165

Token 445: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3734040260314941
    2. 'pass' → logprob: -1.6234040260314941
    3. ' to' → logprob: -1.8734040260314941
    4. ' a' → logprob: -2.498404026031494
    5. '       ' → logprob: -2.623404026031494
    6. '           ' → logprob: -2.748404026031494
    7. ' pass' → logprob: -3.248404026031494
    8. ' for' → logprob: -3.748404026031494
    9. 'to' → logprob: -3.748404026031494
    10. 'self' → logprob: -4.123404026031494

Token 446: ' high' (ID: 1932)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39267969131469727
    2. ' def' → logprob: -2.5176796913146973
    3. ' method' → logprob: -2.7676796913146973
    4. 'pass' → logprob: -3.2676796913146973
    5. 'self' → logprob: -3.6426796913146973
    6. 'from' → logprob: -3.7676796913146973
    7. 'neighbor' → logprob: -4.017679691314697
    8. ' pass' → logprob: -4.142679691314697
    9. 'method' → logprob: -4.642679691314697
    10. '   ' → logprob: -4.892679691314697

Token 447: '-level' (ID: 19231)
  Prédit: '-level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-level' → logprob: -0.07876330614089966
    2. '           ' → logprob: -3.703763246536255
    3. 'level' → logprob: -4.078763484954834
    4. '       ' → logprob: -4.953763484954834
    5. ' level' → logprob: -5.078763484954834
    6. 'lighter' → logprob: -5.453763484954834
    7. '-quality' → logprob: -5.953763484954834
    8. 'def' → logprob: -5.953763484954834
    9. '-' → logprob: -6.203763484954834
    10. '_level' → logprob: -6.453763484954834

Token 448: ' function' (ID: 1114)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.22727717459201813
    2. 'def' → logprob: -2.4772772789001465
    3. ' pass' → logprob: -3.1022772789001465
    4. 'comment' → logprob: -4.2272772789001465
    5. ' placeholder' → logprob: -5.1022772789001465
    6. 'method' → logprob: -5.1022772789001465
    7. ' outline' → logprob: -5.2272772789001465
    8. 'outline' → logprob: -5.2272772789001465
    9. 'placeholder' → logprob: -5.6022772789001465
    10. 'template' → logprob: -5.6022772789001465

Token 449: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4004461467266083
    2. '           ' → logprob: -2.5254461765289307
    3. '   ' → logprob: -2.7754461765289307
    4. 'def' → logprob: -2.7754461765289307
    5. '<|end|>' → logprob: -3.5254461765289307
    6. ' to' → logprob: -3.9004461765289307
    7. ' that' → logprob: -3.9004461765289307
    8. '
' → logprob: -4.275445938110352
    9. ' for' → logprob: -4.900445938110352
    10. '.' → logprob: -5.025445938110352

Token 450: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2712538242340088
    2. '       ' → logprob: -1.5212538242340088
    3. 'pass' → logprob: -1.5212538242340088
    4. 'def' → logprob: -1.7712538242340088
    5. ' pass' → logprob: -3.021253824234009
    6. ' but' → logprob: -3.396253824234009
    7. '   ' → logprob: -4.77125358581543
    8. 'return' → logprob: -5.02125358581543
    9. ' def' → logprob: -5.27125358581543
    10. 'but' → logprob: -5.52125358581543

Token 451: ' here' (ID: 2105)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4050859808921814
    2. 'return' → logprob: -1.7800860404968262
    3. 'pass' → logprob: -2.030086040496826
    4. ' return' → logprob: -4.405086040496826
    5. ' pass' → logprob: -4.530086040496826
    6. '       ' → logprob: -5.030086040496826
    7. '#' → logprob: -6.280086040496826
    8. 'def' → logprob: -7.780086040496826
    9. '   ' → logprob: -8.030085563659668
    10. '               ' → logprob: -8.280085563659668

Token 452: ' do' (ID: 621)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006692749448120594
    2. 'return' → logprob: -5.631692886352539
    3. ' return' → logprob: -6.131692886352539
    4. 'pass' → logprob: -7.631692886352539
    5. ' pass' → logprob: -8.881692886352539
    6. '       ' → logprob: -9.131692886352539
    7. '               ' → logprob: -10.256692886352539
    8. ',' → logprob: -10.631692886352539
    9. 'def' → logprob: -10.756692886352539
    10. ' we' → logprob: -11.006692886352539

Token 453: ' a' (ID: 261)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.7118264436721802
    2. '   ' → logprob: -1.5868264436721802
    3. 'return' → logprob: -1.5868264436721802
    4. ' return' → logprob: -2.8368263244628906
    5. ' pass' → logprob: -3.8368263244628906
    6. '           ' → logprob: -4.961826324462891
    7. ' nothing' → logprob: -5.211826324462891
    8. 'nothing' → logprob: -6.086826324462891
    9. '       ' → logprob: -6.211826324462891
    10. '
' → logprob: -6.836826324462891

Token 454: ' special' (ID: 3582)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.010668235830962658
    2. ' pass' → logprob: -5.2606682777404785
    3. 'return' → logprob: -5.3856682777404785
    4. '   ' → logprob: -8.01066780090332
    5. ' return' → logprob: -8.51066780090332
    6. 'def' → logprob: -9.51066780090332
    7. ' placeholder' → logprob: -9.51066780090332
    8. 'stub' → logprob: -10.01066780090332
    9. 'placeholder' → logprob: -10.26066780090332
    10. '       ' → logprob: -10.88566780090332

Token 455: ' check' (ID: 2371)
  Prédit: ' case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.7631862759590149
    2. 'case' → logprob: -0.7631862759590149
    3. '   ' → logprob: -3.88818621635437
    4. ' check' → logprob: -4.138186454772949
    5. '-case' → logprob: -4.888186454772949
    6. 'ized' → logprob: -5.138186454772949
    7. '_case' → logprob: -5.138186454772949
    8. '       ' → logprob: -6.013186454772949
    9. 'check' → logprob: -6.138186454772949
    10. 'ize' → logprob: -6.763186454772949

Token 456: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04759293049573898
    2. ' for' → logprob: -3.797592878341675
    3. '<|end|>' → logprob: -4.547593116760254
    4. '       ' → logprob: -5.297593116760254
    5. '.' → logprob: -5.672593116760254
    6. ' at' → logprob: -6.547593116760254
    7. '<|end|>' → logprob: -7.672593116760254
    8. ',' → logprob: -7.797593116760254
    9. '...' → logprob: -8.047593116760254
    10. ' to' → logprob: -8.422593116760254

Token 457: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047087326645851135
    2. '       ' → logprob: -3.7970874309539795
    3. '<|end|>' → logprob: -3.9220874309539795
    4. ' pass' → logprob: -6.6720871925354
    5. 'pass' → logprob: -7.5470871925354
    6. '   ' → logprob: -7.7970871925354
    7. 'return' → logprob: -7.7970871925354
    8. '            ' → logprob: -8.797087669372559
    9. '               ' → logprob: -8.922087669372559
    10. '<|end|>' → logprob: -8.922087669372559

Token 458: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6202799677848816
    2. '           ' → logprob: -0.9952799677848816
    3. 'pass' → logprob: -3.4952800273895264
    4. 'for' → logprob: -4.245279788970947
    5. '       ' → logprob: -4.370279788970947
    6. 'n' → logprob: -4.495279788970947
    7. '#' (adapté à ' #') → logprob: -4.995279788970947
    8. 'degree' → logprob: -5.245279788970947
    9. ' return' → logprob: -5.620279788970947
    10. 'deg' → logprob: -6.120279788970947

Token 459: ' We'll' (ID: 46830)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28169187903404236
    2. 'return' → logprob: -2.281691789627075
    3. ' return' → logprob: -3.156691789627075
    4. ' pass' → logprob: -3.281691789627075
    5. 'n' → logprob: -3.656691789627075
    6. 'pass' → logprob: -4.031692028045654
    7. '       ' → logprob: -5.031692028045654
    8. ' n' → logprob: -5.281692028045654
    9. '#' → logprob: -6.406692028045654
    10. ' for' → logprob: -6.531692028045654

Token 460: ' implement' (ID: 6365)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.11608505994081497
    2. 'return' → logprob: -3.1160850524902344
    3. 'def' → logprob: -3.3660850524902344
    4. 'continue' → logprob: -4.991085052490234
    5. ' check' → logprob: -5.116085052490234
    6. '   ' → logprob: -5.116085052490234
    7. 'implement' → logprob: -5.866085052490234
    8. '       ' → logprob: -6.366085052490234
    9. 'detect' → logprob: -6.616085052490234
    10. 'stop' → logprob: -6.741085052490234

Token 461: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3778952360153198
    2. 'a' → logprob: -2.2528953552246094
    3. ' only' → logprob: -2.3778953552246094
    4. 'def' → logprob: -3.0028953552246094
    5. ' def' → logprob: -4.377895355224609
    6. '       ' → logprob: -4.502895355224609
    7. 'only' → logprob: -4.752895355224609
    8. ' the' → logprob: -4.877895355224609
    9. ' an' → logprob: -5.377895355224609
    10. ' for' → logprob: -5.502895355224609

Token 462: ' abstraction' (ID: 129564)
  Prédit: 'early'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'early' → logprob: -0.36216506361961365
    2. 'if' → logprob: -2.4871649742126465
    3. ' early' → logprob: -2.7371649742126465
    4. 'efficient' → logprob: -3.2371649742126465
    5. 'import' → logprob: -3.6121649742126465
    6. 'def' → logprob: -4.1121649742126465
    7. 'adj' → logprob: -4.2371649742126465
    8. 'optimized' → logprob: -4.4871649742126465
    9. ' efficient' → logprob: -4.9871649742126465
    10. ' adjacency' → logprob: -4.9871649742126465

Token 463: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6694852709770203
    2. '<|end|>' → logprob: -2.169485330581665
    3. '       ' → logprob: -2.419485330581665
    4. ' for' → logprob: -2.544485330581665
    5. '.' → logprob: -3.669485330581665
    6. '   ' → logprob: -3.794485330581665
    7. ' here' → logprob: -3.794485330581665
    8. ',' → logprob: -3.919485330581665
    9. 'def' → logprob: -3.919485330581665
    10. '...' → logprob: -4.044485092163086

Token 464: ' actual' (ID: 6290)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25117751955986023
    2. ' pass' → logprob: -2.1261775493621826
    3. '<|end|>' → logprob: -2.7511775493621826
    4. '       ' → logprob: -4.6261773109436035
    5. 'pass' → logprob: -4.6261773109436035
    6. ' return' → logprob: -5.3761773109436035
    7. 'def' → logprob: -5.6261773109436035
    8. 'return' → logprob: -5.6261773109436035
    9. '<|end|>' → logprob: -6.2511773109436035
    10. '
' → logprob: -7.1261773109436035

Token 465: ' detection' (ID: 28385)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7526136040687561
    2. ' implementation' → logprob: -1.7526135444641113
    3. 'code' → logprob: -2.1276135444641113
    4. ' code' → logprob: -2.1276135444641113
    5. 'implementation' → logprob: -2.7526135444641113
    6. 'd' → logprob: -4.002613544464111
    7. 'pass' → logprob: -4.377613544464111
    8. '#' → logprob: -5.002613544464111
    9. ' detection' → logprob: -5.377613544464111
    10. '_code' → logprob: -6.002613544464111

Token 466: ' skipped' (ID: 72521)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7272917628288269
    2. '   ' → logprob: -0.9772917628288269
    3. 'def' → logprob: -3.1022918224334717
    4. '<|end|>' → logprob: -3.7272918224334717
    5. ' is' → logprob: -4.102291584014893
    6. ' def' → logprob: -4.352291584014893
    7. '           ' → logprob: -4.477291584014893
    8. '<|end|>' → logprob: -4.727291584014893
    9. '.' → logprob: -5.852291584014893
    10. ' of' → logprob: -5.852291584014893

Token 467: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26776260137557983
    2. '<|end|>' → logprob: -1.5177626609802246
    3. '       ' → logprob: -4.767762660980225
    4. '
' → logprob: -6.392762660980225
    5. '.' → logprob: -6.517762660980225
    6. '   ' → logprob: -6.517762660980225
    7. '<|end|>' → logprob: -6.642762660980225
    8. '          ' → logprob: -8.767762184143066
    9. ' ' → logprob: -9.017762184143066
    10. '               ' → logprob: -9.142762184143066

Token 468: 'not' (ID: 2878)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.8829152584075928
    2. ')' → logprob: -1.2579152584075928
    3. 'return' → logprob: -1.2579152584075928
    4. ' pass' → logprob: -5.257915496826172
    5. '           ' → logprob: -6.007915496826172
    6. '       ' → logprob: -6.007915496826172
    7. '#' → logprob: -6.507915496826172
    8. ')return' → logprob: -6.507915496826172
    9. ' return' → logprob: -6.632915496826172
    10. ' )' → logprob: -7.132915496826172

Token 469: ' feasible' (ID: 58866)
  Prédit: 'implemented'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'implemented' → logprob: -0.005355432629585266
    2. ' implemented' → logprob: -5.255355358123779
    3. 'shown' → logprob: -9.755355834960938
    4. '   ' → logprob: -11.380355834960938
    5. '       ' → logprob: -11.630355834960938
    6. 'Implemented' → logprob: -12.005355834960938
    7. '```' → logprob: -12.130355834960938
    8. ')' → logprob: -12.130355834960938
    9. 'needed' → logprob: -12.255355834960938
    10. ' shown' → logprob: -12.505355834960938

Token 470: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04935936629772186
    2. ' here' → logprob: -3.6743593215942383
    3. ' for' → logprob: -4.549359321594238
    4. ').' → logprob: -5.174359321594238
    5. '           ' → logprob: -6.049359321594238
    6. ' )' → logprob: -6.924359321594238
    7. '       ' → logprob: -6.924359321594238
    8. ' in' → logprob: -7.299359321594238
    9. '   ' → logprob: -7.424359321594238
    10. 'for' → logprob: -8.299359321594238

Token 471: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019507692195475101
    2. 'return' → logprob: -9.125195503234863
    3. '       ' → logprob: -9.625195503234863
    4. '
' → logprob: -12.000195503234863
    5. 'pass' → logprob: -12.250195503234863
    6. ' return' → logprob: -12.375195503234863
    7. '   ' → logprob: -13.250195503234863
    8. ' pass' → logprob: -14.000195503234863
    9. '<|end|>' → logprob: -14.125195503234863
    10. '               ' → logprob: -14.250195503234863

Token 472: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2069804072380066
    2. '           ' → logprob: -1.7069804668426514
    3. 'pass' → logprob: -5.581980228424072
    4. '       ' → logprob: -6.706980228424072
    5. ' return' → logprob: -7.581980228424072
    6. ' pass' → logprob: -10.70698070526123
    7. '   ' → logprob: -11.08198070526123
    8. '
' → logprob: -11.58198070526123
    9. 'raise' → logprob: -12.95698070526123
    10. '               ' → logprob: -13.08198070526123

Token 473: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00861456897109747
    2. ' False' → logprob: -4.758614540100098
    3. '(False' → logprob: -18.883615493774414
    4. '   ' → logprob: -20.883615493774414
    5. '=False' → logprob: -21.633615493774414
    6. '_false' → logprob: -21.633615493774414
    7. 'false' → logprob: -22.258615493774414
    8. '
' → logprob: -22.633615493774414
    9. '.False' → logprob: -23.758615493774414
    10. 'self' → logprob: -23.758615493774414

Token 474: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 476: ' Placeholder' (ID: 175443)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 477: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 478: ' this' (ID: 495)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.010624122805893421
    2. 'current' → logprob: -5.010623931884766
    3. 'the' → logprob: -5.635623931884766
    4. 'code' → logprob: -9.135623931884766
    5. ' this' → logprob: -9.260623931884766
    6. 'def' → logprob: -9.635623931884766
    7. 'complete' → logprob: -11.135623931884766
    8. '#' → logprob: -11.510623931884766
    9. 'self' → logprob: -11.635623931884766
    10. 'Code' → logprob: -12.010623931884766

Token 479: ' implementation' (ID: 13847)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.28142136335372925
    2. ' class' → logprob: -2.281421422958374
    3. 'return' → logprob: -2.781421422958374
    4. ' code' → logprob: -3.781421422958374
    5. 'method' → logprob: -4.281421184539795
    6. ' return' → logprob: -4.531421184539795
    7. ' implementation' → logprob: -5.031421184539795
    8. 'context' → logprob: -5.156421184539795
    9. ' method' → logprob: -5.406421184539795
    10. 'def' → logprob: -5.906421184539795

Token 480: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 481: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 482: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 483: ' _' (ID: 1175)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -1.1552006006240845
    2. 'detect' → logprob: -1.5302006006240845
    3. 'find' → logprob: -1.9052006006240845
    4. 'dfs' → logprob: -2.030200481414795
    5. 'is' → logprob: -2.780200481414795
    6. 'check' → logprob: -3.030200481414795
    7. 'count' → logprob: -3.405200481414795
    8. '_' → logprob: -5.030200481414795
    9. 'contains' → logprob: -5.030200481414795
    10. 'get' → logprob: -5.155200481414795

Token 484: 'find' (ID: 6555)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.08101946860551834
    2. 'check' → logprob: -3.956019401550293
    3. 'find' → logprob: -4.081019401550293
    4. 'count' → logprob: -4.581019401550293
    5. 'is' → logprob: -4.831019401550293
    6. 'has' → logprob: -4.831019401550293
    7. 'get' → logprob: -5.956019401550293
    8. 'degree' → logprob: -6.081019401550293
    9. 'neighbors' → logprob: -6.206019401550293
    10. 'b' → logprob: -6.706019401550293

Token 485: '_complete' (ID: 67286)
  Prédit: '_cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -0.19127242267131805
    2. '_complete' → logprob: -1.9412723779678345
    3. '_k' → logprob: -4.066272258758545
    4. '_common' → logprob: -5.941272258758545
    5. '_sub' → logprob: -6.316272258758545
    6. '_' → logprob: -6.566272258758545
    7. '_max' → logprob: -6.941272258758545
    8. '_connected' → logprob: -7.066272258758545
    9. '_neighbors' → logprob: -7.066272258758545
    10. 'cl' → logprob: -7.316272258758545

Token 486: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.00551180774345994
    2. '_neighbors' → logprob: -5.63051176071167
    3. 'sub' → logprob: -7.50551176071167
    4. '_ne' → logprob: -7.63051176071167
    5. '_cl' → logprob: -7.75551176071167
    6. '<|end|>' → logprob: -8.880512237548828
    7. '_neighbor' → logprob: -9.005512237548828
    8. '_subset' → logprob: -9.630512237548828
    9. '_vertices' → logprob: -10.755512237548828
    10. '_component' → logprob: -11.380512237548828

Token 487: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.011076947674155235
    2. 'raph' → logprob: -4.761076927185059
    3. 'graphs' → logprob: -6.011076927185059
    4. '_graph' → logprob: -12.136076927185059
    5. 'agraph' → logprob: -14.636076927185059
    6. 'Graph' → logprob: -14.636076927185059
    7. 'g' → logprob: -14.636076927185059
    8. '	graph' → logprob: -14.761076927185059
    9. '(graph' → logprob: -15.386076927185059
    10. 'gra' → logprob: -15.636076927185059

Token 488: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010667511960491538
    2. '(' → logprob: -7.7510666847229
    3. 's' → logprob: -8.501067161560059
    4. 'self' → logprob: -8.751067161560059
    5. '<|end|>' → logprob: -9.001067161560059
    6. '_with' → logprob: -10.376067161560059
    7. '(
' → logprob: -10.626067161560059
    8. '   ' → logprob: -11.001067161560059
    9. '_' → logprob: -11.251067161560059
    10. '       ' → logprob: -11.626067161560059

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006998223252594471
    2. 'self' → logprob: -5.006998062133789
    3. ' ,' → logprob: -9.256998062133789
    4. ',self' → logprob: -9.631998062133789
    5. 's' → logprob: -10.381998062133789
    6. '(self' → logprob: -10.631998062133789
    7. ',s' → logprob: -11.506998062133789
    8. ',k' → logprob: -11.631998062133789
    9. ',v' → logprob: -11.631998062133789
    10. ')' → logprob: -11.631998062133789

Token 490: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3287600874900818
    2. 'size' → logprob: -2.5787601470947266
    3. ' k' → logprob: -2.9537601470947266
    4. ')' → logprob: -3.3287601470947266
    5. 'vertices' → logprob: -3.3287601470947266
    6. ' size' → logprob: -3.9537601470947266
    7. 'self' → logprob: -4.078760147094727
    8. ' vertices' → logprob: -4.203760147094727
    9. 'nodes' → logprob: -4.703760147094727
    10. ' nodes' → logprob: -4.953760147094727

Token 491: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0638856366276741
    2. '):' → logprob: -2.8138856887817383
    3. '):
' → logprob: -6.813885688781738
    4. 'self' → logprob: -8.188885688781738
    5. ' ,' → logprob: -8.438885688781738
    6. ')' → logprob: -9.063885688781738
    7. ':' → logprob: -9.438885688781738
    8. '5' → logprob: -10.188885688781738
    9. '(self' → logprob: -10.688885688781738
    10. ',k' → logprob: -10.938885688781738

Token 492: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21550357341766357
    2. ' pass' → logprob: -1.7155035734176636
    3. 'pass' → logprob: -4.465503692626953
    4. '<|end|>' → logprob: -7.090503692626953
    5. '       ' → logprob: -7.340503692626953
    6. '...' → logprob: -8.090503692626953
    7. '   ' → logprob: -8.965503692626953
    8. '(self' → logprob: -9.465503692626953
    9. ' (' → logprob: -9.590503692626953
    10. '#' → logprob: -9.840503692626953

Token 493: ' #' (ID: 1069)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.039046511054039
    2. ' pass' → logprob: -3.2890465259552
    3. '       ' → logprob: -7.164046287536621
    4. '#' (adapté à ' #') → logprob: -9.289046287536621
    5. 'return' → logprob: -9.539046287536621
    6. '	pass' → logprob: -10.164046287536621
    7. 'n' → logprob: -11.039046287536621
    8. '...' → logprob: -12.289046287536621
    9. '<|end|>' → logprob: -13.289046287536621
    10. '           ' → logprob: -13.789046287536621

Token 494: ' Placeholder' (ID: 175443)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -4.842555426876061e-06
    2. ' pass' → logprob: -12.500004768371582
    3. '#' → logprob: -14.250004768371582
    4. 'return' → logprob: -15.875004768371582
    5. '   ' → logprob: -16.1250057220459
    6. '       ' → logprob: -17.0000057220459
    7. '	pass' → logprob: -18.5000057220459
    8. 'pas' → logprob: -19.5000057220459
    9. '           ' → logprob: -19.8750057220459
    10. '...' → logprob: -20.1250057220459

Token 495: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2892611622810364
    2. '<|end|>' → logprob: -2.6642611026763916
    3. 'pass' → logprob: -2.7892611026763916
    4. '   ' → logprob: -3.0392611026763916
    5. '(self' → logprob: -3.5392611026763916
    6. ' pass' → logprob: -3.9142611026763916
    7. 'return' → logprob: -4.914261341094971
    8. 'def' → logprob: -5.414261341094971
    9. '(' → logprob: -5.789261341094971
    10. '
' → logprob: -5.914261341094971

Token 496: ' future' (ID: 5277)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.20482535660266876
    2. 'None' → logprob: -2.0798254013061523
    3. '...' → logprob: -3.0798254013061523
    4. 'def' → logprob: -5.579825401306152
    5. ' pass' → logprob: -5.704825401306152
    6. 'Not' → logprob: -5.954825401306152
    7. ' None' → logprob: -6.079825401306152
    8. '#' → logprob: -7.329825401306152
    9. 'complete' → logprob: -7.704825401306152
    10. 'the' → logprob: -7.704825401306152

Token 497: ' extension' (ID: 15369)
  Prédit: ' implementation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' implementation' → logprob: -0.2525385916233063
    2. 'implementation' → logprob: -2.0025386810302734
    3. 'def' → logprob: -3.3775386810302734
    4. '<|end|>' → logprob: -3.5025386810302734
    5. ' code' → logprob: -4.627538681030273
    6. ' implementations' → logprob: -5.127538681030273
    7. ' def' → logprob: -6.127538681030273
    8. 'code' → logprob: -6.627538681030273
    9. '...' → logprob: -7.252538681030273
    10. ' detection' → logprob: -7.502538681030273

Token 498: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 499: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6298276782035828
    2. '           ' → logprob: -1.1298277378082275
    3. ' pass' → logprob: -2.6298277378082275
    4. 'pass' → logprob: -2.7548277378082275
    5. '   ' → logprob: -4.879827499389648
    6. 'return' → logprob: -7.504827499389648
    7. ' return' → logprob: -8.754827499389648
    8. '	pass' → logprob: -8.879827499389648
    9. '               ' → logprob: -10.379827499389648
    10. '	       ' → logprob: -12.004827499389648

Token 500: ' #' (ID: 1069)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.0003862245939671993
    2. ' pass' → logprob: -8.000386238098145
    3. 'return' → logprob: -10.000386238098145
    4. '       ' → logprob: -12.250386238098145
    5. '   ' → logprob: -15.000386238098145
    6. '           ' → logprob: -15.250386238098145
    7. 'pas' → logprob: -18.125385284423828
    8. '	pass' → logprob: -19.000385284423828
    9. ' return' → logprob: -19.875385284423828
    10. 'raise' → logprob: -20.375385284423828

Token 501: ' sophisticated' (ID: 36278)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.025236686691641808
    2. ' pass' → logprob: -3.7752366065979004
    3. '       ' → logprob: -6.5252366065979
    4. 'return' → logprob: -7.7752366065979
    5. '           ' → logprob: -9.400237083435059
    6. '   ' → logprob: -10.900237083435059
    7. ' return' → logprob: -14.025237083435059
    8. '	pass' → logprob: -14.150237083435059
    9. 'pas' → logprob: -15.400237083435059
    10. '               ' → logprob: -16.525236129760742

Token 502: ' algorithm' (ID: 22184)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.7065216898918152
    2. 'd' → logprob: -1.45652174949646
    3. ' code' → logprob: -2.58152174949646
    4. ' pass' → logprob: -2.95652174949646
    5. ' detection' → logprob: -3.20652174949646
    6. ' algorithms' → logprob: -3.95652174949646
    7. ' algorithm' → logprob: -4.206521511077881
    8. ' methods' → logprob: -4.581521511077881
    9. 'def' → logprob: -4.581521511077881
    10. ' implementation' → logprob: -4.831521511077881

Token 503: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16821452975273132
    2. ' pass' → logprob: -1.9182145595550537
    3. 'pass' → logprob: -5.668214321136475
    4. '<|end|>' → logprob: -6.543214321136475
    5. '       ' → logprob: -6.793214321136475
    6. '...' → logprob: -7.418214321136475
    7. '   ' → logprob: -7.668214321136475
    8. ' (' → logprob: -8.543214797973633
    9. ' not' → logprob: -9.793214797973633
    10. '	pass' → logprob: -9.918214797973633

Token 504: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.4750041663646698
    2. 'detect' → logprob: -1.3500041961669922
    3. ' find' → logprob: -2.225004196166992
    4. ' detect' → logprob: -4.725004196166992
    5. 'check' → logprob: -7.100004196166992
    6. ' check' → logprob: -7.350004196166992
    7. 'search' → logprob: -8.725004196166992
    8. 'identify' → logprob: -8.850004196166992
    9. 'det' → logprob: -9.600004196166992
    10. '#' → logprob: -10.225004196166992

Token 505: ' K' (ID: 658)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complete' → logprob: -0.751784086227417
    2. 'k' → logprob: -1.001784086227417
    3. 'a' → logprob: -2.126784086227417
    4. 'cl' → logprob: -3.376784086227417
    5. ' complete' → logprob: -5.251784324645996
    6. ' k' → logprob: -6.376784324645996
    7. ' cl' → logprob: -8.251784324645996
    8. ' a' → logprob: -8.376784324645996
    9. '#' → logprob: -8.751784324645996
    10. 'all' → logprob: -9.376784324645996

Token 506: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.036743272095918655
    2. '5' → logprob: -3.9117431640625
    3. '_k' → logprob: -4.1617431640625
    4. ' k' → logprob: -8.0367431640625
    5. '-k' → logprob: -10.2867431640625
    6. '_complete' → logprob: -10.6617431640625
    7. '_' → logprob: -10.9117431640625
    8. '_sub' → logprob: -11.2867431640625
    9. '{k' → logprob: -11.5367431640625
    10. '
' → logprob: -11.5367431640625

Token 507: ' sub' (ID: 1543)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 508: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.048593729734420776
    2. 'graphs' → logprob: -3.048593759536743
    3. 'raph' → logprob: -12.423593521118164
    4. '_graph' → logprob: -14.298593521118164
    5. '	graph' → logprob: -14.923593521118164
    6. '(graph' → logprob: -14.923593521118164
    7. 'g' → logprob: -15.048593521118164
    8. 'gra' → logprob: -15.798593521118164
    9. 'graf' → logprob: -15.798593521118164
    10. 'gr' → logprob: -16.048593521118164

Token 509: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2052951604127884
    2. '<|end|>' → logprob: -2.2052950859069824
    3. '       ' → logprob: -2.8302950859069824
    4. ' pass' → logprob: -5.205295085906982
    5. '   ' → logprob: -5.830295085906982
    6. '...' → logprob: -6.205295085906982
    7. '
' → logprob: -6.955295085906982
    8. ' (' → logprob: -7.080295085906982
    9. '<|end|>' → logprob: -7.205295085906982
    10. 'pass' → logprob: -7.330295085906982

Token 510: ' needed' (ID: 6118)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.18798139691352844
    2. ' k' → logprob: -2.812981367111206
    3. 'False' → logprob: -3.312981367111206
    4. 'any' → logprob: -3.687981367111206
    5. 'self' → logprob: -4.187981605529785
    6. ' any' → logprob: -4.687981605529785
    7. 'found' → logprob: -4.937981605529785
    8. ' False' → logprob: -5.437981605529785
    9. 'possible' → logprob: -5.687981605529785
    10. ' self' → logprob: -6.062981605529785

Token 511: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 512: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 513: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.2734535038471222
    2. '       ' → logprob: -1.5234534740447998
    3. 'return' → logprob: -4.773453712463379
    4. ' pass' → logprob: -4.898453712463379
    5. '           ' → logprob: -5.398453712463379
    6. '   ' → logprob: -7.148453712463379
    7. '	pass' → logprob: -9.898453712463379
    8. ' return' → logprob: -11.023453712463379
    9. '               ' → logprob: -13.148453712463379
    10. '
' → logprob: -13.398453712463379

Token 514: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 515: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 516: ' class' (ID: 744)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 517: ' Complete' (ID: 29031)
  Prédit: 'Plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Plan' → logprob: -0.23781545460224152
    2. ' Plan' → logprob: -2.6128153800964355
    3. 'Magic' → logprob: -3.6128153800964355
    4. 'Cycle' → logprob: -4.3628153800964355
    5. 'K' → logprob: -4.7378153800964355
    6. 'Real' → logprob: -4.8628153800964355
    7. 'Embedding' → logprob: -5.2378153800964355
    8. 'Color' → logprob: -5.4878153800964355
    9. ' Emb' → logprob: -5.4878153800964355
    10. 'Edge' → logprob: -5.6128153800964355

Token 518: 'B' (ID: 33)
  Prédit: 'Sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sub' → logprob: -7.195421494543552e-05
    2. '_sub' → logprob: -10.37507152557373
    3. ' Sub' → logprob: -11.50007152557373
    4. '<|end|>' → logprob: -11.62507152557373
    5. 'Graph' → logprob: -12.50007152557373
    6. '_Sub' → logprob: -12.87507152557373
    7. '   ' → logprob: -13.12507152557373
    8. '
' → logprob: -13.12507152557373
    9. 'Subview' → logprob: -13.25007152557373
    10. 'sub' → logprob: -13.62507152557373

Token 519: 'ip' (ID: 488)
  Prédit: 'ip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.007830788381397724
    2. 'raph' → logprob: -5.882830619812012
    3. 'sub' → logprob: -6.507830619812012
    4. 'Sub' → logprob: -6.632830619812012
    5. 'igraph' → logprob: -6.632830619812012
    6. 'lock' → logprob: -7.757830619812012
    7. 'graph' → logprob: -8.507830619812012
    8. 'i' → logprob: -9.382830619812012
    9. 'ic' → logprob: -9.757830619812012
    10. 'Graph' → logprob: -9.882830619812012

Token 520: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -2.7848862373502925e-05
    2. 'ar' → logprob: -10.625027656555176
    3. 'arte' → logprob: -13.250027656555176
    4. 'article' → logprob: -14.250027656555176
    5. 'arti' → logprob: -14.875027656555176
    6. 'artisan' → logprob: -15.250027656555176
    7. 'a' → logprob: -15.500027656555176
    8. 'Graph' → logprob: -17.125028610229492
    9. 'арт' → logprob: -17.250028610229492
    10. 'Sub' → logprob: -17.250028610229492

Token 521: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -7.896309739408025e-07
    2. 'e' → logprob: -14.500000953674316
    3. 'ate' → logprob: -16.0
    4. ' ite' → logprob: -17.25
    5. 'itle' → logprob: -17.75
    6. 'it' → logprob: -17.75
    7. '```' → logprob: -18.375
    8. 'class' → logprob: -18.375
    9. 'ide' → logprob: -18.5
    10. '_graph' → logprob: -18.75

Token 522: 'Sub' (ID: 3638)
  Prédit: 'Checker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -0.25223204493522644
    2. 'Detector' → logprob: -1.7522320747375488
    3. 'Sub' → logprob: -3.502232074737549
    4. 'Graph' → logprob: -4.877232074737549
    5. ':' → logprob: -5.127232074737549
    6. 'Check' → logprob: -7.002232074737549
    7. 'K' → logprob: -7.002232074737549
    8. 'Matcher' → logprob: -7.502232074737549
    9. '   ' → logprob: -7.627232074737549
    10. '_checker' → logprob: -7.877232074737549

Token 523: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -9.088346359931165e-07
    2. 'raph' → logprob: -14.375000953674316
    3. 'graphs' → logprob: -16.625
    4. '   ' → logprob: -17.0
    5. 'class' → logprob: -17.375
    6. 'Graph' → logprob: -18.125
    7. 'group' → logprob: -18.25
    8. ' graph' → logprob: -18.25
    9. '       ' → logprob: -20.125
    10. 'gra' → logprob: -20.375

Token 524: 'Detector' (ID: 40139)
  Prédit: 'Detector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Detector' → logprob: -0.003758632577955723
    2. '   ' → logprob: -6.628758430480957
    3. ':' → logprob: -6.753758430480957
    4. 'Detect' → logprob: -7.503758430480957
    5. 'Checker' → logprob: -8.628758430480957
    6. '       ' → logprob: -8.753758430480957
    7. '_detector' → logprob: -9.128758430480957
    8. 'Det' → logprob: -9.378758430480957
    9. 'Finder' → logprob: -9.753758430480957
    10. ':
' → logprob: -10.128758430480957

Token 525: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018291465938091278
    2. ':
' → logprob: -4.018291473388672
    3. '(M' → logprob: -9.268291473388672
    4. '   ' → logprob: -11.143291473388672
    5. '<|end|>' → logprob: -11.268291473388672
    6. '):' → logprob: -11.893291473388672
    7. '(' → logprob: -12.518291473388672
    8. ':

' → logprob: -13.268291473388672
    9. ':def' → logprob: -13.768291473388672
    10. '):
' → logprob: -13.768291473388672

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1136336624622345
    2. '   ' → logprob: -2.238633632659912
    3. 'def' → logprob: -7.988633632659912
    4. ':' → logprob: -8.36363410949707
    5. '
' → logprob: -9.36363410949707
    6. ':
' → logprob: -9.98863410949707
    7. '     ' → logprob: -10.73863410949707
    8. '(M' → logprob: -10.98863410949707
    9. '(' → logprob: -11.23863410949707
    10. '    
' → logprob: -11.36363410949707

Token 527: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2212240993976593
    2. '   ' → logprob: -1.721224069595337
    3. ' def' → logprob: -4.221224308013916
    4. '       ' → logprob: -5.346224308013916
    5. 'class' → logprob: -8.846223831176758
    6. '	def' → logprob: -11.471223831176758
    7. '
' → logprob: -12.346223831176758
    8. ' ' → logprob: -12.471223831176758
    9. '  ' → logprob: -13.471223831176758
    10. '     ' → logprob: -13.471223831176758

Token 528: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12851054966449738
    2. '__' → logprob: -2.5035104751586914
    3. 'def' → logprob: -3.7535104751586914
    4. 'init' → logprob: -4.503510475158691
    5. ' def' → logprob: -5.503510475158691
    6. ' init' → logprob: -9.003510475158691
    7. '_init' → logprob: -9.753510475158691
    8. '__(' → logprob: -11.128510475158691
    9. '.__' → logprob: -12.003510475158691
    10. '   ' → logprob: -12.003510475158691

Token 529: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.1008713702030946e-06
    2. 'def' → logprob: -14.500001907348633
    3. '__' → logprob: -14.750001907348633
    4. 'class' → logprob: -15.375001907348633
    5. '(init' → logprob: -15.375001907348633
    6. '_init' → logprob: -15.500001907348633
    7. '```' → logprob: -15.875001907348633
    8. '   ' → logprob: -16.750001907348633
    9. ' init' → logprob: -17.250001907348633
    10. '	init' → logprob: -17.500001907348633

Token 530: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03813479095697403
    2. '__(' → logprob: -3.288134813308716
    3. ' (' → logprob: -9.538134574890137
    4. '_(' → logprob: -11.538134574890137
    5. '(' → logprob: -12.163134574890137
    6. '       ' → logprob: -12.663134574890137
    7. '(this' → logprob: -14.788134574890137
    8. 'self' → logprob: -14.788134574890137
    9. ')(' → logprob: -14.788134574890137
    10. '   ' → logprob: -14.913134574890137

Token 531: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006024802569299936
    2. ' self' → logprob: -7.6256022453308105
    3. 'graph' → logprob: -9.625602722167969
    4. '       ' → logprob: -10.375602722167969
    5. '(self' → logprob: -11.625602722167969
    6. 'Graph' → logprob: -12.750602722167969
    7. ',' → logprob: -13.000602722167969
    8. '   ' → logprob: -13.750602722167969
    9. '           ' → logprob: -13.875602722167969
    10. 'class' → logprob: -14.500602722167969

Token 532: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022944701835513115
    2. 'self' → logprob: -4.272944927215576
    3. '(self' → logprob: -4.772944927215576
    4. ' self' → logprob: -8.897944450378418
    5. ' (' → logprob: -9.772944450378418
    6. '       ' → logprob: -9.897944450378418
    7. ',self' → logprob: -10.522944450378418
    8. '           ' → logprob: -11.897944450378418
    9. ' ,' → logprob: -12.772944450378418
    10. '(' → logprob: -13.397944450378418

Token 533: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.015018414705991745
    2. ' graph' → logprob: -4.390018463134766
    3. 'self' → logprob: -6.015018463134766
    4. ' self' → logprob: -10.390018463134766
    5. 'g' → logprob: -12.015018463134766
    6. '	graph' → logprob: -12.140018463134766
    7. 'class' → logprob: -12.515018463134766
    8. '   ' → logprob: -12.765018463134766
    9. '       ' → logprob: -12.890018463134766
    10. 'k' → logprob: -13.265018463134766

Token 534: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005752322264015675
    2. '           ' → logprob: -6.130752086639404
    3. '(self' → logprob: -6.130752086639404
    4. '):
' → logprob: -7.130752086639404
    5. '       ' → logprob: -8.505752563476562
    6. 'self' → logprob: -8.755752563476562
    7. '):' → logprob: -9.505752563476562
    8. ',
' → logprob: -9.505752563476562
    9. ',self' → logprob: -10.130752563476562
    10. '   ' → logprob: -11.630752563476562

Token 535: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002497302368283272
    2. 'def' → logprob: -6.50249719619751
    3. '           ' → logprob: -7.37749719619751
    4. 'self' → logprob: -8.502497673034668
    5. ' def' → logprob: -9.002497673034668
    6. '   ' → logprob: -11.002497673034668
    7. ' self' → logprob: -11.252497673034668
    8. '(self' → logprob: -11.502497673034668
    9. 'class' → logprob: -13.877497673034668
    10. '      ' → logprob: -14.002497673034668

Token 536: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014216749928891659
    2. ' self' → logprob: -4.264216899871826
    3. '       ' → logprob: -10.139216423034668
    4. 'def' → logprob: -11.514216423034668
    5. '           ' → logprob: -13.389216423034668
    6. 'class' → logprob: -13.889216423034668
    7. '   ' → logprob: -14.389216423034668
    8. '(self' → logprob: -15.139216423034668
    9. '	self' → logprob: -15.264216423034668
    10. '[self' → logprob: -16.889217376708984

Token 537: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.07954198122024536
    2. 'graph' → logprob: -2.5795419216156006
    3. '.b' → logprob: -9.07954216003418
    4. 'self' → logprob: -9.45454216003418
    5. 'class' → logprob: -9.70454216003418
    6. '	graph' → logprob: -9.70454216003418
    7. '       ' → logprob: -10.20454216003418
    8. '.is' → logprob: -10.32954216003418
    9. '   ' → logprob: -10.45454216003418
    10. '.vertices' → logprob: -10.57954216003418

Token 538: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31362417340278625
    2. '=' → logprob: -1.3136241436004639
    3. '   ' → logprob: -9.188624382019043
    4. '       ' → logprob: -9.188624382019043
    5. 'self' → logprob: -10.063624382019043
    6. '=self' → logprob: -10.563624382019043
    7. '.' → logprob: -10.813624382019043
    8. '           ' → logprob: -10.938624382019043
    9. ' ' → logprob: -11.188624382019043
    10. ')' → logprob: -12.063624382019043

Token 539: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.10025132447481155
    2. ' graph' → logprob: -2.3502514362335205
    3. '(graph' → logprob: -10.975251197814941
    4. '	graph' → logprob: -10.975251197814941
    5. 'Graph' → logprob: -11.600251197814941
    6. '.graph' → logprob: -14.100251197814941
    7. '_graph' → logprob: -15.600251197814941
    8. 'self' → logprob: -15.850251197814941
    9. 'raph' → logprob: -16.600252151489258
    10. 'graphql' → logprob: -16.975252151489258

Token 540: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008316631428897381
    2. '       ' → logprob: -7.375831604003906
    3. 'self' → logprob: -8.750831604003906
    4. '
' → logprob: -10.625831604003906
    5. '   ' → logprob: -11.750831604003906
    6. '<|end|>' → logprob: -11.750831604003906
    7. '               ' → logprob: -13.250831604003906
    8. ' self' → logprob: -13.375831604003906
    9. '          ' → logprob: -13.750831604003906
    10. '		' → logprob: -15.000831604003906

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017812105361372232
    2. 'def' → logprob: -6.626780986785889
    3. '   ' → logprob: -7.751780986785889
    4. ' def' → logprob: -11.501781463623047
    5. 'self' → logprob: -12.126781463623047
    6. '           ' → logprob: -12.501781463623047
    7. '
' → logprob: -12.501781463623047
    8. '<|end|>' → logprob: -13.876781463623047
    9. '```' → logprob: -15.251781463623047
    10. '	def' → logprob: -15.751781463623047

Token 542: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00026622318546287715
    2. '   ' → logprob: -8.500266075134277
    3. '       ' → logprob: -10.000266075134277
    4. ' def' → logprob: -11.000266075134277
    5. 'class' → logprob: -15.125266075134277
    6. '
' → logprob: -15.375266075134277
    7. '	def' → logprob: -16.000267028808594
    8. ' ' → logprob: -18.375267028808594
    9. '```' → logprob: -18.625267028808594
    10. '  ' → logprob: -18.750267028808594

Token 543: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.014579595997929573
    2. 'contains' → logprob: -5.264579772949219
    3. 'find' → logprob: -5.514579772949219
    4. ' has' → logprob: -5.639579772949219
    5. 'detect' → logprob: -7.014579772949219
    6. 'check' → logprob: -8.139579772949219
    7. 'exists' → logprob: -8.639579772949219
    8. '_has' → logprob: -8.764579772949219
    9. ' find' → logprob: -9.389579772949219
    10. 'is' → logprob: -10.139579772949219

Token 544: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.012936551123857498
    2. '_complete' → logprob: -5.012936592102051
    3. '_K' → logprob: -5.887936592102051
    4. '_' → logprob: -6.262936592102051
    5. 'K' → logprob: -6.762936592102051
    6. 'k' → logprob: -8.38793659210205
    7. 'complete' → logprob: -10.26293659210205
    8. '_kn' → logprob: -10.38793659210205
    9. '_kw' → logprob: -11.38793659210205
    10. '_sub' → logprob: -11.88793659210205

Token 545: '33' (ID: 2546)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.010714580304920673
    2. '33' → logprob: -4.635714530944824
    3. '2' → logprob: -7.385714530944824
    4. '23' → logprob: -9.135714530944824
    5. '(' → logprob: -9.760714530944824
    6. '{' → logprob: -9.885714530944824
    7. '_{' → logprob: -10.510714530944824
    8. '_' → logprob: -10.885714530944824
    9. '```' → logprob: -11.010714530944824
    10. '   ' → logprob: -11.510714530944824

Token 546: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001867326645879075
    2. '(' → logprob: -8.750186920166016
    3. '()' → logprob: -11.125186920166016
    4. 'self' → logprob: -12.750186920166016
    5. '():' → logprob: -13.000186920166016
    6. ' (' → logprob: -13.000186920166016
    7. '(
' → logprob: -13.125186920166016
    8. '():
' → logprob: -13.375186920166016
    9. '       ' → logprob: -14.375186920166016
    10. '(s' → logprob: -14.375186920166016

Token 547: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02460343949496746
    2. '):' → logprob: -4.149603366851807
    3. '):
' → logprob: -5.024603366851807
    4. 'self' → logprob: -6.524603366851807
    5. ')' → logprob: -8.149603843688965
    6. '       ' → logprob: -9.524603843688965
    7. '   ' → logprob: -10.399603843688965
    8. '()' → logprob: -10.899603843688965
    9. '():
' → logprob: -10.899603843688965
    10. '():' → logprob: -11.399603843688965

Token 548: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001227965927682817
    2. '       ' → logprob: -6.876227855682373
    3. '#' → logprob: -9.626228332519531
    4. 'return' → logprob: -10.126228332519531
    5. ' return' → logprob: -10.376228332519531
    6. '   ' → logprob: -11.001228332519531
    7. 'pass' → logprob: -12.126228332519531
    8. '               ' → logprob: -12.251228332519531
    9. '```' → logprob: -12.376228332519531
    10. '          ' → logprob: -12.626228332519531

Token 549: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5189568996429443
    2. '           ' → logprob: -1.0189568996429443
    3. 'n' → logprob: -4.018957138061523
    4. ' #' → logprob: -4.518957138061523
    5. 'return' → logprob: -5.268957138061523
    6. 'from' → logprob: -6.018957138061523
    7. 'visited' → logprob: -6.268957138061523
    8. ' n' → logprob: -6.393957138061523
    9. '       ' → logprob: -6.893957138061523
    10. 'degree' → logprob: -7.518957138061523

Token 550: ' Same' (ID: 38569)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20714226365089417
    2. 'degree' → logprob: -2.4571423530578613
    3. 'visited' → logprob: -3.5821423530578613
    4. 'degrees' → logprob: -3.8321423530578613
    5. 'deg' → logprob: -4.207142353057861
    6. 'n' → logprob: -4.832142353057861
    7. '       ' → logprob: -4.957142353057861
    8. 'neighbors' → logprob: -5.457142353057861
    9. 'from' → logprob: -5.707142353057861
    10. '   ' → logprob: -5.832142353057861

Token 551: ' complexity' (ID: 37588)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38659927248954773
    2. '#' → logprob: -2.26159930229187
    3. '       ' → logprob: -2.51159930229187
    4. '   ' → logprob: -3.13659930229187
    5. ' as' → logprob: -3.26159930229187
    6. 'def' → logprob: -4.261599063873291
    7. '
' → logprob: -4.511599063873291
    8. ' reasoning' → logprob: -5.261599063873291
    9. ' #' → logprob: -5.386599063873291
    10. ':' → logprob: -5.636599063873291

Token 552: ' issue' (ID: 6626)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1822872906923294
    2. ':' → logprob: -2.9322872161865234
    3. '       ' → logprob: -3.0572872161865234
    4. '
' → logprob: -3.3072872161865234
    5. '   ' → logprob: -4.682287216186523
    6. ':
' → logprob: -4.807287216186523
    7. '<|end|>' → logprob: -6.307287216186523
    8. '#' → logprob: -6.682287216186523
    9. '        
' → logprob: -6.807287216186523
    10. ' and' → logprob: -6.807287216186523

Token 553: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011186653282493353
    2. ':' → logprob: -7.8761186599731445
    3. '       ' → logprob: -8.876118659973145
    4. ',' → logprob: -9.001118659973145
    5. 'return' → logprob: -9.126118659973145
    6. '#' → logprob: -9.376118659973145
    7. '<|end|>' → logprob: -9.376118659973145
    8. '
' → logprob: -10.001118659973145
    9. '<|end|>' → logprob: -10.876118659973145
    10. '   ' → logprob: -10.876118659973145

Token 554: ' detecting' (ID: 91580)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35437336564064026
    2. '#' → logprob: -2.2293734550476074
    3. 'return' → logprob: -2.3543734550476074
    4. ' return' → logprob: -2.4793734550476074
    5. ' #' → logprob: -4.479373455047607
    6. '       ' → logprob: -8.10437297821045
    7. '   ' → logprob: -9.60437297821045
    8. '
' → logprob: -9.60437297821045
    9. 'Return' → logprob: -9.85437297821045
    10. 'pass' → logprob: -10.22937297821045

Token 555: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.04519503191113472
    2. ' K' → logprob: -3.5451951026916504
    3. 'a' → logprob: -4.79519510269165
    4. 'complete' → logprob: -5.54519510269165
    5. ' complete' → logprob: -6.29519510269165
    6. ' a' → logprob: -6.79519510269165
    7. ' ' → logprob: -9.795194625854492
    8. '#' → logprob: -11.045194625854492
    9. '   ' → logprob: -11.045194625854492
    10. 'k' → logprob: -11.170194625854492

Token 556: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.13034288585186005
    2. '33' → logprob: -2.130342960357666
    3. '_{' → logprob: -6.380342960357666
    4. '_' → logprob: -6.380342960357666
    5. '{' → logprob: -11.505342483520508
    6. '(' → logprob: -12.630342483520508
    7. '
' → logprob: -13.630342483520508
    8. '_(' → logprob: -13.630342483520508
    9. '   ' → logprob: -14.130342483520508
    10. '\xe2\x82' → logprob: -14.505342483520508

Token 557: ',' (ID: 11)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.04811395704746246
    2. ',' → logprob: -3.798114061355591
    3. '33' → logprob: -3.798114061355591
    4. '_' → logprob: -6.548113822937012
    5. 'sub' → logprob: -8.548113822937012
    6. '(' → logprob: -8.798113822937012
    7. '   ' → logprob: -9.423113822937012
    8. '
' → logprob: -9.548113822937012
    9. '_sub' → logprob: -10.173113822937012
    10. '_,' → logprob: -10.423113822937012

Token 558: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00011725161311915144
    2. '
' → logprob: -9.625117301940918
    3. '

' → logprob: -10.625117301940918
    4. ' ' → logprob: -11.375117301940918
    5. '   ' → logprob: -12.875117301940918
    6. '
' → logprob: -13.312617301940918
    7. '#' → logprob: -13.312617301940918
    8. '_' → logprob: -13.375117301940918
    9. '```' → logprob: -13.562617301940918
    10. '  ' → logprob: -14.000117301940918

Token 559: ' explicitly' (ID: 45615)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.27977055311203003
    2. '           ' → logprob: -1.7797706127166748
    3. ' sub' → logprob: -3.529770612716675
    4. '
' → logprob: -4.529770374298096
    5. 'is' → logprob: -4.529770374298096
    6. '       ' → logprob: -5.279770374298096
    7. '   ' → logprob: -5.404770374298096
    8. ' requires' → logprob: -5.779770374298096
    9. ',' → logprob: -6.779770374298096
    10. ' or' → logprob: -7.029770374298096

Token 560: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007614439819008112
    2. '       ' → logprob: -5.382614612579346
    3. '
' → logprob: -6.507614612579346
    4. ' is' → logprob: -7.132614612579346
    5. '          ' → logprob: -8.007614135742188
    6. '   ' → logprob: -9.632614135742188
    7. ',' → logprob: -10.007614135742188
    8. 'return' → logprob: -10.382614135742188
    9. ' return' → logprob: -10.507614135742188
    10. '               ' → logprob: -10.507614135742188

Token 561: ' complicated' (ID: 25334)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.0134823322296143
    2. 'complex' → logprob: -1.0134823322296143
    3. ' complex' → logprob: -2.8884823322296143
    4. ' not' → logprob: -3.0134823322296143
    5. 'non' → logprob: -3.1384823322296143
    6. 'hard' → logprob: -3.1384823322296143
    7. ' hard' → logprob: -3.2634823322296143
    8. 'd' → logprob: -4.263482093811035
    9. '#' → logprob: -5.263482093811035
    10. 'a' → logprob: -5.513482093811035

Token 562: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009720788337290287
    2. '<|end|>' → logprob: -5.384720802307129
    3. '.' → logprob: -6.384720802307129
    4. '       ' → logprob: -6.509720802307129
    5. '<|end|>' → logprob: -7.134720802307129
    6. ',' → logprob: -7.509720802307129
    7. ' and' → logprob: -9.134720802307129
    8. '
' → logprob: -9.634720802307129
    9. '        
' → logprob: -9.759720802307129
    10. '   ' → logprob: -9.884720802307129

Token 563: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003466673369985074
    2. '       ' → logprob: -8.375347137451172
    3. ',' → logprob: -9.500347137451172
    4. '<|end|>' → logprob: -11.750347137451172
    5. '               ' → logprob: -12.125347137451172
    6. '	       ' → logprob: -12.250347137451172
    7. '   ' → logprob: -12.375347137451172
    8. '          ' → logprob: -12.625347137451172
    9. '		' → logprob: -13.000347137451172
    10. '.' → logprob: -13.125347137451172

Token 564: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0341278538107872
    2. 'return' → logprob: -3.534127950668335
    3. '       ' → logprob: -5.534127712249756
    4. ' return' → logprob: -7.909127712249756
    5. '   ' → logprob: -10.784128189086914
    6. '
' → logprob: -11.159128189086914
    7. '               ' → logprob: -12.284128189086914
    8. 'pass' → logprob: -12.409128189086914
    9. '          ' → logprob: -13.034128189086914
    10. '         ' → logprob: -13.159128189086914

Token 565: ' We'll' (ID: 46830)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32422852516174316
    2. 'return' → logprob: -1.3242285251617432
    3. '       ' → logprob: -5.324228286743164
    4. ' return' → logprob: -5.324228286743164
    5. '   ' → logprob: -7.199228286743164
    6. '#' → logprob: -8.824228286743164
    7. 'pass' → logprob: -8.949228286743164
    8. '
' → logprob: -9.324228286743164
    9. '          ' → logprob: -11.574228286743164
    10. '               ' → logprob: -11.699228286743164

Token 566: ' rely' (ID: 25222)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20344853401184082
    2. ' return' → logprob: -1.7034485340118408
    3. 'implement' → logprob: -6.828448295593262
    4. ' implement' → logprob: -7.828448295593262
    5. '       ' → logprob: -9.078448295593262
    6. '           ' → logprob: -9.203448295593262
    7. '   ' → logprob: -9.203448295593262
    8. 'def' → logprob: -9.578448295593262
    9. ' use' → logprob: -9.828448295593262
    10. 'use' → logprob: -10.328448295593262

Token 567: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.39786267280578613
    2. 'on' → logprob: -1.1478626728057861
    3. '           ' → logprob: -4.522862434387207
    4. '       ' → logprob: -10.522862434387207
    5. 'return' → logprob: -10.772862434387207
    6. '   ' → logprob: -11.022862434387207
    7. ' return' → logprob: -13.647862434387207
    8. '               ' → logprob: -13.772862434387207
    9. 'def' → logprob: -13.897862434387207
    10. '	on' → logprob: -14.022862434387207

Token 568: ' a' (ID: 261)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.2774764895439148
    2. ' False' → logprob: -1.5274765491485596
    3. 'return' → logprob: -4.2774763107299805
    4. ' return' → logprob: -4.6524763107299805
    5. ' a' → logprob: -7.4024763107299805
    6. ' self' → logprob: -8.15247631072998
    7. 'self' → logprob: -8.40247631072998
    8. '   ' → logprob: -8.90247631072998
    9. ' heur' → logprob: -9.15247631072998
    10. '       ' → logprob: -9.27747631072998

Token 569: ' future' (ID: 5277)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.261473298072815
    2. 'heur' → logprob: -1.511473298072815
    3. 'placeholder' → logprob: -1.511473298072815
    4. 'def' → logprob: -1.886473298072815
    5. 'False' → logprob: -2.3864731788635254
    6. 'b' → logprob: -4.136473178863525
    7. '#' → logprob: -5.011473178863525
    8. 'simple' → logprob: -5.761473178863525
    9. 'simpl' → logprob: -6.511473178863525
    10. ' heuristic' → logprob: -7.136473178863525

Token 570: '-extension' (ID: 189702)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19247347116470337
    2. 'placeholder' → logprob: -3.0674734115600586
    3. 'def' → logprob: -3.3174734115600586
    4. 'heur' → logprob: -3.6924734115600586
    5. ' placeholder' → logprob: -3.8174734115600586
    6. '       ' → logprob: -4.942473411560059
    7. '           ' → logprob: -5.192473411560059
    8. 'return' → logprob: -5.192473411560059
    9. 'implementation' → logprob: -5.192473411560059
    10. ' #' → logprob: -5.192473411560059

Token 571: ' placeholder' (ID: 11115)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28977546095848083
    2. '       ' → logprob: -1.7897754907608032
    3. 'method' → logprob: -4.039775371551514
    4. 'def' → logprob: -4.289775371551514
    5. 'return' → logprob: -4.789775371551514
    6. ' placeholder' → logprob: -5.289775371551514
    7. ' method' → logprob: -5.414775371551514
    8. '   ' → logprob: -5.539775371551514
    9. ':
' → logprob: -5.664775371551514
    10. '#' → logprob: -5.914775371551514

Token 572: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004947714623995125
    2. '       ' → logprob: -8.375494956970215
    3. 'return' → logprob: -8.750494956970215
    4. ' return' → logprob: -10.000494956970215
    5. '   ' → logprob: -10.625494956970215
    6. ',' → logprob: -11.375494956970215
    7. '               ' → logprob: -12.375494956970215
    8. '          ' → logprob: -12.625494956970215
    9. '
' → logprob: -12.875494956970215
    10. '.' → logprob: -13.125494956970215

Token 573: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12802548706531525
    2. '       ' → logprob: -2.128025531768799
    3. '
' → logprob: -7.128025531768799
    4. 'return' → logprob: -8.87802505493164
    5. '   ' → logprob: -9.00302505493164
    6. '        
' → logprob: -11.25302505493164
    7. ' return' → logprob: -12.25302505493164
    8. '<|end|>' → logprob: -12.75302505493164
    9. '    
' → logprob: -12.87802505493164
    10. '               ' → logprob: -12.87802505493164

Token 574: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08931924402713776
    2. '           ' → logprob: -2.5893192291259766
    3. '       ' → logprob: -4.589319229125977
    4. ' return' → logprob: -8.839319229125977
    5. '   ' → logprob: -9.589319229125977
    6. '               ' → logprob: -13.964319229125977
    7. '	return' → logprob: -14.214319229125977
    8. '         ' → logprob: -15.839319229125977
    9. 'pass' → logprob: -15.839319229125977
    10. '          ' → logprob: -16.464319229125977

Token 575: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00033546582562848926
    2. ' False' → logprob: -8.000335693359375
    3. '   ' → logprob: -23.250335693359375
    4. '(False' → logprob: -23.250335693359375
    5. 'false' → logprob: -24.125335693359375
    6. '=False' → logprob: -25.375335693359375
    7. 'F' → logprob: -25.750335693359375
    8. '_false' → logprob: -26.375335693359375
    9. 'True' → logprob: -26.500335693359375
    10. '    ' → logprob: -26.625335693359375

Token 576: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 577: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 578: ' Placeholder' (ID: 175443)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 579: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 580: ' this' (ID: 495)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.019631236791610718
    2. ' this' → logprob: -4.019631385803223
    3. 'self' → logprob: -6.519631385803223
    4. ' self' → logprob: -12.644631385803223
    5. '           ' → logprob: -13.519631385803223
    6. '       ' → logprob: -14.769631385803223
    7. '
' → logprob: -15.019631385803223
    8. '   ' → logprob: -15.019631385803223
    9. '_this' → logprob: -15.644631385803223
    10. '```' → logprob: -16.394630432128906

Token 581: ' implementation' (ID: 13847)
  Prédit: 'implementation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'implementation' → logprob: -0.03805262967944145
    2. ' implementation' → logprob: -3.288052558898926
    3. 'impl' → logprob: -12.288052558898926
    4. 'implement' → logprob: -12.788052558898926
    5. 'Implementation' → logprob: -13.288052558898926
    6. '```' → logprob: -14.788052558898926
    7. '   ' → logprob: -15.163052558898926
    8. 'implemented' → logprob: -15.288052558898926
    9. '_IMPLEMENT' → logprob: -15.538052558898926
    10. 'class' → logprob: -16.038053512573242

Token 582: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 583: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 584: ' @' (ID: 759)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 585: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0016046056989580393
    2. 'dat' → logprob: -7.0016045570373535
    3. 'classmethod' → logprob: -7.7516045570373535
    4. 'property' → logprob: -8.251605033874512
    5. 'static' → logprob: -13.126605033874512
    6. 'fun' → logprob: -18.126604080200195
    7. 'abstract' → logprob: -18.376604080200195
    8. '@' → logprob: -19.126604080200195
    9. 'final' → logprob: -19.626604080200195
    10. 'l' → logprob: -20.126604080200195

Token 586: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007419686880894005
    2. ' def' → logprob: -7.750741958618164
    3. '
' → logprob: -8.625741958618164
    4. '(' → logprob: -9.625741958618164
    5. '(def' → logprob: -9.875741958618164
    6. '(
' → logprob: -12.625741958618164
    7. '()' → logprob: -13.125741958618164
    8. '```' → logprob: -13.625741958618164
    9. '   ' → logprob: -13.875741958618164
    10. '    
' → logprob: -14.000741958618164

Token 587: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001495484757469967
    2. ' def' → logprob: -9.000149726867676
    3. '
' → logprob: -11.250149726867676
    4. '   ' → logprob: -11.250149726867676
    5. '	def' → logprob: -17.50014877319336
    6. '```' → logprob: -17.75014877319336
    7. ' ' → logprob: -18.25014877319336
    8. 'class' → logprob: -19.87514877319336
    9. '  ' → logprob: -19.87514877319336
    10. ':def' → logprob: -20.25014877319336

Token 588: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.5577775128767826e-06
    2. ' def' → logprob: -12.375005722045898
    3. '
' → logprob: -14.625005722045898
    4. '   ' → logprob: -15.125005722045898
    5. 'classmethod' → logprob: -15.500005722045898
    6. 'property' → logprob: -16.0000057220459
    7. 'staticmethod' → logprob: -16.1250057220459
    8. ' ' → logprob: -17.0000057220459
    9. '  ' → logprob: -17.7500057220459
    10. '```' → logprob: -18.5000057220459

Token 589: ' can' (ID: 665)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6731184124946594
    2. 'check' → logprob: -0.7981184124946594
    3. 'can' → logprob: -3.6731183528900146
    4. 'real' → logprob: -5.798118591308594
    5. 'magic' → logprob: -5.798118591308594
    6. '__' → logprob: -6.423118591308594
    7. 'solve' → logprob: -6.423118591308594
    8. ' is' → logprob: -6.673118591308594
    9. ' check' → logprob: -6.798118591308594
    10. 'from' → logprob: -7.423118591308594

Token 590: '_be' (ID: 40729)
  Prédit: '_be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_be' → logprob: -0.6511502861976624
    2. '_embed' → logprob: -0.7761502861976624
    3. '_real' → logprob: -5.276150226593018
    4. '_emb' → logprob: -5.901150226593018
    5. '_embedding' → logprob: -6.526150226593018
    6. '_draw' → logprob: -6.526150226593018
    7. 'be' → logprob: -6.651150226593018
    8. 'Embed' → logprob: -6.776150226593018
    9. '_form' → logprob: -7.401150226593018
    10. 'Be' → logprob: -7.526150226593018

Token 591: '_draw' (ID: 51847)
  Prédit: '_emb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_emb' → logprob: -0.06391783803701401
    2. '_real' → logprob: -4.063917636871338
    3. 'embedded' → logprob: -4.188917636871338
    4. '_draw' → logprob: -4.563917636871338
    5. 'draw' → logprob: -5.063917636871338
    6. '_re' → logprob: -5.563917636871338
    7. 'represented' → logprob: -6.313917636871338
    8. '_' → logprob: -6.563917636871338
    9. 'emb' → logprob: -7.063917636871338
    10. '_line' → logprob: -7.438917636871338

Token 592: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18089132010936737
    2. 'wn' → logprob: -1.8058912754058838
    3. 'en' → logprob: -7.555891513824463
    4. '```' → logprob: -9.055891036987305
    5. '
' → logprob: -9.430891036987305
    6. 'awn' → logprob: -9.680891036987305
    7. 'w' → logprob: -10.243391036987305
    8. 'ne' → logprob: -10.493391036987305
    9. '[n' → logprob: -11.055891036987305
    10. 'nen' → logprob: -11.055891036987305

Token 593: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.0077661010436713696
    2. '(self' → logprob: -5.882766246795654
    3. '(line' → logprob: -6.507766246795654
    4. '_in' → logprob: -6.632766246795654
    5. '(' → logprob: -7.257766246795654
    6. '_as' → logprob: -7.882766246795654
    7. '(cls' → logprob: -8.257765769958496
    8. '(on' → logprob: -8.632765769958496
    9. 'on' → logprob: -9.007765769958496
    10. '(n' → logprob: -9.632765769958496

Token 594: '_line' (ID: 14418)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1191415786743164
    2. 'eline' → logprob: -2.6191415786743164
    3. '_a' → logprob: -4.119141578674316
    4. 'line' → logprob: -4.619141578674316
    5. '_line' → logprob: -4.619141578674316
    6. 'e' → logprob: -6.744141578674316
    7. '1' → logprob: -7.244141578674316
    8. '_one' → logprob: -7.994141578674316
    9. 'the' → logprob: -8.369141578674316
    10. 'one' → logprob: -8.369141578674316

Token 595: '(n' (ID: 2406)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06914301216602325
    2. '(cls' → logprob: -3.569143056869507
    3. '(' → logprob: -3.944143056869507
    4. '(graph' → logprob: -4.819142818450928
    5. '(line' → logprob: -5.569142818450928
    6. '():' → logprob: -6.319142818450928
    7. '(points' → logprob: -6.569142818450928
    8. '(s' → logprob: -7.444142818450928
    9. '(vertices' → logprob: -7.444142818450928
    10. '(lines' → logprob: -8.194143295288086

Token 596: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018170781433582306
    2. ':' → logprob: -4.0181708335876465
    3. ' ,' → logprob: -12.143170356750488
    4. ':int' → logprob: -12.268170356750488
    5. '):' → logprob: -12.518170356750488
    6. ',
' → logprob: -12.518170356750488
    7. ')' → logprob: -13.268170356750488
    8. '   ' → logprob: -14.643170356750488
    9. '):
' → logprob: -15.018170356750488
    10. ':,' → logprob: -15.518170356750488

Token 597: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03188072517514229
    2. ' int' → logprob: -3.9068806171417236
    3. ',' → logprob: -4.531880855560303
    4. ',int' → logprob: -9.031880378723145
    5. ')' → logprob: -9.156880378723145
    6. '   ' → logprob: -9.531880378723145
    7. ' ,' → logprob: -9.531880378723145
    8. 'self' → logprob: -9.906880378723145
    9. 'n' → logprob: -10.656880378723145
    10. '
' → logprob: -11.531880378723145

Token 598: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5332478142227046e-05
    2. ')' → logprob: -11.500015258789062
    3. ',
' → logprob: -12.750015258789062
    4. ' ,' → logprob: -13.750015258789062
    5. '   ' → logprob: -14.125015258789062
    6. '       ' → logprob: -16.375015258789062
    7. ',n' → logprob: -16.875015258789062
    8. ',
' → logprob: -17.250015258789062
    9. ',u' → logprob: -17.375015258789062
    10. '‌,' → logprob: -17.375015258789062

Token 599: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.05535995215177536
    2. ' edges' → logprob: -2.9303598403930664
    3. 'm' → logprob: -7.805359840393066
    4. ' m' → logprob: -10.680359840393066
    5. 'edge' → logprob: -10.805359840393066
    6. '   ' → logprob: -11.305359840393066
    7. '           ' → logprob: -13.305359840393066
    8. 'k' → logprob: -14.055359840393066
    9. '       ' → logprob: -14.055359840393066
    10. 'Edges' → logprob: -14.055359840393066

Token 600: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08138042688369751
    2. ':' → logprob: -3.0813803672790527
    3. '):' → logprob: -3.4563803672790527
    4. ')' → logprob: -7.581380367279053
    5. '):
' → logprob: -8.831380844116211
    6. ' ,' → logprob: -10.956380844116211
    7. '   ' → logprob: -11.831380844116211
    8. ':list' → logprob: -11.831380844116211
    9. '[],' → logprob: -12.081380844116211
    10. '[]):' → logprob: -12.206380844116211

Token 601: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03788241371512413
    2. ')' → logprob: -3.6628823280334473
    3. 'List' → logprob: -5.287882328033447
    4. 'int' → logprob: -5.662882328033447
    5. ' list' → logprob: -7.162882328033447
    6. '[]' → logprob: -7.662882328033447
    7. '):
' → logprob: -8.037882804870605
    8. '[])' → logprob: -8.287882804870605
    9. '):' → logprob: -8.537882804870605
    10. ',' → logprob: -8.537882804870605

Token 602: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8360596895217896
    2. '):' → logprob: -0.8360596895217896
    3. '):
' → logprob: -2.0860595703125
    4. ',' → logprob: -5.3360595703125
    5. '   ' → logprob: -6.2110595703125
    6. '[int' → logprob: -7.2110595703125
    7. '[' → logprob: -7.4610595703125
    8. '):
' → logprob: -8.2110595703125
    9. ':' → logprob: -8.4610595703125
    10. ')->' → logprob: -8.4610595703125

Token 603: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00387121201492846
    2. '):' → logprob: -6.253871440887451
    3. '->' → logprob: -6.878871440887451
    4. '():' → logprob: -8.253870964050293
    5. ' ->' → logprob: -8.503870964050293
    6. ')' → logprob: -8.628870964050293
    7. ':
' → logprob: -9.003870964050293
    8. '   ' → logprob: -9.253870964050293
    9. ')->' → logprob: -11.003870964050293
    10. '       ' → logprob: -11.253870964050293

Token 604: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -1.1041145626222715e-05
    2. ' bool' → logprob: -11.500011444091797
    3. '"' → logprob: -15.375011444091797
    4. '   ' → logprob: -15.375011444091797
    5. 'str' → logprob: -15.750011444091797
    6. '(bool' → logprob: -16.125011444091797
    7. ''' → logprob: -16.125011444091797
    8. '<bool' → logprob: -16.375011444091797
    9. 'int' → logprob: -17.000011444091797
    10. '	bool' → logprob: -17.125011444091797

Token 605: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010319997556507587
    2. '():' → logprob: -5.51032018661499
    3. ':
' → logprob: -6.38532018661499
    4. '       ' → logprob: -6.38532018661499
    5. '):' → logprob: -6.76032018661499
    6. '   ' → logprob: -6.88532018661499
    7. '(' → logprob: -7.88532018661499
    8. ',' → logprob: -9.010319709777832
    9. '():
' → logprob: -10.385319709777832
    10. '(self' → logprob: -10.510319709777832

Token 606: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009162207134068012
    2. 'graph' → logprob: -7.625916004180908
    3. '   ' → logprob: -8.375916481018066
    4. ' graph' → logprob: -8.625916481018066
    5. '           ' → logprob: -12.125916481018066
    6. '```' → logprob: -12.625916481018066
    7. '	graph' → logprob: -12.625916481018066
    8. '        
' → logprob: -12.750916481018066
    9. '      ' → logprob: -14.375916481018066
    10. '    
' → logprob: -14.875916481018066

Token 607: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.07524009793996811
    2. '       ' → logprob: -3.325240135192871
    3. ' graph' → logprob: -3.325240135192871
    4. 'g' → logprob: -8.075240135192871
    5. '   ' → logprob: -9.075240135192871
    6. 'gc' → logprob: -10.450240135192871
    7. '	graph' → logprob: -10.575240135192871
    8. '```' → logprob: -11.075240135192871
    9. '#' (adapté à ' #') → logprob: -11.325240135192871
    10. 'if' → logprob: -11.950240135192871

Token 608: ' Step' (ID: 22291)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.004274750128388405
    2. ' graph' → logprob: -6.379274845123291
    3. '       ' → logprob: -6.879274845123291
    4. 'g' → logprob: -7.129274845123291
    5. '#' → logprob: -7.379274845123291
    6. 'if' → logprob: -10.004274368286133
    7. '   ' → logprob: -10.629274368286133
    8. '	graph' → logprob: -11.879274368286133
    9. '```' → logprob: -12.004274368286133
    10. ' #' → logprob: -12.254274368286133

Token 609: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031871601939201355
    2. '1' → logprob: -3.6568715572357178
    3. ' ' → logprob: -6.031871795654297
    4. '   ' → logprob: -6.156871795654297
    5. ' =' → logprob: -8.781871795654297
    6. ':' → logprob: -8.906871795654297
    7. '#' → logprob: -8.906871795654297
    8. 'graph' → logprob: -9.156871795654297
    9. ' by' → logprob: -9.281871795654297
    10. '=' → logprob: -9.281871795654297

Token 610: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010755976662039757
    2. '0' → logprob: -4.635756015777588
    3. '#' → logprob: -7.885756015777588
    4. ' ' → logprob: -8.63575553894043
    5. 'by' → logprob: -9.01075553894043
    6. '   ' → logprob: -9.13575553894043
    7. 'graph' → logprob: -9.13575553894043
    8. '       ' → logprob: -9.26075553894043
    9. '```' → logprob: -12.88575553894043
    10. '           ' → logprob: -13.01075553894043

Token 611: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10586277395486832
    2. ' graph' → logprob: -3.605862855911255
    3. 'graph' → logprob: -3.730862855911255
    4. '   ' → logprob: -4.230862617492676
    5. '        
' → logprob: -4.605862617492676
    6. ':' → logprob: -4.605862617492676
    7. ' if' → logprob: -5.730862617492676
    8. ' =' → logprob: -6.480862617492676
    9. '
' → logprob: -6.605862617492676
    10. '#' → logprob: -6.980862617492676

Token 612: ' Build' (ID: 10885)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.001316785579547286
    2. 'g' → logprob: -7.001316547393799
    3. ' graph' → logprob: -8.001317024230957
    4. '       ' → logprob: -10.376317024230957
    5. '   ' → logprob: -10.626317024230957
    6. 'if' → logprob: -12.501317024230957
    7. '```' → logprob: -12.751317024230957
    8. '	graph' → logprob: -13.251317024230957
    9. '#' → logprob: -13.626317024230957
    10. 'edges' → logprob: -13.751317024230957

Token 613: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.3132772147655487
    2. 'graph' → logprob: -1.313277244567871
    3. 'g' → logprob: -11.938277244567871
    4. '       ' → logprob: -12.188277244567871
    5. '	graph' → logprob: -13.938277244567871
    6. 'the' → logprob: -14.813277244567871
    7. ' the' → logprob: -14.813277244567871
    8. '           ' → logprob: -14.813277244567871
    9. '   ' → logprob: -14.813277244567871
    10. '```' → logprob: -14.938277244567871

Token 614: ' abstraction' (ID: 129564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8444575071334839
    2. 'graph' → logprob: -0.8444575071334839
    3. ' graph' → logprob: -1.9694575071334839
    4. '   ' → logprob: -7.969457626342773
    5. '	graph' → logprob: -8.344457626342773
    6. '
' → logprob: -9.219457626342773
    7. '(graph' → logprob: -9.469457626342773
    8. 'g' → logprob: -9.969457626342773
    9. '```' → logprob: -10.844457626342773
    10. '        
' → logprob: -11.469457626342773

Token 615: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.667430579662323
    2. 'graph' → logprob: -1.4174306392669678
    3. ' graph' → logprob: -1.4174306392669678
    4. '(graph' → logprob: -7.167430400848389
    5. '	graph' → logprob: -7.417430400848389
    6. '   ' → logprob: -7.542430400848389
    7. '
' → logprob: -9.167430877685547
    8. '        
' → logprob: -9.667430877685547
    9. '           ' → logprob: -9.792430877685547
    10. '_graph' → logprob: -10.167430877685547

Token 616: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16985051333904266
    2. 'graph' → logprob: -2.2948505878448486
    3. ' graph' → logprob: -2.9198505878448486
    4. '   ' → logprob: -6.7948503494262695
    5. '	graph' → logprob: -8.91985034942627
    6. '
' → logprob: -9.29485034942627
    7. '(graph' → logprob: -10.41985034942627
    8. '        
' → logprob: -10.66985034942627
    9. ',' → logprob: -10.66985034942627
    10. '```' → logprob: -11.04485034942627

Token 617: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.3881124258041382
    2. ' graph' → logprob: -1.1381124258041382
    3. '       ' → logprob: -6.763112545013428
    4. 'g' → logprob: -9.63811206817627
    5. '   ' → logprob: -11.88811206817627
    6. '	graph' → logprob: -12.01311206817627
    7. ' g' → logprob: -12.38811206817627
    8. '```' → logprob: -13.51311206817627
    9. 'Graph' → logprob: -15.13811206817627
    10. '
' → logprob: -15.51311206817627

Token 618: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020710527896881
    2. '=' → logprob: -2.3502070903778076
    3. ' =
' → logprob: -15.725207328796387
    4. '   ' → logprob: -15.975207328796387
    5. '=
' → logprob: -16.22520637512207
    6. ' ' → logprob: -16.97520637512207
    7. '.' → logprob: -18.35020637512207
    8. '=

' → logprob: -18.35020637512207
    9. '```' → logprob: -18.97520637512207
    10. '	' → logprob: -19.10020637512207

Token 619: ' Magic' (ID: 29113)
  Prédit: 'Magic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Magic' → logprob: -0.0021945175249129534
    2. ' Magic' → logprob: -6.127194404602051
    3. '   ' → logprob: -12.00219440460205
    4. 'Graph' → logprob: -13.75219440460205
    5. 'Mag' → logprob: -13.75219440460205
    6. 'self' → logprob: -15.75219440460205
    7. 'class' → logprob: -16.127195358276367
    8. '       ' → logprob: -16.127195358276367
    9. '_magic' → logprob: -16.377195358276367
    10. '__' → logprob: -16.377195358276367

Token 620: 'Circle' (ID: 28055)
  Prédit: 'Circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -4.320199877838604e-07
    2. ' Circle' → logprob: -15.125
    3. 'Magic' → logprob: -16.875
    4. 'Cube' → logprob: -17.625
    5. 'Circ' → logprob: -17.875
    6. 'Cir' → logprob: -18.0
    7. '.Circle' → logprob: -18.375
    8. 'Circuit' → logprob: -18.875
    9. 'C' → logprob: -19.25
    10. '_circle' → logprob: -19.25

Token 621: 'Real' (ID: 16418)
  Prédit: 'Real'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Real' → logprob: -1.6405310816480778e-05
    2. 'Graph' → logprob: -11.500016212463379
    3. 'real' → logprob: -12.875016212463379
    4. 'Circle' → logprob: -13.750016212463379
    5. '.Real' → logprob: -14.125016212463379
    6. '_real' → logprob: -14.500016212463379
    7. ' Real' → logprob: -14.875016212463379
    8. 'Edge' → logprob: -15.250016212463379
    9. 'Checker' → logprob: -15.375016212463379
    10. 'Magic' → logprob: -15.750016212463379

Token 622: 'iz' (ID: 482)
  Prédit: 'Circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -0.02561880834400654
    2. 'iz' → logprob: -3.7756187915802
    3. 'Checker' → logprob: -6.150619029998779
    4. 'izer' → logprob: -8.775618553161621
    5. 'ity' → logprob: -11.150618553161621
    6. 'circle' → logprob: -11.400618553161621
    7. ' Circle' → logprob: -11.650618553161621
    8. 'Graph' → logprob: -12.150618553161621
    9. 'Cir' → logprob: -12.400618553161621
    10. 'ize' → logprob: -12.525618553161621

Token 623: 'ability' (ID: 3563)
  Prédit: 'ability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -4.60414821645827e-06
    2. 'abil' → logprob: -12.625004768371582
    3. 'iz' → logprob: -14.250004768371582
    4. 'abilities' → logprob: -15.375004768371582
    5. 'ity' → logprob: -16.000003814697266
    6. 'abl' → logprob: -16.375003814697266
    7. 'abili' → logprob: -16.750003814697266
    8. 'ab' → logprob: -17.125003814697266
    9. 'ABILITY' → logprob: -17.500003814697266
    10. 'checker' → logprob: -17.625003814697266

Token 624: 'Checker' (ID: 39016)
  Prédit: 'Checker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -9.088346359931165e-07
    2. 'checker' → logprob: -14.125000953674316
    3. '_checker' → logprob: -16.0
    4. 'Check' → logprob: -17.25
    5. ' Checker' → logprob: -18.125
    6. '   ' → logprob: -20.0
    7. ' checker' → logprob: -20.125
    8. '       ' → logprob: -21.25
    9. 'er' → logprob: -21.375
    10. '_Check' → logprob: -21.5

Token 625: '.Graph' (ID: 20759)
  Prédit: '.Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Graph' → logprob: -3.173704271830502e-06
    2. '.' → logprob: -13.12500286102295
    3. 'Graph' → logprob: -15.37500286102295
    4. '(Graph' → logprob: -15.75000286102295
    5. '.Graphics' → logprob: -15.87500286102295
    6. ' .' → logprob: -15.87500286102295
    7. '.Edge' → logprob: -15.87500286102295
    8. '().' → logprob: -16.000003814697266
    9. '.G' → logprob: -16.000003814697266
    10. '.Class' → logprob: -16.375003814697266

Token 626: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.750001907348633
    3. ' (' → logprob: -15.750001907348633
    4. '   ' → logprob: -16.875001907348633
    5. 'n' → logprob: -17.125001907348633
    6. '(
' → logprob: -17.500001907348633
    7. '       ' → logprob: -18.125001907348633
    8. '
' → logprob: -18.875001907348633
    9. '(N' → logprob: -20.125001907348633
    10. '(num' → logprob: -21.000001907348633

Token 627: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06198941916227341
    2. ')
' → logprob: -2.8119893074035645
    3. '       ' → logprob: -11.436989784240723
    4. ')
' → logprob: -11.936989784240723
    5. ')

' → logprob: -13.061989784240723
    6. '   ' → logprob: -13.436989784240723
    7. ' )' → logprob: -14.561989784240723
    8. ')`' → logprob: -16.061988830566406
    9. ')`
' → logprob: -16.936988830566406
    10. ' )
' → logprob: -17.061988830566406

Token 628: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006343599408864975
    2. ' for' → logprob: -5.256343364715576
    3. 'for' → logprob: -7.881343364715576
    4. '<|end|>' → logprob: -7.881343364715576
    5. '   ' → logprob: -8.131343841552734
    6. '<|end|>' → logprob: -11.256343841552734
    7. '        
' → logprob: -11.631343841552734
    8. '	for' → logprob: -11.631343841552734
    9. '           ' → logprob: -12.381343841552734
    10. ')' → logprob: -12.506343841552734

Token 629: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5132478475570679
    2. 'for' (adapté à ' for') → logprob: -1.0132478475570679
    3. '       ' → logprob: -3.2632479667663574
    4. '   ' → logprob: -8.8882474899292
    5. '	for' → logprob: -11.6382474899292
    6. ' ' → logprob: -13.2632474899292
    7. '
' → logprob: -15.3882474899292
    8. '        
' → logprob: -15.6382474899292
    9. '<|end|>' → logprob: -15.6382474899292
    10. '```' → logprob: -15.8882474899292

Token 630: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.13626079261302948
    2. ' u' → logprob: -2.261260747909546
    3. '(u' → logprob: -3.886260747909546
    4. 'edge' → logprob: -6.761260986328125
    5. ' (' → logprob: -7.386260986328125
    6. '   ' → logprob: -7.511260986328125
    7. ' edge' → logprob: -8.386260986328125
    8. '[u' → logprob: -10.511260986328125
    9. '	u' → logprob: -11.261260986328125
    10. ' ' → logprob: -11.261260986328125

Token 631: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001649220648687333
    2. ',v' → logprob: -8.875164985656738
    3. ' ,' → logprob: -10.750164985656738
    4. ',u' → logprob: -13.125164985656738
    5. ',
' → logprob: -13.750164985656738
    6. ' in' → logprob: -15.625164985656738
    7. ',user' → logprob: -16.375164031982422
    8. 'in' → logprob: -16.500164031982422
    9. ',e' → logprob: -16.875164031982422
    10. ',in' → logprob: -17.125164031982422

Token 632: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07888978719711304
    2. ' v' → logprob: -2.578889846801758
    3. '	v' → logprob: -17.703889846801758
    4. ',v' → logprob: -19.953889846801758
    5. '_v' → logprob: -20.953889846801758
    6. ')v' → logprob: -20.953889846801758
    7. '(v' → logprob: -21.828889846801758
    8. ' ' → logprob: -22.453889846801758
    9. '    ' → logprob: -22.578889846801758
    10. '[v' → logprob: -22.828889846801758

Token 633: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0067170290276408195
    2. 'in' → logprob: -5.006717205047607
    3. '	in' → logprob: -14.63171672821045
    4. '<|end|>' → logprob: -14.63171672821045
    5. ',' → logprob: -15.13171672821045
    6. ' ' → logprob: -15.88171672821045
    7. '_in' → logprob: -16.881717681884766
    8. '<|end|>' → logprob: -16.881717681884766
    9. '    ' → logprob: -17.256717681884766
    10. '   ' → logprob: -17.506717681884766

Token 634: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.126929372549057
    2. ' edges' → logprob: -2.12692928314209
    3. '   ' → logprob: -14.25192928314209
    4. '.edges' → logprob: -15.50192928314209
    5. '(edges' → logprob: -15.87692928314209
    6. ' ' → logprob: -16.126930236816406
    7. '_edges' → logprob: -16.251930236816406
    8. '    ' → logprob: -17.751930236816406
    9. 'Edges' → logprob: -17.751930236816406
    10. 'edge' → logprob: -18.876930236816406

Token 635: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004039933439344168
    2. ':
' → logprob: -5.754039764404297
    3. ' in' → logprob: -7.504039764404297
    4. '):' → logprob: -8.754039764404297
    5. ',' → logprob: -10.129039764404297
    6. '.' → logprob: -10.379039764404297
    7. ')' → logprob: -10.879039764404297
    8. 'in' → logprob: -11.004039764404297
    9. '           ' → logprob: -11.379039764404297
    10. '):
' → logprob: -11.629039764404297

Token 636: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015083164907991886
    2. ' graph' → logprob: -7.0015082359313965
    3. 'graph' → logprob: -8.126508712768555
    4. '       ' → logprob: -9.001508712768555
    5. '	graph' → logprob: -9.876508712768555
    6. '(graph' → logprob: -10.376508712768555
    7. '   ' → logprob: -10.626508712768555
    8. '
' → logprob: -10.626508712768555
    9. '            
' → logprob: -11.001508712768555
    10. ' 
' → logprob: -12.501508712768555

Token 637: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.20145291090011597
    2. 'graph' (adapté à ' graph') → logprob: -1.7014529705047607
    3. '           ' → logprob: -10.45145320892334
    4. '	graph' → logprob: -11.82645320892334
    5. '(graph' → logprob: -13.20145320892334
    6. '               ' → logprob: -14.07645320892334
    7. '            ' → logprob: -15.57645320892334
    8. '_graph' → logprob: -15.82645320892334
    9. '.graph' → logprob: -15.95145320892334
    10. ' ' → logprob: -16.326452255249023

Token 638: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0059455097652971745
    2. '.' → logprob: -5.130945682525635
    3. '.ad' → logprob: -11.880945205688477
    4. ' .' → logprob: -12.005945205688477
    5. '   ' → logprob: -13.005945205688477
    6. 'add' → logprob: -14.505945205688477
    7. '.append' → logprob: -15.380945205688477
    8. ').' → logprob: -15.755945205688477
    9. '.
' → logprob: -16.005945205688477
    10. '`.' → logprob: -16.130945205688477

Token 639: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -2.8206473871250637e-05
    2. '_' → logprob: -10.500028610229492
    3. ' _' → logprob: -15.750028610229492
    4. '_vertex' → logprob: -16.000028610229492
    5. '_line' → logprob: -16.500028610229492
    6. '_edges' → logprob: -16.500028610229492
    7. '_node' → logprob: -17.000028610229492
    8. '_e' → logprob: -17.750028610229492
    9. 'edge' → logprob: -18.500028610229492
    10. '_step' → logprob: -18.500028610229492

Token 640: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0024763736873865128
    2. '(' → logprob: -6.002476215362549
    3. ' (' → logprob: -15.377476692199707
    4. '(
' → logprob: -15.627476692199707
    5. '(user' → logprob: -15.877476692199707
    6. 'u' → logprob: -15.877476692199707
    7. '(v' → logprob: -18.62747573852539
    8. '(U' → logprob: -19.00247573852539
    9. '((' → logprob: -19.00247573852539
    10. ' ' → logprob: -20.00247573852539

Token 641: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011903966515092179
    2. ' ,' → logprob: -9.75011920928955
    3. ',v' → logprob: -10.62511920928955
    4. ',u' → logprob: -10.87511920928955
    5. ',
' → logprob: -11.25011920928955
    6. ')' → logprob: -13.00011920928955
    7. 'u' → logprob: -13.75011920928955
    8. ' ' → logprob: -16.000118255615234
    9. 'v' → logprob: -16.375118255615234
    10. '   ' → logprob: -16.375118255615234

Token 642: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0031777136027812958
    2. ' v' → logprob: -5.753177642822266
    3. ')v' → logprob: -17.253177642822266
    4. '	v' → logprob: -19.128177642822266
    5. 'u' → logprob: -20.003177642822266
    6. ')' → logprob: -20.378177642822266
    7. '   ' → logprob: -21.128177642822266
    8. '    ' → logprob: -21.253177642822266
    9. ' ' → logprob: -21.378177642822266
    10. '[v' → logprob: -21.753177642822266

Token 643: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003863438032567501
    2. ')
' → logprob: -7.8753862380981445
    3. '       ' → logprob: -12.625386238098145
    4. ' )' → logprob: -13.125386238098145
    5. ')return' → logprob: -15.250386238098145
    6. ')
' → logprob: -15.375386238098145
    7. '           ' → logprob: -15.500386238098145
    8. ')

' → logprob: -16.00038719177246
    9. '   ' → logprob: -16.75038719177246
    10. '`)' → logprob: -17.12538719177246

Token 644: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009080009534955025
    2. '
' → logprob: -5.759079933166504
    3. 'b' → logprob: -5.884079933166504
    4. '        
' → logprob: -6.509079933166504
    5. '   ' → logprob: -6.759079933166504
    6. '```' → logprob: -8.759079933166504
    7. ' b' → logprob: -9.259079933166504
    8. '    
' → logprob: -10.009079933166504
    9. '           ' → logprob: -10.634079933166504
    10. '  
' → logprob: -10.759079933166504

Token 645: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3238828778266907
    2. '#' (adapté à ' #') → logprob: -1.448882818222046
    3. '       ' → logprob: -3.698882818222046
    4. 'checker' → logprob: -4.323883056640625
    5. 'bc' → logprob: -6.198883056640625
    6. 'if' → logprob: -7.448883056640625
    7. 'bic' → logprob: -7.573883056640625
    8. '   ' → logprob: -9.198883056640625
    9. 'check' → logprob: -9.323883056640625
    10. '        
' → logprob: -9.323883056640625

Token 646: ' Step' (ID: 22291)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7088432312011719
    2. '#' → logprob: -0.8338432312011719
    3. '       ' → logprob: -3.458843231201172
    4. 'checker' → logprob: -3.458843231201172
    5. 'bc' → logprob: -5.208843231201172
    6. 'if' → logprob: -6.333843231201172
    7. '   ' → logprob: -6.833843231201172
    8. 'bic' → logprob: -7.083843231201172
    9. 'check' → logprob: -8.458843231201172
    10. 'bcc' → logprob: -8.583843231201172

Token 647: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5869775414466858
    2. ' ' → logprob: -1.336977481842041
    3. '2' → logprob: -1.711977481842041
    4. '0' → logprob: -8.0869779586792
    5. ':' → logprob: -8.2119779586792
    6. '   ' → logprob: -8.7119779586792
    7. '#' → logprob: -10.7119779586792
    8. '       ' → logprob: -10.8369779586792
    9. '3' → logprob: -11.4619779586792
    10. '=' → logprob: -11.7119779586792

Token 648: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0038536323700100183
    2. '1' → logprob: -5.628853797912598
    3. '       ' → logprob: -9.003853797912598
    4. '   ' → logprob: -10.003853797912598
    5. '3' → logprob: -10.128853797912598
    6. ' ' → logprob: -10.628853797912598
    7. ':' → logprob: -11.503853797912598
    8. '#' → logprob: -12.253853797912598
    9. '4' → logprob: -13.378853797912598
    10. '=' → logprob: -13.628853797912598

Token 649: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6971407532691956
    2. ':' → logprob: -0.8221407532691956
    3. '#' → logprob: -2.822140693664551
    4. '=' → logprob: -6.072140693664551
    5. ' =' → logprob: -8.19714069366455
    6. '   ' → logprob: -8.32214069366455
    7. 'b' → logprob: -9.57214069366455
    8. '
' → logprob: -10.82214069366455
    9. 'B' → logprob: -10.94714069366455
    10. ' #' → logprob: -11.07214069366455

Token 650: ' Check' (ID: 6208)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05287729203701019
    2. '#' → logprob: -3.552877187728882
    3. 'checker' → logprob: -4.177877426147461
    4. 'bic' → logprob: -6.052877426147461
    5. 'Check' → logprob: -6.427877426147461
    6. 'if' → logprob: -6.677877426147461
    7. 'bc' → logprob: -6.927877426147461
    8. '       ' → logprob: -7.677877426147461
    9. ' bip' → logprob: -7.677877426147461
    10. 'check' → logprob: -9.177877426147461

Token 651: ' if' (ID: 538)
  Prédit: ' bip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bip' → logprob: -0.3613184988498688
    2. 'b' → logprob: -1.4863184690475464
    3. '       ' → logprob: -2.611318588256836
    4. ' if' → logprob: -6.736318588256836
    5. ' b' → logprob: -6.986318588256836
    6. '#' → logprob: -7.236318588256836
    7. 'if' → logprob: -8.236318588256836
    8. '   ' → logprob: -8.861318588256836
    9. ' for' → logprob: -9.611318588256836
    10. 'bic' → logprob: -9.736318588256836

Token 652: ' graph' (ID: 7465)
  Prédit: 'Magic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Magic' → logprob: -0.11929067969322205
    2. ' Magic' → logprob: -2.369290590286255
    3. 'B' → logprob: -4.744290828704834
    4. ' not' → logprob: -4.994290828704834
    5. 'not' → logprob: -5.869290828704834
    6. 'b' → logprob: -8.244290351867676
    7. '   ' → logprob: -8.744290351867676
    8. '_magic' → logprob: -10.744290351867676
    9. ' B' → logprob: -10.994290351867676
    10. ' ' → logprob: -11.119290351867676

Token 653: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.7488936185836792
    2. ' is' → logprob: -1.2488936185836792
    3. '.is' → logprob: -2.3738937377929688
    4. 'B' → logprob: -2.6238937377929688
    5. '       ' → logprob: -3.7488937377929688
    6. '.b' → logprob: -3.8738937377929688
    7. 'b' → logprob: -4.248893737792969
    8. '   ' → logprob: -4.873893737792969
    9. '.' → logprob: -6.123893737792969
    10. ' has' → logprob: -6.623893737792969

Token 654: ' linear' (ID: 23876)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.35215842723846436
    2. ' bip' → logprob: -1.2271584272384644
    3. 'B' → logprob: -6.477158546447754
    4. 'Magic' → logprob: -6.977158546447754
    5. ' Magic' → logprob: -7.227158546447754
    6. '   ' → logprob: -9.102158546447754
    7. 'plan' → logprob: -9.352158546447754
    8. ' planar' → logprob: -9.727158546447754
    9. ' b' → logprob: -9.852158546447754
    10. '       ' → logprob: -10.102158546447754

Token 655: ' (' (ID: 350)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.12585149705410004
    2. '_checker' → logprob: -2.6258513927459717
    3. 'b' → logprob: -4.250851631164551
    4. '_chain' → logprob: -4.750851631164551
    5. '_check' → logprob: -5.125851631164551
    6. '       ' → logprob: -5.500851631164551
    7. 'B' → logprob: -5.875851631164551
    8. 'izable' → logprob: -6.250851631164551
    9. '_order' → logprob: -6.625851631164551
    10. ' =' → logprob: -7.000851631164551

Token 656: 'path' (ID: 4189)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8815547823905945
    2. 'Magic' → logprob: -1.3815548419952393
    3. ' bip' → logprob: -1.8815548419952393
    4. 'B' → logprob: -2.1315548419952393
    5. '       ' → logprob: -4.00655460357666
    6. ' Magic' → logprob: -4.38155460357666
    7. ' not' → logprob: -5.25655460357666
    8. '   ' → logprob: -5.38155460357666
    9. 'not' → logprob: -5.75655460357666
    10. 'graph' → logprob: -5.88155460357666

Token 657: ' graphs' (ID: 73392)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044259048998355865
    2. ' or' → logprob: -3.7942590713500977
    3. 'like' → logprob: -4.419259071350098
    4. 'graph' → logprob: -5.169259071350098
    5. '       ' → logprob: -7.294259071350098
    6. 'or' → logprob: -7.919259071350098
    7. ')
' → logprob: -7.919259071350098
    8. ' graph' → logprob: -7.919259071350098
    9. ' )' → logprob: -8.919259071350098
    10. ',' → logprob: -9.419259071350098

Token 658: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03207376226782799
    2. ' or' → logprob: -3.657073736190796
    3. ' )' → logprob: -6.032073974609375
    4. '):' → logprob: -6.657073974609375
    5. '       ' → logprob: -6.907073974609375
    6. ' and' → logprob: -8.157073974609375
    7. ').' → logprob: -8.157073974609375
    8. ')
' → logprob: -8.657073974609375
    9. ',' → logprob: -9.032073974609375
    10. '):
' → logprob: -10.532073974609375

Token 659: ' unions' (ID: 63953)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -1.1282466650009155
    2. ' chain' → logprob: -2.128246784210205
    3. ' simple' → logprob: -2.503246784210205
    4. ' similar' → logprob: -2.503246784210205
    5. 'chains' → logprob: -2.628246784210205
    6. ' chains' → logprob: -2.753246784210205
    7. 'simple' → logprob: -3.128246784210205
    8. ' linear' → logprob: -3.253246784210205
    9. 'linear' → logprob: -3.253246784210205
    10. 'cycles' → logprob: -3.878246784210205

Token 660: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.10080069303512573
    2. 'of' → logprob: -2.3508007526397705
    3. ')' → logprob: -8.225800514221191
    4. '       ' → logprob: -8.475800514221191
    5. '   ' → logprob: -9.475800514221191
    6. '_of' → logprob: -11.600800514221191
    7. '           ' → logprob: -11.725800514221191
    8. ' or' → logprob: -11.725800514221191
    9. ',' → logprob: -12.600800514221191
    10. ' )' → logprob: -12.975800514221191

Token 661: ' paths' (ID: 23373)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.3569764792919159
    2. ' paths' → logprob: -1.2319765090942383
    3. 'chains' → logprob: -6.356976509094238
    4. ' linear' → logprob: -6.731976509094238
    5. 'path' → logprob: -6.981976509094238
    6. ' chains' → logprob: -6.981976509094238
    7. ' simple' → logprob: -7.231976509094238
    8. 'edges' → logprob: -7.356976509094238
    9. ' edges' → logprob: -7.731976509094238
    10. 'linear' → logprob: -7.731976509094238

Token 662: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28689026832580566
    2. ')
' → logprob: -2.1618902683258057
    3. ' or' → logprob: -2.6618902683258057
    4. '       ' → logprob: -3.5368902683258057
    5. ' only' → logprob: -3.6618902683258057
    6. ' and' → logprob: -6.036890029907227
    7. ',' → logprob: -6.286890029907227
    8. '):
' → logprob: -6.786890029907227
    9. ' )' → logprob: -7.036890029907227
    10. 'only' → logprob: -7.411890029907227

Token 663: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001106875017285347
    2. '
' → logprob: -7.3761067390441895
    3. '        
' → logprob: -8.501107215881348
    4. '<|end|>' → logprob: -8.501107215881348
    5. '#' → logprob: -10.751107215881348
    6. '   ' → logprob: -10.876107215881348
    7. '<|end|>' → logprob: -12.001107215881348
    8. 'return' → logprob: -12.751107215881348
    9. '           ' → logprob: -12.876107215881348
    10. '```' → logprob: -12.876107215881348

Token 664: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6157433986663818
    2. ' bip' → logprob: -0.9907433986663818
    3. '       ' → logprob: -2.490743398666382
    4. ' b' → logprob: -6.115743637084961
    5. 'checker' → logprob: -7.240743637084961
    6. ' checker' → logprob: -7.365743637084961
    7. '#' (adapté à ' #') → logprob: -7.740743637084961
    8. 'bic' → logprob: -7.990743637084961
    9. 'if' → logprob: -8.365743637084961
    10. 'bc' → logprob: -8.615743637084961

Token 665: ' In' (ID: 730)
  Prédit: ' bip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bip' → logprob: -0.31729134917259216
    2. 'b' → logprob: -1.4422913789749146
    3. '       ' → logprob: -3.567291259765625
    4. ' checker' → logprob: -5.942291259765625
    5. '#' → logprob: -6.567291259765625
    6. ' b' → logprob: -6.817291259765625
    7. 'checker' → logprob: -7.067291259765625
    8. 'bic' → logprob: -8.192291259765625
    9. ' #' → logprob: -8.317291259765625
    10. '   ' → logprob: -8.442291259765625

Token 666: ' ' (ID: 220)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'this' → logprob: -1.3690675497055054
    2. 'def' → logprob: -1.6190675497055054
    3. ' this' → logprob: -2.119067668914795
    4. 'degree' → logprob: -2.369067668914795
    5. 'degrees' → logprob: -2.994067668914795
    6. ' degrees' → logprob: -3.119067668914795
    7. '
' → logprob: -3.369067668914795
    8. '_degree' → logprob: -3.494067668914795
    9. ' Magic' → logprob: -3.744067668914795
    10. '   ' → logprob: -3.994067668914795

Token 667: '1' (ID: 16)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.8772931694984436
    2. 'degree' → logprob: -1.5022931098937988
    3. 'def' → logprob: -2.252293109893799
    4. 'degrees' → logprob: -2.752293109893799
    5. '#' → logprob: -3.002293109893799
    6. 'Magic' → logprob: -3.127293109893799
    7. 'all' → logprob: -3.627293109893799
    8. '
' → logprob: -4.127293109893799
    9. 'graph' → logprob: -4.252293109893799
    10. '   ' → logprob: -5.127293109893799

Token 668: 'D' (ID: 35)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4771282374858856
    2. 'D' → logprob: -1.852128267288208
    3. '   ' → logprob: -2.602128267288208
    4. 'd' → logprob: -3.102128267288208
    5. '#' → logprob: -3.602128267288208
    6. ' #' → logprob: -4.227128028869629
    7. ' def' → logprob: -4.352128028869629
    8. '       ' → logprob: -4.602128028869629
    9. ' if' → logprob: -4.727128028869629
    10. ' return' → logprob: -5.102128028869629

Token 669: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4007530212402344
    2. ',' → logprob: -1.7757530212402344
    3. '#' → logprob: -1.9007530212402344
    4. ' if' → logprob: -1.9007530212402344
    5. ' line' → logprob: -2.6507530212402344
    6. ' for' → logprob: -2.9007530212402344
    7. 'if' → logprob: -3.2757530212402344
    8. 'for' → logprob: -3.7757530212402344
    9. 'degree' → logprob: -4.150753021240234
    10. 'line' → logprob: -4.275753021240234

Token 670: ' emb' (ID: 6588)
  Prédit: ' embedding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' embedding' → logprob: -1.1484085321426392
    2. ',' → logprob: -1.3984085321426392
    3. '       ' → logprob: -1.8984085321426392
    4. 'embedding' → logprob: -1.8984085321426392
    5. ' embeddings' → logprob: -3.0234084129333496
    6. '   ' → logprob: -4.02340841293335
    7. 'emb' → logprob: -4.39840841293335
    8. ' if' → logprob: -4.64840841293335
    9. 'drawing' → logprob: -4.89840841293335
    10. '           ' → logprob: -5.39840841293335

Token 671: 'edd' (ID: 5116)
  Prédit: 'edd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edd' → logprob: -0.004010611213743687
    2. 'ed' → logprob: -6.0040106773376465
    3. 'eddings' → logprob: -7.2540106773376465
    4. 'edding' → logprob: -7.7540106773376465
    5. 'edded' → logprob: -8.004010200500488
    6. 'eddi' → logprob: -11.254010200500488
    7. 'e' → logprob: -11.629010200500488
    8. 'eed' → logprob: -12.004010200500488
    9. 'ppable' → logprob: -12.629010200500488
    10. '```' → logprob: -12.879010200500488

Token 672: 'ability' (ID: 3563)
  Prédit: 'ability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -0.22872942686080933
    2. 'able' → logprob: -1.603729486465454
    3. 'ab' → logprob: -6.728729248046875
    4. 'ing' → logprob: -6.728729248046875
    5. 'ed' → logprob: -8.103729248046875
    6. 'abl' → logprob: -8.603729248046875
    7. 'ibility' → logprob: -9.353729248046875
    8. 'ings' → logprob: -9.603729248046875
    9. 'abil' → logprob: -9.728729248046875
    10. 'abble' → logprob: -10.103729248046875

Token 673: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003856370458379388
    2. ',' → logprob: -5.753856182098389
    3. '        
' → logprob: -8.628856658935547
    4. '#' → logprob: -8.878856658935547
    5. '<|end|>' → logprob: -9.378856658935547
    6. ' for' → logprob: -9.503856658935547
    7. ':' → logprob: -9.753856658935547
    8. ' is' → logprob: -10.628856658935547
    9. '   ' → logprob: -10.878856658935547
    10. '
' → logprob: -11.003856658935547

Token 674: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9071142673492432
    2. '#' → logprob: -1.1571142673492432
    3. 'degree' → logprob: -1.5321142673492432
    4. 'degrees' → logprob: -3.532114267349243
    5. '       ' → logprob: -4.407114028930664
    6. ' for' → logprob: -4.532114028930664
    7. 'deg' → logprob: -4.907114028930664
    8. ' degrees' → logprob: -6.407114028930664
    9. ' #' → logprob: -6.657114028930664
    10. '   ' → logprob: -6.907114028930664

Token 675: ' graph' (ID: 7465)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.16253580152988434
    2. 'degrees' → logprob: -2.4125359058380127
    3. '#' → logprob: -3.7875359058380127
    4. 'deg' → logprob: -4.912535667419434
    5. 'for' → logprob: -4.912535667419434
    6. 'max' → logprob: -5.162535667419434
    7. 'def' → logprob: -5.287535667419434
    8. 'if' → logprob: -5.287535667419434
    9. 'vertex' → logprob: -5.912535667419434
    10. 'from' → logprob: -6.537535667419434

Token 676: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.6208862662315369
    2. 'must' → logprob: -1.4958863258361816
    3. ' is' → logprob: -2.1208863258361816
    4. ' should' → logprob: -2.7458863258361816
    5. 'should' → logprob: -3.7458863258361816
    6. 'is' → logprob: -4.495886325836182
    7. ' can' → logprob: -4.870886325836182
    8. ' has' → logprob: -5.745886325836182
    9. '   ' → logprob: -6.245886325836182
    10. 'has' → logprob: -6.745886325836182

Token 677: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.7089148163795471
    2. ' not' → logprob: -1.4589147567749023
    3. 'not' → logprob: -2.3339147567749023
    4. ' have' → logprob: -2.4589147567749023
    5. 'have' → logprob: -3.0839147567749023
    6. 'be' → logprob: -3.0839147567749023
    7. 'n't' → logprob: -8.208914756774902
    8. ' consist' → logprob: -8.458914756774902
    9. 'either' → logprob: -8.583914756774902
    10. ' either' → logprob: -8.833914756774902

Token 678: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5126924514770508
    2. 'acy' → logprob: -1.5126924514770508
    3. 'Magic' → logprob: -2.637692451477051
    4. 'a' → logprob: -2.762692451477051
    5. 'linear' → logprob: -4.012692451477051
    6. ' Magic' → logprob: -5.012692451477051
    7. ' ac' → logprob: -5.262692451477051
    8. 'B' → logprob: -5.387692451477051
    9. ' bip' → logprob: -5.637692451477051
    10. ' a' → logprob: -6.137692451477051

Token 679: ' linear' (ID: 23876)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.2803758382797241
    2. 'collection' → logprob: -2.7803759574890137
    3. 'linear' → logprob: -3.0303759574890137
    4. ' path' → logprob: -3.1553759574890137
    5. 'union' → logprob: -3.6553759574890137
    6. ' linear' → logprob: -4.155375957489014
    7. 'forest' → logprob: -4.155375957489014
    8. ' collection' → logprob: -4.155375957489014
    9. 'simple' → logprob: -5.530375957489014
    10. 'dis' → logprob: -5.905375957489014

Token 680: ' forest' (ID: 19458)
  Prédit: 'forest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forest' → logprob: -0.36417099833488464
    2. 'graph' → logprob: -1.989171028137207
    3. ' forest' → logprob: -2.239171028137207
    4. 'path' → logprob: -3.239171028137207
    5. 'chain' → logprob: -4.489171028137207
    6. ' graph' → logprob: -5.364171028137207
    7. 'interval' → logprob: -5.739171028137207
    8. 'structure' → logprob: -6.489171028137207
    9. ' path' → logprob: -6.989171028137207
    10. ' chain' → logprob: -8.114171028137207

Token 681: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004708156920969486
    2. '
' → logprob: -5.629708290100098
    3. ',' → logprob: -7.879708290100098
    4. '<|end|>' → logprob: -7.879708290100098
    5. '        
' → logprob: -8.754708290100098
    6. '.' → logprob: -9.379708290100098
    7. '#' → logprob: -10.504708290100098
    8. ' for' → logprob: -11.379708290100098
    9. '   ' → logprob: -11.629708290100098
    10. '<|end|>' → logprob: -11.754708290100098

Token 682: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004750626627355814
    2. ' for' → logprob: -5.879750728607178
    3. 'for' → logprob: -6.379750728607178
    4. '   ' → logprob: -9.50475025177002
    5. ' degrees' → logprob: -9.50475025177002
    6. '#' → logprob: -10.62975025177002
    7. 'degree' → logprob: -11.00475025177002
    8. '        
' → logprob: -11.62975025177002
    9. 'degrees' → logprob: -11.75475025177002
    10. '           ' → logprob: -11.87975025177002

Token 683: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1133630275726318
    2. '       ' → logprob: -1.7383630275726318
    3. 'degree' → logprob: -1.7383630275726318
    4. ' for' → logprob: -1.9883630275726318
    5. ' degrees' → logprob: -2.488363027572632
    6. 'degrees' → logprob: -3.113363027572632
    7. ' degree' → logprob: -3.363363027572632
    8. '#' (adapté à ' #') → logprob: -4.363363265991211
    9. 'deg' → logprob: -5.363363265991211
    10. ' #' → logprob: -6.738363265991211

Token 684: ' each' (ID: 2454)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43980470299720764
    2. 'degree' → logprob: -1.9398046731948853
    3. '       ' → logprob: -2.814804792404175
    4. 'degrees' → logprob: -2.939804792404175
    5. ' for' → logprob: -3.064804792404175
    6. '#' → logprob: -3.939804792404175
    7. ' degrees' → logprob: -3.939804792404175
    8. ' degree' → logprob: -5.564804553985596
    9. 'deg' → logprob: -5.939804553985596
    10. 'from' → logprob: -6.189804553985596

Token 685: ' connected' (ID: 12079)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.2629249095916748
    2. ' vertex' → logprob: -1.6379249095916748
    3. 'node' → logprob: -3.887924909591675
    4. ' node' → logprob: -4.387925148010254
    5. '   ' → logprob: -6.887925148010254
    6. 'v' → logprob: -7.012925148010254
    7. 'component' → logprob: -7.137925148010254
    8. 'degree' → logprob: -7.887925148010254
    9. '	vertex' → logprob: -8.887925148010254
    10. 'connected' → logprob: -9.012925148010254

Token 686: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.01816328801214695
    2. ' component' → logprob: -4.018163204193115
    3. '   ' → logprob: -11.643163681030273
    4. ' ' → logprob: -13.393163681030273
    5. 'components' → logprob: -14.018163681030273
    6. '	component' → logprob: -14.393163681030273
    7. '-component' → logprob: -14.393163681030273
    8. '
' → logprob: -14.768163681030273
    9. '_component' → logprob: -14.768163681030273
    10. ' components' → logprob: -16.643163681030273

Token 687: ' is' (ID: 382)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.7491925954818726
    2. ' has' → logprob: -1.2491925954818726
    3. 'must' → logprob: -2.374192714691162
    4. ' must' → logprob: -3.124192714691162
    5. 'should' → logprob: -3.249192714691162
    6. ' either' → logprob: -3.374192714691162
    7. ' should' → logprob: -4.249192714691162
    8. 'either' → logprob: -4.874192714691162
    9. ''s' → logprob: -5.874192714691162
    10. '   ' → logprob: -6.124192714691162

Token 688: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3312340974807739
    2. ' either' → logprob: -1.831234097480774
    3. 'either' → logprob: -2.2062339782714844
    4. ' a' → logprob: -4.456233978271484
    5. ' ' → logprob: -11.331233978271484
    6. 'at' → logprob: -11.956233978271484
    7. '```' → logprob: -13.456233978271484
    8. '   ' → logprob: -13.706233978271484
    9. 'path' → logprob: -13.831233978271484
    10. ' at' → logprob: -13.956233978271484

Token 689: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.04206160083413124
    2. ' path' → logprob: -3.2920615673065186
    3. 'simple' → logprob: -6.292061805725098
    4. ' simple' → logprob: -7.167061805725098
    5. 'tree' → logprob: -7.292061805725098
    6. 'chain' → logprob: -7.917061805725098
    7. 'collection' → logprob: -9.042061805725098
    8. ' tree' → logprob: -9.542061805725098
    9. 'linear' → logprob: -9.667061805725098
    10. ' chain' → logprob: -10.292061805725098

Token 690: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005527103785425425
    2. ',' → logprob: -5.755527019500732
    3. '.' → logprob: -7.380527019500732
    4. '<|end|>' → logprob: -7.505527019500732
    5. ' or' → logprob: -8.13052749633789
    6. ' for' → logprob: -8.63052749633789
    7. '#' → logprob: -8.75552749633789
    8. '   ' → logprob: -9.13052749633789
    9. ' (' → logprob: -9.25552749633789
    10. 'for' → logprob: -9.50552749633789

Token 691: 'no' (ID: 1750)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.7072280049324036
    2. ' or' → logprob: -0.7072280049324036
    3. '#' → logprob: -5.332228183746338
    4. ')' → logprob: -6.332228183746338
    5. '       ' → logprob: -7.082228183746338
    6. '           ' → logprob: -7.332228183746338
    7. 'no' → logprob: -7.332228183746338
    8. ' has' → logprob: -7.332228183746338
    9. 'all' → logprob: -7.457228183746338
    10. 'with' → logprob: -7.457228183746338

Token 692: ' node' (ID: 4596)
  Prédit: ' vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertex' → logprob: -0.3455067574977875
    2. ' node' → logprob: -1.9705067873001099
    3. 'vertex' → logprob: -2.0955066680908203
    4. 'node' → logprob: -3.8455066680908203
    5. ' vertices' → logprob: -5.72050666809082
    6. 'vertices' → logprob: -6.34550666809082
    7. ' cycles' → logprob: -6.34550666809082
    8. 'cycles' → logprob: -6.72050666809082
    9. ' more' → logprob: -8.97050666809082
    10. ' nodes' → logprob: -9.84550666809082

Token 693: ' degree' (ID: 9882)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.08428638428449631
    2. 'has' → logprob: -3.2092864513397217
    3. ' with' → logprob: -3.4592864513397217
    4. '           ' → logprob: -5.209286212921143
    5. 'with' → logprob: -6.334286212921143
    6. 'degree' → logprob: -6.959286212921143
    7. ' degree' → logprob: -8.5842866897583
    8. ' having' → logprob: -8.7092866897583
    9. ' of' → logprob: -9.7092866897583
    10. '       ' → logprob: -9.9592866897583

Token 694: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1827140599489212
    2. ' >' → logprob: -1.8077141046524048
    3. ' greater' → logprob: -6.307713985443115
    4. 'greater' → logprob: -6.932713985443115
    5. ' ' → logprob: -10.057714462280273
    6. ' exceeding' → logprob: -10.557714462280273
    7. ' more' → logprob: -10.682714462280273
    8. ')' → logprob: -10.682714462280273
    9. '```' → logprob: -11.557714462280273
    10. ')>' → logprob: -11.682714462280273

Token 695: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029852005536668
    2. ' ' → logprob: -8.125298500061035
    3. '```' → logprob: -14.625298500061035
    4. '
' → logprob: -14.875298500061035
    5. '   ' → logprob: -15.000298500061035
    6. '=' → logprob: -15.125298500061035
    7. '1' → logprob: -15.250298500061035
    8. '3' → logprob: -16.00029945373535
    9. ')' → logprob: -16.18779945373535
    10. ' ' → logprob: -16.25029945373535

Token 696: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4378848391061183e-05
    2. ' ' → logprob: -11.250014305114746
    3. '```' → logprob: -14.750014305114746
    4. '
' → logprob: -14.875014305114746
    5. '3' → logprob: -16.062515258789062
    6. '1' → logprob: -16.125015258789062
    7. '２' → logprob: -17.125015258789062
    8. '   ' → logprob: -17.375015258789062
    9. '

' → logprob: -17.437515258789062
    10. 'two' → logprob: -17.437515258789062

Token 697: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004981847479939461
    2. ' )' → logprob: -6.004981994628906
    3. ').' → logprob: -6.379981994628906
    4. ' and' → logprob: -8.129981994628906
    5. ')
' → logprob: -8.504981994628906
    6. '       ' → logprob: -9.129981994628906
    7. ',' → logprob: -9.629981994628906
    8. '           ' → logprob: -9.754981994628906
    9. ' or' → logprob: -10.504981994628906
    10. '   ' → logprob: -10.629981994628906

Token 698: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.21483594179153442
    2. 'no' → logprob: -2.0898358821868896
    3. ' all' → logprob: -3.8398358821868896
    4. ' edges' → logprob: -3.8398358821868896
    5. 'all' → logprob: -4.839836120605469
    6. 'each' → logprob: -5.714836120605469
    7. ' each' → logprob: -5.839836120605469
    8. '
' → logprob: -5.839836120605469
    9. 'edges' → logprob: -5.839836120605469
    10. '   ' → logprob: -5.964836120605469

Token 699: ' cycles' (ID: 41478)
  Prédit: ' cycles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycles' → logprob: -0.43783068656921387
    2. 'cycles' → logprob: -1.0628306865692139
    3. ' cycle' → logprob: -5.312830924987793
    4. 'cycle' → logprob: -5.687830924987793
    5. '   ' → logprob: -8.312830924987793
    6. ' node' → logprob: -9.312830924987793
    7. ' ' → logprob: -9.562830924987793
    8. 'component' → logprob: -9.687830924987793
    9. 'node' → logprob: -10.312830924987793
    10. ' component' → logprob: -10.687830924987793

Token 700: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007700792048126459
    2. ').' → logprob: -4.8827009201049805
    3. ')
' → logprob: -10.13270092010498
    4. ' )' → logprob: -10.75770092010498
    5. '   ' → logprob: -11.50770092010498
    6. '),' → logprob: -12.13270092010498
    7. ').
' → logprob: -12.13270092010498
    8. ',' → logprob: -13.00770092010498
    9. '.)' → logprob: -13.13270092010498
    10. '.' → logprob: -13.63270092010498

Token 701: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020616286201402545
    2. '   ' → logprob: -10.000205993652344
    3. '
' → logprob: -10.250205993652344
    4. ' for' → logprob: -10.500205993652344
    5. '        
' → logprob: -10.750205993652344
    6. 'for' → logprob: -10.875205993652344
    7. 'from' → logprob: -11.250205993652344
    8. ' from' → logprob: -11.750205993652344
    9. ' degrees' → logprob: -11.875205993652344
    10. 'visited' → logprob: -12.125205993652344

Token 702: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3229454755783081
    2. 'degree' → logprob: -2.0729455947875977
    3. 'degrees' → logprob: -2.1979455947875977
    4. '       ' → logprob: -4.322945594787598
    5. '#' (adapté à ' #') → logprob: -4.447945594787598
    6. 'from' → logprob: -5.072945594787598
    7. 'visited' → logprob: -5.572945594787598
    8. 'deg' → logprob: -6.447945594787598
    9. '   ' → logprob: -6.822945594787598
    10. 'def' → logprob: -7.322945594787598

Token 703: ' We'll' (ID: 46830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3601376414299011
    2. 'degrees' → logprob: -1.860137701034546
    3. 'degree' → logprob: -2.110137701034546
    4. '#' → logprob: -4.110137462615967
    5. 'deg' → logprob: -6.110137462615967
    6. ' for' → logprob: -6.610137462615967
    7. 'from' → logprob: -6.735137462615967
    8. '   ' → logprob: -6.985137462615967
    9. 'visited' → logprob: -7.110137462615967
    10. 'node' → logprob: -7.485137462615967

Token 704: ' de' (ID: 334)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.403472900390625
    2. 'check' → logprob: -2.153472900390625
    3. 'degree' → logprob: -2.153472900390625
    4. '       ' → logprob: -2.278472900390625
    5. 'degrees' → logprob: -2.278472900390625
    6. '   ' → logprob: -2.903472900390625
    7. ' degrees' → logprob: -2.903472900390625
    8. ' check' → logprob: -3.403472900390625
    9. 'def' → logprob: -3.653472900390625
    10. 'from' → logprob: -3.653472900390625

Token 705: 'compose' (ID: 65322)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.35871395468711853
    2. 'gree' → logprob: -1.233713984489441
    3. 'g' → logprob: -5.3587141036987305
    4. '       ' → logprob: -6.8587141036987305
    5. 'fine' → logprob: -6.8587141036987305
    6. 'grees' → logprob: -7.1087141036987305
    7. '```' → logprob: -7.1087141036987305
    8. '   ' → logprob: -7.9837141036987305
    9. 'fault' → logprob: -8.35871410369873
    10. '#' → logprob: -8.73371410369873

Token 706: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.127830982208252
    2. 'visited' → logprob: -1.377830982208252
    3. ' the' → logprob: -2.377830982208252
    4. 'components' → logprob: -2.502830982208252
    5. 'graph' → logprob: -3.002830982208252
    6. ' visited' → logprob: -3.252830982208252
    7. 'the' → logprob: -3.377830982208252
    8. ' components' → logprob: -3.377830982208252
    9. '   ' → logprob: -3.752830982208252
    10. 'import' → logprob: -4.127830982208252

Token 707: ' connected' (ID: 12079)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.674531877040863
    2. 'check' → logprob: -2.049531936645508
    3. 'detect' → logprob: -2.674531936645508
    4. 'components' → logprob: -2.924531936645508
    5. 'connected' → logprob: -3.049531936645508
    6. 'find' → logprob: -3.174531936645508
    7. 'def' → logprob: -3.674531936645508
    8. 'from' → logprob: -3.924531936645508
    9. ' find' → logprob: -4.174531936645508
    10. ' check' → logprob: -4.174531936645508

Token 708: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.0014084475114941597
    2. '_components' → logprob: -7.001408576965332
    3. ' components' → logprob: -7.626408576965332
    4. 'def' → logprob: -12.751408576965332
    5. 'component' → logprob: -12.876408576965332
    6. '   ' → logprob: -13.126408576965332
    7. 'ness' → logprob: -14.126408576965332
    8. '.components' → logprob: -14.126408576965332
    9. '-components' → logprob: -15.751408576965332
    10. '       ' → logprob: -16.126407623291016

Token 709: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3307982087135315
    2. 'visited' → logprob: -1.4557981491088867
    3. ' visited' → logprob: -3.3307981491088867
    4. 'def' → logprob: -5.705798149108887
    5. ',' → logprob: -5.955798149108887
    6. '
' → logprob: -6.705798149108887
    7. '           ' → logprob: -6.955798149108887
    8. ' and' → logprob: -7.205798149108887
    9. '        
' → logprob: -7.330798149108887
    10. '   ' → logprob: -7.330798149108887

Token 710: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.10063298046588898
    2. ' check' → logprob: -2.475632905960083
    3. '       ' → logprob: -5.975633144378662
    4. 'def' → logprob: -6.225633144378662
    5. 'perform' → logprob: -6.600633144378662
    6. 'visited' → logprob: -6.850633144378662
    7. 'for' → logprob: -7.350633144378662
    8. 'verify' → logprob: -7.350633144378662
    9. 'use' → logprob: -7.475633144378662
    10. ' for' → logprob: -8.225632667541504

Token 711: ' conditions' (ID: 6409)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6917887330055237
    2. '       ' → logprob: -1.566788673400879
    3. ' visited' → logprob: -1.941788673400879
    4. 'degree' → logprob: -3.191788673400879
    5. 'from' → logprob: -3.691788673400879
    6. ' degrees' → logprob: -3.691788673400879
    7. 'degrees' → logprob: -3.816788673400879
    8. ' from' → logprob: -4.566788673400879
    9. '   ' → logprob: -4.691788673400879
    10. ' degree' → logprob: -5.191788673400879

Token 712: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021227074787020683
    2. '
' → logprob: -4.77122688293457
    3. 'visited' → logprob: -4.77122688293457
    4. ' visited' → logprob: -6.02122688293457
    5. '        
' → logprob: -7.89622688293457
    6. 'from' → logprob: -8.02122688293457
    7. ',' → logprob: -8.52122688293457
    8. 'import' → logprob: -8.77122688293457
    9. ' from' → logprob: -9.02122688293457
    10. '   ' → logprob: -9.14622688293457

Token 713: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0211477167904377
    2. '
' → logprob: -4.021147727966309
    3. '        
' → logprob: -6.146147727966309
    4. 'import' → logprob: -8.146147727966309
    5. 'visited' → logprob: -8.396147727966309
    6. 'from' → logprob: -8.646147727966309
    7. '   ' → logprob: -10.521147727966309
    8. ' from' → logprob: -11.021147727966309
    9. 'for' → logprob: -11.146147727966309
    10. '    
' → logprob: -11.146147727966309

Token 714: ' used' (ID: 2061)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.09778989851474762
    2. '       ' → logprob: -2.472790002822876
    3. 'from' → logprob: -5.097789764404297
    4. ' visited' → logprob: -6.347789764404297
    5. 'import' → logprob: -8.472789764404297
    6. '   ' → logprob: -8.847789764404297
    7. 'degree' → logprob: -8.847789764404297
    8. 'degrees' → logprob: -8.972789764404297
    9. 'def' → logprob: -9.097789764404297
    10. '        
' → logprob: -10.097789764404297

Token 715: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009759863838553429
    2. '=' → logprob: -4.634759902954102
    3. ',' → logprob: -13.384759902954102
    4. ' ' → logprob: -14.384759902954102
    5. '_' → logprob: -14.509759902954102
    6. '   ' → logprob: -15.384759902954102
    7. '[' → logprob: -15.384759902954102
    8. ')' → logprob: -15.634759902954102
    9. '=[]' → logprob: -15.884759902954102
    10. '```' → logprob: -16.6347599029541

Token 716: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005240394733846188
    2. ' [' → logprob: -5.255240440368652
    3. '   ' → logprob: -12.755240440368652
    4. '[n' → logprob: -12.880240440368652
    5. '[int' → logprob: -15.005240440368652
    6. '[node' → logprob: -15.505240440368652
    7. '[class' → logprob: -15.630240440368652
    8. '[self' → logprob: -15.880240440368652
    9. '[u' → logprob: -17.130239486694336
    10. '[a' → logprob: -17.255239486694336

Token 717: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.9361264946837764e-07
    2. ' False' → logprob: -16.25
    3. '(False' → logprob: -20.75
    4. '0' → logprob: -21.5
    5. '
' → logprob: -22.0
    6. '[' → logprob: -23.375
    7. '=False' → logprob: -24.0
    8. 'True' → logprob: -24.375
    9. '```' → logprob: -24.5
    10. '.False' → logprob: -24.875

Token 718: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013381359167397022
    2. ']*' → logprob: -9.375133514404297
    3. ' ]' → logprob: -10.625133514404297
    4. '*' → logprob: -11.500133514404297
    5. ']*(' → logprob: -12.250133514404297
    6. ' for' → logprob: -12.750133514404297
    7. ' *' → logprob: -13.250133514404297
    8. ')' → logprob: -13.375133514404297
    9. '   ' → logprob: -13.875133514404297
    10. 'for' → logprob: -14.375133514404297

Token 719: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.034046635031700134
    2. '*' → logprob: -3.4090466499328613
    3. ']' → logprob: -8.409046173095703
    4. ' (' → logprob: -9.534046173095703
    5. ' ' → logprob: -10.284046173095703
    6. '*(' → logprob: -10.659046173095703
    7. '(' → logprob: -11.284046173095703
    8. '   ' → logprob: -11.284046173095703
    9. ' for' → logprob: -12.034046173095703
    10. ')' → logprob: -12.159046173095703

Token 720: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001263567479327321
    2. ' (' → logprob: -7.376263618469238
    3. '(graph' → logprob: -7.876263618469238
    4. '(len' → logprob: -8.501263618469238
    5. '(' → logprob: -10.501263618469238
    6. '   ' → logprob: -11.126263618469238
    7. '((' → logprob: -12.126263618469238
    8. ' ' → logprob: -14.126263618469238
    9. '(N' → logprob: -14.251263618469238
    10. '(
' → logprob: -14.751263618469238

Token 721: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.25705254077911377
    2. 'n' → logprob: -1.5070525407791138
    3. 'graph' → logprob: -5.632052421569824
    4. '(graph' → logprob: -6.757052421569824
    5. ' (' → logprob: -8.632052421569824
    6. '   ' → logprob: -9.007052421569824
    7. ' n' → logprob: -10.507052421569824
    8. '(' → logprob: -11.257052421569824
    9. '(len' → logprob: -12.632052421569824
    10. ' graph' → logprob: -12.757052421569824

Token 722: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006105235777795315
    2. ' +' → logprob: -5.131105422973633
    3. '+
' → logprob: -8.756105422973633
    4. '
' → logprob: -11.131105422973633
    5. ' +
' → logprob: -13.131105422973633
    6. '1' → logprob: -14.131105422973633
    7. ')' → logprob: -15.256105422973633
    8. '[' → logprob: -15.631105422973633
    9. '```' → logprob: -15.881105422973633
    10. '   ' → logprob: -16.006105422973633

Token 723: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.625004768371582
    4. '
' → logprob: -14.875004768371582
    5. '```' → logprob: -16.000003814697266
    6. '2' → logprob: -17.375003814697266
    7. '0' → logprob: -17.625003814697266
    8. '

' → logprob: -17.750003814697266
    9. '{' → logprob: -18.062503814697266
    10. ')' → logprob: -18.562503814697266

Token 724: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.875001907348633
    3. '
' → logprob: -15.375001907348633
    4. '   ' → logprob: -15.500001907348633
    5. '```' → logprob: -15.750001907348633
    6. '2' → logprob: -16.250001907348633
    7. '

' → logprob: -18.187501907348633
    8. '0' → logprob: -18.250001907348633
    9. '``' → logprob: -18.500001907348633
    10. '{' → logprob: -18.625001907348633

Token 725: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760965347290039
    2. ')
' → logprob: -0.8260965347290039
    3. '       ' → logprob: -9.451096534729004
    4. ')
' → logprob: -9.576096534729004
    5. ')

' → logprob: -12.701096534729004
    6. '   ' → logprob: -13.076096534729004
    7. ' )
' → logprob: -13.326096534729004
    8. '
' → logprob: -13.826096534729004
    9. ' )' → logprob: -13.951096534729004
    10. '           ' → logprob: -15.951096534729004

Token 726: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05249164626002312
    2. 'def' → logprob: -4.052491664886475
    3. 'for' → logprob: -4.302491664886475
    4. ' for' → logprob: -4.927491664886475
    5. 'degree' → logprob: -5.302491664886475
    6. 'degrees' → logprob: -6.052491664886475
    7. '   ' → logprob: -6.177491664886475
    8. ' degrees' → logprob: -7.052491664886475
    9. ' def' → logprob: -7.302491664886475
    10. '        
' → logprob: -7.802491664886475

Token 727: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.22743242979049683
    2. 'for' → logprob: -1.8524324893951416
    3. 'from' → logprob: -3.2274324893951416
    4. 'import' → logprob: -5.7274322509765625
    5. '       ' → logprob: -5.9774322509765625
    6. '   ' → logprob: -8.102432250976562
    7. 'degrees' → logprob: -8.102432250976562
    8. 'degree' → logprob: -8.977432250976562
    9. 'stack' → logprob: -9.352432250976562
    10. 'components' → logprob: -9.727432250976562

Token 728: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.004081009421497583
    2. ' dfs' → logprob: -5.504080772399902
    3. 'b' → logprob: -13.629080772399902
    4. 'is' → logprob: -14.629080772399902
    5. ' bfs' → logprob: -15.004080772399902
    6. '_d' → logprob: -15.629080772399902
    7. 'DFS' → logprob: -15.754080772399902
    8. '   ' → logprob: -16.25408172607422
    9. 'expl' → logprob: -16.62908172607422
    10. ' DFS' → logprob: -16.75408172607422

Token 729: '_check' (ID: 15847)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.4878733158111572
    2. '(v' → logprob: -0.9878733158111572
    3. '(node' → logprob: -4.362873077392578
    4. '(' → logprob: -7.987873077392578
    5. '(vertex' → logprob: -8.862873077392578
    6. 'dfs' → logprob: -9.112873077392578
    7. ' (' → logprob: -9.112873077392578
    8. '(x' → logprob: -9.237873077392578
    9. '(s' → logprob: -9.987873077392578
    10. '(i' → logprob: -10.362873077392578

Token 730: '_path' (ID: 5558)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.4774077832698822
    2. '(u' → logprob: -0.9774078130722046
    3. '(node' → logprob: -5.727407932281494
    4. '(' → logprob: -10.477407455444336
    5. '(vertex' → logprob: -10.852407455444336
    6. '(x' → logprob: -11.602407455444336
    7. '(s' → logprob: -12.727407455444336
    8. '(
' → logprob: -12.852407455444336
    9. '(i' → logprob: -12.977407455444336
    10. '   ' → logprob: -13.227407455444336

Token 731: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.5562668442726135
    2. '(u' → logprob: -1.0562667846679688
    3. '(' → logprob: -3.0562667846679688
    4. '(node' → logprob: -3.5562667846679688
    5. '(vertex' → logprob: -6.681266784667969
    6. '(n' → logprob: -6.931266784667969
    7. '(x' → logprob: -7.556266784667969
    8. '(user' → logprob: -9.306266784667969
    9. '(i' → logprob: -9.681266784667969
    10. '(s' → logprob: -9.806266784667969

Token 732: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. ',v' → logprob: -12.375006675720215
    3. ' ,' → logprob: -13.500006675720215
    4. '):' → logprob: -13.750006675720215
    5. '(v' → logprob: -15.625006675720215
    6. ',u' → logprob: -16.62500762939453
    7. '   ' → logprob: -17.00000762939453
    8. '):
' → logprob: -17.25000762939453
    9. ',
' → logprob: -17.75000762939453
    10. ':' → logprob: -17.87500762939453

Token 733: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -1.045300006866455
    2. 'p' → logprob: -1.420300006866455
    3. 'parent' → logprob: -1.670300006866455
    4. ' p' → logprob: -1.795300006866455
    5. '-' → logprob: -3.170300006866455
    6. ' -' → logprob: -5.170300006866455
    7. 'par' → logprob: -7.170300006866455
    8. '-parent' → logprob: -7.295300006866455
    9. 'prev' → logprob: -7.420300006866455
    10. ' par' → logprob: -7.420300006866455

Token 734: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04169394448399544
    2. '):
' → logprob: -3.291693925857544
    3. ',' → logprob: -5.666694164276123
    4. ':' → logprob: -8.791693687438965
    5. '):
' → logprob: -10.791693687438965
    6. ')' → logprob: -12.416693687438965
    7. '):

' → logprob: -12.541693687438965
    8. ' ):' → logprob: -13.166693687438965
    9. '=None' → logprob: -13.666693687438965
    10. '=' → logprob: -14.291693687438965

Token 735: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0082544088363647
    2. '           ' → logprob: -1.0082544088363647
    3. '):
' → logprob: -2.6332545280456543
    4. ',' → logprob: -2.7582545280456543
    5. '   ' → logprob: -2.7582545280456543
    6. '       ' → logprob: -3.7582545280456543
    7. ':
' → logprob: -4.383254528045654
    8. '):' → logprob: -4.633254528045654
    9. ')' → logprob: -5.133254528045654
    10. '
' → logprob: -5.508254528045654

Token 736: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.45915424823760986
    2. ' used' → logprob: -1.2091542482376099
    3. 'stack' → logprob: -3.0841541290283203
    4. ' stack' → logprob: -4.45915412902832
    5. '           ' → logprob: -4.95915412902832
    6. '       ' → logprob: -5.95915412902832
    7. '   ' → logprob: -6.20915412902832
    8. 'visited' → logprob: -7.70915412902832
    9. 'if' → logprob: -9.70915412902832
    10. 'count' → logprob: -9.95915412902832

Token 737: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.511406809295295e-06
    2. '[' → logprob: -12.000006675720215
    3. 'v' → logprob: -16.1250057220459
    4. ',' → logprob: -16.6250057220459
    5. ',v' → logprob: -16.7500057220459
    6. '   ' → logprob: -17.3750057220459
    7. '[u' → logprob: -17.5000057220459
    8. ' [' → logprob: -17.7500057220459
    9. '	v' → logprob: -17.8750057220459
    10. '[
' → logprob: -18.0000057220459

Token 738: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.111957848072052
    2. '=' → logprob: -2.6119577884674072
    3. ' =' → logprob: -3.6119577884674072
    4. ']=' → logprob: -5.736958026885986
    5. ')' → logprob: -6.361958026885986
    6. '=True' → logprob: -8.236957550048828
    7. ',' → logprob: -8.736957550048828
    8. ' ]' → logprob: -9.736957550048828
    9. '[' → logprob: -10.486957550048828
    10. '   ' → logprob: -10.736957550048828

Token 739: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021119564771652
    2. ' =' → logprob: -2.3502111434936523
    3. '=True' → logprob: -12.350211143493652
    4. ' ' → logprob: -16.10021209716797
    5. ',' → logprob: -16.85021209716797
    6. '[' → logprob: -17.60021209716797
    7. '   ' → logprob: -18.35021209716797
    8. '	' → logprob: -19.10021209716797
    9. ')' → logprob: -19.10021209716797
    10. '=False' → logprob: -19.35021209716797

Token 740: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -9.615255839889869e-05
    2. ' True' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.87509536743164
    4. '(True' → logprob: -20.12509536743164
    5. '1' → logprob: -20.25009536743164
    6. ' ' → logprob: -20.50009536743164
    7. '  ' → logprob: -20.75009536743164
    8. '=True' → logprob: -21.50009536743164
    9. '    ' → logprob: -21.87509536743164
    10. 'False' → logprob: -22.87509536743164

Token 741: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1477472484111786
    2. '
' → logprob: -2.022747278213501
    3. '       ' → logprob: -6.022747039794922
    4. ' for' → logprob: -7.522747039794922
    5. '            
' → logprob: -7.897747039794922
    6. '    
' → logprob: -8.022747039794922
    7. '   ' → logprob: -8.147747039794922
    8. '  
' → logprob: -8.397747039794922
    9. ',' → logprob: -8.897747039794922
    10. '\n' → logprob: -9.147747039794922

Token 742: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018394339829683304
    2. ' for' → logprob: -4.268394470214844
    3. '       ' → logprob: -6.018394470214844
    4. '
' → logprob: -7.518394470214844
    5. 'for' → logprob: -7.643394470214844
    6. '   ' → logprob: -8.018394470214844
    7. 'count' → logprob: -9.143394470214844
    8. ' count' → logprob: -9.393394470214844
    9. '               ' → logprob: -9.643394470214844
    10. ',' → logprob: -10.018394470214844

Token 743: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' (adapté à ' deg') → logprob: -0.5027173757553101
    2. 'degree' → logprob: -1.00271737575531
    3. 'count' → logprob: -4.5027174949646
    4. 'for' → logprob: -4.7527174949646
    5. 'if' → logprob: -5.3777174949646
    6. 'degrees' → logprob: -6.2527174949646
    7. 'cnt' → logprob: -7.3777174949646
    8. '   ' → logprob: -7.6277174949646
    9. 'neighbors' → logprob: -8.377717018127441
    10. 'node' → logprob: -8.752717018127441

Token 744: ' =' (ID: 314)
  Prédit: 'ree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.08807271718978882
    2. ' =' → logprob: -2.5880727767944336
    3. '=' → logprob: -4.838072776794434
    4. 'rees' → logprob: -7.838072776794434
    5. '=v' → logprob: -8.463072776794434
    6. '   ' → logprob: -8.588072776794434
    7. 're' → logprob: -8.838072776794434
    8. 'v' → logprob: -10.088072776794434
    9. '[v' → logprob: -10.088072776794434
    10. '       ' → logprob: -10.588072776794434

Token 745: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001213806332089007
    2. '0' → logprob: -6.876214027404785
    3. ' len' → logprob: -8.626214027404785
    4. ' ' → logprob: -14.376214027404785
    5. '   ' → logprob: -14.626214027404785
    6. '(len' → logprob: -15.251214027404785
    7. '[len' → logprob: -15.876214027404785
    8. '	len' → logprob: -16.25121307373047
    9. '1' → logprob: -17.12621307373047
    10. 'sum' → logprob: -17.25121307373047

Token 746: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.005139950197190046
    2. '(M' → logprob: -6.2551398277282715
    3. 'graph' → logprob: -6.6301398277282715
    4. '(self' → logprob: -6.7551398277282715
    5. '(' → logprob: -7.3801398277282715
    6. '(
' → logprob: -10.50514030456543
    7. 'self' → logprob: -11.13014030456543
    8. ' (' → logprob: -11.50514030456543
    9. ' graph' → logprob: -11.50514030456543
    10. '(m' → logprob: -11.88014030456543

Token 747: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.0005319446790963411
    2. '.' → logprob: -8.125532150268555
    3. ' .' → logprob: -8.375532150268555
    4. '.v' → logprob: -13.000532150268555
    5. 'adj' → logprob: -13.500532150268555
    6. '[v' → logprob: -14.250532150268555
    7. ').' → logprob: -15.500532150268555
    8. '.Ad' → logprob: -15.500532150268555
    9. '   ' → logprob: -15.875532150268555
    10. '.
' → logprob: -16.000532150268555

Token 748: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8550976164988242e-05
    2. '[v' → logprob: -11.125018119812012
    3. '[j' → logprob: -12.750018119812012
    4. 'v' → logprob: -14.750018119812012
    5. '[' → logprob: -15.625018119812012
    6. 'd' → logprob: -15.750018119812012
    7. 'jac' → logprob: -17.000019073486328
    8. 'c' → logprob: -17.375019073486328
    9. ' j' → logprob: -17.375019073486328
    10. '[u' → logprob: -17.500019073486328

Token 749: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -13.500003814697266
    3. 'v' → logprob: -13.500003814697266
    4. '[u' → logprob: -14.875003814697266
    5. ')' → logprob: -15.375003814697266
    6. ' [' → logprob: -15.500003814697266
    7. '[
' → logprob: -16.875003814697266
    8. '
' → logprob: -17.750003814697266
    9. ')[' → logprob: -17.875003814697266
    10. ')v' → logprob: -18.125003814697266

Token 750: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025281790643930435
    2. '])' → logprob: -3.9002819061279297
    3. ')
' → logprob: -5.40028190612793
    4. '])
' → logprob: -9.52528190612793
    5. ']' → logprob: -10.15028190612793
    6. '[v' → logprob: -10.77528190612793
    7. '           ' → logprob: -10.90028190612793
    8. ' )' → logprob: -11.52528190612793
    9. '）' → logprob: -11.77528190612793
    10. '})' → logprob: -12.15028190612793

Token 751: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10313884168863297
    2. '
' → logprob: -2.3531389236450195
    3. '<|end|>' → logprob: -7.4781389236450195
    4. ' for' → logprob: -7.6031389236450195
    5. '       ' → logprob: -7.6031389236450195
    6. '            
' → logprob: -8.10313892364502
    7. '   ' → logprob: -8.47813892364502
    8. '
' → logprob: -8.85313892364502
    9. '  
' → logprob: -8.97813892364502
    10. '    
' → logprob: -9.10313892364502

Token 752: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.889052152633667
    2. '           ' → logprob: -1.014052152633667
    3. ' if' → logprob: -1.514052152633667
    4. '       ' → logprob: -5.514052391052246
    5. '   ' → logprob: -6.889052391052246
    6. 'for' → logprob: -7.514052391052246
    7. ' for' → logprob: -7.639052391052246
    8. '
' → logprob: -10.264052391052246
    9. 'return' → logprob: -10.639052391052246
    10. '            
' → logprob: -11.514052391052246

Token 753: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -5.836499985889532e-05
    2. ' deg' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.750059127807617
    4. '	de' → logprob: -18.375059127807617
    5. '           ' → logprob: -18.625059127807617
    6. 'd' → logprob: -19.750059127807617
    7. '  ' → logprob: -20.250059127807617
    8. '       ' → logprob: -20.500059127807617
    9. '     ' → logprob: -20.500059127807617
    10. ' ' → logprob: -21.000059127807617

Token 754: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.11283571273088455
    2. ' >' → logprob: -2.237835645675659
    3. '()>' → logprob: -12.112835884094238
    4. '   ' → logprob: -12.987835884094238
    5. ')>' → logprob: -13.487835884094238
    6. ')' → logprob: -13.987835884094238
    7. ' ' → logprob: -14.237835884094238
    8. '>
' → logprob: -14.612835884094238
    9. '==' → logprob: -15.237835884094238
    10. '           ' → logprob: -15.362835884094238

Token 755: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '
' → logprob: -16.8125057220459
    4. '۲' → logprob: -17.3750057220459
    5. '```' → logprob: -17.6875057220459
    6. '   ' → logprob: -17.8125057220459
    7. '

' → logprob: -17.9375057220459
    8. '２' → logprob: -18.3125057220459
    9. '3' → logprob: -19.1250057220459
    10. '२' → logprob: -19.3125057220459

Token 756: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -15.625009536743164
    4. '   ' → logprob: -16.875009536743164
    5. '۲' → logprob: -16.875009536743164
    6. 'two' → logprob: -17.250009536743164
    7. '
' → logprob: -17.562509536743164
    8. '２' → logprob: -17.750009536743164
    9. '२' → logprob: -17.875009536743164
    10. '২' → logprob: -18.062509536743164

Token 757: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2684193253517151
    2. ':' → logprob: -1.7684192657470703
    3. '               ' → logprob: -3.0184192657470703
    4. ' or' → logprob: -4.76841926574707
    5. ':return' → logprob: -5.01841926574707
    6. '           ' → logprob: -7.26841926574707
    7. 'return' → logprob: -10.51841926574707
    8. 'or' → logprob: -10.64341926574707
    9. '   ' → logprob: -11.01841926574707
    10. ' return' → logprob: -11.51841926574707

Token 758: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001552665780764073
    2. ':' → logprob: -10.000155448913574
    3. ':
' → logprob: -10.250155448913574
    4. '           ' → logprob: -10.750155448913574
    5. ':return' → logprob: -10.875155448913574
    6. 'return' → logprob: -11.625155448913574
    7. ' return' → logprob: -11.625155448913574
    8. '                   ' → logprob: -11.750155448913574
    9. '                       ' → logprob: -12.625155448913574
    10. '              ' → logprob: -13.375155448913574

Token 759: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002600864740088582
    2. ' return' → logprob: -6.50260066986084
    3. '               ' → logprob: -6.87760066986084
    4. '           ' → logprob: -10.62760066986084
    5. '                   ' → logprob: -10.62760066986084
    6. '   ' → logprob: -11.12760066986084
    7. '
' → logprob: -13.12760066986084
    8. '	return' → logprob: -14.00260066986084
    9. '       ' → logprob: -15.25260066986084
    10. '                       ' → logprob: -15.37760066986084

Token 760: ' vertex' (ID: 25363)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0008157044649124146
    2. ' return' → logprob: -7.5008158683776855
    3. '               ' → logprob: -8.875815391540527
    4. '           ' → logprob: -9.125815391540527
    5. '                   ' → logprob: -11.875815391540527
    6. '   ' → logprob: -12.250815391540527
    7. '
' → logprob: -13.875815391540527
    8. '       ' → logprob: -14.750815391540527
    9. '                       ' → logprob: -15.250815391540527
    10. 'Return' → logprob: -16.250816345214844

Token 761: ' with' (ID: 483)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.725652277469635
    2. ' return' → logprob: -1.2256522178649902
    3. 's' → logprob: -2.7256522178649902
    4. ' is' → logprob: -3.1006522178649902
    5. ' has' → logprob: -3.3506522178649902
    6. '           ' → logprob: -4.22565221786499
    7. ' not' → logprob: -4.72565221786499
    8. '               ' → logprob: -4.85065221786499
    9. ':return' → logprob: -5.35065221786499
    10. 'is' → logprob: -5.47565221786499

Token 762: ' degree' (ID: 9882)
  Prédit: ' degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' degree' → logprob: -0.5251568555831909
    2. ' high' → logprob: -1.400156855583191
    3. ' a' → logprob: -2.1501569747924805
    4. 'degree' → logprob: -3.6501569747924805
    5. ' too' → logprob: -4.5251569747924805
    6. ' no' → logprob: -5.9001569747924805
    7. ' highest' → logprob: -6.9001569747924805
    8. 'high' → logprob: -7.1501569747924805
    9. ' space' → logprob: -7.2751569747924805
    10. ' an' → logprob: -7.4001569747924805

Token 763: ' more' (ID: 945)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.001941130612976849
    2. '>' → logprob: -6.751941204071045
    3. ' ' → logprob: -7.376941204071045
    4. ' greater' → logprob: -9.501940727233887
    5. ' >
' → logprob: -9.751940727233887
    6. 'greater' → logprob: -12.876940727233887
    7. ' too' → logprob: -13.501940727233887
    8. ' more' → logprob: -14.126940727233887
    9. ' >
' → logprob: -14.126940727233887
    10. ' ' → logprob: -14.251940727233887

Token 764: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.02989141270518303
    2. ' than' → logprob: -3.5298914909362793
    3. '_than' → logprob: -8.904891014099121
    4. 'Than' → logprob: -13.279891014099121
    5. '>' → logprob: -13.654891014099121
    6. '```' → logprob: -14.654891014099121
    7. '           ' → logprob: -14.779891014099121
    8. '
' → logprob: -15.404891014099121
    9. ' ' → logprob: -15.654891014099121
    10. '   ' → logprob: -15.654891014099121

Token 765: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759397745132446
    2. '2' → logprob: -0.8259397745132446
    3. ' two' → logprob: -15.575940132141113
    4. ' ' → logprob: -16.825939178466797
    5. '```' → logprob: -16.950939178466797
    6. '1' → logprob: -17.575939178466797
    7. '  ' → logprob: -18.825939178466797
    8. 'two' → logprob: -18.825939178466797
    9. '   ' → logprob: -19.075939178466797
    10. '=' → logprob: -20.325939178466797

Token 766: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '
' → logprob: -17.875001907348633
    4. 'two' → logprob: -18.000001907348633
    5. '```' → logprob: -18.250001907348633
    6. '

' → logprob: -18.750001907348633
    7. '   ' → logprob: -19.875001907348633
    8. '1' → logprob: -20.125001907348633
    9. '3' → logprob: -21.000001907348633
    10. '２' → logprob: -21.375001907348633

Token 767: ' =>' (ID: 871)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7869030833244324
    2. ':
' → logprob: -1.0369031429290771
    3. ':' → logprob: -2.286903142929077
    4. '                   ' → logprob: -2.536903142929077
    5. ':return' → logprob: -5.036902904510498
    6. ' return' → logprob: -7.411902904510498
    7. '           ' → logprob: -7.411902904510498
    8. 'return' → logprob: -7.786902904510498
    9. '                       ' → logprob: -8.036903381347656
    10. ' or' → logprob: -8.161903381347656

Token 768: ' can't' (ID: 8535)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004650014918297529
    2. ' return' → logprob: -5.504650115966797
    3. '               ' → logprob: -8.129650115966797
    4. 'False' → logprob: -8.379650115966797
    5. '                   ' → logprob: -10.129650115966797
    6. '
' → logprob: -12.504650115966797
    7. '           ' → logprob: -13.879650115966797
    8. '   ' → logprob: -14.004650115966797
    9. ' False' → logprob: -14.129650115966797
    10. '                       ' → logprob: -14.504650115966797

Token 769: ' embed' (ID: 43198)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.6353820562362671
    2. ' be' → logprob: -0.7603820562362671
    3. 'embed' → logprob: -6.635382175445557
    4. '_be' → logprob: -7.010382175445557
    5. '	be' → logprob: -8.885381698608398
    6. 'draw' → logprob: -9.135381698608398
    7. '   ' → logprob: -9.885381698608398
    8. ' embed' → logprob: -10.135381698608398
    9. ' lie' → logprob: -10.510381698608398
    10. 'lie' → logprob: -10.635381698608398

Token 770: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.22525446116924286
    2. '           ' → logprob: -2.225254535675049
    3. ' in' → logprob: -3.225254535675049
    4. 'on' → logprob: -3.600254535675049
    5. '               ' → logprob: -4.600254535675049
    6. ' line' → logprob: -5.350254535675049
    7. ' return' → logprob: -5.725254535675049
    8. 'in' → logprob: -5.850254535675049
    9. 'return' → logprob: -6.475254535675049
    10. '       ' → logprob: -7.600254535675049

Token 771: ' a' (ID: 261)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5161916613578796
    2. ' line' → logprob: -1.1411917209625244
    3. 'a' → logprob: -3.0161917209625244
    4. ' a' → logprob: -3.3911917209625244
    5. ' the' → logprob: -7.516191482543945
    6. 'the' → logprob: -7.766191482543945
    7. '1' → logprob: -9.516191482543945
    8. '_line' → logprob: -11.141191482543945
    9. ' one' → logprob: -11.391191482543945
    10. '```' → logprob: -11.391191482543945

Token 772: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.12694701552391052
    2. 'line' → logprob: -2.1269469261169434
    3. ' straight' → logprob: -11.376947402954102
    4. ' linear' → logprob: -13.501947402954102
    5. 'straight' → logprob: -13.501947402954102
    6. 'linear' → logprob: -13.626947402954102
    7. ' ' → logprob: -14.001947402954102
    8. '_line' → logprob: -14.001947402954102
    9. '1' → logprob: -14.001947402954102
    10. ' single' → logprob: -15.126947402954102

Token 773: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008428522385656834
    2. '                   ' → logprob: -5.508428573608398
    3. '           ' → logprob: -5.633428573608398
    4. '
' → logprob: -7.758428573608398
    5. ' return' → logprob: -9.383428573608398
    6. 'return' → logprob: -9.508428573608398
    7. '                       ' → logprob: -9.883428573608398
    8. ',' → logprob: -10.633428573608398
    9. ')' → logprob: -10.758428573608398
    10. '       ' → logprob: -11.133428573608398

Token 774: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001363168703392148
    2. '           ' → logprob: -9.375136375427246
    3. '                   ' → logprob: -10.625136375427246
    4. 'return' → logprob: -10.875136375427246
    5. ' return' → logprob: -12.500136375427246
    6. '   ' → logprob: -13.375136375427246
    7. '       ' → logprob: -13.750136375427246
    8. '                       ' → logprob: -14.875136375427246
    9. '
' → logprob: -15.000136375427246
    10. '              ' → logprob: -15.125136375427246

Token 775: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002653774805366993
    2. ' return' → logprob: -6.0026535987854
    3. '               ' → logprob: -9.002654075622559
    4. '                   ' → logprob: -10.377654075622559
    5. '
' → logprob: -10.752654075622559
    6. '   ' → logprob: -13.877654075622559
    7. '           ' → logprob: -14.252654075622559
    8. '	return' → logprob: -14.377654075622559
    9. '                       ' → logprob: -15.377654075622559
    10. ':return' → logprob: -16.627653121948242

Token 776: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.8624639324116288e-06
    2. ' False' → logprob: -13.250001907348633
    3. 'True' → logprob: -19.750001907348633
    4. '(False' → logprob: -20.250001907348633
    5. '   ' → logprob: -21.500001907348633
    6. 'false' → logprob: -22.125001907348633
    7. '
' → logprob: -22.250001907348633
    8. '           ' → logprob: -23.250001907348633
    9. '=False' → logprob: -23.375001907348633
    10. '               ' → logprob: -23.625001907348633

Token 777: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011350661516189575
    2. '
' → logprob: -4.511350631713867
    3. '\n' → logprob: -9.636350631713867
    4. '            
' → logprob: -9.761350631713867
    5. '    
' → logprob: -10.011350631713867
    6. '       ' → logprob: -10.386350631713867
    7. '<|end|>' → logprob: -10.636350631713867
    8. '		' → logprob: -11.136350631713867
    9. '   ' → logprob: -11.511350631713867
    10. '  
' → logprob: -11.511350631713867

Token 778: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004986116662621498
    2. '       ' → logprob: -6.62998628616333
    3. '<|end|>' → logprob: -6.87998628616333
    4. '\n' → logprob: -7.25498628616333
    5. '               ' → logprob: -8.004985809326172
    6. '            ' → logprob: -8.379985809326172
    7. '            
' → logprob: -8.379985809326172
    8. '   ' → logprob: -8.379985809326172
    9. ' 
' → logprob: -8.879985809326172
    10. '		' → logprob: -9.379985809326172

Token 779: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4680357873439789
    2. '           ' → logprob: -1.5930358171463013
    3. 'for' (adapté à ' for') → logprob: -2.3430356979370117
    4. '   ' → logprob: -2.8430356979370117
    5. '       ' → logprob: -4.343035697937012
    6. '    
' → logprob: -7.218035697937012
    7. '
' → logprob: -7.343035697937012
    8. '            
' → logprob: -7.343035697937012
    9. ' if' → logprob: -8.593035697937012
    10. '        
' → logprob: -8.843035697937012

Token 780: ' nx' (ID: 50118)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.014061599969863892
    2. 'w' → logprob: -4.889061450958252
    3. 'nx' → logprob: -5.639061450958252
    4. 'u' → logprob: -6.264061450958252
    5. 'to' → logprob: -7.514061450958252
    6. 'neighbor' → logprob: -8.76406192779541
    7. 'n' → logprob: -8.88906192779541
    8. 'nw' → logprob: -9.38906192779541
    9. ' nv' → logprob: -11.26406192779541
    10. 'nei' → logprob: -11.26406192779541

Token 781: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02483290806412697
    2. 't' → logprob: -3.8998329639434814
    3. 'n' → logprob: -5.524832725524902
    4. 'in' → logprob: -8.899832725524902
    5. 'v' → logprob: -9.274832725524902
    6. 'h' → logprob: -11.149832725524902
    7. ',' → logprob: -11.399832725524902
    8. 'w' → logprob: -12.274832725524902
    9. '_in' → logprob: -12.524832725524902
    10. '   ' → logprob: -12.774832725524902

Token 782: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.00026658078422769904
    2. ' graph' → logprob: -8.250267028808594
    3. '(graph' → logprob: -12.375267028808594
    4. '	graph' → logprob: -13.875267028808594
    5. 'range' → logprob: -16.500267028808594
    6. 'graphql' → logprob: -17.125267028808594
    7. '   ' → logprob: -17.750267028808594
    8. 'self' → logprob: -18.000267028808594
    9. '[' → logprob: -18.250267028808594
    10. '```' → logprob: -18.750267028808594

Token 783: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.12697157263755798
    2. '[v' → logprob: -2.126971483230591
    3. 'adj' → logprob: -10.626971244812012
    4. '.v' → logprob: -12.001971244812012
    5. '[u' → logprob: -12.751971244812012
    6. '.Ad' → logprob: -12.876971244812012
    7. '[' → logprob: -13.751971244812012
    8. '.' → logprob: -13.876971244812012
    9. '_adj' → logprob: -13.876971244812012
    10. ' .' → logprob: -14.251971244812012

Token 784: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00012308525037951767
    2. '[v' → logprob: -9.250123023986816
    3. '[j' → logprob: -11.000123023986816
    4. 'v' → logprob: -11.875123023986816
    5. 'jac' → logprob: -13.625123023986816
    6. '[' → logprob: -14.375123023986816
    7. 'js' → logprob: -14.625123023986816
    8. 'adj' → logprob: -15.750123023986816
    9. '```' → logprob: -16.375123977661133
    10. 'aj' → logprob: -16.500123977661133

Token 785: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.2113979209971149e-05
    2. 'v' → logprob: -11.875012397766113
    3. '[' → logprob: -12.500012397766113
    4. '[n' → logprob: -14.875012397766113
    5. '][' → logprob: -15.125012397766113
    6. '[
' → logprob: -15.750012397766113
    7. '[u' → logprob: -16.000011444091797
    8. '```' → logprob: -16.750011444091797
    9. '[s' → logprob: -16.875011444091797
    10. ',v' → logprob: -16.875011444091797

Token 786: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.09992548078298569
    2. ']:' → logprob: -3.0999255180358887
    3. ':' → logprob: -3.8499255180358887
    4. ':
' → logprob: -3.8499255180358887
    5. '):
' → logprob: -5.349925518035889
    6. '[v' → logprob: -6.224925518035889
    7. '           ' → logprob: -7.974925518035889
    8. '[' → logprob: -9.47492504119873
    9. '):' → logprob: -9.59992504119873
    10. ']' → logprob: -9.72492504119873

Token 787: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.2961512513575144e-05
    2. '                   ' → logprob: -12.250022888183594
    3. ':' → logprob: -12.375022888183594
    4. '       ' → logprob: -12.625022888183594
    5. '           ' → logprob: -13.125022888183594
    6. '	           ' → logprob: -13.500022888183594
    7. ' if' → logprob: -13.625022888183594
    8. '<|end|>' → logprob: -13.625022888183594
    9. '		       ' → logprob: -13.750022888183594
    10. ':
' → logprob: -13.750022888183594

Token 788: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.012641259469091892
    2. '               ' → logprob: -5.012641429901123
    3. ' if' → logprob: -5.137641429901123
    4. '                   ' → logprob: -10.387640953063965
    5. '	if' → logprob: -13.137640953063965
    6. '           ' → logprob: -13.637640953063965
    7. '       ' → logprob: -13.762640953063965
    8. '   ' → logprob: -13.887640953063965
    9. '                       ' → logprob: -15.637640953063965
    10. ';if' → logprob: -15.762640953063965

Token 789: ' not' (ID: 625)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00044711565715260804
    2. 'not' → logprob: -7.7504472732543945
    3. ' nx' → logprob: -11.375447273254395
    4. '(nx' → logprob: -12.375447273254395
    5. ' not' → logprob: -15.125447273254395
    6. 'n' → logprob: -15.750447273254395
    7. '   ' → logprob: -16.000446319580078
    8. '
' → logprob: -17.000446319580078
    9. '```' → logprob: -17.000446319580078
    10. '

' → logprob: -17.875446319580078

Token 790: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.01335680391639471
    2. ' used' → logprob: -4.388356685638428
    3. 'nx' → logprob: -7.263356685638428
    4. ' nx' → logprob: -9.638357162475586
    5. '(nx' → logprob: -9.638357162475586
    6. '
' → logprob: -12.513357162475586
    7. '   ' → logprob: -12.513357162475586
    8. 'visited' → logprob: -13.638357162475586
    9. 'use' → logprob: -13.888357162475586
    10. '_used' → logprob: -13.888357162475586

Token 791: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.0921942703134846e-05
    2. '[' → logprob: -12.25001049041748
    3. ' [' → logprob: -13.12501049041748
    4. '
' → logprob: -13.50001049041748
    5. '   ' → logprob: -14.50001049041748
    6. '```' → logprob: -14.50001049041748
    7. '(nx' → logprob: -14.87501049041748
    8. '[
' → logprob: -15.00001049041748
    9. '

' → logprob: -15.12501049041748
    10. 'nx' → logprob: -15.25001049041748

Token 792: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0023672052193433046
    2. '[x' → logprob: -6.12736701965332
    3. '[n' → logprob: -8.62736701965332
    4. '[' → logprob: -13.37736701965332
    5. '```' → logprob: -14.50236701965332
    6. '
' → logprob: -15.37736701965332
    7. '[
' → logprob: -15.75236701965332
    8. 'nx' → logprob: -15.87736701965332
    9. '(nx' → logprob: -16.37736701965332
    10. ' x' → logprob: -16.87736701965332

Token 793: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8345208764076233
    2. ':' → logprob: -1.0845208168029785
    3. ' and' → logprob: -2.0845208168029785
    4. 'and' → logprob: -2.3345208168029785
    5. '):
' → logprob: -5.5845208168029785
    6. ']:
' → logprob: -6.0845208168029785
    7. '():
' → logprob: -8.709521293640137
    8. ']:' → logprob: -8.834521293640137
    9. '):' → logprob: -9.834521293640137
    10. ']' → logprob: -9.959521293640137

Token 794: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005893715424463153
    2. ':
' → logprob: -7.875589370727539
    3. ':' → logprob: -9.250589370727539
    4. '                       ' → logprob: -10.500589370727539
    5. ' and' → logprob: -10.750589370727539
    6. '                    
' → logprob: -11.250589370727539
    7. '               ' → logprob: -11.375589370727539
    8. ' if' → logprob: -11.625589370727539
    9. '                  ' → logprob: -12.125589370727539
    10. ',' → logprob: -12.250589370727539

Token 795: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18519656360149384
    2. '                       ' → logprob: -1.8101965188980103
    3. ' if' → logprob: -5.435196399688721
    4. '                   ' → logprob: -7.185196399688721
    5. 'res' → logprob: -9.060196876525879
    6. 'result' → logprob: -9.060196876525879
    7. '
' → logprob: -9.810196876525879
    8. 'return' → logprob: -10.935196876525879
    9. '                        
' → logprob: -12.560196876525879
    10. '               ' → logprob: -12.685196876525879

Token 796: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.03400053828954697
    2. ' not' → logprob: -3.4090006351470947
    3. '                   ' → logprob: -8.284000396728516
    4. '               ' → logprob: -10.159000396728516
    5. '                       ' → logprob: -10.284000396728516
    6. '(not' → logprob: -11.409000396728516
    7. 'dfs' → logprob: -11.909000396728516
    8. '   ' → logprob: -12.284000396728516
    9. '           ' → logprob: -13.534000396728516
    10. '
' → logprob: -13.659000396728516

Token 797: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.688212614681106e-05
    2. ' dfs' → logprob: -11.000017166137695
    3. 'df' → logprob: -16.375017166137695
    4. '
' → logprob: -19.875017166137695
    5. 'dfa' → logprob: -20.375017166137695
    6. 'd' → logprob: -20.750017166137695
    7. '   ' → logprob: -21.875017166137695
    8. 'ds' → logprob: -21.875017166137695
    9. 'DFS' → logprob: -22.125017166137695
    10. 'dj' → logprob: -23.000017166137695

Token 798: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -9.491498531133402e-06
    2. '_' → logprob: -12.000009536743164
    3. 'check' → logprob: -14.000009536743164
    4. '
' → logprob: -14.125009536743164
    5. '(nx' → logprob: -15.000009536743164
    6. '_CHECK' → logprob: -15.250009536743164
    7. '_checks' → logprob: -15.625009536743164
    8. '_che' → logprob: -15.750009536743164
    9. '_
' → logprob: -16.125009536743164
    10. '```' → logprob: -16.375009536743164

Token 799: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.005453362595289946
    2. '(nx' → logprob: -5.505453586578369
    3. 'path' → logprob: -7.130453586578369
    4. 'nx' → logprob: -7.755453586578369
    5. '(n' → logprob: -9.880453109741211
    6. '_' → logprob: -10.755453109741211
    7. '[n' → logprob: -11.255453109741211
    8. '
' → logprob: -11.505453109741211
    9. 'dfs' → logprob: -12.005453109741211
    10. '```' → logprob: -12.005453109741211

Token 800: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -2.4987974029500037e-05
    2. '(' → logprob: -10.875024795532227
    3. '(
' → logprob: -12.750024795532227
    4. 'nx' → logprob: -13.375024795532227
    5. '(n' → logprob: -13.625024795532227
    6. ' (' → logprob: -15.500024795532227
    7. '
' → logprob: -17.125024795532227
    8. '(np' → logprob: -17.250024795532227
    9. '```' → logprob: -17.500024795532227
    10. '   ' → logprob: -18.000024795532227

Token 801: ',' (ID: 11)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.008819960057735443
    2. '(n' → logprob: -5.008820056915283
    3. '(' → logprob: -6.633820056915283
    4. '(v' → logprob: -7.508820056915283
    5. ',' → logprob: -8.883819580078125
    6. ' (' → logprob: -10.008819580078125
    7. '(
' → logprob: -10.258819580078125
    8. '(x' → logprob: -11.758819580078125
    9. ')' → logprob: -13.133819580078125
    10. 'nx' → logprob: -13.508819580078125

Token 802: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.3856492842023727e-06
    2. ' v' → logprob: -14.000000953674316
    3. '	v' → logprob: -15.250000953674316
    4. ')v' → logprob: -15.375000953674316
    5. '[v' → logprob: -17.500001907348633
    6. '
' → logprob: -19.125001907348633
    7. ',v' → logprob: -19.875001907348633
    8. '(v' → logprob: -19.875001907348633
    9. '<v' → logprob: -20.000001907348633
    10. 'в' → logprob: -20.250001907348633

Token 803: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07471488416194916
    2. '):' → logprob: -2.6997148990631104
    3. ',' → logprob: -5.574714660644531
    4. '                   ' → logprob: -7.574714660644531
    5. '                       ' → logprob: -7.949714660644531
    6. '                      ' → logprob: -10.949714660644531
    7. '(v' → logprob: -11.074714660644531
    8. ' ):
' → logprob: -11.574714660644531
    9. ',v' → logprob: -11.574714660644531
    10. '                  ' → logprob: -11.699714660644531

Token 804: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.003881546203047037
    2. ':' → logprob: -5.753881454467773
    3. ':
' → logprob: -7.503881454467773
    4. '                   ' → logprob: -9.753881454467773
    5. '                      ' → logprob: -9.878881454467773
    6. ':return' → logprob: -10.753881454467773
    7. '                        ' → logprob: -12.003881454467773
    8. ',' → logprob: -12.378881454467773
    9. '                           ' → logprob: -12.753881454467773
    10. '               ' → logprob: -13.628881454467773

Token 805: ' return' (ID: 622)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.18619760870933533
    2. 'return' (adapté à ' return') → logprob: -1.9361976385116577
    3. '                       ' → logprob: -3.936197519302368
    4. ' return' → logprob: -5.186197757720947
    5. '                               ' → logprob: -7.936197757720947
    6. '                   ' → logprob: -10.061197280883789
    7. '           ' → logprob: -10.311197280883789
    8. '
' → logprob: -10.561197280883789
    9. '               ' → logprob: -11.311197280883789
    10. '                          ' → logprob: -11.436197280883789

Token 806: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0206720617134124e-05
    2. ' False' → logprob: -11.50001049041748
    3. '(False' → logprob: -20.875009536743164
    4. 'True' → logprob: -21.125009536743164
    5. 'false' → logprob: -21.875009536743164
    6. '=False' → logprob: -22.375009536743164
    7. '_false' → logprob: -23.750009536743164
    8. '   ' → logprob: -23.875009536743164
    9. 'Fal' → logprob: -24.250009536743164
    10. 'F' → logprob: -24.375009536743164

Token 807: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.8497312895488e-05
    2. '               ' → logprob: -10.375068664550781
    3. '                   ' → logprob: -10.875068664550781
    4. 'return' → logprob: -11.375068664550781
    5. '       ' → logprob: -12.125068664550781
    6. '   ' → logprob: -14.625068664550781
    7. '                       ' → logprob: -15.250068664550781
    8. ' return' → logprob: -15.750068664550781
    9. '		' → logprob: -15.750068664550781
    10. '	       ' → logprob: -16.50006866455078

Token 808: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.171581091824919e-05
    2. 'return' → logprob: -10.25007152557373
    3. '               ' → logprob: -10.87507152557373
    4. '                   ' → logprob: -11.12507152557373
    5. '       ' → logprob: -13.50007152557373
    6. ' return' → logprob: -14.25007152557373
    7. '		' → logprob: -16.000072479248047
    8. '   ' → logprob: -16.125072479248047
    9. '                       ' → logprob: -16.500072479248047
    10. '
' → logprob: -17.000072479248047

Token 809: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038533941842615604
    2. 'return' → logprob: -5.8788533210754395
    3. '               ' → logprob: -7.3788533210754395
    4. 'elif' (adapté à ' elif') → logprob: -8.003853797912598
    5. '                   ' → logprob: -9.878853797912598
    6. ' return' → logprob: -11.128853797912598
    7. '       ' → logprob: -11.628853797912598
    8. '
' → logprob: -12.128853797912598
    9. '		' → logprob: -13.128853797912598
    10. ' elif' → logprob: -13.253853797912598

Token 810: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -1.0683535037969705e-05
    2. ' nx' → logprob: -11.62501049041748
    3. '(nx' → logprob: -13.37501049041748
    4. '   ' → logprob: -16.625011444091797
    5. '
' → logprob: -16.875011444091797
    6. 'mx' → logprob: -18.875011444091797
    7. '```' → logprob: -19.500011444091797
    8. ' ' → logprob: -19.875011444091797
    9. '  ' → logprob: -20.000011444091797
    10. 'n' → logprob: -20.125011444091797

Token 811: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.061997491866350174
    2. ' !=' → logprob: -2.811997413635254
    3. '()!=' → logprob: -11.686997413635254
    4. ')!=' → logprob: -11.936997413635254
    5. ']!=' → logprob: -12.561997413635254
    6. '!=-' → logprob: -12.561997413635254
    7. '!==' → logprob: -13.186997413635254
    8. '!=(' → logprob: -13.561997413635254
    9. '!='' → logprob: -13.686997413635254
    10. ' not' → logprob: -13.686997413635254

Token 812: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -7.941850526549388e-06
    2. ' parent' → logprob: -11.750007629394531
    3. 'v' → logprob: -17.62500762939453
    4. '	parent' → logprob: -18.00000762939453
    5. '
' → logprob: -18.25000762939453
    6. 'paren' → logprob: -18.87500762939453
    7. '[parent' → logprob: -20.25000762939453
    8. '   ' → logprob: -20.75000762939453
    9. '(parent' → logprob: -21.00000762939453
    10. 'p' → logprob: -21.25000762939453

Token 813: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3182051479816437
    2. ':' → logprob: -1.9432051181793213
    3. '                   ' → logprob: -2.0682051181793213
    4. '                       ' → logprob: -6.3182053565979
    5. '               ' → logprob: -7.6932053565979
    6. ':return' → logprob: -7.9432053565979
    7. '           ' → logprob: -9.693204879760742
    8. ' and' → logprob: -10.068204879760742
    9. '):
' → logprob: -10.318204879760742
    10. '                  ' → logprob: -11.068204879760742

Token 814: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0047271414659917355
    2. '                       ' → logprob: -5.379727363586426
    3. 'return' → logprob: -9.629727363586426
    4. '               ' → logprob: -10.754727363586426
    5. ' return' → logprob: -11.379727363586426
    6. '                           ' → logprob: -12.754727363586426
    7. '           ' → logprob: -13.129727363586426
    8. '   ' → logprob: -14.504727363586426
    9. '	               ' → logprob: -15.004727363586426
    10. '                  ' → logprob: -15.004727363586426

Token 815: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.013836014084517956
    2. ' return' → logprob: -4.763835906982422
    3. '                   ' → logprob: -5.763835906982422
    4. '#' (adapté à ' #') → logprob: -7.013835906982422
    5. '                       ' → logprob: -7.013835906982422
    6. '               ' → logprob: -8.263835906982422
    7. '           ' → logprob: -12.263835906982422
    8. '	return' → logprob: -12.763835906982422
    9. '   ' → logprob: -12.888835906982422
    10. '       ' → logprob: -13.638835906982422

Token 816: ' cycle' (ID: 15839)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011407949961721897
    2. '#' → logprob: -4.511407852172852
    3. '                   ' → logprob: -8.261407852172852
    4. ' return' → logprob: -9.261407852172852
    5. '               ' → logprob: -12.511407852172852
    6. '                       ' → logprob: -13.136407852172852
    7. ' #' → logprob: -14.636407852172852
    8. '   ' → logprob: -15.386407852172852
    9. '           ' → logprob: -15.886407852172852
    10. '	return' → logprob: -15.886407852172852

Token 817: ' detected' (ID: 28357)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18299593031406403
    2. '                       ' → logprob: -1.9329959154129028
    3. '               ' → logprob: -4.682995796203613
    4. ' return' → logprob: -4.807995796203613
    5. 'return' → logprob: -5.807995796203613
    6. ':
' → logprob: -7.557995796203613
    7. '           ' → logprob: -7.932995796203613
    8. '
' → logprob: -8.557995796203613
    9. '                  ' → logprob: -8.932995796203613
    10. '       ' → logprob: -9.057995796203613

Token 818: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1151781901717186
    2. '                   ' → logprob: -2.240178108215332
    3. ' return' → logprob: -7.115178108215332
    4. 'return' → logprob: -7.240178108215332
    5. '               ' → logprob: -7.365178108215332
    6. '                           ' → logprob: -9.990178108215332
    7. ',' → logprob: -10.365178108215332
    8. '                      ' → logprob: -10.990178108215332
    9. '<|end|>' → logprob: -11.115178108215332
    10. '
' → logprob: -11.115178108215332

Token 819: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1832956075668335
    2. '                   ' → logprob: -1.8082956075668335
    3. 'return' → logprob: -6.183295726776123
    4. ' return' → logprob: -7.183295726776123
    5. '               ' → logprob: -7.308295726776123
    6. '           ' → logprob: -10.808295249938965
    7. '                           ' → logprob: -11.683295249938965
    8. '
' → logprob: -12.308295249938965
    9. '       ' → logprob: -12.433295249938965
    10. '                      ' → logprob: -12.808295249938965

Token 820: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006695830728858709
    2. ' return' → logprob: -5.256695747375488
    3. '                       ' → logprob: -7.006695747375488
    4. '                   ' → logprob: -7.506695747375488
    5. '               ' → logprob: -12.381695747375488
    6. '
' → logprob: -14.881695747375488
    7. '           ' → logprob: -15.006695747375488
    8. '	return' → logprob: -15.381695747375488
    9. '                           ' → logprob: -15.631695747375488
    10. '   ' → logprob: -15.756695747375488

Token 821: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.615255839889869e-05
    2. ' False' → logprob: -9.250096321105957
    3. 'True' → logprob: -19.50009536743164
    4. '_false' → logprob: -21.50009536743164
    5. 'false' → logprob: -22.25009536743164
    6. '(False' → logprob: -22.62509536743164
    7. '=False' → logprob: -23.00009536743164
    8. 'F' → logprob: -24.50009536743164
    9. '.False' → logprob: -24.75009536743164
    10. '_FALSE' → logprob: -25.50009536743164

Token 822: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.774276774493046e-05
    2. 'return' → logprob: -10.875038146972656
    3. '       ' → logprob: -11.250038146972656
    4. '               ' → logprob: -12.625038146972656
    5. '		' → logprob: -14.250038146972656
    6. '	       ' → logprob: -14.750038146972656
    7. '                   ' → logprob: -15.000038146972656
    8. ' return' → logprob: -15.000038146972656
    9. '          ' → logprob: -15.250038146972656
    10. '   ' → logprob: -15.750038146972656

Token 823: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003710894088726491
    2. '       ' → logprob: -8.125370979309082
    3. 'return' → logprob: -9.875370979309082
    4. '               ' → logprob: -11.375370979309082
    5. '   ' → logprob: -12.750370979309082
    6. '		' → logprob: -13.000370979309082
    7. '	       ' → logprob: -13.125370979309082
    8. ' return' → logprob: -13.375370979309082
    9. '          ' → logprob: -14.125370979309082
    10. '                   ' → logprob: -14.375370979309082

Token 824: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00301157683134079
    2. 'return' (adapté à ' return') → logprob: -6.128011703491211
    3. '       ' → logprob: -7.128011703491211
    4. ' return' → logprob: -11.628011703491211
    5. '               ' → logprob: -11.878011703491211
    6. '   ' → logprob: -11.878011703491211
    7. '                   ' → logprob: -15.253011703491211
    8. '	return' → logprob: -15.503011703491211
    9. '          ' → logprob: -15.878011703491211
    10. '		' → logprob: -16.12801170349121

Token 825: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0005530327325686812
    2. ' True' → logprob: -7.500553131103516
    3. 'False' → logprob: -18.500553131103516
    4. '(True' → logprob: -20.500553131103516
    5. 'true' → logprob: -20.750553131103516
    6. '   ' → logprob: -21.125553131103516
    7. '
' → logprob: -22.750553131103516
    8. '=True' → logprob: -22.875553131103516
    9. 'Tr' → logprob: -22.875553131103516
    10. 'None' → logprob: -24.625553131103516

Token 826: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003002781420946121
    2. '<|end|>' → logprob: -6.628002643585205
    3. '
' → logprob: -6.878002643585205
    4. '        
' → logprob: -8.003003120422363
    5. '   ' → logprob: -9.003003120422363
    6. 'for' → logprob: -9.253003120422363
    7. ' for' → logprob: -10.628003120422363
    8. '```' → logprob: -11.128003120422363
    9. '    
' → logprob: -11.378003120422363
    10. '<|end|>' → logprob: -11.503003120422363

Token 827: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004463231656700373
    2. 'for' → logprob: -6.129463195800781
    3. ' for' → logprob: -6.754463195800781
    4. '   ' → logprob: -6.879463195800781
    5. '
' → logprob: -10.379463195800781
    6. '        
' → logprob: -10.504463195800781
    7. '```' → logprob: -11.129463195800781
    8. '    
' → logprob: -12.629463195800781
    9. '           ' → logprob: -13.629463195800781
    10. '	for' → logprob: -14.504463195800781

Token 828: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0813492089509964
    2. '       ' → logprob: -2.5813491344451904
    3. ' for' → logprob: -6.0813493728637695
    4. '   ' → logprob: -9.33134937286377
    5. 'result' → logprob: -9.45634937286377
    6. '```' → logprob: -13.33134937286377
    7. '           ' → logprob: -13.95634937286377
    8. '        
' → logprob: -14.58134937286377
    9. '	for' → logprob: -14.70634937286377
    10. 'res' → logprob: -15.45634937286377

Token 829: ' vertex' (ID: 25363)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002423106227070093
    2. 'i' → logprob: -6.502423286437988
    3. ' v' → logprob: -7.002423286437988
    4. 'u' → logprob: -12.502423286437988
    5. ' i' → logprob: -12.627423286437988
    6. 'node' → logprob: -12.877423286437988
    7. 'vertex' → logprob: -14.002423286437988
    8. 'start' → logprob: -16.002422332763672
    9. 'component' → logprob: -16.502422332763672
    10. ' node' → logprob: -17.752422332763672

Token 830: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07890080660581589
    2. 'in' → logprob: -2.5789008140563965
    3. ' ' → logprob: -11.703900337219238
    4. '	in' → logprob: -13.828900337219238
    5. '   ' → logprob: -14.578900337219238
    6. '  ' → logprob: -14.953900337219238
    7. '    ' → logprob: -15.703900337219238
    8. '```' → logprob: -16.328901290893555
    9. ' 
' → logprob: -16.703901290893555
    10. 'space' → logprob: -16.828901290893555

Token 831: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324594371020794
    2. ' range' → logprob: -3.7732460498809814
    3. '   ' → logprob: -15.398245811462402
    4. ' ' → logprob: -16.02324676513672
    5. '1' → logprob: -16.52324676513672
    6. '
' → logprob: -17.52324676513672
    7. '(range' → logprob: -17.77324676513672
    8. '  ' → logprob: -17.77324676513672
    9. '    ' → logprob: -18.64824676513672
    10. '	range' → logprob: -19.52324676513672

Token 832: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014170088805258274
    2. '1' → logprob: -4.264170169830322
    3. '       ' → logprob: -12.389169692993164
    4. '(
' → logprob: -13.764169692993164
    5. '   ' → logprob: -14.139169692993164
    6. ',' → logprob: -14.514169692993164
    7. ' (' → logprob: -16.889169692993164
    8. ' ' → logprob: -17.014169692993164
    9. '=' → logprob: -17.514169692993164
    10. '           ' → logprob: -17.764169692993164

Token 833: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '   ' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '       ' → logprob: -15.750000953674316
    5. 'n' → logprob: -16.125001907348633
    6. '
' → logprob: -17.625001907348633
    7. '(' → logprob: -19.250001907348633
    8. '           ' → logprob: -19.500001907348633
    9. '```' → logprob: -20.250001907348633
    10. '  ' → logprob: -21.062501907348633

Token 834: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4153549020411447e-05
    2. ',n' → logprob: -11.12502384185791
    3. ' ,' → logprob: -11.62502384185791
    4. ',
' → logprob: -15.00002384185791
    5. 'n' → logprob: -17.250024795532227
    6. ',len' → logprob: -17.750024795532227
    7. '   ' → logprob: -17.875024795532227
    8. '1' → logprob: -17.875024795532227
    9. ',int' → logprob: -19.000024795532227
    10. ',v' → logprob: -19.125024795532227

Token 835: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.5776860184123507e-06
    2. ' n' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.75000286102295
    4. '       ' → logprob: -17.000001907348633
    5. '           ' → logprob: -18.000001907348633
    6. '	n' → logprob: -18.500001907348633
    7. '(n' → logprob: -19.875001907348633
    8. '                   ' → logprob: -20.750001907348633
    9. '```' → logprob: -21.125001907348633
    10. '               ' → logprob: -21.125001907348633

Token 836: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14278407394886017
    2. ' +' → logprob: -2.0177841186523438
    3. ',' → logprob: -9.517784118652344
    4. '):
' → logprob: -10.892784118652344
    5. '   ' → logprob: -12.392784118652344
    6. '):' → logprob: -12.642784118652344
    7. '+
' → logprob: -13.142784118652344
    8. '       ' → logprob: -13.892784118652344
    9. '<|end|>' → logprob: -14.017784118652344
    10. ' +
' → logprob: -14.142784118652344

Token 837: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '
' → logprob: -17.0000057220459
    4. '   ' → logprob: -18.2500057220459
    5. '```' → logprob: -20.1250057220459
    6. '  ' → logprob: -21.0000057220459
    7. '{
' → logprob: -21.1250057220459
    8. '۱' → logprob: -21.2500057220459
    9. ')' → logprob: -22.0000057220459
    10. '2' → logprob: -22.1250057220459

Token 838: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.625005722045898
    4. '+' → logprob: -16.1250057220459
    5. '
' → logprob: -16.2500057220459
    6. 'n' → logprob: -17.0000057220459
    7. '```' → logprob: -17.0000057220459
    8. '2' → logprob: -17.2500057220459
    9. '       ' → logprob: -18.5000057220459
    10. '{
' → logprob: -18.6250057220459

Token 839: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09156201779842377
    2. '):' → logprob: -2.841562032699585
    3. ':' → logprob: -3.716562032699585
    4. ':
' → logprob: -5.341561794281006
    5. '       ' → logprob: -10.591562271118164
    6. '):
' → logprob: -10.966562271118164
    7. '():
' → logprob: -12.341562271118164
    8. ')' → logprob: -12.841562271118164
    9. '           ' → logprob: -13.091562271118164
    10. '   ' → logprob: -13.466562271118164

Token 840: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00038598617538809776
    2. ' if' → logprob: -8.250386238098145
    3. 'if' → logprob: -10.000386238098145
    4. '   ' → logprob: -10.875386238098145
    5. '
' → logprob: -11.375386238098145
    6. '            
' → logprob: -11.625386238098145
    7. '<|end|>' → logprob: -11.875386238098145
    8. ':
' → logprob: -12.125386238098145
    9. '       ' → logprob: -12.250386238098145
    10. ':' → logprob: -12.250386238098145

Token 841: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0035486393608152866
    2. '           ' → logprob: -6.003548622131348
    3. ' if' → logprob: -6.878548622131348
    4. '   ' → logprob: -10.128548622131348
    5. '	if' → logprob: -13.628548622131348
    6. '       ' → logprob: -14.503548622131348
    7. 'If' → logprob: -15.128548622131348
    8. '
' → logprob: -15.378548622131348
    9. '               ' → logprob: -15.753548622131348
    10. ' ' → logprob: -15.878548622131348

Token 842: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.20144373178482056
    2. ' not' → logprob: -1.7014436721801758
    3. 'used' → logprob: -10.826443672180176
    4. '   ' → logprob: -12.701443672180176
    5. '(not' → logprob: -12.701443672180176
    6. ' used' → logprob: -13.076443672180176
    7. '           ' → logprob: -13.451443672180176
    8. '	not' → logprob: -14.826443672180176
    9. '               ' → logprob: -15.576443672180176
    10. '!' → logprob: -15.701443672180176

Token 843: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.07888989895582199
    2. ' used' → logprob: -2.578889846801758
    3. '_used' → logprob: -16.578889846801758
    4. '.used' → logprob: -17.078889846801758
    5. 'user' → logprob: -18.453889846801758
    6. '
' → logprob: -18.828889846801758
    7. '   ' → logprob: -18.828889846801758
    8. 'Used' → logprob: -18.953889846801758
    9. 'use' → logprob: -19.078889846801758
    10. 'visited' → logprob: -19.203889846801758

Token 844: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.696889623621246e-06
    2. '[v' → logprob: -13.62500286102295
    3. '(vertex' → logprob: -14.37500286102295
    4. 'vertex' → logprob: -14.75000286102295
    5. '[
' → logprob: -15.75000286102295
    6. ' [' → logprob: -15.75000286102295
    7. '```' → logprob: -16.125001907348633
    8. '
' → logprob: -17.875001907348633
    9. '	vertex' → logprob: -18.000001907348633
    10. '<Vertex' → logprob: -18.250001907348633

Token 845: 'vertex' (ID: 25298)
  Prédit: 'vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -2.8206473871250637e-05
    2. '(vertex' → logprob: -11.250028610229492
    3. ' vertex' → logprob: -11.625028610229492
    4. '	vertex' → logprob: -12.250028610229492
    5. '[' → logprob: -13.750028610229492
    6. '
' → logprob: -16.375028610229492
    7. '```' → logprob: -16.500028610229492
    8. '.vertex' → logprob: -16.875028610229492
    9. ' ' → logprob: -17.750028610229492
    10. 'v' → logprob: -17.875028610229492

Token 846: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6427391767501831
    2. '):
' → logprob: -1.142739176750183
    3. ':
' → logprob: -2.6427392959594727
    4. ']:
' → logprob: -3.0177392959594727
    5. '):' → logprob: -3.7677392959594727
    6. ']:' → logprob: -4.517739295959473
    7. '():
' → logprob: -8.017739295959473
    8. ']):
' → logprob: -8.517739295959473
    9. ']' → logprob: -9.267739295959473
    10. ' and' → logprob: -9.392739295959473

Token 847: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4970094561576843
    2. ':
' → logprob: -1.122009515762329
    3. ':' → logprob: -3.372009515762329
    4. '           ' → logprob: -3.497009515762329
    5. ' and' → logprob: -7.49700927734375
    6. '):
' → logprob: -8.24700927734375
    7. '{
' → logprob: -8.74700927734375
    8. '```' → logprob: -9.62200927734375
    9. ' :
' → logprob: -9.99700927734375
    10. '       ' → logprob: -10.12200927734375

Token 848: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2545728385448456
    2. '           ' → logprob: -1.504572868347168
    3. ' if' → logprob: -6.504572868347168
    4. '               ' → logprob: -6.879572868347168
    5. '```' → logprob: -9.629572868347168
    6. '                   ' → logprob: -11.004572868347168
    7. 'result' → logprob: -11.129572868347168
    8. '   ' → logprob: -12.254572868347168
    9. '          ' → logprob: -12.254572868347168
    10. '              ' → logprob: -13.754572868347168

Token 849: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00893020536750555
    2. ' not' → logprob: -4.758930206298828
    3. '               ' → logprob: -8.883930206298828
    4. '           ' → logprob: -9.383930206298828
    5. '(not' → logprob: -10.258930206298828
    6. '                   ' → logprob: -10.883930206298828
    7. 'len' → logprob: -11.258930206298828
    8. 'dfs' → logprob: -11.383930206298828
    9. '   ' → logprob: -12.133930206298828
    10. '       ' → logprob: -13.508930206298828

Token 850: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.00247981958091259
    2. ' dfs' → logprob: -6.0024800300598145
    3. 'df' → logprob: -12.627479553222656
    4. 'd' → logprob: -15.752479553222656
    5. '   ' → logprob: -15.877479553222656
    6. 'ds' → logprob: -16.002479553222656
    7. 'DFS' → logprob: -16.002479553222656
    8. 'dfa' → logprob: -16.127479553222656
    9. ' ' → logprob: -17.002479553222656
    10. 'dsl' → logprob: -17.127479553222656

Token 851: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -2.6656825866666622e-05
    2. '(vertex' → logprob: -11.00002670288086
    3. 'check' → logprob: -12.00002670288086
    4. 'Check' → logprob: -13.37502670288086
    5. '_' → logprob: -14.62502670288086
    6. ')' → logprob: -15.00002670288086
    7. '_CHECK' → logprob: -15.62502670288086
    8. '_checks' → logprob: -15.75002670288086
    9. '```' → logprob: -15.75002670288086
    10. '                   ' → logprob: -15.87502670288086

Token 852: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.02520901709794998
    2. '_check' → logprob: -3.7752089500427246
    3. '(vertex' → logprob: -6.275208950042725
    4. 'path' → logprob: -9.900209426879883
    5. 'vertex' → logprob: -11.400209426879883
    6. '
' → logprob: -12.400209426879883
    7. 'check' → logprob: -12.650209426879883
    8. '(v' → logprob: -13.025209426879883
    9. '```' → logprob: -13.650209426879883
    10. '[' → logprob: -14.025209426879883

Token 853: '(vertex' (ID: 96471)
  Prédit: '(vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertex' → logprob: -5.438573680294212e-06
    2. 'vertex' → logprob: -12.375005722045898
    3. ' (' → logprob: -14.875005722045898
    4. '(' → logprob: -15.000005722045898
    5. ' vertex' → logprob: -15.750005722045898
    6. '(vertices' → logprob: -16.0000057220459
    7. '	vertex' → logprob: -16.3750057220459
    8. '(
' → logprob: -16.5000057220459
    9. '(Vertex' → logprob: -18.0000057220459
    10. '(vehicle' → logprob: -18.0000057220459

Token 854: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006278486107476056
    2. '(vertex' → logprob: -7.5006279945373535
    3. 'vertex' → logprob: -10.000627517700195
    4. ' ,' → logprob: -11.125627517700195
    5. ',
' → logprob: -12.375627517700195
    6. ')' → logprob: -13.125627517700195
    7. '   ' → logprob: -13.500627517700195
    8. '           ' → logprob: -13.750627517700195
    9. ' vertex' → logprob: -14.000627517700195
    10. '```' → logprob: -14.000627517700195

Token 855: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.127333340875339e-06
    2. ' -' → logprob: -12.750003814697266
    3. 'None' → logprob: -14.750003814697266
    4. '
' → logprob: -14.875003814697266
    5. '0' → logprob: -15.375003814697266
    6. '-
' → logprob: -15.625003814697266
    7. '   ' → logprob: -15.875003814697266
    8. '-v' → logprob: -19.000003814697266
    9. '    
' → logprob: -19.125003814697266
    10. ' ' → logprob: -19.625003814697266

Token 856: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '   ' → logprob: -21.75
    4. '
' → logprob: -23.25
    5. '１' → logprob: -23.375
    6. '           ' → logprob: -24.75
    7. '  ' → logprob: -25.125
    8. '2' → logprob: -25.25
    9. '```' → logprob: -25.25
    10. '

' → logprob: -25.25

Token 857: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004189637023955584
    2. '):' → logprob: -5.504189491271973
    3. '                   ' → logprob: -10.129189491271973
    4. '               ' → logprob: -10.504189491271973
    5. '):
' → logprob: -10.504189491271973
    6. ')' → logprob: -11.254189491271973
    7. '                       ' → logprob: -13.629189491271973
    8. '           ' → logprob: -13.879189491271973
    9. '):

' → logprob: -14.004189491271973
    10. ' ):
' → logprob: -15.504189491271973

Token 858: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006992113194428384
    2. '                       ' → logprob: -7.625699043273926
    3. '               ' → logprob: -8.750699043273926
    4. 'return' → logprob: -10.875699043273926
    5. '                  ' → logprob: -11.625699043273926
    6. '           ' → logprob: -11.750699043273926
    7. ' return' → logprob: -11.875699043273926
    8. ':' → logprob: -12.875699043273926
    9. ':return' → logprob: -13.000699043273926
    10. ':
' → logprob: -13.125699043273926

Token 859: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007532857125625014
    2. ' return' → logprob: -8.000753402709961
    3. '                   ' → logprob: -8.000753402709961
    4. '                       ' → logprob: -9.500753402709961
    5. '               ' → logprob: -11.875753402709961
    6. '
' → logprob: -14.750753402709961
    7. '   ' → logprob: -15.500753402709961
    8. '	return' → logprob: -15.875753402709961
    9. '           ' → logprob: -16.37575340270996
    10. '       ' → logprob: -16.87575340270996

Token 860: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.842555426876061e-06
    2. ' False' → logprob: -12.250004768371582
    3. 'false' → logprob: -19.7500057220459
    4. '(False' → logprob: -19.7500057220459
    5. '=False' → logprob: -21.3750057220459
    6. '_false' → logprob: -22.1250057220459
    7. '
' → logprob: -22.2500057220459
    8. 'True' → logprob: -22.6250057220459
    9. '   ' → logprob: -23.7500057220459
    10. '.False' → logprob: -23.7500057220459

Token 861: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004882907960563898
    2. '
' → logprob: -5.5048828125
    3. '        
' → logprob: -7.3798828125
    4. '<|end|>' → logprob: -9.5048828125
    5. ' return' → logprob: -10.6298828125
    6. 'return' → logprob: -11.1298828125
    7. '        ' → logprob: -11.7548828125
    8. '		
' → logprob: -12.0048828125
    9. '	return' → logprob: -12.0048828125
    10. '	' → logprob: -12.1298828125

Token 862: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001671015052124858
    2. 'return' → logprob: -7.501670837402344
    3. '        
' → logprob: -7.626670837402344
    4. '
' → logprob: -8.001670837402344
    5. '   ' → logprob: -8.251670837402344
    6. ' return' → logprob: -11.501670837402344
    7. '    
' → logprob: -11.501670837402344
    8. '	return' → logprob: -12.501670837402344
    9. '```' → logprob: -13.001670837402344
    10. '<|end|>' → logprob: -13.126670837402344

Token 863: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4778367280960083
    2. 'return' → logprob: -0.9778367280960083
    3. '
' → logprob: -5.602836608886719
    4. '#' (adapté à ' #') → logprob: -10.477836608886719
    5. '        
' → logprob: -10.852836608886719
    6. ' return' → logprob: -11.227836608886719
    7. '   ' → logprob: -12.977836608886719
    8. '```' → logprob: -14.102836608886719
    9. 'for' → logprob: -15.352836608886719
    10. '           ' → logprob: -15.602836608886719

Token 864: ' Step' (ID: 22291)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.38775771856307983
    2. '       ' → logprob: -1.1377577781677246
    3. '#' → logprob: -7.137757778167725
    4. '
' → logprob: -9.762757301330566
    5. ' return' → logprob: -11.137757301330566
    6. '        
' → logprob: -11.762757301330566
    7. '   ' → logprob: -11.887757301330566
    8. 'if' → logprob: -13.262757301330566
    9. 'for' → logprob: -13.762757301330566
    10. '           ' → logprob: -14.762757301330566

Token 865: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9001738429069519
    2. '       ' → logprob: -1.1501739025115967
    3. ' ' → logprob: -1.7751739025115967
    4. '1' → logprob: -3.2751739025115967
    5. '2' → logprob: -3.7751739025115967
    6. '        
' → logprob: -4.650173664093018
    7. '    ' → logprob: -4.775173664093018
    8. ':' → logprob: -5.400173664093018
    9. '    
' → logprob: -5.400173664093018
    10. '3' → logprob: -5.650173664093018

Token 866: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5301809310913086
    2. '3' → logprob: -1.0301809310913086
    3. '2' → logprob: -3.2801809310913086
    4. '   ' → logprob: -4.780180931091309
    5. '4' → logprob: -5.530180931091309
    6. 'return' → logprob: -6.280180931091309
    7. '       ' → logprob: -6.530180931091309
    8. '5' → logprob: -7.405180931091309
    9. '0' → logprob: -8.155180931091309
    10. ' ' → logprob: -9.155180931091309

Token 867: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006861720699816942
    2. '
' → logprob: -5.631861686706543
    3. ':' → logprob: -6.256861686706543
    4. 'return' → logprob: -7.506861686706543
    5. '        
' → logprob: -8.381861686706543
    6. ' return' → logprob: -8.506861686706543
    7. ':return' → logprob: -8.631861686706543
    8. '#' → logprob: -9.256861686706543
    9. '   ' → logprob: -10.631861686706543
    10. ':
' → logprob: -10.881861686706543

Token 868: ' Actually' (ID: 50557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08129525184631348
    2. '#' → logprob: -2.8312952518463135
    3. '       ' → logprob: -4.331295013427734
    4. 'b' → logprob: -5.206295013427734
    5. 'checker' → logprob: -8.456295013427734
    6. 'Return' → logprob: -8.956295013427734
    7. '   ' → logprob: -9.581295013427734
    8. ' return' → logprob: -10.456295013427734
    9. 'from' → logprob: -11.081295013427734
    10. 'B' → logprob: -11.331295013427734

Token 869: ' the' (ID: 290)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16241054236888885
    2. '       ' → logprob: -1.9124104976654053
    3. ' return' → logprob: -6.162410736083984
    4. '
' → logprob: -10.037410736083984
    5. '   ' → logprob: -10.412410736083984
    6. '           ' → logprob: -14.037410736083984
    7. '      ' → logprob: -14.412410736083984
    8. '	return' → logprob: -14.662410736083984
    9. ' ' → logprob: -15.412410736083984
    10. '        
' → logprob: -15.537410736083984

Token 870: ' above' (ID: 5151)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.006714074406772852
    2. '       ' → logprob: -5.6317138671875
    3. '#' → logprob: -6.5067138671875
    4. ' return' → logprob: -7.0067138671875
    5. 'b' → logprob: -7.6317138671875
    6. 'B' → logprob: -9.3817138671875
    7. '   ' → logprob: -9.7567138671875
    8. 'graph' → logprob: -10.3817138671875
    9. 'checker' → logprob: -11.7567138671875
    10. 'class' → logprob: -11.8817138671875

Token 871: ' suff' (ID: 9490)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5317733287811279
    2. '       ' → logprob: -1.031773328781128
    3. '
' → logprob: -3.281773328781128
    4. ' return' → logprob: -4.031773567199707
    5. '        
' → logprob: -7.531773567199707
    6. '   ' → logprob: -9.156773567199707
    7. '
' → logprob: -10.031773567199707
    8. '           ' → logprob: -11.281773567199707
    9. '#' → logprob: -11.781773567199707
    10. '	return' → logprob: -11.906773567199707

Token 872: 'ices' (ID: 1386)
  Prédit: 'ices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.11375974118709564
    2. 'ice' → logprob: -2.363759756088257
    3. 'icient' → logprob: -4.363759517669678
    4. 'iced' → logprob: -7.238759517669678
    5. 'icies' → logprob: -12.613759994506836
    6. 'icent' → logprob: -13.113759994506836
    7. 'icing' → logprob: -13.488759994506836
    8. 'ic' → logprob: -13.738759994506836
    9. '#' → logprob: -13.988759994506836
    10. 'ies' → logprob: -13.988759994506836

Token 873: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018106024945154786
    2. 'return' → logprob: -7.001810550689697
    3. '
' → logprob: -7.376810550689697
    4. '<|end|>' → logprob: -8.876811027526855
    5. '        
' → logprob: -9.751811027526855
    6. '   ' → logprob: -10.376811027526855
    7. ' return' → logprob: -10.501811027526855
    8. '    
' → logprob: -12.376811027526855
    9. '	return' → logprob: -12.876811027526855
    10. '	' → logprob: -12.876811027526855

Token 874: ' line' (ID: 2543)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0806364044547081
    2. 'return' → logprob: -3.330636501312256
    3. ' True' → logprob: -3.330636501312256
    4. 'linear' → logprob: -5.330636501312256
    5. 'line' → logprob: -7.580636501312256
    6. ' linear' → logprob: -8.330636024475098
    7. ' return' → logprob: -8.705636024475098
    8. 'true' → logprob: -9.455636024475098
    9. 'the' → logprob: -10.205636024475098
    10. '   ' → logprob: -10.830636024475098

Token 875: ' emb' (ID: 6588)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2702808976173401
    2. '       ' → logprob: -1.5202808380126953
    3. 'emb' → logprob: -5.270280838012695
    4. ' return' → logprob: -5.645280838012695
    5. ' True' → logprob: -6.020280838012695
    6. 'embedding' → logprob: -6.020280838012695
    7. 'True' → logprob: -6.270280838012695
    8. '   ' → logprob: -6.770280838012695
    9. 'embed' → logprob: -7.895280838012695
    10. '_return' → logprob: -9.020280838012695

Token 876: 'edd' (ID: 5116)
  Prédit: 'edd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edd' → logprob: -0.0008192769018933177
    2. 'ed' → logprob: -7.125819206237793
    3. 'edding' → logprob: -11.625819206237793
    4. 'eddings' → logprob: -12.625819206237793
    5. 'edded' → logprob: -13.750819206237793
    6. 'eddi' → logprob: -14.750819206237793
    7. 'eed' → logprob: -15.250819206237793
    8. 'EDD' → logprob: -15.375819206237793
    9. ' ed' → logprob: -15.375819206237793
    10. '#' → logprob: -16.37582015991211

Token 877: 'ability' (ID: 3563)
  Prédit: 'ability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -0.0009763598791323602
    2. 'ed' → logprob: -7.7509765625
    3. 'edd' → logprob: -8.0009765625
    4. 'able' → logprob: -10.0009765625
    5. 'd' → logprob: -10.5009765625
    6. 'ab' → logprob: -10.6259765625
    7. '```' → logprob: -11.2509765625
    8. '   ' → logprob: -11.5009765625
    9. '       ' → logprob: -11.5009765625
    10. 'abilities' → logprob: -11.7509765625

Token 878: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005996193503960967
    2. 'return' → logprob: -7.750599384307861
    3. '
' → logprob: -8.87559986114502
    4. '   ' → logprob: -10.87559986114502
    5. ' return' → logprob: -11.75059986114502
    6. '        
' → logprob: -13.25059986114502
    7. '           ' → logprob: -15.00059986114502
    8. '<|end|>' → logprob: -16.125598907470703
    9. '	return' → logprob: -16.875598907470703
    10. '    
' → logprob: -17.000598907470703

Token 879: ' dis' (ID: 829)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.023670395836234093
    2. '       ' → logprob: -3.7736704349517822
    3. ' return' → logprob: -7.773670196533203
    4. '
' → logprob: -12.523670196533203
    5. '   ' → logprob: -15.023670196533203
    6. '	return' → logprob: -15.523670196533203
    7. '        
' → logprob: -17.523670196533203
    8. '```' → logprob: -17.523670196533203
    9. '{return' → logprob: -17.898670196533203
    10. '           ' → logprob: -19.398670196533203

Token 880: 'joint' (ID: 69164)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.3681793212890625
    2. 'allow' → logprob: -1.7431793212890625
    3. 'joint' → logprob: -3.1181793212890625
    4. 'connect' → logprob: -3.3681793212890625
    5. 't' → logprob: -4.1181793212890625
    6. 'card' → logprob: -4.2431793212890625
    7. '       ' → logprob: -4.6181793212890625
    8. 'connecting' → logprob: -5.7431793212890625
    9. 'cuss' → logprob: -6.3681793212890625
    10. 'reg' → logprob: -6.6181793212890625

Token 881: ' paths' (ID: 23373)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.060834724456071854
    2. ' paths' → logprob: -3.5608346462249756
    3. 'union' → logprob: -4.060834884643555
    4. ' unions' → logprob: -5.435834884643555
    5. 'linear' → logprob: -5.935834884643555
    6. 'un' → logprob: -6.435834884643555
    7. 'path' → logprob: -6.685834884643555
    8. 'ed' → logprob: -6.935834884643555
    9. ' union' → logprob: -7.560834884643555
    10. '   ' → logprob: -7.685834884643555

Token 882: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003168575232848525
    2. 'return' → logprob: -6.12816858291626
    3. '
' → logprob: -7.25316858291626
    4. '   ' → logprob: -8.503168106079102
    5. ' return' → logprob: -9.878168106079102
    6. '<|end|>' → logprob: -11.253168106079102
    7. '        
' → logprob: -12.628168106079102
    8. '           ' → logprob: -13.378168106079102
    9. '	return' → logprob: -14.253168106079102
    10. '```' → logprob: -14.628168106079102

Token 883: ' isolated' (ID: 42329)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.02990402653813362
    2. ' linear' → logprob: -4.279903888702393
    3. 'cycles' → logprob: -4.779903888702393
    4. 'chains' → logprob: -5.279903888702393
    5. 'isol' → logprob: -7.529903888702393
    6. 'empty' → logprob: -7.904903888702393
    7. 'trees' → logprob: -8.27990436553955
    8. 'lines' → logprob: -8.40490436553955
    9. 'fore' → logprob: -8.52990436553955
    10. 'paths' → logprob: -8.65490436553955

Token 884: ' points' (ID: 5571)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.02444431185722351
    2. ' vertices' → logprob: -3.774444341659546
    3. 'nodes' → logprob: -6.774444103240967
    4. ' nodes' → logprob: -10.399444580078125
    5. '_vertices' → logprob: -11.149444580078125
    6. 'vertex' → logprob: -12.024444580078125
    7. 'points' → logprob: -12.774444580078125
    8. '.vertices' → logprob: -14.524444580078125
    9. '   ' → logprob: -14.899444580078125
    10. '(vertices' → logprob: -15.524444580078125

Token 885: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006923045963048935
    2. '
' → logprob: -5.506923198699951
    3. 'return' → logprob: -6.131923198699951
    4. '   ' → logprob: -7.631923198699951
    5. '<|end|>' → logprob: -9.631922721862793
    6. ' return' → logprob: -9.756922721862793
    7. '        
' → logprob: -10.131922721862793
    8. '	return' → logprob: -12.506922721862793
    9. '\
' → logprob: -12.881922721862793
    10. '    
' → logprob: -12.881922721862793

Token 886: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3790075480937958
    2. '       ' → logprob: -1.2540075778961182
    3. '   ' → logprob: -4.004007339477539
    4. '<|end|>' → logprob: -4.754007339477539
    5. 'return' → logprob: -6.379007339477539
    6. '        
' → logprob: -7.504007339477539
    7. '    
' → logprob: -8.004007339477539
    8. '\n' → logprob: -8.879007339477539
    9. '	return' → logprob: -9.129007339477539
    10. '
' → logprob: -9.254007339477539

Token 887: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4745319187641144
    2. '       ' → logprob: -0.974531888961792
    3. '   ' → logprob: -8.474532127380371
    4. '
' → logprob: -8.474532127380371
    5. ' return' → logprob: -10.224532127380371
    6. '	return' → logprob: -14.224532127380371
    7. '        
' → logprob: -14.974532127380371
    8. '           ' → logprob: -16.474531173706055
    9. '{return' → logprob: -17.599531173706055
    10. '	' → logprob: -17.849531173706055

Token 888: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.547789674485102e-05
    2. ' True' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.750036239624023
    4. 'False' → logprob: -21.125036239624023
    5. '(True' → logprob: -21.250036239624023
    6. 'true' → logprob: -21.875036239624023
    7. 'Tr' → logprob: -22.875036239624023
    8. '=True' → logprob: -23.750036239624023
    9. '       ' → logprob: -24.250036239624023
    10. '
' → logprob: -24.500036239624023

Token 889: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 890: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 891: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 892: ' process' (ID: 2273)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8456419110298157
    2. ' __' → logprob: -0.9706419110298157
    3. ' check' → logprob: -2.220641851425171
    4. ' ' → logprob: -3.845641851425171
    5. ' main' → logprob: -4.59564208984375
    6. '__' → logprob: -4.59564208984375
    7. ' can' → logprob: -4.59564208984375
    8. '_' → logprob: -4.72064208984375
    9. ' is' → logprob: -4.84564208984375
    10. ' solve' → logprob: -5.84564208984375

Token 893: '_dataset' (ID: 40568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.548749566078186
    2. '(self' → logprob: -0.923749566078186
    3. '_' → logprob: -3.7987494468688965
    4. '_(' → logprob: -7.5487494468688965
    5. '_self' → logprob: -7.7987494468688965
    6. '(
' → logprob: -8.048749923706055
    7. 'self' → logprob: -8.298749923706055
    8. '_line' → logprob: -8.298749923706055
    9. '```' → logprob: -8.548749923706055
    10. ' (' → logprob: -8.673749923706055

Token 894: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004113662056624889
    2. '(' → logprob: -5.504113674163818
    3. '(
' → logprob: -10.87911319732666
    4. ' (' → logprob: -11.75411319732666
    5. 'self' → logprob: -12.25411319732666
    6. '   ' → logprob: -13.12911319732666
    7. '(Self' → logprob: -14.00411319732666
    8. '(s' → logprob: -14.62911319732666
    9. '       ' → logprob: -16.254114151000977
    10. ' ' → logprob: -16.879114151000977

Token 895: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004731534048914909
    2. 'self' → logprob: -5.62973165512085
    3. '   ' → logprob: -7.75473165512085
    4. '(self' → logprob: -8.629731178283691
    5. '):' → logprob: -9.004731178283691
    6. ',
' → logprob: -9.379731178283691
    7. '       ' → logprob: -9.504731178283691
    8. ' ,' → logprob: -9.504731178283691
    9. ',self' → logprob: -9.879731178283691
    10. '_self' → logprob: -10.629731178283691

Token 896: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.1360118389129639
    2. ' data' → logprob: -1.2610118389129639
    3. 'self' → logprob: -2.261011838912964
    4. 'data' → logprob: -2.761011838912964
    5. ' dataset' → logprob: -2.761011838912964
    6. ' lines' → logprob: -2.886011838912964
    7. 'dataset' → logprob: -3.386011838912964
    8. ' n' → logprob: -4.136012077331543
    9. ' datasets' → logprob: -4.136012077331543
    10. 'datasets' → logprob: -4.261012077331543

Token 897: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003715662460308522
    2. ':' → logprob: -8.000371932983398
    3. ' ,' → logprob: -10.250371932983398
    4. ':int' → logprob: -15.125371932983398
    5. ',
' → logprob: -15.625371932983398
    6. '   ' → logprob: -15.750371932983398
    7. '‌,' → logprob: -16.2503719329834
    8. ',int' → logprob: -17.3753719329834
    9. '):' → logprob: -17.6253719329834
    10. ':,' → logprob: -17.8753719329834

Token 898: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00671584764495492
    2. ' int' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.381715774536133
    4. ':int' → logprob: -16.631715774536133
    5. '(int' → logprob: -17.006715774536133
    6. ',int' → logprob: -17.506715774536133
    7. ' ' → logprob: -17.756715774536133
    8. '[int' → logprob: -17.756715774536133
    9. '=int' → logprob: -17.881715774536133
    10. '  ' → logprob: -18.131715774536133

Token 899: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0280383548888494e-06
    2. ' ,' → logprob: -14.375000953674316
    3. '   ' → logprob: -14.875000953674316
    4. ',
' → logprob: -17.625001907348633
    5. '       ' → logprob: -17.875001907348633
    6. '‌,' → logprob: -19.000001907348633
    7. '،' → logprob: -19.375001907348633
    8. ',self' → logprob: -20.125001907348633
    9. ')' → logprob: -21.125001907348633
    10. ',n' → logprob: -21.375001907348633

Token 900: ' m' (ID: 284)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.20158934593200684
    2. ' edges' → logprob: -1.7015893459320068
    3. '   ' → logprob: -9.576589584350586
    4. 'm' → logprob: -10.826589584350586
    5. '           ' → logprob: -10.826589584350586
    6. '       ' → logprob: -10.826589584350586
    7. '    ' → logprob: -11.576589584350586
    8. '        ' → logprob: -12.076589584350586
    9. '               ' → logprob: -12.201589584350586
    10. 'edge' → logprob: -12.326589584350586

Token 901: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12696464359760284
    2. ',' → logprob: -2.126964569091797
    3. ':int' → logprob: -11.126964569091797
    4. ' ,' → logprob: -11.876964569091797
    5. '):' → logprob: -12.126964569091797
    6. '   ' → logprob: -12.376964569091797
    7. ' :' → logprob: -12.876964569091797
    8. ':,' → logprob: -13.626964569091797
    9. ')' → logprob: -14.751964569091797
    10. ',
' → logprob: -15.251964569091797

Token 902: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002475777640938759
    2. ' int' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.00247573852539
    4. '[int' → logprob: -17.12747573852539
    5. ':int' → logprob: -17.37747573852539
    6. '(int' → logprob: -17.37747573852539
    7. '=int' → logprob: -17.87747573852539
    8. ')' → logprob: -18.25247573852539
    9. '```' → logprob: -18.87747573852539
    10. ' ' → logprob: -19.37747573852539

Token 903: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -15.625
    3. ' ,' → logprob: -15.875
    4. '       ' → logprob: -17.5
    5. ')' → logprob: -17.5
    6. '):' → logprob: -18.5
    7. ',
' → logprob: -18.75
    8. '‌,' → logprob: -19.375
    9. '،' → logprob: -19.375
    10. '‍,' → logprob: -21.75

Token 904: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.4741276502609253
    2. ' edges' → logprob: -0.9741276502609253
    3. 'edge' → logprob: -10.974127769470215
    4. '   ' → logprob: -11.849127769470215
    5. ' edge' → logprob: -12.474127769470215
    6. '           ' → logprob: -12.474127769470215
    7. '    ' → logprob: -12.599127769470215
    8. '       ' → logprob: -12.849127769470215
    9. '_edges' → logprob: -12.849127769470215
    10. '        ' → logprob: -13.224127769470215

Token 905: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3137676417827606
    2. ':' → logprob: -1.313767671585083
    3. '):
' → logprob: -8.188767433166504
    4. ')' → logprob: -8.688767433166504
    5. ',' → logprob: -10.563767433166504
    6. '   ' → logprob: -10.688767433166504
    7. ':list' → logprob: -12.313767433166504
    8. ' ):' → logprob: -13.063767433166504
    9. '):
' → logprob: -13.188767433166504
    10. '       ' → logprob: -13.938767433166504

Token 906: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.002098156837746501
    2. 'List' → logprob: -6.752098083496094
    3. ' list' → logprob: -7.002098083496094
    4. ')' → logprob: -11.627098083496094
    5. ':list' → logprob: -12.502098083496094
    6. '_list' → logprob: -13.627098083496094
    7. '):' → logprob: -13.627098083496094
    8. '[list' → logprob: -13.877098083496094
    9. ' List' → logprob: -14.752098083496094
    10. '[]' → logprob: -15.127098083496094

Token 907: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5761825442314148
    2. '):' → logprob: -0.8261825442314148
    3. '):
' → logprob: -8.57618236541748
    4. '   ' → logprob: -9.95118236541748
    5. '       ' → logprob: -12.45118236541748
    6. ')->' → logprob: -13.57618236541748
    7. ':' → logprob: -13.82618236541748
    8. '):
' → logprob: -14.70118236541748
    9. '):

' → logprob: -16.201183319091797
    10. ' )' → logprob: -16.701183319091797

Token 908: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003744856221601367
    2. '       ' → logprob: -6.253745079040527
    3. '):' → logprob: -6.503745079040527
    4. ')' → logprob: -9.628745079040527
    5. ':
' → logprob: -9.878745079040527
    6. '   ' → logprob: -10.003745079040527
    7. '():' → logprob: -10.128745079040527
    8. '->' → logprob: -10.253745079040527
    9. ' ->' → logprob: -10.753745079040527
    10. '):
' → logprob: -10.878745079040527

Token 909: ' str' (ID: 989)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.006718571297824383
    2. ' bool' → logprob: -5.006718635559082
    3. '   ' → logprob: -13.006718635559082
    4. '<bool' → logprob: -15.006718635559082
    5. '	bool' → logprob: -15.131718635559082
    6. 'int' → logprob: -16.256717681884766
    7. '(bool' → logprob: -16.381717681884766
    8. ' ' → logprob: -16.506717681884766
    9. '       ' → logprob: -17.381717681884766
    10. '```' → logprob: -17.506717681884766

Token 910: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025274351239204407
    2. '       ' → logprob: -4.275274276733398
    3. ':
' → logprob: -4.525274276733398
    4. '():' → logprob: -9.275274276733398
    5. '):' → logprob: -10.650274276733398
    6. '   ' → logprob: -10.650274276733398
    7. '():
' → logprob: -11.025274276733398
    8. '):
' → logprob: -11.150274276733398
    9. ':return' → logprob: -11.150274276733398
    10. ',' → logprob: -11.775274276733398

Token 911: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001628956088097766
    2. '   ' → logprob: -9.875163078308105
    3. 'if' → logprob: -9.875163078308105
    4. '```' → logprob: -10.125163078308105
    5. '        
' → logprob: -12.125163078308105
    6. '
' → logprob: -12.625163078308105
    7. ' if' → logprob: -12.625163078308105
    8. 'result' → logprob: -13.375163078308105
    9. 'return' → logprob: -13.375163078308105
    10. '           ' → logprob: -14.000163078308105

Token 912: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14549699425697327
    2. 'result' → logprob: -2.6454970836639404
    3. 'if' (adapté à ' if') → logprob: -3.0204970836639404
    4. 'return' → logprob: -4.270496845245361
    5. 'can' → logprob: -7.395496845245361
    6. ' if' → logprob: -7.645496845245361
    7. 'is' → logprob: -8.52049732208252
    8. ' result' → logprob: -8.77049732208252
    9. 'res' → logprob: -9.27049732208252
    10. '   ' → logprob: -10.52049732208252

Token 913: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07344024628400803
    2. 'self' → logprob: -3.0734403133392334
    3. ' not' → logprob: -3.8234403133392334
    4. ' m' → logprob: -6.698440074920654
    5. ' n' → logprob: -7.073440074920654
    6. 'n' → logprob: -8.823440551757812
    7. ' Magic' → logprob: -8.823440551757812
    8. 'm' → logprob: -9.073440551757812
    9. ' ' → logprob: -9.198440551757812
    10. 'not' → logprob: -9.823440551757812

Token 914: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -3.128163257315464e-07
    2. 'can' → logprob: -16.5
    3. '.Can' → logprob: -16.875
    4. '.' → logprob: -17.5
    5. '.has' → logprob: -17.5
    6. '	can' → logprob: -17.625
    7. ' can' → logprob: -20.125
    8. '_can' → logprob: -20.125
    9. '
' → logprob: -20.5
    10. '.is' → logprob: -20.625

Token 915: '_be' (ID: 40729)
  Prédit: '_be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_be' → logprob: -3.4121114822482923e-06
    2. '_have' → logprob: -13.125003814697266
    3. '_can' → logprob: -14.000003814697266
    4. '_' → logprob: -15.500003814697266
    5. '_are' → logprob: -16.250003814697266
    6. '_b' → logprob: -16.625003814697266
    7. '_the' → logprob: -17.500003814697266
    8. '_to' → logprob: -17.625003814697266
    9. ' _' → logprob: -17.750003814697266
    10. '_based' → logprob: -18.125003814697266

Token 916: '_draw' (ID: 51847)
  Prédit: '_draw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_draw' → logprob: -0.16022665798664093
    2. 'draw' → logprob: -1.9102267026901245
    3. ' drawn' → logprob: -13.660226821899414
    4. 'Draw' → logprob: -14.910226821899414
    5. '.draw' → logprob: -15.285226821899414
    6. '
' → logprob: -15.535226821899414
    7. '   ' → logprob: -16.410226821899414
    8. '```' → logprob: -16.535226821899414
    9. '	draw' → logprob: -16.910226821899414
    10. '_be' → logprob: -16.910226821899414

Token 917: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06628043949604034
    2. 'wn' → logprob: -2.8162803649902344
    3. 'awn' → logprob: -6.441280364990234
    4. 'on' → logprob: -7.316280364990234
    5. 'draw' → logprob: -7.691280364990234
    6. '_draw' → logprob: -7.941280364990234
    7. '
' → logprob: -8.066280364990234
    8. '[n' → logprob: -8.816280364990234
    9. '   ' → logprob: -8.941280364990234
    10. 'own' → logprob: -9.316280364990234

Token 918: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -2.5941604690160602e-05
    2. 'on' → logprob: -10.625025749206543
    3. '
' → logprob: -14.375025749206543
    4. '   ' → logprob: -15.250025749206543
    5. '```' → logprob: -15.750025749206543
    6. ' on' → logprob: -16.25002670288086
    7. '       ' → logprob: -16.62502670288086
    8. '

' → logprob: -17.25002670288086
    9. ''on' → logprob: -17.25002670288086
    10. ' _' → logprob: -17.37502670288086

Token 919: '_line' (ID: 14418)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3868744373321533
    2. '_line' → logprob: -1.1368744373321533
    3. ' line' → logprob: -13.136874198913574
    4. 'n' → logprob: -15.011874198913574
    5. 'the' → logprob: -15.386874198913574
    6. 'a' → logprob: -15.761874198913574
    7. 'Line' → logprob: -16.26187515258789
    8. '   ' → logprob: -16.26187515258789
    9. '
' → logprob: -16.38687515258789
    10. '(line' → logprob: -16.38687515258789

Token 920: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.0536883615423e-05
    2. ' (' → logprob: -9.750080108642578
    3. '(' → logprob: -10.750080108642578
    4. '   ' → logprob: -15.125080108642578
    5. '((' → logprob: -15.625080108642578
    6. '(
' → logprob: -15.625080108642578
    7. '       ' → logprob: -16.500080108642578
    8. '(self' → logprob: -16.875080108642578
    9. '(len' → logprob: -18.250080108642578
    10. ' ' → logprob: -18.375080108642578

Token 921: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.153795766294934e-06
    2. ' ,' → logprob: -12.125005722045898
    3. ',
' → logprob: -14.625005722045898
    4. '   ' → logprob: -16.5000057220459
    5. '       ' → logprob: -17.1250057220459
    6. '(edges' → logprob: -18.1250057220459
    7. ')' → logprob: -18.3750057220459
    8. 'edges' → logprob: -18.3750057220459
    9. '[],' → logprob: -18.5000057220459
    10. '‌,' → logprob: -18.6250057220459

Token 922: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.061983488500118256
    2. ' edges' → logprob: -2.811983585357666
    3. '           ' → logprob: -12.311983108520508
    4. '       ' → logprob: -12.436983108520508
    5. '(edges' → logprob: -12.936983108520508
    6. '.edges' → logprob: -13.811983108520508
    7. '_edges' → logprob: -14.061983108520508
    8. '   ' → logprob: -14.186983108520508
    9. '               ' → logprob: -14.311983108520508
    10. 'Edges' → logprob: -14.436983108520508

Token 923: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.811946451663971
    2. '):' → logprob: -1.0619463920593262
    3. '):
' → logprob: -1.5619463920593262
    4. ')==' → logprob: -7.936946392059326
    5. '       ' → logprob: -9.186946868896484
    6. '           ' → logprob: -11.061946868896484
    7. '):
' → logprob: -11.561946868896484
    8. ' )' → logprob: -12.811946868896484
    9. ' ):' → logprob: -12.936946868896484
    10. '   ' → logprob: -13.561946868896484

Token 924: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003377926768735051
    2. 'return' → logprob: -6.503377914428711
    3. ' return' → logprob: -7.003377914428711
    4. '       ' → logprob: -7.003377914428711
    5. '
' → logprob: -10.378377914428711
    6. ':
' → logprob: -11.878377914428711
    7. '	       ' → logprob: -12.628377914428711
    8. '<|end|>' → logprob: -13.128377914428711
    9. ':return' → logprob: -13.128377914428711
    10. '               ' → logprob: -13.628377914428711

Token 925: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10802388191223145
    2. '           ' → logprob: -2.3580238819122314
    3. ' return' → logprob: -4.858023643493652
    4. '	return' → logprob: -11.358023643493652
    5. '   ' → logprob: -12.983023643493652
    6. '
' → logprob: -13.358023643493652
    7. '               ' → logprob: -13.358023643493652
    8. '		' → logprob: -13.608023643493652
    9. '       ' → logprob: -13.733023643493652
    10. '	       ' → logprob: -14.108023643493652

Token 926: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014437667094171047
    2. '"No' → logprob: -5.139437675476074
    3. ''' → logprob: -6.014437675476074
    4. '"C' → logprob: -6.389437675476074
    5. '"B' → logprob: -7.389437675476074
    6. '"I' → logprob: -7.639437675476074
    7. '"A' → logprob: -7.639437675476074
    8. '"D' → logprob: -7.889437675476074
    9. '"P' → logprob: -8.014437675476074
    10. '"O' → logprob: -8.139437675476074

Token 927: 'yes' (ID: 6763)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.116270050406456
    2. 'Yes' → logprob: -2.866270065307617
    3. 'REAL' → logprob: -4.866270065307617
    4. 'LINE' → logprob: -4.991270065307617
    5. 'yes' → logprob: -5.116270065307617
    6. 'Magic' → logprob: -5.491270065307617
    7. 'P' → logprob: -5.866270065307617
    8. 'TRUE' → logprob: -5.991270065307617
    9. 'possible' → logprob: -5.991270065307617
    10. 'MAG' → logprob: -5.991270065307617

Token 928: '"
' (ID: 1092)
  Prédit: '"
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.079071544110775
    2. '"' → logprob: -2.579071521759033
    3. '\n' → logprob: -8.704071998596191
    4. '"
' → logprob: -11.079071998596191
    5. '"

' → logprob: -15.579071998596191
    6. '"\' → logprob: -16.329071044921875
    7. 'else' → logprob: -16.579071044921875
    8. '"""
' → logprob: -17.204071044921875
    9. '```' → logprob: -17.204071044921875
    10. '   ' → logprob: -17.954071044921875

Token 929: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7120533811976202e-05
    2. 'else' → logprob: -11.875017166137695
    3. 'return' → logprob: -11.875017166137695
    4. '	' → logprob: -13.875017166137695
    5. '
' → logprob: -14.375017166137695
    6. '   ' → logprob: -14.500017166137695
    7. '           ' → logprob: -14.750017166137695
    8. '<|end|>' → logprob: -15.125017166137695
    9. ' else' → logprob: -16.250017166137695
    10. '{
' → logprob: -16.625017166137695

Token 930: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03435836359858513
    2. 'else' (adapté à ' else') → logprob: -3.534358263015747
    3. ' else' → logprob: -5.409358501434326
    4. 'return' → logprob: -9.534358024597168
    5. '	' → logprob: -10.659358024597168
    6. '"' → logprob: -11.409358024597168
    7. '
' → logprob: -12.284358024597168
    8. '   ' → logprob: -12.409358024597168
    9. '	else' → logprob: -12.409358024597168
    10. 'elif' → logprob: -14.284358024597168

Token 931: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4839541018009186
    2. ':' → logprob: -1.4839540719985962
    3. ':
' → logprob: -1.8589540719985962
    4. '       ' → logprob: -7.608953952789307
    5. ':return' → logprob: -9.358954429626465
    6. '   ' → logprob: -9.608954429626465
    7. '          ' → logprob: -9.733954429626465
    8. ' return' → logprob: -9.858954429626465
    9. '<|end|>' → logprob: -9.858954429626465
    10. '	       ' → logprob: -9.983954429626465

Token 932: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09619809687137604
    2. ' return' → logprob: -2.596198081970215
    3. 'return' → logprob: -4.221198081970215
    4. '	       ' → logprob: -6.596198081970215
    5. '"' → logprob: -7.346198081970215
    6. '       ' → logprob: -8.221198081970215
    7. '		' → logprob: -9.846198081970215
    8. ' ' → logprob: -10.221198081970215
    9. '               ' → logprob: -10.596198081970215
    10. '	return' → logprob: -10.721198081970215

Token 933: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3305971324443817
    2. ' return' → logprob: -1.330597162246704
    3. '"' → logprob: -4.080596923828125
    4. '       ' → logprob: -8.580596923828125
    5. '           ' → logprob: -9.330596923828125
    6. ' "' → logprob: -11.955596923828125
    7. '	return' → logprob: -12.580596923828125
    8. '   ' → logprob: -13.705596923828125
    9. ' ' → logprob: -14.955596923828125
    10. '               ' → logprob: -14.955596923828125

Token 934: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0028153362218290567
    2. ' "' → logprob: -5.877815246582031
    3. ' no' → logprob: -11.877815246582031
    4. ''' → logprob: -13.627815246582031
    5. '"No' → logprob: -14.002815246582031
    6. ' ' → logprob: -14.752815246582031
    7. '
' → logprob: -15.627815246582031
    8. '`' → logprob: -15.752815246582031
    9. 'no' → logprob: -15.752815246582031
    10. '	' → logprob: -16.00281524658203

Token 935: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -2.165027217415627e-05
    2. '"' → logprob: -10.750021934509277
    3. ' no' → logprob: -16.00002098083496
    4. '	no' → logprob: -17.25002098083496
    5. '"No' → logprob: -20.25002098083496
    6. 'NO' → logprob: -20.75002098083496
    7. 'n' → logprob: -21.25002098083496
    8. 'No' → logprob: -21.87502098083496
    9. '   ' → logprob: -22.12502098083496
    10. 'non' → logprob: -22.37502098083496

Token 936: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 937: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 938: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2827676236629486
    2. ' process' → logprob: -2.1577675342559814
    3. ' Magic' → logprob: -2.1577675342559814
    4. ' test' → logprob: -4.7827677726745605
    5. ' check' → logprob: -6.1577677726745605
    6. ' run' → logprob: -6.6577677726745605
    7. ' solve' → logprob: -6.7827677726745605
    8. '_magic' → logprob: -7.2827677726745605
    9. ' magic' → logprob: -7.9077677726745605
    10. ' solution' → logprob: -8.157767295837402

Token 939: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.0564331205387134e-05
    2. '():
' → logprob: -11.50001049041748
    3. ' ():' → logprob: -15.00001049041748
    4. '()' → logprob: -16.625011444091797
    5. '():
' → logprob: -17.625011444091797
    6. ':' → logprob: -17.750011444091797
    7. '(":' → logprob: -18.750011444091797
    8. '():

' → logprob: -19.000011444091797
    9. '(' → logprob: -19.250011444091797
    10. '().' → logprob: -19.500011444091797

Token 940: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05094892159104347
    2. 'import' → logprob: -3.3009488582611084
    3. ' import' → logprob: -4.4259490966796875
    4. '```' → logprob: -7.3009490966796875
    5. '   ' → logprob: -8.800949096679688
    6. '	import' → logprob: -10.800949096679688
    7. ' n' → logprob: -11.925949096679688
    8. ' checker' → logprob: -13.425949096679688
    9. 'n' → logprob: -13.425949096679688
    10. ' if' → logprob: -13.675949096679688

Token 941: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.5822746157646179
    2. ' import' → logprob: -0.8322746157646179
    3. '   ' → logprob: -5.082274436950684
    4. ' n' → logprob: -9.832274436950684
    5. 't' → logprob: -10.707274436950684
    6. 'n' → logprob: -10.957274436950684
    7. ' t' → logprob: -11.207274436950684
    8. '	import' → logprob: -13.832274436950684
    9. '```' → logprob: -13.957274436950684
    10. ' T' → logprob: -15.707274436950684

Token 942: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -4.5491004129871726e-05
    2. ' sys' → logprob: -10.000045776367188
    3. '=sys' → logprob: -19.750045776367188
    4. '	sys' → logprob: -20.375045776367188
    5. '(sys' → logprob: -21.750045776367188
    6. '_sys' → logprob: -22.125045776367188
    7. '.sys' → logprob: -23.625045776367188
    8. 'io' → logprob: -23.750045776367188
    9. 'stdin' → logprob: -23.750045776367188
    10. 's' → logprob: -25.000045776367188

Token 943: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06235774606466293
    2. '    
' → logprob: -3.3123576641082764
    3. '
' → logprob: -3.9373576641082764
    4. 'input' → logprob: -5.6873579025268555
    5. 'import' → logprob: -7.4373579025268555
    6. ' input' → logprob: -8.437357902526855
    7. 'data' → logprob: -9.812357902526855
    8. ' lines' → logprob: -10.062357902526855
    9. 'for' → logprob: -10.312357902526855
    10. ' readline' → logprob: -10.562357902526855

Token 944: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021827593445777893
    2. 'input' → logprob: -4.896827697753906
    3. '    
' → logprob: -5.396827697753906
    4. '
' → logprob: -5.521827697753906
    5. ' input' → logprob: -6.146827697753906
    6. '```' → logprob: -7.021827697753906
    7. ' readline' → logprob: -7.146827697753906
    8. 'import' → logprob: -7.646827697753906
    9. 'for' → logprob: -7.896827697753906
    10. ' lines' → logprob: -8.146827697753906

Token 945: ' checker' (ID: 75924)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08193501085042953
    2. '   ' → logprob: -2.581934928894043
    3. ' input' → logprob: -5.831934928894043
    4. 'data' → logprob: -9.456934928894043
    5. 'for' → logprob: -11.706934928894043
    6. ' readline' → logprob: -12.206934928894043
    7. '
' → logprob: -12.331934928894043
    8. 'lines' → logprob: -12.456934928894043
    9. '	input' → logprob: -12.706934928894043
    10. 'read' → logprob: -13.456934928894043

Token 946: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048609279096126556
    2. '=' → logprob: -3.0486092567443848
    3. '   ' → logprob: -10.923609733581543
    4. ' ' → logprob: -13.673609733581543
    5. '	' → logprob: -13.923609733581543
    6. '  ' → logprob: -14.298609733581543
    7. ' ' → logprob: -14.923609733581543
    8. '.' → logprob: -15.048609733581543
    9. '    ' → logprob: -16.173608779907227
    10. '.py' → logprob: -16.423608779907227

Token 947: ' Magic' (ID: 29113)
  Prédit: 'Magic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Magic' → logprob: -0.0001234428636962548
    2. ' Magic' → logprob: -9.000123023986816
    3. 'Mag' → logprob: -17.875123977661133
    4. '_magic' → logprob: -19.875123977661133
    5. 'Mage' → logprob: -22.000123977661133
    6. 'magic' → logprob: -22.125123977661133
    7. '   ' → logprob: -23.125123977661133
    8. 'MAG' → logprob: -23.500123977661133
    9. ' magic' → logprob: -23.500123977661133
    10. '_MAGIC' → logprob: -23.875123977661133

Token 948: 'Circle' (ID: 28055)
  Prédit: 'Circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -3.128163257315464e-07
    2. 'Circ' → logprob: -16.5
    3. ' Circle' → logprob: -16.625
    4. 'Cube' → logprob: -16.875
    5. '.Circle' → logprob: -17.125
    6. 'Cir' → logprob: -17.25
    7. 'Magic' → logprob: -17.25
    8. 'Checker' → logprob: -17.5
    9. 'C' → logprob: -18.125
    10. 'circle' → logprob: -18.625

Token 949: 'Real' (ID: 16418)
  Prédit: 'Real'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Real' → logprob: -3.128163257315464e-07
    2. ' Real' → logprob: -16.125
    3. '<Real' → logprob: -16.75
    4. '_real' → logprob: -17.0
    5. 'checker' → logprob: -18.875
    6. '
' → logprob: -19.375
    7. '   ' → logprob: -19.75
    8. '_REAL' → logprob: -20.125
    9. 'real' → logprob: -20.125
    10. 'Checker' → logprob: -20.875

Token 950: 'iz' (ID: 482)
  Prédit: 'iz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iz' → logprob: -6.933173426659778e-05
    2. 'ability' → logprob: -10.250069618225098
    3. 'al' → logprob: -11.500069618225098
    4. 'Real' → logprob: -11.500069618225098
    5. ' realiz' → logprob: -12.875069618225098
    6. 'az' → logprob: -13.125069618225098
    7. 'is' → logprob: -13.375069618225098
    8. 'izable' → logprob: -13.625069618225098
    9. 'abil' → logprob: -13.875069618225098
    10. 'ity' → logprob: -14.000069618225098

Token 951: 'ability' (ID: 3563)
  Prédit: 'ability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -0.0003573919821064919
    2. 'abil' → logprob: -8.500357627868652
    3. 'er' → logprob: -9.250357627868652
    4. 'checker' → logprob: -10.500357627868652
    5. 'ab' → logprob: -11.000357627868652
    6. 'Checker' → logprob: -11.500357627868652
    7. 'abl' → logprob: -14.000357627868652
    8. '_checker' → logprob: -14.500357627868652
    9. 'ably' → logprob: -14.875357627868652
    10. 'abler' → logprob: -14.875357627868652

Token 952: 'Checker' (ID: 39016)
  Prédit: 'Checker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -4.1557283111615106e-05
    2. '_checker' → logprob: -10.625041961669922
    3. 'checker' → logprob: -11.000041961669922
    4. ' Checker' → logprob: -15.375041961669922
    5. ' checker' → logprob: -15.875041961669922
    6. 'cker' → logprob: -16.625041961669922
    7. 'Check' → logprob: -17.250041961669922
    8. '_Check' → logprob: -18.375041961669922
    9. 'er' → logprob: -18.875041961669922
    10. '   ' → logprob: -19.000041961669922

Token 953: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1941632628440857
    2. '   ' → logprob: -2.4441633224487305
    3. '()' → logprob: -3.0691633224487305
    4. '()
' → logprob: -3.4441633224487305
    5. '    
' → logprob: -5.6941633224487305
    6. '	
' → logprob: -5.8191633224487305
    7. '<|end|>' → logprob: -6.4441633224487305
    8. '[' → logprob: -7.5691633224487305
    9. '   
' → logprob: -8.06916332244873
    10. '  
' → logprob: -8.06916332244873

Token 954: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004075789824128151
    2. 'for' → logprob: -5.75407600402832
    3. ' for' → logprob: -7.12907600402832
    4. '```' → logprob: -10.37907600402832
    5. ' lines' → logprob: -10.87907600402832
    6. '
' → logprob: -11.12907600402832
    7. '    
' → logprob: -11.62907600402832
    8. 'data' → logprob: -11.75407600402832
    9. ' readline' → logprob: -12.50407600402832
    10. 'import' → logprob: -12.75407600402832

Token 955: ' lines' (ID: 8698)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09657309949398041
    2. '   ' → logprob: -2.5965731143951416
    3. 'input' → logprob: -4.3465728759765625
    4. ' for' → logprob: -5.4715728759765625
    5. ' input' → logprob: -8.346572875976562
    6. 'lines' (adapté à ' lines') → logprob: -9.971572875976562
    7. 't' → logprob: -10.596572875976562
    8. 'data' → logprob: -10.596572875976562
    9. 'n' → logprob: -10.721572875976562
    10. '```' → logprob: -12.471572875976562

Token 956: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3485771119594574
    2. '=' → logprob: -1.2235771417617798
    3. '   ' → logprob: -9.598577499389648
    4. '=[]' → logprob: -10.598577499389648
    5. '=line' → logprob: -11.223577499389648
    6. '=[]
' → logprob: -11.473577499389648
    7. '=
' → logprob: -12.598577499389648
    8. ' =
' → logprob: -13.098577499389648
    9. '()' → logprob: -13.223577499389648
    10. '_' → logprob: -13.473577499389648

Token 957: ' (' (ID: 350)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0040785204619169235
    2. ' sys' → logprob: -5.504078388214111
    3. '[' → logprob: -16.754077911376953
    4. '=sys' → logprob: -17.379077911376953
    5. '	sys' → logprob: -17.504077911376953
    6. '(sys' → logprob: -17.879077911376953
    7. 'iter' → logprob: -18.004077911376953
    8. 'list' → logprob: -18.129077911376953
    9. '[]' → logprob: -18.504077911376953
    10. '[]
' → logprob: -19.129077911376953

Token 958: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0011847536079585552
    2. 'sys' → logprob: -6.751184940338135
    3. 'l' → logprob: -11.751184463500977
    4. ' line' → logprob: -12.001184463500977
    5. 'lin' → logprob: -15.501184463500977
    6. ' sys' → logprob: -16.251184463500977
    7. '[line' → logprob: -17.001184463500977
    8. '
' → logprob: -17.376184463500977
    9. 'ln' → logprob: -17.751184463500977
    10. '   ' → logprob: -17.751184463500977

Token 959: '.rstrip' (ID: 161629)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.5367799997329712
    2. '.rstrip' → logprob: -1.0367799997329712
    3. ' for' → logprob: -3.2867798805236816
    4. 'for' → logprob: -3.7867798805236816
    5. 'strip' → logprob: -8.28678035736084
    6. '=sys' → logprob: -8.91178035736084
    7. '.' → logprob: -9.03678035736084
    8. 'rstrip' → logprob: -9.28678035736084
    9. '.readline' → logprob: -9.66178035736084
    10. 'sys' → logprob: -10.53678035736084

Token 960: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20811617374420166
    2. 'for' → logprob: -1.9581161737442017
    3. '('\' → logprob: -3.083116054534912
    4. ' for' → logprob: -7.583116054534912
    5. ''\' → logprob: -8.58311653137207
    6. '()\' → logprob: -9.08311653137207
    7. '   ' → logprob: -9.95811653137207
    8. '()
' → logprob: -10.70811653137207
    9. '("\' → logprob: -10.95811653137207
    10. '\n' → logprob: -10.95811653137207

Token 961: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011033779446734115
    2. '\n' → logprob: -9.125110626220703
    3. '
' → logprob: -14.375110626220703
    4. 'newline' → logprob: -14.625110626220703
    5. ''\' → logprob: -15.625110626220703
    6. 'nl' → logprob: -16.500110626220703
    7. 'nt' → logprob: -18.000110626220703
    8. 'r' → logprob: -18.125110626220703
    9. 't' → logprob: -18.750110626220703
    10. ' n' → logprob: -19.125110626220703

Token 962: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.10028959065675735
    2. ')' → logprob: -2.3502895832061768
    3. '())' → logprob: -10.850289344787598
    4. '()' → logprob: -10.850289344787598
    5. ''))' → logprob: -10.975289344787598
    6. '))' → logprob: -11.600289344787598
    7. '")' → logprob: -12.350289344787598
    8. 'for' → logprob: -12.850289344787598
    9. ' for' → logprob: -13.225289344787598
    10. '')
' → logprob: -13.725289344787598

Token 963: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4829629361629486
    2. ' for' → logprob: -0.982962965965271
    3. '()' → logprob: -4.7329630851745605
    4. '   ' → logprob: -10.232962608337402
    5. '    ' → logprob: -12.482962608337402
    6. ')' → logprob: -12.857962608337402
    7. '	for' → logprob: -13.482962608337402
    8. ' ' → logprob: -13.982962608337402
    9. '       ' → logprob: -14.357962608337402
    10. ' ()' → logprob: -15.107962608337402

Token 964: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3132738173007965
    2. ' line' → logprob: -1.3132737874984741
    3. '_line' → logprob: -11.938273429870605
    4. '	line' → logprob: -12.438273429870605
    5. 'sys' → logprob: -14.063273429870605
    6. ' sys' → logprob: -15.313273429870605
    7. '_' → logprob: -15.438273429870605
    8. '(line' → logprob: -15.688273429870605
    9. '=line' → logprob: -16.438274383544922
    10. 'l' → logprob: -16.688274383544922

Token 965: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31340861320495605
    2. 'in' → logprob: -1.313408613204956
    3. 'line' → logprob: -8.938408851623535
    4. ' line' → logprob: -11.313408851623535
    5. '	in' → logprob: -13.313408851623535
    6. '(line' → logprob: -14.938408851623535
    7. ' ' → logprob: -15.063408851623535
    8. 'import' → logprob: -15.188408851623535
    9. '	line' → logprob: -15.813408851623535
    10. ' ' → logprob: -16.06340789794922

Token 966: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -7.493430894101039e-05
    2. ' sys' → logprob: -9.500075340270996
    3. 'stdin' → logprob: -16.87507438659668
    4. '=sys' → logprob: -17.50007438659668
    5. '	sys' → logprob: -18.37507438659668
    6. 'import' → logprob: -18.75007438659668
    7. '(sys' → logprob: -20.25007438659668
    8. 'open' → logprob: -20.87507438659668
    9. '
' → logprob: -20.87507438659668
    10. '   ' → logprob: -22.00007438659668

Token 967: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.023287750780582428
    2. 'stdin' → logprob: -3.773287773132324
    3. '.' → logprob: -10.773287773132324
    4. '(stdin' → logprob: -11.398287773132324
    5. ' stdin' → logprob: -11.898287773132324
    6. '.stdout' → logprob: -13.398287773132324
    7. 'std' → logprob: -14.398287773132324
    8. '.std' → logprob: -14.648287773132324
    9. '.argv' → logprob: -14.773287773132324
    10. 'import' → logprob: -15.898287773132324

Token 968: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005482682608999312
    2. ')
' → logprob: -8.625548362731934
    3. 'if' → logprob: -8.750548362731934
    4. ' if' → logprob: -9.250548362731934
    5. ' )' → logprob: -10.125548362731934
    6. '())' → logprob: -10.500548362731934
    7. '   ' → logprob: -10.625548362731934
    8. '()' → logprob: -11.500548362731934
    9. ' in' → logprob: -11.625548362731934
    10. 'in' → logprob: -13.750548362731934

Token 969: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016932693542912602
    2. ' for' → logprob: -6.501693248748779
    3. 'for' → logprob: -8.626693725585938
    4. ' lines' → logprob: -11.876693725585938
    5. ' while' → logprob: -13.876693725585938
    6. 'while' → logprob: -14.376693725585938
    7. 'input' → logprob: -14.501693725585938
    8. '    
' → logprob: -14.876693725585938
    9. ',' → logprob: -15.001693725585938
    10. 'def' → logprob: -15.126693725585938

Token 970: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04713917523622513
    2. ' for' → logprob: -3.2971391677856445
    3. 'n' → logprob: -5.6721391677856445
    4. '   ' → logprob: -6.0471391677856445
    5. 'try' → logprob: -6.7971391677856445
    6. 'while' (adapté à ' while') → logprob: -6.7971391677856445
    7. 'input' → logprob: -8.047139167785645
    8. 'data' → logprob: -8.172139167785645
    9. ' n' → logprob: -8.922139167785645
    10. 'import' → logprob: -9.172139167785645

Token 971: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5759803056716919
    2. 'True' → logprob: -0.8259803056716919
    3. '(True' → logprob: -10.575980186462402
    4. ' lines' → logprob: -11.700980186462402
    5. 'lines' → logprob: -12.075980186462402
    6. '1' → logprob: -14.325980186462402
    7. '=True' → logprob: -15.700980186462402
    8. 'true' → logprob: -15.700980186462402
    9. ' line' → logprob: -16.32598114013672
    10. '   ' → logprob: -16.32598114013672

Token 972: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1492053121328354
    2. '       ' → logprob: -2.649205207824707
    3. '   ' → logprob: -2.899205207824707
    4. ':
' → logprob: -4.399205207824707
    5. ',' → logprob: -8.399205207824707
    6. '    ' → logprob: -9.274205207824707
    7. ' :' → logprob: -10.274205207824707
    8. 'try' → logprob: -10.649205207824707
    9. '):' → logprob: -11.149205207824707
    10. '=' → logprob: -11.399205207824707

Token 973: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026741522015072405
    2. 'try' → logprob: -8.500267028808594
    3. '       ' → logprob: -10.375267028808594
    4. ' try' → logprob: -10.500267028808594
    5. '	try' → logprob: -12.375267028808594
    6. '   ' → logprob: -14.125267028808594
    7. '    ' → logprob: -16.250267028808594
    8. '```' → logprob: -17.125267028808594
    9. ' line' → logprob: -17.875267028808594
    10. '  ' → logprob: -18.000267028808594

Token 974: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.021219033747911453
    2. ' try' → logprob: -4.271219253540039
    3. 'line' → logprob: -5.021219253540039
    4. ' line' → logprob: -8.396219253540039
    5. '   ' → logprob: -8.521219253540039
    6. '	try' → logprob: -11.896219253540039
    7. '	line' → logprob: -13.271219253540039
    8. '       ' → logprob: -15.396219253540039
    9. 'Try' → logprob: -16.39621925354004
    10. '    
' → logprob: -16.64621925354004

Token 975: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08540549129247665
    2. ':
' → logprob: -2.7104055881500244
    3. '       ' → logprob: -4.460405349731445
    4. ' :' → logprob: -6.210405349731445
    5. '           ' → logprob: -7.085405349731445
    6. '   ' → logprob: -7.210405349731445
    7. ' :
' → logprob: -9.710405349731445
    8. '<|end|>' → logprob: -10.710405349731445
    9. '    ' → logprob: -11.210405349731445
    10. '        ' → logprob: -11.210405349731445

Token 976: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07066558301448822
    2. ' line' → logprob: -3.1956655979156494
    3. 'line' → logprob: -4.07066535949707
    4. '   ' → logprob: -5.07066535949707
    5. '           ' → logprob: -5.69566535949707
    6. '	line' → logprob: -7.69566535949707
    7. '#line' → logprob: -9.82066535949707
    8. '	   ' → logprob: -11.07066535949707
    9. 'input' → logprob: -11.94566535949707
    10. '	       ' → logprob: -12.32066535949707

Token 977: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.009490086697041988
    2. ' line' → logprob: -4.759490013122559
    3. '           ' → logprob: -7.634490013122559
    4. 'l' → logprob: -8.759490013122559
    5. '   ' → logprob: -9.134490013122559
    6. 'n' → logprob: -9.759490013122559
    7. '	line' → logprob: -11.009490013122559
    8. 'header' → logprob: -11.259490013122559
    9. 'input' → logprob: -11.384490013122559
    10. '       ' → logprob: -11.384490013122559

Token 978: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326258182525635
    2. '=' → logprob: -1.3132625818252563
    3. '=line' → logprob: -14.563262939453125
    4. '   ' → logprob: -15.563262939453125
    5. '=
' → logprob: -16.938262939453125
    6. ' ' → logprob: -16.938262939453125
    7. ' =
' → logprob: -17.063262939453125
    8. '    ' → logprob: -18.313262939453125
    9. '＝' → logprob: -18.563262939453125
    10. '=input' → logprob: -18.813262939453125

Token 979: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.1269361972808838
    2. ' next' → logprob: -2.126936197280884
    3. 'input' → logprob: -11.876935958862305
    4. ' input' → logprob: -14.251935958862305
    5. 'lines' → logprob: -15.501935958862305
    6. '(next' → logprob: -15.501935958862305
    7. ' lines' → logprob: -16.626935958862305
    8. '.next' → logprob: -16.876935958862305
    9. '	next' → logprob: -19.001935958862305
    10. '[next' → logprob: -19.751935958862305

Token 980: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0019291093340143561
    2. 'lines' → logprob: -6.25192928314209
    3. '	lines' → logprob: -15.12692928314209
    4. ' lines' → logprob: -15.50192928314209
    5. '(
' → logprob: -18.126928329467773
    6. '(line' → logprob: -19.626928329467773
    7. 'line' → logprob: -19.751928329467773
    8. '_lines' → logprob: -20.001928329467773
    9. 'Lines' → logprob: -20.251928329467773
    10. '.lines' → logprob: -20.876928329467773

Token 981: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016948381438851357
    2. ').' → logprob: -4.516948223114014
    3. ')
' → logprob: -6.141948223114014
    4. '       ' → logprob: -6.516948223114014
    5. '()' → logprob: -6.766948223114014
    6. '())' → logprob: -8.266948699951172
    7. '().' → logprob: -8.516948699951172
    8. '()
' → logprob: -8.641948699951172
    9. '.strip' → logprob: -8.891948699951172
    10. '<|end|>' → logprob: -9.016948699951172

Token 982: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018490076065063477
    2. '       ' → logprob: -4.018489837646484
    3. 'except' → logprob: -9.268489837646484
    4. '<|end|>' → logprob: -9.518489837646484
    5. '	       ' → logprob: -10.018489837646484
    6. '            
' → logprob: -10.143489837646484
    7. '		' → logprob: -10.268489837646484
    8. ' except' → logprob: -11.143489837646484
    9. '        ' → logprob: -12.393489837646484
    10. '    	   ' → logprob: -12.393489837646484

Token 983: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3966798484325409
    2. '       ' → logprob: -1.1466798782348633
    3. 'except' (adapté à ' except') → logprob: -5.271679878234863
    4. ' except' → logprob: -5.896679878234863
    5. '
' → logprob: -7.146679878234863
    6. '<|end|>' → logprob: -8.146679878234863
    7. '            
' → logprob: -8.396679878234863
    8. '	       ' → logprob: -8.771679878234863
    9. '        
' → logprob: -9.021679878234863
    10. ' if' → logprob: -9.896679878234863

Token 984: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -2.8802491215174086e-05
    2. ' Stop' → logprob: -10.625028610229492
    3. 'EOF' → logprob: -12.625028610229492
    4. '_Stop' → logprob: -14.375028610229492
    5. '_stop' → logprob: -15.250028610229492
    6. 'STOP' → logprob: -15.500028610229492
    7. '.Stop' → logprob: -17.125028610229492
    8. '(' → logprob: -17.625028610229492
    9. '_STOP' → logprob: -18.125028610229492
    10. 'Break' → logprob: -18.750028610229492

Token 985: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -1.0280383548888494e-06
    2. 'Async' → logprob: -14.625000953674316
    3. 'Iterator' → logprob: -15.000000953674316
    4. 'iteration' → logprob: -16.250001907348633
    5. ' iteration' → logprob: -17.375001907348633
    6. 'Iterations' → logprob: -17.625001907348633
    7. 'Iter' → logprob: -17.750001907348633
    8. 'Error' → logprob: -18.000001907348633
    9. 'EOF' → logprob: -18.625001907348633
    10. 'Exit' → logprob: -18.750001907348633

Token 986: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03630893677473068
    2. ':' → logprob: -3.661309003829956
    3. ':
' → logprob: -4.661308765411377
    4. '       ' → logprob: -8.036309242248535
    5. '               ' → logprob: -9.536309242248535
    6. '   ' → logprob: -10.286309242248535
    7. '          ' → logprob: -11.161309242248535
    8. '		' → logprob: -11.661309242248535
    9. '                   ' → logprob: -11.661309242248535
    10. ' ' → logprob: -11.786309242248535

Token 987: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006029164884239435
    2. '       ' → logprob: -5.25602912902832
    3. '   ' → logprob: -7.25602912902832
    4. '               ' → logprob: -10.25602912902832
    5. ' ' → logprob: -10.63102912902832
    6. '		' → logprob: -12.00602912902832
    7. '                   ' → logprob: -12.38102912902832
    8. ':' → logprob: -12.63102912902832
    9. '          ' → logprob: -12.88102912902832
    10. '         ' → logprob: -13.38102912902832

Token 988: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030383204575628042
    2. 'break' (adapté à ' break') → logprob: -6.12803840637207
    3. '       ' → logprob: -7.50303840637207
    4. '               ' → logprob: -9.12803840637207
    5. ' break' → logprob: -9.12803840637207
    6. '   ' → logprob: -9.87803840637207
    7. '		' → logprob: -11.12803840637207
    8. '	break' → logprob: -11.75303840637207
    9. '```' → logprob: -12.62803840637207
    10. ' ' → logprob: -13.12803840637207

Token 989: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002210596576333046
    2. '<|end|>' → logprob: -8.750221252441406
    3. '        
' → logprob: -10.875221252441406
    4. '           ' → logprob: -11.000221252441406
    5. ' if' → logprob: -11.625221252441406
    6. '	' → logprob: -11.875221252441406
    7. '   ' → logprob: -13.000221252441406
    8. 'if' → logprob: -13.625221252441406
    9. '        ' → logprob: -13.875221252441406
    10. '<|end|>' → logprob: -14.000221252441406

Token 990: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002087853499688208
    2. '<|end|>' → logprob: -9.250208854675293
    3. '        
' → logprob: -9.875208854675293
    4. '           ' → logprob: -10.375208854675293
    5. '	' → logprob: -11.000208854675293
    6. '   ' → logprob: -12.375208854675293
    7. '
' → logprob: -13.500208854675293
    8. '```' → logprob: -13.625208854675293
    9. '	   ' → logprob: -13.875208854675293
    10. ' if' → logprob: -13.875208854675293

Token 991: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35725727677345276
    2. 'if' (adapté à ' if') → logprob: -1.6072572469711304
    3. '       ' → logprob: -2.35725736618042
    4. ' n' → logprob: -5.98225736618042
    5. 'n' → logprob: -6.48225736618042
    6. ' parts' → logprob: -7.10725736618042
    7. 'parts' → logprob: -8.357256889343262
    8. 'tokens' → logprob: -9.107256889343262
    9. '	if' → logprob: -10.607256889343262
    10. ' tokens' → logprob: -11.482256889343262

Token 992: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.011845095083117485
    2. 'not' → logprob: -4.511845111846924
    3. ' line' → logprob: -7.261845111846924
    4. 'line' → logprob: -9.261844635009766
    5. ' ' → logprob: -16.386844635009766
    6. '   ' → logprob: -17.761844635009766
    7. '	not' → logprob: -18.886844635009766
    8. 'len' → logprob: -19.261844635009766
    9. ' len' → logprob: -19.261844635009766
    10. ' ' → logprob: -19.386844635009766

Token 993: '.strip' (ID: 40613)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10090836137533188
    2. ' ==' → logprob: -2.3509082794189453
    3. '.strip' → logprob: -7.350908279418945
    4. '===' → logprob: -10.975908279418945
    5. '=' → logprob: -11.100908279418945
    6. '()==' → logprob: -11.225908279418945
    7. 'strip' → logprob: -12.475908279418945
    8. '==
' → logprob: -12.600908279418945
    9. '=="' → logprob: -13.350908279418945
    10. ']==' → logprob: -13.475908279418945

Token 994: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7126619815826416
    2. '()==' → logprob: -0.7126619815826416
    3. '==' → logprob: -3.9626619815826416
    4. ' ==' → logprob: -8.087661743164062
    5. '()=="' → logprob: -12.837661743164062
    6. '===' → logprob: -13.337661743164062
    7. '():' → logprob: -14.587661743164062
    8. ']==' → logprob: -14.837661743164062
    9. '=' → logprob: -15.462661743164062
    10. ' ()' → logprob: -15.712661743164062

Token 995: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004244842566549778
    2. ' ==' → logprob: -5.504244804382324
    3. '()==' → logprob: -8.754244804382324
    4. '===' → logprob: -12.504244804382324
    5. '==
' → logprob: -13.504244804382324
    6. '=='' → logprob: -14.129244804382324
    7. '=' → logprob: -14.129244804382324
    8. '=="' → logprob: -14.254244804382324
    9. ')==' → logprob: -14.379244804382324
    10. ']==' → logprob: -14.629244804382324

Token 996: ' "":
' (ID: 132826)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.09158714860677719
    2. '""' → logprob: -2.5915870666503906
    3. '"' → logprob: -5.216587066650391
    4. ''' → logprob: -5.216587066650391
    5. '"":' → logprob: -6.341587066650391
    6. ''''' → logprob: -13.71658706665039
    7. '"""' → logprob: -14.59158706665039
    8. '''''' → logprob: -14.59158706665039
    9. '0' → logprob: -14.71658706665039
    10. ''end' → logprob: -15.09158706665039

Token 997: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.967624019831419e-05
    2. '       ' → logprob: -10.875060081481934
    3. 'continue' → logprob: -11.000060081481934
    4. ' continue' → logprob: -11.500060081481934
    5. '               ' → logprob: -11.625060081481934
    6. '		' → logprob: -12.875060081481934
    7. '	       ' → logprob: -14.500060081481934
    8. ':' → logprob: -14.750060081481934
    9. ':
' → logprob: -15.375060081481934
    10. '          ' → logprob: -15.500060081481934

Token 998: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.01041497103869915
    2. ' continue' → logprob: -5.260415077209473
    3. '           ' → logprob: -5.510415077209473
    4. 'break' → logprob: -7.260415077209473
    5. '       ' → logprob: -8.010415077209473
    6. '   ' → logprob: -9.510415077209473
    7. '	continue' → logprob: -12.010415077209473
    8. ' break' → logprob: -12.010415077209473
    9. '               ' → logprob: -13.385415077209473
    10. ' ' → logprob: -15.260415077209473

Token 999: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002165299083571881
    2. '<|end|>' → logprob: -8.750216484069824
    3. '        
' → logprob: -10.000216484069824
    4. '
' → logprob: -12.250216484069824
    5. '   ' → logprob: -13.125216484069824
    6. '           ' → logprob: -13.500216484069824
    7. '<|end|>' → logprob: -13.750216484069824
    8. '```' → logprob: -14.125216484069824
    9. ',' → logprob: -15.000216484069824
    10. '  
' → logprob: -15.250216484069824

Token 1000: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023643692838959396
    2. 'n' → logprob: -9.000236511230469
    3. '```' → logprob: -9.625236511230469
    4. '   ' → logprob: -11.375236511230469
    5. 'try' → logprob: -11.625236511230469
    6. ' n' → logprob: -11.875236511230469
    7. 'tokens' → logprob: -12.125236511230469
    8. '           ' → logprob: -12.250236511230469
    9. '<|end|>' → logprob: -13.375236511230469
    10. 'parts' → logprob: -13.750236511230469

Token 1001: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03292042016983032
    2. ' n' → logprob: -3.7829203605651855
    3. 'parts' → logprob: -4.7829203605651855
    4. 'nm' → logprob: -7.5329203605651855
    5. ' parts' → logprob: -7.5329203605651855
    6. '       ' → logprob: -9.282920837402344
    7. 'tokens' → logprob: -10.282920837402344
    8. 'params' → logprob: -10.657920837402344
    9. 'nums' → logprob: -11.282920837402344
    10. ' nm' → logprob: -11.907920837402344

Token 1002: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.43264907598495483
    2. 'line' → logprob: -1.4326491355895996
    3. ''' → logprob: -2.6826491355895996
    4. ' not' → logprob: -3.9326491355895996
    5. '"' → logprob: -4.8076491355896
    6. ' '' → logprob: -5.0576491355896
    7. 'len' → logprob: -5.5576491355896
    8. ' ' → logprob: -6.6826491355896
    9. ' len' → logprob: -6.6826491355896
    10. 'n' → logprob: -7.0576491355896

Token 1003: ' ==' (ID: 951)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0146845579147339
    2. '.startswith' → logprob: -1.0146845579147339
    3. '.strip' → logprob: -1.7646845579147339
    4. '==' → logprob: -2.8896846771240234
    5. ' ==' → logprob: -3.5146846771240234
    6. '.count' → logprob: -5.014684677124023
    7. '.is' → logprob: -5.264684677124023
    8. '.split' → logprob: -6.139684677124023
    9. 'startswith' → logprob: -6.389684677124023
    10. '   ' → logprob: -7.389684677124023

Token 1004: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07024506479501724
    2. ''' → logprob: -2.6952450275421143
    3. '0' → logprob: -8.570244789123535
    4. ' "' → logprob: -9.570244789123535
    5. ' '' → logprob: -10.070244789123535
    6. ' ' → logprob: -13.070244789123535
    7. '   ' → logprob: -14.320244789123535
    8. ''s' → logprob: -14.945244789123535
    9. ''end' → logprob: -14.945244789123535
    10. '`' → logprob: -15.195244789123535

Token 1005: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017855016514658928
    2. '"' → logprob: -4.142855167388916
    3. '":' → logprob: -6.767855167388916
    4. ' ' → logprob: -8.017854690551758
    5. '":
' → logprob: -9.142854690551758
    6. 'END' → logprob: -10.142854690551758
    7. '#' → logprob: -10.517854690551758
    8. '"":' → logprob: -10.517854690551758
    9. 'EOF' → logprob: -10.642854690551758
    10. 'end' → logprob: -10.767854690551758

Token 1006: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018366143107414246
    2. '0' → logprob: -4.39336633682251
    3. '":' → logprob: -5.51836633682251
    4. '":
' → logprob: -7.01836633682251
    5. '"' → logprob: -7.51836633682251
    6. ' "' → logprob: -8.518365859985352
    7. '":
' → logprob: -8.768365859985352
    8. '"):
' → logprob: -12.018365859985352
    9. ' ":' → logprob: -12.393365859985352
    10. '   ' → logprob: -12.643365859985352

Token 1007: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '<|end|>' → logprob: -17.62500762939453
    4. '"' → logprob: -18.25000762939453
    5. '">' → logprob: -18.75000762939453
    6. '")' → logprob: -18.75000762939453
    7. '<|end|>' → logprob: -19.12500762939453
    8. '
' → logprob: -19.12500762939453
    9. '000' → logprob: -20.50000762939453
    10. '00' → logprob: -20.50000762939453

Token 1008: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.7009787559509277
    2. '":
' → logprob: -0.7009787559509277
    3. '"' → logprob: -5.950978755950928
    4. '":
' → logprob: -6.075978755950928
    5. '\n' → logprob: -6.450978755950928
    6. '"):
' → logprob: -7.325978755950928
    7. '<|end|>' → logprob: -8.450979232788086
    8. '<|end|>' → logprob: -8.575979232788086
    9. '":

' → logprob: -9.700979232788086
    10. '0' → logprob: -9.950979232788086

Token 1009: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013452880375552922
    2. ':' → logprob: -10.000134468078613
    3. '       ' → logprob: -10.000134468078613
    4. '		' → logprob: -10.750134468078613
    5. ':
' → logprob: -11.125134468078613
    6. '               ' → logprob: -13.125134468078613
    7. '	       ' → logprob: -13.375134468078613
    8. ' break' → logprob: -14.125134468078613
    9. '          ' → logprob: -14.250134468078613
    10. '   ' → logprob: -14.750134468078613

Token 1010: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.032178010791540146
    2. 'break' (adapté à ' break') → logprob: -3.5321779251098633
    3. '               ' → logprob: -6.657177925109863
    4. ' break' → logprob: -7.032177925109863
    5. '		' → logprob: -8.657177925109863
    6. '	break' → logprob: -10.282177925109863
    7. '
' → logprob: -10.782177925109863
    8. '       ' → logprob: -11.282177925109863
    9. '```' → logprob: -11.782177925109863
    10. '	       ' → logprob: -13.407177925109863

Token 1011: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.300083648762666e-05
    2. '        
' → logprob: -10.625053405761719
    3. '<|end|>' → logprob: -11.875053405761719
    4. '   ' → logprob: -12.000053405761719
    5. '           ' → logprob: -12.500053405761719
    6. '	' → logprob: -12.625053405761719
    7. '
' → logprob: -12.875053405761719
    8. '```' → logprob: -13.250053405761719
    9. 'tokens' → logprob: -13.875053405761719
    10. '	   ' → logprob: -14.375053405761719

Token 1012: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.847109812544659e-05
    2. '<|end|>' → logprob: -11.000048637390137
    3. '```' → logprob: -11.000048637390137
    4. '        
' → logprob: -12.500048637390137
    5. 'n' → logprob: -12.750048637390137
    6. '   ' → logprob: -12.875048637390137
    7. '
' → logprob: -13.375048637390137
    8. '	' → logprob: -13.625048637390137
    9. 'tokens' → logprob: -14.125048637390137
    10. '           ' → logprob: -14.750048637390137

Token 1013: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.3034417927265167
    2. '       ' → logprob: -1.5534417629241943
    3. 'parts' → logprob: -3.4284417629241943
    4. ' n' → logprob: -4.428442001342773
    5. ' parts' → logprob: -6.053442001342773
    6. 'tokens' → logprob: -6.053442001342773
    7. '	n' → logprob: -7.678442001342773
    8. '```' → logprob: -8.928442001342773
    9. 'count' → logprob: -9.178442001342773
    10. 'params' → logprob: -9.428442001342773

Token 1014: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012921433662995696
    2. ' ,' → logprob: -6.7512922286987305
    3. '=' → logprob: -10.00129222869873
    4. '<|end|>' → logprob: -10.50129222869873
    5. ' =' → logprob: -11.12629222869873
    6. ',n' → logprob: -12.00129222869873
    7. '<|end|>' → logprob: -12.37629222869873
    8. ',
' → logprob: -12.75129222869873
    9. 'tokens' → logprob: -13.00129222869873
    10. ',num' → logprob: -13.12629222869873

Token 1015: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.014165744185447693
    2. ' m' → logprob: -4.264165878295898
    3. '<|end|>' → logprob: -13.889165878295898
    4. ' ' → logprob: -15.014165878295898
    5. '	m' → logprob: -15.139165878295898
    6. '_m' → logprob: -15.764165878295898
    7. '    ' → logprob: -16.0141658782959
    8. '*m' → logprob: -16.5141658782959
    9. ',m' → logprob: -16.6391658782959
    10. ' 
' → logprob: -16.6391658782959

Token 1016: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10028409957885742
    2. ' =' → logprob: -2.3502840995788574
    3. ',' → logprob: -9.475284576416016
    4. '<|end|>' → logprob: -15.225284576416016
    5. '=int' → logprob: -16.350284576416016
    6. '=
' → logprob: -16.725284576416016
    7. '＝' → logprob: -16.850284576416016
    8. '=line' → logprob: -16.975284576416016
    9. ')' → logprob: -17.100284576416016
    10. '<|end|>' → logprob: -17.600284576416016

Token 1017: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0619891993701458
    2. 'map' → logprob: -2.8119893074035645
    3. ' line' → logprob: -11.311988830566406
    4. 'line' → logprob: -12.186988830566406
    5. '	map' → logprob: -13.061988830566406
    6. '_map' → logprob: -13.936988830566406
    7. '(map' → logprob: -14.061988830566406
    8. ' mapa' → logprob: -15.811988830566406
    9. '.map' → logprob: -16.561988830566406
    10. 'list' → logprob: -17.061988830566406

Token 1018: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00031091354321688414
    2. '(str' → logprob: -8.750310897827148
    3. 'int' → logprob: -9.750310897827148
    4. '(lambda' → logprob: -9.750310897827148
    5. '(' → logprob: -10.375310897827148
    6. '[int' → logprob: -12.750310897827148
    7. '(line' → logprob: -14.125310897827148
    8. '=int' → logprob: -15.000310897827148
    9. '<int' → logprob: -15.250310897827148
    10. 'lambda' → logprob: -15.750310897827148

Token 1019: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.012522367760539055
    2. '=line' → logprob: -5.262522220611572
    3. '(' → logprob: -5.887522220611572
    4. '#line' → logprob: -6.137522220611572
    5. '[line' → logprob: -6.762522220611572
    6. ')' → logprob: -8.13752269744873
    7. '(
' → logprob: -8.63752269744873
    8. ' line' → logprob: -8.76252269744873
    9. 'line' → logprob: -8.88752269744873
    10. ',line' → logprob: -9.13752269744873

Token 1020: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00012356207298580557
    2. ' line' → logprob: -9.000123977661133
    3. '(line' → logprob: -15.875123977661133
    4. '=line' → logprob: -18.375123977661133
    5. '#line' → logprob: -18.500123977661133
    6. '	line' → logprob: -18.750123977661133
    7. '[line' → logprob: -19.500123977661133
    8. '_line' → logprob: -21.875123977661133
    9. ',line' → logprob: -22.125123977661133
    10. '   ' → logprob: -23.375123977661133

Token 1021: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.106462761759758
    2. '().' → logprob: -2.3564627170562744
    3. '.strip' → logprob: -5.4814629554748535
    4. '.' → logprob: -6.3564629554748535
    5. ' .' → logprob: -8.481462478637695
    6. '.readline' → logprob: -10.231462478637695
    7. 'split' → logprob: -10.481462478637695
    8. '(split' → logprob: -10.731462478637695
    9. '.rstrip' → logprob: -10.981462478637695
    10. '()' → logprob: -11.856462478637695

Token 1022: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.012948790565133095
    2. '()' → logprob: -4.512948989868164
    3. '('' → logprob: -6.512948989868164
    4. '())
' → logprob: -8.762948989868164
    5. ')' → logprob: -9.012948989868164
    6. '(' → logprob: -9.012948989868164
    7. '("' → logprob: -12.387948989868164
    8. '()
' → logprob: -13.262948989868164
    9. '()[' → logprob: -13.387948989868164
    10. '(None' → logprob: -13.512948989868164

Token 1023: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2029089629650116
    2. 'edges' → logprob: -1.702908992767334
    3. ' edges' → logprob: -6.702908992767334
    4. '```' → logprob: -9.202908515930176
    5. '<|end|>' → logprob: -10.077908515930176
    6. '_edges' → logprob: -10.577908515930176
    7. 'lines' → logprob: -10.702908515930176
    8. '(edges' → logprob: -10.827908515930176
    9. 'edge' → logprob: -11.327908515930176
    10. '.edges' → logprob: -11.577908515930176

Token 1024: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.002905085450038314
    2. '       ' → logprob: -6.002904891967773
    3. ' edges' → logprob: -7.877904891967773
    4. 'edge' → logprob: -10.377904891967773
    5. '(edges' → logprob: -12.502904891967773
    6. 'e' → logprob: -12.627904891967773
    7. '_edges' → logprob: -12.627904891967773
    8. '.edges' → logprob: -12.752904891967773
    9. '```' → logprob: -12.752904891967773
    10. '           ' → logprob: -14.377904891967773

Token 1025: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871323764324188
    2. '=' → logprob: -1.1371324062347412
    3. '=[]' → logprob: -8.26213264465332
    4. '=[]
' → logprob: -13.13713264465332
    5. '[]' → logprob: -15.51213264465332
    6. '<|end|>' → logprob: -15.88713264465332
    7. '[' → logprob: -16.01213264465332
    8. '=[' → logprob: -16.13713264465332
    9. '        ' → logprob: -16.26213264465332
    10. '=[]
' → logprob: -16.63713264465332

Token 1026: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038513731211423874
    2. '[]' → logprob: -3.288513660430908
    3. '[]
' → logprob: -9.038514137268066
    4. '[int' → logprob: -9.288514137268066
    5. ' [' → logprob: -10.038514137268066
    6. '[next' → logprob: -10.663514137268066
    7. '[str' → logprob: -11.038514137268066
    8. '[p' → logprob: -11.163514137268066
    9. '[n' → logprob: -11.163514137268066
    10. '[new' → logprob: -11.413514137268066

Token 1027: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08772149682044983
    2. 'for' → logprob: -2.712721586227417
    3. ' for' → logprob: -4.087721347808838
    4. '<|end|>' → logprob: -7.587721347808838
    5. '	for' → logprob: -8.712721824645996
    6. '   ' → logprob: -10.587721824645996
    7. '```' → logprob: -10.587721824645996
    8. '	   ' → logprob: -10.837721824645996
    9. '           ' → logprob: -10.837721824645996
    10. '<|end|>' → logprob: -10.837721824645996

Token 1028: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02083638496696949
    2. ' for' → logprob: -4.270836353302002
    3. '       ' → logprob: -5.020836353302002
    4. '	for' → logprob: -10.14583683013916
    5. '   ' → logprob: -11.39583683013916
    6. 'while' → logprob: -14.02083683013916
    7. '
' → logprob: -15.64583683013916
    8. '           ' → logprob: -16.020835876464844
    9. '	' → logprob: -16.520835876464844
    10. '	   ' → logprob: -17.270835876464844

Token 1029: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.8325677703833207e-05
    2. '_i' → logprob: -10.750028610229492
    3. ' _' → logprob: -12.375028610229492
    4. '_in' → logprob: -14.125028610229492
    5. '_range' → logprob: -15.750028610229492
    6. '_j' → logprob: -15.750028610229492
    7. '_count' → logprob: -15.875028610229492
    8. '_tokens' → logprob: -16.125028610229492
    9. '_token' → logprob: -16.250028610229492
    10. '_=' → logprob: -16.375028610229492

Token 1030: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0002993544621858746
    2. 'in' → logprob: -8.125299453735352
    3. '_' → logprob: -13.500299453735352
    4. ' ' → logprob: -13.875299453735352
    5. ' _' → logprob: -14.375299453735352
    6. 'i' → logprob: -15.125299453735352
    7. 'm' → logprob: -16.25029945373535
    8. 's' → logprob: -16.50029945373535
    9. '  ' → logprob: -16.75029945373535
    10. 'range' → logprob: -17.50029945373535

Token 1031: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.676292231422849e-05
    2. ' range' → logprob: -11.000017166137695
    3. '_' → logprob: -17.750017166137695
    4. 'm' → logprob: -20.000017166137695
    5. '_range' → logprob: -20.375017166137695
    6. '	range' → logprob: -20.500017166137695
    7. '   ' → logprob: -21.000017166137695
    8. '(range' → logprob: -21.750017166137695
    9. 'r' → logprob: -22.125017166137695
    10. ' ' → logprob: -22.250017166137695

Token 1032: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -9.865583706414327e-05
    2. '(m' → logprob: -9.62509822845459
    3. ' m' → logprob: -10.37509822845459
    4. '	m' → logprob: -13.75009822845459
    5. '   ' → logprob: -15.50009822845459
    6. ' (' → logprob: -17.000099182128906
    7. 'int' → logprob: -17.125099182128906
    8. ')m' → logprob: -17.375099182128906
    9. '(' → logprob: -17.500099182128906
    10. '0' → logprob: -17.750099182128906

Token 1033: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8870093822479248
    2. ':' → logprob: -1.5120093822479248
    3. '<|end|>' → logprob: -2.137009382247925
    4. '       ' → logprob: -2.512009382247925
    5. ':
' → logprob: -2.762009382247925
    6. '):' → logprob: -3.387009382247925
    7. '<|end|>' → logprob: -4.012009620666504
    8. '           ' → logprob: -4.262009620666504
    9. '():
' → logprob: -4.512009620666504
    10. ',' → logprob: -4.762009620666504

Token 1034: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02211879752576351
    2. 'line' → logprob: -4.52211856842041
    3. ' line' → logprob: -4.77211856842041
    4. '   ' → logprob: -7.52211856842041
    5. '	       ' → logprob: -7.52211856842041
    6. '	line' → logprob: -8.14711856842041
    7. '<|end|>' → logprob: -8.77211856842041
    8. '#line' → logprob: -8.89711856842041
    9. '```' → logprob: -8.89711856842041
    10. '		' → logprob: -9.14711856842041

Token 1035: ' u' (ID: 337)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.09645912051200867
    2. 'line' → logprob: -3.096459150314331
    3. 'e' → logprob: -3.596459150314331
    4. 'u' (adapté à ' u') → logprob: -4.971458911895752
    5. ' edge' → logprob: -5.471458911895752
    6. '           ' → logprob: -5.471458911895752
    7. 'l' → logprob: -6.596458911895752
    8. 'el' → logprob: -6.721458911895752
    9. 'edges' → logprob: -7.596458911895752
    10. ' line' → logprob: -8.22145938873291

Token 1036: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02072978764772415
    2. ',v' → logprob: -3.8957297801971436
    3. ' ,' → logprob: -8.770730018615723
    4. 'v' → logprob: -10.645730018615723
    5. ' v' → logprob: -12.395730018615723
    6. '=' → logprob: -13.145730018615723
    7. ',u' → logprob: -14.895730018615723
    8. ',n' → logprob: -15.520730018615723
    9. '_,' → logprob: -15.645730018615723
    10. ',line' → logprob: -15.645730018615723

Token 1037: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.018150296062231064
    2. ' v' → logprob: -4.018150329589844
    3. ',v' → logprob: -16.268150329589844
    4. '=' → logprob: -16.643150329589844
    5. '	v' → logprob: -16.768150329589844
    6. '=v' → logprob: -16.893150329589844
    7. ' ' → logprob: -17.018150329589844
    8. ' 
' → logprob: -17.143150329589844
    9. ' =' → logprob: -17.393150329589844
    10. '
' → logprob: -18.518150329589844

Token 1038: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694963812828064
    2. ' =' → logprob: -2.1269495487213135
    3. '=line' → logprob: -10.751949310302734
    4. '           ' → logprob: -17.376949310302734
    5. '=user' → logprob: -17.751949310302734
    6. ',' → logprob: -17.876949310302734
    7. '=
' → logprob: -18.001949310302734
    8. '=int' → logprob: -18.501949310302734
    9. '=input' → logprob: -18.751949310302734
    10. '＝' → logprob: -18.751949310302734

Token 1039: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.10020699352025986
    2. ' map' → logprob: -2.3502070903778076
    3. '           ' → logprob: -15.975207328796387
    4. '	map' → logprob: -16.47520637512207
    5. '    ' → logprob: -16.60020637512207
    6. 'm' → logprob: -17.85020637512207
    7. '            ' → logprob: -18.47520637512207
    8. '
' → logprob: -19.47520637512207
    9. '   ' → logprob: -20.10020637512207
    10. '        ' → logprob: -20.10020637512207

Token 1040: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004907185211777687
    2. 'int' → logprob: -7.625490665435791
    3. '=int' → logprob: -13.75049114227295
    4. '(str' → logprob: -13.87549114227295
    5. '[int' → logprob: -14.37549114227295
    6. '<int' → logprob: -17.375490188598633
    7. ' int' → logprob: -17.625490188598633
    8. '(
' → logprob: -17.875490188598633
    9. '(lambda' → logprob: -18.250490188598633
    10. ':int' → logprob: -18.250490188598633

Token 1041: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012608295073732734
    2. '(line' → logprob: -7.626260757446289
    3. '(int' → logprob: -8.001260757446289
    4. '           ' → logprob: -8.751260757446289
    5. ',line' → logprob: -9.126260757446289
    6. '   ' → logprob: -10.376260757446289
    7. '               ' → logprob: -10.626260757446289
    8. '                   ' → logprob: -10.876260757446289
    9. ',int' → logprob: -10.876260757446289
    10. ',input' → logprob: -11.126260757446289

Token 1042: ' next' (ID: 2613)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.01070808619260788
    2. 'lines' → logprob: -5.135707855224609
    3. 'next' → logprob: -6.385707855224609
    4. 'input' → logprob: -6.385707855224609
    5. ' line' → logprob: -6.760707855224609
    6. 'map' → logprob: -8.76070785522461
    7. 'int' → logprob: -10.51070785522461
    8. 'str' → logprob: -10.76070785522461
    9. ' lines' → logprob: -11.26070785522461
    10. '           ' → logprob: -11.76070785522461

Token 1043: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.005234832875430584
    2. 'lines' → logprob: -5.255234718322754
    3. ' lines' → logprob: -14.755234718322754
    4. '	lines' → logprob: -14.880234718322754
    5. '(edges' → logprob: -15.255234718322754
    6. 'edges' → logprob: -18.50523567199707
    7. '_lines' → logprob: -18.88023567199707
    8. '.lines' → logprob: -19.88023567199707
    9. '(line' → logprob: -19.88023567199707
    10. '-lines' → logprob: -20.00523567199707

Token 1044: ').' (ID: 741)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.12847532331943512
    2. ')' → logprob: -2.1284754276275635
    3. '()' → logprob: -7.628475189208984
    4. '())' → logprob: -7.878475189208984
    5. ').' → logprob: -8.628475189208984
    6. '))' → logprob: -8.628475189208984
    7. '       ' → logprob: -9.003475189208984
    8. '           ' → logprob: -9.878475189208984
    9. ')
' → logprob: -10.003475189208984
    10. '   ' → logprob: -10.378475189208984

Token 1045: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001246348983841017
    2. 'strip' → logprob: -9.00012493133545
    3. ' split' → logprob: -13.75012493133545
    4. '(split' → logprob: -16.125123977661133
    5. '.split' → logprob: -18.000123977661133
    6. 'rstrip' → logprob: -19.000123977661133
    7. '_split' → logprob: -20.875123977661133
    8. ' strip' → logprob: -22.250123977661133
    9. 'spl' → logprob: -23.125123977661133
    10. 'plit' → logprob: -23.375123977661133

Token 1046: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08109795302152634
    2. '())
' → logprob: -2.8310978412628174
    3. ')' → logprob: -4.3310980796813965
    4. '()' → logprob: -5.2060980796813965
    5. ')
' → logprob: -8.206097602844238
    6. '()
' → logprob: -11.081097602844238
    7. '(' → logprob: -11.456097602844238
    8. '())
' → logprob: -11.831097602844238
    9. ' ())' → logprob: -12.456097602844238
    10. '()))' → logprob: -14.831097602844238

Token 1047: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005137138650752604
    2. 'edges' → logprob: -8.875514030456543
    3. '       ' → logprob: -9.000514030456543
    4. '<|end|>' → logprob: -9.375514030456543
    5. ' edges' → logprob: -9.500514030456543
    6. '(edges' → logprob: -10.000514030456543
    7. '	       ' → logprob: -11.375514030456543
    8. '               ' → logprob: -11.625514030456543
    9. '<|end|>' → logprob: -12.125514030456543
    10. '   ' → logprob: -12.250514030456543

Token 1048: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.0002844576956704259
    2. '           ' → logprob: -8.375284194946289
    3. ' edges' → logprob: -9.875284194946289
    4. '       ' → logprob: -13.125284194946289
    5. '.edges' → logprob: -15.750284194946289
    6. '   ' → logprob: -16.12528419494629
    7. '(edges' → logprob: -16.50028419494629
    8. 'edge' → logprob: -17.25028419494629
    9. '_edges' → logprob: -17.62528419494629
    10. 'Edges' → logprob: -18.00028419494629

Token 1049: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.034592388459714e-06
    2. '.' → logprob: -12.250005722045898
    3. '.extend' → logprob: -14.250005722045898
    4. '.app' → logprob: -15.750005722045898
    5. '.push' → logprob: -16.3750057220459
    6. ').' → logprob: -16.6250057220459
    7. '.Append' → logprob: -16.8750057220459
    8. '.add' → logprob: -16.8750057220459
    9. 'append' → logprob: -16.8750057220459
    10. ' .' → logprob: -17.3750057220459

Token 1050: '((' (ID: 2054)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.5769001245498657
    2. '((' → logprob: -0.8269001245498657
    3. '(' → logprob: -6.951900005340576
    4. '(
' → logprob: -12.951900482177734
    5. ' (' → logprob: -14.826900482177734
    6. '   ' → logprob: -15.576900482177734
    7. '([' → logprob: -15.951900482177734
    8. '(ui' → logprob: -16.201900482177734
    9. '(U' → logprob: -17.076900482177734
    10. '[(' → logprob: -17.076900482177734

Token 1051: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -6.704273118884885e-07
    2. ' u' → logprob: -14.375000953674316
    3. '	u' → logprob: -18.75
    4. '   ' → logprob: -21.0
    5. '(u' → logprob: -21.0
    6. '_u' → logprob: -22.5
    7. '[u' → logprob: -23.5
    8. ''u' → logprob: -23.625
    9. '*u' → logprob: -23.875
    10. ',u' → logprob: -24.125

Token 1052: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009238460334017873
    2. ',v' → logprob: -7.0009236335754395
    3. ',u' → logprob: -12.250924110412598
    4. ' ,' → logprob: -12.500924110412598
    5. ',
' → logprob: -12.500924110412598
    6. '<|end|>' → logprob: -16.87592315673828
    7. 'v' → logprob: -17.50092315673828
    8. ',w' → logprob: -18.50092315673828
    9. ',user' → logprob: -18.50092315673828
    10. '
' → logprob: -18.75092315673828

Token 1053: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.512236498361744e-07
    2. ' v' → logprob: -14.500000953674316
    3. '	v' → logprob: -21.25
    4. ')v' → logprob: -21.375
    5. 'u' → logprob: -23.0
    6. '   ' → logprob: -23.5
    7. 'vq' → logprob: -24.125
    8. '    ' → logprob: -24.625
    9. '
' → logprob: -24.875
    10. '           ' → logprob: -25.0

Token 1054: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10066737234592438
    2. ')' → logprob: -2.3506674766540527
    3. '))
' → logprob: -7.725667476654053
    4. ')
' → logprob: -10.975666999816895
    5. '           ' → logprob: -13.975666999816895
    6. ')))' → logprob: -14.100666999816895
    7. '       ' → logprob: -15.100666999816895
    8. ' ))' → logprob: -15.850666999816895
    9. '   ' → logprob: -17.10066795349121
    10. '));' → logprob: -17.47566795349121

Token 1055: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014569011982530355
    2. 'result' → logprob: -6.7514567375183105
    3. '   ' → logprob: -9.126457214355469
    4. ' result' → logprob: -9.501457214355469
    5. 'output' → logprob: -10.501457214355469
    6. '<|end|>' → logprob: -10.751457214355469
    7. '```' → logprob: -10.876457214355469
    8. 'print' → logprob: -11.501457214355469
    9. 'response' → logprob: -11.876457214355469
    10. '           ' → logprob: -13.251457214355469

Token 1056: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05819976329803467
    2. '       ' → logprob: -3.308199882507324
    3. 'result' → logprob: -3.933199882507324
    4. ' print' → logprob: -8.558199882507324
    5. 'output' → logprob: -9.308199882507324
    6. 'answer' → logprob: -10.183199882507324
    7. ' result' → logprob: -10.933199882507324
    8. '   ' → logprob: -10.933199882507324
    9. 'res' → logprob: -11.558199882507324
    10. '	print' → logprob: -12.558199882507324

Token 1057: '(check' (ID: 40506)
  Prédit: '(check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(check' → logprob: -0.000506326905451715
    2. 'checker' → logprob: -8.000506401062012
    3. 'check' → logprob: -8.750506401062012
    4. '(' → logprob: -11.500506401062012
    5. ' checker' → logprob: -13.250506401062012
    6. ' check' → logprob: -15.750506401062012
    7. '(
' → logprob: -15.875506401062012
    8. '	check' → logprob: -15.875506401062012
    9. 'Checker' → logprob: -16.875505447387695
    10. '_checker' → logprob: -17.125505447387695

Token 1058: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: 0.0
    2. 'ker' → logprob: -18.875
    3. 'ER' → logprob: -21.375
    4. '   ' → logprob: -22.75
    5. '(check' → logprob: -23.25
    6. '_er' → logprob: -23.5
    7. 'checker' → logprob: -23.75
    8. 'cer' → logprob: -24.125
    9. 'ter' → logprob: -24.25
    10. 'er's' → logprob: -24.375

Token 1059: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -5.512236498361744e-07
    2. '.' → logprob: -14.625000953674316
    3. 'process' → logprob: -17.875
    4. ').' → logprob: -18.875
    5. '.Process' → logprob: -19.25
    6. ' .' → logprob: -19.75
    7. '.print' → logprob: -19.75
    8. '.proc' → logprob: -20.25
    9. '.run' → logprob: -20.5
    10. '.processing' → logprob: -20.75

Token 1060: '_dataset' (ID: 40568)
  Prédit: '_dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dataset' → logprob: -1.676292231422849e-05
    2. 'dataset' → logprob: -11.250017166137695
    3. 'Dataset' → logprob: -12.625017166137695
    4. 'ataset' → logprob: -15.500017166137695
    5. '_data' → logprob: -16.250017166137695
    6. '(dataset' → logprob: -16.375017166137695
    7. ' dataset' → logprob: -18.000017166137695
    8. 's' → logprob: -18.375017166137695
    9. ' Dataset' → logprob: -19.250017166137695
    10. '(n' → logprob: -20.000017166137695

Token 1061: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00016861737822182477
    2. ' (' → logprob: -9.375168800354004
    3. '(' → logprob: -9.750168800354004
    4. 'n' → logprob: -11.375168800354004
    5. ')' → logprob: -11.375168800354004
    6. ')(' → logprob: -14.125168800354004
    7. '(
' → logprob: -14.375168800354004
    8. '((' → logprob: -14.875168800354004
    9. '   ' → logprob: -15.375168800354004
    10. ' n' → logprob: -15.625168800354004

Token 1062: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035393505822867155
    2. ',m' → logprob: -8.000353813171387
    3. ' ,' → logprob: -11.000353813171387
    4. ',
' → logprob: -14.750353813171387
    5. ',n' → logprob: -15.125353813171387
    6. 'm' → logprob: -15.250353813171387
    7. ',v' → logprob: -15.500353813171387
    8. '<|end|>' → logprob: -15.875353813171387
    9. '   ' → logprob: -16.000354766845703
    10. ',u' → logprob: -16.500354766845703

Token 1063: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.2855416066013277e-05
    2. ' m' → logprob: -10.375032424926758
    3. 'edges' → logprob: -13.500032424926758
    4. '   ' → logprob: -16.625032424926758
    5. ' edges' → logprob: -17.375032424926758
    6. '	m' → logprob: -18.500032424926758
    7. '```' → logprob: -18.875032424926758
    8. ' ' → logprob: -19.125032424926758
    9. '  ' → logprob: -19.375032424926758
    10. '
' → logprob: -19.625032424926758

Token 1064: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.584239938296378e-06
    2. ' ,' → logprob: -12.625007629394531
    3. '(edges' → logprob: -13.125007629394531
    4. 'edges' → logprob: -13.250007629394531
    5. ',
' → logprob: -15.125007629394531
    6. 'Edges' → logprob: -16.12500762939453
    7. '_edges' → logprob: -17.50000762939453
    8. ' edges' → logprob: -17.50000762939453
    9. '   ' → logprob: -17.75000762939453
    10. ',exports' → logprob: -18.12500762939453

Token 1065: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -3.547789674485102e-05
    2. ' edges' → logprob: -10.250035285949707
    3. '   ' → logprob: -19.500036239624023
    4. '(edges' → logprob: -20.000036239624023
    5. '.edges' → logprob: -20.875036239624023
    6. '       ' → logprob: -21.375036239624023
    7. 'edge' → logprob: -22.250036239624023
    8. 'Edges' → logprob: -22.375036239624023
    9. '           ' → logprob: -22.500036239624023
    10. '_edges' → logprob: -22.875036239624023

Token 1066: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023273780941963196
    2. '))' → logprob: -3.7732737064361572
    3. '())' → logprob: -10.523273468017578
    4. ')))' → logprob: -14.523273468017578
    5. '()' → logprob: -15.023273468017578
    6. ')")' → logprob: -15.648273468017578
    7. ' )' → logprob: -15.773273468017578
    8. '})' → logprob: -15.898273468017578
    9. ')`' → logprob: -15.898273468017578
    10. '])' → logprob: -16.898273468017578

Token 1067: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009069492109119892
    2. '```' → logprob: -5.009069442749023
    3. '<|end|>' → logprob: -6.634069442749023
    4. ' if' → logprob: -7.509069442749023
    5. '
' → logprob: -8.134069442749023
    6. '#' → logprob: -9.009069442749023
    7. '__' → logprob: -10.759069442749023
    8. '\' → logprob: -11.259069442749023
    9. '@if' → logprob: -11.384069442749023
    10. '``' → logprob: -12.134069442749023

Token 1068: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0031804447062313557
    2. ' __' → logprob: -5.753180503845215
    3. 'if' → logprob: -14.003180503845215
    4. 'name' → logprob: -14.128180503845215
    5. 'True' → logprob: -14.753180503845215
    6. '/__' → logprob: -15.628180503845215
    7. '___' → logprob: -15.753180503845215
    8. '.__' → logprob: -16.3781795501709
    9. '```' → logprob: -16.5031795501709
    10. 'python' → logprob: -16.5031795501709

Token 1069: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7816337943077087
    2. ' ==' → logprob: -0.7816337943077087
    3. '==' → logprob: -2.7816338539123535
    4. '.__' → logprob: -4.6566338539123535
    5. '=="' → logprob: -5.0316338539123535
    6. 'name' → logprob: -5.5316338539123535
    7. ' __' → logprob: -7.1566338539123535
    8. '.name' → logprob: -7.5316338539123535
    9. '__.__' → logprob: -8.406633377075195
    10. '.' → logprob: -8.531633377075195

Token 1070: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.016809023916721344
    2. '==' → logprob: -4.516808986663818
    3. '=="' → logprob: -5.391808986663818
    4. ' ==' → logprob: -7.266808986663818
    5. '__.__' → logprob: -7.766808986663818
    6. '=='' → logprob: -11.141809463500977
    7. '__["' → logprob: -11.141809463500977
    8. '__":
' → logprob: -11.391809463500977
    9. '```' → logprob: -11.766809463500977
    10. '__
' → logprob: -12.766809463500977

Token 1071: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.39119353890419006
    2. ' ==' → logprob: -1.7661935091018677
    3. '=="' → logprob: -2.0161936283111572
    4. '__' → logprob: -4.141193389892578
    5. '=='' → logprob: -5.891193389892578
    6. '.__' → logprob: -7.766193389892578
    7. '==
' → logprob: -8.766193389892578
    8. '```' → logprob: -8.766193389892578
    9. '[' → logprob: -9.766193389892578
    10. '__.__' → logprob: -10.016193389892578

Token 1072: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06197664886713028
    2. ''' → logprob: -2.811976671218872
    3. '__' → logprob: -11.686976432800293
    4. ' "__' → logprob: -14.686976432800293
    5. '"user' → logprob: -16.81197738647461
    6. ''m' → logprob: -17.18697738647461
    7. ' '__' → logprob: -17.68697738647461
    8. '"name' → logprob: -17.68697738647461
    9. '"default' → logprob: -18.06197738647461
    10. '   ' → logprob: -18.06197738647461

Token 1073: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.8908587662735954e-05
    2. 'name' → logprob: -11.375019073486328
    3. '__' → logprob: -11.875019073486328
    4. 'built' → logprob: -15.625019073486328
    5. ' main' → logprob: -16.875019073486328
    6. 'python' → logprob: -17.000019073486328
    7. '__":
' → logprob: -17.125019073486328
    8. 'builtin' → logprob: -18.000019073486328
    9. '"' → logprob: -18.375019073486328
    10. '	main' → logprob: -18.625019073486328

Token 1074: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10285753011703491
    2. '__' → logprob: -2.3528575897216797
    3. '__':
' → logprob: -6.47785758972168
    4. '__.' → logprob: -7.60285758972168
    5. '__.__' → logprob: -7.85285758972168
    6. '__["' → logprob: -9.85285758972168
    7. '__
' → logprob: -10.10285758972168
    8. '.' → logprob: -10.22785758972168
    9. '.__' → logprob: -10.22785758972168
    10. '__()
' → logprob: -11.10285758972168

Token 1075: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0009623158257454634
    2. '	main' → logprob: -7.375962257385254
    3. '   ' → logprob: -8.500962257385254
    4. ' main' → logprob: -9.000962257385254
    5. '_main' → logprob: -11.875962257385254
    6. '(main' → logprob: -14.125962257385254
    7. '    
' → logprob: -14.875962257385254
    8. 'import' → logprob: -14.875962257385254
    9. '.main' → logprob: -15.125962257385254
    10. '```' → logprob: -15.500962257385254

Token 1076: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.5
    3. 'import' → logprob: -18.5
    4. '   ' → logprob: -20.0
    5. '	main' → logprob: -20.75
    6. '.main' → logprob: -24.375
    7. '(main' → logprob: -25.5
    8. '_main' → logprob: -25.875
    9. 'Main' → logprob: -27.375
    10. '```' → logprob: -27.75

Token 1077: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1075
Tokens correctement prédits (1ère position, stricte): 430
Tokens correctement prédits (1ère position, avec adaptation): 482
Tokens correctement prédits (top 10): 846
Précision stricte (1ère position): 40.00%
Précision adaptée (1ère position): 44.84%
Précision (top 10): 78.70%
================================================================================
