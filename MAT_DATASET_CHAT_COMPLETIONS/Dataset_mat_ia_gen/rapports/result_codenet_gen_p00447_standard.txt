================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:13:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    m = int(input())
    if m == 0:
        break
    constellation = [tuple(map(int, input().split())) for _ in range(m)]
    n = int(input())
    photo = [tuple(map(int, input().split())) for _ in range(n)]
    constellation_set = set(constellation)
    base_cx, base_cy = constellation[0]
    c_vectors = [(x - base_cx, y - base_cy) for x, y in constellation]
    photo_dict = {p: True for p in photo}
    for px, py in photo:
        dx, dy = px - base_cx, py - base_cy
        if all((dx + vx, dy + vy) in photo_dict for vx, vy in c_vectors):
            print(dx, dy)
            break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5957265496253967
    2. '\' → logprob: -2.220726490020752
    3. ' ' → logprob: -2.470726490020752
    4. '```' → logprob: -2.845726490020752
    5. '    ' → logprob: -2.970726490020752
    6. '    
' → logprob: -3.220726490020752
    7. '\n' → logprob: -3.720726490020752
    8. ' 
' → logprob: -3.845726490020752
    9. '<|end|>' → logprob: -3.970726490020752
    10. '  
' → logprob: -5.095726490020752

Token 4: ' m' (ID: 284)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '       ' → logprob: -6.386067867279053
    7. '  ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3836073875427246
    2. 'essage' → logprob: -1.6336073875427246
    3. '   ' → logprob: -1.8836073875427246
    4. '=' → logprob: -2.2586073875427246
    5. 'y' → logprob: -2.6336073875427246
    6. 'e' → logprob: -2.8836073875427246
    7. ' =' → logprob: -2.8836073875427246
    8. ' ' → logprob: -3.5086073875427246
    9. 'i' → logprob: -3.8836073875427246
    10. ':' → logprob: -4.633607387542725

Token 6: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.33938509225845337
    2. 'input' → logprob: -1.8393850326538086
    3. ' int' → logprob: -2.2143850326538086
    4. 'int' → logprob: -4.464385032653809
    5. ' m' → logprob: -6.089385032653809
    6. 'm' → logprob: -6.964385032653809
    7. 's' → logprob: -7.089385032653809
    8. ' s' → logprob: -7.089385032653809
    9. ' f' → logprob: -7.714385032653809
    10. 'n' → logprob: -8.214385032653809

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759655237197876
    2. '(input' → logprob: -0.8259655237197876
    3. 'input' → logprob: -11.700965881347656
    4. '(
' → logprob: -11.825965881347656
    5. ' (' → logprob: -12.950965881347656
    6. '('' → logprob: -13.575965881347656
    7. '(m' → logprob: -13.700965881347656
    8. '()' → logprob: -14.200965881347656
    9. '(i' → logprob: -14.575965881347656
    10. '(in' → logprob: -14.575965881347656

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.634296178817749
    2. ')' → logprob: -0.884296178817749
    3. '()' → logprob: -3.384296178817749
    4. '())' → logprob: -4.634296417236328
    5. '))' → logprob: -5.009296417236328
    6. '('' → logprob: -6.384296417236328
    7. '(
' → logprob: -6.634296417236328
    8. ' ' → logprob: -7.384296417236328
    9. '```' → logprob: -7.634296417236328
    10. '(""))' → logprob: -8.259296417236328

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8260172009468079
    2. ')' → logprob: -1.951017141342163
    3. '   ' → logprob: -1.951017141342163
    4. ' if' → logprob: -2.451017141342163
    5. '  ' → logprob: -2.576017141342163
    6. '<|end|>' → logprob: -3.201017141342163
    7. '    ' → logprob: -3.826017141342163
    8. ':' → logprob: -3.951017141342163
    9. 'if' → logprob: -4.576017379760742
    10. ' ==' → logprob: -6.076017379760742

Token 10: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1320141553878784
    2. ' if' → logprob: -1.2570141553878784
    3. '<|end|>' → logprob: -1.3820141553878784
    4. '   ' → logprob: -2.757014274597168
    5. ')' → logprob: -4.007014274597168
    6. '    ' → logprob: -4.507014274597168
    7. '  ' → logprob: -4.507014274597168
    8. 'if' (adapté à ' if') → logprob: -4.757014274597168
    9. '+' → logprob: -5.382014274597168
    10. ':' → logprob: -5.507014274597168

Token 11: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.0057096583768725395
    2. ' ' → logprob: -5.505709648132324
    3. 'm' → logprob: -6.505709648132324
    4. ' not' → logprob: -9.005709648132324
    5. '  ' → logprob: -12.130709648132324
    6. ' ' → logprob: -13.380709648132324
    7. '<|end|>' → logprob: -14.130709648132324
    8. ' (' → logprob: -14.130709648132324
    9. 'not' → logprob: -14.380709648132324
    10. '(m' → logprob: -14.880709648132324

Token 12: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6771476864814758
    2. ' <' → logprob: -1.427147626876831
    3. ' >=' → logprob: -2.552147626876831
    4. ' ==' → logprob: -2.677147626876831
    5. ' <=' → logprob: -3.177147626876831
    6. ' ' → logprob: -3.302147626876831
    7. '>' → logprob: -4.30214786529541
    8. '<' → logprob: -5.42714786529541
    9. '==' → logprob: -5.80214786529541
    10. '  ' → logprob: -6.17714786529541

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3135848939418793
    2. '0' → logprob: -1.3135849237442017
    3. '100' → logprob: -9.31358528137207
    4. '32' → logprob: -9.56358528137207
    5. '10' → logprob: -10.18858528137207
    6. '1' → logprob: -10.31358528137207
    7. ' ' → logprob: -10.93858528137207
    8. '20' → logprob: -11.18858528137207
    9. '40' → logprob: -12.18858528137207
    10. '42' → logprob: -12.43858528137207

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012975986115634441
    2. ' ' → logprob: -4.387976169586182
    3. '-' → logprob: -9.012975692749023
    4. '100' → logprob: -9.012975692749023
    5. '42' → logprob: -9.762975692749023
    6. '1' → logprob: -10.137975692749023
    7. ' -' → logprob: -10.512975692749023
    8. '999' → logprob: -11.137975692749023
    9. '10' → logprob: -11.387975692749023
    10. '7' → logprob: -11.512975692749023

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006164124351926148
    2. '       ' → logprob: -8.250616073608398
    3. ':
' → logprob: -8.625616073608398
    4. '   ' → logprob: -9.250616073608398
    5. ' :' → logprob: -9.875616073608398
    6. '    ' → logprob: -11.125616073608398
    7. ':\' → logprob: -12.625616073608398
    8. ':return' → logprob: -12.750616073608398
    9. '      ' → logprob: -13.625616073608398
    10. '):' → logprob: -13.750616073608398

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034237781073898077
    2. '   ' → logprob: -5.878423690795898
    3. ' break' → logprob: -7.753423690795898
    4. '	break' → logprob: -9.378423690795898
    5. '\t' → logprob: -11.128423690795898
    6. '<|end|>' → logprob: -11.378423690795898
    7. ' ' → logprob: -11.503423690795898
    8. '     ' → logprob: -11.628423690795898
    9. '      ' → logprob: -11.753423690795898
    10. '\n' → logprob: -11.878423690795898

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.10198554396629333
    2. '       ' → logprob: -2.476985454559326
    3. 'break' (adapté à ' break') → logprob: -4.476985454559326
    4. '   ' → logprob: -7.101985454559326
    5. '\n' → logprob: -7.976985454559326
    6. '	break' → logprob: -8.351985931396484
    7. '```' → logprob: -9.226985931396484
    8. '_break' → logprob: -10.851985931396484
    9. ' ' → logprob: -11.476985931396484
    10. '        
' → logprob: -11.601985931396484

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049715474247932434
    2. '    
' → logprob: -4.174715518951416
    3. '<|end|>' → logprob: -4.174715518951416
    4. '\n' → logprob: -5.299715518951416
    5. '
' → logprob: -5.549715518951416
    6. '```' → logprob: -5.674715518951416
    7. '\' → logprob: -6.799715518951416
    8. '  
' → logprob: -7.049715518951416
    9. ' 
' → logprob: -7.424715518951416
    10. ')' → logprob: -7.674715518951416

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04289470240473747
    2. '<|end|>' → logprob: -4.1678948402404785
    3. ':' → logprob: -4.6678948402404785
    4. '```' → logprob: -5.5428948402404785
    5. ')' → logprob: -6.1678948402404785
    6. '#' → logprob: -6.1678948402404785
    7. 'n' → logprob: -6.1678948402404785
    8. ' ' → logprob: -6.6678948402404785
    9. '    
' → logprob: -6.7928948402404785
    10. '\n' → logprob: -7.4178948402404785

Token 20: ' constellation' (ID: 172994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005033321212977171
    2. 'n' → logprob: -6.005033493041992
    3. '```' → logprob: -6.880033493041992
    4. ' ' → logprob: -8.255033493041992
    5. '    ' → logprob: -8.380033493041992
    6. '    
' → logprob: -8.630033493041992
    7. '       ' → logprob: -8.755033493041992
    8. '\' → logprob: -9.005033493041992
    9. ')' → logprob: -9.255033493041992
    10. '\n' → logprob: -9.505033493041992

Token 21: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7344381213188171
    2. ' =' → logprob: -0.9844381213188171
    3. '=' → logprob: -2.984438180923462
    4. '_name' → logprob: -2.984438180923462
    5. '_' → logprob: -3.609438180923462
    6. '[' → logprob: -4.484437942504883
    7. '.' → logprob: -6.484437942504883
    8. '.append' → logprob: -6.734437942504883
    9. ' ' → logprob: -7.109437942504883
    10. '_count' → logprob: -7.734437942504883

Token 22: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.21979212760925293
    2. ' input' → logprob: -1.969792127609253
    3. 'input' → logprob: -4.094792366027832
    4. ' {}' → logprob: -4.219792366027832
    5. '[]' → logprob: -4.469792366027832
    6. ' set' → logprob: -4.969792366027832
    7. '{}' → logprob: -6.344792366027832
    8. ' [' → logprob: -6.594792366027832
    9. ' "' → logprob: -6.844792366027832
    10. ' ' → logprob: -6.844792366027832

Token 23: 'tuple' (ID: 52834)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7539779543876648
    2. 'list' → logprob: -1.1289780139923096
    3. ']' → logprob: -2.5039780139923096
    4. '[' → logprob: -3.0039780139923096
    5. '   ' → logprob: -3.1289780139923096
    6. '0' → logprob: -4.7539777755737305
    7. ' []' → logprob: -5.1289777755737305
    8. ' list' → logprob: -5.3789777755737305
    9. '[int' → logprob: -5.3789777755737305
    10. 'int' → logprob: -5.7539777755737305

Token 24: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.004925377666950226
    2. '(int' → logprob: -5.62992525100708
    3. '(input' → logprob: -6.87992525100708
    4. '(' → logprob: -8.254925727844238
    5. 'map' → logprob: -10.379925727844238
    6. ' map' → logprob: -13.004925727844238
    7. '(
' → logprob: -14.254925727844238
    8. '(i' → logprob: -14.879925727844238
    9. '(m' → logprob: -14.879925727844238
    10. 'input' → logprob: -15.129925727844238

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003036457928828895
    2. '(' → logprob: -8.250303268432617
    3. 'int' → logprob: -11.000303268432617
    4. '(input' → logprob: -11.375303268432617
    5. '<int' → logprob: -12.125303268432617
    6. '(str' → logprob: -12.500303268432617
    7. ',int' → logprob: -13.625303268432617
    8. '(
' → logprob: -13.875303268432617
    9. ' int' → logprob: -13.875303268432617
    10. '(lambda' → logprob: -15.125303268432617

Token 26: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0018760397797450423
    2. '(' → logprob: -6.751875877380371
    3. 'input' → logprob: -7.751875877380371
    4. ',input' → logprob: -8.376875877380371
    5. ')' → logprob: -10.626875877380371
    6. ' (' → logprob: -12.251875877380371
    7. ' input' → logprob: -12.251875877380371
    8. ',' → logprob: -12.626875877380371
    9. '(
' → logprob: -12.751875877380371
    10. '=input' → logprob: -13.001875877380371

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759763121604919
    2. ' input' → logprob: -0.8259763121604919
    3. ')' → logprob: -11.325976371765137
    4. '(input' → logprob: -11.325976371765137
    5. ',input' → logprob: -12.450976371765137
    6. '	input' → logprob: -13.325976371765137
    7. '=input' → logprob: -13.325976371765137
    8. '[input' → logprob: -13.950976371765137
    9. ' )' → logprob: -14.075976371765137
    10. '   ' → logprob: -14.200976371765137

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1756367712223437e-05
    2. '()' → logprob: -11.500011444091797
    3. ' ().' → logprob: -13.875011444091797
    4. '()
' → logprob: -14.375011444091797
    5. '()))' → logprob: -17.125011444091797
    6. '(' → logprob: -18.125011444091797
    7. '   ' → logprob: -18.125011444091797
    8. '.split' → logprob: -18.250011444091797
    9. ' ' → logprob: -18.375011444091797
    10. '())' → logprob: -18.500011444091797

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.44443862256594e-05
    2. 'strip' → logprob: -9.750064849853516
    3. 'rstrip' → logprob: -12.625064849853516
    4. ' split' → logprob: -13.125064849853516
    5. '(split' → logprob: -14.125064849853516
    6. '.split' → logprob: -17.125064849853516
    7. 'spl' → logprob: -17.375064849853516
    8. 's' → logprob: -18.375064849853516
    9. '().' → logprob: -18.625064849853516
    10. ')' → logprob: -18.750064849853516

Token 30: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0018637838074937463
    2. '))' → logprob: -7.126863956451416
    3. '())' → logprob: -7.751863956451416
    4. '()' → logprob: -8.001863479614258
    5. '()))
' → logprob: -8.501863479614258
    6. '())))' → logprob: -10.126863479614258
    7. '('' → logprob: -10.876863479614258
    8. '(' → logprob: -11.251863479614258
    9. '(','' → logprob: -13.001863479614258
    10. ''))' → logprob: -13.126863479614258

Token 31: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0677127093076706
    2. ')]' → logprob: -2.8177127838134766
    3. '   ' → logprob: -5.817712783813477
    4. ']' → logprob: -6.817712783813477
    5. '()' → logprob: -7.067712783813477
    6. ' for' → logprob: -8.192712783813477
    7. ')
' → logprob: -9.067712783813477
    8. 'for' → logprob: -9.317712783813477
    9. '),' → logprob: -9.567712783813477
    10. '())' → logprob: -9.692712783813477

Token 32: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0012120219180360436
    2. ' _' → logprob: -7.376212120056152
    3. '_' → logprob: -7.751212120056152
    4. '_range' → logprob: -9.376212120056152
    5. 'range' → logprob: -10.001212120056152
    6. ' ' → logprob: -11.501212120056152
    7. ' i' → logprob: -11.751212120056152
    8. ' xrange' → logprob: -12.626212120056152
    9. '(range' → logprob: -13.501212120056152
    10. '	range' → logprob: -14.126212120056152

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18441669642925262
    2. 'in' → logprob: -2.4344167709350586
    3. 'range' → logprob: -2.5594167709350586
    4. ' range' → logprob: -6.059416770935059
    5. ' ' → logprob: -7.309416770935059
    6. '<|end|>' → logprob: -9.309416770935059
    7. '(' → logprob: -9.434416770935059
    8. '(range' → logprob: -9.809416770935059
    9. '	range' → logprob: -10.184416770935059
    10. ' xrange' → logprob: -10.559416770935059

Token 34: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00688290735706687
    2. ' range' → logprob: -5.006883144378662
    3. '[' → logprob: -8.881882667541504
    4. '(range' → logprob: -11.506882667541504
    5. ' ' → logprob: -12.756882667541504
    6. '	range' → logprob: -12.756882667541504
    7. '   ' → logprob: -13.381882667541504
    8. '`' → logprob: -13.506882667541504
    9. '```' → logprob: -13.631882667541504
    10. 'm' → logprob: -13.756882667541504

Token 35: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0059457444585859776
    2. '(' → logprob: -5.130945682525635
    3. '(n' → logprob: -11.880946159362793
    4. ' (' → logprob: -12.005946159362793
    5. '(s' → logprob: -14.130946159362793
    6. '(M' → logprob: -14.255946159362793
    7. ' m' → logprob: -14.255946159362793
    8. '(k' → logprob: -14.380946159362793
    9. '(len' → logprob: -14.755946159362793
    10. 'm' → logprob: -14.880946159362793

Token 36: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.542423165636137e-05
    2. ')' → logprob: -9.875085830688477
    3. ']' → logprob: -10.625085830688477
    4. ')])' → logprob: -12.875085830688477
    5. '])]' → logprob: -13.000085830688477
    6. '))' → logprob: -13.500085830688477
    7. ')]
' → logprob: -13.875085830688477
    8. ' )' → logprob: -14.625085830688477
    9. '   ' → logprob: -14.875085830688477
    10. '])' → logprob: -15.000085830688477

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07898132503032684
    2. '
' → logprob: -2.828981399536133
    3. '    
' → logprob: -4.828981399536133
    4. 'n' → logprob: -5.578981399536133
    5. 'distance' → logprob: -7.328981399536133
    6. '    ' → logprob: -7.578981399536133
    7. '<|end|>' → logprob: -7.578981399536133
    8. '  
' → logprob: -8.078981399536133
    9. 's' → logprob: -8.328981399536133
    10. ')' → logprob: -8.328981399536133

Token 38: ' n' (ID: 297)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9214609265327454
    2. 'dist' → logprob: -1.2964608669281006
    3. '   ' → logprob: -2.1714608669281006
    4. 'n' (adapté à ' n') → logprob: -3.1714608669281006
    5. 'dp' → logprob: -3.1714608669281006
    6. 'distance' → logprob: -4.04646110534668
    7. 'import' → logprob: -4.17146110534668
    8. 'graph' → logprob: -4.54646110534668
    9. 'mst' → logprob: -4.67146110534668
    10. 'max' → logprob: -4.79646110534668

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01650865562260151
    2. '=' → logprob: -4.14150857925415
    3. '   ' → logprob: -8.891509056091309
    4. '    ' → logprob: -9.141509056091309
    5. ' ' → logprob: -9.266509056091309
    6. 'um' → logprob: -10.516509056091309
    7. '_' → logprob: -10.891509056091309
    8. 'ext' → logprob: -11.141509056091309
    9. '  ' → logprob: -11.266509056091309
    10. 'et' → logprob: -11.266509056091309

Token 40: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07891678065061569
    2. 'int' → logprob: -2.5789167881011963
    3. '   ' → logprob: -12.078916549682617
    4. '=int' → logprob: -12.328916549682617
    5. '<int' → logprob: -13.078916549682617
    6. '[int' → logprob: -13.203916549682617
    7. ' m' → logprob: -13.203916549682617
    8. ' ' → logprob: -13.203916549682617
    9. ' len' → logprob: -13.453916549682617
    10. '	int' → logprob: -13.578916549682617

Token 41: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0008559550042264163
    2. '(' → logprob: -7.125855922698975
    3. '()' → logprob: -10.125856399536133
    4. ' (' → logprob: -12.000856399536133
    5. 'input' → logprob: -12.750856399536133
    6. '=input' → logprob: -13.250856399536133
    7. ' input' → logprob: -15.500856399536133
    8. '(
' → logprob: -16.000856399536133
    9. ' ()' → logprob: -16.250856399536133
    10. ',input' → logprob: -16.250856399536133

Token 42: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06472882628440857
    2. '()' → logprob: -2.8147287368774414
    3. ')' → logprob: -5.939728736877441
    4. '()
' → logprob: -9.564728736877441
    5. '())
' → logprob: -10.439728736877441
    6. '();)' → logprob: -11.564728736877441
    7. ' ())' → logprob: -11.689728736877441
    8. '()]' → logprob: -13.064728736877441
    9. '(' → logprob: -14.064728736877441
    10. ' )' → logprob: -14.564728736877441

Token 43: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' photo' (ID: 8767)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -2.226767063140869
    2. 'points' → logprob: -2.226767063140869
    3. 'for' → logprob: -2.476767063140869
    4. ' for' → logprob: -2.476767063140869
    5. 'stars' → logprob: -2.476767063140869
    6. 's' → logprob: -2.601767063140869
    7. '   ' → logprob: -2.601767063140869
    8. ' constellation' → logprob: -2.726767063140869
    9. 'distance' → logprob: -3.476767063140869
    10. '    ' → logprob: -3.601767063140869

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3136415183544159
    2. '=' → logprob: -2.1886415481567383
    3. '_points' → logprob: -2.3136415481567383
    4. 's' → logprob: -3.0636415481567383
    5. '_' → logprob: -4.813641548156738
    6. '_positions' → logprob: -7.188641548156738
    7. '_coords' → logprob: -7.188641548156738
    8. '_coordinates' → logprob: -7.813641548156738
    9. 'Points' → logprob: -8.313641548156738
    10. 'points' → logprob: -8.563641548156738

Token 46: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0022568334825336933
    2. ' [' → logprob: -6.252256870269775
    3. '[int' → logprob: -8.627256393432617
    4. '[list' → logprob: -9.877256393432617
    5. '[t' → logprob: -10.502256393432617
    6. '[]' → logprob: -11.377256393432617
    7. '[input' → logprob: -11.752256393432617
    8. '[token' → logprob: -12.127256393432617
    9. '[str' → logprob: -12.377256393432617
    10. '[tmp' → logprob: -12.627256393432617

Token 47: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.004961204715073109
    2. 'list' → logprob: -5.504961013793945
    3. ' tuple' → logprob: -7.879961013793945
    4. 'input' → logprob: -8.004961013793945
    5. '(tuple' → logprob: -9.879961013793945
    6. 'int' → logprob: -9.879961013793945
    7. '[' → logprob: -10.004961013793945
    8. 'map' → logprob: -12.379961013793945
    9. '[int' → logprob: -12.629961013793945
    10. '[list' → logprob: -12.754961013793945

Token 48: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.339278580620885e-06
    2. '(int' → logprob: -13.875001907348633
    3. 'map' → logprob: -13.875001907348633
    4. '(' → logprob: -15.875001907348633
    5. ',map' → logprob: -16.375001907348633
    6. ' (' → logprob: -16.625001907348633
    7. ' map' → logprob: -17.125001907348633
    8. '	map' → logprob: -18.125001907348633
    9. '.map' → logprob: -18.875001907348633
    10. 'int' → logprob: -19.250001907348633

Token 49: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.869639476761222e-05
    2. '<int' → logprob: -11.000039100646973
    3. '=int' → logprob: -11.125039100646973
    4. '[int' → logprob: -12.625039100646973
    5. 'int' → logprob: -13.250039100646973
    6. ',int' → logprob: -13.625039100646973
    7. ']int' → logprob: -15.000039100646973
    8. '(' → logprob: -15.375039100646973
    9. ' int' → logprob: -15.375039100646973
    10. ' (' → logprob: -15.875039100646973

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38861283659935
    2. ',int' → logprob: -1.1386128664016724
    3. '(int' → logprob: -6.513612747192383
    4. ',input' → logprob: -9.013612747192383
    5. ' ,' → logprob: -9.763612747192383
    6. 'int' → logprob: -9.888612747192383
    7. '<int' → logprob: -11.388612747192383
    8. '[int' → logprob: -11.763612747192383
    9. '=int' → logprob: -13.138612747192383
    10. '(' → logprob: -13.138612747192383

Token 51: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3076264560222626
    2. 'int' → logprob: -1.807626485824585
    3. ' input' → logprob: -2.307626485824585
    4. ' int' → logprob: -6.682626247406006
    5. '(input' → logprob: -11.932626724243164
    6. '<int' → logprob: -12.557626724243164
    7. '(int' → logprob: -13.057626724243164
    8. '[int' → logprob: -14.057626724243164
    9. '<input' → logprob: -14.057626724243164
    10. '=input' → logprob: -14.307626724243164

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5048530030981055e-06
    2. '()' → logprob: -13.875001907348633
    3. '.' → logprob: -15.000001907348633
    4. ' ().' → logprob: -15.750001907348633
    5. '()).' → logprob: -17.125001907348633
    6. ').' → logprob: -17.500001907348633
    7. '.split' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.875001907348633
    9. '()
' → logprob: -19.125001907348633
    10. ' .' → logprob: -19.250001907348633

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.981667537620524e-06
    2. ' split' → logprob: -13.750001907348633
    3. 'strip' → logprob: -14.250001907348633
    4. '(split' → logprob: -16.000001907348633
    5. 'spl' → logprob: -16.625001907348633
    6. '```' → logprob: -17.625001907348633
    7. '   ' → logprob: -18.250001907348633
    8. 'plit' → logprob: -18.625001907348633
    9. 'rstrip' → logprob: -18.750001907348633
    10. '.split' → logprob: -18.875001907348633

Token 54: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0004813161212950945
    2. '())' → logprob: -8.250481605529785
    3. '()' → logprob: -8.750481605529785
    4. '))' → logprob: -10.500481605529785
    5. '()))
' → logprob: -10.500481605529785
    6. '(' → logprob: -13.500481605529785
    7. '()
' → logprob: -13.625481605529785
    8. '())).' → logprob: -14.000481605529785
    9. '()));' → logprob: -14.500481605529785
    10. '())
' → logprob: -14.625481605529785

Token 55: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24075686931610107
    2. '()' → logprob: -1.615756869316101
    3. 'for' → logprob: -4.490756988525391
    4. '())' → logprob: -5.865756988525391
    5. ' for' → logprob: -6.865756988525391
    6. '   ' → logprob: -9.61575698852539
    7. ')]' → logprob: -10.74075698852539
    8. ' ()' → logprob: -11.61575698852539
    9. '(' → logprob: -11.74075698852539
    10. '	for' → logprob: -11.86575698852539

Token 56: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.18367630243301392
    2. '_' → logprob: -1.9336762428283691
    3. ' range' → logprob: -3.808676242828369
    4. ' in' → logprob: -7.808676242828369
    5. ' n' → logprob: -8.183676719665527
    6. '_range' → logprob: -8.933676719665527
    7. '_n' → logprob: -8.933676719665527
    8. 'range' → logprob: -10.183676719665527
    9. '_in' → logprob: -12.183676719665527
    10. ' ' → logprob: -12.933676719665527

Token 57: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20979277789592743
    2. ' range' → logprob: -1.7097927331924438
    3. '(n' → logprob: -5.709792613983154
    4. 'n' → logprob: -5.834792613983154
    5. '(range' → logprob: -6.709792613983154
    6. '_' → logprob: -7.959792613983154
    7. ' in' → logprob: -8.459793090820312
    8. ' n' → logprob: -8.834793090820312
    9. '(' → logprob: -9.709793090820312
    10. '_range' → logprob: -9.834793090820312

Token 58: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07892283797264099
    2. 'range' → logprob: -2.578922748565674
    3. '(range' → logprob: -10.328923225402832
    4. '(n' → logprob: -15.203923225402832
    5. '(' → logprob: -16.328922271728516
    6. 'n' → logprob: -17.453922271728516
    7. ' n' → logprob: -17.453922271728516
    8. '	range' → logprob: -17.453922271728516
    9. ' (' → logprob: -18.453922271728516
    10. '_range' → logprob: -18.703922271728516

Token 59: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00011534435179783031
    2. 'n' → logprob: -9.500115394592285
    3. '(' → logprob: -10.250115394592285
    4. ' (' → logprob: -12.750115394592285
    5. ' n' → logprob: -13.125115394592285
    6. ')' → logprob: -16.37511444091797
    7. ')n' → logprob: -16.50011444091797
    8. '   ' → logprob: -17.62511444091797
    9. '	n' → logprob: -18.37511444091797
    10. ',n' → logprob: -18.87511444091797

Token 60: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0009935104753822088
    2. ')' → logprob: -7.250993728637695
    3. ']' → logprob: -8.250993728637695
    4. '])]' → logprob: -12.375993728637695
    5. ')])' → logprob: -12.375993728637695
    6. '   ' → logprob: -12.625993728637695
    7. '))' → logprob: -13.125993728637695
    8. ' )' → logprob: -13.125993728637695
    9. ')]
' → logprob: -13.375993728637695
    10. ')}' → logprob: -13.375993728637695

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1758769303560257
    2. 'for' → logprob: -2.4258768558502197
    3. 'valid' → logprob: -4.550877094268799
    4. 'result' → logprob: -4.800877094268799
    5. 'if' → logprob: -5.175877094268799
    6. ' for' → logprob: -5.175877094268799
    7. 'import' → logprob: -5.425877094268799
    8. '#' → logprob: -5.675877094268799
    9. 's' → logprob: -5.800877094268799
    10. '```' → logprob: -5.800877094268799

Token 62: ' constellation' (ID: 172994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5091759562492371
    2. 'for' → logprob: -1.6341760158538818
    3. 'result' → logprob: -3.009176015853882
    4. ' for' → logprob: -3.384176015853882
    5. 's' → logprob: -3.884176015853882
    6. 'import' → logprob: -4.884175777435303
    7. 'r' → logprob: -5.009175777435303
    8. 'i' → logprob: -5.134175777435303
    9. 'valid' → logprob: -5.134175777435303
    10. 'def' → logprob: -5.259175777435303

Token 63: '_set' (ID: 5451)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005231275223195553
    2. '<|end|>' → logprob: -6.1302313804626465
    3. '=' → logprob: -6.2552313804626465
    4. '(' → logprob: -7.3802313804626465
    5. 's' → logprob: -9.005230903625488
    6. '()' → logprob: -9.130230903625488
    7. ' =
' → logprob: -9.755230903625488
    8. '   ' → logprob: -10.005230903625488
    9. '.' → logprob: -10.380230903625488
    10. ')' → logprob: -10.505230903625488

Token 65: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.5236431956291199
    2. 'set' → logprob: -0.8986431956291199
    3. '{' → logprob: -7.8986430168151855
    4. ' {' → logprob: -9.148643493652344
    5. '	set' → logprob: -11.523643493652344
    6. ' {(' → logprob: -11.648643493652344
    7. '(set' → logprob: -11.648643493652344
    8. '   ' → logprob: -12.398643493652344
    9. '=set' → logprob: -12.523643493652344
    10. ')set' → logprob: -13.398643493652344

Token 66: '(const' (ID: 6098)
  Prédit: '(const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(const' → logprob: -0.00025800178991630673
    2. '()' → logprob: -9.000258445739746
    3. '(' → logprob: -9.125258445739746
    4. '((' → logprob: -11.250258445739746
    5. 'const' → logprob: -12.875258445739746
    6. '(Const' → logprob: -13.375258445739746
    7. ' (' → logprob: -13.500258445739746
    8. ',const' → logprob: -13.625258445739746
    9. '(cons' → logprob: -13.625258445739746
    10. '(cont' → logprob: -14.250258445739746

Token 67: 'ellation' (ID: 91495)
  Prédit: 'ellation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ellation' → logprob: -0.0017964430153369904
    2. 'el' → logprob: -6.751796245574951
    3. 'ell' → logprob: -7.501796245574951
    4. 'lation' → logprob: -11.00179672241211
    5. 'al' → logprob: -11.00179672241211
    6. 'stell' → logprob: -11.75179672241211
    7. 'estation' → logprob: -12.37679672241211
    8. '(' → logprob: -12.75179672241211
    9. 'on' → logprob: -13.00179672241211
    10. 'l' → logprob: -13.00179672241211

Token 68: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.1080467781284824e-05
    2. ')
' → logprob: -10.500041007995605
    3. ' )' → logprob: -11.500041007995605
    4. '   ' → logprob: -13.750041007995605
    5. '}' → logprob: -14.750041007995605
    6. '))' → logprob: -14.875041007995605
    7. ']' → logprob: -15.375041007995605
    8. ')

' → logprob: -15.875041007995605
    9. '.' → logprob: -16.000041961669922
    10. '<|end|>' → logprob: -16.000041961669922

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039306607097387314
    2. '<|end|>' → logprob: -4.289306640625
    3. '    
' → logprob: -4.539306640625
    4. '
' → logprob: -4.914306640625
    5. 'for' → logprob: -6.289306640625
    6. ' for' → logprob: -6.289306640625
    7. '    ' → logprob: -7.414306640625
    8. 'n' → logprob: -7.789306640625
    9. '```' → logprob: -8.164306640625
    10. '#' → logprob: -8.289306640625

Token 70: ' base' (ID: 3611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09135781973600388
    2. 'found' → logprob: -3.716357707977295
    3. ' for' → logprob: -4.216357707977295
    4. 'for' → logprob: -4.591357707977295
    5. 'match' → logprob: -5.341357707977295
    6. ' match' → logprob: -5.466357707977295
    7. 'matches' → logprob: -5.466357707977295
    8. 'if' → logprob: -5.716357707977295
    9. ' found' → logprob: -5.841357707977295
    10. 'result' → logprob: -5.966357707977295

Token 71: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34602728486061096
    2. ' =' → logprob: -1.8460272550582886
    3. '_x' → logprob: -2.471027374267578
    4. '=' → logprob: -4.096027374267578
    5. '_point' → logprob: -4.221027374267578
    6. '_points' → logprob: -5.596027374267578
    7. 's' → logprob: -5.596027374267578
    8. '_offset' → logprob: -6.221027374267578
    9. '_distance' → logprob: -6.471027374267578
    10. '_set' → logprob: -6.846027374267578

Token 72: 'x' (ID: 87)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.08960136026144028
    2. 'on' → logprob: -3.0896012783050537
    3. 'oord' → logprob: -3.7146012783050537
    4. 'enter' → logprob: -4.714601516723633
    5. 'oor' → logprob: -5.964601516723633
    6. 'ount' → logprob: -7.339601516723633
    7. 'ent' → logprob: -7.714601516723633
    8. 'ont' → logprob: -7.714601516723633
    9. 'om' → logprob: -7.714601516723633
    10. 'olor' → logprob: -8.214601516723633

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.547789674485102e-05
    2. ' ,' → logprob: -10.750035285949707
    3. '=' → logprob: -12.125035285949707
    4. ' =' → logprob: -13.000035285949707
    5. 'y' → logprob: -13.125035285949707
    6. 's' → logprob: -14.000035285949707
    7. '_,' → logprob: -14.125035285949707
    8. ',y' → logprob: -14.125035285949707
    9. ',c' → logprob: -15.500035285949707
    10. ',user' → logprob: -15.625035285949707

Token 74: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.4287978708744049
    2. 'base' → logprob: -1.0537978410720825
    3. '_base' → logprob: -9.803797721862793
    4. ' ' → logprob: -11.053797721862793
    5. '	base' → logprob: -11.553797721862793
    6. 'b' → logprob: -11.928797721862793
    7. '_' → logprob: -12.928797721862793
    8. '<|end|>' → logprob: -13.428797721862793
    9. ';base' → logprob: -13.803797721862793
    10. '=' → logprob: -14.053797721862793

Token 75: '_c' (ID: 1303)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006556084263138473
    2. '_,' → logprob: -8.500655174255371
    3. 'cy' → logprob: -8.750655174255371
    4. '_' → logprob: -9.375655174255371
    5. '_c' → logprob: -9.750655174255371
    6. '_py' → logprob: -10.125655174255371
    7. ',_' → logprob: -10.375655174255371
    8. '_y' → logprob: -10.500655174255371
    9. 'y' → logprob: -11.375655174255371
    10. ',y' → logprob: -11.375655174255371

Token 76: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02520762011408806
    2. ',' → logprob: -4.52520751953125
    3. ',y' → logprob: -4.90020751953125
    4. '=' → logprob: -5.27520751953125
    5. 'x' → logprob: -7.27520751953125
    6. '_y' → logprob: -8.02520751953125
    7. '<|end|>' → logprob: -8.02520751953125
    8. ' =' → logprob: -10.02520751953125
    9. '_' → logprob: -11.15020751953125
    10. 'yj' → logprob: -11.27520751953125

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018407681956887245
    2. '=' → logprob: -4.018407821655273
    3. ',' → logprob: -8.268407821655273
    4. ' ,' → logprob: -14.518407821655273
    5. ')' → logprob: -15.768407821655273
    6. ' ' → logprob: -15.768407821655273
    7. ' =)' → logprob: -16.393407821655273
    8. '   ' → logprob: -16.643407821655273
    9. '<|end|>' → logprob: -16.893407821655273
    10. '.' → logprob: -17.518407821655273

Token 78: ' constellation' (ID: 172994)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.152445986866951
    2. ' constellation' → logprob: -2.0274460315704346
    3. ' const' → logprob: -4.6524457931518555
    4. '   ' → logprob: -9.402445793151855
    5. 'photo' → logprob: -10.027445793151855
    6. ' photo' → logprob: -11.402445793151855
    7. '```' → logprob: -12.027445793151855
    8. ' ' → logprob: -12.027445793151855
    9. '_const' → logprob: -12.152445793151855
    10. 'constitution' → logprob: -12.777445793151855

Token 79: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2948405128554441e-05
    2. '[-' → logprob: -11.87501335144043
    3. ' [' → logprob: -13.00001335144043
    4. '0' → logprob: -14.00001335144043
    5. '[
' → logprob: -14.75001335144043
    6. '\[' → logprob: -14.75001335144043
    7. '```' → logprob: -14.87501335144043
    8. '_set' → logprob: -15.12501335144043
    9. '   ' → logprob: -15.12501335144043
    10. ' ' → logprob: -16.06251335144043

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.751746746478602e-05
    2. ' ' → logprob: -10.00004768371582
    3. '   ' → logprob: -14.62504768371582
    4. '-' → logprob: -15.06254768371582
    5. '[' → logprob: -15.43754768371582
    6. '  ' → logprob: -15.93754768371582
    7. '1' → logprob: -16.06254768371582
    8. '
' → logprob: -16.31254768371582
    9. '۰' → logprob: -16.56254768371582
    10. '٠' → logprob: -17.06254768371582

Token 81: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5406492352485657
    2. ')' → logprob: -0.9156492352485657
    3. '<|end|>' → logprob: -4.4156494140625
    4. '[' → logprob: -5.9156494140625
    5. ')]' → logprob: -6.2906494140625
    6. '])' → logprob: -8.1656494140625
    7. '<|end|>' → logprob: -8.4156494140625
    8. '][' → logprob: -9.1656494140625
    9. ' ]' → logprob: -10.9156494140625
    10. '])]' → logprob: -10.9156494140625

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02827255055308342
    2. '
' → logprob: -4.52827262878418
    3. '    
' → logprob: -4.52827262878418
    4. '<|end|>' → logprob: -6.15327262878418
    5. '\n' → logprob: -6.90327262878418
    6. '  
' → logprob: -6.90327262878418
    7. ' for' → logprob: -8.15327262878418
    8. '   
' → logprob: -8.27827262878418
    9. '```' → logprob: -8.40327262878418
    10. ' ' → logprob: -8.40327262878418

Token 83: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05786500126123428
    2. 'for' → logprob: -4.182865142822266
    3. ' for' → logprob: -4.182865142822266
    4. 'dx' → logprob: -4.557865142822266
    5. '    
' → logprob: -4.557865142822266
    6. ' dx' → logprob: -7.057865142822266
    7. 'result' → logprob: -7.807865142822266
    8. 'x' → logprob: -7.932865142822266
    9. 'found' → logprob: -8.182865142822266
    10. 'print' → logprob: -8.182865142822266

Token 84: '_vectors' (ID: 129121)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.8747267127037048
    2. 'entered' → logprob: -1.1247267723083496
    3. 'ount' → logprob: -3.2497267723083496
    4. 'os' → logprob: -3.3747267723083496
    5. 'orrect' → logprob: -3.3747267723083496
    6. 'x' → logprob: -3.3747267723083496
    7. 'for' → logprob: -3.9997267723083496
    8. 'enter' → logprob: -4.24972677230835
    9. 'translated' → logprob: -4.37472677230835
    10. 'ent' → logprob: -4.74972677230835

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0052342405542731285
    2. '=' → logprob: -5.255234241485596
    3. '=[]' → logprob: -16.505233764648438
    4. ' =
' → logprob: -16.630233764648438
    5. ',' → logprob: -16.630233764648438
    6. ' =[' → logprob: -17.005233764648438
    7. ' =)' → logprob: -17.130233764648438
    8. 's' → logprob: -17.255233764648438
    9. ' ' → logprob: -17.755233764648438
    10. '[' → logprob: -18.130233764648438

Token 86: ' [(' (ID: 43900)
  Prédit: ' [('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.21209001541137695
    2. '[(' → logprob: -1.837090015411377
    3. ' [' → logprob: -4.087090015411377
    4. '[' → logprob: -4.337090015411377
    5. ' []' → logprob: -6.962090015411377
    6. ' {(' → logprob: -7.462090015411377
    7. '[]' → logprob: -8.587089538574219
    8. ' ' → logprob: -9.462089538574219
    9. ' [
' → logprob: -9.962089538574219
    10. '[
' → logprob: -10.212089538574219

Token 87: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2717626392841339
    2. 'cx' → logprob: -1.5217626094818115
    3. '(cx' → logprob: -4.646762847900391
    4. ' x' → logprob: -5.646762847900391
    5. ' cx' → logprob: -5.771762847900391
    6. '(x' → logprob: -6.396762847900391
    7. '   ' → logprob: -6.896762847900391
    8. 'bx' → logprob: -8.64676284790039
    9. ' ' → logprob: -8.89676284790039
    10. 'dx' → logprob: -9.52176284790039

Token 88: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06198696419596672
    2. '-' → logprob: -2.8119869232177734
    3. '[' → logprob: -11.686986923217773
    4. '   ' → logprob: -12.436986923217773
    5. ',' → logprob: -12.811986923217773
    6. 'y' → logprob: -13.561986923217773
    7. ' ' → logprob: -14.311986923217773
    8. ' y' → logprob: -14.436986923217773
    9. 'x' → logprob: -14.811986923217773
    10. ',y' → logprob: -15.061986923217773

Token 89: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.009770846925675869
    2. ' base' → logprob: -4.63477087020874
    3. '   ' → logprob: -12.009770393371582
    4. '	base' → logprob: -13.009770393371582
    5. ' ' → logprob: -13.134770393371582
    6. '(base' → logprob: -13.384770393371582
    7. '  ' → logprob: -14.009770393371582
    8. '_base' → logprob: -14.634770393371582
    9. '```' → logprob: -14.884770393371582
    10. 'b' → logprob: -15.759770393371582

Token 90: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -5.080963092041202e-06
    2. '_x' → logprob: -12.375004768371582
    3. '_' → logprob: -15.125004768371582
    4. 'cx' → logprob: -15.250004768371582
    5. 'x' → logprob: -15.625004768371582
    6. '‌' → logprob: -17.8750057220459
    7. '_dx' → logprob: -18.0000057220459
    8. '```' → logprob: -18.5000057220459
    9. '(cx' → logprob: -18.6250057220459
    10. '.cx' → logprob: -18.8750057220459

Token 91: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3856492842023727e-06
    2. '_x' → logprob: -13.875000953674316
    3. 'y' → logprob: -15.875000953674316
    4. 'sx' → logprob: -16.125001907348633
    5. 'cx' → logprob: -17.125001907348633
    6. '```' → logprob: -17.125001907348633
    7. '_' → logprob: -17.937501907348633
    8. '_tx' → logprob: -18.062501907348633
    9. 'х' → logprob: -18.187501907348633
    10. 'z' → logprob: -18.562501907348633

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.620622712536715e-05
    2. ',y' → logprob: -10.125045776367188
    3. ' ,' → logprob: -12.750045776367188
    4. ',
' → logprob: -13.000045776367188
    5. ')' → logprob: -15.500045776367188
    6. ',x' → logprob: -15.875045776367188
    7. ',\
' → logprob: -16.375045776367188
    8. '‌,' → logprob: -16.500045776367188
    9. ',n' → logprob: -16.875045776367188
    10. ',b' → logprob: -16.875045776367188

Token 93: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.020632749423384666
    2. 'y' → logprob: -3.895632743835449
    3. '<|end|>' → logprob: -9.52063274383545
    4. ' ' → logprob: -11.14563274383545
    5. '	y' → logprob: -12.89563274383545
    6. ' ' → logprob: -15.77063274383545
    7. ' 
' → logprob: -16.395633697509766
    8. '    ' → logprob: -16.520633697509766
    9. '<|end|>' → logprob: -17.145633697509766
    10. ',y' → logprob: -17.270633697509766

Token 94: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.001327499165199697
    2. '-' → logprob: -6.6263275146484375
    3. ')' → logprob: -13.876327514648438
    4. ' ' → logprob: -14.626327514648438
    5. 'y' → logprob: -16.751327514648438
    6. '<|end|>' → logprob: -17.126327514648438
    7. ',' → logprob: -17.501327514648438
    8. '   ' → logprob: -17.876327514648438
    9. ' -
' → logprob: -18.376327514648438
    10. ' ' → logprob: -18.751327514648438

Token 95: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.014209816232323647
    2. ' base' → logprob: -4.264209747314453
    3. 'y' → logprob: -10.264209747314453
    4. ' ' → logprob: -12.389209747314453
    5. '(base' → logprob: -12.764209747314453
    6. ' y' → logprob: -13.514209747314453
    7. '	base' → logprob: -13.764209747314453
    8. '_base' → logprob: -14.639209747314453
    9. 'b' → logprob: -14.764209747314453
    10. '  ' → logprob: -15.139209747314453

Token 96: '_c' (ID: 1303)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.025096837431192398
    2. 'y' → logprob: -3.775096893310547
    3. '_c' → logprob: -6.400096893310547
    4. '_y' → logprob: -8.775096893310547
    5. 'c' → logprob: -11.400096893310547
    6. '1' → logprob: -12.400096893310547
    7. '0' → logprob: -12.650096893310547
    8. '[' → logprob: -13.400096893310547
    9. 'Cy' → logprob: -13.400096893310547
    10. '_' → logprob: -13.650096893310547

Token 97: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.45848218582978e-06
    2. '_y' → logprob: -13.75000286102295
    3. ' y' → logprob: -14.00000286102295
    4. 'x' → logprob: -15.62500286102295
    5. '	y' → logprob: -16.625001907348633
    6. '   ' → logprob: -16.750001907348633
    7. '```' → logprob: -17.125001907348633
    8. 'ys' → logprob: -17.250001907348633
    9. ' ' → logprob: -17.375001907348633
    10. '1' → logprob: -18.000001907348633

Token 98: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -13.250003814697266
    3. ' )' → logprob: -13.375003814697266
    4. '),' → logprob: -16.125003814697266
    5. '   ' → logprob: -16.250003814697266
    6. '))' → logprob: -16.500003814697266
    7. ')]' → logprob: -16.750003814697266
    8. ' ' → logprob: -16.875003814697266
    9. ')...' → logprob: -17.000003814697266
    10. '')' → logprob: -17.375003814697266

Token 99: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5921967625617981
    2. ' for' → logprob: -0.8421967625617981
    3. 'for' → logprob: -4.217196941375732
    4. '   ' → logprob: -6.842196941375732
    5. '	for' → logprob: -8.717196464538574
    6. ' ' → logprob: -9.342196464538574
    7. ' )' → logprob: -10.217196464538574
    8. '    ' → logprob: -11.592196464538574
    9. '<|end|>' → logprob: -12.342196464538574
    10. '  ' → logprob: -12.467196464538574

Token 100: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5788133144378662
    2. ' x' → logprob: -0.8288133144378662
    3. '(x' → logprob: -6.078813552856445
    4. ' (' → logprob: -7.578813552856445
    5. ' ' → logprob: -10.203813552856445
    6. '   ' → logprob: -11.703813552856445
    7. '  ' → logprob: -11.953813552856445
    8. '	x' → logprob: -12.078813552856445
    9. '_x' → logprob: -12.578813552856445
    10. ' _' → logprob: -13.578813552856445

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.190178904333152e-05
    2. ',y' → logprob: -10.750031471252441
    3. '<|end|>' → logprob: -12.125031471252441
    4. ' ,' → logprob: -13.250031471252441
    5. ',
' → logprob: -13.625031471252441
    6. '‌,' → logprob: -14.125031471252441
    7. ' in' → logprob: -14.500031471252441
    8. 'y' → logprob: -15.500031471252441
    9. '<|end|>' → logprob: -16.250032424926758
    10. '_,' → logprob: -16.250032424926758

Token 102: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.16029022634029388
    2. 'y' → logprob: -1.910290241241455
    3. ' ' → logprob: -10.285289764404297
    4. ' constellation' → logprob: -10.910289764404297
    5. 'const' → logprob: -12.160289764404297
    6. '<|end|>' → logprob: -13.285289764404297
    7. '	y' → logprob: -13.535289764404297
    8. ' const' → logprob: -13.785289764404297
    9. '  ' → logprob: -14.035289764404297
    10. '

' → logprob: -14.160289764404297

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017126628663390875
    2. 'in' → logprob: -6.376712799072266
    3. '<|end|>' → logprob: -12.251712799072266
    4. ' ' → logprob: -12.876712799072266
    5. ')' → logprob: -13.626712799072266
    6. ',' → logprob: -13.751712799072266
    7. ' ,' → logprob: -15.876712799072266
    8. 'const' → logprob: -16.064212799072266
    9. 'In' → logprob: -16.314212799072266
    10. ' )' → logprob: -16.501712799072266

Token 104: ' constellation' (ID: 172994)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.5234115123748779
    2. ' constellation' → logprob: -0.8984115123748779
    3. ' const' → logprob: -8.273411750793457
    4. 'constitution' → logprob: -11.523411750793457
    5. '_const' → logprob: -12.148411750793457
    6. ' ' → logprob: -12.523411750793457
    7. 'constraint' → logprob: -13.273411750793457
    8. 'cons' → logprob: -13.398411750793457
    9. '```' → logprob: -13.773411750793457
    10. '   ' → logprob: -13.773411750793457

Token 105: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4743089973926544
    2. '[' → logprob: -0.974308967590332
    3. '1' → logprob: -9.224308967590332
    4. ' if' → logprob: -9.849308967590332
    5. ' ]' → logprob: -9.974308967590332
    6. '   ' → logprob: -11.724308967590332
    7. '][' → logprob: -12.474308967590332
    8. ':]' → logprob: -12.474308967590332
    9. ')]' → logprob: -12.599308967590332
    10. ')' → logprob: -12.724308967590332

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009725278243422508
    2. '
' → logprob: -5.509725093841553
    3. ' for' → logprob: -5.884725093841553
    4. '    
' → logprob: -6.634725093841553
    5. 'for' → logprob: -7.634725093841553
    6. ' while' → logprob: -8.259725570678711
    7. '<|end|>' → logprob: -8.509725570678711
    8. '```' → logprob: -8.884725570678711
    9. 'n' → logprob: -9.259725570678711
    10. 'while' → logprob: -9.384725570678711

Token 107: ' photo' (ID: 8767)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34807348251342773
    2. ' for' → logprob: -1.9730734825134277
    3. 'for' → logprob: -1.9730734825134277
    4. ' while' → logprob: -5.348073482513428
    5. 'while' → logprob: -5.473073482513428
    6. '    
' → logprob: -6.473073482513428
    7. 'found' → logprob: -6.473073482513428
    8. 'n' → logprob: -7.348073482513428
    9. 'result' → logprob: -7.723073482513428
    10. ' found' → logprob: -8.223073959350586

Token 108: '_dict' (ID: 11295)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.008612568490207195
    2. '_' → logprob: -5.758612632751465
    3. '_vectors' → logprob: -6.133612632751465
    4. '_sets' → logprob: -7.008612632751465
    5. '_matches' → logprob: -7.508612632751465
    6. '_mat' → logprob: -8.383612632751465
    7. '_valid' → logprob: -8.883612632751465
    8. '_s' → logprob: -9.133612632751465
    9. '_results' → logprob: -9.133612632751465
    10. '_points' → logprob: -9.133612632751465

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00026407750556245446
    2. '=' → logprob: -8.250264167785645
    3. ' ' → logprob: -13.250264167785645
    4. ' ={' → logprob: -14.375264167785645
    5. '<|end|>' → logprob: -15.625264167785645
    6. '  ' → logprob: -15.750264167785645
    7. '.setdefault' → logprob: -16.875263214111328
    8. 's' → logprob: -17.125263214111328
    9. '={}' → logprob: -17.375263214111328
    10. '[' → logprob: -17.500263214111328

Token 110: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0012015394167974591
    2. '{' → logprob: -7.001201629638672
    3. ' {}' → logprob: -8.751201629638672
    4. '{}
' → logprob: -9.376201629638672
    5. 'dict' → logprob: -10.251201629638672
    6. '{}

' → logprob: -12.126201629638672
    7. 'default' → logprob: -13.001201629638672
    8. 'set' → logprob: -13.376201629638672
    9. ' defaultdict' → logprob: -13.626201629638672
    10. '{}\' → logprob: -15.001201629638672

Token 111: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.4315636157989502
    2. '(x' → logprob: -1.5565636157989502
    3. 'pt' → logprob: -1.6815636157989502
    4. '(p' → logprob: -1.8065636157989502
    5. 'coord' → logprob: -2.68156361579895
    6. 'xy' → logprob: -3.55656361579895
    7. '(pt' → logprob: -3.55656361579895
    8. 'point' → logprob: -4.056563377380371
    9. 'photo' → logprob: -4.556563377380371
    10. '(coord' → logprob: -4.931563377380371

Token 112: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023504482582211494
    2. ':i' → logprob: -4.023504257202148
    3. ':p' → logprob: -5.398504257202148
    4. ':index' → logprob: -7.898504257202148
    5. ':(' → logprob: -9.023504257202148
    6. ' :' → logprob: -9.273504257202148
    7. '[' → logprob: -9.523504257202148
    8. 'p' → logprob: -10.398504257202148
    9. 'oint' → logprob: -10.523504257202148
    10. ':x' → logprob: -11.023504257202148

Token 113: ' True' (ID: 6432)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39160141348838806
    2. ' i' → logprob: -1.6416014432907104
    3. ' True' → logprob: -2.891601324081421
    4. 'True' → logprob: -3.141601324081421
    5. 'idx' → logprob: -4.6416015625
    6. ' idx' → logprob: -4.6416015625
    7. '0' → logprob: -5.2666015625
    8. ' ' → logprob: -5.7666015625
    9. '[]' → logprob: -6.5166015625
    10. '1' → logprob: -7.6416015625

Token 114: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09812270104885101
    2. 'for' → logprob: -2.4731225967407227
    3. ' ' → logprob: -4.723122596740723
    4. ',' → logprob: -8.598122596740723
    5. '	for' → logprob: -10.098122596740723
    6. '    ' → logprob: -11.598122596740723
    7. '  ' → logprob: -11.973122596740723
    8. '   ' → logprob: -11.973122596740723
    9. ' ,' → logprob: -13.098122596740723
    10. ' ' → logprob: -13.223122596740723

Token 115: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.00307290256023407
    2. 'p' → logprob: -6.378072738647461
    3. ' photo' → logprob: -6.628072738647461
    4. 'photo' → logprob: -10.003072738647461
    5. ' ' → logprob: -14.378072738647461
    6. '	p' → logprob: -15.003072738647461
    7. '   ' → logprob: -15.128072738647461
    8. 'Photo' → logprob: -15.628072738647461
    9. '  ' → logprob: -15.753072738647461
    10. '_' → logprob: -15.753072738647461

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13382689654827118
    2. 'p' → logprob: -2.883826971054077
    3. ' p' → logprob: -3.133826971054077
    4. 'in' → logprob: -4.133826732635498
    5. ' ' → logprob: -4.883826732635498
    6. '_' → logprob: -6.258826732635498
    7. '  ' → logprob: -9.633827209472656
    8. 's' → logprob: -9.758827209472656
    9. ' ' → logprob: -10.383827209472656
    10. ',' → logprob: -10.508827209472656

Token 117: ' photo' (ID: 8767)
  Prédit: ' photo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' photo' → logprob: -0.16023844480514526
    2. 'photo' → logprob: -1.91023850440979
    3. ' ' → logprob: -12.160238265991211
    4. '   ' → logprob: -12.910238265991211
    5. 'phot' → logprob: -13.285238265991211
    6. '(photo' → logprob: -13.410238265991211
    7. ' range' → logprob: -14.035238265991211
    8. 'Photo' → logprob: -14.285238265991211
    9. '  ' → logprob: -14.410238265991211
    10. 'range' → logprob: -14.785238265991211

Token 118: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0008322591311298311
    2. ' }' → logprob: -7.1258320808410645
    3. '}
' → logprob: -10.875832557678223
    4. '   ' → logprob: -12.000832557678223
    5. ',' → logprob: -13.500832557678223
    6. '}
' → logprob: -14.125832557678223
    7. '}

' → logprob: -15.500832557678223
    8. ' ' → logprob: -16.125831604003906
    9. ' }
' → logprob: -16.250831604003906
    10. '	' → logprob: -16.750831604003906

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4203546941280365
    2. '
' → logprob: -1.4203547239303589
    3. ' 
' → logprob: -3.1703546047210693
    4. '    
' → logprob: -3.2953546047210693
    5. '  
' → logprob: -5.170354843139648
    6. ':' → logprob: -5.545354843139648
    7. ' ' → logprob: -5.795354843139648
    8. 'n' → logprob: -6.170354843139648
    9. ' for' → logprob: -6.170354843139648
    10. '   
' → logprob: -6.170354843139648

Token 120: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07298268377780914
    2. '
' → logprob: -3.9479827880859375
    3. 'for' (adapté à ' for') → logprob: -3.9479827880859375
    4. ' for' → logprob: -4.4479827880859375
    5. '    
' → logprob: -4.4479827880859375
    6. 'found' → logprob: -5.5729827880859375
    7. 'possible' → logprob: -6.8229827880859375
    8. ' found' → logprob: -7.1979827880859375
    9. 'n' → logprob: -7.5729827880859375
    10. 'valid' → logprob: -7.9479827880859375

Token 121: ' px' (ID: 27003)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.4600272178649902
    2. ' base' → logprob: -1.5850272178649902
    3. ' px' → logprob: -1.8350272178649902
    4. 'p' → logprob: -2.3350272178649902
    5. ' cx' → logprob: -2.5850272178649902
    6. 'px' → logprob: -2.9600272178649902
    7. 'base' → logprob: -3.3350272178649902
    8. 'x' → logprob: -3.7100272178649902
    9. ' x' → logprob: -3.8350272178649902
    10. 'cx' → logprob: -4.08502721786499

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008228530059568584
    2. ' in' → logprob: -7.500823020935059
    3. ' ,' → logprob: -8.375823020935059
    4. ',y' → logprob: -11.375823020935059
    5. ',_' → logprob: -12.000823020935059
    6. ',p' → logprob: -12.625823020935059
    7. '_,' → logprob: -12.750823020935059
    8. 's' → logprob: -13.000823020935059
    9. ',x' → logprob: -13.000823020935059
    10. 'x' → logprob: -13.000823020935059

Token 123: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.3868826925754547
    2. ' py' → logprob: -1.1368826627731323
    3. '_py' → logprob: -11.636882781982422
    4. '(py' → logprob: -13.011882781982422
    5. '.py' → logprob: -14.761882781982422
    6. ' ' → logprob: -16.511882781982422
    7. 'ply' → logprob: -17.011882781982422
    8. 'px' → logprob: -17.761882781982422
    9. 'ppy' → logprob: -17.886882781982422
    10. '    ' → logprob: -18.261882781982422

Token 124: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0068376800045371056
    2. 'in' → logprob: -5.006837844848633
    3. ',' → logprob: -10.131837844848633
    4. ':' → logprob: -10.256837844848633
    5. ' :' → logprob: -10.881837844848633
    6. ' ' → logprob: -11.381837844848633
    7. '   ' → logprob: -11.756837844848633
    8. '    ' → logprob: -12.631837844848633
    9. ' ,' → logprob: -12.881837844848633
    10. '  ' → logprob: -13.506837844848633

Token 125: ' photo' (ID: 8767)
  Prédit: ' photo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' photo' → logprob: -0.0005456457729451358
    2. 'photo' → logprob: -7.750545501708984
    3. ' range' → logprob: -9.125545501708984
    4. '(photo' → logprob: -13.125545501708984
    5. ' ' → logprob: -13.250545501708984
    6. '   ' → logprob: -13.875545501708984
    7. '  ' → logprob: -14.875545501708984
    8. ' phot' → logprob: -15.625545501708984
    9. '    ' → logprob: -15.813045501708984
    10. '[' → logprob: -16.125545501708984

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001507405104348436
    2. ' :' → logprob: -9.250150680541992
    3. ':
' → logprob: -10.250150680541992
    4. '):' → logprob: -11.875150680541992
    5. ',' → logprob: -12.375150680541992
    6. '<|end|>' → logprob: -12.875150680541992
    7. ':**' → logprob: -13.250150680541992
    8. ' in' → logprob: -13.875150680541992
    9. ':

' → logprob: -14.500150680541992
    10. '>:' → logprob: -14.875150680541992

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014445658773183823
    2. '    ' → logprob: -5.014445781707764
    3. ' ' → logprob: -6.139445781707764
    4. '   ' → logprob: -6.514445781707764
    5. '<|end|>' → logprob: -6.764445781707764
    6. ' if' → logprob: -7.264445781707764
    7. '        ' → logprob: -7.389445781707764
    8. '        
' → logprob: -7.514445781707764
    9. ':' → logprob: -8.139445304870605
    10. ',' → logprob: -8.639445304870605

Token 128: ' dx' (ID: 29472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2579639256000519
    2. '   ' → logprob: -2.1329638957977295
    3. 'for' → logprob: -3.1329638957977295
    4. 'found' → logprob: -3.3829638957977295
    5. ' for' → logprob: -3.7579638957977295
    6. 'if' → logprob: -6.382964134216309
    7. 'match' → logprob: -6.382964134216309
    8. 'matches' → logprob: -6.882964134216309
    9. ' found' → logprob: -7.132964134216309
    10. ' match' → logprob: -7.382964134216309

Token 129: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27351951599121094
    2. '=' → logprob: -1.773519515991211
    3. ',' → logprob: -2.773519515991211
    4. '<|end|>' → logprob: -5.023519515991211
    5. 's' → logprob: -7.898519515991211
    6. ' ,' → logprob: -10.523519515991211
    7. ')' → logprob: -10.523519515991211
    8. ' ' → logprob: -10.523519515991211
    9. ':' → logprob: -10.648519515991211
    10. '<|end|>' → logprob: -11.148519515991211

Token 130: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.0619727298617363
    2. 'dy' → logprob: -2.8119726181030273
    3. ' ' → logprob: -13.311972618103027
    4. '=' → logprob: -13.436972618103027
    5. '<|end|>' → logprob: -14.561972618103027
    6. ' =' → logprob: -14.811972618103027
    7. 'd' → logprob: -15.311972618103027
    8. '_' → logprob: -16.061973571777344
    9. ' py' → logprob: -16.186973571777344
    10. 'Dy' → logprob: -16.311973571777344

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22551517188549042
    2. '=' → logprob: -1.6005151271820068
    3. '<|end|>' → logprob: -9.475515365600586
    4. ' ' → logprob: -11.475515365600586
    5. ',' → logprob: -11.975515365600586
    6. '        ' → logprob: -13.100515365600586
    7. '    ' → logprob: -13.850515365600586
    8. ')' → logprob: -13.975515365600586
    9. ' =)' → logprob: -14.100515365600586
    10. '<|end|>' → logprob: -14.350515365600586

Token 132: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.6386937499046326
    2. ' px' → logprob: -1.1386938095092773
    3. 'c' → logprob: -2.3886938095092773
    4. ' c' → logprob: -3.6386938095092773
    5. '(px' → logprob: -4.263693809509277
    6. 'const' → logprob: -5.513693809509277
    7. '[' → logprob: -5.888693809509277
    8. ' constellation' → logprob: -6.013693809509277
    9. 'photo' → logprob: -6.388693809509277
    10. '[c' → logprob: -6.763693809509277

Token 133: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0005840110243298113
    2. ' base' → logprob: -7.625584125518799
    3. 'c' → logprob: -9.50058364868164
    4. '   ' → logprob: -11.12558364868164
    5. '  ' → logprob: -13.12558364868164
    6. ' ' → logprob: -13.12558364868164
    7. '(base' → logprob: -14.25058364868164
    8. '    ' → logprob: -14.75058364868164
    9. 'x' → logprob: -15.00058364868164
    10. ' c' → logprob: -15.50058364868164

Token 135: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.259079363080673e-05
    2. 'cx' → logprob: -11.375012397766113
    3. '_x' → logprob: -14.750012397766113
    4. '_dx' → logprob: -15.250012397766113
    5. '_px' → logprob: -15.375012397766113
    6. 'x' → logprob: -16.62501335144043
    7. '.cx' → logprob: -16.62501335144043
    8. '(cx' → logprob: -17.12501335144043
    9. ' cx' → logprob: -17.50001335144043
    10. '_tx' → logprob: -18.12501335144043

Token 136: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00023679454170633107
    2. 'y' → logprob: -8.375236511230469
    3. '_x' → logprob: -13.125236511230469
    4. 'px' → logprob: -14.687736511230469
    5. 'cx' → logprob: -14.937736511230469
    6. 'sx' → logprob: -15.187736511230469
    7. 'c' → logprob: -15.437736511230469
    8. '```' → logprob: -15.750236511230469
    9. 'ux' → logprob: -15.812736511230469
    10. ' ' → logprob: -15.812736511230469

Token 137: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: ' py' (ID: 13104)
  Prédit: ' py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' py' → logprob: -0.0007275633979588747
    2. 'py' → logprob: -7.250727653503418
    3. '(py' → logprob: -11.000727653503418
    4. '.py' → logprob: -14.250727653503418
    5. ' px' → logprob: -15.250727653503418
    6. '_py' → logprob: -16.2507266998291
    7. '    ' → logprob: -18.3757266998291
    8. ' ' → logprob: -18.6257266998291
    9. ' pyt' → logprob: -19.3757266998291
    10. 'px' → logprob: -20.0007266998291

Token 139: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018245937302708626
    2. '-' → logprob: -4.018246173858643
    3. '<|end|>' → logprob: -9.643245697021484
    4. ' ' → logprob: -10.393245697021484
    5. ' -
' → logprob: -15.893245697021484
    6. '<|end|>' → logprob: -16.893245697021484
    7. '    ' → logprob: -17.018245697021484
    8. '  ' → logprob: -17.080745697021484
    9. ' ' → logprob: -17.768245697021484
    10. '1' → logprob: -17.893245697021484

Token 140: ' base' (ID: 3611)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.07778675854206085
    2. ' py' → logprob: -3.077786684036255
    3. 'cy' → logprob: -4.077786922454834
    4. 'base' → logprob: -4.702786922454834
    5. ' base' → logprob: -5.952786922454834
    6. 'y' → logprob: -9.577786445617676
    7. ' ' → logprob: -10.577786445617676
    8. ' cy' → logprob: -10.952786445617676
    9. '(py' → logprob: -11.202786445617676
    10. '_py' → logprob: -11.577786445617676

Token 141: '_c' (ID: 1303)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.00015181333583313972
    2. 'y' → logprob: -8.875151634216309
    3. '_c' → logprob: -12.125151634216309
    4. ' cy' → logprob: -12.625151634216309
    5. '_y' → logprob: -13.375151634216309
    6. 'py' → logprob: -14.500151634216309
    7. 'Cy' → logprob: -15.000151634216309
    8. '1' → logprob: -15.375151634216309
    9. 'c' → logprob: -15.750151634216309
    10. '.cy' → logprob: -16.125152587890625

Token 142: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.088346359931165e-07
    2. 'x' → logprob: -14.375000953674316
    3. '_y' → logprob: -15.625000953674316
    4. ' y' → logprob: -16.625
    5. '1' → logprob: -17.125
    6. '2' → logprob: -17.875
    7. '   ' → logprob: -18.625
    8. '
' → logprob: -19.0
    9. ' ' → logprob: -19.25
    10. 'py' → logprob: -19.375

Token 143: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010798312723636627
    2. '   ' → logprob: -5.135798454284668
    3. 'found' → logprob: -5.760798454284668
    4. ' found' → logprob: -7.510798454284668
    5. '<|end|>' → logprob: -7.885798454284668
    6. 'for' → logprob: -8.010798454284668
    7. ' for' → logprob: -8.635798454284668
    8. '
' → logprob: -9.760798454284668
    9. '	found' → logprob: -10.385798454284668
    10. '_found' → logprob: -10.760798454284668

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29976722598075867
    2. '   ' → logprob: -1.424767255783081
    3. 'found' → logprob: -4.549767017364502
    4. 'if' → logprob: -6.424767017364502
    5. ' found' → logprob: -6.424767017364502
    6. 'for' → logprob: -7.424767017364502
    7. ' for' → logprob: -7.549767017364502
    8. ' match' → logprob: -8.04976749420166
    9. 'match' → logprob: -8.04976749420166
    10. '<|end|>' → logprob: -8.04976749420166

Token 145: ' if' (ID: 538)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.4073648750782013
    2. 'match' → logprob: -2.032364845275879
    3. 'if' (adapté à ' if') → logprob: -2.157364845275879
    4. 'matches' → logprob: -3.657364845275879
    5. 'matched' → logprob: -3.782364845275879
    6. '   ' → logprob: -4.657364845275879
    7. 'for' → logprob: -4.782364845275879
    8. 'valid' → logprob: -5.282364845275879
    9. 'count' → logprob: -5.282364845275879
    10. '       ' → logprob: -5.657364845275879

Token 146: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.022805586457252502
    2. '(all' → logprob: -4.772805690765381
    3. '(dx' → logprob: -5.897805690765381
    4. 'any' → logprob: -6.022805690765381
    5. '(x' → logprob: -6.397805690765381
    6. ' all' → logprob: -6.397805690765381
    7. 'tuple' → logprob: -7.272805690765381
    8. 'dx' → logprob: -7.272805690765381
    9. 'set' → logprob: -7.272805690765381
    10. '(' → logprob: -7.522805690765381

Token 147: '((' (ID: 2054)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.17617742717266083
    2. '((' → logprob: -2.551177501678467
    3. ' ((' → logprob: -3.426177501678467
    4. '(py' → logprob: -4.301177501678467
    5. '(dx' → logprob: -4.551177501678467
    6. '(' → logprob: -4.926177501678467
    7. '   ' → logprob: -5.051177501678467
    8. '(px' → logprob: -5.176177501678467
    9. '(p' → logprob: -5.301177501678467
    10. '(x' → logprob: -7.176177501678467

Token 148: 'dx' (ID: 22100)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7666481733322144
    2. '(dx' → logprob: -0.8916481733322144
    3. '(px' → logprob: -2.516648292541504
    4. ' dx' → logprob: -4.266648292541504
    5. ' px' → logprob: -4.391648292541504
    6. 'dx' → logprob: -4.391648292541504
    7. 'px' → logprob: -5.766648292541504
    8. '   ' → logprob: -7.266648292541504
    9. '(' → logprob: -7.766648292541504
    10. '(p' → logprob: -8.016648292541504

Token 149: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1798829436302185
    2. '+' → logprob: -1.8048830032348633
    3. '+x' → logprob: -9.179883003234863
    4. '+c' → logprob: -12.304883003234863
    5. ',' → logprob: -12.429883003234863
    6. '+p' → logprob: -12.679883003234863
    7. '+t' → logprob: -12.804883003234863
    8. '+d' → logprob: -13.054883003234863
    9. ' ' → logprob: -13.054883003234863
    10. '+k' → logprob: -13.242383003234863

Token 150: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.6233218312263489
    2. 'cx' → logprob: -0.8733218312263489
    3. 'cv' → logprob: -3.123321771621704
    4. ' cx' → logprob: -6.998322010040283
    5. 'vec' → logprob: -7.748322010040283
    6. ' vx' → logprob: -7.873322010040283
    7. 'vc' → logprob: -8.498321533203125
    8. 'x' → logprob: -9.623321533203125
    9. '

' → logprob: -9.748321533203125
    10. 'ox' → logprob: -10.248321533203125

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014191613299772143
    2. ' ,' → logprob: -6.6264190673828125
    3. ',y' → logprob: -9.876419067382812
    4. ',
' → logprob: -10.501419067382812
    5. ',

' → logprob: -12.126419067382812
    6. ')' → logprob: -12.376419067382812
    7. '   ' → logprob: -14.376419067382812
    8. ' in' → logprob: -14.751419067382812
    9. ',)' → logprob: -14.751419067382812
    10. ' ' → logprob: -14.876419067382812

Token 152: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.16022484004497528
    2. ' dy' → logprob: -1.9102247953414917
    3. ' ' → logprob: -15.285224914550781
    4. '   ' → logprob: -15.785224914550781
    5. '    ' → logprob: -16.16022491455078
    6. '  ' → logprob: -16.53522491455078
    7. '.dy' → logprob: -16.66022491455078
    8. 'Dy' → logprob: -17.91022491455078
    9. 'py' → logprob: -18.16022491455078
    10. ')' → logprob: -18.78522491455078

Token 153: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002929174806922674
    2. '+' → logprob: -9.000292778015137
    3. ' +' → logprob: -9.125292778015137
    4. 'y' → logprob: -10.625292778015137
    5. ' )' → logprob: -11.125292778015137
    6. ')y' → logprob: -12.500292778015137
    7. ')
' → logprob: -12.750292778015137
    8. '))' → logprob: -12.875292778015137
    9. '),' → logprob: -13.375292778015137
    10. ')>' → logprob: -13.500292778015137

Token 154: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.0067154900170862675
    2. ' vy' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.381715774536133
    4. 'wy' → logprob: -17.881715774536133
    5. '    ' → logprob: -18.131715774536133
    6. 'uy' → logprob: -18.506715774536133
    7. 'vx' → logprob: -18.756715774536133
    8. 'Vy' → logprob: -18.756715774536133
    9. '  ' → logprob: -18.881715774536133
    10. 'vz' → logprob: -19.006715774536133

Token 155: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020747410599142313
    2. ' )' → logprob: -8.875207901000977
    3. 'in' → logprob: -10.250207901000977
    4. ' in' → logprob: -10.375207901000977
    5. ' ' → logprob: -15.125207901000977
    6. '   ' → logprob: -15.750207901000977
    7. 'not' → logprob: -16.375207901000977
    8. '）' → logprob: -16.375207901000977
    9. '  ' → logprob: -16.625207901000977
    10. '
' → logprob: -16.625207901000977

Token 156: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11396250128746033
    2. 'in' → logprob: -2.238962411880493
    3. ')' → logprob: -6.863962650299072
    4. 'not' → logprob: -10.488962173461914
    5. ' not' → logprob: -10.738962173461914
    6. '
' → logprob: -10.863962173461914
    7. ' ' → logprob: -11.363962173461914
    8. ' )' → logprob: -12.488962173461914
    9. '   ' → logprob: -12.988962173461914
    10. '    ' → logprob: -13.613962173461914

Token 157: ' photo' (ID: 8767)
  Prédit: 'photo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'photo' → logprob: -0.5759572982788086
    2. ' photo' → logprob: -0.8259572982788086
    3. 'phot' → logprob: -11.450957298278809
    4. '   ' → logprob: -12.700957298278809
    5. '(photo' → logprob: -14.075957298278809
    6. ' ' → logprob: -14.200957298278809
    7. 'Photo' → logprob: -14.200957298278809
    8. 'photos' → logprob: -14.575957298278809
    9. '.photo' → logprob: -14.950957298278809
    10. ' phot' → logprob: -15.075957298278809

Token 158: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -8.911954500945285e-05
    2. ')' → logprob: -9.750088691711426
    3. 'dict' → logprob: -10.625088691711426
    4. '_set' → logprob: -12.250088691711426
    5. ' )' → logprob: -15.125088691711426
    6. '   ' → logprob: -15.500088691711426
    7. '
' → logprob: -16.000089645385742
    8. 'for' → logprob: -16.000089645385742
    9. '_DICT' → logprob: -16.000089645385742
    10. '_dic' → logprob: -16.625089645385742

Token 159: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01335491705685854
    2. 'for' → logprob: -4.888354778289795
    3. ')' → logprob: -5.888354778289795
    4. '   ' → logprob: -6.638354778289795
    5. '       ' → logprob: -7.138354778289795
    6. ' ' → logprob: -8.013355255126953
    7. '    ' → logprob: -8.388355255126953
    8. ' )' → logprob: -9.888355255126953
    9. '	for' → logprob: -9.888355255126953
    10. '  ' → logprob: -10.013355255126953

Token 160: ' vx' (ID: 93588)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6267625689506531
    2. 'c' → logprob: -1.0017626285552979
    3. ' (' → logprob: -3.251762628555298
    4. ' ' → logprob: -4.001762390136719
    5. '[(' → logprob: -4.001762390136719
    6. '(c' → logprob: -4.251762390136719
    7. ' [(' → logprob: -5.751762390136719
    8. '(' → logprob: -6.001762390136719
    9. '   ' → logprob: -6.251762390136719
    10. '  ' → logprob: -8.126762390136719

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019150081789121032
    2. ' ,' → logprob: -8.625191688537598
    3. ',y' → logprob: -11.875191688537598
    4. ',v' → logprob: -12.750191688537598
    5. ',d' → logprob: -13.875191688537598
    6. ',
' → logprob: -14.625191688537598
    7. '‌,' → logprob: -15.125191688537598
    8. '<|end|>' → logprob: -16.00019073486328
    9. ',

' → logprob: -17.25019073486328
    10. '_,' → logprob: -17.25019073486328

Token 162: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.06650098413228989
    2. 'c' → logprob: -2.9415009021759033
    3. ' c' → logprob: -5.441501140594482
    4. 'dy' → logprob: -5.566501140594482
    5. ' vy' → logprob: -6.191501140594482
    6. ' ' → logprob: -7.566501140594482
    7. ' dy' → logprob: -8.441500663757324
    8. '   ' → logprob: -8.691500663757324
    9. 'cy' → logprob: -8.941500663757324
    10. '    ' → logprob: -9.441500663757324

Token 163: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012558624148368835
    2. 'in' → logprob: -4.387558460235596
    3. ')' → logprob: -10.887558937072754
    4. ' c' → logprob: -11.637558937072754
    5. 'c' → logprob: -12.137558937072754
    6. ' ' → logprob: -12.512558937072754
    7. '   ' → logprob: -12.762558937072754
    8. '<|end|>' → logprob: -13.137558937072754
    9. '    ' → logprob: -13.262558937072754
    10. ',' → logprob: -13.387558937072754

Token 164: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00033546582562848926
    2. ' c' → logprob: -8.000335693359375
    3. ')c' → logprob: -17.125335693359375
    4. '	c' → logprob: -19.625335693359375
    5. '   ' → logprob: -20.500335693359375
    6. ' ' → logprob: -21.375335693359375
    7. '[c' → logprob: -22.125335693359375
    8. '(c' → logprob: -22.250335693359375
    9. 'cation' → logprob: -22.250335693359375
    10. ')' → logprob: -22.500335693359375

Token 165: '_vectors' (ID: 129121)
  Prédit: '_vectors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vectors' → logprob: -7.226628895296017e-06
    2. 'vectors' → logprob: -11.875007629394531
    3. '_vector' → logprob: -15.750007629394531
    4. '_vect' → logprob: -17.75000762939453
    5. '_vec' → logprob: -17.87500762939453
    6. ' vectors' → logprob: -17.87500762939453
    7. 'Vectors' → logprob: -18.50000762939453
    8. '_' → logprob: -18.62500762939453
    9. 'ectors' → logprob: -18.75000762939453
    10. 'vector' → logprob: -18.75000762939453

Token 166: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13008125126361847
    2. '):
' → logprob: -2.1300811767578125
    3. ')' → logprob: -5.8800811767578125
    4. '       ' → logprob: -8.755081176757812
    5. ' ):' → logprob: -9.255081176757812
    6. '   ' → logprob: -9.630081176757812
    7. '):
' → logprob: -11.130081176757812
    8. ' ):
' → logprob: -11.880081176757812
    9. ':' → logprob: -12.255081176757812
    10. '):

' → logprob: -12.380081176757812

Token 167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006244207266718149
    2. '       ' → logprob: -5.50624418258667
    3. 'print' → logprob: -6.88124418258667
    4. '
' → logprob: -7.63124418258667
    5. ':
' → logprob: -8.506244659423828
    6. ':' → logprob: -8.631244659423828
    7. ' print' → logprob: -8.756244659423828
    8. '            
' → logprob: -10.131244659423828
    9. '        
' → logprob: -11.256244659423828
    10. '	       ' → logprob: -11.506244659423828

Token 168: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.000249061529757455
    2. ' print' → logprob: -8.375248908996582
    3. '   ' → logprob: -11.375248908996582
    4. '           ' → logprob: -12.125248908996582
    5. '       ' → logprob: -13.500248908996582
    6. '```' → logprob: -16.0002498626709
    7. 'break' → logprob: -16.1252498626709
    8. '
' → logprob: -17.0002498626709
    9. '               ' → logprob: -17.7502498626709
    10. '	print' → logprob: -18.0002498626709

Token 169: '(dx' (ID: 124932)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5038695931434631
    2. '(px' → logprob: -1.7538695335388184
    3. '"' → logprob: -1.8788695335388184
    4. '(' → logprob: -3.1288695335388184
    5. '('' → logprob: -4.003869533538818
    6. ''' → logprob: -6.378869533538818
    7. '(py' → logprob: -6.628869533538818
    8. 'px' → logprob: -6.753869533538818
    9. '(p' → logprob: -7.253869533538818
    10. '(True' → logprob: -7.628869533538818

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005863255355507135
    2. ')' → logprob: -5.755863189697266
    3. ' ,' → logprob: -6.005863189697266
    4. ' dy' → logprob: -9.130863189697266
    5. 'dy' → logprob: -10.505863189697266
    6. ' )' → logprob: -10.505863189697266
    7. ',
' → logprob: -10.505863189697266
    8. ' ' → logprob: -11.505863189697266
    9. '+' → logprob: -12.505863189697266
    10. '*' → logprob: -13.130863189697266

Token 171: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0009115827269852161
    2. ' dy' → logprob: -7.000911712646484
    3. '.dy' → logprob: -18.500911712646484
    4. ' ' → logprob: -18.875911712646484
    5. '   ' → logprob: -19.625911712646484
    6. ' 
' → logprob: -19.875911712646484
    7. '
' → logprob: -20.125911712646484
    8. 'dx' → logprob: -20.125911712646484
    9. 'd' → logprob: -20.250911712646484
    10. '    ' → logprob: -20.625911712646484

Token 172: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1431196928024292
    2. ')' → logprob: -2.0181198120117188
    3. '           ' → logprob: -8.018119812011719
    4. '       ' → logprob: -9.643119812011719
    5. ')
' → logprob: -10.393119812011719
    6. ' )
' → logprob: -11.768119812011719
    7. '   ' → logprob: -12.018119812011719
    8. ' )' → logprob: -13.643119812011719
    9. ')

' → logprob: -13.643119812011719
    10. '               ' → logprob: -13.768119812011719

Token 173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31525593996047974
    2. '<|end|>' → logprob: -1.315255880355835
    3. '<|end|>' → logprob: -6.815256118774414
    4. '       ' → logprob: -7.565256118774414
    5. '   ' → logprob: -9.190256118774414
    6. '#' → logprob: -9.690256118774414
    7. ' ' → logprob: -10.190256118774414
    8. '```' → logprob: -10.190256118774414
    9. '            ' → logprob: -10.690256118774414
    10. 'break' → logprob: -11.065256118774414

Token 174: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015168882673606277
    2. 'break' (adapté à ' break') → logprob: -6.751516819000244
    3. ' break' → logprob: -8.001517295837402
    4. '       ' → logprob: -12.626517295837402
    5. '	break' → logprob: -12.751517295837402
    6. '   ' → logprob: -13.126517295837402
    7. '<|end|>' → logprob: -13.751517295837402
    8. '               ' → logprob: -14.251517295837402
    9. '```' → logprob: -14.876517295837402
    10. '		' → logprob: -15.126517295837402


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 172
Tokens correctement prédits (1ère position, stricte): 90
Tokens correctement prédits (1ère position, avec adaptation): 91
Tokens correctement prédits (top 10): 149
Précision stricte (1ère position): 52.33%
Précision adaptée (1ère position): 52.91%
Précision (top 10): 86.63%
================================================================================
