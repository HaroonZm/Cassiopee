================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    try:
        d = int(input())
        s = 0
        n = 600 // d
        for i in range(1, n + 1):
            height = (i * d) ** 2
            area = height * d
            s += area
        print(s)
    except:
        break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06445569545030594
    2. '\n' → logprob: -4.314455509185791
    3. ' ' → logprob: -4.689455509185791
    4. '```' → logprob: -4.814455509185791
    5. '    
' → logprob: -4.939455509185791
    6. ' 
' → logprob: -5.189455509185791
    7. '\' → logprob: -5.314455509185791
    8. '    ' → logprob: -5.439455509185791
    9. ':' → logprob: -5.939455509185791
    10. '<|end|>' → logprob: -6.189455509185791

Token 4: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005376627668738365
    2. ' :' → logprob: -7.625537872314453
    3. ':
' → logprob: -11.125537872314453
    4. '   ' → logprob: -11.250537872314453
    5. '       ' → logprob: -11.625537872314453
    6. '):' → logprob: -12.625537872314453
    7. '    ' → logprob: -12.875537872314453
    8. '():' → logprob: -13.125537872314453
    9. '':' → logprob: -14.375537872314453
    10. ' ' → logprob: -14.875537872314453

Token 6: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03364270180463791
    2. ':' → logprob: -3.6586427688598633
    3. '   ' → logprob: -5.033642768859863
    4. '    ' → logprob: -8.158642768859863
    5. ' :' → logprob: -8.283642768859863
    6. ':
' → logprob: -9.908642768859863
    7. ' ' → logprob: -9.908642768859863
    8. '      ' → logprob: -10.533642768859863
    9. '     ' → logprob: -10.783642768859863
    10. '        ' → logprob: -10.908642768859863

Token 7: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048394642770290375
    2. 'input' → logprob: -4.298394680023193
    3. '       ' → logprob: -4.673394680023193
    4. '   ' → logprob: -5.048394680023193
    5. 'response' → logprob: -5.423394680023193
    6. 'data' → logprob: -6.173394680023193
    7. 'print' → logprob: -6.298394680023193
    8. '               ' → logprob: -6.298394680023193
    9. 'value' → logprob: -6.548394680023193
    10. ' ' → logprob: -7.673394680023193

Token 8: ' =' (ID: 314)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.6414145231246948
    2. 'a' → logprob: -1.2664145231246948
    3. '=' → logprob: -2.1414146423339844
    4. ' =' → logprob: -3.3914146423339844
    5. 'e' → logprob: -3.6414146423339844
    6. 'ict' → logprob: -5.641414642333984
    7. '   ' → logprob: -5.891414642333984
    8. '.' → logprob: -6.766414642333984
    9. 'atas' → logprob: -7.141414642333984
    10. 'atetime' → logprob: -7.391414642333984

Token 9: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.0059895515441895
    2. 'int' → logprob: -1.3809895515441895
    3. 'input' → logprob: -2.2559895515441895
    4. ' input' → logprob: -2.8809895515441895
    5. ' open' → logprob: -3.3809895515441895
    6. 'json' → logprob: -3.3809895515441895
    7. ' json' → logprob: -3.5059895515441895
    8. 'open' → logprob: -3.7559895515441895
    9. 'dict' → logprob: -3.7559895515441895
    10. ' dict' → logprob: -3.8809895515441895

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47414630651474
    2. '(input' → logprob: -0.97414630651474
    3. 'input' → logprob: -11.099145889282227
    4. '(user' → logprob: -11.099145889282227
    5. '('' → logprob: -11.849145889282227
    6. '(
' → logprob: -11.849145889282227
    7. ' (' → logprob: -11.849145889282227
    8. '(raw' → logprob: -12.974145889282227
    9. '(open' → logprob: -13.224145889282227
    10. '(eval' → logprob: -13.849145889282227

Token 11: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.043733276426792145
    2. '('' → logprob: -3.6687333583831787
    3. '()' → logprob: -4.5437331199646
    4. '("("' → logprob: -5.6687331199646
    5. '(""))' → logprob: -6.6687331199646
    6. ')' → logprob: -7.2937331199646
    7. '())' → logprob: -7.7937331199646
    8. '("")' → logprob: -8.168733596801758
    9. '(
' → logprob: -9.043733596801758
    10. '(()' → logprob: -9.543733596801758

Token 12: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013336936011910439
    2. '       ' → logprob: -4.513337135314941
    3. '   ' → logprob: -7.138337135314941
    4. '\n' → logprob: -7.888337135314941
    5. '\' → logprob: -8.888337135314941
    6. '           ' → logprob: -9.013337135314941
    7. '<|end|>' → logprob: -9.263337135314941
    8. ':' → logprob: -9.513337135314941
    9. '```' → logprob: -9.513337135314941
    10. '()' → logprob: -9.763337135314941

Token 13: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08724222332239151
    2. ')' → logprob: -2.5872421264648438
    3. '           ' → logprob: -6.087242126464844
    4. '   ' → logprob: -6.462242126464844
    5. ' if' → logprob: -7.087242126464844
    6. ')
' → logprob: -7.462242126464844
    7. '.' → logprob: -7.712242126464844
    8. '```' → logprob: -7.962242126464844
    9. '\n' → logprob: -8.337242126464844
    10. '        
' → logprob: -8.462242126464844

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.539709746837616
    2. 'tr' → logprob: -1.0397098064422607
    3. '=' → logprob: -3.4147098064422607
    4. 'um' → logprob: -4.914709568023682
    5. '[' → logprob: -5.289709568023682
    6. ' +=' → logprob: -5.289709568023682
    7. 'trip' → logprob: -5.914709568023682
    8. '.' → logprob: -5.914709568023682
    9. '+=' → logprob: -6.789709568023682
    10. 'tring' → logprob: -7.164709568023682

Token 15: ' ' (ID: 220)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2526327967643738
    2. 'input' → logprob: -1.5026328563690186
    3. ' str' → logprob: -8.002633094787598
    4. 'str' → logprob: -8.377633094787598
    5. ' ' → logprob: -9.627633094787598
    6. '=input' → logprob: -11.752633094787598
    7. '	input' → logprob: -11.877633094787598
    8. ' int' → logprob: -12.127633094787598
    9. ''' → logprob: -12.252633094787598
    10. '""' → logprob: -12.252633094787598

Token 16: '0' (ID: 15)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004827988334000111
    2. 'str' → logprob: -5.504827976226807
    3. ' input' → logprob: -7.629827976226807
    4. 'int' → logprob: -8.754828453063965
    5. '""' → logprob: -10.254828453063965
    6. '0' → logprob: -11.504828453063965
    7. 'list' → logprob: -11.879828453063965
    8. 'float' → logprob: -12.129828453063965
    9. '(input' → logprob: -12.129828453063965
    10. 'sum' → logprob: -12.129828453063965

Token 17: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6644091010093689
    2. '       ' → logprob: -1.2894091606140137
    3. '<|end|>' → logprob: -1.6644091606140137
    4. '<|end|>' → logprob: -5.164409160614014
    5. ')' → logprob: -5.289409160614014
    6. ' +' → logprob: -6.039409160614014
    7. '   ' → logprob: -6.164409160614014
    8. ' ' → logprob: -6.539409160614014
    9. '        ' → logprob: -7.789409160614014
    10. '    ' → logprob: -8.039408683776855

Token 18: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14160864055156708
    2. '<|end|>' → logprob: -2.641608715057373
    3. '+' → logprob: -3.266608715057373
    4. ')' → logprob: -4.516608715057373
    5. '   ' → logprob: -5.641608715057373
    6. '<|end|>' → logprob: -5.891608715057373
    7. ' +' → logprob: -6.516608715057373
    8. ' ' → logprob: -7.641608715057373
    9. '
' → logprob: -8.016608238220215
    10. ',' → logprob: -8.141608238220215

Token 19: ' n' (ID: 297)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39306318759918213
    2. 'for' → logprob: -1.1430631875991821
    3. ' ' → logprob: -6.143063068389893
    4. '+' → logprob: -6.393063068389893
    5. '   ' → logprob: -7.643063068389893
    6. '    ' → logprob: -8.01806354522705
    7. '       ' → logprob: -8.01806354522705
    8. 'd' → logprob: -8.39306354522705
    9. '=' → logprob: -8.39306354522705
    10. ')' → logprob: -8.76806354522705

Token 20: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5308639407157898
    2. ' =' → logprob: -0.9058639407157898
    3. ' +=' → logprob: -5.9058637619018555
    4. '+=' → logprob: -6.0308637619018555
    5. '+' → logprob: -6.5308637619018555
    6. ' ' → logprob: -7.0308637619018555
    7. ' -=' → logprob: -9.905863761901855
    8. 'o' → logprob: -10.780863761901855
    9. '-' → logprob: -10.905863761901855
    10. '  ' → logprob: -11.030863761901855

Token 21: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.35743248462677
    2. ' d' → logprob: -1.85743248462677
    3. '1' → logprob: -2.6074323654174805
    4. ' ' → logprob: -3.4824323654174805
    5. '0' → logprob: -3.6074323654174805
    6. '10' → logprob: -5.1074323654174805
    7. '100' → logprob: -5.3574323654174805
    8. '2' → logprob: -7.2324323654174805
    9. '5' → logprob: -8.10743236541748
    10. 'int' → logprob: -8.73243236541748

Token 22: '600' (ID: 6718)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07811634242534637
    2. '1' → logprob: -2.9531164169311523
    3. '0' → logprob: -4.828116416931152
    4. '2' → logprob: -5.453116416931152
    5. 'int' → logprob: -5.453116416931152
    6. '10' → logprob: -5.953116416931152
    7. '100' → logprob: -6.078116416931152
    8. '5' → logprob: -8.203116416931152
    9. '3' → logprob: -8.328116416931152
    10. 'abs' → logprob: -8.578116416931152

Token 23: ' //' (ID: 602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00023977462842594832
    2. ' d' → logprob: -8.500239372253418
    3. '60' → logprob: -11.750239372253418
    4. ' ' → logprob: -12.125239372253418
    5. '600' → logprob: -12.750239372253418
    6. '100' → logprob: -12.875239372253418
    7. '   ' → logprob: -13.000239372253418
    8. '  ' → logprob: -13.000239372253418
    9. '(d' → logprob: -13.250239372253418
    10. '50' → logprob: -13.875239372253418

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1244758367538452
    2. 's' → logprob: -1.4994758367538452
    3. 'for' (adapté à ' for') → logprob: -1.4994758367538452
    4. ' for' → logprob: -1.8744758367538452
    5. ' ' → logprob: -3.4994759559631348
    6. ' s' → logprob: -3.9994759559631348
    7. '        ' → logprob: -4.999475955963135
    8. '<|end|>' → logprob: -5.374475955963135
    9. 'n' → logprob: -5.499475955963135
    10. '    ' → logprob: -5.624475955963135

Token 28: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06465394794940948
    2. 'i' → logprob: -2.8146538734436035
    3. '_' → logprob: -6.6896538734436035
    4. ' _' → logprob: -6.9396538734436035
    5. ' ' → logprob: -7.6896538734436035
    6. '_i' → logprob: -12.064654350280762
    7. ' ' → logprob: -13.439654350280762
    8. '	i' → logprob: -13.814654350280762
    9. '  ' → logprob: -14.064654350280762
    10. '   ' → logprob: -14.439654350280762

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020915772765874863
    2. 'in' → logprob: -3.8959157466888428
    3. ' ' → logprob: -8.020915985107422
    4. 'range' → logprob: -11.645915985107422
    5. ' i' → logprob: -12.645915985107422
    6. '1' → logprob: -12.645915985107422
    7. 'd' → logprob: -12.895915985107422
    8. '0' → logprob: -12.895915985107422
    9. '_' → logprob: -13.020915985107422
    10. ',' → logprob: -13.020915985107422

Token 30: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.007621064782142639
    2. 'range' → logprob: -4.8826212882995605
    3. ' ' → logprob: -11.882620811462402
    4. '	range' → logprob: -12.382620811462402
    5. ' ' → logprob: -14.132620811462402
    6. '(range' → logprob: -14.257620811462402
    7. ' xrange' → logprob: -14.507620811462402
    8. '  ' → logprob: -14.757620811462402
    9. '   ' → logprob: -15.632620811462402
    10. '[' → logprob: -15.695120811462402

Token 31: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014286909252405167
    2. '(n' → logprob: -4.889286994934082
    3. ' (' → logprob: -5.014286994934082
    4. ' ' → logprob: -12.389286994934082
    5. '(i' → logprob: -12.514286994934082
    6. '(s' → logprob: -12.889286994934082
    7. ' n' → logprob: -13.389286994934082
    8. '(d' → logprob: -13.514286994934082
    9. '1' → logprob: -13.639286994934082
    10. '(
' → logprob: -14.889286994934082

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.637169599533081
    2. 'n' → logprob: -0.762169599533081
    3. ' n' → logprob: -5.51216983795166
    4. ' ' → logprob: -8.01216983795166
    5. '0' → logprob: -9.13716983795166
    6. '2' → logprob: -10.88716983795166
    7. '   ' → logprob: -11.26216983795166
    8. '6' → logprob: -11.63716983795166
    9. '10' → logprob: -11.76216983795166
    10. '	n' → logprob: -12.01216983795166

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05500933155417442
    2. ' ,' → logprob: -3.180009365081787
    3. ',n' → logprob: -4.430009365081787
    4. 'n' → logprob: -11.180008888244629
    5. ' n' → logprob: -12.680008888244629
    6. ' ' → logprob: -13.680008888244629
    7. ',
' → logprob: -13.805008888244629
    8. '(n' → logprob: -13.805008888244629
    9. ',d' → logprob: -14.805008888244629
    10. '+' → logprob: -14.930008888244629

Token 34: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25193363428115845
    2. ' n' → logprob: -1.5019335746765137
    3. '	n' → logprob: -13.876934051513672
    4. '600' → logprob: -14.001934051513672
    5. ' ' → logprob: -14.251934051513672
    6. '    ' → logprob: -14.376934051513672
    7. '+n' → logprob: -15.501934051513672
    8. '6' → logprob: -15.626934051513672
    9. ')n' → logprob: -16.001934051513672
    10. '=n' → logprob: -16.251934051513672

Token 35: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11283348500728607
    2. ' +' → logprob: -2.2378334999084473
    3. ' ' → logprob: -12.112833023071289
    4. '   ' → logprob: -13.862833023071289
    5. ',' → logprob: -14.362833023071289
    6. '1' → logprob: -14.612833023071289
    7. '**' → logprob: -14.987833023071289
    8. '+i' → logprob: -15.112833023071289
    9. '):
' → logprob: -15.362833023071289
    10. '*' → logprob: -15.487833023071289

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026303084567189217
    2. ' ' → logprob: -3.6513030529022217
    3. '2' → logprob: -13.1513032913208
    4. '   ' → logprob: -14.5263032913208
    5. '  ' → logprob: -16.276302337646484
    6. ' ' → logprob: -16.588802337646484
    7. '```' → logprob: -17.026302337646484
    8. '    ' → logprob: -17.776302337646484
    9. '

' → logprob: -18.026302337646484
    10. ')' → logprob: -18.151302337646484

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026217024424113333
    2. ' ' → logprob: -8.250262260437012
    3. '2' → logprob: -15.000262260437012
    4. '   ' → logprob: -15.250262260437012
    5. '  ' → logprob: -16.562761306762695
    6. '0' → logprob: -17.687761306762695
    7. ' ' → logprob: -17.812761306762695
    8. '```' → logprob: -17.875261306762695
    9. '    ' → logprob: -17.937761306762695
    10. ')' → logprob: -18.000261306762695

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024591119959950447
    2. ':' → logprob: -3.8995912075042725
    3. '):
' → logprob: -5.774590969085693
    4. ',' → logprob: -7.399590969085693
    5. ' ):' → logprob: -8.774591445922852
    6. ')' → logprob: -9.774591445922852
    7. '*' → logprob: -10.149591445922852
    8. '+' → logprob: -10.899591445922852
    9. ' :' → logprob: -11.649591445922852
    10. ':
' → logprob: -11.649591445922852

Token 39: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.947618842124939
    2. 's' → logprob: -1.322618842124939
    3. ' s' → logprob: -2.6976189613342285
    4. '       ' → logprob: -2.6976189613342285
    5. '<|end|>' → logprob: -2.6976189613342285
    6. '        ' → logprob: -3.0726189613342285
    7. ':' → logprob: -3.6976189613342285
    8. '+' → logprob: -3.8226189613342285
    9. '    ' → logprob: -4.0726189613342285
    10. ' i' → logprob: -5.4476189613342285

Token 40: ' height' (ID: 4679)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2952765226364136
    2. ' s' → logprob: -1.4202765226364136
    3. 's' → logprob: -5.170276641845703
    4. '       ' → logprob: -6.170276641845703
    5. ' 
' → logprob: -6.295276641845703
    6. '<|end|>' → logprob: -6.795276641845703
    7. ' if' → logprob: -6.920276641845703
    8. '    ' → logprob: -7.420276641845703
    9. '           ' → logprob: -7.795276641845703
    10. '        ' → logprob: -7.920276641845703

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4753735661506653
    2. '=' → logprob: -0.9753735661506653
    3. ' +=' → logprob: -7.3503737449646
    4. 's' → logprob: -8.225373268127441
    5. '+=' → logprob: -9.100373268127441
    6. '=i' → logprob: -9.850373268127441
    7. ' *=' → logprob: -10.100373268127441
    8. ',' → logprob: -10.225373268127441
    9. ' ' → logprob: -10.350373268127441
    10. '   ' → logprob: -10.975373268127441

Token 42: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.243691325187683
    2. ' i' → logprob: -1.368691325187683
    3. 'd' → logprob: -1.743691325187683
    4. ' d' → logprob: -2.2436914443969727
    5. ' ' → logprob: -3.4936914443969727
    6. ' (' → logprob: -3.8686914443969727
    7. '(i' → logprob: -3.8686914443969727
    8. '2' → logprob: -3.9936914443969727
    9. '600' → logprob: -4.618691444396973
    10. 'int' → logprob: -4.868691444396973

Token 43: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7582761645317078
    2. 'd' → logprob: -1.2582762241363525
    3. '2' → logprob: -2.5082762241363525
    4. '600' → logprob: -3.8832762241363525
    5. '(i' → logprob: -4.258275985717773
    6. '300' → logprob: -4.508275985717773
    7. '4' → logprob: -4.633275985717773
    8. '3' → logprob: -4.633275985717773
    9. ' i' → logprob: -4.758275985717773
    10. '(' → logprob: -4.758275985717773

Token 44: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5207815170288086
    2. '*' → logprob: -1.0207815170288086
    3. '**' → logprob: -3.5207815170288086
    4. ' **' → logprob: -4.645781517028809
    5. ')' → logprob: -6.645781517028809
    6. '*d' → logprob: -6.770781517028809
    7. '+' → logprob: -7.020781517028809
    8. '-' → logprob: -7.270781517028809
    9. '*i' → logprob: -7.270781517028809
    10. ')**' → logprob: -7.645781517028809

Token 45: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18064159154891968
    2. ' d' → logprob: -2.5556416511535645
    3. '2' → logprob: -3.6806416511535645
    4. ' (' → logprob: -3.9306416511535645
    5. '(i' → logprob: -4.9306416511535645
    6. ' ' → logprob: -5.0556416511535645
    7. '(d' → logprob: -5.1806416511535645
    8. 'i' → logprob: -5.4306416511535645
    9. '(' → logprob: -5.5556416511535645
    10. ' i' → logprob: -5.9306416511535645

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22428551316261292
    2. ')**' → logprob: -1.7242854833602905
    3. ' )' → logprob: -4.34928560256958
    4. '*' → logprob: -5.59928560256958
    5. '-' → logprob: -6.72428560256958
    6. ' -' → logprob: -6.97428560256958
    7. ')*' → logprob: -6.97428560256958
    8. ' *' → logprob: -7.09928560256958
    9. ')*(' → logprob: -7.47428560256958
    10. '+' → logprob: -7.59928560256958

Token 47: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.42052921652793884
    2. ' *' → logprob: -1.6705292463302612
    3. '*' → logprob: -2.2955291271209717
    4. ' **' → logprob: -3.5455291271209717
    5. ')' → logprob: -5.420529365539551
    6. '*i' → logprob: -5.420529365539551
    7. '<|end|>' → logprob: -5.795529365539551
    8. '-' → logprob: -5.795529365539551
    9. ' ' → logprob: -6.420529365539551
    10. ' -' → logprob: -6.545529365539551

Token 48: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04342685639858246
    2. ' ' → logprob: -3.168426752090454
    3. '3' → logprob: -8.043426513671875
    4. '0' → logprob: -9.668426513671875
    5. '1' → logprob: -10.793426513671875
    6. '```' → logprob: -12.543426513671875
    7. ' ' → logprob: -12.668426513671875
    8. '**' → logprob: -12.855926513671875
    9. '  ' → logprob: -13.418426513671875
    10. '(' → logprob: -13.668426513671875

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0016883930657058954
    2. '3' → logprob: -7.501688480377197
    3. '0' → logprob: -7.501688480377197
    4. ' ' → logprob: -7.626688480377197
    5. '1' → logprob: -9.626688003540039
    6. '**' → logprob: -12.689188003540039
    7. '   ' → logprob: -12.814188003540039
    8. '-' → logprob: -12.814188003540039
    9. '```' → logprob: -12.876688003540039
    10. '  ' → logprob: -12.876688003540039

Token 50: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4065811038017273
    2. '<|end|>' → logprob: -1.906581163406372
    3. '+' → logprob: -2.156581163406372
    4. ' +' → logprob: -4.031580924987793
    5. ')' → logprob: -4.156580924987793
    6. '
' → logprob: -4.156580924987793
    7. '       ' → logprob: -5.031580924987793
    8. ' ' → logprob: -5.656580924987793
    9. '<|end|>' → logprob: -6.281580924987793
    10. '               ' → logprob: -6.656580924987793

Token 51: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' area' (ID: 3624)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4935084879398346
    2. '           ' → logprob: -1.4935084581375122
    3. ' s' → logprob: -2.1185085773468018
    4. ' ' → logprob: -3.6185085773468018
    5. '<|end|>' → logprob: -4.743508338928223
    6. ' 
' → logprob: -6.243508338928223
    7. '+' → logprob: -6.368508338928223
    8. ' +' → logprob: -6.368508338928223
    9. '       ' → logprob: -6.993508338928223
    10. ')' → logprob: -7.618508338928223

Token 53: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.031077802181243896
    2. ' =' → logprob: -4.156077861785889
    3. '+=' → logprob: -4.281077861785889
    4. '=' → logprob: -7.031077861785889
    5. '   ' → logprob: -9.15607738494873
    6. ' ' → logprob: -10.40607738494873
    7. 's' → logprob: -10.90607738494873
    8. '+' → logprob: -10.90607738494873
    9. ' +' → logprob: -11.53107738494873
    10. '<|end|>' → logprob: -11.53107738494873

Token 54: ' height' (ID: 4679)
  Prédit: ' height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.8456798195838928
    2. ' ' → logprob: -1.470679759979248
    3. ' (' → logprob: -1.595679759979248
    4. 'height' → logprob: -2.595679759979248
    5. '2' → logprob: -4.345679759979248
    6. ' i' → logprob: -4.345679759979248
    7. ' d' → logprob: -5.095679759979248
    8. '(height' → logprob: -5.095679759979248
    9. '3' → logprob: -5.345679759979248
    10. '(' → logprob: -5.595679759979248

Token 55: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.008352513425052166
    2. '*' → logprob: -5.258352279663086
    3. ' **' → logprob: -7.258352279663086
    4. '<|end|>' → logprob: -7.258352279663086
    5. ' ' → logprob: -7.758352279663086
    6. ' /' → logprob: -8.008352279663086
    7. '   ' → logprob: -8.008352279663086
    8. '**' → logprob: -8.633352279663086
    9. ' -' → logprob: -8.883352279663086
    10. ' //' → logprob: -9.883352279663086

Token 56: ' d' (ID: 272)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6124716401100159
    2. ' ' → logprob: -1.737471580505371
    3. 'd' → logprob: -2.487471580505371
    4. '3' → logprob: -2.612471580505371
    5. '0' → logprob: -3.862471580505371
    6. 'i' → logprob: -3.862471580505371
    7. '4' → logprob: -4.237471580505371
    8. '(' → logprob: -4.237471580505371
    9. '6' → logprob: -4.362471580505371
    10. ' d' → logprob: -4.487471580505371

Token 57: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04852218180894852
    2. '
' → logprob: -3.5485222339630127
    3. '<|end|>' → logprob: -5.048521995544434
    4. '+' → logprob: -5.298521995544434
    5. '
' → logprob: -6.048521995544434
    6. ' +' → logprob: -6.298521995544434
    7. ' 
' → logprob: -7.173521995544434
    8. ' ' → logprob: -7.548521995544434
    9. '            
' → logprob: -8.298521995544434
    10. '       ' → logprob: -8.548521995544434

Token 58: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02184252440929413
    2. '
' → logprob: -4.5218424797058105
    3. '<|end|>' → logprob: -4.8968424797058105
    4. 's' → logprob: -7.1468424797058105
    5. '            
' → logprob: -7.2718424797058105
    6. '+' → logprob: -7.8968424797058105
    7. '
' → logprob: -8.146842956542969
    8. ' 
' → logprob: -8.521842956542969
    9. '       ' → logprob: -9.021842956542969
    10. '<|end|>' → logprob: -9.396842956542969

Token 59: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.191768616437912
    2. '+' → logprob: -2.4417686462402344
    3. 's' (adapté à ' s') → logprob: -3.4417686462402344
    4. ' +' → logprob: -3.5667686462402344
    5. '+
' → logprob: -4.691768646240234
    6. ' +
' → logprob: -5.191768646240234
    7. ' ' → logprob: -5.316768646240234
    8. ' s' → logprob: -5.816768646240234
    9. '       ' → logprob: -6.316768646240234
    10. '<|end|>' → logprob: -7.191768646240234

Token 60: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5253307819366455
    2. '+=' → logprob: -0.9003307819366455
    3. '+' → logprob: -6.150330543518066
    4. '=' → logprob: -10.275330543518066
    5. '<|end|>' → logprob: -11.150330543518066
    6. ' +' → logprob: -11.400330543518066
    7. ' =' → logprob: -12.650330543518066
    8. ']+=' → logprob: -12.900330543518066
    9. '+='' → logprob: -13.900330543518066
    10. '	' → logprob: -13.900330543518066

Token 61: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.06197071075439453
    2. ' area' → logprob: -2.8119707107543945
    3. '(area' → logprob: -13.811970710754395
    4. ' ' → logprob: -14.186970710754395
    5. 'height' → logprob: -14.311970710754395
    6. 's' → logprob: -16.061969757080078
    7. '2' → logprob: -16.561969757080078
    8. '1' → logprob: -16.686969757080078
    9. 'int' → logprob: -16.936969757080078
    10. '   ' → logprob: -16.936969757080078

Token 62: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010355738922953606
    2. '   ' → logprob: -4.7603559494018555
    3. '<|end|>' → logprob: -7.0103559494018555
    4. '
' → logprob: -8.135355949401855
    5. '           ' → logprob: -8.885355949401855
    6. ' except' → logprob: -9.135355949401855
    7. 'except' → logprob: -10.135355949401855
    8. '\n' → logprob: -10.135355949401855
    9. ',' → logprob: -10.385355949401855
    10. '<|end|>' → logprob: -10.385355949401855

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048384878784418106
    2. '   ' → logprob: -3.29838490486145
    3. '<|end|>' → logprob: -4.798384666442871
    4. '\n' → logprob: -7.298384666442871
    5. '
' → logprob: -7.548384666442871
    6. ' except' → logprob: -8.923384666442871
    7. '<|end|>' → logprob: -8.923384666442871
    8. '           ' → logprob: -9.298384666442871
    9. 'except' → logprob: -9.673384666442871
    10. ')' → logprob: -9.673384666442871

Token 64: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.644192636013031
    2. '       ' → logprob: -0.769192636013031
    3. 'print' (adapté à ' print') → logprob: -5.394192695617676
    4. ' except' → logprob: -6.269192695617676
    5. 'except' → logprob: -6.644192695617676
    6. '<|end|>' → logprob: -6.644192695617676
    7. '
' → logprob: -6.894192695617676
    8. ' print' → logprob: -7.769192695617676
    9. '    
' → logprob: -8.269192695617676
    10. '<|end|>' → logprob: -9.269192695617676

Token 65: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.38808271288871765
    2. '(' → logprob: -1.13808274269104
    3. '()' → logprob: -7.263082504272461
    4. ' (' → logprob: -8.388082504272461
    5. 's' → logprob: -9.013082504272461
    6. '('' → logprob: -9.263082504272461
    7. '(f' → logprob: -10.888082504272461
    8. '(round' → logprob: -11.138082504272461
    9. '("' → logprob: -11.263082504272461
    10. '((' → logprob: -12.138082504272461

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. '))' → logprob: -13.000004768371582
    3. ' )' → logprob: -14.000004768371582
    4. ')
' → logprob: -14.125004768371582
    5. ')))' → logprob: -15.625004768371582
    6. '`)' → logprob: -15.875004768371582
    7. '   ' → logprob: -15.875004768371582
    8. ')`' → logprob: -15.875004768371582
    9. '())' → logprob: -16.875003814697266
    10. ')}}' → logprob: -17.250003814697266

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32813677191734314
    2. 'except' → logprob: -1.5781368017196655
    3. ' except' → logprob: -2.703136682510376
    4. '	except' → logprob: -5.078136920928955
    5. '    
' → logprob: -10.203136444091797
    6. '   ' → logprob: -10.703136444091797
    7. '-ex' → logprob: -10.828136444091797
    8. 'ex' → logprob: -11.453136444091797
    9. ',' → logprob: -11.953136444091797
    10. '<|end|>' → logprob: -12.078136444091797

Token 68: ' except' (ID: 6384)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' (adapté à ' except') → logprob: -0.2855665683746338
    2. '   ' → logprob: -1.5355665683746338
    3. ' except' → logprob: -3.410566568374634
    4. '	except' → logprob: -9.910566329956055
    5. 'ex' → logprob: -13.160566329956055
    6. '    
' → logprob: -13.285566329956055
    7. ' ' → logprob: -14.035566329956055
    8. '       ' → logprob: -14.535566329956055
    9. '  ' → logprob: -15.035566329956055
    10. '   ' → logprob: -15.785566329956055

Token 69: ':
' (ID: 734)
  Prédit: ' EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.06619074195623398
    2. ' Value' → logprob: -3.566190719604492
    3. ' ' → logprob: -3.691190719604492
    4. ' Exception' → logprob: -4.816190719604492
    5. ' (' → logprob: -6.316190719604492
    6. 'EOF' → logprob: -7.941190719604492
    7. ' Keyboard' → logprob: -8.191190719604492
    8. ':' → logprob: -8.816190719604492
    9. ' ' → logprob: -9.941190719604492
    10. '(Value' → logprob: -10.316190719604492

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03954830393195152
    2. '   ' → logprob: -3.539548397064209
    3. ' break' → logprob: -4.914548397064209
    4. '<|end|>' → logprob: -6.789548397064209
    5. '	break' → logprob: -7.664548397064209
    6. '    ' → logprob: -7.664548397064209
    7. ' ' → logprob: -9.53954792022705
    8. '           ' → logprob: -10.16454792022705
    9. '<|end|>' → logprob: -10.28954792022705
    10. ' asyncio' → logprob: -10.66454792022705

Token 71: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.38705959916114807
    2. 'break' (adapté à ' break') → logprob: -1.1370595693588257
    3. '       ' → logprob: -9.137059211730957
    4. '   ' → logprob: -10.137059211730957
    5. '	break' → logprob: -10.137059211730957
    6. 'Break' → logprob: -14.512059211730957
    7. '_break' → logprob: -15.137059211730957
    8. 'b' → logprob: -15.387059211730957
    9. ' ' → logprob: -15.387059211730957
    10. '    ' → logprob: -15.637059211730957


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 54
Précision stricte (1ère position): 37.68%
Précision adaptée (1ère position): 39.13%
Précision (top 10): 78.26%
================================================================================
