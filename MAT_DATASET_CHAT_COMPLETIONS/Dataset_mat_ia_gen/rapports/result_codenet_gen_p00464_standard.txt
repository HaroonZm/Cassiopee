================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:28:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline

while True:
    H,W,N=map(int,input().split())
    if H==0 and W==0 and N==0:
        break
    A=[list(map(int,input().split())) for _ in range(H)]
    r,c=0,0
    for _ in range(N-1):
        if A[r][c]==1:
            c+=1
        else:
            r+=1
        if r>=H or c>=W:
            break
    while r<H and c<W:
        d=A[r][c]
        A[r][c]=1-d
        if d==1:
            c+=1
        else:
            r+=1
    print(r+1,c+1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048905275762081146
    2. '.' → logprob: -3.048905372619629
    3. ' (' → logprob: -9.298905372619629
    4. '(
' → logprob: -9.423905372619629
    5. ')' → logprob: -10.173905372619629
    6. '()' → logprob: -11.173905372619629
    7. '[' → logprob: -11.298905372619629
    8. ' ' → logprob: -11.423905372619629
    9. ''s' → logprob: -11.548905372619629
    10. '```' → logprob: -11.923905372619629

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00014537633978761733
    2. ' .' → logprob: -9.875144958496094
    3. '.
' → logprob: -10.250144958496094
    4. '.readline' → logprob: -10.500144958496094
    5. '[' → logprob: -11.375144958496094
    6. '.get' → logprob: -12.625144958496094
    7. '.stdin' → logprob: -12.875144958496094
    8. '```' → logprob: -13.375144958496094
    9. '.

' → logprob: -13.500144958496094
    10. '.setdefault' → logprob: -13.625144958496094

Token 6: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.25259676575660706
    2. '.' → logprob: -1.5025967359542847
    3. '.read' → logprob: -7.377596855163574
    4. ' readline' → logprob: -10.752596855163574
    5. '.Read' → logprob: -12.252596855163574
    6. 'read' → logprob: -12.252596855163574
    7. '.readlines' → logprob: -12.502596855163574
    8. '```' → logprob: -13.252596855163574
    9. '.

' → logprob: -13.877596855163574
    10. '<|end|>' → logprob: -13.877596855163574

Token 7: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024233611300587654
    2. '(' → logprob: -3.89923357963562
    3. '().' → logprob: -6.149233818054199
    4. '()
' → logprob: -7.149233818054199
    5. '(
' → logprob: -7.899233818054199
    6. '()\' → logprob: -9.0242338180542
    7. '()

' → logprob: -9.6492338180542
    8. '(

' → logprob: -10.0242338180542
    9. ' ()' → logprob: -10.1492338180542
    10. '
' → logprob: -10.7742338180542

Token 8: 'while' (ID: 7032)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5234960913658142
    2. '()' → logprob: -0.8984960913658142
    3. '().' → logprob: -9.0234956741333
    4. '(
' → logprob: -9.2734956741333
    5. '()
' → logprob: -9.7734956741333
    6. ')' → logprob: -10.3984956741333
    7. '()

' → logprob: -11.3984956741333
    8. '.' → logprob: -12.0234956741333
    9. 'def' → logprob: -12.1484956741333
    10. '#' → logprob: -12.2734956741333

Token 9: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016061515780165792
    2. ' True' → logprob: -7.126605987548828
    3. '  ' → logprob: -7.626605987548828
    4. ' (' → logprob: -9.126605987548828
    5. '(' → logprob: -9.501605987548828
    6. '"' → logprob: -10.376605987548828
    7. '    ' → logprob: -10.626605987548828
    8. ''' → logprob: -10.751605987548828
    9. ' )' → logprob: -11.501605987548828
    10. ' not' → logprob: -11.751605987548828

Token 10: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008759701740927994
    2. '():' → logprob: -7.125875949859619
    3. ' :' → logprob: -10.125876426696777
    4. ':**' → logprob: -11.750876426696777
    5. '(:' → logprob: -11.750876426696777
    6. ':
' → logprob: -12.250876426696777
    7. '):' → logprob: -13.250876426696777
    8. ':return' → logprob: -13.750876426696777
    9. '':'' → logprob: -14.000876426696777
    10. ' ():' → logprob: -14.250876426696777

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9849874973297119
    2. ':' → logprob: -1.234987497329712
    3. ' ' → logprob: -2.109987497329712
    4. '():' → logprob: -2.359987497329712
    5. '    ' → logprob: -3.109987497329712
    6. '(' → logprob: -3.734987497329712
    7. ' :' → logprob: -3.734987497329712
    8. '  ' → logprob: -5.234987258911133
    9. ' ():' → logprob: -5.234987258911133
    10. ' ):' → logprob: -5.859987258911133

Token 12: ' H' (ID: 487)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.42869335412979126
    2. 'line' → logprob: -1.6786932945251465
    3. 'data' → logprob: -2.0536932945251465
    4. ' data' → logprob: -4.3036932945251465
    5. '   ' → logprob: -4.8036932945251465
    6. 'user' → logprob: -5.5536932945251465
    7. 's' → logprob: -6.3036932945251465
    8. ' inp' → logprob: -6.5536932945251465
    9. 'text' → logprob: -6.6786932945251465
    10. 'inp' → logprob: -7.0536932945251465

Token 13: ',W' (ID: 117252)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.17591111361980438
    2. '>' → logprob: -2.4259111881256104
    3. '=' → logprob: -3.4259111881256104
    4. ' =' → logprob: -4.800910949707031
    5. ' >=' → logprob: -4.800910949707031
    6. ' ==' → logprob: -4.925910949707031
    7. ' ' → logprob: -5.675910949707031
    8. ',' → logprob: -5.675910949707031
    9. ' <=' → logprob: -6.300910949707031
    10. ' <' → logprob: -6.675910949707031

Token 14: ',N' (ID: 49539)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8936295509338379
    2. '=' → logprob: -1.393629550933838
    3. ',' → logprob: -1.518629550933838
    4. ' ,' → logprob: -3.643629550933838
    5. ' ==' → logprob: -3.643629550933838
    6. ')' → logprob: -3.893629550933838
    7. ' >' → logprob: -4.268629550933838
    8. '<|end|>' → logprob: -4.893629550933838
    9. ' ' → logprob: -5.018629550933838
    10. '   ' → logprob: -5.143629550933838

Token 15: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2813829481601715
    2. '=' → logprob: -1.4063829183578491
    3. ',' → logprob: -8.90638256072998
    4. '=input' → logprob: -9.78138256072998
    5. ' ,' → logprob: -11.40638256072998
    6. '=int' → logprob: -11.90638256072998
    7. '    ' → logprob: -11.90638256072998
    8. ' =
' → logprob: -11.90638256072998
    9. ' ' → logprob: -12.53138256072998
    10. '   ' → logprob: -13.65638256072998

Token 16: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.061993908137083054
    2. ' map' → logprob: -2.8119938373565674
    3. 'list' → logprob: -10.686993598937988
    4. '	map' → logprob: -13.436993598937988
    5. 'input' → logprob: -14.436993598937988
    6. ' list' → logprob: -14.686993598937988
    7. '(map' → logprob: -14.686993598937988
    8. ' ' → logprob: -15.436993598937988
    9. '[' → logprob: -15.436993598937988
    10. '.map' → logprob: -16.686994552612305

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10674373805522919
    2. '(' → logprob: -2.356743812561035
    3. '(str' → logprob: -5.356743812561035
    4. '(lambda' → logprob: -6.856743812561035
    5. '(input' → logprob: -7.981743812561035
    6. 'int' → logprob: -9.106743812561035
    7. '(
' → logprob: -9.356743812561035
    8. '<|end|>' → logprob: -9.731743812561035
    9. '[int' → logprob: -10.106743812561035
    10. '(list' → logprob: -10.731743812561035

Token 18: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2582376301288605
    2. ',input' → logprob: -2.508237600326538
    3. '(' → logprob: -2.633237600326538
    4. ',' → logprob: -3.508237600326538
    5. ')' → logprob: -3.758237600326538
    6. 'input' → logprob: -4.133237838745117
    7. '(sys' → logprob: -5.633237838745117
    8. ' input' → logprob: -7.883237838745117
    9. '(
' → logprob: -8.508237838745117
    10. '=input' → logprob: -9.133237838745117

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001805377542041242
    2. '())' → logprob: -8.7501802444458
    3. '()' → logprob: -11.0001802444458
    4. '()))' → logprob: -13.0001802444458
    5. ')' → logprob: -13.2501802444458
    6. ' ().' → logprob: -13.6251802444458
    7. '(' → logprob: -17.125181198120117
    8. ' ())' → logprob: -17.375181198120117
    9. '()));' → logprob: -17.750181198120117
    10. '))' → logprob: -18.000181198120117

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.024137604981660843
    2. 'strip' → logprob: -3.774137496948242
    3. 'rstrip' → logprob: -7.024137496948242
    4. '(split' → logprob: -14.149137496948242
    5. ' split' → logprob: -14.649137496948242
    6. ')' → logprob: -15.524137496948242
    7. 'read' → logprob: -16.524137496948242
    8. '_split' → logprob: -17.274137496948242
    9. ' strip' → logprob: -17.649137496948242
    10. '```' → logprob: -17.899137496948242

Token 21: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1478215903043747
    2. '))' → logprob: -2.0228216648101807
    3. '())' → logprob: -5.397821426391602
    4. '()))' → logprob: -8.147821426391602
    5. '()' → logprob: -8.522821426391602
    6. ')
' → logprob: -9.647821426391602
    7. ')))' → logprob: -11.147821426391602
    8. '),' → logprob: -11.272821426391602
    9. '))
' → logprob: -11.647821426391602
    10. '())
' → logprob: -12.397821426391602

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16947072744369507
    2. ' if' → logprob: -2.04447078704834
    3. '<|end|>' → logprob: -4.16947078704834
    4. 'if' → logprob: -5.66947078704834
    5. ' ' → logprob: -5.91947078704834
    6. '    ' → logprob: -6.66947078704834
    7. ')' → logprob: -7.16947078704834
    8. '  ' → logprob: -7.29447078704834
    9. '\n' → logprob: -7.79447078704834
    10. '    
' → logprob: -7.91947078704834

Token 23: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5669510364532471
    2. ' if' → logprob: -1.191951036453247
    3. '<|end|>' → logprob: -2.566951036453247
    4. 'if' (adapté à ' if') → logprob: -3.566951036453247
    5. ' ' → logprob: -4.566950798034668
    6. '    ' → logprob: -5.691950798034668
    7. '\n' → logprob: -5.816950798034668
    8. '  ' → logprob: -6.066950798034668
    9. ')' → logprob: -6.566950798034668
    10. ' 
' → logprob: -7.066950798034668

Token 24: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.05442764237523079
    2. 'H' → logprob: -3.3044276237487793
    3. ' not' → logprob: -4.179427623748779
    4. ' ' → logprob: -7.179427623748779
    5. 'not' → logprob: -8.804428100585938
    6. ' (' → logprob: -10.804428100585938
    7. '(H' → logprob: -12.304428100585938
    8. ' ' → logprob: -13.054428100585938
    9. '   ' → logprob: -13.554428100585938
    10. '  ' → logprob: -13.554428100585938

Token 25: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1804017573595047
    2. ' ==' → logprob: -1.8054018020629883
    3. '=' → logprob: -7.805401802062988
    4. '0' → logprob: -9.680401802062988
    5. ')==' → logprob: -10.180401802062988
    6. '===' → logprob: -10.680401802062988
    7. '()==' → logprob: -10.805401802062988
    8. ']==' → logprob: -10.805401802062988
    9. ' ' → logprob: -11.180401802062988
    10. ' ' → logprob: -11.305401802062988

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005993143655359745
    2. ' ' → logprob: -5.130993366241455
    3. 'W' → logprob: -9.755992889404297
    4. ' W' → logprob: -13.130992889404297
    5. '   ' → logprob: -13.630992889404297
    6. '```' → logprob: -13.630992889404297
    7. '  ' → logprob: -14.005992889404297
    8. '۰' → logprob: -15.693492889404297
    9. '    ' → logprob: -15.880992889404297
    10. ' ' → logprob: -16.005992889404297

Token 27: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023328052833676338
    2. 'and' → logprob: -3.7733280658721924
    3. ' ' → logprob: -9.523327827453613
    4. '	and' → logprob: -12.773327827453613
    5. ' or' → logprob: -13.148327827453613
    6. ' &' → logprob: -13.648327827453613
    7. ' ' → logprob: -14.398327827453613
    8. '   ' → logprob: -14.523327827453613
    9. '&' → logprob: -14.523327827453613
    10. ' a' → logprob: -14.773327827453613

Token 28: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.11287139356136322
    2. 'W' → logprob: -2.2378714084625244
    3. ' ' → logprob: -9.987871170043945
    4. '	W' → logprob: -13.612871170043945
    5. '  ' → logprob: -14.362871170043945
    6. '<|end|>' → logprob: -14.362871170043945
    7. ' ' → logprob: -15.362871170043945
    8. '   ' → logprob: -15.737871170043945
    9. '<W' → logprob: -15.987871170043945
    10. ',W' → logprob: -16.362871170043945

Token 29: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -2.6776029699249193e-05
    2. ' ==' → logprob: -10.62502670288086
    3. '0' → logprob: -14.00002670288086
    4. '===' → logprob: -14.50002670288086
    5. '=' → logprob: -14.62502670288086
    6. ']==' → logprob: -15.62502670288086
    7. '==
' → logprob: -15.87502670288086
    8. ')==' → logprob: -16.00002670288086
    9. '()==' → logprob: -16.37502670288086
    10. '```' → logprob: -16.37502670288086

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.125261306762695
    4. '  ' → logprob: -17.750261306762695
    5. ' and' → logprob: -17.875261306762695
    6. '<|end|>' → logprob: -17.875261306762695
    7. '۰' → logprob: -18.062761306762695
    8. 'and' → logprob: -18.750261306762695
    9. '```' → logprob: -18.937761306762695
    10. '０' → logprob: -19.312761306762695

Token 31: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08949083089828491
    2. 'and' → logprob: -2.4644908905029297
    3. '<|end|>' → logprob: -8.08949089050293
    4. '	and' → logprob: -8.71449089050293
    5. ' ' → logprob: -10.08949089050293
    6. '   ' → logprob: -11.21449089050293
    7. '<|end|>' → logprob: -11.33949089050293
    8. ':' → logprob: -12.08949089050293
    9. ' ' → logprob: -12.83949089050293
    10. '    ' → logprob: -14.08949089050293

Token 32: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.14568980038166046
    2. 'N' → logprob: -2.0206897258758545
    3. '0' → logprob: -6.395689964294434
    4. ' ' → logprob: -6.645689964294434
    5. '   ' → logprob: -11.520689964294434
    6. '	N' → logprob: -11.645689964294434
    7. '  ' → logprob: -11.770689964294434
    8. ' and' → logprob: -12.020689964294434
    9. '<|end|>' → logprob: -12.145689964294434
    10. 'and' → logprob: -13.145689964294434

Token 33: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.009797642007470131
    2. ' ==' → logprob: -4.6347975730896
    3. '=' → logprob: -10.634798049926758
    4. ')==' → logprob: -11.634798049926758
    5. '()==' → logprob: -13.384798049926758
    6. ':' → logprob: -13.384798049926758
    7. ']==' → logprob: -13.509798049926758
    8. '===' → logprob: -13.884798049926758
    9. '==
' → logprob: -14.384798049926758
    10. '==-' → logprob: -14.384798049926758

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '  ' → logprob: -17.000261306762695
    4. '۰' → logprob: -17.500261306762695
    5. '   ' → logprob: -17.750261306762695
    6. '০' → logprob: -18.000261306762695
    7. '०' → logprob: -18.000261306762695
    8. '```' → logprob: -18.562761306762695
    9. '０' → logprob: -18.625261306762695
    10. ' ' → logprob: -18.750261306762695

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000725656165741384
    2. ':
' → logprob: -7.250725746154785
    3. '   ' → logprob: -11.375725746154785
    4. ' :' → logprob: -13.250725746154785
    5. ':return' → logprob: -13.750725746154785
    6. '.' → logprob: -14.500725746154785
    7. '):' → logprob: -15.625725746154785
    8. '	break' → logprob: -15.750725746154785
    9. '       ' → logprob: -15.875725746154785
    10. ',' → logprob: -16.12572479248047

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009889844805002213
    2. '   ' → logprob: -7.000988960266113
    3. '	break' → logprob: -10.625988960266113
    4. ' break' → logprob: -11.125988960266113
    5. '     ' → logprob: -11.750988960266113
    6. '      ' → logprob: -12.000988960266113
    7. '	' → logprob: -12.250988960266113
    8. '    ' → logprob: -12.375988960266113
    9. ':' → logprob: -12.625988960266113
    10. '\t' → logprob: -12.750988960266113

Token 37: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.5897843241691589
    2. ' break' → logprob: -0.8397843241691589
    3. '       ' → logprob: -4.339784145355225
    4. '	break' → logprob: -7.839784145355225
    5. '   ' → logprob: -8.089784622192383
    6. '_break' → logprob: -12.464784622192383
    7. '```' → logprob: -13.214784622192383
    8. '           ' → logprob: -13.714784622192383
    9. '-break' → logprob: -13.839784622192383
    10. 'Break' → logprob: -14.464784622192383

Token 38: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6103067994117737
    2. '
' → logprob: -0.9853067994117737
    3. '    
' → logprob: -2.985306739807129
    4. '<|end|>' → logprob: -4.360306739807129
    5. '\n' → logprob: -5.235306739807129
    6. '  
' → logprob: -5.735306739807129
    7. 'a' → logprob: -6.235306739807129
    8. 'print' → logprob: -6.985306739807129
    9. '
' → logprob: -7.110306739807129
    10. ' 
' → logprob: -7.110306739807129

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05921841785311699
    2. '    
' → logprob: -3.809218406677246
    3. '\n' → logprob: -4.184218406677246
    4. '<|end|>' → logprob: -5.684218406677246
    5. '  
' → logprob: -6.184218406677246
    6. '```' → logprob: -6.559218406677246
    7. 'for' → logprob: -6.684218406677246
    8. '\r' → logprob: -6.684218406677246
    9. 'print' → logprob: -6.934218406677246
    10. '' → logprob: -6.934218406677246

Token 40: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39336103200912476
    2. 'r' → logprob: -3.2683610916137695
    3. 'y' → logprob: -3.2683610916137695
    4. 'for' → logprob: -3.2683610916137695
    5. 'room' → logprob: -3.3933610916137695
    6. ' for' → logprob: -3.6433610916137695
    7. 'row' → logprob: -4.0183610916137695
    8. '    ' → logprob: -4.2683610916137695
    9. 'floor' → logprob: -4.6433610916137695
    10. 'h' → logprob: -4.8933610916137695

Token 41: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13271868228912354
    2. ' =' → logprob: -2.882718563079834
    3. '=[]' → logprob: -3.382718563079834
    4. '=[' → logprob: -3.882718563079834
    5. ',B' → logprob: -5.507718563079834
    6. '=[]
' → logprob: -6.007718563079834
    7. ',' → logprob: -6.382718563079834
    8. '=B' → logprob: -7.007718563079834
    9. '=list' → logprob: -7.132718563079834
    10. ',b' → logprob: -7.632718563079834

Token 42: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.033351968973875046
    2. '[list' → logprob: -4.158351898193359
    3. '[int' → logprob: -4.783351898193359
    4. 'int' → logprob: -5.783351898193359
    5. '[]' → logprob: -6.283351898193359
    6. '0' → logprob: -6.408351898193359
    7. '[' → logprob: -6.908351898193359
    8. ' list' → logprob: -7.783351898193359
    9. '[input' → logprob: -8.15835189819336
    10. ']' → logprob: -8.78335189819336

Token 43: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00014299227041192353
    2. '(' → logprob: -9.250143051147461
    3. '(int' → logprob: -10.500143051147461
    4. 'map' → logprob: -12.000143051147461
    5. '()' → logprob: -12.125143051147461
    6. '(input' → logprob: -12.500143051147461
    7. '(range' → logprob: -12.750143051147461
    8. ' map' → logprob: -14.500143051147461
    9. '(
' → logprob: -16.25014305114746
    10. ' (' → logprob: -16.25014305114746

Token 44: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00010771531378850341
    2. '(' → logprob: -9.500107765197754
    3. ',int' → logprob: -10.875107765197754
    4. 'int' → logprob: -12.500107765197754
    5. ' (' → logprob: -12.750107765197754
    6. ']int' → logprob: -12.875107765197754
    7. '<int' → logprob: -13.750107765197754
    8. ')' → logprob: -13.875107765197754
    9. '[int' → logprob: -14.000107765197754
    10. '(lambda' → logprob: -14.500107765197754

Token 45: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.07571376115083694
    2. '(input' → logprob: -2.825713872909546
    3. ',' → logprob: -4.325713634490967
    4. '(' → logprob: -8.075714111328125
    5. 'input' → logprob: -9.575714111328125
    6. ' ,' → logprob: -10.825714111328125
    7. ' input' → logprob: -11.575714111328125
    8. '=input' → logprob: -11.950714111328125
    9. ')' → logprob: -12.950714111328125
    10. ',int' → logprob: -13.075714111328125

Token 46: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0683535037969705e-05
    2. '.readline' → logprob: -12.62501049041748
    3. '()' → logprob: -12.75001049041748
    4. '.split' → logprob: -13.00001049041748
    5. '(' → logprob: -14.00001049041748
    6. '.' → logprob: -14.12501049041748
    7. 'split' → logprob: -15.62501049041748
    8. '()))' → logprob: -15.87501049041748
    9. ')' → logprob: -15.87501049041748
    10. ' ().' → logprob: -16.250011444091797

Token 47: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.3199920178740285e-05
    2. 'rstrip' → logprob: -11.125022888183594
    3. 'strip' → logprob: -11.875022888183594
    4. ' split' → logprob: -13.500022888183594
    5. 'spl' → logprob: -16.875022888183594
    6. '(split' → logprob: -17.500022888183594
    7. 'read' → logprob: -18.000022888183594
    8. '.split' → logprob: -19.125022888183594
    9. 'plit' → logprob: -20.125022888183594
    10. '_split' → logprob: -20.875022888183594

Token 48: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.13091593980789185
    2. '))' → logprob: -2.130915880203247
    3. '()' → logprob: -5.630916118621826
    4. '(' → logprob: -8.505915641784668
    5. '())' → logprob: -9.130915641784668
    6. ')' → logprob: -10.255915641784668
    7. '())))' → logprob: -11.630915641784668
    8. '()))
' → logprob: -11.755915641784668
    9. '()));' → logprob: -11.755915641784668
    10. '().' → logprob: -12.130915641784668

Token 49: ' for' (ID: 395)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.45236772298812866
    2. ')' → logprob: -1.4523677825927734
    3. '()' → logprob: -2.0773677825927734
    4. '()]' → logprob: -6.452367782592773
    5. '(' → logprob: -6.702367782592773
    6. ')]' → logprob: -6.952367782592773
    7. 'for' → logprob: -7.577367782592773
    8. ' for' → logprob: -8.702367782592773
    9. '()))' → logprob: -10.327367782592773
    10. '()),' → logprob: -10.452367782592773

Token 50: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04869455844163895
    2. 'range' → logprob: -3.673694610595703
    3. '_' → logprob: -4.048694610595703
    4. ' _' → logprob: -5.423694610595703
    5. ' in' → logprob: -9.048694610595703
    6. '_range' → logprob: -9.173694610595703
    7. '(range' → logprob: -10.173694610595703
    8. ' ' → logprob: -11.173694610595703
    9. '	range' → logprob: -11.923694610595703
    10. ' i' → logprob: -12.423694610595703

Token 51: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8033728003501892
    2. ' in' → logprob: -1.303372859954834
    3. 'in' → logprob: -1.553372859954834
    4. ' range' → logprob: -2.678372859954834
    5. '_' → logprob: -9.303372383117676
    6. '(range' → logprob: -9.303372383117676
    7. ' ' → logprob: -9.553372383117676
    8. '	range' → logprob: -9.803372383117676
    9. '  ' → logprob: -11.303372383117676
    10. '   ' → logprob: -12.178372383117676

Token 52: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014165511354804039
    2. ' range' → logprob: -4.26416540145874
    3. '(range' → logprob: -14.264165878295898
    4. ' ' → logprob: -14.639165878295898
    5. '	range' → logprob: -15.389165878295898
    6. 'r' → logprob: -15.764165878295898
    7. '[' → logprob: -15.764165878295898
    8. 'rang' → logprob: -15.889165878295898
    9. '  ' → logprob: -16.3891658782959
    10. '   ' → logprob: -16.5141658782959

Token 53: '(H' (ID: 20904)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.000538497231900692
    2. '(' → logprob: -7.625538349151611
    3. 'N' → logprob: -11.12553882598877
    4. '(H' → logprob: -11.12553882598877
    5. '(W' → logprob: -11.37553882598877
    6. '(n' → logprob: -12.25053882598877
    7. ' (' → logprob: -12.62553882598877
    8. ' N' → logprob: -14.62553882598877
    9. '(
' → logprob: -15.12553882598877
    10. '((' → logprob: -15.62553882598877

Token 54: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00023047674039844424
    2. ']' → logprob: -9.00023078918457
    3. ')' → logprob: -9.25023078918457
    4. ' )' → logprob: -12.62523078918457
    5. ')]
' → logprob: -12.87523078918457
    6. '])]' → logprob: -13.87523078918457
    7. ')])' → logprob: -14.00023078918457
    8. '   ' → logprob: -14.50023078918457
    9. '))' → logprob: -14.62523078918457
    10. '')]' → logprob: -14.62523078918457

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4042905569076538
    2. 'result' → logprob: -2.6542906761169434
    3. 'dp' → logprob: -2.7792906761169434
    4. 'for' → logprob: -2.9042906761169434
    5. ' for' → logprob: -3.2792906761169434
    6. 'answer' → logprob: -4.529290676116943
    7. '```' → logprob: -4.654290676116943
    8. 'DP' → logprob: -4.779290676116943
    9. '    
' → logprob: -5.029290676116943
    10. 'ans' → logprob: -5.154290676116943

Token 56: ' r' (ID: 428)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3681789040565491
    2. 'for' → logprob: -2.6181788444519043
    3. 'visited' → logprob: -2.8681788444519043
    4. 'dist' → logprob: -3.3681788444519043
    5. 'ans' → logprob: -3.3681788444519043
    6. 'result' → logprob: -3.7431788444519043
    7. 'res' → logprob: -4.118178844451904
    8. 'answer' → logprob: -4.493178844451904
    9. 'DP' → logprob: -4.868178844451904
    10. 'B' → logprob: -5.243178844451904

Token 57: ',c' (ID: 22261)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.43750351667404175
    2. 'ows' → logprob: -1.3125035762786865
    3. 'ow' → logprob: -3.3125035762786865
    4. 'em' → logprob: -4.687503337860107
    5. '=' → logprob: -5.187503337860107
    6. 'e' → logprob: -5.187503337860107
    7. 'esize' → logprob: -5.187503337860107
    8. 'esu' → logprob: -5.812503337860107
    9. 'ef' → logprob: -5.937503337860107
    10. 'ank' → logprob: -6.312503337860107

Token 58: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.168744757771492
    2. ' =' → logprob: -1.9187448024749756
    3. ',' → logprob: -4.7937445640563965
    4. '=int' → logprob: -9.918745040893555
    5. ' ,' → logprob: -10.043745040893555
    6. ',r' → logprob: -11.043745040893555
    7. ',c' → logprob: -11.543745040893555
    8. ',n' → logprob: -11.793745040893555
    9. ' ' → logprob: -11.918745040893555
    10. ',num' → logprob: -12.168745040893555

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013392917811870575
    2. 'map' → logprob: -4.638392925262451
    3. 'N' → logprob: -6.638392925262451
    4. '[' → logprob: -7.138392925262451
    5. '[]' → logprob: -8.013392448425293
    6. '(' → logprob: -8.138392448425293
    7. '[N' → logprob: -8.638392448425293
    8. 'div' → logprob: -9.138392448425293
    9. 'next' → logprob: -9.138392448425293
    10. ' ' → logprob: -9.263392448425293

Token 60: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.37508487701416
    3. '1' → logprob: -15.62508487701416
    4. '-' → logprob: -15.62508487701416
    5. '   ' → logprob: -16.625085830688477
    6. '  ' → logprob: -17.312585830688477
    7. ' -' → logprob: -17.687585830688477
    8. '    ' → logprob: -18.250085830688477
    9. '۰' → logprob: -18.375085830688477
    10. '<|end|>' → logprob: -18.687585830688477

Token 62: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013207413256168365
    2. '   ' → logprob: -5.26320743560791
    3. 'for' → logprob: -5.76320743560791
    4. '
' → logprob: -6.51320743560791
    5. '\n' → logprob: -6.63820743560791
    6. ' for' → logprob: -7.51320743560791
    7. '    
' → logprob: -7.76320743560791
    8. 'while' → logprob: -7.88820743560791
    9. '' → logprob: -8.76320743560791
    10. ' 
' → logprob: -9.13820743560791

Token 63: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17781983315944672
    2. '   ' → logprob: -2.0528197288513184
    3. 'for' → logprob: -4.052819728851318
    4. ' for' → logprob: -4.552819728851318
    5. 'while' → logprob: -6.052819728851318
    6. ' while' → logprob: -7.302819728851318
    7. '<|end|>' → logprob: -7.302819728851318
    8. '\n' → logprob: -7.427819728851318
    9. '    
' → logprob: -7.427819728851318
    10. '
' → logprob: -7.802819728851318

Token 64: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.020422643050551414
    2. ' for' → logprob: -4.145422458648682
    3. 'while' → logprob: -6.395422458648682
    4. '   ' → logprob: -6.520422458648682
    5. 'r' → logprob: -7.895422458648682
    6. 'print' → logprob: -9.02042293548584
    7. 'f' → logprob: -9.02042293548584
    8. 'count' → logprob: -9.14542293548584
    9. 'n' → logprob: -9.52042293548584
    10. 'result' → logprob: -9.52042293548584

Token 65: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.24527938663959503
    2. ' i' → logprob: -2.120279312133789
    3. '_' → logprob: -2.495279312133789
    4. ' n' → logprob: -5.245279312133789
    5. 'i' → logprob: -5.620279312133789
    6. ' range' → logprob: -5.995279312133789
    7. 'n' → logprob: -7.120279312133789
    8. ' ' → logprob: -7.495279312133789
    9. ' num' → logprob: -7.620279312133789
    10. '_i' → logprob: -8.120279312133789

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04328188672661781
    2. 'in' → logprob: -3.1682817935943604
    3. 'range' → logprob: -8.668281555175781
    4. ' ' → logprob: -10.043281555175781
    5. 'n' → logprob: -10.293281555175781
    6. 's' → logprob: -12.043281555175781
    7. '  ' → logprob: -12.293281555175781
    8. 'c' → logprob: -12.918281555175781
    9. '<|end|>' → logprob: -13.168281555175781
    10. 'N' → logprob: -13.543281555175781

Token 67: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16025865077972412
    2. ' range' → logprob: -1.9102586507797241
    3. '(range' → logprob: -11.285258293151855
    4. 'A' → logprob: -11.910258293151855
    5. '	range' → logprob: -12.785258293151855
    6. 'ange' → logprob: -13.285258293151855
    7. 'rang' → logprob: -13.410258293151855
    8. 'ran' → logprob: -13.785258293151855
    9. 'N' → logprob: -14.035258293151855
    10. 'r' → logprob: -14.160258293151855

Token 68: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0006579888286069036
    2. '(' → logprob: -7.50065803527832
    3. ' (' → logprob: -9.75065803527832
    4. 'N' → logprob: -10.37565803527832
    5. '(n' → logprob: -12.00065803527832
    6. ' N' → logprob: -12.50065803527832
    7. '(A' → logprob: -13.12565803527832
    8. ' ' → logprob: -13.62565803527832
    9. '(H' → logprob: -14.37565803527832
    10. '(Q' → logprob: -15.12565803527832

Token 69: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006091846618801355
    2. ')' → logprob: -6.131092071533203
    3. ' ):' → logprob: -6.131092071533203
    4. '):
' → logprob: -7.256092071533203
    5. ':' → logprob: -7.256092071533203
    6. ',' → logprob: -8.506092071533203
    7. '   ' → logprob: -9.756092071533203
    8. ' )' → logprob: -11.381092071533203
    9. ' :' → logprob: -11.881092071533203
    10. ' ' → logprob: -12.631092071533203

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03425930067896843
    2. ' ' → logprob: -3.40925931930542
    3. ')' → logprob: -7.65925931930542
    4. ' )' → logprob: -10.409258842468262
    5. '):
' → logprob: -10.534258842468262
    6. '2' → logprob: -10.909258842468262
    7. '-' → logprob: -11.284258842468262
    8. ' c' → logprob: -11.784258842468262
    9. '   ' → logprob: -12.346758842468262
    10. 'c' → logprob: -12.346758842468262

Token 71: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5312341451644897
    2. '):' → logprob: -0.9062341451644897
    3. ')' → logprob: -5.031234264373779
    4. '   ' → logprob: -7.281234264373779
    5. ':' → logprob: -7.781234264373779
    6. ':
' → logprob: -8.781233787536621
    7. '):
' → logprob: -9.406233787536621
    8. ' ):
' → logprob: -9.531233787536621
    9. ' ):' → logprob: -10.281233787536621
    10. ',' → logprob: -10.781233787536621

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5519976019859314
    2. '   ' → logprob: -1.0519976615905762
    3. 'r' → logprob: -3.801997661590576
    4. 'x' → logprob: -4.676997661590576
    5. 'd' → logprob: -4.926997661590576
    6. '	   ' → logprob: -5.051997661590576
    7. '    ' → logprob: -5.301997661590576
    8. ' if' → logprob: -5.926997661590576
    9. ' r' → logprob: -6.301997661590576
    10. ' x' → logprob: -6.426997661590576

Token 73: ' if' (ID: 538)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9773391485214233
    2. 'nr' → logprob: -1.4773391485214233
    3. 'dr' → logprob: -1.6023391485214233
    4. '       ' → logprob: -3.227339267730713
    5. 'x' → logprob: -3.477339267730713
    6. '   ' → logprob: -3.852339267730713
    7. 'r' → logprob: -3.977339267730713
    8. 'a' → logprob: -3.977339267730713
    9. 'if' (adapté à ' if') → logprob: -4.977339267730713
    10. 'direction' → logprob: -5.227339267730713

Token 74: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5314099192619324
    2. ' A' → logprob: -1.1564099788665771
    3. 'c' → logprob: -2.781409978866577
    4. ' c' → logprob: -3.531409978866577
    5. 'r' → logprob: -5.781409740447998
    6. ' r' → logprob: -6.906409740447998
    7. ' ' → logprob: -7.468909740447998
    8. 'C' → logprob: -8.218910217285156
    9. 'W' → logprob: -8.406410217285156
    10. '(A' → logprob: -8.656410217285156

Token 75: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -3.7146746763028204e-05
    2. 'r' → logprob: -10.37503719329834
    3. '[' → logprob: -12.37503719329834
    4. '[c' → logprob: -14.50003719329834
    5. '][' → logprob: -14.87503719329834
    6. '	r' → logprob: -15.37503719329834
    7. '   ' → logprob: -16.500036239624023
    8. '```' → logprob: -16.500036239624023
    9. '[row' → logprob: -16.875036239624023
    10. '[i' → logprob: -17.625036239624023

Token 76: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012120219180360436
    2. '[c' → logprob: -7.501212120056152
    3. '[r' → logprob: -7.751212120056152
    4. ']' → logprob: -8.876212120056152
    5. '[' → logprob: -10.126212120056152
    6. ' ][' → logprob: -11.501212120056152
    7. ']==' → logprob: -12.376212120056152
    8. '+' → logprob: -12.813712120056152
    9. 'r' → logprob: -13.188712120056152
    10. 'c' → logprob: -13.251212120056152

Token 77: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.718606891809031e-05
    2. ' c' → logprob: -10.250066757202148
    3. '0' → logprob: -11.375066757202148
    4. '   ' → logprob: -11.500066757202148
    5. '	c' → logprob: -13.250066757202148
    6. ']' → logprob: -13.500066757202148
    7. '    ' → logprob: -13.937566757202148
    8. ' ' → logprob: -14.062566757202148
    9. ')c' → logprob: -14.125066757202148
    10. '<c' → logprob: -14.187566757202148

Token 78: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.23998576402664185
    2. ']' → logprob: -1.614985704421997
    3. ']>' → logprob: -5.114985942840576
    4. ']+' → logprob: -5.989985942840576
    5. ']>=' → logprob: -6.114985942840576
    6. ']<' → logprob: -6.989985942840576
    7. ']!=' → logprob: -7.364985942840576
    8. '==' → logprob: -7.364985942840576
    9. '+' → logprob: -7.864985942840576
    10. ' ]' → logprob: -7.989985942840576

Token 79: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2898317575454712
    2. '1' → logprob: -1.4148317575454712
    3. '2' → logprob: -4.914831638336182
    4. '-' → logprob: -7.289831638336182
    5. '3' → logprob: -8.66483211517334
    6. '4' → logprob: -9.16483211517334
    7. ' ' → logprob: -9.28983211517334
    8. '84' → logprob: -10.16483211517334
    9. 'H' → logprob: -10.28983211517334
    10. '9' → logprob: -10.85233211517334

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02269476279616356
    2. ' and' → logprob: -4.0226945877075195
    3. ':
' → logprob: -5.8976945877075195
    4. 'and' → logprob: -7.3976945877075195
    5. 'r' → logprob: -7.6476945877075195
    6. '       ' → logprob: -8.77269458770752
    7. ':c' → logprob: -8.89769458770752
    8. ':r' → logprob: -9.27269458770752
    9. ' :' → logprob: -9.52269458770752
    10. '           ' → logprob: -9.89769458770752

Token 81: '           ' (ID: 352)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.44089072942733765
    2. 'r' → logprob: -1.5658907890319824
    3. ' c' → logprob: -2.4408907890319824
    4. '           ' → logprob: -3.1908907890319824
    5. ' if' → logprob: -4.940890789031982
    6. 'if' → logprob: -5.315890789031982
    7. ' r' → logprob: -5.565890789031982
    8. '       ' → logprob: -7.315890789031982
    9. ' and' → logprob: -7.315890789031982
    10. '0' → logprob: -7.565890789031982

Token 82: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.1623142659664154
    2. 'r' → logprob: -1.9123142957687378
    3. 'if' → logprob: -6.537314414978027
    4. '           ' → logprob: -8.412314414978027
    5. ' c' → logprob: -8.412314414978027
    6. ' if' → logprob: -9.662314414978027
    7. '       ' → logprob: -10.662314414978027
    8. ' r' → logprob: -10.787314414978027
    9. '   ' → logprob: -10.912314414978027
    10. '	c' → logprob: -11.412314414978027

Token 83: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0043260264210402966
    2. ' +=' → logprob: -6.129325866699219
    3. '+' → logprob: -6.379325866699219
    4. '=' → logprob: -8.254325866699219
    5. '-=' → logprob: -9.004325866699219
    6. ']+=' → logprob: -10.754325866699219
    7. '-' → logprob: -11.629325866699219
    8. '+=(' → logprob: -12.254325866699219
    9. '+='' → logprob: -12.379325866699219
    10. '1' → logprob: -12.504325866699219

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00040755473310127854
    2. '-' → logprob: -7.875407695770264
    3. ' ' → logprob: -10.750407218933105
    4. '2' → logprob: -13.000407218933105
    5. '+' → logprob: -13.687907218933105
    6. '0' → logprob: -13.937907218933105
    7. ' -' → logprob: -14.187907218933105
    8. '<|end|>' → logprob: -15.500407218933105
    9. '```' → logprob: -15.937907218933105
    10. '3' → logprob: -17.062908172607422

Token 85: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5543928742408752
    2. 'else' → logprob: -1.1793928146362305
    3. ' else' → logprob: -2.8043928146362305
    4. 'elif' → logprob: -2.9293928146362305
    5. ' elif' → logprob: -5.9293928146362305
    6. '<|end|>' → logprob: -6.9293928146362305
    7. '
' → logprob: -8.42939281463623
    8. '	elif' → logprob: -9.17939281463623
    9. '	else' → logprob: -10.30439281463623
    10. '   ' → logprob: -10.30439281463623

Token 86: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.24679262936115265
    2. ' else' → logprob: -1.6217926740646362
    3. 'elif' → logprob: -4.246792793273926
    4. '       ' → logprob: -5.496792793273926
    5. '<|end|>' → logprob: -6.871792793273926
    6. ' elif' → logprob: -7.246792793273926
    7. '
' → logprob: -7.246792793273926
    8. '   ' → logprob: -9.246792793273926
    9. '	else' → logprob: -9.496792793273926
    10. '	elif' → logprob: -10.496792793273926

Token 87: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04169508442282677
    2. 'elif' → logprob: -3.4166951179504395
    3. '       ' → logprob: -5.4166951179504395
    4. ' else' → logprob: -5.6666951179504395
    5. ' elif' → logprob: -9.166694641113281
    6. '	elif' → logprob: -12.916694641113281
    7. '	else' → logprob: -13.041694641113281
    8. '   ' → logprob: -13.416694641113281
    9. 'if' → logprob: -13.541694641113281
    10. '```' → logprob: -14.791694641113281

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3796645402908325
    2. ':
' → logprob: -1.6296645402908325
    3. 'r' → logprob: -2.754664421081543
    4. '       ' → logprob: -3.879664421081543
    5. '
' → logprob: -4.129664421081543
    6. '           ' → logprob: -5.004664421081543
    7. '<|end|>' → logprob: -5.379664421081543
    8. '   ' → logprob: -5.754664421081543
    9. ' r' → logprob: -6.254664421081543
    10. ':r' → logprob: -7.629664421081543

Token 89: '           ' (ID: 352)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006621700245887041
    2. '       ' → logprob: -5.631621837615967
    3. ' r' → logprob: -6.506621837615967
    4. '<|end|>' → logprob: -6.881621837615967
    5. '1' → logprob: -8.131621360778809
    6. '```' → logprob: -9.131621360778809
    7. '<|end|>' → logprob: -10.506621360778809
    8. '   ' → logprob: -11.631621360778809
    9. '           ' → logprob: -11.756621360778809
    10. '
' → logprob: -12.131621360778809

Token 90: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: 0.0
    2. ' r' → logprob: -17.875
    3. '   ' → logprob: -18.125
    4. '1' → logprob: -19.125
    5. '	r' → logprob: -19.375
    6. '<|end|>' → logprob: -19.5
    7. 'print' → logprob: -19.75
    8. 's' → logprob: -20.375
    9. '_r' → logprob: -20.75
    10. '       ' → logprob: -21.0

Token 91: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006729576736688614
    2. '+' → logprob: -5.006729602813721
    3. ' +=' → logprob: -11.631729125976562
    4. ']+=' → logprob: -12.381729125976562
    5. '+='' → logprob: -15.006729125976562
    6. '=' → logprob: -15.256729125976562
    7. '+=(' → logprob: -15.631729125976562
    8. '+="' → logprob: -15.881729125976562
    9. '<|end|>' → logprob: -15.881729125976562
    10. '1' → logprob: -16.631729125976562

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '<|end|>' → logprob: -17.0
    4. '１' → logprob: -18.1875
    5. '+' → logprob: -18.375
    6. '```' → logprob: -19.3125
    7. '0' → logprob: -19.375
    8. '   ' → logprob: -19.5
    9. '۱' → logprob: -19.5625
    10. '১' → logprob: -19.625

Token 93: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002258975524455309
    2. '   ' → logprob: -7.002258777618408
    3. '
' → logprob: -7.377258777618408
    4. ' print' → logprob: -8.252259254455566
    5. '\n' → logprob: -9.002259254455566
    6. '<|end|>' → logprob: -9.002259254455566
    7. ')' → logprob: -9.502259254455566
    8. '```' → logprob: -11.002259254455566
    9. '\' → logprob: -11.127259254455566
    10. '(print' → logprob: -11.127259254455566

Token 94: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007625799626111984
    2. '   ' → logprob: -7.875762462615967
    3. ' print' → logprob: -8.750762939453125
    4. 'r' → logprob: -9.250762939453125
    5. ')' → logprob: -10.250762939453125
    6. '\n' → logprob: -11.125762939453125
    7. '<|end|>' → logprob: -11.125762939453125
    8. '#' → logprob: -11.500762939453125
    9. '```' → logprob: -11.625762939453125
    10. '(print' → logprob: -12.000762939453125

Token 95: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.885492621222511e-05
    2. ' print' → logprob: -10.125068664550781
    3. '   ' → logprob: -11.000068664550781
    4. 'r' → logprob: -11.625068664550781
    5. 'if' (adapté à ' if') → logprob: -13.875068664550781
    6. ' ' → logprob: -14.875068664550781
    7. 'pr' → logprob: -15.000068664550781
    8. 'c' → logprob: -15.250068664550781
    9. '
' → logprob: -15.375068664550781
    10. '```' → logprob: -15.750068664550781

Token 96: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.31293290853500366
    2. ' r' → logprob: -1.4379329681396484
    3. 'c' → logprob: -3.9379329681396484
    4. ' c' → logprob: -4.562932968139648
    5. ' not' → logprob: -6.687932968139648
    6. 'not' → logprob: -9.937932968139648
    7. 'H' → logprob: -11.062932968139648
    8. '(r' → logprob: -11.312932968139648
    9. ' ' → logprob: -11.687932968139648
    10. '	r' → logprob: -11.875432968139648

Token 97: '>=' (ID: 20974)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3141874074935913
    2. '>=' → logprob: -1.3141874074935913
    3. ' ==' → logprob: -7.064187526702881
    4. ' >=' → logprob: -10.064187049865723
    5. '>' → logprob: -11.439187049865723
    6. 'H' → logprob: -12.314187049865723
    7. ']>=' → logprob: -12.814187049865723
    8. '<|end|>' → logprob: -13.064187049865723
    9. '=' → logprob: -13.564187049865723
    10. '#' → logprob: -13.689187049865723

Token 98: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -3.054500666621607e-06
    2. ' H' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.125003814697266
    4. '	H' → logprob: -18.625003814697266
    5. 'h' → logprob: -19.875003814697266
    6. '0' → logprob: -20.375003814697266
    7. '  ' → logprob: -20.875003814697266
    8. ' ' → logprob: -21.125003814697266
    9. '<H' → logprob: -21.250003814697266
    10. 'Hs' → logprob: -21.500003814697266

Token 99: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.16095589101314545
    2. 'or' → logprob: -1.9109559059143066
    3. ':' → logprob: -7.410955905914307
    4. '<|end|>' → logprob: -9.160955429077148
    5. '<|end|>' → logprob: -12.410955429077148
    6. '	or' → logprob: -12.535955429077148
    7. '0' → logprob: -12.660955429077148
    8. ' and' → logprob: -12.785955429077148
    9. ':
' → logprob: -13.410955429077148
    10. 'and' → logprob: -13.535955429077148

Token 100: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002120038407156244
    2. ' c' → logprob: -8.500211715698242
    3. '   ' → logprob: -11.750211715698242
    4. '       ' → logprob: -15.375211715698242
    5. '  ' → logprob: -16.000211715698242
    6. ' ' → logprob: -16.250211715698242
    7. '	c' → logprob: -16.500211715698242
    8. '    ' → logprob: -17.250211715698242
    9. 'W' → logprob: -17.750211715698242
    10. '     ' → logprob: -17.875211715698242

Token 101: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -2.8444881536415778e-05
    2. ' >=' → logprob: -11.125028610229492
    3. ']>=' → logprob: -11.500028610229492
    4. ')>=' → logprob: -12.875028610229492
    5. '>' → logprob: -14.250028610229492
    6. '≥' → logprob: -16.125028610229492
    7. '<|end|>' → logprob: -16.375028610229492
    8. '   ' → logprob: -19.125028610229492
    9. '">' → logprob: -19.625028610229492
    10. '==' → logprob: -19.625028610229492

Token 102: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -3.702754474943504e-05
    2. ' W' → logprob: -10.25003719329834
    3. '   ' → logprob: -14.37503719329834
    4. ' ' → logprob: -15.00003719329834
    5. '	W' → logprob: -15.00003719329834
    6. '  ' → logprob: -15.50003719329834
    7. '<W' → logprob: -16.500036239624023
    8. '<|end|>' → logprob: -16.875036239624023
    9. '=W' → logprob: -17.250036239624023
    10. '    ' → logprob: -17.750036239624023

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008853401057422161
    2. ':
' → logprob: -4.758853435516357
    3. '<|end|>' → logprob: -9.1338529586792
    4. ' or' → logprob: -9.5088529586792
    5. '       ' → logprob: -10.7588529586792
    6. '<|end|>' → logprob: -11.6338529586792
    7. '   ' → logprob: -12.3838529586792
    8. ' and' → logprob: -12.7588529586792
    9. ':return' → logprob: -12.8838529586792
    10. ':

' → logprob: -13.0088529586792

Token 104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20715777575969696
    2. '       ' → logprob: -1.7071577310562134
    3. 'break' → logprob: -5.707157611846924
    4. ' break' → logprob: -6.207157611846924
    5. '   ' → logprob: -8.582158088684082
    6. '	break' → logprob: -9.082158088684082
    7. ':' → logprob: -11.332158088684082
    8. '	       ' → logprob: -11.332158088684082
    9. '```' → logprob: -11.332158088684082
    10. ' ' → logprob: -11.457158088684082

Token 105: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.30091679096221924
    2. ' break' → logprob: -1.4259167909622192
    3. '           ' → logprob: -4.05091667175293
    4. '       ' → logprob: -6.55091667175293
    5. 'print' → logprob: -7.92591667175293
    6. 'r' → logprob: -8.92591667175293
    7. '   ' → logprob: -9.17591667175293
    8. '	break' → logprob: -9.80091667175293
    9. ' r' → logprob: -10.80091667175293
    10. 'c' → logprob: -11.17591667175293

Token 106: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.037093691527843475
    2. '   ' → logprob: -3.5370936393737793
    3. '
' → logprob: -5.162093639373779
    4. '<|end|>' → logprob: -7.787093639373779
    5. '    
' → logprob: -8.162094116210938
    6. ' print' → logprob: -8.662094116210938
    7. 'r' → logprob: -9.162094116210938
    8. '  
' → logprob: -9.162094116210938
    9. '```' → logprob: -9.162094116210938
    10. ')' → logprob: -9.537094116210938

Token 107: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.021136753261089325
    2. '   ' → logprob: -3.89613676071167
    3. 'else' → logprob: -8.771136283874512
    4. 'r' → logprob: -8.771136283874512
    5. 'if' → logprob: -9.521136283874512
    6. ' print' → logprob: -9.771136283874512
    7. 'for' → logprob: -10.146136283874512
    8. '
' → logprob: -10.396136283874512
    9. '    
' → logprob: -10.646136283874512
    10. '```' → logprob: -10.896136283874512

Token 108: ' while' (ID: 2049)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003380846756044775
    2. 'if' → logprob: -8.125338554382324
    3. '
' → logprob: -10.875338554382324
    4. '   ' → logprob: -12.125338554382324
    5. 'else' → logprob: -12.125338554382324
    6. ' print' → logprob: -12.250338554382324
    7. 'r' → logprob: -13.125338554382324
    8. '    
' → logprob: -13.750338554382324
    9. '```' → logprob: -13.875338554382324
    10. '#' → logprob: -14.125338554382324

Token 109: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.18310710787773132
    2. ' True' → logprob: -1.9331071376800537
    3. 'r' → logprob: -4.933106899261475
    4. 'True' → logprob: -5.183106899261475
    5. ' A' → logprob: -5.183106899261475
    6. ' c' → logprob: -6.683106899261475
    7. ' ' → logprob: -6.933106899261475
    8. ' not' → logprob: -7.683106899261475
    9. ' (' → logprob: -7.933106899261475
    10. '(r' → logprob: -7.933106899261475

Token 110: '<H' (ID: 104212)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04484882950782776
    2. ' <' → logprob: -3.919848918914795
    3. '<W' → logprob: -4.169848918914795
    4. '<H' → logprob: -5.044848918914795
    5. '<len' → logprob: -7.419848918914795
    6. '<N' → logprob: -8.169848442077637
    7. '<n' → logprob: -8.169848442077637
    8. '<size' → logprob: -8.169848442077637
    9. '+' → logprob: -9.169848442077637
    10. '<int' → logprob: -9.544848442077637

Token 111: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17992796003818512
    2. 'and' → logprob: -1.804927945137024
    3. '   ' → logprob: -8.804927825927734
    4. '-' → logprob: -10.804927825927734
    5. ':' → logprob: -11.929927825927734
    6. ' ' → logprob: -13.554927825927734
    7. ':
' → logprob: -14.054927825927734
    8. '	and' → logprob: -14.179927825927734
    9. '       ' → logprob: -14.304927825927734
    10. ' or' → logprob: -14.679927825927734

Token 112: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3139120638370514
    2. 'c' → logprob: -1.313912034034729
    3. 'W' → logprob: -7.9389119148254395
    4. ' W' → logprob: -9.063912391662598
    5. ' ' → logprob: -9.813912391662598
    6. '0' → logprob: -9.938912391662598
    7. 'A' → logprob: -10.563912391662598
    8. '   ' → logprob: -10.813912391662598
    9. ' A' → logprob: -11.688912391662598
    10. '  ' → logprob: -12.313912391662598

Token 113: '<W' (ID: 180273)
  Prédit: '<W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<W' → logprob: -0.1453332006931305
    2. '<' → logprob: -2.0203332901000977
    3. ' <' → logprob: -6.270333290100098
    4. '<H' → logprob: -7.770333290100098
    5. '+' → logprob: -8.895333290100098
    6. '<len' → logprob: -9.645333290100098
    7. '<size' → logprob: -10.020333290100098
    8. '<w' → logprob: -11.270333290100098
    9. ' ' → logprob: -11.645333290100098
    10. '<|end|>' → logprob: -12.020333290100098

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2710701823234558
    2. ' and' → logprob: -1.5210702419281006
    3. 'and' → logprob: -4.2710700035095215
    4. ':
' → logprob: -5.3960700035095215
    5. '   ' → logprob: -7.8960700035095215
    6. ',' → logprob: -10.39607048034668
    7. '       ' → logprob: -10.64607048034668
    8. '<|end|>' → logprob: -12.27107048034668
    9. ':

' → logprob: -12.52107048034668
    10. '.' → logprob: -12.52107048034668

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14141637086868286
    2. '   ' → logprob: -2.391416311264038
    3. 'if' → logprob: -3.766416311264038
    4. ' if' → logprob: -4.766416549682617
    5. 'print' → logprob: -5.391416549682617
    6. ' and' → logprob: -6.016416549682617
    7. '```' → logprob: -7.266416549682617
    8. 'and' → logprob: -8.266416549682617
    9. ':' → logprob: -8.766416549682617
    10. '<|end|>' → logprob: -9.016416549682617

Token 116: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3896712362766266
    2. 'if' → logprob: -1.1396712064743042
    3. '   ' → logprob: -7.014671325683594
    4. ' if' → logprob: -7.139671325683594
    5. 'A' → logprob: -7.389671325683594
    6. ' print' → logprob: -8.639671325683594
    7. '       ' → logprob: -8.889671325683594
    8. 'sys' → logprob: -9.514671325683594
    9. 'for' → logprob: -10.264671325683594
    10. '           ' → logprob: -11.139671325683594

Token 117: '=A' (ID: 112591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21343396604061127
    2. '=A' → logprob: -1.8384339809417725
    3. ' =' → logprob: -4.963433742523193
    4. 'f' → logprob: -5.213433742523193
    5. 'ef' → logprob: -5.338433742523193
    6. '=int' → logprob: -5.713433742523193
    7. 'e' → logprob: -5.838433742523193
    8. '=a' → logprob: -5.963433742523193
    9. '=e' → logprob: -6.588433742523193
    10. '=f' → logprob: -6.838433742523193

Token 118: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -3.523948907968588e-05
    2. 'r' → logprob: -10.625035285949707
    3. '[' → logprob: -11.750035285949707
    4. '[row' → logprob: -14.125035285949707
    5. '[u' → logprob: -15.250035285949707
    6. '[q' → logprob: -15.375035285949707
    7. '[s' → logprob: -15.375035285949707
    8. '<|end|>' → logprob: -15.375035285949707
    9. '[m' → logprob: -15.875035285949707
    10. '[user' → logprob: -16.12503433227539

Token 119: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00016897499153856188
    2. ']' → logprob: -9.000168800354004
    3. '[r' → logprob: -11.000168800354004
    4. ' ][' → logprob: -11.500168800354004
    5. '[' → logprob: -11.875168800354004
    6. '"][' → logprob: -12.250168800354004
    7. '[c' → logprob: -13.250168800354004
    8. ''][' → logprob: -13.500168800354004
    9. ']][' → logprob: -14.000168800354004
    10. '()][' → logprob: -14.375168800354004

Token 120: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.1008713702030946e-06
    2. ' c' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.500001907348633
    4. ' ' → logprob: -16.250001907348633
    5. '  ' → logprob: -17.625001907348633
    6. ')c' → logprob: -17.625001907348633
    7. '[c' → logprob: -17.625001907348633
    8. '][' → logprob: -17.875001907348633
    9. '	c' → logprob: -18.000001907348633
    10. ']' → logprob: -18.000001907348633

Token 121: ']
' (ID: 1592)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.7356674671173096
    2. ']' → logprob: -0.8606674671173096
    3. ']
' → logprob: -2.8606674671173096
    4. ']+' → logprob: -3.3606674671173096
    5. ')' → logprob: -5.8606672286987305
    6. ')==' → logprob: -6.8606672286987305
    7. '])' → logprob: -7.7356672286987305
    8. ')
' → logprob: -7.9856672286987305
    9. '==' → logprob: -8.11066722869873
    10. ']+=' → logprob: -8.48566722869873

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051153626292943954
    2. ' if' → logprob: -3.1761536598205566
    3. 'if' → logprob: -4.926153659820557
    4. '   ' → logprob: -7.676153659820557
    5. '```' → logprob: -9.426153182983398
    6. '+' → logprob: -9.801153182983398
    7. 'r' → logprob: -10.051153182983398
    8. '[' → logprob: -10.176153182983398
    9. '<|end|>' → logprob: -10.426153182983398
    10. '
' → logprob: -10.801153182983398

Token 123: ' A' (ID: 355)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08156886696815491
    2. ' if' → logprob: -3.331568956375122
    3. 'r' → logprob: -3.706568956375122
    4. '       ' → logprob: -4.206568717956543
    5. 'print' → logprob: -5.956568717956543
    6. ' r' → logprob: -8.206568717956543
    7. '   ' → logprob: -9.206568717956543
    8. 'd' → logprob: -9.456568717956543
    9. ' print' → logprob: -9.956568717956543
    10. '
' → logprob: -11.581568717956543

Token 124: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0022932328283786774
    2. '[' → logprob: -6.127293109893799
    3. '[row' → logprob: -9.877293586730957
    4. '<|end|>' → logprob: -10.627293586730957
    5. 'r' → logprob: -10.877293586730957
    6. '[d' → logprob: -13.002293586730957
    7. '[user' → logprob: -13.502293586730957
    8. '[
' → logprob: -13.752293586730957
    9. '```' → logprob: -13.877293586730957
    10. '\[' → logprob: -13.877293586730957

Token 125: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004294771933928132
    2. ']' → logprob: -8.375429153442383
    3. '+' → logprob: -9.000429153442383
    4. '[' → logprob: -10.375429153442383
    5. '<|end|>' → logprob: -11.625429153442383
    6. ']][' → logprob: -12.250429153442383
    7. ' ][' → logprob: -12.250429153442383
    8. '       ' → logprob: -12.375429153442383
    9. '][]' → logprob: -12.750429153442383
    10. '[c' → logprob: -12.750429153442383

Token 126: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.491498531133402e-06
    2. '0' → logprob: -12.875009536743164
    3. '1' → logprob: -13.250009536743164
    4. ' c' → logprob: -13.375009536743164
    5. '   ' → logprob: -13.750009536743164
    6. '
' → logprob: -14.250009536743164
    7. '+' → logprob: -15.000009536743164
    8. '(c' → logprob: -15.250009536743164
    9. ']' → logprob: -15.375009536743164
    10. ' ' → logprob: -16.000009536743164

Token 127: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.3123099207878113
    2. ']+=' → logprob: -1.562309980392456
    3. '=' → logprob: -3.187309980392456
    4. ']' → logprob: -4.437309741973877
    5. ']==' → logprob: -5.812309741973877
    6. '+=' → logprob: -6.312309741973877
    7. ']+' → logprob: -8.937310218811035
    8. ']=-' → logprob: -9.312310218811035
    9. ']=(' → logprob: -9.312310218811035
    10. ')=' → logprob: -9.437310218811035

Token 128: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6151660680770874
    2. 'd' → logprob: -1.6151660680770874
    3. '1' → logprob: -2.240166187286377
    4. '2' → logprob: -2.615166187286377
    5. '-' → logprob: -2.865166187286377
    6. '(d' → logprob: -4.240166187286377
    7. '3' → logprob: -5.240166187286377
    8. '(' → logprob: -6.115166187286377
    9. ' ' → logprob: -7.865166187286377
    10. '9' → logprob: -7.990166187286377

Token 129: '-d' (ID: 2469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008079739287495613
    2. '<|end|>' → logprob: -5.633079528808594
    3. ' if' → logprob: -6.008079528808594
    4. '
' → logprob: -6.633079528808594
    5. '        
' → logprob: -7.883079528808594
    6. 'if' → logprob: -9.008079528808594
    7. '```' → logprob: -9.258079528808594
    8. '<|end|>' → logprob: -10.258079528808594
    9. '[' → logprob: -11.258079528808594
    10. ',' → logprob: -11.633079528808594

Token 130: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006688379216939211
    2. ' if' → logprob: -6.006688594818115
    3. 'if' → logprob: -6.131688594818115
    4. '
' → logprob: -6.506688594818115
    5. '<|end|>' → logprob: -8.381688117980957
    6. '        
' → logprob: -8.506688117980957
    7. '```' → logprob: -11.131688117980957
    8. '	if' → logprob: -11.381688117980957
    9. '	' → logprob: -11.381688117980957
    10. '   ' → logprob: -11.381688117980957

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011874547228217125
    2. 'if' → logprob: -4.636874675750732
    3. ' if' → logprob: -6.386874675750732
    4. '
' → logprob: -9.261874198913574
    5. '        
' → logprob: -9.386874198913574
    6. '   ' → logprob: -9.386874198913574
    7. '```' → logprob: -9.511874198913574
    8. '<|end|>' → logprob: -9.761874198913574
    9. '[' → logprob: -11.011874198913574
    10. '	if' → logprob: -12.761874198913574

Token 132: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14162974059581757
    2. ' if' → logprob: -2.141629695892334
    3. '       ' → logprob: -4.266629695892334
    4. 'r' → logprob: -8.016630172729492
    5. 'c' → logprob: -8.766630172729492
    6. '   ' → logprob: -10.266630172729492
    7. ' r' → logprob: -10.641630172729492
    8. ' c' → logprob: -12.266630172729492
    9. 'd' → logprob: -13.141630172729492
    10. '	if' → logprob: -13.141630172729492

Token 133: ' d' (ID: 272)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.43372610211372375
    2. 'd' → logprob: -1.0587260723114014
    3. ' A' → logprob: -5.5587263107299805
    4. ' d' → logprob: -6.8087263107299805
    5. 'c' → logprob: -10.43372631072998
    6. 'a' → logprob: -11.55872631072998
    7. '(A' → logprob: -12.43372631072998
    8. 'r' → logprob: -13.18372631072998
    9. '   ' → logprob: -13.30872631072998
    10. '1' → logprob: -13.37122631072998

Token 134: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00010354319238103926
    2. ' ==' → logprob: -9.250103950500488
    3. ']==' → logprob: -12.500103950500488
    4. '=' → logprob: -13.625103950500488
    5. ')==' → logprob: -14.250103950500488
    6. '==
' → logprob: -14.375103950500488
    7. '()==' → logprob: -14.875103950500488
    8. ':' → logprob: -15.375103950500488
    9. '[' → logprob: -15.375103950500488
    10. '===' → logprob: -15.625103950500488

Token 135: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740932583808899
    2. '1' → logprob: -0.9740932583808899
    3. ' ' → logprob: -11.099093437194824
    4. '2' → logprob: -14.724093437194824
    5. '3' → logprob: -16.036592483520508
    6. '-' → logprob: -16.474092483520508
    7. '   ' → logprob: -16.786592483520508
    8. '=' → logprob: -16.974092483520508
    9. '9' → logprob: -17.536592483520508
    10. '```' → logprob: -17.661592483520508

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07944123446941376
    2. ':
' → logprob: -2.5794413089752197
    3. ':c' → logprob: -8.45444107055664
    4. ' c' → logprob: -8.82944107055664
    5. ' and' → logprob: -8.82944107055664
    6. '<|end|>' → logprob: -10.95444107055664
    7. 'c' → logprob: -12.32944107055664
    8. '.' → logprob: -12.45444107055664
    9. 'and' → logprob: -12.45444107055664
    10. '       ' → logprob: -12.70444107055664

Token 137: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5927286744117737
    2. ' c' → logprob: -0.9677286744117737
    3. 'c' → logprob: -2.842728614807129
    4. '<|end|>' → logprob: -4.967728614807129
    5. '       ' → logprob: -6.592728614807129
    6. '	c' → logprob: -8.967728614807129
    7. ' ' → logprob: -9.217728614807129
    8. ')c' → logprob: -9.592728614807129
    9. '```' → logprob: -9.592728614807129
    10. ',c' → logprob: -9.967728614807129

Token 138: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0009126556105911732
    2. ' c' → logprob: -7.000912666320801
    3. 'r' → logprob: -14.3759126663208
    4. '<|end|>' → logprob: -15.8759126663208
    5. '           ' → logprob: -16.375911712646484
    6. '	c' → logprob: -16.500911712646484
    7. '   ' → logprob: -16.625911712646484
    8. '       ' → logprob: -17.125911712646484
    9. '    ' → logprob: -17.250911712646484
    10. '
' → logprob: -17.500911712646484

Token 139: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0012884517200291157
    2. '+' → logprob: -6.751288414001465
    3. ' +=' → logprob: -9.251288414001465
    4. '++' → logprob: -11.251288414001465
    5. '-=' → logprob: -12.001288414001465
    6. '+='' → logprob: -14.001288414001465
    7. '+="' → logprob: -14.501288414001465
    8. ']+=' → logprob: -14.501288414001465
    9. '<|end|>' → logprob: -14.751288414001465
    10. '```' → logprob: -15.501288414001465

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '-' → logprob: -17.625001907348633
    4. '```' → logprob: -17.625001907348633
    5. '   ' → logprob: -18.062501907348633
    6. '<|end|>' → logprob: -18.125001907348633
    7. '0' → logprob: -18.812501907348633
    8. '１' → logprob: -18.937501907348633
    9. '2' → logprob: -19.312501907348633
    10. '۱' → logprob: -19.937501907348633

Token 141: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0833388939499855
    2. 'else' → logprob: -2.583338975906372
    3. ' else' → logprob: -5.458338737487793
    4. '<|end|>' → logprob: -8.958338737487793
    5. '```' → logprob: -10.333338737487793
    6. 'elif' → logprob: -12.083338737487793
    7. '
' → logprob: -12.458338737487793
    8. '	else' → logprob: -12.458338737487793
    9. '   ' → logprob: -14.208338737487793
    10. '<|end|>' → logprob: -14.208338737487793

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32260823249816895
    2. 'else' → logprob: -1.322608232498169
    3. ' else' → logprob: -4.69760799407959
    4. '<|end|>' → logprob: -9.32260799407959
    5. '```' → logprob: -9.69760799407959
    6. 'elif' → logprob: -10.82260799407959
    7. '	else' → logprob: -12.07260799407959
    8. '   ' → logprob: -13.07260799407959
    9. '#' → logprob: -13.69760799407959
    10. '
' → logprob: -14.07260799407959

Token 143: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0024166801013052464
    2. ' else' → logprob: -6.252416610717773
    3. '       ' → logprob: -7.627416610717773
    4. 'elif' → logprob: -15.127416610717773
    5. '```' → logprob: -15.127416610717773
    6. '	else' → logprob: -15.377416610717773
    7. '   ' → logprob: -15.502416610717773
    8. 'd' → logprob: -17.252416610717773
    9. '<|end|>' → logprob: -18.877416610717773
    10. '}else' → logprob: -19.002416610717773

Token 144: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40504178404808044
    2. ':' → logprob: -1.5300418138504028
    3. ':
' → logprob: -2.1550416946411133
    4. '   ' → logprob: -8.280041694641113
    5. '       ' → logprob: -8.780041694641113
    6. 'r' → logprob: -9.405041694641113
    7. '<|end|>' → logprob: -10.155041694641113
    8. '```' → logprob: -10.780041694641113
    9. ' r' → logprob: -11.155041694641113
    10. ' :
' → logprob: -11.905041694641113

Token 145: '           ' (ID: 352)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4790521264076233
    2. '           ' → logprob: -0.9790521264076233
    3. ' r' → logprob: -6.1040520668029785
    4. '       ' → logprob: -6.6040520668029785
    5. '   ' → logprob: -6.6040520668029785
    6. '```' → logprob: -11.729052543640137
    7. ' ' → logprob: -12.604052543640137
    8. '  ' → logprob: -13.479052543640137
    9. '	       ' → logprob: -13.604052543640137
    10. '               ' → logprob: -14.104052543640137

Token 146: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -1.4974866644479334e-05
    2. ' r' → logprob: -11.125015258789062
    3. 'c' → logprob: -16.000015258789062
    4. '   ' → logprob: -16.750015258789062
    5. '       ' → logprob: -18.000015258789062
    6. '	r' → logprob: -18.500015258789062
    7. '           ' → logprob: -18.875015258789062
    8. '```' → logprob: -19.875015258789062
    9. '  ' → logprob: -20.000015258789062
    10. '<|end|>' → logprob: -20.875015258789062

Token 147: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -3.214019307051785e-05
    2. '+' → logprob: -10.500032424926758
    3. ' +=' → logprob: -12.750032424926758
    4. ']+=' → logprob: -13.875032424926758
    5. '```' → logprob: -15.250032424926758
    6. '+='' → logprob: -16.125032424926758
    7. '++' → logprob: -16.250032424926758
    8. '+="' → logprob: -16.625032424926758
    9. '<|end|>' → logprob: -16.750032424926758
    10. '-=' → logprob: -17.000032424926758

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -19.375
    4. '-' → logprob: -19.625
    5. '0' → logprob: -19.875
    6. '```' → logprob: -20.0
    7. '+' → logprob: -21.125
    8. '2' → logprob: -21.3125
    9. '<|end|>' → logprob: -21.375
    10. '
' → logprob: -21.875

Token 149: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12453924864530563
    2. '   ' → logprob: -2.2495391368865967
    3. '
' → logprob: -5.499539375305176
    4. '<|end|>' → logprob: -5.499539375305176
    5. ' print' → logprob: -6.499539375305176
    6. ')' → logprob: -7.624539375305176
    7. '[' → logprob: -7.874539375305176
    8. '    
' → logprob: -8.499539375305176
    9. 'for' → logprob: -8.749539375305176
    10. '#' → logprob: -9.124539375305176

Token 150: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01650197245180607
    2. '   ' → logprob: -4.1415019035339355
    3. ' print' → logprob: -7.8915019035339355
    4. 'for' → logprob: -9.766502380371094
    5. '    
' → logprob: -11.516502380371094
    6. '<|end|>' → logprob: -12.141502380371094
    7. '```' → logprob: -12.766502380371094
    8. '    ' → logprob: -12.766502380371094
    9. '#print' → logprob: -13.266502380371094
    10. ')' → logprob: -13.391502380371094

Token 151: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10176084190607071
    2. 'for' → logprob: -2.3517608642578125
    3. ' for' → logprob: -6.8517608642578125
    4. '   ' → logprob: -8.976760864257812
    5. 'r' → logprob: -9.101760864257812
    6. 'if' → logprob: -9.226760864257812
    7. ' print' → logprob: -9.351760864257812
    8. '#' → logprob: -11.226760864257812
    9. '    
' → logprob: -11.601760864257812
    10. '  
' → logprob: -12.226760864257812

Token 152: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.07470094412565231
    2. '(' → logprob: -2.6997008323669434
    3. '((' → logprob: -5.824700832366943
    4. '(A' → logprob: -7.074700832366943
    5. '(f' → logprob: -7.824700832366943
    6. '('' → logprob: -7.949700832366943
    7. '(chr' → logprob: -9.699701309204102
    8. '()' → logprob: -9.824701309204102
    9. '(c' → logprob: -10.449701309204102
    10. '("' → logprob: -10.824701309204102

Token 153: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05035228282213211
    2. ',W' → logprob: -3.6753523349761963
    3. ',c' → logprob: -4.675352096557617
    4. '+' → logprob: -4.800352096557617
    5. ',end' → logprob: -5.800352096557617
    6. ',w' → logprob: -6.550352096557617
    7. ' ,' → logprob: -7.175352096557617
    8. ')' → logprob: -7.300352096557617
    9. ',C' → logprob: -10.050352096557617
    10. ',",' → logprob: -10.300352096557617

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.101038858294487
    2. 'c' → logprob: -2.351038932800293
    3. ' c' → logprob: -7.726038932800293
    4. ' ' → logprob: -7.851038932800293
    5. ',c' → logprob: -14.976038932800293
    6. 'W' → logprob: -15.601038932800293
    7. '   ' → logprob: -15.726038932800293
    8. ')c' → logprob: -15.851038932800293
    9. '0' → logprob: -16.101037979125977
    10. '(c' → logprob: -16.726037979125977

Token 155: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09339749813079834
    2. ')' → logprob: -2.843397617340088
    3. ',c' → logprob: -3.593397617340088
    4. ',W' → logprob: -5.968397617340088
    5. ',w' → logprob: -7.718397617340088
    6. ',)' → logprob: -8.71839714050293
    7. ' ,' → logprob: -9.09339714050293
    8. ',end' → logprob: -9.09339714050293
    9. ',b' → logprob: -11.59339714050293
    10. ' )' → logprob: -11.84339714050293

Token 156: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001940653775818646
    2. ')' → logprob: -6.251940727233887
    3. ' +' → logprob: -11.626940727233887
    4. '+)' → logprob: -13.001940727233887
    5. ' )' → logprob: -15.251940727233887
    6. '1' → logprob: -15.876940727233887
    7. ')+' → logprob: -16.12693977355957
    8. '+r' → logprob: -16.37693977355957
    9. '+
' → logprob: -16.50193977355957
    10. ')
' → logprob: -16.50193977355957

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. ')' → logprob: -15.00001335144043
    4. '+' → logprob: -18.31251335144043
    5. '```' → logprob: -18.31251335144043
    6. '2' → logprob: -18.43751335144043
    7. '=' → logprob: -18.68751335144043
    8. '-' → logprob: -18.81251335144043
    9. '(' → logprob: -18.87501335144043
    10. '{' → logprob: -18.93751335144043

Token 158: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')`' → logprob: -16.625
    4. ')
' → logprob: -16.875
    5. '))' → logprob: -17.0
    6. ')}' → logprob: -18.25
    7. ')#' → logprob: -18.375
    8. '),' → logprob: -19.125
    9. ')**' → logprob: -19.375
    10. '`)' → logprob: -19.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 156
Tokens correctement prédits (1ère position, stricte): 77
Tokens correctement prédits (1ère position, avec adaptation): 88
Tokens correctement prédits (top 10): 139
Précision stricte (1ère position): 49.36%
Précision adaptée (1ère position): 56.41%
Précision (top 10): 89.10%
================================================================================
