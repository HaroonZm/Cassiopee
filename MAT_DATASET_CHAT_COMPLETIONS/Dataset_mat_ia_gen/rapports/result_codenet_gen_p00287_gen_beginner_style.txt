================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:22:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
W, H, M = map(int, input().split())
walls = []
for _ in range(M):
    px, py, qx, qy = map(int, input().split())
    walls.append((px, py, qx, qy))

Q = int(input())
queries = []
for _ in range(Q):
    sx, sy, gx, gy = map(int, input().split())
    queries.append((sx, sy, gx, gy))

def crosses_wall(x1, y1, x2, y2, wall):
    px, py, qx, qy = wall
    # Wall is vertical
    if px == qx:
        wx = px
        # Check if the segment crosses the vertical line wx
        # The path crosses the wall if x1 and x2 are on opposite sides of wx
        if (x1 - wx) * (x2 - wx) < 0:
            # Now check if the segment's y projection overlap with the wall segment y projection
            miny, maxy = min(py, qy), max(py, qy)
            # Find the y coordinate where path crosses wx
            # line from (x1,y1) to (x2,y2):
            # (y - y1) = (y2 - y1)/(x2 - x1)*(x - x1)
            if x2 != x1:
                cross_y = y1 + (y2 - y1) * (wx - x1) / (x2 - x1)
                if miny < cross_y < maxy:
                    return True
    else:
        # Wall is horizontal
        wy = py
        # Check if the segment crosses the horizontal line wy
        if (y1 - wy) * (y2 - wy) < 0:
            minx, maxx = min(px, qx), max(px, qx)
            if y2 != y1:
                cross_x = x1 + (x2 - x1) * (wy - y1) / (y2 - y1)
                if minx < cross_x < maxx:
                    return True
    return False

for sx, sy, gx, gy in queries:
    count = 0
    for wall in walls:
        if crosses_wall(sx, sy, gx, gy, wall):
            count += 1
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'W' (ID: 54)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' H' (ID: 487)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32796305418014526
    2. ',' → logprob: -1.32796311378479
    3. ' =' → logprob: -4.827962875366211
    4. ')' → logprob: -6.577962875366211
    5. '*' → logprob: -6.577962875366211
    6. ';' → logprob: -6.952962875366211
    7. '```' → logprob: -6.952962875366211
    8. '.' → logprob: -7.202962875366211
    9. ':' → logprob: -7.577962875366211
    10. '#' → logprob: -9.077962875366211

Token 4: ' M' (ID: 391)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04735010117292404
    2. ' =' → logprob: -3.1723501682281494
    3. ',' → logprob: -5.54734992980957
    4. ')' → logprob: -8.17234992980957
    5. ';' → logprob: -10.04734992980957
    6. '.' → logprob: -11.04734992980957
    7. ' ' → logprob: -11.04734992980957
    8. ' ,' → logprob: -11.79734992980957
    9. '```' → logprob: -11.79734992980957
    10. 'for' → logprob: -11.92234992980957

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10152598470449448
    2. ',' → logprob: -2.7265260219573975
    3. '*' → logprob: -4.601525783538818
    4. ' =' → logprob: -4.726525783538818
    5. ':' → logprob: -5.726525783538818
    6. '```' → logprob: -5.851525783538818
    7. ')' → logprob: -5.976525783538818
    8. ';' → logprob: -7.351525783538818
    9. '`' → logprob: -7.601525783538818
    10. '.' → logprob: -7.601525783538818

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31031614542007446
    2. ' map' → logprob: -1.8103160858154297
    3. 'map' → logprob: -3.1853160858154297
    4. '0' → logprob: -3.6853160858154297
    5. '10' → logprob: -4.06031608581543
    6. '100' → logprob: -5.06031608581543
    7. '20' → logprob: -6.18531608581543
    8. '32' → logprob: -6.43531608581543
    9. '256' → logprob: -6.93531608581543
    10. '50' → logprob: -7.06031608581543

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05704956501722336
    2. '(lambda' → logprob: -3.432049512863159
    3. '(int' → logprob: -4.057049751281738
    4. '<|end|>' → logprob: -6.307049751281738
    5. '(str' → logprob: -7.057049751281738
    6. '```' → logprob: -7.182049751281738
    7. '(input' → logprob: -7.307049751281738
    8. '(user' → logprob: -7.932049751281738
    9. ')' → logprob: -8.307049751281738
    10. '(range' → logprob: -9.432049751281738

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05520801246166229
    2. '(' → logprob: -3.1802079677581787
    3. ')' → logprob: -4.680208206176758
    4. '(user' → logprob: -7.055208206176758
    5. 'input' → logprob: -7.680208206176758
    6. '```' → logprob: -8.180208206176758
    7. '(str' → logprob: -8.680208206176758
    8. '(int' → logprob: -8.930208206176758
    9. '(W' → logprob: -9.430208206176758
    10. '('' → logprob: -9.430208206176758

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06199894845485687
    2. ' input' → logprob: -2.8119988441467285
    3. '(input' → logprob: -10.436999320983887
    4. ')' → logprob: -13.811999320983887
    5. ',input' → logprob: -14.561999320983887
    6. ' ' → logprob: -15.186999320983887
    7. '=input' → logprob: -16.31199836730957
    8. '	input' → logprob: -17.43699836730957
    9. '_input' → logprob: -17.43699836730957
    10. '```' → logprob: -17.56199836730957

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7202892899513245
    2. '(' → logprob: -1.0952892303466797
    3. '())' → logprob: -2.2202892303466797
    4. ')' → logprob: -3.7202892303466797
    5. '(()' → logprob: -4.72028923034668
    6. '().' → logprob: -4.84528923034668
    7. '('' → logprob: -5.09528923034668
    8. '```' → logprob: -5.09528923034668
    9. '());' → logprob: -6.22028923034668
    10. '(""))' → logprob: -6.34528923034668

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002252791542559862
    2. 'strip' → logprob: -6.127252578735352
    3. 'rstrip' → logprob: -10.127252578735352
    4. 'read' → logprob: -11.252252578735352
    5. ')' → logprob: -11.752252578735352
    6. ' split' → logprob: -12.127252578735352
    7. '(split' → logprob: -14.252252578735352
    8. 'startswith' → logprob: -15.752252578735352
    9. 'decode' → logprob: -16.12725257873535
    10. 'spl' → logprob: -16.25225257873535

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03676062822341919
    2. '())' → logprob: -3.6617605686187744
    3. '))' → logprob: -4.7867608070373535
    4. '`)' → logprob: -6.5367608070373535
    5. '()' → logprob: -8.286760330200195
    6. '```' → logprob: -9.286760330200195
    7. '(' → logprob: -9.411760330200195
    8. '()))' → logprob: -10.036760330200195
    9. ')`' → logprob: -10.661760330200195
    10. '>)' → logprob: -11.036760330200195

Token 13: 'walls' (ID: 117028)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6673691868782043
    2. ',' → logprob: -2.1673691272735596
    3. '.' → logprob: -2.9173691272735596
    4. '\' → logprob: -2.9173691272735596
    5. '\n' → logprob: -2.9173691272735596
    6. '[' → logprob: -3.4173691272735596
    7. '*' → logprob: -3.4173691272735596
    8. ':' → logprob: -3.6673691272735596
    9. '```' → logprob: -4.042369365692139
    10. ''' → logprob: -4.292369365692139

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22343336045742035
    2. '=' → logprob: -2.473433256149292
    3. '_' → logprob: -2.973433256149292
    4. ')' → logprob: -3.723433256149292
    5. '[' → logprob: -3.848433256149292
    6. '_positions' → logprob: -4.473433494567871
    7. '[]' → logprob: -6.598433494567871
    8. '=[]' → logprob: -6.848433494567871
    9. ' ' → logprob: -7.223433494567871
    10. '[i' → logprob: -7.473433494567871

Token 15: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2344013750553131
    2. 'set' → logprob: -2.1094014644622803
    3. ' []' → logprob: -2.6094014644622803
    4. '[' → logprob: -4.859401226043701
    5. ' set' → logprob: -5.859401226043701
    6. '[int' → logprob: -6.609401226043701
    7. '{}' → logprob: -7.109401226043701
    8. '[][]' → logprob: -7.484401226043701
    9. ' [' → logprob: -8.10940170288086
    10. 'list' → logprob: -8.73440170288086

Token 16: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012303499970585108
    2. '[' → logprob: -7.376230239868164
    3. ' for' → logprob: -7.501230239868164
    4. '```' → logprob: -10.626230239868164
    5. '   ' → logprob: -12.626230239868164
    6. '`' → logprob: -12.876230239868164
    7. 'walls' → logprob: -12.876230239868164
    8. '\n' → logprob: -12.876230239868164
    9. '[]' → logprob: -13.376230239868164
    10. '_' → logprob: -13.376230239868164

Token 17: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5903314352035522
    2. ' _' → logprob: -0.9653314352035522
    3. ' ' → logprob: -3.090331554412842
    4. '_' → logprob: -3.965331554412842
    5. 'i' → logprob: -8.465331077575684
    6. ' w' → logprob: -9.215331077575684
    7. ' line' → logprob: -9.840331077575684
    8. ' ‌' → logprob: -10.340331077575684
    9. ' ' → logprob: -10.590331077575684
    10. ' I' → logprob: -10.590331077575684

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.032315708696842194
    2. 'in' → logprob: -3.657315731048584
    3. 'n' → logprob: -5.907315731048584
    4. ' ' → logprob: -5.907315731048584
    5. 'i' → logprob: -8.782315254211426
    6. ',' → logprob: -9.657315254211426
    7. ' i' → logprob: -9.907315254211426
    8. 's' → logprob: -10.157315254211426
    9. '  ' → logprob: -10.157315254211426
    10. ' n' → logprob: -10.282315254211426

Token 19: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012510710395872593
    2. ' range' → logprob: -4.387510776519775
    3. '	range' → logprob: -14.887510299682617
    4. '_range' → logprob: -15.387510299682617
    5. '(range' → logprob: -15.762510299682617
    6. 'rang' → logprob: -16.637510299682617
    7. 'input' → logprob: -16.762510299682617
    8. 'Range' → logprob: -17.137510299682617
    9. '```' → logprob: -17.137510299682617
    10. 'ran' → logprob: -17.262510299682617

Token 20: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011849570088088512
    2. '(W' → logprob: -4.511849403381348
    3. '(int' → logprob: -7.886849403381348
    4. ' (' → logprob: -8.136849403381348
    5. '(range' → logprob: -9.636849403381348
    6. '(
' → logprob: -11.136849403381348
    7. '(s' → logprob: -11.136849403381348
    8. '(M' → logprob: -12.011849403381348
    9. '(H' → logprob: -12.136849403381348
    10. '(I' → logprob: -12.261849403381348

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003342759795486927
    2. '):
' → logprob: -6.378342628479004
    3. ')' → logprob: -6.503342628479004
    4. ' ):' → logprob: -9.253342628479004
    5. ':' → logprob: -10.253342628479004
    6. '):
' → logprob: -13.128342628479004
    7. '+' → logprob: -13.503342628479004
    8. ',' → logprob: -14.253342628479004
    9. '）：' → logprob: -14.253342628479004
    10. '):

' → logprob: -14.628342628479004

Token 22: '   ' (ID: 271)
  Prédit: ' walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' walls' → logprob: -0.005644586402922869
    2. 'walls' → logprob: -5.630644798278809
    3. '   ' → logprob: -6.755644798278809
    4. ' wall' → logprob: -7.630644798278809
    5. ' w' → logprob: -8.380644798278809
    6. '    ' → logprob: -9.880644798278809
    7. 'Walls' → logprob: -10.255644798278809
    8. 'w' → logprob: -11.380644798278809
    9. ' x' → logprob: -11.880644798278809
    10. '```' → logprob: -11.880644798278809

Token 23: ' px' (ID: 27003)
  Prédit: 'walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'walls' → logprob: -0.4702720642089844
    2. ' walls' → logprob: -1.2202720642089844
    3. 'x' → logprob: -2.5952720642089844
    4. 'w' → logprob: -5.845272064208984
    5. 'wall' → logprob: -6.470272064208984
    6. ' x' → logprob: -8.220272064208984
    7. ' wall' → logprob: -8.345272064208984
    8. 's' → logprob: -9.095272064208984
    9. 'r' → logprob: -9.720272064208984
    10. 'a' → logprob: -9.720272064208984

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005546312779188156
    2. ',y' → logprob: -5.7555460929870605
    3. ' ,' → logprob: -6.1305460929870605
    4. 'y' → logprob: -8.880546569824219
    5. '1' → logprob: -10.880546569824219
    6. '_,' → logprob: -11.505546569824219
    7. 'oints' → logprob: -12.130546569824219
    8. ',w' → logprob: -12.505546569824219
    9. ',p' → logprob: -13.005546569824219
    10. ',l' → logprob: -13.630546569824219

Token 25: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.06278001517057419
    2. ' py' → logprob: -2.8127799034118652
    3. '_py' → logprob: -7.187779903411865
    4. 'qy' → logprob: -11.062780380249023
    5. '(py' → logprob: -11.437780380249023
    6. '.py' → logprob: -11.562780380249023
    7. ' ' → logprob: -12.062780380249023
    8. ' ' → logprob: -12.437780380249023
    9. 'px' → logprob: -12.687780380249023
    10. 'ppy' → logprob: -13.437780380249023

Token 26: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5797719955444336
    2. '=' → logprob: -0.8297719955444336
    3. ',' → logprob: -5.579771995544434
    4. ' ' → logprob: -11.079771995544434
    5. ' ,' → logprob: -11.079771995544434
    6. ')' → logprob: -11.329771995544434
    7. '   ' → logprob: -13.079771995544434
    8. '  ' → logprob: -13.454771995544434
    9. '<|end|>' → logprob: -13.829771995544434
    10. '=int' → logprob: -14.329771995544434

Token 27: ' q' (ID: 2335)
  Prédit: 'qx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qx' → logprob: -0.0799645483493805
    2. 'q' → logprob: -3.5799646377563477
    3. ' q' → logprob: -3.9549646377563477
    4. 'dx' → logprob: -4.454964637756348
    5. 'tx' → logprob: -4.954964637756348
    6. 'px' → logprob: -6.454964637756348
    7. 'p' → logprob: -6.454964637756348
    8. ' dx' → logprob: -6.829964637756348
    9. 'lx' → logprob: -7.079964637756348
    10. '```' → logprob: -7.329964637756348

Token 28: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.976922744186595e-05
    2. ',' → logprob: -10.250040054321289
    3. '_x' → logprob: -12.625040054321289
    4. ' x' → logprob: -15.250040054321289
    5. ' ,' → logprob: -15.375040054321289
    6. '_,' → logprob: -15.625040054321289
    7. ',x' → logprob: -15.875040054321289
    8. '```' → logprob: -16.50004005432129
    9. ' ' → logprob: -16.75004005432129
    10. 'X' → logprob: -17.62504005432129

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.0722858102526516e-05
    2. ' ,' → logprob: -10.125041007995605
    3. ',q' → logprob: -16.12504005432129
    4. ',y' → logprob: -16.37504005432129
    5. '_,' → logprob: -16.37504005432129
    6. '‌,' → logprob: -16.50004005432129
    7. '=' → logprob: -16.62504005432129
    8. '```' → logprob: -17.25004005432129
    9. '`,' → logprob: -17.37504005432129
    10. '<|end|>' → logprob: -17.75004005432129

Token 30: ' q' (ID: 2335)
  Prédit: 'qy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qy' → logprob: -0.012309849262237549
    2. ' q' → logprob: -4.637310028076172
    3. 'q' → logprob: -6.387310028076172
    4. 'y' → logprob: -8.137310028076172
    5. '<|end|>' → logprob: -8.387310028076172
    6. 'ay' → logprob: -9.762310028076172
    7. '<|end|>' → logprob: -9.887310028076172
    8. ' ' → logprob: -10.387310028076172
    9. ' ' → logprob: -10.762310028076172
    10. '.py' → logprob: -11.012310028076172

Token 31: 'y' (ID: 88)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016253482550382614
    2. 'y' → logprob: -4.141253471374512
    3. ',' → logprob: -10.016253471374512
    4. 'py' → logprob: -10.016253471374512
    5. '<|end|>' → logprob: -10.391253471374512
    6. '=' → logprob: -10.516253471374512
    7. 'qy' → logprob: -11.391253471374512
    8. 'w' → logprob: -11.516253471374512
    9. 'q' → logprob: -11.641253471374512
    10. '_' → logprob: -12.141253471374512

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742826819419861
    2. '=' → logprob: -0.9742826819419861
    3. ')' → logprob: -8.974282264709473
    4. '   ' → logprob: -10.099282264709473
    5. ' ' → logprob: -10.724282264709473
    6. ',' → logprob: -11.474282264709473
    7. '  ' → logprob: -14.099282264709473
    8. ']' → logprob: -14.224282264709473
    9. ' )' → logprob: -14.474282264709473
    10. '    ' → logprob: -14.474282264709473

Token 33: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.018151231110095978
    2. 'map' → logprob: -4.01815128326416
    3. ' list' → logprob: -14.51815128326416
    4. '	map' → logprob: -14.51815128326416
    5. ' mapa' → logprob: -16.768150329589844
    6. '   ' → logprob: -16.768150329589844
    7. '(map' → logprob: -16.893150329589844
    8. ',map' → logprob: -16.893150329589844
    9. ' ' → logprob: -17.518150329589844
    10. 'list' → logprob: -17.643150329589844

Token 34: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0012520157033577561
    2. '(' → logprob: -7.001252174377441
    3. '<int' → logprob: -8.251252174377441
    4. '[int' → logprob: -10.376252174377441
    5. '<|end|>' → logprob: -10.876252174377441
    6. 'int' → logprob: -11.251252174377441
    7. '=int' → logprob: -12.751252174377441
    8. '(lambda' → logprob: -12.751252174377441
    9. ',int' → logprob: -13.126252174377441
    10. ']int' → logprob: -13.376252174377441

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015153385465964675
    2. ',input' → logprob: -6.5015153884887695
    3. '(' → logprob: -12.12651538848877
    4. '(input' → logprob: -12.75151538848877
    5. 'input' → logprob: -13.37651538848877
    6. ')' → logprob: -13.87651538848877
    7. ' ,' → logprob: -13.87651538848877
    8. '(),' → logprob: -14.87651538848877
    9. '```' → logprob: -15.25151538848877
    10. '   ' → logprob: -15.50151538848877

Token 36: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3132634460926056
    2. ' input' → logprob: -1.3132634162902832
    3. '(input' → logprob: -15.063263893127441
    4. ',input' → logprob: -15.188263893127441
    5. '	input' → logprob: -15.438263893127441
    6. '[input' → logprob: -15.438263893127441
    7. ')' → logprob: -15.563263893127441
    8. '=input' → logprob: -15.563263893127441
    9. '<input' → logprob: -15.688263893127441
    10. '_input' → logprob: -16.313262939453125

Token 37: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.816093228830141e-06
    2. '()' → logprob: -13.00000286102295
    3. ')' → logprob: -15.50000286102295
    4. ' ().' → logprob: -16.125001907348633
    5. ').' → logprob: -16.375001907348633
    6. '.' → logprob: -16.750001907348633
    7. '())' → logprob: -17.125001907348633
    8. '>().' → logprob: -17.250001907348633
    9. '()).' → logprob: -17.375001907348633
    10. '().__' → logprob: -17.375001907348633

Token 38: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. 'strip' → logprob: -14.625000953674316
    3. 'spl' → logprob: -15.500000953674316
    4. 'rstrip' → logprob: -16.75
    5. ' split' → logprob: -17.0
    6. '(split' → logprob: -17.125
    7. ')' → logprob: -17.25
    8. 'plit' → logprob: -17.375
    9. 's' → logprob: -17.875
    10. '```' → logprob: -19.75

Token 39: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21171437203884125
    2. '())' → logprob: -1.8367143869400024
    3. '()' → logprob: -3.461714267730713
    4. '))' → logprob: -10.586714744567871
    5. '())
' → logprob: -10.836714744567871
    6. ')
' → logprob: -11.461714744567871
    7. '`)' → logprob: -11.461714744567871
    8. '(' → logprob: -12.336714744567871
    9. ')`' → logprob: -12.961714744567871
    10. '()
' → logprob: -13.211714744567871

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6511113047599792
    2. 'walls' → logprob: -0.9011113047599792
    3. ' walls' → logprob: -3.526111364364624
    4. ')' → logprob: -3.526111364364624
    5. '```' → logprob: -6.151111125946045
    6. '    
' → logprob: -6.151111125946045
    7. 'w' → logprob: -6.276111125946045
    8. '\' → logprob: -6.901111125946045
    9. '\n' → logprob: -7.151111125946045
    10. '
' → logprob: -7.151111125946045

Token 41: ' walls' (ID: 20562)
  Prédit: 'walls'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walls' (adapté à ' walls') → logprob: -0.6885762810707092
    2. '   ' → logprob: -0.8135762810707092
    3. ' walls' → logprob: -2.9385762214660645
    4. 'w' → logprob: -7.3135762214660645
    5. 'wall' → logprob: -8.688576698303223
    6. '    
' → logprob: -8.813576698303223
    7. ' if' → logprob: -9.313576698303223
    8. ')' → logprob: -9.688576698303223
    9. '```' → logprob: -9.813576698303223
    10. 'if' → logprob: -9.813576698303223

Token 42: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07897835969924927
    2. '.' → logprob: -2.5789783000946045
    3. ' .' → logprob: -10.703978538513184
    4. '.extend' → logprob: -10.828978538513184
    5. '.ap' → logprob: -11.203978538513184
    6. '.app' → logprob: -11.203978538513184
    7. '.add' → logprob: -12.453978538513184
    8. '.push' → logprob: -12.453978538513184
    9. '.setdefault' → logprob: -12.953978538513184
    10. '​.' → logprob: -12.953978538513184

Token 43: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.018397850915789604
    2. '(' → logprob: -4.018397808074951
    3. '(((' → logprob: -9.14339828491211
    4. '([(' → logprob: -9.76839828491211
    5. '(([' → logprob: -10.01839828491211
    6. '([' → logprob: -10.39339828491211
    7. '(()' → logprob: -12.89339828491211
    8. '(('' → logprob: -13.89339828491211
    9. '(
' → logprob: -13.89339828491211
    10. '(({' → logprob: -14.01839828491211

Token 44: 'px' (ID: 3207)
  Prédit: 'px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.003680955618619919
    2. '(px' → logprob: -5.628681182861328
    3. ' px' → logprob: -9.503681182861328
    4. '(' → logprob: -12.503681182861328
    5. 'py' → logprob: -13.878681182861328
    6. '   ' → logprob: -14.628681182861328
    7. ')' → logprob: -14.878681182861328
    8. '_px' → logprob: -15.753681182861328
    9. ' (' → logprob: -15.878681182861328
    10. ':px' → logprob: -16.003681182861328

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.464347173576243e-05
    2. ' ,' → logprob: -10.87503433227539
    3. ',
' → logprob: -11.75003433227539
    4. ')' → logprob: -12.87503433227539
    5. ',)' → logprob: -13.37503433227539
    6. '<|end|>' → logprob: -13.75003433227539
    7. ',p' → logprob: -14.50003433227539
    8. '‌,' → logprob: -14.75003433227539
    9. ',

' → logprob: -15.00003433227539
    10. ',y' → logprob: -15.37503433227539

Token 46: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.09080343693494797
    2. ' py' → logprob: -2.465803384780884
    3. '_py' → logprob: -7.465803623199463
    4. ' ' → logprob: -7.715803623199463
    5. '(py' → logprob: -8.090803146362305
    6. 'qy' → logprob: -8.215803146362305
    7. ' ' → logprob: -9.840803146362305
    8. ''' → logprob: -10.090803146362305
    9. 'px' → logprob: -10.590803146362305
    10. '.py' → logprob: -10.590803146362305

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011284107313258573
    2. ',
' → logprob: -9.375112533569336
    3. ' ,' → logprob: -10.875112533569336
    4. ',q' → logprob: -12.625112533569336
    5. ',

' → logprob: -13.000112533569336
    6. '`,' → logprob: -13.875112533569336
    7. '),' → logprob: -14.375112533569336
    8. '   ' → logprob: -14.625112533569336
    9. ',,' → logprob: -14.875112533569336
    10. '',' → logprob: -15.000112533569336

Token 48: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.14523527026176453
    2. 'qx' → logprob: -2.020235300064087
    3. ' ' → logprob: -7.020235061645508
    4. 'q' → logprob: -7.520235061645508
    5. ' ,' → logprob: -8.270235061645508
    6. 'qy' → logprob: -8.895235061645508
    7. ' )' → logprob: -9.020235061645508
    8. ',' → logprob: -9.020235061645508
    9. ' px' → logprob: -9.520235061645508
    10. ')' → logprob: -9.645235061645508

Token 49: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.650518920039758e-06
    2. ',' → logprob: -12.625003814697266
    3. ' x' → logprob: -15.375003814697266
    4. 'u' → logprob: -18.000003814697266
    5. ',x' → logprob: -18.125003814697266
    6. 'y' → logprob: -18.250003814697266
    7. ')x' → logprob: -18.375003814697266
    8. '```' → logprob: -18.375003814697266
    9. '_x' → logprob: -18.500003814697266
    10. '
' → logprob: -18.750003814697266

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.913265239447355e-05
    2. ' ,' → logprob: -10.000099182128906
    3. ',q' → logprob: -10.625099182128906
    4. ',
' → logprob: -10.750099182128906
    5. ',y' → logprob: -13.000099182128906
    6. ',

' → logprob: -13.125099182128906
    7. 'qy' → logprob: -13.750099182128906
    8. ')' → logprob: -14.125099182128906
    9. '),' → logprob: -14.375099182128906
    10. '`,' → logprob: -15.250099182128906

Token 51: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.20162636041641235
    2. 'qy' → logprob: -1.7016263008117676
    3. 'q' → logprob: -9.201626777648926
    4. ',q' → logprob: -10.201626777648926
    5. ')' → logprob: -11.201626777648926
    6. '	q' → logprob: -11.701626777648926
    7. ' )' → logprob: -11.951626777648926
    8. ' ' → logprob: -12.076626777648926
    9. ' y' → logprob: -12.201626777648926
    10. '(q' → logprob: -12.576626777648926

Token 52: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3132845163345337
    2. 'x' → logprob: -1.3132845163345337
    3. ')' → logprob: -11.938284873962402
    4. '```' → logprob: -12.438284873962402
    5. ',' → logprob: -12.938284873962402
    6. 'w' → logprob: -13.313284873962402
    7. ' ' → logprob: -13.313284873962402
    8. '_y' → logprob: -13.313284873962402
    9. '_' → logprob: -13.813284873962402
    10. ' y' → logprob: -14.063284873962402

Token 53: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07891842722892761
    2. ')' → logprob: -2.57891845703125
    3. '))
' → logprob: -10.70391845703125
    4. ')
' → logprob: -12.82891845703125
    5. ')))' → logprob: -13.32891845703125
    6. '),' → logprob: -13.82891845703125
    7. ' ))' → logprob: -14.70391845703125
    8. ' )' → logprob: -16.70391845703125
    9. '   ' → logprob: -17.07891845703125
    10. ''))' → logprob: -17.07891845703125

Token 54: 'Q' (ID: 48)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7410240173339844
    2. '#' → logprob: -2.1160240173339844
    3. 'visited' → logprob: -2.6160240173339844
    4. 'graph' → logprob: -3.2410240173339844
    5. 'dist' → logprob: -3.3660240173339844
    6. 'n' → logprob: -3.3660240173339844
    7. 'dire' → logprob: -3.3660240173339844
    8. 'v' → logprob: -3.4910240173339844
    9. 'distance' → logprob: -3.7410240173339844
    10. 'x' → logprob: -3.9910240173339844

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17976045608520508
    2. '=' → logprob: -1.804760456085205
    3. ',' → logprob: -12.179759979248047
    4. '.' → logprob: -12.304759979248047
    5. '=int' → logprob: -13.429759979248047
    6. ')' → logprob: -13.929759979248047
    7. '   ' → logprob: -14.054759979248047
    8. ' =
' → logprob: -14.179759979248047
    9. '  ' → logprob: -14.679759979248047
    10. ' ' → logprob: -15.179759979248047

Token 56: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759400725364685
    2. ' int' → logprob: -0.8259400725364685
    3. '=int' → logprob: -15.575940132141113
    4. ' ' → logprob: -16.325939178466797
    5. ' map' → logprob: -16.575939178466797
    6. '<int' → logprob: -16.575939178466797
    7. '(int' → logprob: -16.700939178466797
    8. '[int' → logprob: -16.825939178466797
    9. 'map' → logprob: -16.950939178466797
    10. 'in' → logprob: -17.575939178466797

Token 57: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023327236995100975
    2. '(input' → logprob: -3.773327350616455
    3. '(
' → logprob: -10.273326873779297
    4. '(int' → logprob: -10.398326873779297
    5. '(in' → logprob: -12.523326873779297
    6. '()' → logprob: -12.898326873779297
    7. ' (' → logprob: -13.148326873779297
    8. '(

' → logprob: -13.648326873779297
    9. '("("' → logprob: -13.773326873779297
    10. 'input' → logprob: -13.898326873779297

Token 58: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17393796145915985
    2. '()' → logprob: -1.9239379167556763
    3. ')' → logprob: -4.298937797546387
    4. '().' → logprob: -11.173937797546387
    5. '())
' → logprob: -11.798937797546387
    6. '()
' → logprob: -12.173937797546387
    7. '();)' → logprob: -12.423937797546387
    8. '(' → logprob: -13.048937797546387
    9. ' ())' → logprob: -13.423937797546387
    10. '`)' → logprob: -14.173937797546387

Token 59: 'queries' (ID: 63909)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33381569385528564
    2. 'queries' → logprob: -1.3338156938552856
    3. 'query' → logprob: -4.583815574645996
    4. 'result' → logprob: -5.583815574645996
    5. 'results' → logprob: -5.708815574645996
    6. 'answers' → logprob: -6.458815574645996
    7. 'answer' → logprob: -8.333815574645996
    8. 'points' → logprob: -8.458815574645996
    9. 'dire' → logprob: -8.958815574645996
    10. 'responses' → logprob: -9.083815574645996

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1182226613163948
    2. '=' → logprob: -2.243222713470459
    3. '.' → logprob: -6.243222713470459
    4. '_' → logprob: -6.493222713470459
    5. '[' → logprob: -6.868222713470459
    6. '[]' → logprob: -8.2432222366333
    7. '=[]' → logprob: -8.9932222366333
    8. '[:]' → logprob: -9.2432222366333
    9. 's' → logprob: -9.3682222366333
    10. ')' → logprob: -9.7432222366333

Token 61: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03724760189652443
    2. '[' → logprob: -3.787247657775879
    3. ' []' → logprob: -4.287247657775879
    4. ' [' → logprob: -9.912247657775879
    5. '[int' → logprob: -10.162247657775879
    6. '[]
' → logprob: -10.412247657775879
    7. '[input' → logprob: -10.912247657775879
    8. '[
' → logprob: -12.037247657775879
    9. '[list' → logprob: -12.537247657775879
    10. '[len' → logprob: -12.912247657775879

Token 62: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.061054359131958e-06
    2. ' for' → logprob: -11.750007629394531
    3. '<|end|>' → logprob: -16.75000762939453
    4. '```' → logprob: -17.87500762939453
    5. '
' → logprob: -18.37500762939453
    6. 'For' → logprob: -18.50000762939453
    7. '	for' → logprob: -18.62500762939453
    8. 'f' → logprob: -20.00000762939453
    9. '[' → logprob: -20.25000762939453
    10. '_for' → logprob: -20.37500762939453

Token 63: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4207715690135956
    2. '_' → logprob: -1.170771598815918
    3. ' ' → logprob: -3.420771598815918
    4. ' i' → logprob: -7.420771598815918
    5. ' ' → logprob: -10.170771598815918
    6. ' q' → logprob: -12.545771598815918
    7. ' in' → logprob: -13.670771598815918
    8. ' ‌' → logprob: -13.795771598815918
    9. ' ▁' → logprob: -14.170771598815918
    10. ' range' → logprob: -14.920771598815918

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23856021463871002
    2. 'in' → logprob: -1.8635601997375488
    3. ' ' → logprob: -3.488560199737549
    4. ' _' → logprob: -4.113560199737549
    5. '_' → logprob: -4.613560199737549
    6. ' i' → logprob: -8.613560676574707
    7. ' Q' → logprob: -10.613560676574707
    8. 'n' → logprob: -10.863560676574707
    9. '_in' → logprob: -10.988560676574707
    10. 'i' → logprob: -11.363560676574707

Token 65: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12695446610450745
    2. ' range' → logprob: -2.1269545555114746
    3. '_' → logprob: -11.001954078674316
    4. '_range' → logprob: -12.001954078674316
    5. '(range' → logprob: -13.876954078674316
    6. '	range' → logprob: -14.126954078674316
    7. ' ' → logprob: -14.376954078674316
    8. 'in' → logprob: -15.501954078674316
    9. 'ran' → logprob: -15.876954078674316
    10. ' in' → logprob: -15.876954078674316

Token 66: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.005575713701546192
    2. '(' → logprob: -5.255575656890869
    3. ' (' → logprob: -8.130576133728027
    4. ' Q' → logprob: -10.005576133728027
    5. 'Q' → logprob: -14.005576133728027
    6. ' ' → logprob: -14.005576133728027
    7. '(q' → logprob: -16.00557518005371
    8. '(
' → logprob: -16.50557518005371
    9. '(int' → logprob: -16.50557518005371
    10. '	Q' → logprob: -16.63057518005371

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0035025496035814285
    2. ':' → logprob: -5.878502368927002
    3. '):
' → logprob: -8.00350284576416
    4. ' ):' → logprob: -8.37850284576416
    5. ',' → logprob: -9.87850284576416
    6. ')' → logprob: -9.87850284576416
    7. '():' → logprob: -10.75350284576416
    8. '   ' → logprob: -12.62850284576416
    9. ' :' → logprob: -13.25350284576416
    10. ']:' → logprob: -13.75350284576416

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05146980658173561
    2. ' queries' → logprob: -3.6764698028564453
    3. ' px' → logprob: -5.176469802856445
    4. '    ' → logprob: -5.176469802856445
    5. '    
' → logprob: -5.926469802856445
    6. '   ' → logprob: -5.926469802856445
    7. 'queries' → logprob: -6.051469802856445
    8. ' ' → logprob: -7.301469802856445
    9. ' ' → logprob: -7.676469802856445
    10. ' q' → logprob: -7.801469802856445

Token 69: ' sx' (ID: 39428)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8007200956344604
    2. ' x' → logprob: -2.30072021484375
    3. 'sx' (adapté à ' sx') → logprob: -2.30072021484375
    4. 'a' → logprob: -2.42572021484375
    5. ' sx' → logprob: -2.80072021484375
    6. 's' → logprob: -3.17572021484375
    7. 'p' → logprob: -3.55072021484375
    8. 'px' → logprob: -3.80072021484375
    9. ' a' → logprob: -3.92572021484375
    10. ' p' → logprob: -4.05072021484375

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002647927321959287
    2. ' ,' → logprob: -8.250265121459961
    3. ',y' → logprob: -13.375265121459961
    4. 's' → logprob: -14.500265121459961
    5. ',s' → logprob: -14.625265121459961
    6. '_,' → logprob: -15.125265121459961
    7. '‌,' → logprob: -15.375265121459961
    8. 'x' → logprob: -16.37526512145996
    9. ',
' → logprob: -16.50026512145996
    10. ',x' → logprob: -16.50026512145996

Token 71: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.6931917071342468
    2. ' sy' → logprob: -0.6931917071342468
    3. '_sy' → logprob: -10.568191528320312
    4. 's' → logprob: -11.318191528320312
    5. 'syz' → logprob: -12.818191528320312
    6. ' ' → logprob: -13.568191528320312
    7. ' ' → logprob: -14.443191528320312
    8. ' s' → logprob: -14.568191528320312
    9. '<|end|>' → logprob: -14.818191528320312
    10. '.sy' → logprob: -15.193191528320312

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26979532837867737
    2. ' =' → logprob: -2.0197954177856445
    3. '=' → logprob: -2.2697954177856445
    4. ' ,' → logprob: -7.7697954177856445
    5. ')' → logprob: -11.894795417785645
    6. '<|end|>' → logprob: -12.144795417785645
    7. ' ' → logprob: -12.894795417785645
    8. '=input' → logprob: -13.394795417785645
    9. '   ' → logprob: -13.832295417785645
    10. ',s' → logprob: -13.957295417785645

Token 73: ' gx' (ID: 142840)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.5779956579208374
    2. ' tx' → logprob: -1.0779956579208374
    3. 'ex' → logprob: -3.202995777130127
    4. 'dx' → logprob: -3.452995777130127
    5. ' dx' → logprob: -4.202995777130127
    6. ' ex' → logprob: -4.577995777130127
    7. '	tx' → logprob: -8.202995300292969
    8. ' ' → logprob: -8.702995300292969
    9. 'gx' → logprob: -8.702995300292969
    10. 'sx' → logprob: -9.202995300292969

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4140441635390744e-05
    2. ' ,' → logprob: -11.250014305114746
    3. '=' → logprob: -14.000014305114746
    4. '_,' → logprob: -16.75001335144043
    5. '<|end|>' → logprob: -16.75001335144043
    6. '‌,' → logprob: -17.00001335144043
    7. ',y' → logprob: -17.37501335144043
    8. ',
' → logprob: -17.50001335144043
    9. ' =' → logprob: -17.50001335144043
    10. 's' → logprob: -18.00001335144043

Token 75: ' gy' (ID: 11045)
  Prédit: 'gy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gy' → logprob: -0.6934385299682617
    2. ' gy' → logprob: -0.6934385299682617
    3. ' gx' → logprob: -9.443438529968262
    4. 'gx' → logprob: -9.443438529968262
    5. ' g' → logprob: -9.943438529968262
    6. 'g' → logprob: -9.943438529968262
    7. ' gz' → logprob: -11.318438529968262
    8. 'gz' → logprob: -11.568438529968262
    9. 'gyz' → logprob: -12.693438529968262
    10. 'y' → logprob: -12.943438529968262

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14268434047698975
    2. '=' → logprob: -2.0176844596862793
    3. ' ' → logprob: -12.142683982849121
    4. '   ' → logprob: -12.892683982849121
    5. ')' → logprob: -13.892683982849121
    6. '    ' → logprob: -15.517683982849121
    7. ',' → logprob: -16.267684936523438
    8. '=input' → logprob: -16.267684936523438
    9. '  ' → logprob: -17.142684936523438
    10. ' =)' → logprob: -17.267684936523438

Token 77: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0001805377542041242
    2. 'map' → logprob: -8.6251802444458
    3. '	map' → logprob: -15.5001802444458
    4. ' ' → logprob: -15.7501802444458
    5. ' ' → logprob: -15.8751802444458
    6. '(map' → logprob: -15.8751802444458
    7. ' list' → logprob: -16.000181198120117
    8. ' mapa' → logprob: -16.500181198120117
    9. ',map' → logprob: -16.625181198120117
    10. ' maps' → logprob: -17.250181198120117

Token 78: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.016308369114995003
    2. '(' → logprob: -4.141308307647705
    3. '<int' → logprob: -8.641308784484863
    4. '(in' → logprob: -10.141308784484863
    5. '=int' → logprob: -11.641308784484863
    6. ']int' → logprob: -11.641308784484863
    7. '(
' → logprob: -11.766308784484863
    8. ',int' → logprob: -11.891308784484863
    9. '<|end|>' → logprob: -12.016308784484863
    10. '[int' → logprob: -12.016308784484863

Token 79: ',' (ID: 11)
  Prédit: ',int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.20772933959960938
    2. ',' → logprob: -1.8327293395996094
    3. '(int' → logprob: -3.8327293395996094
    4. ',input' → logprob: -5.332729339599609
    5. '<int' → logprob: -8.20772933959961
    6. 'int' → logprob: -8.58272933959961
    7. ',float' → logprob: -8.95772933959961
    8. '(' → logprob: -8.95772933959961
    9. '<|end|>' → logprob: -9.45772933959961
    10. '[int' → logprob: -9.58272933959961

Token 80: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.13967135548591614
    2. 'int' → logprob: -2.1396713256835938
    3. ' input' → logprob: -4.389671325683594
    4. '(input' → logprob: -9.139671325683594
    5. ' int' → logprob: -9.389671325683594
    6. '(int' → logprob: -10.264671325683594
    7. '<int' → logprob: -11.389671325683594
    8. '=input' → logprob: -11.639671325683594
    9. '<input' → logprob: -12.764671325683594
    10. '[int' → logprob: -13.514671325683594

Token 81: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.941850526549388e-06
    2. '()' → logprob: -11.875007629394531
    3. '().__' → logprob: -15.500007629394531
    4. '.' → logprob: -15.625007629394531
    5. '>().' → logprob: -15.625007629394531
    6. '(' → logprob: -16.25000762939453
    7. ')' → logprob: -16.37500762939453
    8. ').' → logprob: -17.12500762939453
    9. ' ().' → logprob: -17.12500762939453
    10. '().'' → logprob: -17.87500762939453

Token 82: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.77627644513268e-06
    2. 'spl' → logprob: -12.250008583068848
    3. '(split' → logprob: -13.375008583068848
    4. ')' → logprob: -14.375008583068848
    5. '_split' → logprob: -14.625008583068848
    6. '.split' → logprob: -15.000008583068848
    7. '())' → logprob: -15.375008583068848
    8. '()' → logprob: -15.375008583068848
    9. '().' → logprob: -15.500008583068848
    10. '```' → logprob: -15.875008583068848

Token 83: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006068871589377522
    2. '()' → logprob: -7.625607013702393
    3. '())' → logprob: -9.250606536865234
    4. '))' → logprob: -11.125606536865234
    5. '(' → logprob: -13.125606536865234
    6. '`)' → logprob: -13.500606536865234
    7. ')`' → logprob: -13.500606536865234
    8. ' )' → logprob: -13.625606536865234
    9. ')
' → logprob: -14.000606536865234
    10. '）' → logprob: -15.000606536865234

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004746406921185553
    2. 'queries' → logprob: -8.00047492980957
    3. '```' → logprob: -10.62547492980957
    4. '<|end|>' → logprob: -10.75047492980957
    5. '    
' → logprob: -11.12547492980957
    6. ')' → logprob: -11.50047492980957
    7. '       ' → logprob: -11.50047492980957
    8. '
' → logprob: -11.62547492980957
    9. '    ' → logprob: -11.87547492980957
    10. ',' → logprob: -12.00047492980957

Token 85: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' (adapté à ' queries') → logprob: -0.20255261659622192
    2. ' queries' → logprob: -1.8275525569915771
    3. '   ' → logprob: -3.827552556991577
    4. '```' → logprob: -9.077552795410156
    5. ' ' → logprob: -9.202552795410156
    6. 's' → logprob: -9.202552795410156
    7. '    ' → logprob: -9.952552795410156
    8. 'questions' → logprob: -9.952552795410156
    9. 'q' → logprob: -9.952552795410156
    10. ' ' → logprob: -10.452552795410156

Token 86: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3133125305175781
    2. '.append' → logprob: -1.3133125305175781
    3. '.app' → logprob: -11.188312530517578
    4. '.Append' → logprob: -12.063312530517578
    5. ' .' → logprob: -12.188312530517578
    6. 'append' → logprob: -12.188312530517578
    7. '.ap' → logprob: -12.563312530517578
    8. '.push' → logprob: -12.938312530517578
    9. '.py' → logprob: -12.938312530517578
    10. '​.' → logprob: -13.063312530517578

Token 87: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.07892481982707977
    2. '(' → logprob: -2.5789248943328857
    3. '(
' → logprob: -10.828925132751465
    4. '(s' → logprob: -12.453925132751465
    5. '(((' → logprob: -12.578925132751465
    6. '(('' → logprob: -13.203925132751465
    7. '(()' → logprob: -13.578925132751465
    8. '(

' → logprob: -13.703925132751465
    9. ' (' → logprob: -13.953925132751465
    10. '("("' → logprob: -14.328925132751465

Token 88: 'sx' (ID: 102754)
  Prédit: 'sx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -6.682846287731081e-05
    2. ' sx' → logprob: -10.125066757202148
    3. 's' → logprob: -10.625066757202148
    4. '(s' → logprob: -13.875066757202148
    5. ''s' → logprob: -15.000066757202148
    6. '`s' → logprob: -15.500066757202148
    7. 'sy' → logprob: -15.625066757202148
    8. ')' → logprob: -15.625066757202148
    9. '(' → logprob: -16.12506675720215
    10. ')s' → logprob: -16.12506675720215

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.165027217415627e-05
    2. ' ,' → logprob: -11.000021934509277
    3. ',
' → logprob: -12.625021934509277
    4. '<|end|>' → logprob: -14.250021934509277
    5. '‌,' → logprob: -14.875021934509277
    6. ',

' → logprob: -15.875021934509277
    7. ',s' → logprob: -16.50002098083496
    8. ',)' → logprob: -16.75002098083496
    9. ')' → logprob: -16.87502098083496
    10. ',\
' → logprob: -17.00002098083496

Token 90: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.25229066610336304
    2. ' sy' → logprob: -1.5022907257080078
    3. '<|end|>' → logprob: -8.502290725708008
    4. '_sy' → logprob: -9.002290725708008
    5. ' ' → logprob: -10.752290725708008
    6. '.sy' → logprob: -12.502290725708008
    7. 'syz' → logprob: -13.002290725708008
    8. 'Sy' → logprob: -13.377290725708008
    9. 's' → logprob: -13.502290725708008
    10. ')' → logprob: -13.502290725708008

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017588881019037217
    2. ' ,' → logprob: -8.750175476074219
    3. ',
' → logprob: -11.625175476074219
    4. ')' → logprob: -13.000175476074219
    5. '),' → logprob: -13.125175476074219
    6. '`,' → logprob: -13.750175476074219
    7. ',

' → logprob: -14.000175476074219
    8. ',)' → logprob: -14.500175476074219
    9. ',,' → logprob: -15.000175476074219
    10. '   ' → logprob: -15.625175476074219

Token 92: ' gx' (ID: 142840)
  Prédit: 'gx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gx' → logprob: -0.0789097249507904
    2. ' gx' → logprob: -2.5789096355438232
    3. 'gy' → logprob: -11.203909873962402
    4. ' ' → logprob: -12.953909873962402
    5. 'gz' → logprob: -13.578909873962402
    6. ')' → logprob: -14.328909873962402
    7. 'g' → logprob: -14.828909873962402
    8. ' gy' → logprob: -14.828909873962402
    9. ' ' → logprob: -15.453909873962402
    10. 'gs' → logprob: -15.828909873962402

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014168102643452585
    2. ' ,' → logprob: -8.875142097473145
    3. ',
' → logprob: -13.500142097473145
    4. '),' → logprob: -16.250141143798828
    5. '‌,' → logprob: -16.375141143798828
    6. ')' → logprob: -16.625141143798828
    7. '```' → logprob: -16.750141143798828
    8. ',y' → logprob: -17.125141143798828
    9. ',

' → logprob: -17.500141143798828
    10. '<|end|>' → logprob: -18.125141143798828

Token 94: ' gy' (ID: 11045)
  Prédit: 'gy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gy' → logprob: -0.5759486556053162
    2. ' gy' → logprob: -0.8259486556053162
    3. 'qy' → logprob: -11.825948715209961
    4. 'gyl' → logprob: -14.825948715209961
    5. 'Gy' → logprob: -15.325948715209961
    6. 'gyz' → logprob: -15.825948715209961
    7. 'g' → logprob: -15.825948715209961
    8. ' gx' → logprob: -15.825948715209961
    9. ' gz' → logprob: -15.825948715209961
    10. 'yg' → logprob: -16.07594871520996

Token 95: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04859872907400131
    2. '))' → logprob: -3.0485987663269043
    3. ')
' → logprob: -11.673598289489746
    4. '))
' → logprob: -13.423598289489746
    5. ')))' → logprob: -14.923598289489746
    6. ' )' → logprob: -15.173598289489746
    7. '`)' → logprob: -15.298598289489746
    8. ')`' → logprob: -15.673598289489746
    9. '),' → logprob: -15.798598289489746
    10. '')' → logprob: -16.673599243164062

Token 96: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05211297422647476
    2. 'def' → logprob: -3.4271130561828613
    3. 'd' → logprob: -4.427113056182861
    4. '.' → logprob: -6.052113056182861
    5. 'visited' → logprob: -6.302113056182861
    6. 'from' → logprob: -7.427113056182861
    7. 'for' → logprob: -8.802112579345703
    8. 'import' → logprob: -9.052112579345703
    9. ')' → logprob: -9.052112579345703
    10. 'f' → logprob: -9.177112579345703

Token 97: ' crosses' (ID: 95853)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7088269591331482
    2. ' bfs' → logprob: -1.958827018737793
    3. ' can' → logprob: -2.083827018737793
    4. ' check' → logprob: -2.333827018737793
    5. ' dfs' → logprob: -3.083827018737793
    6. ' space' → logprob: -3.083827018737793
    7. ' solve' → logprob: -3.583827018737793
    8. ' valid' → logprob: -4.708827018737793
    9. ' ' → logprob: -5.333827018737793
    10. ' find' → logprob: -6.083827018737793

Token 98: '_wall' (ID: 121548)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010375719284638762
    2. '_' → logprob: -7.87603759765625
    3. '_wall' → logprob: -7.87603759765625
    4. '(w' → logprob: -9.62603759765625
    5. '((' → logprob: -9.75103759765625
    6. '("("' → logprob: -10.37603759765625
    7. '(x' → logprob: -10.62603759765625
    8. ' (' → logprob: -11.00103759765625
    9. '(line' → logprob: -11.50103759765625
    10. '_w' → logprob: -11.50103759765625

Token 99: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006288022268563509
    2. '((' → logprob: -8.375628471374512
    3. '(x' → logprob: -8.625628471374512
    4. '(w' → logprob: -9.500628471374512
    5. '(p' → logprob: -10.125628471374512
    6. ' (' → logprob: -10.750628471374512
    7. '(s' → logprob: -11.125628471374512
    8. '_' → logprob: -11.250628471374512
    9. '(line' → logprob: -11.625628471374512
    10. '(a' → logprob: -11.625628471374512

Token 100: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0059335362166166306
    2. '1' → logprob: -5.63093376159668
    3. ',y' → logprob: -6.50593376159668
    4. ' ,' → logprob: -8.13093376159668
    5. '-' → logprob: -8.88093376159668
    6. '_,' → logprob: -9.00593376159668
    7. '+' → logprob: -9.50593376159668
    8. ')' → logprob: -9.88093376159668
    9. '_' → logprob: -10.00593376159668
    10. ',x' → logprob: -10.88093376159668

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008198728901334107
    2. ' ,' → logprob: -7.125819683074951
    3. ',x' → logprob: -11.37582015991211
    4. ')' → logprob: -14.12582015991211
    5. '_,' → logprob: -14.37582015991211
    6. ',
' → logprob: -14.37582015991211
    7. ' ' → logprob: -14.75082015991211
    8. ',y' → logprob: -14.87582015991211
    9. ',)' → logprob: -15.12582015991211
    10. ',

' → logprob: -15.50082015991211

Token 102: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.048634372651576996
    2. ' y' → logprob: -3.0486342906951904
    3. 'x' → logprob: -10.42363452911377
    4. '<|end|>' → logprob: -11.29863452911377
    5. ',y' → logprob: -13.67363452911377
    6. '	y' → logprob: -13.67363452911377
    7. ' ' → logprob: -13.79863452911377
    8. ',' → logprob: -13.92363452911377
    9. ' x' → logprob: -15.67363452911377
    10. '   ' → logprob: -16.173633575439453

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012439649435691535
    2. ',' → logprob: -9.000123977661133
    3. '```' → logprob: -14.500123977661133
    4. ' ' → logprob: -16.000123977661133
    5. ' ,' → logprob: -16.000123977661133
    6. ',x' → logprob: -16.500123977661133
    7. '2' → logprob: -17.250123977661133
    8. '_' → logprob: -17.375123977661133
    9. '_,' → logprob: -17.750123977661133
    10. ')' → logprob: -18.375123977661133

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010844941716641188
    2. ' ,' → logprob: -6.876084327697754
    3. ',x' → logprob: -9.876084327697754
    4. ',
' → logprob: -15.876084327697754
    5. '_,' → logprob: -16.12608528137207
    6. 'x' → logprob: -16.75108528137207
    7. '   ' → logprob: -17.12608528137207
    8. ' ' → logprob: -18.00108528137207
    9. ' x' → logprob: -18.12608528137207
    10. ')' → logprob: -18.62608528137207

Token 105: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20141372084617615
    2. ' x' → logprob: -1.7014137506484985
    3. '	x' → logprob: -15.076414108276367
    4. ' ' → logprob: -16.076414108276367
    5. '   ' → logprob: -17.451414108276367
    6. ',x' → logprob: -17.451414108276367
    7. ',' → logprob: -17.701414108276367
    8. ')x' → logprob: -19.201414108276367
    9. '```' → logprob: -19.201414108276367
    10. '    ' → logprob: -19.326414108276367

Token 106: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04672504961490631
    2. ',' → logprob: -3.796725034713745
    3. '1' → logprob: -3.796725034713745
    4. '_' → logprob: -7.421725273132324
    5. '_,' → logprob: -9.671725273132324
    6. ')' → logprob: -10.671725273132324
    7. '```' → logprob: -11.046725273132324
    8. ' ,' → logprob: -11.171725273132324
    9. ',_' → logprob: -11.671725273132324
    10. '4' → logprob: -11.671725273132324

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005672106635756791
    2. ' ,' → logprob: -7.625567436218262
    3. '1' → logprob: -9.750567436218262
    4. '_,' → logprob: -11.625567436218262
    5. ',x' → logprob: -11.625567436218262
    6. '2' → logprob: -13.750567436218262
    7. ' ' → logprob: -14.500567436218262
    8. '   ' → logprob: -15.000567436218262
    9. ',y' → logprob: -15.375567436218262
    10. ')' → logprob: -15.500567436218262

Token 108: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38687703013420105
    2. ' x' → logprob: -1.1368770599365234
    3. ' ' → logprob: -13.261877059936523
    4. '1' → logprob: -13.261877059936523
    5. ' y' → logprob: -14.011877059936523
    6. ')' → logprob: -14.636877059936523
    7. 'y' → logprob: -14.761877059936523
    8. ',' → logprob: -15.136877059936523
    9. ')x' → logprob: -15.761877059936523
    10. '<|end|>' → logprob: -16.011877059936523

Token 109: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009274221956729889
    2. '2' → logprob: -7.000927448272705
    3. ',' → logprob: -11.625926971435547
    4. '_' → logprob: -13.000926971435547
    5. '):' → logprob: -13.125926971435547
    6. ')' → logprob: -13.625926971435547
    7. ' ' → logprob: -13.750926971435547
    8. '-' → logprob: -15.375926971435547
    9. '```' → logprob: -15.500926971435547
    10. '):
' → logprob: -16.875926971435547

Token 110: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003117702901363373
    2. ')' → logprob: -5.878117561340332
    3. ' ):' → logprob: -8.503117561340332
    4. '):
' → logprob: -9.253117561340332
    5. ':' → logprob: -11.628117561340332
    6. ',' → logprob: -12.378117561340332
    7. ' )' → logprob: -15.128117561340332
    8. ' :' → logprob: -16.25311851501465
    9. '):

' → logprob: -16.25311851501465
    10. '}:' → logprob: -16.50311851501465

Token 111: ' wall' (ID: 9688)
  Prédit: ' px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' px' → logprob: -0.6893554925918579
    2. ' wx' → logprob: -1.314355492591858
    3. 'wx' → logprob: -2.8143553733825684
    4. ' w' → logprob: -2.8143553733825684
    5. ' x' → logprob: -2.9393553733825684
    6. ' wall' → logprob: -3.8143553733825684
    7. 'px' → logprob: -4.064355373382568
    8. 'x' → logprob: -5.314355373382568
    9. 'wall' → logprob: -5.439355373382568
    10. 'w' → logprob: -5.939355373382568

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021654020994901657
    2. '_x' → logprob: -4.52165412902832
    3. ')' → logprob: -5.14665412902832
    4. '_' → logprob: -5.77165412902832
    5. 'x' → logprob: -7.02165412902832
    6. '):
' → logprob: -8.02165412902832
    7. 's' → logprob: -8.89665412902832
    8. '_w' → logprob: -9.64665412902832
    9. ' ):' → logprob: -9.89665412902832
    10. '_p' → logprob: -10.52165412902832

Token 113: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026893943548202515
    2. '):' → logprob: -3.7768938541412354
    3. ' :' → logprob: -5.9018940925598145
    4. '   ' → logprob: -8.026893615722656
    5. '():' → logprob: -8.651893615722656
    6. ' ):' → logprob: -9.276893615722656
    7. ',' → logprob: -9.776893615722656
    8. ':return' → logprob: -9.901893615722656
    9. ':**' → logprob: -10.276893615722656
    10. '(' → logprob: -10.401893615722656

Token 114: ' px' (ID: 27003)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25479820370674133
    2. '    ' → logprob: -2.754798173904419
    3. ' (' → logprob: -3.004798173904419
    4. ' 
' → logprob: -3.379798173904419
    5. '   ' → logprob: -3.629798173904419
    6. '(' → logprob: -4.504798412322998
    7. ' px' → logprob: -4.504798412322998
    8. '(px' → logprob: -4.879798412322998
    9. ' (
' → logprob: -6.004798412322998
    10. '     
' → logprob: -6.004798412322998

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006210801191627979
    2. ' ,' → logprob: -5.131210803985596
    3. '1' → logprob: -9.006210327148438
    4. 'x' → logprob: -9.506210327148438
    5. '=' → logprob: -10.756210327148438
    6. '<|end|>' → logprob: -11.131210327148438
    7. ',p' → logprob: -11.881210327148438
    8. ')' → logprob: -12.006210327148438
    9. '[' → logprob: -12.131210327148438
    10. '_,' → logprob: -12.506210327148438

Token 116: ' py' (ID: 13104)
  Prédit: ' py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' py' → logprob: -0.14625030755996704
    2. '<|end|>' → logprob: -2.1462502479553223
    3. 'py' → logprob: -4.646250247955322
    4. ' ' → logprob: -5.021250247955322
    5. ' ' → logprob: -7.021250247955322
    6. ' y' → logprob: -8.02125072479248
    7. ' w' → logprob: -8.14625072479248
    8. ' ,' → logprob: -8.52125072479248
    9. 'w' → logprob: -8.77125072479248
    10. '_py' → logprob: -8.89625072479248

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043794067460112274
    2. '=' → logprob: -8.12543773651123
    3. ' ,' → logprob: -9.00043773651123
    4. ' =' → logprob: -11.25043773651123
    5. ',p' → logprob: -13.12543773651123
    6. '<|end|>' → logprob: -13.75043773651123
    7. ',x' → logprob: -14.37543773651123
    8. '_,' → logprob: -15.12543773651123
    9. '   ' → logprob: -15.37543773651123
    10. ')' → logprob: -15.62543773651123

Token 118: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.060324784368276596
    2. ' wx' → logprob: -3.1853246688842773
    3. 'qx' → logprob: -4.685324668884277
    4. ' qw' → logprob: -5.810324668884277
    5. ' x' → logprob: -6.435324668884277
    6. ' w' → logprob: -6.560324668884277
    7. 'wx' → logprob: -7.185324668884277
    8. ' px' → logprob: -8.060324668884277
    9. ' ' → logprob: -8.310324668884277
    10. 'qw' → logprob: -9.060324668884277

Token 119: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. ',' → logprob: -15.625
    3. '_x' → logprob: -16.0
    4. '```' → logprob: -18.125
    5. ' x' → logprob: -18.375
    6. '_,' → logprob: -20.375
    7. '_' → logprob: -20.375
    8. 'px' → logprob: -21.625
    9. ''x' → logprob: -21.625
    10. ',x' → logprob: -21.75

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8550976164988242e-05
    2. '=' → logprob: -11.375018119812012
    3. ' ,' → logprob: -12.375018119812012
    4. ',q' → logprob: -14.000018119812012
    5. ',y' → logprob: -14.125018119812012
    6. '<|end|>' → logprob: -14.375018119812012
    7. '_,' → logprob: -16.000019073486328
    8. ' =' → logprob: -16.250019073486328
    9. ',p' → logprob: -16.750019073486328
    10. ',
' → logprob: -17.000019073486328

Token 121: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.49039706587791443
    2. ' py' → logprob: -1.6153970956802368
    3. 'qy' → logprob: -1.7403970956802368
    4. 'py' → logprob: -4.740396976470947
    5. ' ' → logprob: -5.740396976470947
    6. ' y' → logprob: -7.990396976470947
    7. '<|end|>' → logprob: -8.240397453308105
    8. 'q' → logprob: -8.365397453308105
    9. ' 
' → logprob: -9.115397453308105
    10. ' qw' → logprob: -9.990397453308105

Token 122: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10925613343715668
    2. ',' → logprob: -2.8592560291290283
    3. 'x' → logprob: -4.234256267547607
    4. '=' → logprob: -4.734256267547607
    5. '<|end|>' → logprob: -5.109256267547607
    6. '1' → logprob: -5.734256267547607
    7. ' ' → logprob: -6.109256267547607
    8. 'qy' → logprob: -6.234256267547607
    9. 'w' → logprob: -6.359256267547607
    10. ',y' → logprob: -6.359256267547607

Token 123: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326377391815186
    2. ' =' → logprob: -1.3132637739181519
    3. ' ' → logprob: -14.188263893127441
    4. ',' → logprob: -14.563263893127441
    5. ')' → logprob: -14.938263893127441
    6. '=

' → logprob: -15.688263893127441
    7. ' =
' → logprob: -16.313262939453125
    8. '=
' → logprob: -16.438262939453125
    9. '<|end|>' → logprob: -16.813262939453125
    10. ' =)' → logprob: -17.313262939453125

Token 124: ' wall' (ID: 9688)
  Prédit: ' wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wall' → logprob: -0.01603870838880539
    2. 'wall' → logprob: -4.14103889465332
    3. ' wal' → logprob: -12.89103889465332
    4. ' w' → logprob: -14.39103889465332
    5. ' walls' → logprob: -14.39103889465332
    6. ' ' → logprob: -15.14103889465332
    7. '.wall' → logprob: -15.51603889465332
    8. 'wal' → logprob: -16.14103889465332
    9. '   ' → logprob: -16.89103889465332
    10. 'w' → logprob: -17.01603889465332

Token 125: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2986488342285156
    2. '
' → logprob: -2.6736488342285156
    3. '   ' → logprob: -2.6736488342285156
    4. ':
' → logprob: -3.2986488342285156
    5. '<|end|>' → logprob: -3.6736488342285156
    6. ')' → logprob: -3.9236488342285156
    7. ',' → logprob: -4.673648834228516
    8. '):' → logprob: -4.923648834228516
    9. '  
' → logprob: -5.048648834228516
    10. ' 
' → logprob: -5.798648834228516

Token 126: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43471911549568176
    2. '   ' → logprob: -1.3097190856933594
    3. ')' → logprob: -3.6847190856933594
    4. '):' → logprob: -3.9347190856933594
    5. ':
' → logprob: -4.059719085693359
    6. '
' → logprob: -4.559719085693359
    7. '    
' → logprob: -6.184719085693359
    8. '):
' → logprob: -6.559719085693359
    9. '<|end|>' → logprob: -6.559719085693359
    10. ',' → logprob: -6.684719085693359

Token 127: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1472684144973755
    2. 'dx' → logprob: -1.3972684144973755
    3. ' dx' → logprob: -1.5222684144973755
    4. 'def' → logprob: -2.772268295288086
    5. 'x' → logprob: -3.147268295288086
    6. '#' (adapté à ' #') → logprob: -3.647268295288086
    7. ' x' → logprob: -3.772268295288086
    8. 'den' → logprob: -4.147268295288086
    9. '    
' → logprob: -4.522268295288086
    10. 'd' → logprob: -4.522268295288086

Token 128: ' Wall' (ID: 14606)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5273516774177551
    2. 'def' → logprob: -1.7773516178131104
    3. 'dx' → logprob: -2.4023516178131104
    4. 'import' → logprob: -3.2773516178131104
    5. ' #' → logprob: -3.4023516178131104
    6. 'from' → logprob: -4.1523518562316895
    7. ' dx' → logprob: -4.1523518562316895
    8. 'x' → logprob: -4.5273518562316895
    9. '   ' → logprob: -4.6523518562316895
    10. 'd' → logprob: -5.0273518562316895

Token 129: ' is' (ID: 382)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.090004801750183
    2. '_dx' → logprob: -1.715004801750183
    3. '_vec' → logprob: -2.0900049209594727
    4. '_x' → logprob: -2.2150049209594727
    5. '_vector' → logprob: -2.4650049209594727
    6. 'dx' → logprob: -3.3400049209594727
    7. 'def' → logprob: -3.8400049209594727
    8. 's' → logprob: -4.340004920959473
    9. 'vector' → logprob: -4.590004920959473
    10. 'is' → logprob: -4.965004920959473

Token 130: ' vertical' (ID: 17679)
  Prédit: ' either'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' either' → logprob: -0.9018651247024536
    2. 'vertical' → logprob: -1.2768651247024536
    3. ' vertical' → logprob: -1.9018651247024536
    4. 'horizontal' → logprob: -2.526865005493164
    5. 'either' → logprob: -3.276865005493164
    6. ' a' → logprob: -3.901865005493164
    7. ' horizontal' → logprob: -4.151865005493164
    8. 'a' → logprob: -4.901865005493164
    9. ' axis' → logprob: -7.026865005493164
    10. '(vertical' → logprob: -7.276865005493164

Token 131: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3389852046966553
    2. ' and' → logprob: -1.8389852046966553
    3. '   ' → logprob: -2.4639852046966553
    4. 'if' → logprob: -3.7139852046966553
    5. '<|end|>' → logprob: -4.963985443115234
    6. 'and' → logprob: -5.713985443115234
    7. ' ' → logprob: -6.588985443115234
    8. ',' → logprob: -6.588985443115234
    9. ' or' → logprob: -6.588985443115234
    10. ':' → logprob: -6.713985443115234

Token 132: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5432935357093811
    2. '   ' → logprob: -1.2932934761047363
    3. ' ' → logprob: -2.7932934761047363
    4. '<|end|>' → logprob: -3.0432934761047363
    5. 'if' → logprob: -4.168293476104736
    6. ':' → logprob: -5.168293476104736
    7. '    ' → logprob: -5.918293476104736
    8. ',' → logprob: -6.043293476104736
    9. '    
' → logprob: -6.418293476104736
    10. ' 
' → logprob: -6.668293476104736

Token 133: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06373900920152664
    2. '   ' → logprob: -3.688739061355591
    3. 'if' (adapté à ' if') → logprob: -3.938739061355591
    4. ' ' → logprob: -4.313738822937012
    5. '    ' → logprob: -6.688738822937012
    6. '<|end|>' → logprob: -7.563738822937012
    7. '  ' → logprob: -7.938738822937012
    8. ' and' → logprob: -8.063738822937012
    9. '    
' → logprob: -8.688738822937012
    10. ' i' → logprob: -8.688738822937012

Token 134: ' px' (ID: 27003)
  Prédit: ' px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' px' → logprob: -0.04928344860672951
    2. 'px' → logprob: -3.049283504486084
    3. 'qx' → logprob: -7.424283504486084
    4. ' q' → logprob: -9.924283027648926
    5. '(px' → logprob: -10.299283027648926
    6. ' x' → logprob: -12.424283027648926
    7. ':px' → logprob: -12.424283027648926
    8. ' ' → logprob: -13.049283027648926
    9. ' p' → logprob: -13.424283027648926
    10. ' py' → logprob: -13.549283027648926

Token 135: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5771083235740662
    2. '==' → logprob: -0.8271083235740662
    3. '=' → logprob: -6.827108383178711
    4. '>' → logprob: -10.952108383178711
    5. '<=' → logprob: -11.077108383178711
    6. ' <=' → logprob: -11.077108383178711
    7. ')' → logprob: -11.452108383178711
    8. '[' → logprob: -12.202108383178711
    9. ' =' → logprob: -12.327108383178711
    10. ' >' → logprob: -12.702108383178711

Token 136: ' q' (ID: 2335)
  Prédit: 'qx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qx' → logprob: -0.3869209885597229
    2. ' q' → logprob: -1.1369209289550781
    3. ' ' → logprob: -10.886920928955078
    4. 'q' → logprob: -11.261920928955078
    5. 'px' → logprob: -12.011920928955078
    6. '	q' → logprob: -12.761920928955078
    7. '(q' → logprob: -13.386920928955078
    8. ' x' → logprob: -13.511920928955078
    9. 'qy' → logprob: -13.886920928955078
    10. ' p' → logprob: -13.886920928955078

Token 137: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.127333340875339e-06
    2. ' x' → logprob: -12.500003814697266
    3. '```' → logprob: -15.750003814697266
    4. ' ' → logprob: -16.000003814697266
    5. ''x' → logprob: -16.500003814697266
    6. '_x' → logprob: -17.000003814697266
    7. '_' → logprob: -18.500003814697266
    8. '`' → logprob: -18.625003814697266
    9. '``' → logprob: -19.000003814697266
    10. '   ' → logprob: -19.125003814697266

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06600898504257202
    2. ' and' → logprob: -3.566009044647217
    3. ':
' → logprob: -3.816009044647217
    4. '):' → logprob: -4.691009044647217
    5. '):
' → logprob: -5.691009044647217
    6. ' :' → logprob: -7.941009044647217
    7. 'and' → logprob: -8.066008567810059
    8. '   ' → logprob: -8.691008567810059
    9. ')' → logprob: -10.066008567810059
    10. ' ' → logprob: -10.316008567810059

Token 139: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9736503958702087
    2. ':
' → logprob: -1.0986504554748535
    3. ' and' → logprob: -1.5986504554748535
    4. '       ' → logprob: -2.9736504554748535
    5. '
' → logprob: -4.0986504554748535
    6. '   ' → logprob: -4.4736504554748535
    7. ' :
' → logprob: -5.8486504554748535
    8. '<|end|>' → logprob: -6.7236504554748535
    9. 'and' → logprob: -7.2236504554748535
    10. ' :' → logprob: -7.8486504554748535

Token 140: ' wx' (ID: 20113)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25685909390449524
    2. ' 
' → logprob: -2.506859064102173
    3. 'if' → logprob: -2.631859064102173
    4. '       ' → logprob: -3.881859064102173
    5. ' ' → logprob: -4.131859302520752
    6. '    ' → logprob: -4.631859302520752
    7. '
' → logprob: -5.256859302520752
    8. '        
' → logprob: -5.631859302520752
    9. '   ' → logprob: -5.756859302520752
    10. '     
' → logprob: -5.756859302520752

Token 141: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9510393142700195
    2. ' =' → logprob: -1.2010393142700195
    3. '=' → logprob: -1.3260393142700195
    4. ' <=' → logprob: -4.4510393142700195
    5. '==' → logprob: -4.4510393142700195
    6. ' >=' → logprob: -4.7010393142700195
    7. ',' → logprob: -4.8260393142700195
    8. ' ' → logprob: -6.4510393142700195
    9. '   ' → logprob: -6.4510393142700195
    10. ' ,' → logprob: -7.3260393142700195

Token 142: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.014164566993713379
    2. ' px' → logprob: -4.264164447784424
    3. '(px' → logprob: -14.389164924621582
    4. 'x' → logprob: -15.639164924621582
    5. '_px' → logprob: -16.014163970947266
    6. 'py' → logprob: -16.264163970947266
    7. ':px' → logprob: -17.139163970947266
    8. ' ' → logprob: -17.389163970947266
    9. 'qx' → logprob: -18.514163970947266
    10. '}px' → logprob: -18.514163970947266

Token 143: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18533295392990112
    2. ' if' → logprob: -2.560333013534546
    3. 'if' → logprob: -3.185333013534546
    4. '       ' → logprob: -3.435333013534546
    5. '   ' → logprob: -5.185332775115967
    6. '
' → logprob: -6.435332775115967
    7. '  
' → logprob: -6.435332775115967
    8. ' 
' → logprob: -6.560332775115967
    9. '        
' → logprob: -6.685332775115967
    10. '#' → logprob: -6.810332775115967

Token 144: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03394234925508499
    2. ' if' → logprob: -3.908942461013794
    3. 'if' → logprob: -5.033942222595215
    4. ' 
' → logprob: -5.658942222595215
    5. '        
' → logprob: -7.408942222595215
    6. ' ' → logprob: -7.533942222595215
    7. '  
' → logprob: -7.658942222595215
    8. '       ' → logprob: -7.783942222595215
    9. '    
' → logprob: -8.283942222595215
    10. '\n' → logprob: -8.283942222595215

Token 145: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39447101950645447
    2. ' if' → logprob: -1.1444710493087769
    3. ' min' → logprob: -5.894471168518066
    4. ' x' → logprob: -6.519471168518066
    5. '#' (adapté à ' #') → logprob: -6.894471168518066
    6. 'min' → logprob: -7.019471168518066
    7. ' #' → logprob: -7.394471168518066
    8. 'x' → logprob: -7.769471168518066
    9. ' ymin' → logprob: -9.144471168518066
    10. ' y' → logprob: -9.769471168518066

Token 146: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6900313496589661
    2. 'min' → logprob: -0.8150313496589661
    3. ' min' → logprob: -3.5650312900543213
    4. ' if' → logprob: -4.0650315284729
    5. '(min' → logprob: -4.6900315284729
    6. 'return' → logprob: -8.440031051635742
    7. ' (' → logprob: -8.565031051635742
    8. 'y' → logprob: -8.690031051635742
    9. '(y' → logprob: -9.065031051635742
    10. '((' → logprob: -9.565031051635742

Token 147: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13221362233161926
    2. 'if' → logprob: -2.132213592529297
    3. ' (' → logprob: -6.132213592529297
    4. ' min' → logprob: -6.132213592529297
    5. ' ((' → logprob: -8.382213592529297
    6. 'min' → logprob: -8.632213592529297
    7. ' x' → logprob: -8.882213592529297
    8. '(min' → logprob: -9.007213592529297
    9. '((' → logprob: -9.632213592529297
    10. '(' → logprob: -10.007213592529297

Token 148: ' the' (ID: 290)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.31509512662887573
    2. '(x' → logprob: -1.8150951862335205
    3. 'min' → logprob: -2.5650951862335205
    4. '(wx' → logprob: -4.065094947814941
    5. ' (' → logprob: -5.190094947814941
    6. ' min' → logprob: -5.565094947814941
    7. 'x' → logprob: -5.815094947814941
    8. '(' → logprob: -8.190094947814941
    9. '(w' → logprob: -8.440094947814941
    10. '((' → logprob: -8.440094947814941

Token 149: ' segment' (ID: 14806)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.6455051302909851
    2. '(x' → logprob: -1.6455051898956299
    3. 'min' → logprob: -1.8955051898956299
    4. '(wx' → logprob: -2.52050518989563
    5. 'x' → logprob: -3.39550518989563
    6. ' min' → logprob: -5.020504951477051
    7. ' (' → logprob: -5.020504951477051
    8. 'wx' → logprob: -5.645504951477051
    9. '((' → logprob: -7.270504951477051
    10. ' x' → logprob: -8.14550495147705

Token 150: ' crosses' (ID: 95853)
  Prédit: ' crosses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crosses' → logprob: -0.2018740326166153
    2. 'x' → logprob: -2.451874017715454
    3. ' intersects' → logprob: -3.326874017715454
    4. 'min' → logprob: -4.326874256134033
    5. ' x' → logprob: -4.451874256134033
    6. ' ' → logprob: -4.701874256134033
    7. 'cross' → logprob: -5.451874256134033
    8. ' passes' → logprob: -5.576874256134033
    9. ' is' → logprob: -5.701874256134033
    10. 'inter' → logprob: -6.201874256134033

Token 151: ' the' (ID: 290)
  Prédit: ' wx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wx' → logprob: -0.8162962198257446
    2. ' the' → logprob: -1.9412962198257446
    3. '(wx' → logprob: -2.066296100616455
    4. ' (' → logprob: -2.191296100616455
    5. 'wx' → logprob: -2.566296100616455
    6. ' min' → logprob: -3.566296100616455
    7. ' between' → logprob: -4.066296100616455
    8. ' x' → logprob: -4.191296100616455
    9. 'min' → logprob: -4.441296100616455
    10. '(min' → logprob: -4.691296100616455

Token 152: ' vertical' (ID: 17679)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.21731685101985931
    2. ' segment' → logprob: -2.9673168659210205
    3. 'segment' → logprob: -2.9673168659210205
    4. 'line' → logprob: -3.3423168659210205
    5. 'x' → logprob: -3.9673168659210205
    6. ' x' → logprob: -4.342316627502441
    7. 'vertical' → logprob: -5.217316627502441
    8. ' vertical' → logprob: -5.342316627502441
    9. 'wx' → logprob: -5.467316627502441
    10. ' wall' → logprob: -5.842316627502441

Token 153: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.017776910215616226
    2. 'line' → logprob: -4.642776966094971
    3. ' wall' → logprob: -5.017776966094971
    4. ' ' → logprob: -7.142776966094971
    5. ' segment' → logprob: -8.392776489257812
    6. ' x' → logprob: -8.892776489257812
    7. 'wall' → logprob: -9.267776489257812
    8. ' lines' → logprob: -10.642776489257812
    9. 'segment' → logprob: -11.142776489257812
    10. 'x' → logprob: -11.142776489257812

Token 154: ' wx' (ID: 20113)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012838292866945267
    2. '   ' → logprob: -5.137838363647461
    3. 'and' → logprob: -5.512838363647461
    4. ' between' → logprob: -6.387838363647461
    5. ' ' → logprob: -8.387838363647461
    6. '       ' → logprob: -8.637838363647461
    7. ' if' → logprob: -8.887838363647461
    8. '    ' → logprob: -9.137838363647461
    9. ' x' → logprob: -9.262838363647461
    10. ',' → logprob: -9.262838363647461

Token 155: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.23048503696918488
    2. '   ' → logprob: -2.230484962463379
    3. ' if' → logprob: -2.980484962463379
    4. '       ' → logprob: -3.355484962463379
    5. 'and' → logprob: -5.480484962463379
    6. 'if' → logprob: -6.480484962463379
    7. ',' → logprob: -6.605484962463379
    8. ':' → logprob: -7.105484962463379
    9. '    ' → logprob: -7.480484962463379
    10. ':
' → logprob: -7.605484962463379

Token 156: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.625954806804657
    2. '       ' → logprob: -0.875954806804657
    3. ' if' → logprob: -3.3759548664093018
    4. '   ' → logprob: -5.875954627990723
    5. ':' → logprob: -6.125954627990723
    6. ',' → logprob: -6.375954627990723
    7. ' ' → logprob: -6.875954627990723
    8. ':
' → logprob: -6.875954627990723
    9. '        
' → logprob: -7.000954627990723
    10. 'and' → logprob: -7.750954627990723

Token 157: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6348611116409302
    2. 'if' → logprob: -0.7598611116409302
    3. ' min' → logprob: -6.759860992431641
    4. ' x' → logprob: -7.759860992431641
    5. 'min' → logprob: -8.00986099243164
    6. '   ' → logprob: -9.13486099243164
    7. 'x' → logprob: -9.38486099243164
    8. ' and' → logprob: -10.63486099243164
    9. '       ' → logprob: -10.88486099243164
    10. ')' → logprob: -11.38486099243164

Token 158: ' The' (ID: 623)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35492029786109924
    2. 'if' → logprob: -1.2299202680587769
    3. ' min' → logprob: -6.604920387268066
    4. ' x' → logprob: -6.604920387268066
    5. 'x' → logprob: -6.729920387268066
    6. ' t' → logprob: -7.479920387268066
    7. 'min' → logprob: -7.854920387268066
    8. 't' → logprob: -7.979920387268066
    9. ' return' → logprob: -8.229920387268066
    10. '   ' → logprob: -8.729920387268066

Token 159: ' path' (ID: 3104)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -1.2523218393325806
    2. ' min' → logprob: -1.3773218393325806
    3. 'min' → logprob: -1.6273218393325806
    4. 'if' → logprob: -1.7523218393325806
    5. ' (' → logprob: -3.252321720123291
    6. ' if' → logprob: -3.877321720123291
    7. '(' → logprob: -4.877321720123291
    8. 'x' → logprob: -5.002321720123291
    9. '(x' → logprob: -5.627321720123291
    10. 'return' → logprob: -6.002321720123291

Token 160: ' crosses' (ID: 95853)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6578803062438965
    2. ' crosses' → logprob: -1.6578803062438965
    3. '.' → logprob: -2.7828803062438965
    4. '[' → logprob: -3.6578803062438965
    5. 'min' → logprob: -3.6578803062438965
    6. 'and' → logprob: -3.9078803062438965
    7. ' x' → logprob: -4.0328803062438965
    8. ':' → logprob: -4.2828803062438965
    9. ' passes' → logprob: -4.2828803062438965
    10. ' and' → logprob: -4.5328803062438965

Token 161: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13630488514900208
    2. 'if' → logprob: -2.6363048553466797
    3. ' the' → logprob: -3.2613048553466797
    4. ' wx' → logprob: -4.51130485534668
    5. 'the' → logprob: -5.76130485534668
    6. 'wx' → logprob: -6.38630485534668
    7. ' any' → logprob: -7.38630485534668
    8. '(wx' → logprob: -7.88630485534668
    9. ' (' → logprob: -8.88630485534668
    10. ' a' → logprob: -9.13630485534668

Token 162: ' wall' (ID: 9688)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.4861470460891724
    2. ' wall' → logprob: -1.8611470460891724
    3. 'if' → logprob: -2.236146926879883
    4. 'segment' → logprob: -2.236146926879883
    5. ' segment' → logprob: -2.361146926879883
    6. ' if' → logprob: -2.486146926879883
    7. 'wx' → logprob: -2.861146926879883
    8. 'wall' → logprob: -2.986146926879883
    9. ' wx' → logprob: -3.361146926879883
    10. 'x' → logprob: -3.611146926879883

Token 163: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.062272511422634125
    2. 'if' → logprob: -2.812272548675537
    3. ' and' → logprob: -8.687272071838379
    4. ' ' → logprob: -10.062272071838379
    5. 'and' → logprob: -10.437272071838379
    6. '   ' → logprob: -10.437272071838379
    7. ' iff' → logprob: -11.937272071838379
    8. ',' → logprob: -12.062272071838379
    9. '=' → logprob: -12.062272071838379
    10. ' when' → logprob: -12.312272071838379

Token 164: ' x' (ID: 1215)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.40551942586898804
    2. '(x' → logprob: -1.2805194854736328
    3. '(wx' → logprob: -3.655519485473633
    4. 'min' → logprob: -4.155519485473633
    5. ' (' → logprob: -4.530519485473633
    6. ' min' → logprob: -6.280519485473633
    7. '(' → logprob: -7.655519485473633
    8. 'x' → logprob: -8.030519485473633
    9. '(w' → logprob: -8.405519485473633
    10. 'wx' → logprob: -10.280519485473633

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. 'min' → logprob: -13.000007629394531
    3. ' ' → logprob: -13.250007629394531
    4. '```' → logprob: -13.500007629394531
    5. '2' → logprob: -15.000007629394531
    6. ' <' → logprob: -15.562507629394531
    7. '[' → logprob: -15.812507629394531
    8. '<x' → logprob: -15.875007629394531
    9. ' -' → logprob: -16.25000762939453
    10. '``' → logprob: -16.25000762939453

Token 166: ' and' (ID: 326)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10034437477588654
    2. '<' → logprob: -2.35034441947937
    3. ' <=' → logprob: -8.97534465789795
    4. '<=' → logprob: -12.10034465789795
    5. '<x' → logprob: -13.22534465789795
    6. ' ' → logprob: -13.97534465789795
    7. ')' → logprob: -13.97534465789795
    8. '[' → logprob: -14.22534465789795
    9. ' <",' → logprob: -15.97534465789795
    10. '   ' → logprob: -16.100343704223633

Token 167: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08914840966463089
    2. ' x' → logprob: -2.46414852142334
    3. 'wx' → logprob: -8.96414852142334
    4. ' wx' → logprob: -9.58914852142334
    5. ' ' → logprob: -11.83914852142334
    6. '<x' → logprob: -13.83914852142334
    7. 'w' → logprob: -14.33914852142334
    8. ' ' → logprob: -14.58914852142334
    9. '	x' → logprob: -14.71414852142334
    10. '   ' → logprob: -14.83914852142334

Token 168: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038413356989622116
    2. '2' → logprob: -4.2884135246276855
    3. '<' → logprob: -4.6634135246276855
    4. '<x' → logprob: -5.4134135246276855
    5. 'wx' → logprob: -5.7884135246276855
    6. ' <' → logprob: -5.9134135246276855
    7. ' wx' → logprob: -6.1634135246276855
    8. '<w' → logprob: -7.4134135246276855
    9. 'x' → logprob: -7.5384135246276855
    10. 'w' → logprob: -8.038413047790527

Token 169: ' are' (ID: 553)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.43051186203956604
    2. ' <' → logprob: -1.0555118322372437
    3. ' on' → logprob: -6.805511951446533
    4. ' <=' → logprob: -8.305511474609375
    5. '<=' → logprob: -8.930511474609375
    6. '<|end|>' → logprob: -9.430511474609375
    7. '<span' → logprob: -9.805511474609375
    8. ' ' → logprob: -10.430511474609375
    9. '[' → logprob: -10.430511474609375
    10. 'on' → logprob: -11.055511474609375

Token 170: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.32460591197013855
    2. '<' → logprob: -1.699605941772461
    3. 'on' → logprob: -2.949605941772461
    4. ' <' → logprob: -3.199605941772461
    5. '<=' → logprob: -7.699605941772461
    6. '<w' → logprob: -8.324605941772461
    7. ' less' → logprob: -8.824605941772461
    8. '<|end|>' → logprob: -9.199605941772461
    9. ' <=' → logprob: -9.449605941772461
    10. 'less' → logprob: -9.699605941772461

Token 171: ' opposite' (ID: 23821)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.047655221074819565
    2. ' opposite' → logprob: -3.1726551055908203
    3. 'different' → logprob: -5.67265510559082
    4. ' different' → logprob: -7.92265510559082
    5. 'either' → logprob: -8.04765510559082
    6. ' either' → logprob: -8.29765510559082
    7. '<' → logprob: -9.67265510559082
    8. 'both' → logprob: -10.54765510559082
    9. '(op' → logprob: -10.67265510559082
    10. '
' → logprob: -10.67265510559082

Token 172: ' sides' (ID: 18089)
  Prédit: ' sides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sides' → logprob: -0.4288308024406433
    2. 's' → logprob: -1.053830862045288
    3. 'side' → logprob: -9.678831100463867
    4. ' side' → logprob: -9.928831100463867
    5. ' s' → logprob: -12.303831100463867
    6. '	s' → logprob: -12.678831100463867
    7. ' ' → logprob: -12.928831100463867
    8. 'si' → logprob: -13.303831100463867
    9. ' lados' → logprob: -13.553831100463867
    10. 'sign' → logprob: -14.053831100463867

Token 173: ' of' (ID: 328)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05457913875579834
    2. 'and' → logprob: -3.054579257965088
    3. ' or' → logprob: -5.304579257965088
    4. ' ' → logprob: -7.804579257965088
    5. ' of' → logprob: -7.804579257965088
    6. 'or' → logprob: -9.67957878112793
    7. '   ' → logprob: -10.80457878112793
    8. ',' → logprob: -10.80457878112793
    9. ' <' → logprob: -11.17957878112793
    10. '=' → logprob: -11.17957878112793

Token 174: ' wx' (ID: 20113)
  Prédit: ' wx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wx' → logprob: -0.3132721483707428
    2. 'wx' → logprob: -1.3132721185684204
    3. '(wx' → logprob: -12.563272476196289
    4. '	wx' → logprob: -13.063272476196289
    5. 'w' → logprob: -13.563272476196289
    6. ' the' → logprob: -14.563272476196289
    7. '`' → logprob: -14.563272476196289
    8. '```' → logprob: -14.813272476196289
    9. 'wy' → logprob: -15.063272476196289
    10. ' ' → logprob: -15.438272476196289

Token 175: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008696592412889004
    2. 'and' → logprob: -4.758696556091309
    3. '    ' → logprob: -10.258696556091309
    4. ' ' → logprob: -10.508696556091309
    5. '   ' → logprob: -11.508696556091309
    6. ',' → logprob: -12.883696556091309
    7. ' if' → logprob: -13.633696556091309
    8. '        ' → logprob: -13.758696556091309
    9. ')' → logprob: -14.008696556091309
    10. '  ' → logprob: -14.383696556091309

Token 176: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0021474044770002365
    2. 'and' → logprob: -6.627147197723389
    3. ' ' → logprob: -7.502147197723389
    4. '   ' → logprob: -8.877147674560547
    5. '    ' → logprob: -10.127147674560547
    6. ',' → logprob: -10.252147674560547
    7. ' if' → logprob: -10.377147674560547
    8. '       ' → logprob: -12.252147674560547
    9. '  ' → logprob: -12.502147674560547
    10. ' ,' → logprob: -12.752147674560547

Token 177: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35360878705978394
    2. 'if' (adapté à ' if') → logprob: -1.2286088466644287
    3. ' (' → logprob: -6.10360860824585
    4. ' and' → logprob: -6.97860860824585
    5. '   ' → logprob: -7.22860860824585
    6. ' return' → logprob: -7.85360860824585
    7. ' abs' → logprob: -8.478609085083008
    8. ' x' → logprob: -8.603609085083008
    9. 'and' → logprob: -8.853609085083008
    10. 'abs' → logprob: -9.228609085083008

Token 178: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3298961818218231
    2. '(x' → logprob: -1.3298962116241455
    3. ' x' → logprob: -5.079895973205566
    4. '(min' → logprob: -5.454895973205566
    5. 'x' → logprob: -6.204895973205566
    6. '(' → logprob: -6.329895973205566
    7. ' min' → logprob: -6.579895973205566
    8. 'min' → logprob: -7.579895973205566
    9. ' ' → logprob: -9.079895973205566
    10. '   ' → logprob: -9.579895973205566

Token 179: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0055652824230492115
    2. '(x' → logprob: -5.380565166473389
    3. ' x' → logprob: -7.005565166473389
    4. ' (' → logprob: -10.255565643310547
    5. 'min' → logprob: -14.630565643310547
    6. '(' → logprob: -14.755565643310547
    7. '(min' → logprob: -14.755565643310547
    8. ')x' → logprob: -14.880565643310547
    9. '   ' → logprob: -15.005565643310547
    10. '	x' → logprob: -15.505565643310547

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6656825866666622e-05
    2. ' <' → logprob: -11.62502670288086
    3. ' -' → logprob: -11.87502670288086
    4. '<' → logprob: -12.87502670288086
    5. '<x' → logprob: -12.87502670288086
    6. ' ' → logprob: -13.25002670288086
    7. ')' → logprob: -13.62502670288086
    8. '```' → logprob: -13.87502670288086
    9. '-' → logprob: -15.06252670288086
    10. ')<' → logprob: -15.06252670288086

Token 181: ' -' (ID: 533)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5331085324287415
    2. ' -' → logprob: -1.5331084728240967
    3. '<' → logprob: -1.7831084728240967
    4. '-' → logprob: -3.5331084728240967
    5. '<w' → logprob: -11.658108711242676
    6. ' ' → logprob: -12.658108711242676
    7. '<x' → logprob: -12.658108711242676
    8. ' <=' → logprob: -12.783108711242676
    9. ' >' → logprob: -13.408108711242676
    10. '-w' → logprob: -13.533108711242676

Token 182: ' wx' (ID: 20113)
  Prédit: 'wx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wx' → logprob: -0.006716913543641567
    2. ' wx' → logprob: -5.006716728210449
    3. 'w' → logprob: -14.00671672821045
    4. '	wx' → logprob: -14.63171672821045
    5. '(wx' → logprob: -15.75671672821045
    6. '.wx' → logprob: -17.006717681884766
    7. ')' → logprob: -17.631717681884766
    8. 'ws' → logprob: -17.756717681884766
    9. 'x' → logprob: -17.881717681884766
    10. 'Wx' → logprob: -17.881717681884766

Token 183: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000892759533599019
    2. ')*(' → logprob: -7.500892639160156
    3. ')*' → logprob: -8.000892639160156
    4. ' )' → logprob: -12.500892639160156
    5. ')
' → logprob: -14.500892639160156
    6. '>' → logprob: -15.750892639160156
    7. '）' → logprob: -15.875892639160156
    8. ')(' → logprob: -17.000892639160156
    9. ')**' → logprob: -17.375892639160156
    10. '#' → logprob: -17.500892639160156

Token 184: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3692355751991272
    2. ')*' → logprob: -1.7442355155944824
    3. '*' → logprob: -2.2442355155944824
    4. ')*(' → logprob: -3.7442355155944824
    5. '>' → logprob: -5.619235515594482
    6. '<' → logprob: -7.494235515594482
    7. ' *' → logprob: -10.24423599243164
    8. '>*' → logprob: -10.61923599243164
    9. '#' → logprob: -10.74423599243164
    10. '```' → logprob: -11.36923599243164

Token 185: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.007787258364260197
    2. ' (' → logprob: -4.882787227630615
    3. '(' → logprob: -8.632787704467773
    4. '(y' → logprob: -14.007787704467773
    5. ' ' → logprob: -14.757787704467773
    6. '   ' → logprob: -15.132787704467773
    7. '<|end|>' → logprob: -15.132787704467773
    8. '(wx' → logprob: -15.382787704467773
    9. '(xs' → logprob: -15.632787704467773
    10. '
' → logprob: -15.882787704467773

Token 186: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08166566491127014
    2. '(x' → logprob: -2.5816657543182373
    3. ' x' → logprob: -6.331665515899658
    4. ' (' → logprob: -6.956665515899658
    5. ' ' → logprob: -11.456665992736816
    6. '   ' → logprob: -11.581665992736816
    7. '(' → logprob: -12.206665992736816
    8. '
' → logprob: -12.581665992736816
    9. '{x' → logprob: -12.706665992736816
    10. '2' → logprob: -12.956665992736816

Token 187: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013512482109945267
    2. '-' → logprob: -9.37513542175293
    3. '```' → logprob: -10.62513542175293
    4. ' ' → logprob: -11.50013542175293
    5. ' -' → logprob: -12.25013542175293
    6. 'qx' → logprob: -12.62513542175293
    7. '
' → logprob: -13.12513542175293
    8. '1' → logprob: -13.50013542175293
    9. ')' → logprob: -13.75013542175293
    10. 'x' → logprob: -14.62513542175293

Token 188: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07128740847110748
    2. ' <' → logprob: -3.1962873935699463
    3. ' )' → logprob: -4.071287631988525
    4. ')<' → logprob: -5.321287631988525
    5. '-' → logprob: -6.196287631988525
    6. '<' → logprob: -6.321287631988525
    7. ' -' → logprob: -6.446287631988525
    8. ' ' → logprob: -8.946287155151367
    9. '<|end|>' → logprob: -9.196287155151367
    10. '1' → logprob: -9.446287155151367

Token 189: ' wx' (ID: 20113)
  Prédit: 'wx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wx' → logprob: -0.0013391701504588127
    2. ' wx' → logprob: -6.626338958740234
    3. ')' → logprob: -12.376338958740234
    4. '	wx' → logprob: -12.626338958740234
    5. '(wx' → logprob: -13.126338958740234
    6. '1' → logprob: -14.001338958740234
    7. 'qx' → logprob: -14.501338958740234
    8. 'w' → logprob: -14.501338958740234
    9. '.wx' → logprob: -14.626338958740234
    10. ' ' → logprob: -14.751338958740234

Token 190: ')' (ID: 8)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7014061808586121
    2. ')' → logprob: -0.8264061808586121
    3. ' <' → logprob: -2.826406240463257
    4. ')<' → logprob: -4.951406002044678
    5. ' )' → logprob: -9.201406478881836
    6. '<=' → logprob: -9.826406478881836
    7. ')<=' → logprob: -11.701406478881836
    8. ' ' → logprob: -11.951406478881836
    9. ' <=' → logprob: -12.326406478881836
    10. '```' → logprob: -12.576406478881836

Token 191: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04304463043808937
    2. ' <' → logprob: -3.1680445671081543
    3. ')' → logprob: -10.793045043945312
    4. '<=' → logprob: -11.668045043945312
    5. '[' → logprob: -12.293045043945312
    6. ')<' → logprob: -12.668045043945312
    7. ' ' → logprob: -12.793045043945312
    8. '0' → logprob: -13.918045043945312
    9. '<
' → logprob: -14.043045043945312
    10. '
' → logprob: -14.543045043945312

Token 192: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017025562701746821
    2. ' ' → logprob: -6.376702785491943
    3. ' ' → logprob: -16.2517032623291
    4. '1' → logprob: -16.9392032623291
    5. '=' → logprob: -17.0642032623291
    6. '  ' → logprob: -17.5642032623291
    7. '۰' → logprob: -17.7517032623291
    8. '```' → logprob: -17.8142032623291
    9. '   ' → logprob: -17.8767032623291
    10. ')' → logprob: -17.9392032623291

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003806257154792547
    2. ' ' → logprob: -7.875380516052246
    3. '
' → logprob: -16.500381469726562
    4. '```' → logprob: -16.500381469726562
    5. '   ' → logprob: -17.250381469726562
    6. '00' → logprob: -17.250381469726562
    7. ')' → logprob: -17.375381469726562
    8. '1' → logprob: -17.562881469726562
    9. '۰' → logprob: -17.562881469726562
    10. '000' → logprob: -17.562881469726562

Token 194: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6427866220474243
    2. ' and' → logprob: -0.7677866220474243
    3. 'and' → logprob: -4.892786502838135
    4. ':
' → logprob: -6.517786502838135
    5. ' or' → logprob: -8.142786979675293
    6. '   ' → logprob: -8.142786979675293
    7. ' :' → logprob: -8.142786979675293
    8. '       ' → logprob: -9.017786979675293
    9. ')' → logprob: -10.017786979675293
    10. '):' → logprob: -10.142786979675293

Token 195: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6631200313568115
    2. '       ' → logprob: -0.7881200313568115
    3. ' and' → logprob: -3.6631200313568115
    4. '
' → logprob: -6.038120269775391
    5. ':' → logprob: -7.413120269775391
    6. ' return' → logprob: -8.16312026977539
    7. ':
' → logprob: -8.66312026977539
    8. 'return' → logprob: -8.66312026977539
    9. '   ' → logprob: -8.91312026977539
    10. '        
' → logprob: -9.53812026977539

Token 196: ' #' (ID: 1069)
  Prédit: 'wy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wy' → logprob: -0.5249648094177246
    2. '#' (adapté à ' #') → logprob: -1.6499648094177246
    3. 'if' → logprob: -2.6499648094177246
    4. 'y' → logprob: -3.0249648094177246
    5. '   ' → logprob: -3.2749648094177246
    6. 'min' → logprob: -3.3999648094177246
    7. 'return' → logprob: -4.649964809417725
    8. 'wall' → logprob: -5.274964809417725
    9. 'w' → logprob: -5.399964809417725
    10. 'yw' → logprob: -7.024964809417725

Token 197: ' Now' (ID: 6549)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.29386791586875916
    2. 'y' → logprob: -2.293867826461792
    3. 'min' → logprob: -2.793867826461792
    4. 'wy' → logprob: -2.918867826461792
    5. 'wall' → logprob: -4.418868064880371
    6. '   ' → logprob: -5.168868064880371
    7. 'return' → logprob: -5.293868064880371
    8. 'if' → logprob: -5.668868064880371
    9. 't' → logprob: -5.918868064880371
    10. 'ay' → logprob: -6.918868064880371

Token 198: ' check' (ID: 2371)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.126899003982544
    2. ' check' → logprob: -1.251899003982544
    3. '           ' → logprob: -2.501899003982544
    4. ' #' → logprob: -2.501899003982544
    5. 'check' → logprob: -2.501899003982544
    6. '   ' → logprob: -3.126899003982544
    7. ',' → logprob: -3.376899003982544
    8. ' y' → logprob: -4.001898765563965
    9. ' if' → logprob: -4.751898765563965
    10. 'y' → logprob: -4.876898765563965

Token 199: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3140445053577423
    2. ' if' → logprob: -1.31404447555542
    3. '   ' → logprob: -7.68904447555542
    4. 'min' → logprob: -9.314044952392578
    5. ' min' → logprob: -9.689044952392578
    6. '           ' → logprob: -9.939044952392578
    7. 'the' → logprob: -11.064044952392578
    8. ' y' → logprob: -11.064044952392578
    9. ' the' → logprob: -11.189044952392578
    10. ' ' → logprob: -11.189044952392578

Token 200: ' the' (ID: 290)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.09876862913370132
    2. 'max' → logprob: -2.723768711090088
    3. ' min' → logprob: -4.348768711090088
    4. '(min' → logprob: -4.473768711090088
    5. ' max' → logprob: -6.473768711090088
    6. '(max' → logprob: -6.848768711090088
    7. 'not' → logprob: -6.848768711090088
    8. ' not' → logprob: -7.973768711090088
    9. '(not' → logprob: -10.09876823425293
    10. ' (' → logprob: -11.22376823425293

Token 201: ' segment' (ID: 14806)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5417137145996094
    2. 'max' → logprob: -1.0417137145996094
    3. '(min' → logprob: -3.4167137145996094
    4. '(max' → logprob: -3.6667137145996094
    5. 'not' → logprob: -5.791713714599609
    6. '(y' → logprob: -6.791713714599609
    7. '#' → logprob: -7.041713714599609
    8. ' max' → logprob: -7.416713714599609
    9. ' min' → logprob: -7.666713714599609
    10. 'y' → logprob: -7.916713714599609

Token 202: ''s' (ID: 885)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -1.1239051818847656
    2. 'min' → logprob: -1.4989051818847656
    3. ' crosses' → logprob: -1.8739051818847656
    4. ''s' → logprob: -1.9989051818847656
    5. 'y' → logprob: -2.9989051818847656
    6. 'over' → logprob: -3.3739051818847656
    7. ' min' → logprob: -4.123905181884766
    8. 'max' → logprob: -4.123905181884766
    9. ' intersects' → logprob: -4.498905181884766
    10. 'cross' → logprob: -4.873905181884766

Token 203: ' y' (ID: 342)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2513042688369751
    2. 'y' → logprob: -1.876304268836975
    3. ' min' → logprob: -3.0013041496276855
    4. 'max' → logprob: -4.1263041496276855
    5. ' y' → logprob: -6.7513041496276855
    6. ' max' → logprob: -6.8763041496276855
    7. '(min' → logprob: -8.251304626464844
    8. 'segment' → logprob: -8.376304626464844
    9. ' segment' → logprob: -9.251304626464844
    10. '   ' → logprob: -9.376304626464844

Token 204: ' projection' (ID: 41244)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.5125625133514404
    2. '1' → logprob: -1.5125625133514404
    3. 'ranges' → logprob: -2.1375625133514404
    4. 'range' → logprob: -4.2625627517700195
    5. 'values' → logprob: -4.3875627517700195
    6. 'min' → logprob: -4.8875627517700195
    7. ' coordinates' → logprob: -5.5125627517700195
    8. 'coordinate' → logprob: -5.7625627517700195
    9. '-range' → logprob: -5.7625627517700195
    10. 'segments' → logprob: -6.0125627517700195

Token 205: ' overlap' (ID: 56631)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.2655436098575592
    2. ' overlaps' → logprob: -2.1405436992645264
    3. 'inter' → logprob: -2.3905436992645264
    4. ' intersects' → logprob: -4.265543460845947
    5. 'min' → logprob: -6.140543460845947
    6. 'covers' → logprob: -6.140543460845947
    7. ' covers' → logprob: -6.640543460845947
    8. 'max' → logprob: -6.890543460845947
    9. ' over' → logprob: -7.640543460845947
    10. '   ' → logprob: -7.640543460845947

Token 206: ' with' (ID: 483)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006667058449238539
    2. ' with' → logprob: -5.631667137145996
    3. 'with' → logprob: -6.631667137145996
    4. '(s' → logprob: -7.006667137145996
    5. 'min' → logprob: -8.506667137145996
    6. ' s' → logprob: -8.756667137145996
    7. '(min' → logprob: -9.381667137145996
    8. ' (' → logprob: -9.756667137145996
    9. '   ' → logprob: -9.881667137145996
    10. '(max' → logprob: -10.006667137145996

Token 207: ' the' (ID: 290)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.12958690524101257
    2. 'min' → logprob: -2.129586935043335
    3. '[min' → logprob: -6.879586696624756
    4. '(min' → logprob: -7.004586696624756
    5. ' max' → logprob: -7.754586696624756
    6. 'max' → logprob: -8.504587173461914
    7. ' py' → logprob: -10.254587173461914
    8. 'py' → logprob: -10.629587173461914
    9. ' range' → logprob: -11.379587173461914
    10. 'range' → logprob: -12.504587173461914

Token 208: ' wall' (ID: 9688)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.14170558750629425
    2. ' min' → logprob: -2.1417055130004883
    3. '[min' → logprob: -4.641705513000488
    4. '(min' → logprob: -5.766705513000488
    5. 'max' → logprob: -6.516705513000488
    6. 'range' → logprob: -8.891705513000488
    7. ' max' → logprob: -9.391705513000488
    8. 'py' → logprob: -9.391705513000488
    9. '[max' → logprob: -10.141705513000488
    10. ' range' → logprob: -10.391705513000488

Token 209: ' segment' (ID: 14806)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0163536071777344
    2. ' if' → logprob: -2.1413536071777344
    3. ' min' → logprob: -2.5163536071777344
    4. ' ranges' → logprob: -2.7663536071777344
    5. 's' → logprob: -3.0163536071777344
    6. '           ' → logprob: -3.1413536071777344
    7. ' >=' → logprob: -3.1413536071777344
    8. ' s' → logprob: -3.3913536071777344
    9. ''s' → logprob: -3.5163536071777344
    10. ' range' → logprob: -3.8913536071777344

Token 210: ' y' (ID: 342)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5176031589508057
    2. ' and' → logprob: -1.7676031589508057
    3. ' if' → logprob: -1.7676031589508057
    4. '       ' → logprob: -3.5176031589508057
    5. ' (' → logprob: -4.142602920532227
    6. ',' → logprob: -5.892602920532227
    7. '   ' → logprob: -6.142602920532227
    8. '               ' → logprob: -6.267602920532227
    9. ' or' → logprob: -6.517602920532227
    10. '<|end|>' → logprob: -6.517602920532227

Token 211: ' projection' (ID: 41244)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.35785797238349915
    2. 's' → logprob: -2.2328579425811768
    3. ' min' → logprob: -2.9828579425811768
    4. ' ranges' → logprob: -3.3578579425811768
    5. '_min' → logprob: -3.6078579425811768
    6. 'range' → logprob: -3.7328579425811768
    7. ' range' → logprob: -4.107858180999756
    8. 'ranges' → logprob: -4.357858180999756
    9. '1' → logprob: -4.482858180999756
    10. '-range' → logprob: -5.482858180999756

Token 212: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14163120090961456
    2. ' and' → logprob: -2.6416311264038086
    3. ' if' → logprob: -3.1416311264038086
    4. '       ' → logprob: -5.016631126403809
    5. '               ' → logprob: -5.391631126403809
    6. ':' → logprob: -6.766631126403809
    7. ' (' → logprob: -6.891631126403809
    8. ',' → logprob: -6.891631126403809
    9. 'if' → logprob: -7.016631126403809
    10. '   ' → logprob: -7.391631126403809

Token 213: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07734230905771255
    2. ' if' → logprob: -3.3273422718048096
    3. '       ' → logprob: -3.5773422718048096
    4. ' and' → logprob: -4.952342510223389
    5. ',' → logprob: -7.077342510223389
    6. 'if' → logprob: -7.077342510223389
    7. '               ' → logprob: -8.07734203338623
    8. '   ' → logprob: -8.07734203338623
    9. ' (' → logprob: -8.45234203338623
    10. ' y' → logprob: -9.07734203338623

Token 214: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.28633981943130493
    2. 'max' → logprob: -1.7863397598266602
    3. 'if' → logprob: -3.66133975982666
    4. 'return' → logprob: -3.78633975982666
    5. ' min' → logprob: -3.78633975982666
    6. ' max' → logprob: -5.53633975982666
    7. ' return' → logprob: -6.28633975982666
    8. 'y' → logprob: -6.91133975982666
    9. '   ' → logprob: -6.91133975982666
    10. 'over' → logprob: -7.78633975982666

Token 215: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6519517302513123
    2. '_y' → logprob: -1.401951789855957
    3. '(y' → logprob: -1.901951789855957
    4. '(py' → logprob: -3.276951789855957
    5. '_py' → logprob: -4.026951789855957
    6. 'py' → logprob: -4.026951789855957
    7. '_' → logprob: -5.276951789855957
    8. '1' → logprob: -6.526951789855957
    9. '(' → logprob: -6.901951789855957
    10. 'qy' → logprob: -7.901951789855957

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3627464771270752
    2. '=' → logprob: -1.4877464771270752
    3. ' =' → logprob: -1.9877464771270752
    4. '(py' → logprob: -1.9877464771270752
    5. '_py' → logprob: -2.612746477127075
    6. 'py' → logprob: -3.237746477127075
    7. '_' → logprob: -3.487746477127075
    8. '_wall' → logprob: -3.487746477127075
    9. '_w' → logprob: -3.987746477127075
    10. ' <=' → logprob: -4.237746238708496

Token 217: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0017272992990911007
    2. ' max' → logprob: -6.376727104187012
    3. '=max' → logprob: -11.126727104187012
    4. 'min' → logprob: -12.501727104187012
    5. '=' → logprob: -12.751727104187012
    6. 'py' → logprob: -14.376727104187012
    7. ' =' → logprob: -14.501727104187012
    8. 'wx' → logprob: -14.626727104187012
    9. 'mx' → logprob: -14.751727104187012
    10. ',max' → logprob: -14.751727104187012

Token 218: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018984848633408546
    2. '_y' → logprob: -4.393984794616699
    3. '(py' → logprob: -5.768984794616699
    4. 'py' → logprob: -6.893984794616699
    5. '=' → logprob: -6.893984794616699
    6. '(y' → logprob: -7.143984794616699
    7. '(' → logprob: -8.3939847946167
    8. '_py' → logprob: -8.8939847946167
    9. 'Y' → logprob: -10.0189847946167
    10. 'w' → logprob: -10.2689847946167

Token 219: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023253049701452255
    2. ' =' → logprob: -3.7732529640197754
    3. ',' → logprob: -12.148253440856934
    4. '=min' → logprob: -13.773253440856934
    5. '=max' → logprob: -14.648253440856934
    6. ' ' → logprob: -15.773253440856934
    7. '=

' → logprob: -16.273252487182617
    8. '<|end|>' → logprob: -16.648252487182617
    9. '```' → logprob: -16.898252487182617
    10. '=
' → logprob: -17.023252487182617

Token 220: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.4762473404407501
    2. 'min' → logprob: -0.9762473106384277
    3. ' sorted' → logprob: -7.101247310638428
    4. 'sorted' → logprob: -7.476247310638428
    5. 'py' → logprob: -7.601247310638428
    6. ' py' → logprob: -8.351247787475586
    7. '(min' → logprob: -10.601247787475586
    8. '	min' → logprob: -12.101247787475586
    9. '   ' → logprob: -12.601247787475586
    10. '(py' → logprob: -12.851247787475586

Token 221: '(py' (ID: 139986)
  Prédit: '(py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(py' → logprob: -0.0002251125843031332
    2. '(y' → logprob: -9.000225067138672
    3. '(' → logprob: -9.750225067138672
    4. 'py' → logprob: -10.500225067138672
    5. '(w' → logprob: -12.250225067138672
    6. '(p' → logprob: -13.000225067138672
    7. '(q' → logprob: -13.250225067138672
    8. '(Py' → logprob: -13.500225067138672
    9. '(
' → logprob: -13.500225067138672
    10. '(poly' → logprob: -14.375225067138672

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016480415361002088
    2. ' ,' → logprob: -7.37664794921875
    3. ',y' → logprob: -7.50164794921875
    4. ',q' → logprob: -8.12664794921875
    5. '),' → logprob: -9.37664794921875
    6. 'py' → logprob: -10.00164794921875
    7. 'qy' → logprob: -10.37664794921875
    8. ',
' → logprob: -12.25164794921875
    9. ' py' → logprob: -13.50164794921875
    10. '(py' → logprob: -13.75164794921875

Token 223: ' q' (ID: 2335)
  Prédit: 'qy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qy' → logprob: -0.009993111714720726
    2. ' q' → logprob: -4.634993076324463
    3. 'q' → logprob: -9.259993553161621
    4. 'max' → logprob: -9.634993553161621
    5. ' max' → logprob: -10.009993553161621
    6. 'py' → logprob: -11.134993553161621
    7. '   ' → logprob: -12.009993553161621
    8. ' ' → logprob: -12.134993553161621
    9. 'qx' → logprob: -14.259993553161621
    10. ' y' → logprob: -14.259993553161621

Token 224: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0013644045684486628
    2. 'ey' → logprob: -7.126364231109619
    3. 'qy' → logprob: -7.876364231109619
    4. 'ay' → logprob: -9.126364707946777
    5. 'uy' → logprob: -9.876364707946777
    6. 'ry' → logprob: -12.001364707946777
    7. 'q' → logprob: -12.376364707946777
    8. 'py' → logprob: -13.251364707946777
    9. 'w' → logprob: -13.626364707946777
    10. 'iy' → logprob: -13.876364707946777

Token 225: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.009785839356482029
    2. ',' → logprob: -4.6347856521606445
    3. ' ),' → logprob: -10.884785652160645
    4. ')' → logprob: -12.384785652160645
    5. ',),' → logprob: -12.509785652160645
    6. ' ,' → logprob: -13.634785652160645
    7. '   ' → logprob: -14.134785652160645
    8. ',y' → logprob: -15.259785652160645
    9. '           ' → logprob: -16.00978660583496
    10. '),
' → logprob: -16.13478660583496

Token 226: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1602250337600708
    2. ' max' → logprob: -1.9102250337600708
    3. '   ' → logprob: -14.535224914550781
    4. '(max' → logprob: -16.03522491455078
    5. '	max' → logprob: -16.41022491455078
    6. ' ' → logprob: -16.78522491455078
    7. '[max' → logprob: -17.66022491455078
    8. 'py' → logprob: -18.03522491455078
    9. ',max' → logprob: -18.16022491455078
    10. '=max' → logprob: -18.28522491455078

Token 227: '(py' (ID: 139986)
  Prédit: '(py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(py' → logprob: -0.023838263005018234
    2. 'py' → logprob: -3.7738382816314697
    3. 'y' → logprob: -7.898838043212891
    4. '(y' → logprob: -9.27383804321289
    5. 'max' → logprob: -9.64883804321289
    6. '(' → logprob: -10.39883804321289
    7. '(max' → logprob: -11.27383804321289
    8. '(px' → logprob: -11.89883804321289
    9. 'ay' → logprob: -12.14883804321289
    10. '(q' → logprob: -12.77383804321289

Token 228: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6548947095870972
    2. 'y' → logprob: -1.6548947095870972
    3. 'py' → logprob: -2.0298948287963867
    4. 'qy' → logprob: -2.6548948287963867
    5. '(py' → logprob: -2.6548948287963867
    6. '(y' → logprob: -4.529894828796387
    7. '(q' → logprob: -5.904894828796387
    8. 'q' → logprob: -6.904894828796387
    9. ')y' → logprob: -7.154894828796387
    10. ')+' → logprob: -7.779894828796387

Token 229: ' q' (ID: 2335)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.2346213310956955
    2. 'max' → logprob: -1.734621286392212
    3. 'qy' → logprob: -3.484621286392212
    4. ' max' → logprob: -6.484621524810791
    5. ' py' → logprob: -7.734621524810791
    6. 'q' → logprob: -10.859621047973633
    7. '   ' → logprob: -12.484621047973633
    8. ' q' → logprob: -13.109621047973633
    9. 'pq' → logprob: -13.484621047973633
    10. ' ' → logprob: -13.609621047973633

Token 230: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08578291535377502
    2. 'qy' → logprob: -2.710783004760742
    3. 'q' → logprob: -4.210783004760742
    4. 'max' → logprob: -7.460783004760742
    5. 'py' → logprob: -8.585783004760742
    6. ')' → logprob: -9.210783004760742
    7. 'qx' → logprob: -12.335783004760742
    8. ' max' → logprob: -13.210783004760742
    9. '   ' → logprob: -13.210783004760742
    10. ')
' → logprob: -13.585783004760742

Token 231: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.348572313785553
    2. ')' → logprob: -1.2235722541809082
    3. '   ' → logprob: -9.723572731018066
    4. ')
' → logprob: -10.848572731018066
    5. ' )
' → logprob: -11.223572731018066
    6. ')

' → logprob: -11.473572731018066
    7. '           ' → logprob: -12.848572731018066
    8. 'if' → logprob: -12.973572731018066
    9. '),' → logprob: -12.973572731018066
    10. '       ' → logprob: -12.973572731018066

Token 232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011716912500560284
    2. ' if' → logprob: -4.636716842651367
    3. '
' → logprob: -7.386716842651367
    4. '            
' → logprob: -8.136716842651367
    5. '   ' → logprob: -8.261716842651367
    6. '       ' → logprob: -8.511716842651367
    7. '  
' → logprob: -8.636716842651367
    8. ',' → logprob: -9.386716842651367
    9. ' 
' → logprob: -9.386716842651367
    10. 'if' → logprob: -10.011716842651367

Token 233: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.08617877960205078
    2. 'if' → logprob: -2.711178779602051
    3. 'seg' → logprob: -4.961178779602051
    4. ' min' → logprob: -5.711178779602051
    5. '           ' → logprob: -6.711178779602051
    6. 'line' → logprob: -6.836178779602051
    7. 'max' → logprob: -7.336178779602051
    8. ' if' → logprob: -7.461178779602051
    9. 'segment' → logprob: -7.461178779602051
    10. 'return' → logprob: -8.21117877960205

Token 234: ' Find' (ID: 9764)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06540985405445099
    2. 'seg' → logprob: -4.3154096603393555
    3. 'segment' → logprob: -4.4404096603393555
    4. ' min' → logprob: -4.5654096603393555
    5. 'max' → logprob: -4.6904096603393555
    6. 'if' → logprob: -4.8154096603393555
    7. 'line' → logprob: -5.1904096603393555
    8. 'return' → logprob: -7.0654096603393555
    9. '#' → logprob: -7.5654096603393555
    10. 'inter' → logprob: -7.9404096603393555

Token 235: ' the' (ID: 290)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5921748876571655
    2. ' min' → logprob: -0.8421748876571655
    3. 'max' → logprob: -4.342175006866455
    4. 'min' → logprob: -5.842175006866455
    5. ' y' → logprob: -9.967174530029297
    6. ' the' → logprob: -10.342174530029297
    7. ' overlap' → logprob: -10.342174530029297
    8. '(max' → logprob: -10.842174530029297
    9. '(min' → logprob: -10.967174530029297
    10. ' ymin' → logprob: -11.717174530029297

Token 236: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4220622777938843
    2. 'max' → logprob: -1.7970622777938843
    3. 'min' → logprob: -2.797062397003174
    4. 'inter' → logprob: -2.922062397003174
    5. 'iy' → logprob: -4.172062397003174
    6. 'ay' → logprob: -5.172062397003174
    7. ' y' → logprob: -5.172062397003174
    8. 'intersection' → logprob: -5.297062397003174
    9. ' max' → logprob: -5.422062397003174
    10. ' min' → logprob: -5.547062397003174

Token 237: ' coordinate' (ID: 30380)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.37477126717567444
    2. '_at' → logprob: -2.1247713565826416
    3. 'inter' → logprob: -2.8747713565826416
    4. ' at' → logprob: -3.4997713565826416
    5. 'cross' → logprob: -3.4997713565826416
    6. '_inter' → logprob: -3.8747713565826416
    7. '_cross' → logprob: -3.9997713565826416
    8. 'intersection' → logprob: -4.2497711181640625
    9. '=' → logprob: -4.8747711181640625
    10. ' =' → logprob: -5.8747711181640625

Token 238: ' where' (ID: 1919)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.7759140729904175
    2. ' of' → logprob: -1.4009140729904175
    3. '=' → logprob: -2.025914192199707
    4. ' =' → logprob: -2.025914192199707
    5. 'at' → logprob: -5.025914192199707
    6. ' where' → logprob: -5.025914192199707
    7. ' intersection' → logprob: -5.650914192199707
    8. 'of' → logprob: -5.900914192199707
    9. 'inter' → logprob: -6.275914192199707
    10. 'cross' → logprob: -6.525914192199707

Token 239: ' path' (ID: 3104)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.10223846882581711
    2. 'the' → logprob: -2.727238416671753
    3. 'x' → logprob: -3.727238416671753
    4. '#' → logprob: -6.477238655090332
    5. ' x' → logprob: -6.602238655090332
    6. ' line' → logprob: -6.852238655090332
    7. 'segment' → logprob: -6.852238655090332
    8. ' segment' → logprob: -7.477238655090332
    9. 'cross' → logprob: -7.477238655090332
    10. '(wx' → logprob: -8.602238655090332

Token 240: ' crosses' (ID: 95853)
  Prédit: ' crosses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crosses' → logprob: -0.05220609903335571
    2. ' intersects' → logprob: -3.927206039428711
    3. 'cross' → logprob: -4.677206039428711
    4. ' would' → logprob: -5.052206039428711
    5. 'inter' → logprob: -5.177206039428711
    6. 'x' → logprob: -5.927206039428711
    7. ' cross' → logprob: -6.427206039428711
    8. '_cross' → logprob: -6.677206039428711
    9. ' line' → logprob: -6.677206039428711
    10. ' segments' → logprob: -7.927206039428711

Token 241: ' wx' (ID: 20113)
  Prédit: ' wx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wx' → logprob: -0.308078408241272
    2. ' the' → logprob: -1.808078408241272
    3. 'wx' → logprob: -2.3080782890319824
    4. '(wx' → logprob: -6.683078289031982
    5. 'the' → logprob: -7.933078289031982
    6. '	wx' → logprob: -9.80807876586914
    7. ' ' → logprob: -11.18307876586914
    8. ' x' → logprob: -11.93307876586914
    9. ' =' → logprob: -12.05807876586914
    10. ' at' → logprob: -12.18307876586914

Token 242: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2050018310546875
    2. '=' → logprob: -1.7050018310546875
    3. 'wx' → logprob: -6.7050018310546875
    4. 'x' → logprob: -7.7050018310546875
    5. ' =
' → logprob: -7.8300018310546875
    6. ' wx' → logprob: -8.205001831054688
    7. ' if' → logprob: -8.330001831054688
    8. '*' → logprob: -8.580001831054688
    9. ' *' → logprob: -8.955001831054688
    10. ':' → logprob: -9.080001831054688

Token 243: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47564417123794556
    2. '=' → logprob: -0.9756441712379456
    3. 'x' → logprob: -8.1006441116333
    4. ' (' → logprob: -8.3506441116333
    5. ',' → logprob: -8.9756441116333
    6. ' x' → logprob: -8.9756441116333
    7. '*' → logprob: -9.1006441116333
    8. ' =
' → logprob: -9.1006441116333
    9. 'y' → logprob: -9.2256441116333
    10. ' y' → logprob: -9.4756441116333

Token 244: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.18563131988048553
    2. ' y' → logprob: -1.810631275177002
    3. 'cross' → logprob: -5.810631275177002
    4. 'wy' → logprob: -7.185631275177002
    5. ' cross' → logprob: -7.435631275177002
    6. 'cy' → logprob: -8.68563175201416
    7. 'if' → logprob: -8.81063175201416
    8. 'wx' → logprob: -8.93563175201416
    9. ' wy' → logprob: -9.06063175201416
    10. ' if' → logprob: -9.31063175201416

Token 245: ' line' (ID: 2543)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6330292820930481
    2. 'cross' → logprob: -1.0080292224884033
    3. ' y' → logprob: -3.1330292224884033
    4. 't' → logprob: -4.008029460906982
    5. ' cross' → logprob: -4.008029460906982
    6. 'inter' → logprob: -5.133029460906982
    7. 'dy' → logprob: -5.758029460906982
    8. 'cy' → logprob: -6.008029460906982
    9. 'if' → logprob: -6.133029460906982
    10. ' t' → logprob: -6.633029460906982

Token 246: ' from' (ID: 591)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.3183282613754272
    2. '_dx' → logprob: -1.3183282613754272
    3. '_y' → logprob: -1.4433282613754272
    4. '_s' → logprob: -2.818328380584717
    5. 's' → logprob: -3.443328380584717
    6. '_cross' → logprob: -3.443328380584717
    7. '_inter' → logprob: -3.568328380584717
    8. ' =' → logprob: -3.943328380584717
    9. '1' → logprob: -4.568328380584717
    10. 'y' → logprob: -4.693328380584717

Token 247: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3684239089488983
    2. '(x' → logprob: -1.2434239387512207
    3. ' (' → logprob: -4.243423938751221
    4. ' x' → logprob: -5.243423938751221
    5. '(' → logprob: -9.368423461914062
    6. '(
' → logprob: -10.868423461914062
    7. ',' → logprob: -11.618423461914062
    8. '
' → logprob: -12.368423461914062
    9. 'y' → logprob: -12.493423461914062
    10. ',x' → logprob: -13.118423461914062

Token 248: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002619318547658622
    2. ' x' → logprob: -8.250262260437012
    3. ')x' → logprob: -14.875262260437012
    4. ')' → logprob: -16.125261306762695
    5. '(x' → logprob: -16.250261306762695
    6. ',' → logprob: -18.375261306762695
    7. '
' → logprob: -18.750261306762695
    8. ',x' → logprob: -18.875261306762695
    9. '{x' → logprob: -19.500261306762695
    10. ')
' → logprob: -19.875261306762695

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. '```' → logprob: -13.125005722045898
    3. ',' → logprob: -13.875005722045898
    4. ' ' → logprob: -14.000005722045898
    5. '[' → logprob: -14.375005722045898
    6. ')' → logprob: -14.375005722045898
    7. '
' → logprob: -15.250005722045898
    8. 'x' → logprob: -15.875005722045898
    9. '<|end|>' → logprob: -16.2500057220459
    10. 'from' → logprob: -16.5000057220459

Token 250: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3193758428096771
    2. '1' → logprob: -1.3193758726119995
    3. ',y' → logprob: -5.319375991821289
    4. 'y' → logprob: -7.444375991821289
    5. ' ,' → logprob: -7.569375991821289
    6. ' y' → logprob: -10.069375991821289
    7. '```' → logprob: -11.319375991821289
    8. ',
' → logprob: -11.319375991821289
    9. 'x' → logprob: -11.694375991821289
    10. ')' → logprob: -11.944375991821289

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.523948907968588e-05
    2. ',' → logprob: -11.000035285949707
    3. ' ' → logprob: -11.125035285949707
    4. ')' → logprob: -13.625035285949707
    5. '```' → logprob: -14.125035285949707
    6. '_' → logprob: -14.375035285949707
    7. '   ' → logprob: -15.500035285949707
    8. '
' → logprob: -15.500035285949707
    9. ' ,' → logprob: -16.12503433227539
    10. '),' → logprob: -16.12503433227539

Token 252: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22381426393985748
    2. ' -' → logprob: -1.9738142490386963
    3. ')' → logprob: -3.4738142490386963
    4. '-' → logprob: -4.098814487457275
    5. ',y' → logprob: -5.848814487457275
    6. ' *' → logprob: -5.973814487457275
    7. ' ,' → logprob: -6.098814487457275
    8. '*(' → logprob: -6.723814487457275
    9. 'x' → logprob: -6.973814487457275
    10. ',x' → logprob: -7.348814487457275

Token 253: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16606153547763824
    2. ' to' → logprob: -2.2910616397857666
    3. ' ,' → logprob: -3.6660616397857666
    4. ' and' → logprob: -4.7910614013671875
    5. ' -' → logprob: -5.1660614013671875
    6. ')' → logprob: -6.1660614013671875
    7. ' *' → logprob: -6.6660614013671875
    8. '-' → logprob: -6.7910614013671875
    9. ' +' → logprob: -6.7910614013671875
    10. 'to' → logprob: -6.7910614013671875

Token 254: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.17976762354373932
    2. ' (' → logprob: -1.8047676086425781
    3. '(' → logprob: -11.304767608642578
    4. 'x' → logprob: -11.929767608642578
    5. ' x' → logprob: -13.304767608642578
    6. ' ' → logprob: -14.179767608642578
    7. ',' → logprob: -15.054767608642578
    8. '(wx' → logprob: -15.429767608642578
    9. '(
' → logprob: -15.679767608642578
    10. '
' → logprob: -15.679767608642578

Token 255: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06197945028543472
    2. ' x' → logprob: -2.8119795322418213
    3. ',' → logprob: -12.311979293823242
    4. ' ' → logprob: -12.936979293823242
    5. ')' → logprob: -13.811979293823242
    6. 'wx' → logprob: -13.936979293823242
    7. '
' → logprob: -14.061979293823242
    8. ')x' → logprob: -14.436979293823242
    9. ' wx' → logprob: -15.061979293823242
    10. ',x' → logprob: -15.436979293823242

Token 256: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5759832262992859
    2. '1' → logprob: -0.8259832262992859
    3. '```' → logprob: -11.325983047485352
    4. 'x' → logprob: -11.450983047485352
    5. ' ' → logprob: -12.200983047485352
    6. ')' → logprob: -12.200983047485352
    7. ',' → logprob: -12.700983047485352
    8. '``' → logprob: -12.825983047485352
    9. 'y' → logprob: -13.825983047485352
    10. '
' → logprob: -14.450983047485352

Token 257: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07002879679203033
    2. ',y' → logprob: -2.945028781890869
    3. '2' → logprob: -4.820028781890869
    4. '1' → logprob: -5.445028781890869
    5. ' ,' → logprob: -6.320028781890869
    6. 'y' → logprob: -8.195029258728027
    7. ')' → logprob: -8.445029258728027
    8. '),' → logprob: -9.320029258728027
    9. ',
' → logprob: -9.570029258728027
    10. ',x' → logprob: -9.695029258728027

Token 258: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008075127378106117
    2. '1' → logprob: -4.88307523727417
    3. 'x' → logprob: -7.75807523727417
    4. ')' → logprob: -10.508074760437012
    5. ' ' → logprob: -12.133074760437012
    6. 'y' → logprob: -12.633074760437012
    7. '
' → logprob: -13.008074760437012
    8. ' x' → logprob: -13.758074760437012
    9. '```' → logprob: -14.383074760437012
    10. '   ' → logprob: -14.633074760437012

Token 259: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03764525055885315
    2. ')
' → logprob: -3.5376453399658203
    3. '):' → logprob: -5.41264533996582
    4. '):
' → logprob: -7.28764533996582
    5. ':' → logprob: -7.78764533996582
    6. ' )' → logprob: -8.28764533996582
    7. ',' → logprob: -8.28764533996582
    8. ')

' → logprob: -8.28764533996582
    9. 'y' → logprob: -8.66264533996582
    10. '),' → logprob: -8.91264533996582

Token 260: '           ' (ID: 352)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7459223866462708
    2. ' =' → logprob: -1.245922327041626
    3. ' wx' → logprob: -2.120922327041626
    4. ' x' → logprob: -3.870922327041626
    5. 'wx' → logprob: -3.870922327041626
    6. ' abs' → logprob: -4.245922565460205
    7. '=' → logprob: -4.495922565460205
    8. ' if' → logprob: -4.495922565460205
    9. ' *' → logprob: -4.620922565460205
    10. '(wx' → logprob: -4.870922565460205

Token 261: ' #' (ID: 1069)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.1451014280319214
    2. ' wx' → logprob: -3.020101547241211
    3. ' (' → logprob: -3.270101547241211
    4. 'y' → logprob: -3.770101547241211
    5. ' wy' → logprob: -4.895101547241211
    6. 'wx' → logprob: -5.520101547241211
    7. ' x' → logprob: -5.645101547241211
    8. '(' → logprob: -6.145101547241211
    9. 'wy' → logprob: -6.270101547241211
    10. ' if' → logprob: -6.645101547241211

Token 262: ' (' (ID: 350)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.6800262928009033
    2. 'y' → logprob: -1.1800262928009033
    3. ' wy' → logprob: -2.0550262928009033
    4. 'wy' → logprob: -3.0550262928009033
    5. 'wx' → logprob: -6.055026054382324
    6. 'cross' → logprob: -6.305026054382324
    7. ' cross' → logprob: -6.555026054382324
    8. '(y' → logprob: -7.180026054382324
    9. ' wx' → logprob: -7.305026054382324
    10. 'w' → logprob: -7.680026054382324

Token 263: 'y' (ID: 88)
  Prédit: 'wx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wx' → logprob: -0.12795226275920868
    2. 'x' → logprob: -3.1279523372650146
    3. '(wx' → logprob: -3.2529523372650146
    4. 'y' → logprob: -4.2529520988464355
    5. ' wx' → logprob: -4.3779520988464355
    6. 'wy' → logprob: -5.3779520988464355
    7. '(y' → logprob: -6.5029520988464355
    8. ' y' → logprob: -7.0029520988464355
    9. ' (' → logprob: -7.1279520988464355
    10. '(x' → logprob: -7.1279520988464355

Token 264: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.522464394569397
    2. ' -' → logprob: -1.022464394569397
    3. '-' → logprob: -3.8974642753601074
    4. ')' → logprob: -4.397464275360107
    5. '2' → logprob: -4.522464275360107
    6. 'y' → logprob: -7.397464275360107
    7. '-y' → logprob: -7.397464275360107
    8. '
' → logprob: -7.897464275360107
    9. ' =' → logprob: -8.022464752197266
    10. ',' → logprob: -8.022464752197266

Token 265: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0021874953527003527
    2. ' y' → logprob: -6.127187728881836
    3. ')y' → logprob: -13.752187728881836
    4. ')' → logprob: -14.002187728881836
    5. '	y' → logprob: -15.252187728881836
    6. '(y' → logprob: -15.502187728881836
    7. ' ' → logprob: -17.127187728881836
    8. '
' → logprob: -17.377187728881836
    9. '<|end|>' → logprob: -17.502187728881836
    10. '   ' → logprob: -18.377187728881836

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ')' → logprob: -11.500012397766113
    3. '2' → logprob: -13.750012397766113
    4. ' ' → logprob: -15.125012397766113
    5. '=' → logprob: -16.375011444091797
    6. '```' → logprob: -16.375011444091797
    7. ' =' → logprob: -17.125011444091797
    8. '
' → logprob: -17.250011444091797
    9. '_' → logprob: -17.500011444091797
    10. ' )' → logprob: -17.625011444091797

Token 267: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000550887081772089
    2. ' )' → logprob: -7.875550746917725
    3. ')*' → logprob: -9.250551223754883
    4. ')*(' → logprob: -10.000551223754883
    5. ')
' → logprob: -10.875551223754883
    6. '=' → logprob: -12.625551223754883
    7. ')=' → logprob: -13.375551223754883
    8. ' =' → logprob: -13.750551223754883
    9. '   ' → logprob: -14.000551223754883
    10. ')/(' → logprob: -14.500551223754883

Token 268: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30937495827674866
    2. '=' → logprob: -1.5593749284744263
    3. ' =' → logprob: -3.684375047683716
    4. '*' → logprob: -4.184374809265137
    5. ')*' → logprob: -4.809374809265137
    6. ' *' → logprob: -5.559374809265137
    7. ')*(' → logprob: -6.559374809265137
    8. ' )' → logprob: -6.684374809265137
    9. '*(' → logprob: -7.809374809265137
    10. '==' → logprob: -9.059374809265137

Token 269: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5835408568382263
    2. '(y' → logprob: -0.8335408568382263
    3. '(x' → logprob: -4.958540916442871
    4. '((' → logprob: -8.083540916442871
    5. ' ((' → logprob: -8.458540916442871
    6. '(' → logprob: -11.958540916442871
    7. ' ' → logprob: -12.083540916442871
    8. '\' → logprob: -12.583540916442871
    9. '   ' → logprob: -13.083540916442871
    10. '(py' → logprob: -13.083540916442871

Token 270: 'y' (ID: 88)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.017179489135742188
    2. ' (' → logprob: -4.142179489135742
    3. 'y' → logprob: -6.892179489135742
    4. '(x' → logprob: -10.017179489135742
    5. '(' → logprob: -10.267179489135742
    6. ' y' → logprob: -10.892179489135742
    7. '(py' → logprob: -12.142179489135742
    8. ')' → logprob: -12.392179489135742
    9. ')(' → logprob: -12.517179489135742
    10. '   ' → logprob: -12.642179489135742

Token 271: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11386506259441376
    2. ' -' → logprob: -2.3638651371002197
    3. '-' → logprob: -4.363864898681641
    4. 'y' → logprob: -8.11386489868164
    5. '-y' → logprob: -8.48886489868164
    6. ' y' → logprob: -8.98886489868164
    7. '```' → logprob: -9.86386489868164
    8. ' ' → logprob: -9.98886489868164
    9. '(y' → logprob: -9.98886489868164
    10. '   ' → logprob: -10.98886489868164

Token 272: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.038069721311330795
    2. '-' → logprob: -3.288069725036621
    3. ' ' → logprob: -11.038069725036621
    4. '-y' → logprob: -12.038069725036621
    5. '```' → logprob: -13.288069725036621
    6. 'y' → logprob: -13.538069725036621
    7. '  ' → logprob: -14.163069725036621
    8. ',' → logprob: -14.413069725036621
    9. '   ' → logprob: -14.663069725036621
    10. '1' → logprob: -15.538069725036621

Token 273: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6340944766998291
    2. ' y' → logprob: -0.7590944766998291
    3. '(y' → logprob: -6.63409423828125
    4. ' (' → logprob: -8.88409423828125
    5. '(' → logprob: -11.38409423828125
    6. 'x' → logprob: -12.13409423828125
    7. '1' → logprob: -12.50909423828125
    8. ' ' → logprob: -12.63409423828125
    9. ')y' → logprob: -12.75909423828125
    10. ')' → logprob: -12.88409423828125

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000661684141959995
    2. '```' → logprob: -7.875661849975586
    3. 'y' → logprob: -9.250661849975586
    4. 'x' → logprob: -9.750661849975586
    5. ' y' → logprob: -10.250661849975586
    6. '2' → logprob: -10.250661849975586
    7. ' ' → logprob: -10.625661849975586
    8. '``' → logprob: -11.375661849975586
    9. ')' → logprob: -11.750661849975586
    10. ' x' → logprob: -11.875661849975586

Token 275: ')/(' (ID: 60504)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008168928325176239
    2. ')*(' → logprob: -7.625816822052002
    3. ')*' → logprob: -8.12581729888916
    4. ')/(' → logprob: -11.12581729888916
    5. ' )' → logprob: -11.87581729888916
    6. ')
' → logprob: -12.37581729888916
    7. '*' → logprob: -12.87581729888916
    8. ')(' → logprob: -13.12581729888916
    9. '```' → logprob: -14.25081729888916
    10. ')/' → logprob: -14.87581729888916

Token 276: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5809503197669983
    2. 'x' → logprob: -0.8309503197669983
    3. ' (' → logprob: -5.7059502601623535
    4. ' x' → logprob: -6.4559502601623535
    5. ')x' → logprob: -9.955950736999512
    6. '(' → logprob: -10.955950736999512
    7. ')' → logprob: -11.080950736999512
    8. ')(' → logprob: -11.955950736999512
    9. ' ' → logprob: -12.455950736999512
    10. '   ' → logprob: -12.955950736999512

Token 277: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00019698418327607214
    2. ' ' → logprob: -9.125197410583496
    3. ' -' → logprob: -10.000197410583496
    4. '```' → logprob: -10.500197410583496
    5. '_' → logprob: -12.250197410583496
    6. '
' → logprob: -12.625197410583496
    7. ')' → logprob: -13.125197410583496
    8. '-' → logprob: -13.875197410583496
    9. '₂' → logprob: -13.875197410583496
    10. 'x' → logprob: -14.000197410583496

Token 278: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10021551698446274
    2. '-' → logprob: -2.350215435028076
    3. '-x' → logprob: -12.475215911865234
    4. 'x' → logprob: -12.850215911865234
    5. '```' → logprob: -14.475215911865234
    6. ' ' → logprob: -14.600215911865234
    7. '1' → logprob: -14.975215911865234
    8. ',' → logprob: -15.350215911865234
    9. '2' → logprob: -15.475215911865234
    10. ' -
' → logprob: -16.100215911865234

Token 279: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014164687134325504
    2. ' x' → logprob: -4.264164924621582
    3. ' ' → logprob: -14.514164924621582
    4. '```' → logprob: -15.514164924621582
    5. '	x' → logprob: -15.889164924621582
    6. 'wx' → logprob: -15.889164924621582
    7. ')x' → logprob: -16.014163970947266
    8. '(x' → logprob: -16.514163970947266
    9. '"x' → logprob: -17.264163970947266
    10. ',x' → logprob: -17.264163970947266

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0069673205725848675
    2. ')' → logprob: -6.256967544555664
    3. ' ' → logprob: -6.381967544555664
    4. 'x' → logprob: -6.506967544555664
    5. '2' → logprob: -6.881967544555664
    6. '```' → logprob: -7.631967544555664
    7. 'wx' → logprob: -9.006967544555664
    8. ' wx' → logprob: -9.631967544555664
    9. ' x' → logprob: -9.881967544555664
    10. ')x' → logprob: -10.131967544555664

Token 281: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046928023220971227
    2. ')*' → logprob: -8.250469207763672
    3. ')*(' → logprob: -8.750469207763672
    4. ' )' → logprob: -10.625469207763672
    5. ')
' → logprob: -11.250469207763672
    6. '*' → logprob: -11.875469207763672
    7. ')(' → logprob: -13.000469207763672
    8. ' *' → logprob: -14.125469207763672
    9. '*)' → logprob: -14.250469207763672
    10. '*(' → logprob: -14.625469207763672

Token 282: 'x' (ID: 87)
  Prédit: '(wx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(wx' → logprob: -0.15794000029563904
    2. 'wx' → logprob: -2.157939910888672
    3. ' wx' → logprob: -4.157939910888672
    4. ' (' → logprob: -4.532939910888672
    5. '(x' → logprob: -5.907939910888672
    6. 'x' → logprob: -7.157939910888672
    7. '(' → logprob: -8.532939910888672
    8. '(w' → logprob: -8.532939910888672
    9. ')' → logprob: -9.282939910888672
    10. '	wx' → logprob: -10.282939910888672

Token 283: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10661483556032181
    2. ' -' → logprob: -2.856614828109741
    3. '-' → logprob: -3.731614828109741
    4. '2' → logprob: -3.981614828109741
    5. ' ' → logprob: -7.48161506652832
    6. ')' → logprob: -8.98161506652832
    7. '_' → logprob: -9.35661506652832
    8. '```' → logprob: -9.35661506652832
    9. '<|end|>' → logprob: -9.73161506652832
    10. 'x' → logprob: -9.85661506652832

Token 284: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004085083492100239
    2. ' x' → logprob: -7.87540864944458
    3. 'wx' → logprob: -11.000408172607422
    4. ')' → logprob: -12.125408172607422
    5. ')x' → logprob: -12.250408172607422
    6. 'w' → logprob: -14.250408172607422
    7. ' wx' → logprob: -14.375408172607422
    8. '(x' → logprob: -16.000408172607422
    9. '	x' → logprob: -16.625408172607422
    10. ' ' → logprob: -17.000408172607422

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.500004768371582
    3. ')' → logprob: -13.875004768371582
    4. '_' → logprob: -15.375004768371582
    5. ',' → logprob: -16.6250057220459
    6. 'w' → logprob: -17.2500057220459
    7. '```' → logprob: -17.2500057220459
    8. '[' → logprob: -17.8750057220459
    9. '2' → logprob: -18.3750057220459
    10. '\xe2\x82' → logprob: -18.4375057220459

Token 286: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001972884638234973
    2. ')
' → logprob: -6.251972675323486
    3. ' )' → logprob: -10.751973152160645
    4. ')x' → logprob: -11.876973152160645
    5. ')

' → logprob: -12.126973152160645
    6. ')y' → logprob: -13.501973152160645
    7. ')`' → logprob: -13.626973152160645
    8. ')
' → logprob: -13.751973152160645
    9. '))' → logprob: -14.126973152160645
    10. ' ' → logprob: -14.251973152160645

Token 287: '           ' (ID: 352)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -1.2241932153701782
    2. '           ' → logprob: -1.5991932153701782
    3. ')' → logprob: -1.9741932153701782
    4. '\n' → logprob: -2.2241930961608887
    5. ' 
' → logprob: -3.2241930961608887
    6. '(y' → logprob: -3.2241930961608887
    7. ',' → logprob: -3.3491930961608887
    8. '   ' → logprob: -3.4741930961608887
    9. '
' → logprob: -3.7241930961608887
    10. '            
' → logprob: -4.224193096160889

Token 288: ' if' (ID: 538)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.13424454629421234
    2. 'y' → logprob: -2.759244441986084
    3. ' if' → logprob: -3.134244441986084
    4. '(y' → logprob: -5.009244441986084
    5. '           ' → logprob: -5.634244441986084
    6. ' (' → logprob: -5.759244441986084
    7. 'if' (adapté à ' if') → logprob: -6.884244441986084
    8. ' x' → logprob: -7.259244441986084
    9. ' 
' → logprob: -7.509244441986084
    10. ' return' → logprob: -7.509244441986084

Token 289: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.43742477893829346
    2. 'x' → logprob: -1.1874247789382935
    3. '(x' → logprob: -3.687424659729004
    4. ' (' → logprob: -3.812424659729004
    5. '(' → logprob: -7.187424659729004
    6. '   ' → logprob: -8.312424659729004
    7. ' wx' → logprob: -8.437424659729004
    8. ' ' → logprob: -8.687424659729004
    9. ' abs' → logprob: -8.812424659729004
    10. 'wx' → logprob: -8.812424659729004

Token 290: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08970475941896439
    2. '2' → logprob: -2.464704751968384
    3. '_' → logprob: -7.714704990386963
    4. ' ' → logprob: -8.839704513549805
    5. '```' → logprob: -8.964704513549805
    6. ' -' → logprob: -11.214704513549805
    7. '!=' → logprob: -12.027204513549805
    8. ' !=' → logprob: -12.714704513549805
    9. '-' → logprob: -13.027204513549805
    10. ' _' → logprob: -13.089704513549805

Token 291: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6649355292320251
    2. ' -' → logprob: -0.7899355292320251
    3. '-' → logprob: -4.03993558883667
    4. '!=' → logprob: -4.28993558883667
    5. ' ' → logprob: -8.164935111999512
    6. ' ==' → logprob: -8.914935111999512
    7. '==' → logprob: -11.164935111999512
    8. '   ' → logprob: -11.414935111999512
    9. '[' → logprob: -11.414935111999512
    10. ')' → logprob: -11.664935111999512

Token 292: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31326910853385925
    2. ' x' → logprob: -1.3132691383361816
    3. ' ' → logprob: -12.813268661499023
    4. '	x' → logprob: -12.813268661499023
    5. '0' → logprob: -14.563268661499023
    6. ')x' → logprob: -14.688268661499023
    7. '```' → logprob: -15.938268661499023
    8. 'wx' → logprob: -16.063268661499023
    9. '(x' → logprob: -16.188268661499023
    10. '   ' → logprob: -16.313268661499023

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00233818544074893
    2. '_' → logprob: -6.502338409423828
    3. ' ' → logprob: -7.877338409423828
    4. '2' → logprob: -7.877338409423828
    5. '```' → logprob: -10.252338409423828
    6. '-' → logprob: -11.127338409423828
    7. ' -' → logprob: -11.627338409423828
    8. '[' → logprob: -12.752338409423828
    9. ':' → logprob: -12.877338409423828
    10. '   ' → logprob: -13.627338409423828

Token 294: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.253313809633255
    2. ':
' → logprob: -1.5033137798309326
    3. ' :' → logprob: -7.503314018249512
    4. '               ' → logprob: -8.128314018249512
    5. ' :
' → logprob: -8.378314018249512
    6. '):
' → logprob: -9.253314018249512
    7. '):' → logprob: -9.878314018249512
    8. ' and' → logprob: -9.878314018249512
    9. '           ' → logprob: -10.128314018249512
    10. ':
' → logprob: -10.878314018249512

Token 295: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07216951251029968
    2. ' y' → logprob: -2.697169542312622
    3. 'y' → logprob: -7.322169303894043
    4. '                
' → logprob: -7.822169303894043
    5. '                ' → logprob: -8.197169303894043
    6. ' x' → logprob: -8.572169303894043
    7. ' =' → logprob: -9.697169303894043
    8. ' 
' → logprob: -9.697169303894043
    9. ',' → logprob: -9.947169303894043
    10. ' ' → logprob: -9.947169303894043

Token 296: ' cross' (ID: 8088)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.03135071322321892
    2. ' (' → logprob: -4.531350612640381
    3. '                   ' → logprob: -4.656350612640381
    4. 'y' → logprob: -5.656350612640381
    5. '                ' → logprob: -5.781350612640381
    6. '                    ' → logprob: -7.156350612640381
    7. ' ' → logprob: -7.156350612640381
    8. '(y' → logprob: -8.281351089477539
    9. ' 
' → logprob: -8.281351089477539
    10. ' ny' → logprob: -8.406351089477539

Token 297: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0004641544655896723
    2. 'y' → logprob: -7.875463962554932
    3. 'Y' → logprob: -9.50046443939209
    4. '_' → logprob: -12.00046443939209
    5. 'ing' → logprob: -13.25046443939209
    6. '_x' → logprob: -14.37546443939209
    7. '_point' → logprob: -15.25046443939209
    8. 'ed' → logprob: -16.125463485717773
    9. ' y' → logprob: -16.375463485717773
    10. '_pos' → logprob: -16.500463485717773

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196846812963486
    2. '=' → logprob: -2.8119685649871826
    3. ' ' → logprob: -15.061968803405762
    4. ' ' → logprob: -15.186968803405762
    5. ' =
' → logprob: -16.186967849731445
    6. ')' → logprob: -17.186967849731445
    7. '＝' → logprob: -17.436967849731445
    8. ' ==' → logprob: -17.436967849731445
    9. ',' → logprob: -17.561967849731445
    10. ' =(' → logprob: -17.686967849731445

Token 299: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3134472966194153
    2. ' y' → logprob: -1.3134472370147705
    3. '(y' → logprob: -8.688446998596191
    4. ' (' → logprob: -11.813446998596191
    5. '   ' → logprob: -12.438446998596191
    6. '((' → logprob: -12.688446998596191
    7. ' ' → logprob: -13.688446998596191
    8. ' ((' → logprob: -14.188446998596191
    9. '	y' → logprob: -14.938446998596191
    10. '(' → logprob: -15.688446998596191

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.750004768371582
    3. '2' → logprob: -14.625004768371582
    4. 'y' → logprob: -14.750004768371582
    5. '_' → logprob: -15.875004768371582
    6. ' y' → logprob: -16.125003814697266
    7. '(' → logprob: -16.250003814697266
    8. '```' → logprob: -16.750003814697266
    9. '[' → logprob: -17.437503814697266
    10. ',' → logprob: -17.812503814697266

Token 301: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759903192520142
    2. ' +' → logprob: -0.8259903192520142
    3. '+(' → logprob: -9.950990676879883
    4. '+
' → logprob: -14.075990676879883
    5. ' +(' → logprob: -14.200990676879883
    6. ' ' → logprob: -14.325990676879883
    7. ' ' → logprob: -14.950990676879883
    8. '+x' → logprob: -15.325990676879883
    9. ' +
' → logprob: -15.450990676879883
    10. '+y' → logprob: -16.450990676879883

Token 302: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.38713040947914124
    2. ' (' → logprob: -1.1371303796768188
    3. '(x' → logprob: -8.762130737304688
    4. '((' → logprob: -9.387130737304688
    5. ' ((' → logprob: -11.387130737304688
    6. '   ' → logprob: -12.887130737304688
    7. ' ' → logprob: -13.262130737304688
    8. '(py' → logprob: -13.762130737304688
    9. '(' → logprob: -14.637130737304688
    10. '  ' → logprob: -14.887130737304688

Token 303: 'y' (ID: 88)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.14285250008106232
    2. 'y' → logprob: -2.017852544784546
    3. ' (' → logprob: -8.892852783203125
    4. '(x' → logprob: -10.517852783203125
    5. '   ' → logprob: -12.267852783203125
    6. ' y' → logprob: -12.392852783203125
    7. 'x' → logprob: -13.517852783203125
    8. '(w' → logprob: -14.392852783203125
    9. '((' → logprob: -14.517852783203125
    10. '(' → logprob: -15.267852783203125

Token 304: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1398757123970427e-05
    2. '-' → logprob: -11.750011444091797
    3. ' -' → logprob: -13.375011444091797
    4. ' ' → logprob: -13.500011444091797
    5. '```' → logprob: -14.875011444091797
    6. '   ' → logprob: -17.125011444091797
    7. '₂' → logprob: -17.750011444091797
    8. '
' → logprob: -17.875011444091797
    9. '`' → logprob: -18.250011444091797
    10. '.' → logprob: -18.500011444091797

Token 305: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16022920608520508
    2. '-' → logprob: -1.910229206085205
    3. ' ' → logprob: -12.785228729248047
    4. ',' → logprob: -14.160228729248047
    5. '```' → logprob: -14.535228729248047
    6. '   ' → logprob: -15.285228729248047
    7. ')' → logprob: -15.660228729248047
    8. '  ' → logprob: -16.160228729248047
    9. '<|end|>' → logprob: -16.285228729248047
    10. ' -
' → logprob: -16.660228729248047

Token 306: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03804803267121315
    2. ' y' → logprob: -3.288048028945923
    3. '1' → logprob: -12.538047790527344
    4. '<|end|>' → logprob: -13.163047790527344
    5. '	y' → logprob: -14.538047790527344
    6. ' ' → logprob: -15.038047790527344
    7. '<|end|>' → logprob: -16.788047790527344
    8. ')y' → logprob: -17.288047790527344
    9. '(y' → logprob: -17.788047790527344
    10. 'yll' → logprob: -17.788047790527344

Token 307: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.250003814697266
    3. '```' → logprob: -13.875003814697266
    4. 'y' → logprob: -15.125003814697266
    5. '   ' → logprob: -15.500003814697266
    6. ' y' → logprob: -16.625003814697266
    7. ')' → logprob: -17.375003814697266
    8. '-' → logprob: -17.625003814697266
    9. ',' → logprob: -17.750003814697266
    10. '``' → logprob: -17.875003814697266

Token 308: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011784763046307489
    2. ')/(' → logprob: -10.000118255615234
    3. ')*' → logprob: -10.500118255615234
    4. ')*(' → logprob: -10.625118255615234
    5. ' )' → logprob: -11.000118255615234
    6. ')
' → logprob: -12.875118255615234
    7. ')/' → logprob: -14.000118255615234
    8. '   ' → logprob: -15.750118255615234
    9. ' ' → logprob: -16.250118255615234
    10. '*' → logprob: -16.875118255615234

Token 309: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1344374716281891
    2. ' *' → logprob: -2.1344375610351562
    3. '/' → logprob: -5.509437561035156
    4. '*(' → logprob: -6.259437561035156
    5. ')' → logprob: -7.509437561035156
    6. '   ' → logprob: -7.634437561035156
    7. ' /' → logprob: -8.384437561035156
    8. ' ' → logprob: -8.759437561035156
    9. '```' → logprob: -10.509437561035156
    10. '/(' → logprob: -11.134437561035156

Token 310: ' (' (ID: 350)
  Prédit: '(wx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(wx' → logprob: -0.004939612466841936
    2. ' (' → logprob: -5.754939556121826
    3. '(w' → logprob: -6.379939556121826
    4. '(W' → logprob: -10.129940032958984
    5. '(' → logprob: -12.004940032958984
    6. '((' → logprob: -12.379940032958984
    7. '
' → logprob: -12.629940032958984
    8. '   ' → logprob: -12.754940032958984
    9. '(ws' → logprob: -13.254940032958984
    10. '(x' → logprob: -13.379940032958984

Token 311: 'wx' (ID: 43176)
  Prédit: '(wx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(wx' → logprob: -0.00023631771910004318
    2. ' (' → logprob: -9.125236511230469
    3. 'wx' → logprob: -9.250236511230469
    4. '(w' → logprob: -10.875236511230469
    5. ' wx' → logprob: -12.375236511230469
    6. '   ' → logprob: -13.000236511230469
    7. '	wx' → logprob: -13.250236511230469
    8. '(ws' → logprob: -13.750236511230469
    9. '(W' → logprob: -14.875236511230469
    10. '.wx' → logprob: -14.875236511230469

Token 312: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023253168910741806
    2. '-' → logprob: -3.7732532024383545
    3. ' ' → logprob: -12.023253440856934
    4. '-x' → logprob: -14.023253440856934
    5. 'x' → logprob: -15.398253440856934
    6. ')' → logprob: -15.523253440856934
    7. ' -
' → logprob: -16.273252487182617
    8. ',' → logprob: -16.648252487182617
    9. '-
' → logprob: -17.148252487182617
    10. '```' → logprob: -17.148252487182617

Token 313: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10020667314529419
    2. ' x' → logprob: -2.3502066135406494
    3. ')x' → logprob: -16.47520637512207
    4. '	x' → logprob: -18.60020637512207
    5. '(x' → logprob: -19.97520637512207
    6. ')' → logprob: -20.47520637512207
    7. ' ' → logprob: -21.10020637512207
    8. '$x' → logprob: -22.35020637512207
    9. ',x' → logprob: -22.47520637512207
    10. '   ' → logprob: -23.10020637512207

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ')' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.125001907348633
    4. 'x' → logprob: -16.750001907348633
    5. '[' → logprob: -17.125001907348633
    6. '<|end|>' → logprob: -17.750001907348633
    7. '_' → logprob: -18.125001907348633
    8. ')x' → logprob: -18.750001907348633
    9. '```' → logprob: -18.750001907348633
    10. ',' → logprob: -19.187501907348633

Token 315: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5928495486150496e-05
    2. ' )' → logprob: -11.750016212463379
    3. ')/(' → logprob: -12.000016212463379
    4. ')/' → logprob: -14.250016212463379
    5. ')
' → logprob: -14.375016212463379
    6. ')//' → logprob: -14.625016212463379
    7. ')

' → logprob: -18.750015258789062
    8. ')`' → logprob: -18.875015258789062
    9. '```' → logprob: -19.125015258789062
    10. '）' → logprob: -19.250015258789062

Token 316: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.174032524228096
    2. ' /' → logprob: -1.9240325689315796
    3. ')' → logprob: -4.674032688140869
    4. '/(' → logprob: -5.549032688140869
    5. '//' → logprob: -8.424032211303711
    6. '/
' → logprob: -9.049032211303711
    7. ' //' → logprob: -10.174032211303711
    8. ')/(' → logprob: -10.674032211303711
    9. '               ' → logprob: -11.549032211303711
    10. ' /(' → logprob: -11.674032211303711

Token 317: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12693576514720917
    2. ' (' → logprob: -2.1269357204437256
    3. '(' → logprob: -11.876935958862305
    4. '   ' → logprob: -14.626935958862305
    5. ' ' → logprob: -16.126935958862305
    6. '
' → logprob: -16.876935958862305
    7. '```' → logprob: -17.251935958862305
    8. 'float' → logprob: -17.501935958862305
    9. '(float' → logprob: -17.501935958862305
    10. '  ' → logprob: -18.001935958862305

Token 318: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.023311400786042213
    2. 'x' → logprob: -4.023311614990234
    3. ' (' → logprob: -5.273311614990234
    4. ' x' → logprob: -11.523311614990234
    5. '(' → logprob: -11.648311614990234
    6. '   ' → logprob: -13.398311614990234
    7. ' ' → logprob: -14.398311614990234
    8. 'float' → logprob: -15.523311614990234
    9. ')' → logprob: -15.898311614990234
    10. '
' → logprob: -15.898311614990234

Token 319: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006931356037966907
    2. 'x' → logprob: -7.625693321228027
    3. '-' → logprob: -9.375693321228027
    4. ' -' → logprob: -9.375693321228027
    5. '1' → logprob: -11.500693321228027
    6. '```' → logprob: -11.500693321228027
    7. '[' → logprob: -12.250693321228027
    8. ' ' → logprob: -12.625693321228027
    9. '(' → logprob: -12.750693321228027
    10. ')' → logprob: -13.750693321228027

Token 320: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759702920913696
    2. ' -' → logprob: -0.8259702920913696
    3. '-x' → logprob: -10.575970649719238
    4. '-
' → logprob: -12.950970649719238
    5. ' -
' → logprob: -13.825970649719238
    6. ' ' → logprob: -14.700970649719238
    7. 'x' → logprob: -14.825970649719238
    8. ')' → logprob: -15.325970649719238
    9. '−' → logprob: -15.575970649719238
    10. '<|end|>' → logprob: -15.575970649719238

Token 321: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029765760526061058
    2. ' x' → logprob: -3.5297658443450928
    3. '1' → logprob: -11.279766082763672
    4. ')x' → logprob: -13.779766082763672
    5. '	x' → logprob: -14.779766082763672
    6. ' ' → logprob: -14.904766082763672
    7. ')' → logprob: -15.029766082763672
    8. '<|end|>' → logprob: -16.154766082763672
    9. '"x' → logprob: -16.279766082763672
    10. '(x' → logprob: -16.404766082763672

Token 322: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2617008400848135e-05
    2. 'x' → logprob: -10.375032424926758
    3. ')' → logprob: -14.125032424926758
    4. ' ' → logprob: -15.250032424926758
    5. '```' → logprob: -15.875032424926758
    6. 'px' → logprob: -16.375032424926758
    7. ' x' → logprob: -16.750032424926758
    8. 'wx' → logprob: -16.750032424926758
    9. '   ' → logprob: -17.500032424926758
    10. '[' → logprob: -17.750032424926758

Token 323: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017159932758659124
    2. ')
' → logprob: -6.376716136932373
    3. ' )' → logprob: -12.001715660095215
    4. ')
' → logprob: -12.001715660095215
    5. ')

' → logprob: -14.126715660095215
    6. ')`' → logprob: -16.25171661376953
    7. '   ' → logprob: -16.37671661376953
    8. ' )
' → logprob: -16.50171661376953
    9. '))' → logprob: -16.50171661376953
    10. '       ' → logprob: -16.62671661376953

Token 324: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023203426972031593
    2. '<|end|>' → logprob: -4.273203372955322
    3. '
' → logprob: -5.773203372955322
    4. ' and' → logprob: -5.898203372955322
    5. '                
' → logprob: -6.898203372955322
    6. '           ' → logprob: -8.02320384979248
    7. '  
' → logprob: -8.27320384979248
    8. ' 
' → logprob: -8.27320384979248
    9. '<|end|>' → logprob: -8.39820384979248
    10. '                ' → logprob: -8.64820384979248

Token 325: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.030054768547415733
    2. '               ' → logprob: -3.780054807662964
    3. 'if' (adapté à ' if') → logprob: -5.030054569244385
    4. ' return' → logprob: -8.405055046081543
    5. 'return' → logprob: -11.655055046081543
    6. ' ' → logprob: -12.530055046081543
    7. '                ' → logprob: -13.030055046081543
    8. ' ' → logprob: -13.155055046081543
    9. ' for' → logprob: -13.405055046081543
    10. '                
' → logprob: -13.655055046081543

Token 326: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.11290919035673141
    2. ' min' → logprob: -2.2379090785980225
    3. 'cross' → logprob: -10.237909317016602
    4. ' cross' → logprob: -10.487909317016602
    5. '(min' → logprob: -11.112909317016602
    6. '	min' → logprob: -12.487909317016602
    7. '   ' → logprob: -13.112909317016602
    8. ' ' → logprob: -13.737909317016602
    9. '_min' → logprob: -15.237909317016602
    10. '[min' → logprob: -15.237909317016602

Token 327: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.60414821645827e-06
    2. '(min' → logprob: -12.500004768371582
    3. 'min' → logprob: -15.375004768371582
    4. 'x' → logprob: -15.500004768371582
    5. 'py' → logprob: -16.375003814697266
    6. '(y' → logprob: -16.500003814697266
    7. ' y' → logprob: -16.750003814697266
    8. '_y' → logprob: -16.750003814697266
    9. '<=' → logprob: -17.000003814697266
    10. ' <=' → logprob: -17.500003814697266

Token 328: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0232466422021389
    2. '<=' → logprob: -3.7732465267181396
    3. ')<=' → logprob: -14.398246765136719
    4. ' ' → logprob: -15.398246765136719
    5. ' ≤' → logprob: -15.773246765136719
    6. ']<=' → logprob: -16.27324676513672
    7. '...' → logprob: -16.77324676513672
    8. ' <' → logprob: -16.77324676513672
    9. '<|end|>' → logprob: -16.77324676513672
    10. ')' → logprob: -17.27324676513672

Token 329: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.49653249979019165
    2. '=' → logprob: -0.9965324997901917
    3. ' cross' → logprob: -3.871532440185547
    4. '=c' → logprob: -6.621532440185547
    5. ' =' → logprob: -11.246532440185547
    6. '=cut' → logprob: -11.496532440185547
    7. 'c' → logprob: -11.746532440185547
    8. '+=' → logprob: -12.871532440185547
    9. '=
' → logprob: -13.371532440185547
    10. '+' → logprob: -13.371532440185547

Token 330: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.05501091480255127
    2. 'y' → logprob: -2.9300107955932617
    3. 'cross' → logprob: -9.805010795593262
    4. '=' → logprob: -10.305010795593262
    5. '_' → logprob: -11.180010795593262
    6. '<=' → logprob: -11.555010795593262
    7. ' y' → logprob: -12.555010795593262
    8. '\' → logprob: -13.430010795593262
    9. ' _' → logprob: -13.555010795593262
    10. 'or' → logprob: -13.930010795593262

Token 331: ' <' (ID: 464)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25707125663757324
    2. '<' → logprob: -2.5070712566375732
    3. 'and' → logprob: -2.6320712566375732
    4. ' <' → logprob: -2.6320712566375732
    5. ' <=' → logprob: -7.882071495056152
    6. ' or' → logprob: -8.507071495056152
    7. '>' → logprob: -8.507071495056152
    8. '<=' → logprob: -8.757071495056152
    9. ' ' → logprob: -8.882071495056152
    10. '<|end|>' → logprob: -9.507071495056152

Token 332: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.09690705686807632
    2. '=' → logprob: -2.846907138824463
    3. ' max' → logprob: -3.471907138824463
    4. '=max' → logprob: -5.721907138824463
    5. ' ' → logprob: -13.346906661987305
    6. ' =' → logprob: -13.596906661987305
    7. '(max' → logprob: -14.221906661987305
    8. '	max' → logprob: -15.096906661987305
    9. '_max' → logprob: -15.221906661987305
    10. '=
' → logprob: -15.221906661987305

Token 333: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.0280383548888494e-06
    2. '_y' → logprob: -14.125000953674316
    3. ' y' → logprob: -16.500001907348633
    4. 'x' → logprob: -16.750001907348633
    5. '=' → logprob: -17.750001907348633
    6. '(y' → logprob: -17.875001907348633
    7. '	y' → logprob: -18.750001907348633
    8. 'y's' → logprob: -19.000001907348633
    9. '=y' → logprob: -19.125001907348633
    10. '```' → logprob: -19.250001907348633

Token 334: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03362471982836723
    2. ':
' → logprob: -3.5336246490478516
    3. '):' → logprob: -6.908624649047852
    4. '                   ' → logprob: -7.033624649047852
    5. '               ' → logprob: -7.283624649047852
    6. '           ' → logprob: -7.658624649047852
    7. ':return' → logprob: -8.283624649047852
    8. ' :' → logprob: -8.533624649047852
    9. '):
' → logprob: -9.408624649047852
    10. ' and' → logprob: -9.408624649047852

Token 335: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00014013137842994183
    2. ' return' → logprob: -9.625140190124512
    3. '                       ' → logprob: -10.125140190124512
    4. '           ' → logprob: -11.250140190124512
    5. '               ' → logprob: -12.000140190124512
    6. '                    ' → logprob: -12.750140190124512
    7. '                    
' → logprob: -13.000140190124512
    8. 'return' → logprob: -13.125140190124512
    9. '                  ' → logprob: -13.250140190124512
    10. '
' → logprob: -13.875140190124512

Token 336: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4825631380081177
    2. ' return' → logprob: -0.9825631380081177
    3. '                       ' → logprob: -5.357563018798828
    4. '                   ' → logprob: -5.607563018798828
    5. '       ' → logprob: -10.607563018798828
    6. '   ' → logprob: -10.607563018798828
    7. '               ' → logprob: -11.607563018798828
    8. '           ' → logprob: -12.607563018798828
    9. '	return' → logprob: -12.732563018798828
    10. '
' → logprob: -14.357563018798828

Token 337: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.4740770161151886
    2. ' True' → logprob: -0.9740769863128662
    3. '(True' → logprob: -18.224077224731445
    4. 'False' → logprob: -18.349077224731445
    5. '=True' → logprob: -21.099077224731445
    6. 'true' → logprob: -22.224077224731445
    7. ' ' → logprob: -22.599077224731445
    8. ' False' → logprob: -22.724077224731445
    9. '   ' → logprob: -23.224077224731445
    10. '1' → logprob: -23.224077224731445

Token 338: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4618959128856659
    2. '       ' → logprob: -1.5868959426879883
    3. '	return' → logprob: -2.8368959426879883
    4. ' return' → logprob: -3.5868959426879883
    5. '<|end|>' → logprob: -4.336895942687988
    6. 'return' → logprob: -4.461895942687988
    7. '    
' → logprob: -4.586895942687988
    8. ' ' → logprob: -5.086895942687988
    9. '           ' → logprob: -5.211895942687988
    10. '
' → logprob: -5.336895942687988

Token 339: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18658781051635742
    2. '   ' → logprob: -2.0615878105163574
    3. '           ' → logprob: -3.6865878105163574
    4. '	return' → logprob: -5.186587810516357
    5. '               ' → logprob: -5.311587810516357
    6. ' return' → logprob: -6.561587810516357
    7. '
' → logprob: -6.936587810516357
    8. 'return' → logprob: -6.936587810516357
    9. '\n' → logprob: -7.311587810516357
    10. '    
' → logprob: -7.561587810516357

Token 340: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000969583576079458
    2. 'return' → logprob: -7.500969409942627
    3. ' return' → logprob: -8.000969886779785
    4. ' else' → logprob: -10.500969886779785
    5. 'else' (adapté à ' else') → logprob: -10.750969886779785
    6. ')' → logprob: -11.125969886779785
    7. '       ' → logprob: -12.250969886779785
    8. 'elif' → logprob: -12.750969886779785
    9. ' elif' → logprob: -12.875969886779785
    10. ' ' → logprob: -13.500969886779785

Token 341: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09294461458921432
    2. ' :' → logprob: -2.717944622039795
    3. ':
' → logprob: -4.467944622039795
    4. '       ' → logprob: -5.342944622039795
    5. ' :
' → logprob: -6.092944622039795
    6. '    ' → logprob: -6.217944622039795
    7. '   ' → logprob: -6.592944622039795
    8. ' if' → logprob: -7.967944622039795
    9. '        ' → logprob: -8.717944145202637
    10. '{' → logprob: -9.467944145202637

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010671655647456646
    2. 'qy' → logprob: -5.510671615600586
    3. 'wy' → logprob: -6.010671615600586
    4. '   ' → logprob: -6.635671615600586
    5. ' wy' → logprob: -6.760671615600586
    6. '#' → logprob: -7.010671615600586
    7. 'wx' → logprob: -8.385671615600586
    8. '        ' → logprob: -9.135671615600586
    9. ' #' → logprob: -9.260671615600586
    10. 'qx' → logprob: -9.260671615600586

Token 343: ' #' (ID: 1069)
  Prédit: 'wy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wy' → logprob: -0.021001698449254036
    2. 'wx' → logprob: -4.021001815795898
    3. 'qy' → logprob: -6.271001815795898
    4. ' wy' → logprob: -7.396001815795898
    5. '#' (adapté à ' #') → logprob: -8.396001815795898
    6. 'qx' → logprob: -10.146001815795898
    7. '       ' → logprob: -10.521001815795898
    8. '   ' → logprob: -10.646001815795898
    9. 'w' → logprob: -11.896001815795898
    10. ' wx' → logprob: -12.021001815795898

Token 344: ' Wall' (ID: 14606)
  Prédit: 'wy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wy' → logprob: -0.15999802947044373
    2. 'qy' → logprob: -2.0349979400634766
    3. '#' → logprob: -4.409997940063477
    4. 'wx' → logprob: -5.534997940063477
    5. 'qx' → logprob: -7.409997940063477
    6. 'w' → logprob: -9.284997940063477
    7. 'q' → logprob: -9.284997940063477
    8. 'hy' → logprob: -9.659997940063477
    9. ' wy' → logprob: -9.784997940063477
    10. 'qw' → logprob: -9.909997940063477

Token 345: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.15531283617019653
    2. 'is' → logprob: -2.0303127765655518
    3. ':' → logprob: -5.780313014984131
    4. 'y' → logprob: -6.155313014984131
    5. '=' → logprob: -6.280313014984131
    6. 's' → logprob: -7.030313014984131
    7. 'x' → logprob: -7.155313014984131
    8. ' y' → logprob: -7.530313014984131
    9. '   ' → logprob: -7.655313014984131
    10. '#' → logprob: -7.905313014984131

Token 346: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.5760005116462708
    2. ' horizontal' → logprob: -0.8260005116462708
    3. '_horizontal' → logprob: -10.826000213623047
    4. '(horizontal' → logprob: -11.326000213623047
    5. 'Horizontal' → logprob: -11.951000213623047
    6. '.horizontal' → logprob: -12.201000213623047
    7. 'py' → logprob: -12.326000213623047
    8. ' horiz' → logprob: -12.701000213623047
    9. ' горизонт' → logprob: -12.951000213623047
    10. '-horizontal' → logprob: -13.451000213623047

Token 347: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49607041478157043
    2. ' wy' → logprob: -1.371070384979248
    3. 'wy' → logprob: -2.121070384979248
    4. 'qy' → logprob: -4.621070384979248
    5. '        ' → logprob: -5.871070384979248
    6. ' hy' → logprob: -6.621070384979248
    7. '   ' → logprob: -7.371070384979248
    8. '        
' → logprob: -7.496070384979248
    9. ' ' → logprob: -7.746070384979248
    10. 'hy' → logprob: -8.246070861816406

Token 348: '       ' (ID: 309)
  Prédit: 'wy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wy' → logprob: -0.2711389660835266
    2. '       ' → logprob: -1.5211389064788818
    3. ' wy' → logprob: -4.021139144897461
    4. 'hy' → logprob: -7.146139144897461
    5. 'qy' → logprob: -9.271139144897461
    6. '   ' → logprob: -9.521139144897461
    7. '        ' → logprob: -10.021139144897461
    8. ' hy' → logprob: -10.896139144897461
    9. 'wx' → logprob: -11.021139144897461
    10. 'w' → logprob: -11.271139144897461

Token 349: ' wy' (ID: 14962)
  Prédit: 'wy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wy' (adapté à ' wy') → logprob: -0.0017922745319083333
    2. ' wy' → logprob: -6.8767924308776855
    3. 'qy' → logprob: -7.6267924308776855
    4. 'hy' → logprob: -8.251791954040527
    5. '   ' → logprob: -12.626791954040527
    6. 'w' → logprob: -13.126791954040527
    7. '       ' → logprob: -13.251791954040527
    8. 'wx' → logprob: -13.626791954040527
    9. '```' → logprob: -14.126791954040527
    10. 'wh' → logprob: -14.876791954040527

Token 350: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245595395565033
    2. ' =' → logprob: -3.7732455730438232
    3. ',' → logprob: -16.523244857788086
    4. '=

' → logprob: -19.023244857788086
    5. ' ' → logprob: -19.398244857788086
    6. '=
' → logprob: -19.523244857788086
    7. '=y' → logprob: -19.773244857788086
    8. '＝' → logprob: -19.773244857788086
    9. 'y' → logprob: -20.273244857788086
    10. ' ' → logprob: -20.523244857788086

Token 351: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0005536287208087742
    2. ' py' → logprob: -7.500553607940674
    3. '(py' → logprob: -14.750554084777832
    4. '_py' → logprob: -16.500553131103516
    5. 'px' → logprob: -17.125553131103516
    6. 'p' → logprob: -17.625553131103516
    7. 'Py' → logprob: -18.000553131103516
    8. 'ply' → logprob: -18.375553131103516
    9. 'pty' → logprob: -19.375553131103516
    10. ' ' → logprob: -19.625553131103516

Token 352: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05775902420282364
    2. '       ' → logprob: -3.1827590465545654
    3. 'if' → logprob: -4.557758808135986
    4. ' if' → logprob: -5.932758808135986
    5. '
' → logprob: -7.307758808135986
    6. '        
' → logprob: -8.182759284973145
    7. '        ' → logprob: -8.932759284973145
    8. '  
' → logprob: -9.057759284973145
    9. 'w' → logprob: -9.307759284973145
    10. ' 
' → logprob: -9.807759284973145

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6970592141151428
    2. 'if' → logprob: -0.6970592141151428
    3. ' if' → logprob: -5.572059154510498
    4. '   ' → logprob: -9.822059631347656
    5. '```' → logprob: -10.572059631347656
    6. '#' → logprob: -11.447059631347656
    7. '
' → logprob: -12.322059631347656
    8. ' ' → logprob: -12.947059631347656
    9. '           ' → logprob: -13.197059631347656
    10. '     ' → logprob: -14.572059631347656

Token 354: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007289938512258232
    2. '#' (adapté à ' #') → logprob: -7.750729084014893
    3. '       ' → logprob: -8.250728607177734
    4. ' if' → logprob: -10.375728607177734
    5. '   ' → logprob: -12.125728607177734
    6. '
' → logprob: -15.125728607177734
    7. '```' → logprob: -15.250728607177734
    8. ' #' → logprob: -16.625728607177734
    9. '           ' → logprob: -17.250728607177734
    10. ' ' → logprob: -17.375728607177734

Token 355: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0039855544455349445
    2. '#' → logprob: -5.753985404968262
    3. ' if' → logprob: -7.253985404968262
    4. '       ' → logprob: -9.753985404968262
    5. 'Check' → logprob: -10.753985404968262
    6. 'If' → logprob: -11.253985404968262
    7. '   ' → logprob: -13.128985404968262
    8. ' #' → logprob: -13.253985404968262
    9. 'The' → logprob: -13.628985404968262
    10. 'return' → logprob: -14.128985404968262

Token 356: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25192973017692566
    2. 'if' → logprob: -1.501929759979248
    3. ' ' → logprob: -15.50192928314209
    4. ' (' → logprob: -15.87692928314209
    5. '(x' → logprob: -16.376930236816406
    6. '   ' → logprob: -16.376930236816406
    7. 'If' → logprob: -17.376930236816406
    8. '```' → logprob: -17.876930236816406
    9. '(if' → logprob: -18.126930236816406
    10. ' ' → logprob: -18.251930236816406

Token 357: ' the' (ID: 290)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.25351735949516296
    2. ' (' → logprob: -1.5035173892974854
    3. '(s' → logprob: -7.128517150878906
    4. '(x' → logprob: -8.003517150878906
    5. '(py' → logprob: -8.378517150878906
    6. '(' → logprob: -9.003517150878906
    7. '(w' → logprob: -9.878517150878906
    8. '   ' → logprob: -11.378517150878906
    9. ' ' → logprob: -11.503517150878906
    10. '(min' → logprob: -12.003517150878906

Token 358: ' segment' (ID: 14806)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0014428533613681793
    2. '(x' → logprob: -7.501442909240723
    3. '(s' → logprob: -7.876442909240723
    4. '(q' → logprob: -8.376442909240723
    5. ' (' → logprob: -8.876442909240723
    6. '(' → logprob: -9.751442909240723
    7. '(w' → logprob: -9.751442909240723
    8. 'y' → logprob: -11.876442909240723
    9. '(py' → logprob: -11.876442909240723
    10. '   ' → logprob: -13.376442909240723

Token 359: ' crosses' (ID: 95853)
  Prédit: ' crosses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crosses' → logprob: -0.17873398959636688
    2. '(x' → logprob: -2.053734064102173
    3. ' (' → logprob: -3.928734064102173
    4. 'cross' → logprob: -4.678733825683594
    5. '(y' → logprob: -5.303733825683594
    6. '(' → logprob: -7.803733825683594
    7. 'y' → logprob: -8.428733825683594
    8. '#' → logprob: -8.803733825683594
    9. ' ' → logprob: -9.178733825683594
    10. 'x' → logprob: -9.428733825683594

Token 360: ' the' (ID: 290)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0553874671459198
    2. '(w' → logprob: -3.055387496948242
    3. '(' → logprob: -5.555387496948242
    4. ' (' → logprob: -6.430387496948242
    5. 'the' → logprob: -7.180387496948242
    6. ' the' → logprob: -8.055387496948242
    7. 'wy' → logprob: -9.555387496948242
    8. '(py' → logprob: -9.930387496948242
    9. '(q' → logprob: -10.180387496948242
    10. '(wx' → logprob: -10.680387496948242

Token 361: ' horizontal' (ID: 25511)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008838393725454807
    2. 'wy' → logprob: -5.258838176727295
    3. '(y' → logprob: -6.008838176727295
    4. 'wall' → logprob: -7.008838176727295
    5. ' y' → logprob: -9.008838653564453
    6. 'horizontal' → logprob: -10.133838653564453
    7. 'w' → logprob: -10.383838653564453
    8. '(w' → logprob: -11.258838653564453
    9. 'qy' → logprob: -11.508838653564453
    10. 'py' → logprob: -12.008838653564453

Token 362: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.018637048080563545
    2. ' line' → logprob: -4.018637180328369
    3. 'wall' → logprob: -8.018636703491211
    4. 'wy' → logprob: -9.393636703491211
    5. 'ly' → logprob: -9.643636703491211
    6. 'y' → logprob: -12.518636703491211
    7. ' wall' → logprob: -13.018636703491211
    8. 'ay' → logprob: -14.018636703491211
    9. '_line' → logprob: -14.143636703491211
    10. '#line' → logprob: -15.268636703491211

Token 363: ' wy' (ID: 14962)
  Prédit: 'wy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wy' → logprob: -0.6175417900085449
    2. 'if' → logprob: -1.367541790008545
    3. ' wy' → logprob: -2.492541790008545
    4. ' if' → logprob: -2.492541790008545
    5. '(y' → logprob: -3.992541790008545
    6. '(w' → logprob: -4.742541790008545
    7. ' (' → logprob: -5.242541790008545
    8. '       ' → logprob: -5.617541790008545
    9. '   ' → logprob: -5.992541790008545
    10. '(py' → logprob: -7.492541790008545

Token 364: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004541438538581133
    2. ' if' → logprob: -6.004541397094727
    3. 'if' → logprob: -6.254541397094727
    4. ' (' → logprob: -10.129541397094727
    5. '(x' → logprob: -10.379541397094727
    6. '(' → logprob: -10.504541397094727
    7. '```' → logprob: -11.379541397094727
    8. '           ' → logprob: -11.754541397094727
    9. '   ' → logprob: -12.004541397094727
    10. '=' → logprob: -12.254541397094727

Token 365: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20524722337722778
    2. '       ' → logprob: -1.705247163772583
    3. ' if' → logprob: -5.580247402191162
    4. '```' → logprob: -10.080246925354004
    5. '   ' → logprob: -11.455246925354004
    6. 'If' → logprob: -14.205246925354004
    7. '#' → logprob: -14.455246925354004
    8. ' ' → logprob: -15.455246925354004
    9. '           ' → logprob: -15.705246925354004
    10. '(' → logprob: -15.955246925354004

Token 366: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00594065198674798
    2. ' if' → logprob: -5.2559404373168945
    3. '       ' → logprob: -7.2559404373168945
    4. '   ' → logprob: -14.880940437316895
    5. '```' → logprob: -16.25594139099121
    6. 'If' → logprob: -16.75594139099121
    7. '        ' → logprob: -17.50594139099121
    8. '#' → logprob: -17.63094139099121
    9. ' ' → logprob: -17.63094139099121
    10. '           ' → logprob: -18.25594139099121

Token 367: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.20923952758312225
    2. ' (' → logprob: -1.7092394828796387
    3. '(s' → logprob: -5.209239482879639
    4. '(' → logprob: -6.334239482879639
    5. '(py' → logprob: -7.584239482879639
    6. '(x' → logprob: -11.084239959716797
    7. '(min' → logprob: -11.709239959716797
    8. '   ' → logprob: -12.084239959716797
    9. ' ' → logprob: -12.209239959716797
    10. '(q' → logprob: -12.959239959716797

Token 368: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00014013137842994183
    2. '(y' → logprob: -8.875140190124512
    3. ' y' → logprob: -15.250140190124512
    4. '   ' → logprob: -18.250139236450195
    5. ' (' → logprob: -18.750139236450195
    6. '	y' → logprob: -19.250139236450195
    7. 'py' → logprob: -19.250139236450195
    8. '
' → logprob: -19.375139236450195
    9. ''y' → logprob: -19.625139236450195
    10. 'y's' → logprob: -19.625139236450195

Token 369: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. ' -' → logprob: -16.125001907348633
    4. '-' → logprob: -16.875001907348633
    5. '2' → logprob: -17.625001907348633
    6. 'py' → logprob: -17.875001907348633
    7. '```' → logprob: -18.250001907348633
    8. '
' → logprob: -18.875001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '[' → logprob: -19.625001907348633

Token 370: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.048589076846838
    2. '-' → logprob: -3.048588991165161
    3. ' ' → logprob: -13.298588752746582
    4. ' ' → logprob: -17.1735897064209
    5. ' -
' → logprob: -17.5485897064209
    6. '-
' → logprob: -18.6735897064209
    7. 'py' → logprob: -18.7985897064209
    8. 'wy' → logprob: -18.9235897064209
    9. ' py' → logprob: -19.2985897064209
    10. '   ' → logprob: -19.2985897064209

Token 371: ' wy' (ID: 14962)
  Prédit: 'wy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wy' → logprob: -0.0009117019944824278
    2. ' wy' → logprob: -7.000911712646484
    3. 'Wy' → logprob: -16.375911712646484
    4. ' ' → logprob: -18.000911712646484
    5. ' ' → logprob: -18.125911712646484
    6. 'wx' → logprob: -18.250911712646484
    7. 'wyl' → logprob: -18.625911712646484
    8. '       ' → logprob: -18.875911712646484
    9. 'w' → logprob: -18.875911712646484
    10. '   ' → logprob: -19.250911712646484

Token 372: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.868328920158092e-05
    2. ')*' → logprob: -11.125028610229492
    3. ' )' → logprob: -11.750028610229492
    4. ')*(' → logprob: -12.125028610229492
    5. '*' → logprob: -15.250028610229492
    6. ')(' → logprob: -15.375028610229492
    7. '   ' → logprob: -17.250028610229492
    8. ')
' → logprob: -17.750028610229492
    9. '>' → logprob: -18.125028610229492
    10. '*)' → logprob: -18.750028610229492

Token 373: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.011768757365643978
    2. ' *' → logprob: -4.511768817901611
    3. ')' → logprob: -7.386768817901611
    4. '*(' → logprob: -9.761768341064453
    5. '(' → logprob: -11.011768341064453
    6. ')*' → logprob: -11.261768341064453
    7. '   ' → logprob: -12.011768341064453
    8. ' (' → logprob: -12.636768341064453
    9. ')*(' → logprob: -13.136768341064453
    10. ' ' → logprob: -14.261768341064453

Token 374: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.008666571229696274
    2. ' (' → logprob: -4.758666515350342
    3. '(' → logprob: -9.8836669921875
    4. '(x' → logprob: -15.0086669921875
    5. '   ' → logprob: -15.2586669921875
    6. ' y' → logprob: -15.8836669921875
    7. ' ' → logprob: -17.1336669921875
    8. '       ' → logprob: -17.3836669921875
    9. '(w' → logprob: -17.8836669921875
    10. '    ' → logprob: -18.0086669921875

Token 375: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20160415768623352
    2. '(y' → logprob: -1.7016041278839111
    3. ' y' → logprob: -9.201603889465332
    4. ' (' → logprob: -10.576603889465332
    5. '   ' → logprob: -10.826603889465332
    6. ')' → logprob: -11.576603889465332
    7. '(' → logprob: -11.576603889465332
    8. '
' → logprob: -12.326603889465332
    9. '	y' → logprob: -12.701603889465332
    10. ')y' → logprob: -13.076603889465332

Token 376: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5690089639974758e-05
    2. 'y' → logprob: -11.625015258789062
    3. 'qy' → logprob: -13.000015258789062
    4. ' ' → logprob: -13.625015258789062
    5. 'wy' → logprob: -13.875015258789062
    6. '   ' → logprob: -14.375015258789062
    7. 'py' → logprob: -15.000015258789062
    8. '1' → logprob: -15.625015258789062
    9. '
' → logprob: -15.625015258789062
    10. ')' → logprob: -15.625015258789062

Token 377: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2831907868385315
    2. '-' → logprob: -1.4081907272338867
    3. ')' → logprob: -6.283190727233887
    4. ' ' → logprob: -9.283190727233887
    5. ' )' → logprob: -11.033190727233887
    6. '<' → logprob: -11.283190727233887
    7. '-)' → logprob: -11.533190727233887
    8. ' <' → logprob: -11.783190727233887
    9. '[' → logprob: -12.033190727233887
    10. ')<' → logprob: -12.283190727233887

Token 378: ' wy' (ID: 14962)
  Prédit: 'wy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wy' → logprob: -1.7835754988482222e-05
    2. ' wy' → logprob: -11.500018119812012
    3. 'w' → logprob: -12.875018119812012
    4. '0' → logprob: -13.750018119812012
    5. 'wx' → logprob: -13.875018119812012
    6. ' ' → logprob: -14.375018119812012
    7. '   ' → logprob: -14.875018119812012
    8. ')' → logprob: -15.000018119812012
    9. 'yw' → logprob: -15.125018119812012
    10. '1' → logprob: -15.250018119812012

Token 379: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17201372981071472
    2. '<' → logprob: -2.422013759613037
    3. ' <' → logprob: -2.797013759613037
    4. ')<' → logprob: -4.797013759613037
    5. ' )' → logprob: -10.672013282775879
    6. ' ' → logprob: -12.422013282775879
    7. '()<' → logprob: -12.797013282775879
    8. '[' → logprob: -13.172013282775879
    9. ']' → logprob: -13.297013282775879
    10. '   ' → logprob: -13.422013282775879

Token 380: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.023256778717041016
    2. ' <' → logprob: -3.773256778717041
    3. ')<' → logprob: -12.023256301879883
    4. ')' → logprob: -12.398256301879883
    5. ' ' → logprob: -15.023256301879883
    6. '   ' → logprob: -15.273256301879883
    7. '()<' → logprob: -15.398256301879883
    8. '```' → logprob: -16.148256301879883
    9. ']<' → logprob: -16.398256301879883
    10. '[' → logprob: -16.898256301879883

Token 381: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005928558763116598
    2. ' ' → logprob: -5.1309285163879395
    3. '   ' → logprob: -19.00592803955078
    4. '
' → logprob: -19.00592803955078
    5. '```' → logprob: -19.13092803955078
    6. ' ' → logprob: -19.38092803955078
    7. '  ' → logprob: -19.94342803955078
    8. '۰' → logprob: -19.94342803955078
    9. '1' → logprob: -20.69342803955078
    10. '<|end|>' → logprob: -20.94342803955078

Token 382: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.18757438659668
    4. '```' → logprob: -16.43757438659668
    5. ' ' → logprob: -17.06257438659668
    6. '1' → logprob: -17.43757438659668
    7. '(' → logprob: -17.50007438659668
    8. '  ' → logprob: -17.75007438659668
    9. '۰' → logprob: -17.75007438659668
    10. '00' → logprob: -17.87507438659668

Token 383: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038701395969837904
    2. ':
' → logprob: -5.628870010375977
    3. '       ' → logprob: -9.003870010375977
    4. ' :' → logprob: -9.378870010375977
    5. '):' → logprob: -10.878870010375977
    6. ' and' → logprob: -11.003870010375977
    7. '           ' → logprob: -11.753870010375977
    8. '<|end|>' → logprob: -12.003870010375977
    9. ':

' → logprob: -13.003870010375977
    10. ')' → logprob: -13.003870010375977

Token 384: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014078515814617276
    2. '       ' → logprob: -7.126407623291016
    3. '#' → logprob: -7.751407623291016
    4. '```' → logprob: -8.876407623291016
    5. '          ' → logprob: -11.251407623291016
    6. '        ' → logprob: -12.501407623291016
    7. '               ' → logprob: -12.501407623291016
    8. '   ' → logprob: -12.751407623291016
    9. '	       ' → logprob: -13.126407623291016
    10. '            ' → logprob: -13.376407623291016

Token 385: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.02823963388800621
    2. '#' → logprob: -3.6532397270202637
    3. '           ' → logprob: -6.403239727020264
    4. ' min' → logprob: -8.403239250183105
    5. '               ' → logprob: -10.778239250183105
    6. '       ' → logprob: -12.153239250183105
    7. 'wx' → logprob: -12.403239250183105
    8. 'xmin' → logprob: -12.403239250183105
    9. ' #' → logprob: -12.528239250183105
    10. 'x' → logprob: -12.528239250183105

Token 386: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015764019917696714
    2. 'qx' → logprob: -7.1265764236450195
    3. '(px' → logprob: -8.00157642364502
    4. 'px' → logprob: -8.12657642364502
    5. 'y' → logprob: -10.00157642364502
    6. '(' → logprob: -10.50157642364502
    7. '(wx' → logprob: -10.62657642364502
    8. '(x' → logprob: -11.75157642364502
    9. 'wx' → logprob: -11.87657642364502
    10. 'q' → logprob: -12.62657642364502

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.456358823925257e-05
    2. '=' → logprob: -10.250064849853516
    3. ' ,' → logprob: -10.500064849853516
    4. ' =' → logprob: -13.875064849853516
    5. ',min' → logprob: -15.125064849853516
    6. 'x' → logprob: -16.250064849853516
    7. '<|end|>' → logprob: -17.125064849853516
    8. '_,' → logprob: -17.375064849853516
    9. '=min' → logprob: -17.375064849853516
    10. ',w' → logprob: -17.750064849853516

Token 388: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3132624924182892
    2. ' max' → logprob: -1.3132624626159668
    3. '(max' → logprob: -14.563262939453125
    4. '=max' → logprob: -15.688262939453125
    5. 'min' → logprob: -16.688262939453125
    6. ',max' → logprob: -17.938262939453125
    7. ' min' → logprob: -18.188262939453125
    8. '[max' → logprob: -19.063262939453125
    9. '_max' → logprob: -19.688262939453125
    10. '=' → logprob: -19.813262939453125

Token 389: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2113979209971149e-05
    2. '=' → logprob: -12.375012397766113
    3. '(px' → logprob: -12.625012397766113
    4. 'px' → logprob: -12.875012397766113
    5. '(x' → logprob: -13.750012397766113
    6. ',' → logprob: -14.500012397766113
    7. 'qx' → logprob: -15.250012397766113
    8. ' =' → logprob: -17.125011444091797
    9. '(' → logprob: -17.250011444091797
    10. '```' → logprob: -17.625011444091797

Token 390: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011064444668591022
    2. ' =' → logprob: -4.511064529418945
    3. ',' → logprob: -11.011064529418945
    4. '=min' → logprob: -17.136064529418945
    5. '   ' → logprob: -17.761064529418945
    6. ' ' → logprob: -18.386064529418945
    7. ')' → logprob: -19.136064529418945
    8. '           ' → logprob: -19.261064529418945
    9. ' ,' → logprob: -19.261064529418945
    10. '       ' → logprob: -19.761064529418945

Token 391: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.014208288863301277
    2. ' min' → logprob: -4.2642083168029785
    3. '(min' → logprob: -10.01420783996582
    4. '	min' → logprob: -19.63920783996582
    5. '[min' → logprob: -20.38920783996582
    6. '=min' → logprob: -20.76420783996582
    7. ',min' → logprob: -21.63920783996582
    8. 'sorted' → logprob: -22.51420783996582
    9. '-min' → logprob: -22.51420783996582
    10. '_min' → logprob: -22.51420783996582

Token 392: '(px' (ID: 195026)
  Prédit: '(px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -5.796184723294573e-06
    2. ':px' → logprob: -13.125005722045898
    3. '(q' → logprob: -13.750005722045898
    4. 'px' → logprob: -14.000005722045898
    5. '(py' → logprob: -14.125005722045898
    6. '(' → logprob: -14.375005722045898
    7. '(wx' → logprob: -16.1250057220459
    8. '(p' → logprob: -16.3750057220459
    9. ' px' → logprob: -16.3750057220459
    10. ' (' → logprob: -16.3750057220459

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016778295685071498
    2. ',q' → logprob: -9.125167846679688
    3. ' ,' → logprob: -9.750167846679688
    4. ',p' → logprob: -14.625167846679688
    5. ',
' → logprob: -17.750167846679688
    6. ',x' → logprob: -18.125167846679688
    7. 'qx' → logprob: -18.375167846679688
    8. ',Q' → logprob: -18.750167846679688
    9. 'q' → logprob: -19.250167846679688
    10. ',y' → logprob: -20.000167846679688

Token 394: ' q' (ID: 2335)
  Prédit: 'qx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qx' → logprob: -0.25213590264320374
    2. ' q' → logprob: -1.5021358728408813
    3. 'q' → logprob: -8.62713623046875
    4. 'qy' → logprob: -11.50213623046875
    5. '   ' → logprob: -11.75213623046875
    6. ' ' → logprob: -12.37713623046875
    7. '	q' → logprob: -13.12713623046875
    8. 'qw' → logprob: -14.87713623046875
    9. '(q' → logprob: -15.00213623046875
    10. '  ' → logprob: -15.12713623046875

Token 395: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2948405128554441e-05
    2. 'qx' → logprob: -11.37501335144043
    3. 'px' → logprob: -14.12501335144043
    4. 'q' → logprob: -15.00001335144043
    5. '```' → logprob: -16.00001335144043
    6. '   ' → logprob: -16.25001335144043
    7. '
' → logprob: -16.75001335144043
    8. ',' → logprob: -17.12501335144043
    9. 'ux' → logprob: -17.37501335144043
    10. 'y' → logprob: -18.12501335144043

Token 396: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -4.572941179503687e-05
    2. ' ),' → logprob: -10.375045776367188
    3. ',' → logprob: -11.750045776367188
    4. ')' → logprob: -12.000045776367188
    5. '```' → logprob: -16.000045776367188
    6. '   ' → logprob: -16.375045776367188
    7. ',),' → logprob: -17.250045776367188
    8. ' ,' → logprob: -17.250045776367188
    9. '()),' → logprob: -18.125045776367188
    10. '``' → logprob: -18.125045776367188

Token 397: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01416350994259119
    2. ' max' → logprob: -4.264163494110107
    3. '(max' → logprob: -21.014163970947266
    4. '	max' → logprob: -21.639163970947266
    5. ' ' → logprob: -22.764163970947266
    6. '[max' → logprob: -23.264163970947266
    7. 'Max' → logprob: -23.389163970947266
    8. '_max' → logprob: -23.889163970947266
    9. '   ' → logprob: -24.264163970947266
    10. ',max' → logprob: -24.264163970947266

Token 398: '(px' (ID: 195026)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.019282266497612
    2. 'qx' → logprob: -4.519282341003418
    3. '(px' → logprob: -5.019282341003418
    4. 'max' → logprob: -6.769282341003418
    5. 'x' → logprob: -8.019282341003418
    6. ' px' → logprob: -9.144282341003418
    7. '(q' → logprob: -12.644282341003418
    8. 'q' → logprob: -13.519282341003418
    9. '(max' → logprob: -13.894282341003418
    10. ':px' → logprob: -14.894282341003418

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03570360690355301
    2. ')' → logprob: -3.410703659057617
    3. 'q' → logprob: -7.035703659057617
    4. 'qx' → logprob: -7.535703659057617
    5. ',q' → logprob: -7.660703659057617
    6. 'x' → logprob: -9.410703659057617
    7. ' ,' → logprob: -10.410703659057617
    8. '<|end|>' → logprob: -10.785703659057617
    9. ')
' → logprob: -11.660703659057617
    10. ')x' → logprob: -12.285703659057617

Token 400: ' q' (ID: 2335)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.31372731924057007
    2. 'qx' → logprob: -1.3137273788452148
    3. 'px' → logprob: -7.813727378845215
    4. ' max' → logprob: -9.813727378845215
    5. 'q' → logprob: -12.313727378845215
    6. ' q' → logprob: -14.063727378845215
    7. 'qp' → logprob: -14.688727378845215
    8. 'pq' → logprob: -15.313727378845215
    9. 'Q' → logprob: -15.688727378845215
    10. 'qy' → logprob: -16.1887264251709

Token 401: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1448015421628952
    2. 'qx' → logprob: -2.019801616668701
    3. 'q' → logprob: -6.519801616668701
    4. 'max' → logprob: -8.019801139831543
    5. 'px' → logprob: -8.144801139831543
    6. ')' → logprob: -11.394801139831543
    7. 'mx' → logprob: -12.519801139831543
    8. '```' → logprob: -12.644801139831543
    9. '   ' → logprob: -12.769801139831543
    10. 'wx' → logprob: -13.269801139831543

Token 402: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0615178346633911
    2. ')
' → logprob: -1.0615178346633911
    3. ')' → logprob: -1.1865178346633911
    4. '               ' → logprob: -6.436517715454102
    5. ',' → logprob: -7.811517715454102
    6. '       ' → logprob: -8.311517715454102
    7. '
' → logprob: -8.686517715454102
    8. 'if' → logprob: -8.936517715454102
    9. ')
' → logprob: -9.561517715454102
    10. '),' → logprob: -9.811517715454102

Token 403: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1547611504793167
    2. '               ' → logprob: -2.2797610759735107
    3. 'if' → logprob: -3.2797610759735107
    4. ' if' → logprob: -6.52976131439209
    5. '```' → logprob: -6.90476131439209
    6. '#' → logprob: -7.02976131439209
    7. 'x' → logprob: -10.15476131439209
    8. '            ' → logprob: -11.15476131439209
    9. '            
' → logprob: -11.77976131439209
    10. ' #' → logprob: -12.52976131439209

Token 404: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3706510663032532
    2. '#' → logprob: -1.3706510066986084
    3. '               ' → logprob: -2.9956510066986084
    4. 'x' → logprob: -6.4956512451171875
    5. ' if' → logprob: -6.4956512451171875
    6. '           ' → logprob: -6.6206512451171875
    7. 'cross' → logprob: -7.2456512451171875
    8. ' #' → logprob: -7.8706512451171875
    9. '```' → logprob: -8.370651245117188
    10. '
' → logprob: -10.745651245117188

Token 405: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07027663290500641
    2. ' x' → logprob: -3.4452767372131348
    3. '(x' → logprob: -3.5702767372131348
    4. 'min' → logprob: -5.320276737213135
    5. '(min' → logprob: -6.320276737213135
    6. ' min' → logprob: -7.195276737213135
    7. ' (' → logprob: -8.195276260375977
    8. 'y' → logprob: -10.445276260375977
    9. '(y' → logprob: -10.445276260375977
    10. '   ' → logprob: -11.320276260375977

Token 406: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005982242990285158
    2. '1' → logprob: -5.130982398986816
    3. '```' → logprob: -10.130982398986816
    4. ' ' → logprob: -12.005982398986816
    5. '   ' → logprob: -13.130982398986816
    6. '!=' → logprob: -13.630982398986816
    7. '[' → logprob: -14.130982398986816
    8. 'def' → logprob: -14.380982398986816
    9. '₂' → logprob: -14.880982398986816
    10. '...' → logprob: -15.130982398986816

Token 407: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.47415637969970703
    2. '!=' → logprob: -0.974156379699707
    3. '-' → logprob: -10.224156379699707
    4. ' -' → logprob: -11.224156379699707
    5. ')!=' → logprob: -11.349156379699707
    6. ']!=' → logprob: -12.349156379699707
    7. '!=-' → logprob: -12.599156379699707
    8. '()!=' → logprob: -12.724156379699707
    9. ' ' → logprob: -12.849156379699707
    10. '```' → logprob: -13.474156379699707

Token 408: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005234594456851482
    2. ' y' → logprob: -5.255234718322754
    3. '	y' → logprob: -14.380234718322754
    4. ' ' → logprob: -16.255233764648438
    5. '   ' → logprob: -16.380233764648438
    6. '1' → logprob: -17.755233764648438
    7. 'Y' → logprob: -18.005233764648438
    8. ''y' → logprob: -18.255233764648438
    9. ')y' → logprob: -18.630233764648438
    10. '  ' → logprob: -18.755233764648438

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022237090161070228
    2. 'y' → logprob: -8.750222206115723
    3. ' ' → logprob: -10.000222206115723
    4. ' y' → logprob: -11.000222206115723
    5. '   ' → logprob: -13.750222206115723
    6. '       ' → logprob: -15.625222206115723
    7. '```' → logprob: -15.750222206115723
    8. '  ' → logprob: -16.12522315979004
    9. '_' → logprob: -16.25022315979004
    10. ' py' → logprob: -17.00022315979004

Token 410: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2204187661409378
    2. ':' → logprob: -1.9704188108444214
    3. '               ' → logprob: -2.845418691635132
    4. '           ' → logprob: -8.720418930053711
    5. '):
' → logprob: -10.220418930053711
    6. ' :
' → logprob: -10.970418930053711
    7. '              ' → logprob: -11.095418930053711
    8. ':

' → logprob: -11.095418930053711
    9. ':
' → logprob: -11.220418930053711
    10. ',' → logprob: -11.595418930053711

Token 411: '               ' (ID: 506)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.5862693190574646
    2. '               ' → logprob: -1.3362693786621094
    3. ' cross' → logprob: -1.7112693786621094
    4. '                   ' → logprob: -9.83626937866211
    5. '```' → logprob: -10.58626937866211
    6. '                ' → logprob: -10.83626937866211
    7. '                
' → logprob: -10.96126937866211
    8. '                       ' → logprob: -11.96126937866211
    9. '_cross' → logprob: -12.08626937866211
    10. '           ' → logprob: -12.96126937866211

Token 412: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' (adapté à ' cross') → logprob: -0.006716674659401178
    2. ' cross' → logprob: -5.006716728210449
    3. '               ' → logprob: -13.63171672821045
    4. '_cross' → logprob: -17.006715774536133
    5. '```' → logprob: -17.756715774536133
    6. 'Cross' → logprob: -18.131715774536133
    7. '                   ' → logprob: -18.256715774536133
    8. '   ' → logprob: -18.256715774536133
    9. 'cut' → logprob: -19.131715774536133
    10. 'c' → logprob: -19.256715774536133

Token 413: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.008619539439678192
    2. 'x' → logprob: -4.75861930847168
    3. '_' → logprob: -12.25861930847168
    4. '   ' → logprob: -16.00861930847168
    5. '_y' → logprob: -16.38361930847168
    6. ' x' → logprob: -16.50861930847168
    7. '```' → logprob: -17.50861930847168
    8. '=' → logprob: -17.63361930847168
    9. '	x' → logprob: -19.13361930847168
    10. '_
' → logprob: -19.25861930847168

Token 414: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.453889846801758
    4. '＝' → logprob: -18.078889846801758
    5. '   ' → logprob: -19.328889846801758
    6. ',' → logprob: -19.953889846801758
    7. '```' → logprob: -20.203889846801758
    8. 'x' → logprob: -20.203889846801758
    9. '>' → logprob: -20.703889846801758
    10. '.=' → logprob: -20.828889846801758

Token 415: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031777136027812958
    2. ' x' → logprob: -5.753177642822266
    3. '   ' → logprob: -18.128177642822266
    4. '	x' → logprob: -18.253177642822266
    5. '               ' → logprob: -20.128177642822266
    6. '"x' → logprob: -21.378177642822266
    7. '           ' → logprob: -21.378177642822266
    8. '                   ' → logprob: -21.878177642822266
    9. '(x' → logprob: -22.253177642822266
    10. '       ' → logprob: -22.378177642822266

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. 'x' → logprob: -17.625
    4. '   ' → logprob: -18.75
    5. '+' → logprob: -19.125
    6. '[' → logprob: -19.5
    7. '１' → logprob: -20.75
    8. '<|end|>' → logprob: -20.75
    9. '```' → logprob: -21.0625
    10. '           ' → logprob: -21.375

Token 417: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740777015686035
    2. '+' → logprob: -0.9740777015686035
    3. '+(' → logprob: -15.224077224731445
    4. '＋' → logprob: -16.224077224731445
    5. ' ' → logprob: -16.474077224731445
    6. '<|end|>' → logprob: -16.849077224731445
    7. '+
' → logprob: -17.099077224731445
    8. ' +
' → logprob: -17.349077224731445
    9. '=' → logprob: -17.599077224731445
    10. ' plus' → logprob: -18.099077224731445

Token 418: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.6041435599327087
    2. ' (' → logprob: -1.1041436195373535
    3. '(x' → logprob: -2.1041436195373535
    4. '(s' → logprob: -12.354143142700195
    5. '(' → logprob: -12.979143142700195
    6. '(w' → logprob: -13.479143142700195
    7. '(q' → logprob: -13.604143142700195
    8. '(dx' → logprob: -14.104143142700195
    9. '(py' → logprob: -14.104143142700195
    10. '(v' → logprob: -14.729143142700195

Token 419: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -3.03521392197581e-05
    2. ' (' → logprob: -10.500030517578125
    3. 'x' → logprob: -12.875030517578125
    4. '   ' → logprob: -16.625030517578125
    5. '(y' → logprob: -17.625030517578125
    6. '((' → logprob: -18.375030517578125
    7. '(dx' → logprob: -18.375030517578125
    8. '(' → logprob: -18.500030517578125
    9. '        ' → logprob: -19.250030517578125
    10. ' ' → logprob: -20.125030517578125

Token 420: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.065608562901616e-05
    2. ' -' → logprob: -10.000081062316895
    3. '-' → logprob: -10.500081062316895
    4. '```' → logprob: -12.125081062316895
    5. ' ' → logprob: -14.125081062316895
    6. '
' → logprob: -14.625081062316895
    7. '[' → logprob: -15.250081062316895
    8. '   ' → logprob: -15.500081062316895
    9. '``' → logprob: -16.187580108642578
    10. ',' → logprob: -16.687580108642578

Token 421: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011048289015889168
    2. '-' → logprob: -4.511048316955566
    3. ' ' → logprob: -14.636048316955566
    4. '   ' → logprob: -17.38604736328125
    5. '  ' → logprob: -18.01104736328125
    6. ',' → logprob: -18.88604736328125
    7. ' ' → logprob: -19.26104736328125
    8. '−' → logprob: -19.26104736328125
    9. '```' → logprob: -20.13604736328125
    10. '-y' → logprob: -20.26104736328125

Token 422: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000192812061868608
    2. ' x' → logprob: -8.625192642211914
    3. '1' → logprob: -11.250192642211914
    4. 'px' → logprob: -16.625192642211914
    5. ')x' → logprob: -16.750192642211914
    6. ' ' → logprob: -17.375192642211914
    7. '<|end|>' → logprob: -17.750192642211914
    8. '	x' → logprob: -18.000192642211914
    9. '```' → logprob: -18.000192642211914
    10. '[' → logprob: -18.250192642211914

Token 423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.875005722045898
    3. ')' → logprob: -13.375005722045898
    4. '   ' → logprob: -15.000005722045898
    5. '```' → logprob: -15.000005722045898
    6. '  ' → logprob: -16.3750057220459
    7. ',' → logprob: -16.7500057220459
    8. '-' → logprob: -16.7500057220459
    9. '*' → logprob: -17.1875057220459
    10. ' -' → logprob: -17.3125057220459

Token 424: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.313314952421933e-05
    2. ' )' → logprob: -9.750062942504883
    3. ')*' → logprob: -12.375062942504883
    4. '*' → logprob: -15.000062942504883
    5. ')*(' → logprob: -15.750062942504883
    6. ' ' → logprob: -16.875062942504883
    7. '   ' → logprob: -17.500062942504883
    8. ' *' → logprob: -17.625062942504883
    9. '）' → logprob: -18.500062942504883
    10. '*)' → logprob: -18.875062942504883

Token 425: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0549936480820179
    2. ' *' → logprob: -2.9299936294555664
    3. ')' → logprob: -9.554993629455566
    4. '*(' → logprob: -10.429993629455566
    5. ' ' → logprob: -11.929993629455566
    6. '   ' → logprob: -13.554993629455566
    7. ')*' → logprob: -13.554993629455566
    8. '(y' → logprob: -13.929993629455566
    9. ' (' → logprob: -16.054994583129883
    10. '*y' → logprob: -16.054994583129883

Token 426: ' (' (ID: 350)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.00027230256819166243
    2. ' (' → logprob: -8.250272750854492
    3. '(wx' → logprob: -11.875272750854492
    4. '(' → logprob: -12.625272750854492
    5. '(W' → logprob: -15.500272750854492
    6. '   ' → logprob: -15.625272750854492
    7. '(y' → logprob: -16.250272750854492
    8. '	' → logprob: -16.625272750854492
    9. '  ' → logprob: -17.375272750854492
    10. ' ' → logprob: -17.375272750854492

Token 427: 'wy' (ID: 10201)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.007651353720575571
    2. 'wy' → logprob: -4.882651329040527
    3. ' (' → logprob: -11.257651329040527
    4. '(wx' → logprob: -11.507651329040527
    5. '(' → logprob: -12.007651329040527
    6. ' wy' → logprob: -12.007651329040527
    7. 'w' → logprob: -12.632651329040527
    8. 'Wy' → logprob: -13.382651329040527
    9. '   ' → logprob: -13.507651329040527
    10. '```' → logprob: -14.757651329040527

Token 428: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.523204505443573
    2. '-' → logprob: -0.898204505443573
    3. ' ' → logprob: -9.898204803466797
    4. '-w' → logprob: -11.148204803466797
    5. '-y' → logprob: -12.398204803466797
    6. '>' → logprob: -13.023204803466797
    7. '-x' → logprob: -13.773204803466797
    8. ' (' → logprob: -13.773204803466797
    9. ',' → logprob: -14.148204803466797
    10. '   ' → logprob: -14.273204803466797

Token 429: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005234832875430584
    2. ' y' → logprob: -5.255234718322754
    3. '	y' → logprob: -14.005234718322754
    4. ')y' → logprob: -16.00523567199707
    5. '<|end|>' → logprob: -17.38023567199707
    6. '(y' → logprob: -18.38023567199707
    7. '   ' → logprob: -19.00523567199707
    8. ')' → logprob: -19.25523567199707
    9. ',y' → logprob: -19.38023567199707
    10. ''y' → logprob: -19.38023567199707

Token 430: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. '```' → logprob: -13.375003814697266
    3. ' ' → logprob: -13.750003814697266
    4. 'y' → logprob: -15.250003814697266
    5. '=' → logprob: -15.375003814697266
    6. ')' → logprob: -15.500003814697266
    7. '-' → logprob: -15.500003814697266
    8. ',' → logprob: -16.500003814697266
    9. '<|end|>' → logprob: -16.500003814697266
    10. ' y' → logprob: -17.000003814697266

Token 431: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00035333906998857856
    2. ' )' → logprob: -8.125353813171387
    3. ')/(' → logprob: -10.250353813171387
    4. ')/' → logprob: -10.750353813171387
    5. ')
' → logprob: -16.00035285949707
    6. ' ' → logprob: -16.50035285949707
    7. '   ' → logprob: -16.87535285949707
    8. '')' → logprob: -16.87535285949707
    9. '")' → logprob: -17.12535285949707
    10. '）' → logprob: -17.37535285949707

Token 432: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.07085216790437698
    2. ' /' → logprob: -2.695852279663086
    3. ')' → logprob: -7.695852279663086
    4. '/(' → logprob: -7.945852279663086
    5. ')/(' → logprob: -9.570852279663086
    6. ')/' → logprob: -11.445852279663086
    7. '/
' → logprob: -11.820852279663086
    8. '   ' → logprob: -12.070852279663086
    9. ' /(' → logprob: -12.070852279663086
    10. ' ' → logprob: -12.945852279663086

Token 433: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.002484692493453622
    2. ' (' → logprob: -6.0024847984313965
    3. '(' → logprob: -11.627484321594238
    4. '(x' → logprob: -17.002485275268555
    5. '(Y' → logprob: -17.252485275268555
    6. '   ' → logprob: -17.377485275268555
    7. ' ' → logprob: -18.752485275268555
    8. ' y' → logprob: -19.002485275268555
    9. '((' → logprob: -19.252485275268555
    10. '[y' → logprob: -19.502485275268555

Token 434: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.17997106909751892
    2. '(y' → logprob: -1.8049710988998413
    3. ' y' → logprob: -8.804970741271973
    4. ' (' → logprob: -10.179970741271973
    5. '(' → logprob: -11.054970741271973
    6. '   ' → logprob: -11.179970741271973
    7. '	y' → logprob: -13.054970741271973
    8. ')' → logprob: -14.179970741271973
    9. '
' → logprob: -14.304970741271973
    10. '(
' → logprob: -14.304970741271973

Token 435: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020550064742565155
    2. '1' → logprob: -3.895550012588501
    3. ' ' → logprob: -12.770549774169922
    4. '```' → logprob: -13.145549774169922
    5. '<|end|>' → logprob: -14.645549774169922
    6. ')' → logprob: -14.895549774169922
    7. '[' → logprob: -15.083049774169922
    8. '<|end|>' → logprob: -15.083049774169922
    9. ' -' → logprob: -15.208049774169922
    10. 'x' → logprob: -15.395549774169922

Token 436: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38699936866760254
    2. ' -' → logprob: -1.1369993686676025
    3. '<|end|>' → logprob: -10.011999130249023
    4. '1' → logprob: -10.136999130249023
    5. '[' → logprob: -10.761999130249023
    6. ' ' → logprob: -12.136999130249023
    7. '2' → logprob: -13.136999130249023
    8. '_' → logprob: -13.386999130249023
    9. '−' → logprob: -13.386999130249023
    10. '```' → logprob: -13.511999130249023

Token 437: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03808223456144333
    2. ' y' → logprob: -3.2880821228027344
    3. '1' → logprob: -10.163082122802734
    4. '	y' → logprob: -14.288082122802734
    5. ' ' → logprob: -14.788082122802734
    6. ')y' → logprob: -15.038082122802734
    7. 'x' → logprob: -15.413082122802734
    8. ')' → logprob: -15.788082122802734
    9. '(y' → logprob: -15.788082122802734
    10. '   ' → logprob: -15.913082122802734

Token 438: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ')' → logprob: -12.87501049041748
    3. 'y' → logprob: -12.87501049041748
    4. '-' → logprob: -13.50001049041748
    5. '```' → logprob: -13.75001049041748
    6. '<|end|>' → logprob: -14.25001049041748
    7. ' ' → logprob: -14.62501049041748
    8. 'x' → logprob: -15.37501049041748
    9. '
' → logprob: -15.37501049041748
    10. '[' → logprob: -15.75001049041748

Token 439: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019448186503723264
    2. ')
' → logprob: -6.2519450187683105
    3. '               ' → logprob: -11.376944541931152
    4. '           ' → logprob: -13.251944541931152
    5. ')
' → logprob: -13.251944541931152
    6. ' )' → logprob: -14.626944541931152
    7. ')x' → logprob: -14.626944541931152
    8. ')

' → logprob: -16.62694549560547
    9. '       ' → logprob: -16.75194549560547
    10. ')return' → logprob: -16.75194549560547

Token 440: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004228091274853796
    2. ' if' → logprob: -8.125422477722168
    3. '                
' → logprob: -10.250422477722168
    4. 'if' → logprob: -10.500422477722168
    5. '                ' → logprob: -10.625422477722168
    6. '              ' → logprob: -11.125422477722168
    7. '           ' → logprob: -11.500422477722168
    8. '                   ' → logprob: -12.000422477722168
    9. '			' → logprob: -13.375422477722168
    10. '             ' → logprob: -13.375422477722168

Token 441: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.026362420991063118
    2. 'if' (adapté à ' if') → logprob: -3.776362419128418
    3. '               ' → logprob: -5.776362419128418
    4. '                ' → logprob: -11.651362419128418
    5. ' return' → logprob: -14.401362419128418
    6. '	if' → logprob: -14.651362419128418
    7. ' ' → logprob: -14.901362419128418
    8. '                   ' → logprob: -15.026362419128418
    9. '```' → logprob: -15.026362419128418
    10. ' ' → logprob: -15.151362419128418

Token 442: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.474077433347702
    2. 'min' → logprob: -0.9740774631500244
    3. '(min' → logprob: -14.974077224731445
    4. '	min' → logprob: -17.099077224731445
    5. ' mini' → logprob: -18.099077224731445
    6. 'max' → logprob: -18.349077224731445
    7. 'mini' → logprob: -18.349077224731445
    8. ' max' → logprob: -18.474077224731445
    9. '_min' → logprob: -18.724077224731445
    10. '[min' → logprob: -18.849077224731445

Token 443: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. '<x' → logprob: -18.75
    3. '<' → logprob: -19.875
    4. 'min' → logprob: -20.5
    5. 'xmin' → logprob: -21.0
    6. ' x' → logprob: -21.0
    7. ' <' → logprob: -21.375
    8. '```' → logprob: -21.625
    9. 'px' → logprob: -21.75
    10. 'ex' → logprob: -22.375

Token 444: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3132622241973877
    2. ' <' → logprob: -1.3132622241973877
    3. ' ' → logprob: -15.688261985778809
    4. ' ' → logprob: -16.313262939453125
    5. '<int' → logprob: -16.688262939453125
    6. '<class' → logprob: -17.688262939453125
    7. '<
' → logprob: -17.688262939453125
    8. ' cross' → logprob: -17.813262939453125
    9. '```' → logprob: -18.188262939453125
    10. '<|end|>' → logprob: -18.313262939453125

Token 445: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.10020667314529419
    2. ' cross' → logprob: -2.3502066135406494
    3. 'c' → logprob: -17.47520637512207
    4. ' ' → logprob: -17.85020637512207
    5. ' ' → logprob: -18.72520637512207
    6. 'cut' → logprob: -18.72520637512207
    7. '_cross' → logprob: -18.85020637512207
    8. '   ' → logprob: -19.60020637512207
    9. '.cross' → logprob: -19.72520637512207
    10. '
' → logprob: -20.47520637512207

Token 446: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0003361774142831564
    2. 'x' → logprob: -8.000336647033691
    3. 'cross' → logprob: -14.375336647033691
    4. '_' → logprob: -16.125335693359375
    5. 'ing' → logprob: -17.500335693359375
    6. '_cross' → logprob: -17.500335693359375
    7. '_y' → logprob: -18.125335693359375
    8. '```' → logprob: -19.000335693359375
    9. 's' → logprob: -19.500335693359375
    10. 'xc' → logprob: -20.000335693359375

Token 447: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.20141586661338806
    2. ' <' → logprob: -1.7014158964157104
    3. 'and' → logprob: -13.201416015625
    4. ' and' → logprob: -15.076416015625
    5. ' ' → logprob: -15.451416015625
    6. '```' → logprob: -16.701416015625
    7. ')' → logprob: -17.076416015625
    8. ',' → logprob: -17.451416015625
    9. 'a' → logprob: -17.701416015625
    10. '>' → logprob: -17.701416015625

Token 448: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00020354038861114532
    2. ' max' → logprob: -8.500203132629395
    3. ' ' → logprob: -19.25020408630371
    4. 'min' → logprob: -19.75020408630371
    5. '   ' → logprob: -20.12520408630371
    6. '```' → logprob: -20.37520408630371
    7. '(max' → logprob: -20.50020408630371
    8. '	max' → logprob: -20.62520408630371
    9. '=max' → logprob: -20.87520408630371
    10. 'm' → logprob: -21.00020408630371

Token 449: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5280379056930542
    2. 'qx' → logprob: -1.2780379056930542
    3. 'max' → logprob: -2.0280380249023438
    4. 'px' → logprob: -10.403038024902344
    5. 'q' → logprob: -10.778038024902344
    6. ' max' → logprob: -12.403038024902344
    7. 'wx' → logprob: -12.403038024902344
    8. 'ex' → logprob: -13.778038024902344
    9. 'mx' → logprob: -14.528038024902344
    10. '```' → logprob: -15.153038024902344

Token 450: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16970817744731903
    2. ':' → logprob: -1.9197081327438354
    3. '                   ' → logprob: -4.794708251953125
    4. ':return' → logprob: -6.919708251953125
    5. '               ' → logprob: -9.669708251953125
    6. '           ' → logprob: -9.919708251953125
    7. '                       ' → logprob: -11.044708251953125
    8. 'return' → logprob: -11.669708251953125
    9. '):
' → logprob: -11.794708251953125
    10. ':

' → logprob: -11.919708251953125

Token 451: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0010654398938640952
    2. 'return' → logprob: -7.501065254211426
    3. ' return' → logprob: -7.626065254211426
    4. '                       ' → logprob: -11.626065254211426
    5. '           ' → logprob: -11.751065254211426
    6. '               ' → logprob: -12.501065254211426
    7. '                  ' → logprob: -13.376065254211426
    8. '       ' → logprob: -14.376065254211426
    9. ':return' → logprob: -14.376065254211426
    10. '
' → logprob: -14.626065254211426

Token 452: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002029634779319167
    2. ' return' → logprob: -6.2520294189453125
    3. '                   ' → logprob: -9.252029418945312
    4. '	return' → logprob: -12.877029418945312
    5. '   ' → logprob: -14.002029418945312
    6. '               ' → logprob: -14.502029418945312
    7. '       ' → logprob: -14.502029418945312
    8. '                       ' → logprob: -14.752029418945312
    9. '           ' → logprob: -15.127029418945312
    10. ':return' → logprob: -18.127029418945312

Token 453: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0004306692280806601
    2. ' True' → logprob: -7.750430583953857
    3. 'False' → logprob: -18.750431060791016
    4. '(True' → logprob: -22.625431060791016
    5. '=True' → logprob: -24.125431060791016
    6. 'true' → logprob: -24.500431060791016
    7. 'Yes' → logprob: -25.500431060791016
    8. 'Tr' → logprob: -25.625431060791016
    9. '1' → logprob: -26.000431060791016
    10. 'T' → logprob: -26.375431060791016

Token 454: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003752615302801132
    2. 'return' → logprob: -8.000374794006348
    3. ' return' → logprob: -10.750374794006348
    4. '	return' → logprob: -11.250374794006348
    5. '       ' → logprob: -13.000374794006348
    6. '```' → logprob: -13.000374794006348
    7. ':return' → logprob: -15.000374794006348
    8. '   ' → logprob: -15.750374794006348
    9. '...' → logprob: -16.625375747680664
    10. '<|end|>' → logprob: -16.750375747680664

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03812089562416077
    2. 'return' → logprob: -3.288120985031128
    3. ' return' → logprob: -9.538121223449707
    4. '	return' → logprob: -12.288121223449707
    5. '       ' → logprob: -13.913121223449707
    6. '```' → logprob: -14.538121223449707
    7. '+' → logprob: -14.913121223449707
    8. ':return' → logprob: -15.288121223449707
    9. '   ' → logprob: -15.663121223449707
    10. ' ' → logprob: -16.16312026977539

Token 456: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03876525163650513
    2. '   ' → logprob: -3.2887651920318604
    3. ' return' → logprob: -7.2887654304504395
    4. '	return' → logprob: -10.538764953613281
    5. ' ' → logprob: -11.913764953613281
    6. '```' → logprob: -13.163764953613281
    7. 'False' → logprob: -13.788764953613281
    8. '  ' → logprob: -14.163764953613281
    9. ':return' → logprob: -14.163764953613281
    10. '    
' → logprob: -14.288764953613281

Token 457: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0485873706638813
    2. ' False' → logprob: -3.0485873222351074
    3. '(False' → logprob: -19.298587799072266
    4. '_false' → logprob: -21.673587799072266
    5. '=False' → logprob: -23.298587799072266
    6. 'false' → logprob: -23.423587799072266
    7. 'True' → logprob: -24.048587799072266
    8. ' false' → logprob: -24.048587799072266
    9. '.False' → logprob: -24.798587799072266
    10. ' ' → logprob: -25.673587799072266

Token 458: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022027019411325455
    2. 'results' → logprob: -4.522027015686035
    3. 'def' → logprob: -5.022027015686035
    4. 'answers' → logprob: -5.522027015686035
    5. 'result' → logprob: -8.772027015686035
    6. ' for' → logprob: -8.897027015686035
    7. 'answer' → logprob: -10.897027015686035
    8. 'responses' → logprob: -11.897027015686035
    9. 'res' → logprob: -12.647027015686035
    10. ' answers' → logprob: -12.897027015686035

Token 460: ' sx' (ID: 39428)
  Prédit: ' sx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sx' → logprob: -0.7653780579566956
    2. 'sx' → logprob: -1.0153779983520508
    3. 'query' → logprob: -2.515377998352051
    4. ' query' → logprob: -2.765377998352051
    5. 'q' → logprob: -4.765377998352051
    6. '(s' → logprob: -5.015377998352051
    7. 'qx' → logprob: -5.390377998352051
    8. ' q' → logprob: -6.015377998352051
    9. ' (' → logprob: -6.015377998352051
    10. 's' → logprob: -6.390377998352051

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045926711754873395
    2. ' ,' → logprob: -7.75045919418335
    3. ',s' → logprob: -10.500459671020508
    4. '_,' → logprob: -15.375459671020508
    5. 's' → logprob: -15.625459671020508
    6. ' in' → logprob: -15.750459671020508
    7. ',y' → logprob: -16.000459671020508
    8. ',
' → logprob: -16.250459671020508
    9. '‌,' → logprob: -16.250459671020508
    10. 'in' → logprob: -16.875459671020508

Token 462: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.02324792370200157
    2. ' sy' → logprob: -3.7732479572296143
    3. '_sy' → logprob: -13.398247718811035
    4. 's' → logprob: -14.148247718811035
    5. 'syz' → logprob: -16.27324867248535
    6. '.sy' → logprob: -17.02324867248535
    7. 'Sy' → logprob: -17.52324867248535
    8. 'sym' → logprob: -17.64824867248535
    9. 'sych' → logprob: -17.89824867248535
    10. 'sys' → logprob: -18.27324867248535

Token 463: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0683535037969705e-05
    2. ' ,' → logprob: -11.62501049041748
    3. ',g' → logprob: -13.50001049041748
    4. '_,' → logprob: -15.00001049041748
    5. ',s' → logprob: -19.000011444091797
    6. ',,' → logprob: -20.375011444091797
    7. ',y' → logprob: -20.625011444091797
    8. ',
' → logprob: -20.875011444091797
    9. ',
' → logprob: -21.000011444091797
    10. ',G' → logprob: -21.125011444091797

Token 464: ' gx' (ID: 142840)
  Prédit: 'gx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gx' → logprob: -0.011048882268369198
    2. ' gx' → logprob: -4.511048793792725
    3. 'sg' → logprob: -14.136049270629883
    4. 'sx' → logprob: -15.386049270629883
    5. ' ' → logprob: -17.011049270629883
    6. 'gs' → logprob: -17.261049270629883
    7. '
' → logprob: -17.761049270629883
    8. 'g' → logprob: -18.011049270629883
    9. 's' → logprob: -18.136049270629883
    10. 'qx' → logprob: -18.261049270629883

Token 465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.512236498361744e-07
    2. ' ,' → logprob: -14.625000953674316
    3. '_,' → logprob: -17.0
    4. ',
' → logprob: -18.375
    5. '‌,' → logprob: -19.75
    6. ',g' → logprob: -20.0
    7. 'g' → logprob: -20.25
    8. ',y' → logprob: -20.375
    9. '```' → logprob: -20.375
    10. ',s' → logprob: -20.875

Token 466: ' gy' (ID: 11045)
  Prédit: 'gy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gy' → logprob: -0.0067154900170862675
    2. ' gy' → logprob: -5.006715297698975
    3. 'gyl' → logprob: -17.256715774536133
    4. 'Gy' → logprob: -18.256715774536133
    5. 'gx' → logprob: -18.256715774536133
    6. 'gyz' → logprob: -18.381715774536133
    7. 'g' → logprob: -18.881715774536133
    8. 'gyi' → logprob: -19.381715774536133
    9. 'qy' → logprob: -19.506715774536133
    10. 'ggy' → logprob: -19.881715774536133

Token 467: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2014363408088684
    2. ' in' → logprob: -1.7014362812042236
    3. ',' → logprob: -11.076436042785645
    4. '	in' → logprob: -13.076436042785645
    5. ':' → logprob: -13.201436042785645
    6. 'n' → logprob: -14.076436042785645
    7. '   ' → logprob: -14.451436042785645
    8. ' ' → logprob: -15.201436042785645
    9. '  ' → logprob: -15.201436042785645
    10. ',in' → logprob: -15.326436042785645

Token 468: ' queries' (ID: 32122)
  Prédit: ' queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queries' → logprob: -0.5759395956993103
    2. 'queries' → logprob: -0.8259395956993103
    3. 'Queries' → logprob: -16.450939178466797
    4. 'requests' → logprob: -17.075939178466797
    5. '_queries' → logprob: -17.575939178466797
    6. 'questions' → logprob: -17.700939178466797
    7. 'quer' → logprob: -18.575939178466797
    8. 'query' → logprob: -18.700939178466797
    9. 'quests' → logprob: -19.575939178466797
    10. ' requests' → logprob: -20.450939178466797

Token 469: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021876145619899035
    2. ':
' → logprob: -6.127187728881836
    3. ' :' → logprob: -13.127187728881836
    4. ':
' → logprob: -15.377187728881836
    5. ' :
' → logprob: -16.252187728881836
    6. ':

' → logprob: -16.252187728881836
    7. '):' → logprob: -17.127187728881836
    8. '):
' → logprob: -17.502187728881836
    9. ',' → logprob: -17.877187728881836
    10. '   ' → logprob: -18.502187728881836

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00046546570956707
    2. '    
' → logprob: -8.125465393066406
    3. ' for' → logprob: -9.625465393066406
    4. '
' → logprob: -10.500465393066406
    5. ' if' → logprob: -10.625465393066406
    6. '```' → logprob: -11.125465393066406
    7. 'for' → logprob: -11.875465393066406
    8. '       ' → logprob: -12.250465393066406
    9. 'if' → logprob: -12.500465393066406
    10. ' 
' → logprob: -12.750465393066406

Token 471: ' count' (ID: 3605)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.6366678476333618
    2. 'blocked' → logprob: -1.2616678476333618
    3. 'possible' → logprob: -2.6366677284240723
    4. 'path' → logprob: -2.8866677284240723
    5. '   ' → logprob: -4.261667728424072
    6. ' can' → logprob: -4.386667728424072
    7. ' path' → logprob: -5.136667728424072
    8. 'for' → logprob: -5.636667728424072
    9. 'clear' → logprob: -5.886667728424072
    10. 'cross' → logprob: -5.886667728424072

Token 472: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3496814966201782
    2. '=' → logprob: -1.2246814966201782
    3. '_' → logprob: -6.724681377410889
    4. ' ' → logprob: -11.349681854248047
    5. '_wall' → logprob: -11.974681854248047
    6. '_w' → logprob: -12.224681854248047
    7. '_=' → logprob: -13.099681854248047
    8. ' +=' → logprob: -13.599681854248047
    9. ')' → logprob: -13.724681854248047
    10. '_cross' → logprob: -13.724681854248047

Token 473: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00975739024579525
    2. ' ' → logprob: -4.6347575187683105
    3. 'sum' → logprob: -14.384757041931152
    4. ' sum' → logprob: -15.134757041931152
    5. '   ' → logprob: -15.572257041931152
    6. '1' → logprob: -16.00975799560547
    7. ' ' → logprob: -16.57225799560547
    8. '=' → logprob: -16.94725799560547
    9. 'len' → logprob: -17.25975799560547
    10. '(' → logprob: -17.69725799560547

Token 474: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9385402993066236e-05
    2. 'sum' → logprob: -10.875019073486328
    3. ' ' → logprob: -15.000019073486328
    4. 'len' → logprob: -16.750019073486328
    5. '```' → logprob: -17.625019073486328
    6. '1' → logprob: -18.250019073486328
    7. '
' → logprob: -19.062519073486328
    8. ' sum' → logprob: -19.375019073486328
    9. '``' → logprob: -19.812519073486328
    10. '   ' → logprob: -19.875019073486328

Token 475: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0853666290640831
    2. '    
' → logprob: -2.960366725921631
    3. '
' → logprob: -3.835366725921631
    4. 'for' → logprob: -6.085366725921631
    5. '<|end|>' → logprob: -6.210366725921631
    6. '  
' → logprob: -6.960366725921631
    7. '   
' → logprob: -7.085366725921631
    8. ' for' → logprob: -7.210366725921631
    9. ' 
' → logprob: -7.960366725921631
    10. '' → logprob: -8.460366249084473

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1251692920923233
    2. ' for' → logprob: -3.125169277191162
    3. 'for' → logprob: -3.250169277191162
    4. '    
' → logprob: -3.750169277191162
    5. '
' → logprob: -5.250169277191162
    6. ' 
' → logprob: -6.625169277191162
    7. '   
' → logprob: -6.625169277191162
    8. '  
' → logprob: -6.750169277191162
    9. '' → logprob: -7.875169277191162
    10. '    ' → logprob: -8.00016975402832

Token 477: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00017004783148877323
    2. ' for' → logprob: -8.75016975402832
    3. '   ' → logprob: -11.37516975402832
    4. '```' → logprob: -16.87516975402832
    5. '	for' → logprob: -18.87516975402832
    6. '
' → logprob: -19.25016975402832
    7. '    
' → logprob: -19.25016975402832
    8. 'f' → logprob: -19.62516975402832
    9. ' ' → logprob: -20.12516975402832
    10. 'or' → logprob: -20.37516975402832

Token 478: ' wall' (ID: 9688)
  Prédit: 'wall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wall' → logprob: -0.3165922164916992
    2. ' wall' → logprob: -1.3165922164916992
    3. 'walls' → logprob: -6.441592216491699
    4. ' walls' → logprob: -6.816592216491699
    5. 'w' → logprob: -7.816592216491699
    6. ' w' → logprob: -9.6915922164917
    7. '_wall' → logprob: -10.1915922164917
    8. '(w' → logprob: -10.4415922164917
    9. 'wx' → logprob: -10.5665922164917
    10. 'x' → logprob: -10.6915922164917

Token 479: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04301517829298973
    2. 'in' → logprob: -3.168015241622925
    3. ' ' → logprob: -12.293015480041504
    4. '_' → logprob: -12.668015480041504
    5. 's' → logprob: -13.293015480041504
    6. '_in' → logprob: -13.668015480041504
    7. '	in' → logprob: -13.668015480041504
    8. 'wall' → logprob: -14.418015480041504
    9. 'w' → logprob: -14.543015480041504
    10. '   ' → logprob: -14.793015480041504

Token 480: ' walls' (ID: 20562)
  Prédit: 'walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walls' → logprob: -0.00020401719666551799
    2. ' walls' → logprob: -8.500204086303711
    3. 'wall' → logprob: -14.625204086303711
    4. 'w' → logprob: -16.50020408630371
    5. 'wal' → logprob: -19.50020408630371
    6. 'waves' → logprob: -20.00020408630371
    7. 'Walls' → logprob: -20.00020408630371
    8. '墙' → logprob: -22.37520408630371
    9. 'waters' → logprob: -22.75020408630371
    10. '
' → logprob: -23.25020408630371

Token 481: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010064521804451942
    2. ':
' → logprob: -4.635064601898193
    3. '       ' → logprob: -8.635064125061035
    4. '   ' → logprob: -9.135064125061035
    5. ' :' → logprob: -12.135064125061035
    6. '):' → logprob: -12.635064125061035
    7. '):
' → logprob: -13.010064125061035
    8. '[' → logprob: -13.135064125061035
    9. ',' → logprob: -13.260064125061035
    10. ' if' → logprob: -13.510064125061035

Token 482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000818561646156013
    2. ' if' → logprob: -7.375818729400635
    3. '
' → logprob: -9.375818252563477
    4. '        
' → logprob: -9.875818252563477
    5. 'if' → logprob: -10.875818252563477
    6. '   ' → logprob: -11.625818252563477
    7. '  
' → logprob: -12.000818252563477
    8. '    
' → logprob: -12.375818252563477
    9. ',' → logprob: -12.500818252563477
    10. ' 
' → logprob: -13.000818252563477

Token 483: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03472215682268143
    2. 'if' (adapté à ' if') → logprob: -3.909722089767456
    3. '       ' → logprob: -4.284722328186035
    4. '   ' → logprob: -8.909722328186035
    5. '
' → logprob: -9.034722328186035
    6. '    ' → logprob: -10.659722328186035
    7. ' 
' → logprob: -11.659722328186035
    8. '        ' → logprob: -12.909722328186035
    9. ' ' → logprob: -13.159722328186035
    10. '        
' → logprob: -13.409722328186035

Token 484: ' crosses' (ID: 95853)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.693300724029541
    2. ' crosses' → logprob: -0.693300724029541
    3. ' cross' → logprob: -8.943300247192383
    4. 'c' → logprob: -11.943300247192383
    5. 'not' → logprob: -12.068300247192383
    6. ' crossings' → logprob: -12.693300247192383
    7. ' not' → logprob: -12.943300247192383
    8. '_cross' → logprob: -13.693300247192383
    9. ' ' → logprob: -13.943300247192383
    10. '   ' → logprob: -13.943300247192383

Token 485: '_wall' (ID: 121548)
  Prédit: '_wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wall' → logprob: -4.008129963040119e-06
    2. '_w' → logprob: -12.875003814697266
    3. '_' → logprob: -13.625003814697266
    4. '_water' → logprob: -16.250003814697266
    5. 'wall' → logprob: -17.500003814697266
    6. '_floor' → logprob: -17.875003814697266
    7. '_
' → logprob: -18.125003814697266
    8. ' _' → logprob: -18.250003814697266
    9. '_cross' → logprob: -18.750003814697266
    10. '_wave' → logprob: -19.125003814697266

Token 486: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -9.698698704596609e-05
    2. '(' → logprob: -9.250097274780273
    3. ' (' → logprob: -14.125097274780273
    4. '(
' → logprob: -17.250097274780273
    5. '(x' → logprob: -17.375097274780273
    6. '((' → logprob: -18.250097274780273
    7. '(S' → logprob: -18.500097274780273
    8. 's' → logprob: -19.000097274780273
    9. ')' → logprob: -20.375097274780273
    10. ')(' → logprob: -21.250097274780273

Token 487: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.896309739408025e-07
    2. ',' → logprob: -15.500000953674316
    3. '(x' → logprob: -15.875000953674316
    4. '(s' → logprob: -16.5
    5. '```' → logprob: -16.875
    6. ',x' → logprob: -17.125
    7. ' x' → logprob: -17.5
    8. 'sx' → logprob: -17.625
    9. '
' → logprob: -18.0
    10. '1' → logprob: -18.125

Token 488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003167545364703983
    2. ' ,' → logprob: -8.125316619873047
    3. ',
' → logprob: -11.375316619873047
    4. ',s' → logprob: -11.750316619873047
    5. ',y' → logprob: -14.250316619873047
    6. 'sy' → logprob: -15.125316619873047
    7. '‌,' → logprob: -16.125316619873047
    8. ',

' → logprob: -16.250316619873047
    9. '_sy' → logprob: -16.375316619873047
    10. ' sy' → logprob: -16.750316619873047

Token 489: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.001170225441455841
    2. ' sy' → logprob: -6.7511701583862305
    3. '_sy' → logprob: -17.501171112060547
    4. 's' → logprob: -19.126171112060547
    5. 'Sy' → logprob: -19.626171112060547
    6. 'sym' → logprob: -19.751171112060547
    7. ' ' → logprob: -19.751171112060547
    8. '.sy' → logprob: -20.001171112060547
    9. 'syn' → logprob: -20.126171112060547
    10. 'gy' → logprob: -20.501171112060547

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002470350591465831
    2. ' ,' → logprob: -8.50024700164795
    3. ',g' → logprob: -10.37524700164795
    4. ',
' → logprob: -11.50024700164795
    5. ',s' → logprob: -14.00024700164795
    6. ',w' → logprob: -14.50024700164795
    7. '```' → logprob: -15.75024700164795
    8. '   ' → logprob: -15.87524700164795
    9. ',

' → logprob: -16.375247955322266
    10. ',
' → logprob: -16.750247955322266

Token 491: ' gx' (ID: 142840)
  Prédit: 'gx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gx' → logprob: -2.4391956685576588e-05
    2. ' gx' → logprob: -10.625024795532227
    3. 'g' → logprob: -17.750024795532227
    4. '   ' → logprob: -18.500024795532227
    5. 'gz' → logprob: -19.000024795532227
    6. ' ' → logprob: -19.250024795532227
    7. 'qx' → logprob: -19.250024795532227
    8. '```' → logprob: -19.500024795532227
    9. 'gy' → logprob: -19.875024795532227
    10. 'x' → logprob: -20.625024795532227

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9146995327901095e-05
    2. ' ,' → logprob: -10.875019073486328
    3. '_,' → logprob: -16.125019073486328
    4. ',
' → logprob: -16.500019073486328
    5. '```' → logprob: -18.875019073486328
    6. '‌,' → logprob: -20.000019073486328
    7. '`,' → logprob: -20.125019073486328
    8. '   ' → logprob: -20.375019073486328
    9. '),' → logprob: -20.500019073486328
    10. '0' → logprob: -20.500019073486328

Token 493: ' gy' (ID: 11045)
  Prédit: 'gy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gy' → logprob: -4.5491004129871726e-05
    2. ' gy' → logprob: -10.000045776367188
    3. 'sy' → logprob: -17.125045776367188
    4. 'gx' → logprob: -19.375045776367188
    5. 'Gy' → logprob: -20.625045776367188
    6. 'gyro' → logprob: -22.625045776367188
    7. '   ' → logprob: -22.750045776367188
    8. 'ky' → logprob: -23.125045776367188
    9. ' ' → logprob: -23.125045776367188
    10. 'yg' → logprob: -23.500045776367188

Token 494: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.200166469876422e-06
    2. ' ,' → logprob: -12.500004768371582
    3. ',w' → logprob: -14.250004768371582
    4. ',
' → logprob: -14.375004768371582
    5. '```' → logprob: -16.5000057220459
    6. '   ' → logprob: -16.5000057220459
    7. '),' → logprob: -18.1250057220459
    8. ',

' → logprob: -18.1250057220459
    9. '_,' → logprob: -18.5000057220459
    10. 'wall' → logprob: -18.6250057220459

Token 495: ' wall' (ID: 9688)
  Prédit: 'wall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wall' → logprob: -0.0008054602658376098
    2. ' wall' → logprob: -7.125805377960205
    3. ')' → logprob: -14.750805854797363
    4. '   ' → logprob: -15.375805854797363
    5. 'wal' → logprob: -15.375805854797363
    6. '.wall' → logprob: -16.750804901123047
    7. 'w' → logprob: -17.000804901123047
    8. '_wall' → logprob: -17.000804901123047
    9. ' ' → logprob: -17.125804901123047
    10. 'walls' → logprob: -17.250804901123047

Token 496: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5759608149528503
    2. '):' → logprob: -0.8259608149528503
    3. '):
' → logprob: -12.200961112976074
    4. '       ' → logprob: -12.325961112976074
    5. ' ):' → logprob: -12.700961112976074
    6. ':' → logprob: -12.950961112976074
    7. ' ):
' → logprob: -13.075961112976074
    8. '   ' → logprob: -13.325961112976074
    9. '           ' → logprob: -13.825961112976074
    10. ')' → logprob: -13.950961112976074

Token 497: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005021936725825071
    2. '       ' → logprob: -5.755022048950195
    3. 'count' → logprob: -6.380022048950195
    4. '
' → logprob: -9.755022048950195
    5. ' count' → logprob: -10.130022048950195
    6. '	       ' → logprob: -10.505022048950195
    7. '               ' → logprob: -11.880022048950195
    8. '   ' → logprob: -12.380022048950195
    9. '		' → logprob: -12.380022048950195
    10. '            
' → logprob: -13.505022048950195

Token 498: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0035752456169575453
    2. ' count' → logprob: -6.378575325012207
    3. '               ' → logprob: -6.503575325012207
    4. '           ' → logprob: -8.628575325012207
    5. '   ' → logprob: -8.753575325012207
    6. '       ' → logprob: -10.378575325012207
    7. '	count' → logprob: -13.378575325012207
    8. 'break' → logprob: -13.628575325012207
    9. ' ' → logprob: -13.753575325012207
    10. '
' → logprob: -14.503575325012207

Token 499: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5762243270874023
    2. ' +=' → logprob: -0.8262243270874023
    3. '+' → logprob: -8.201224327087402
    4. '=' → logprob: -12.076224327087402
    5. ' ' → logprob: -13.076224327087402
    6. '   ' → logprob: -13.951224327087402
    7. ']+=' → logprob: -14.076224327087402
    8. ' +' → logprob: -15.451224327087402
    9. '+="' → logprob: -15.701224327087402
    10. ')' → logprob: -15.701224327087402

Token 500: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -20.8750057220459
    4. '<|end|>' → logprob: -21.0000057220459
    5. '
' → logprob: -21.3750057220459
    6. '```' → logprob: -21.7500057220459
    7. ' ' → logprob: -22.3750057220459
    8. '１' → logprob: -22.5000057220459
    9. '0' → logprob: -22.7500057220459
    10. '۱' → logprob: -22.8125057220459

Token 501: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '
' → logprob: -22.125
    4. '2' → logprob: -22.5
    5. '   ' → logprob: -22.5
    6. '```' → logprob: -23.125
    7. '１' → logprob: -23.25
    8. '<|end|>' → logprob: -23.375
    9. ')' → logprob: -23.8125
    10. '۱' → logprob: -23.9375

Token 502: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37064456939697266
    2. 'print' → logprob: -1.2456445693969727
    3. '
' → logprob: -3.8706445693969727
    4. ' print' → logprob: -6.995644569396973
    5. '    
' → logprob: -9.120644569396973
    6. '
' → logprob: -10.995644569396973
    7. '	print' → logprob: -10.995644569396973
    8. '```' → logprob: -11.245644569396973
    9. '       ' → logprob: -11.870644569396973
    10. '  
' → logprob: -11.870644569396973

Token 503: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4829240143299103
    2. 'print' → logprob: -1.232923984527588
    3. '
' → logprob: -2.482923984527588
    4. ' print' → logprob: -4.857923984527588
    5. '    
' → logprob: -8.732924461364746
    6. ' 
' → logprob: -9.982924461364746
    7. '  
' → logprob: -10.107924461364746
    8. '```' → logprob: -10.732924461364746
    9. '
' → logprob: -11.232924461364746
    10. '	print' → logprob: -11.357924461364746

Token 504: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.13388703338569e-06
    2. '   ' → logprob: -12.500009536743164
    3. 'if' → logprob: -12.500009536743164
    4. ' print' → logprob: -13.500009536743164
    5. '```' → logprob: -16.000009536743164
    6. '
' → logprob: -16.750009536743164
    7. '    
' → logprob: -17.875009536743164
    8. 'printf' → logprob: -18.750009536743164
    9. 'for' → logprob: -19.000009536743164
    10. 'pr' → logprob: -19.125009536743164

Token 505: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.002476724097505212
    2. '(' → logprob: -6.002476692199707
    3. '()' → logprob: -15.127476692199707
    4. 'count' → logprob: -15.377476692199707
    5. '(cnt' → logprob: -15.877476692199707
    6. ' (' → logprob: -16.252477645874023
    7. '(c' → logprob: -16.252477645874023
    8. '(
' → logprob: -16.752477645874023
    9. '('' → logprob: -16.877477645874023
    10. '((' → logprob: -17.002477645874023

Token 506: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. '())' → logprob: -13.000003814697266
    3. '()' → logprob: -14.125003814697266
    4. ')`' → logprob: -16.000003814697266
    5. '(' → logprob: -16.250003814697266
    6. ' )' → logprob: -16.625003814697266
    7. '))' → logprob: -16.875003814697266
    8. '`)' → logprob: -19.250003814697266
    9. ')")' → logprob: -19.750003814697266
    10. '')' → logprob: -19.750003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 504
Tokens correctement prédits (1ère position, stricte): 212
Tokens correctement prédits (1ère position, avec adaptation): 226
Tokens correctement prédits (top 10): 439
Précision stricte (1ère position): 42.06%
Précision adaptée (1ère position): 44.84%
Précision (top 10): 87.10%
================================================================================
