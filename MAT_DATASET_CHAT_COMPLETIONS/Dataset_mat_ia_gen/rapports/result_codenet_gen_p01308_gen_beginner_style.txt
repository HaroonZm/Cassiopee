================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

note_list = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B']

def note_up(n):
    return note_list[(note_list.index(n)+1)%12]

def note_down(n):
    return note_list[(note_list.index(n)-1)%12]

# k段にいる時に、i段に行く時に鳴る音を求める
def get_sound(k, i, T):
    if i == len(T)+1: # n+1段目(地上)に行くとき
        return T[i-1] 
    elif i > k:
        if i == k+1:
            return T[i-1]
        else: # i == k+2
            return note_up(T[i-1])
    else: # i == k-1 (戻る)
        return note_down(T[i-1])

def solve(n, m, T, S):
    # 0段目(雲)からスタート、m曲の順番通りに音を出したらn+1段目(地上)に降りる
    # kは現在の段数(0~n+1)
    # idxは現在までに出した曲の長さ
    from collections import deque
    queue = deque()
    queue.append((0,0))
    visited = set()
    visited.add((0,0))
    while queue:
        k, idx = queue.popleft()
        if idx == m and k == n+1:
            return "Yes"
        # 動ける段の候補
        candidates = []
        if k > 0: candidates.append(k-1)
        if k < n+1: candidates.append(k+1)
        if k < n : candidates.append(k+2)
        for i in candidates:
            if i < 0 or i > n+1:
                continue
            if k == 0 and i == 0:
                continue
            if k == 0 and i == 0:
                continue
            sound = get_sound(k, i, T)
            if idx == m:
                # 曲は全部終わってるから次は降りれる段だけ(つまりn+1段目)
                if i == n+1:
                    if (i, idx) not in visited:
                        visited.add((i, idx))
                        queue.append((i, idx))
                continue
            # 次の音の候補が曲の次の音と合っていたら
            if idx < m and sound == S[idx]:
                if (i, idx+1) not in visited:
                    # 雲には戻れない
                    if not (i == 0 and k != 0):
                        visited.add((i, idx+1))
                        queue.append((i, idx+1))
    return "No"

input_lines = sys.stdin.read().splitlines()
t = int(input_lines[0])
pos = 1
for _ in range(t):
    n, m = map(int, input_lines[pos].split())
    pos += 1
    T = input_lines[pos].split()
    pos += 1
    S = input_lines[pos].split()
    pos += 1
    print(solve(n,m,T,S))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001657565007917583
    2. ' .' → logprob: -9.125165939331055
    3. '.import' → logprob: -11.625165939331055
    4. '.readline' → logprob: -12.000165939331055
    5. '.exit' → logprob: -12.625165939331055
    6. '.​' → logprob: -12.625165939331055
    7. '.user' → logprob: -12.750165939331055
    8. '​.' → logprob: -13.000165939331055
    9. '.stdout' → logprob: -13.125165939331055
    10. '.print' → logprob: -13.125165939331055

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5776441097259521
    2. '_trace' → logprob: -1.3276441097259521
    3. ' _' → logprob: -2.702644109725952
    4. '_version' → logprob: -3.577644109725952
    5. '_soft' → logprob: -4.577644348144531
    6. '_exc' → logprob: -4.702644348144531
    7. '_encoding' → logprob: -5.702644348144531
    8. '_ex' → logprob: -5.702644348144531
    9. '_exception' → logprob: -5.702644348144531
    10. '_default' → logprob: -5.827644348144531

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037415295373648405
    2. 'ursive' → logprob: -6.37874174118042
    3. 'limit' → logprob: -7.00374174118042
    4. 'ur' → logprob: -7.50374174118042
    5. 'urse' → logprob: -9.253741264343262
    6. '_limit' → logprob: -9.628741264343262
    7. 'urs' → logprob: -9.628741264343262
    8. 'ut' → logprob: -9.753741264343262
    9. 'u' → logprob: -10.003741264343262
    10. 't' → logprob: -10.128741264343262

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.015034139156341553
    2. '_limit' → logprob: -4.390034198760986
    3. 'depth' → logprob: -6.515034198760986
    4. '_depth' → logprob: -7.515034198760986
    5. '(' → logprob: -8.390033721923828
    6. ' limit' → logprob: -9.265033721923828
    7. 'error' → logprob: -10.390033721923828
    8. '(limit' → logprob: -10.640033721923828
    9. 'lim' → logprob: -11.140033721923828
    10. '('' → logprob: -11.390033721923828

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12741151452064514
    2. '100' → logprob: -2.1274116039276123
    3. ' ' → logprob: -8.002411842346191
    4. '500' → logprob: -9.752411842346191
    5. '300' → logprob: -9.877411842346191
    6. '250' → logprob: -10.752411842346191
    7. '  ' → logprob: -12.252411842346191
    8. '   ' → logprob: -12.502411842346191
    9. '200' → logprob: -12.877411842346191
    10. '150' → logprob: -13.127411842346191

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006857931148260832
    2. '000' → logprob: -5.756857872009277
    3. '00' → logprob: -5.881857872009277
    4. '4' → logprob: -7.256857872009277
    5. '6' → logprob: -8.881857872009277
    6. '5' → logprob: -11.506857872009277
    7. '```' → logprob: -12.006857872009277
    8. ')' → logprob: -12.256857872009277
    9. '3' → logprob: -12.381857872009277
    10. '**' → logprob: -12.381857872009277

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'note' (ID: 19320)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31000658869743347
    2. '
' → logprob: -2.060006618499756
    3. '\' → logprob: -2.935006618499756
    4. '```' → logprob: -2.935006618499756
    5. '\n' → logprob: -4.560006618499756
    6. '`' → logprob: -5.560006618499756
    7. ')' → logprob: -5.685006618499756
    8. '
' → logprob: -5.935006618499756
    9. '#' → logprob: -6.060006618499756
    10. '' → logprob: -6.185006618499756

Token 14: '_list' (ID: 4162)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0151896476745605
    2. 's' → logprob: -1.0151896476745605
    3. ' =' → logprob: -2.0151896476745605
    4. '.' → logprob: -2.7651896476745605
    5. '=' → logprob: -3.1401896476745605
    6. '[' → logprob: -3.7651896476745605
    7. '[:]' → logprob: -5.7651896476745605
    8. '(' → logprob: -6.3901896476745605
    9. ' ' → logprob: -6.5151896476745605
    10. ''s' → logprob: -6.8901896476745605

Token 15: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08415006846189499
    2. '.' → logprob: -2.7091500759124756
    3. '=' → logprob: -5.0841498374938965
    4. '[:]' → logprob: -5.4591498374938965
    5. ' =' → logprob: -6.5841498374938965
    6. '_' → logprob: -6.9591498374938965
    7. ')' → logprob: -8.334150314331055
    8. '[n' → logprob: -8.584150314331055
    9. '```' → logprob: -9.084150314331055
    10. '.append' → logprob: -9.459150314331055

Token 16: ' ['' (ID: 5140)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.0719141736626625
    2. '[]' → logprob: -2.8219141960144043
    3. ' [' → logprob: -4.821914196014404
    4. '[' → logprob: -6.321914196014404
    5. ' ' → logprob: -10.946913719177246
    6. ' [[]' → logprob: -11.821913719177246
    7. '[:]' → logprob: -12.196913719177246
    8. '[int' → logprob: -12.696913719177246
    9. ' ['' → logprob: -13.071913719177246
    10. '[input' → logprob: -13.446913719177246

Token 17: 'C' (ID: 34)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1865628957748413
    2. 'A' → logprob: -2.061563014984131
    3. 'C' → logprob: -2.186563014984131
    4. '1' → logprob: -2.311563014984131
    5. '0' → logprob: -2.436563014984131
    6. '3' → logprob: -2.936563014984131
    7. '4' → logprob: -3.311563014984131
    8. '7' → logprob: -3.811563014984131
    9. '100' → logprob: -3.936563014984131
    10. '5' → logprob: -4.061563014984131

Token 18: '',' (ID: 787)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05133811756968498
    2. '4' → logprob: -3.4263381958007812
    3. '']' → logprob: -4.926338195800781
    4. '',' → logprob: -5.051338195800781
    5. '0' → logprob: -7.051338195800781
    6. ' ']' → logprob: -7.051338195800781
    7. ''' → logprob: -7.301338195800781
    8. ' ',' → logprob: -8.051338195800781
    9. '5' → logprob: -8.426338195800781
    10. '_' → logprob: -8.676338195800781

Token 19: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16303855180740356
    2. ''D' → logprob: -2.413038492202759
    3. ' '' → logprob: -2.913038492202759
    4. ''C' → logprob: -5.913038730621338
    5. ''A' → logprob: -6.288038730621338
    6. ''E' → logprob: -6.413038730621338
    7. ''d' → logprob: -8.91303825378418
    8. '"' → logprob: -10.03803825378418
    9. ' D' → logprob: -10.53803825378418
    10. ''S' → logprob: -10.91303825378418

Token 20: 'C' (ID: 34)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.30742505192756653
    2. '#' → logprob: -1.6824250221252441
    3. ' D' → logprob: -3.432425022125244
    4. 'G' → logprob: -3.932425022125244
    5. 'C' → logprob: -4.432425022125244
    6. ''' → logprob: -5.057425022125244
    7. ' G' → logprob: -5.807425022125244
    8. 'E' → logprob: -6.432425022125244
    9. ' C' → logprob: -7.307425022125244
    10. 'A' → logprob: -7.307425022125244

Token 21: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0802738870552275e-05
    2. '\xe2\x99' → logprob: -11.62501049041748
    3. 's' → logprob: -14.00001049041748
    4. '#",' → logprob: -14.50001049041748
    5. ' ',' → logprob: -16.375011444091797
    6. 'b' → logprob: -16.625011444091797
    7. ' '' → logprob: -16.875011444091797
    8. 'sharp' → logprob: -17.000011444091797
    9. '']' → logprob: -17.250011444091797
    10. '7' → logprob: -17.375011444091797

Token 22: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.11001720279455185
    2. '7' → logprob: -2.7350172996520996
    3. '#' → logprob: -3.8600172996520996
    4. ''' → logprob: -4.8600172996521
    5. '']' → logprob: -5.2350172996521
    6. '','' → logprob: -6.1100172996521
    7. ' ',' → logprob: -6.3600172996521
    8. '4' → logprob: -7.8600172996521
    9. 'b' → logprob: -8.110016822814941
    10. '\xe2\x99' → logprob: -9.610016822814941

Token 23: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1103665679693222
    2. ' '' → logprob: -2.4853665828704834
    3. ''D' → logprob: -4.360366344451904
    4. ' D' → logprob: -5.110366344451904
    5. ' ' → logprob: -7.485366344451904
    6. '`' → logprob: -7.985366344451904
    7. 'space' → logprob: -8.110366821289062
    8. '<|end|>' → logprob: -8.735366821289062
    9. '[' → logprob: -8.860366821289062
    10. '"' → logprob: -8.860366821289062

Token 24: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0007461408386006951
    2. 'Db' → logprob: -7.375746250152588
    3. ' D' → logprob: -9.12574577331543
    4. ''D' → logprob: -12.87574577331543
    5. ''' → logprob: -13.37574577331543
    6. 'DB' → logprob: -13.87574577331543
    7. ' Db' → logprob: -14.00074577331543
    8. 'Dm' → logprob: -14.25074577331543
    9. '7' → logprob: -14.37574577331543
    10. 'C' → logprob: -14.62574577331543

Token 25: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.021122736856341362
    2. '#' → logprob: -4.146122932434082
    3. ''' → logprob: -5.771122932434082
    4. '']' → logprob: -6.396122932434082
    5. ' ',' → logprob: -9.146122932434082
    6. '','' → logprob: -10.271122932434082
    7. ',' → logprob: -10.646122932434082
    8. '','#' → logprob: -10.646122932434082
    9. '',
' → logprob: -10.771122932434082
    10. '',
' → logprob: -10.896122932434082

Token 26: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.40766966342926025
    2. ''' → logprob: -1.2826696634292603
    3. ''E' → logprob: -3.6576695442199707
    4. ' ' → logprob: -4.407669544219971
    5. '<|end|>' → logprob: -4.782669544219971
    6. ' E' → logprob: -5.032669544219971
    7. ''D' → logprob: -5.907669544219971
    8. ' D' → logprob: -7.157669544219971
    9. '<|end|>' → logprob: -8.157670021057129
    10. 'E' → logprob: -8.407670021057129

Token 27: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0005066845333203673
    2. ' D' → logprob: -7.62550687789917
    3. ''D' → logprob: -11.500506401062012
    4. ''' → logprob: -12.000506401062012
    5. 'Eb' → logprob: -13.625506401062012
    6. 'Df' → logprob: -15.625506401062012
    7. 'E' → logprob: -15.625506401062012
    8. ' ' → logprob: -15.875506401062012
    9. ' '' → logprob: -16.125507354736328
    10. 'Db' → logprob: -16.375507354736328

Token 28: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -8.2994620242971e-06
    2. ''#' → logprob: -12.375008583068848
    3. '#,' → logprob: -13.250008583068848
    4. '﻿#' → logprob: -13.875008583068848
    5. '','#' → logprob: -15.375008583068848
    6. '<|end|>' → logprob: -15.500008583068848
    7. '#
' → logprob: -15.750008583068848
    8. ' #' → logprob: -16.25000762939453
    9. '#
' → logprob: -16.50000762939453
    10. '7' → logprob: -16.50000762939453

Token 29: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00072851701406762
    2. ''' → logprob: -7.375728607177734
    3. ',' → logprob: -10.375728607177734
    4. '','' → logprob: -10.500728607177734
    5. '''' → logprob: -11.375728607177734
    6. ''E' → logprob: -12.000728607177734
    7. 'E' → logprob: -12.000728607177734
    8. '']' → logprob: -12.250728607177734
    9. '#' → logprob: -13.000728607177734
    10. '',
' → logprob: -13.125728607177734

Token 30: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.541096031665802
    2. ''E' → logprob: -0.916096031665802
    3. ''' → logprob: -4.291096210479736
    4. ' E' → logprob: -5.666096210479736
    5. 'E' → logprob: -7.916096210479736
    6. ' ' → logprob: -9.541095733642578
    7. ''É' → logprob: -9.666095733642578
    8. '’E' → logprob: -10.041095733642578
    9. '`' → logprob: -10.666095733642578
    10. '"E' → logprob: -10.916095733642578

Token 31: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -3.833878508885391e-05
    2. 'F' → logprob: -10.250038146972656
    3. ''E' → logprob: -13.375038146972656
    4. ''' → logprob: -14.000038146972656
    5. ' E' → logprob: -15.125038146972656
    6. 'Eb' → logprob: -15.875038146972656
    7. 'D' → logprob: -17.250038146972656
    8. '')' → logprob: -17.625038146972656
    9. 'A' → logprob: -17.750038146972656
    10. 'EB' → logprob: -18.125038146972656

Token 32: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.002926114946603775
    2. '']' → logprob: -6.002926349639893
    3. ''' → logprob: -7.752926349639893
    4. '#' → logprob: -11.502925872802734
    5. '',
' → logprob: -12.752925872802734
    6. '','' → logprob: -13.377925872802734
    7. '',
' → logprob: -13.877925872802734
    8. '''' → logprob: -13.877925872802734
    9. ' ',' → logprob: -14.127925872802734
    10. '')' → logprob: -14.127925872802734

Token 33: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20226459205150604
    2. ' '' → logprob: -1.7022645473480225
    3. 'F' → logprob: -7.202264785766602
    4. ' ' → logprob: -10.202264785766602
    5. ' F' → logprob: -10.827264785766602
    6. ''S' → logprob: -11.702264785766602
    7. '"' → logprob: -11.827264785766602
    8. '`' → logprob: -12.327264785766602
    9. ''E' → logprob: -12.452264785766602
    10. ''A' → logprob: -12.452264785766602

Token 34: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -1.0802738870552275e-05
    2. ''' → logprob: -11.50001049041748
    3. ' F' → logprob: -14.50001049041748
    4. ',F' → logprob: -18.125011444091797
    5. 'E' → logprob: -18.250011444091797
    6. '_F' → logprob: -18.375011444091797
    7. ')' → logprob: -18.750011444091797
    8. '`' → logprob: -18.750011444091797
    9. ''''' → logprob: -18.750011444091797
    10. '')' → logprob: -18.812511444091797

Token 35: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0062727597542107105
    2. ',' → logprob: -6.006272792816162
    3. ''' → logprob: -6.381272792816162
    4. '#' → logprob: -6.756272792816162
    5. '']' → logprob: -7.256272792816162
    6. ']' → logprob: -9.006272315979004
    7. '','' → logprob: -10.506272315979004
    8. '`,' → logprob: -10.881272315979004
    9. ' ',' → logprob: -11.631272315979004
    10. ''',' → logprob: -11.631272315979004

Token 36: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10041435062885284
    2. ' '' → logprob: -2.350414276123047
    3. ''S' → logprob: -9.725414276123047
    4. '<|end|>' → logprob: -10.100414276123047
    5. ''GC' → logprob: -10.600414276123047
    6. ' ' → logprob: -10.850414276123047
    7. '`' → logprob: -11.225414276123047
    8. 'F' → logprob: -11.225414276123047
    9. ' 
' → logprob: -12.100414276123047
    10. ''A' → logprob: -12.725414276123047

Token 37: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -1.5213274309644476e-05
    2. ''' → logprob: -11.125015258789062
    3. ' F' → logprob: -14.875015258789062
    4. ''f' → logprob: -17.125015258789062
    5. ' '' → logprob: -18.250015258789062
    6. '')' → logprob: -18.375015258789062
    7. ''''' → logprob: -18.500015258789062
    8. '<|end|>' → logprob: -18.625015258789062
    9. '['' → logprob: -19.000015258789062
    10. '<F' → logprob: -19.125015258789062

Token 38: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -6.869017852295656e-06
    2. '#,' → logprob: -12.625006675720215
    3. ''#' → logprob: -12.625006675720215
    4. '#
' → logprob: -16.37500762939453
    5. '#
' → logprob: -17.00000762939453
    6. ''' → logprob: -17.12500762939453
    7. '','#' → logprob: -17.75000762939453
    8. '#",' → logprob: -17.75000762939453
    9. '﻿#' → logprob: -18.00000762939453
    10. '#"' → logprob: -18.25000762939453

Token 39: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0031205564737319946
    2. ''' → logprob: -6.003120422363281
    3. '']' → logprob: -8.128120422363281
    4. ',' → logprob: -8.253120422363281
    5. ']' → logprob: -10.503120422363281
    6. '','' → logprob: -10.503120422363281
    7. ')' → logprob: -11.753120422363281
    8. 'G' → logprob: -12.128120422363281
    9. '')' → logprob: -12.253120422363281
    10. '''' → logprob: -13.128120422363281

Token 40: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14780883491039276
    2. ' '' → logprob: -2.022808790206909
    3. 'G' → logprob: -5.397809028625488
    4. ' G' → logprob: -7.647809028625488
    5. ' ' → logprob: -10.272809028625488
    6. ''GC' → logprob: -10.647809028625488
    7. ''S' → logprob: -10.772809028625488
    8. '"G' → logprob: -11.647809028625488
    9. '<G' → logprob: -11.897809028625488
    10. ' ' → logprob: -12.772809028625488

Token 41: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.7432603272027336e-06
    2. 'F' → logprob: -14.000001907348633
    3. ''' → logprob: -14.500001907348633
    4. ' G' → logprob: -15.125001907348633
    5. '')' → logprob: -18.125001907348633
    6. '"G' → logprob: -18.125001907348633
    7. '#' → logprob: -18.250001907348633
    8. 'Gb' → logprob: -18.375001907348633
    9. '_G' → logprob: -18.375001907348633
    10. ',G' → logprob: -18.500001907348633

Token 42: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0008589350618422031
    2. ''' → logprob: -7.750858783721924
    3. '']' → logprob: -8.125859260559082
    4. '#' → logprob: -9.000859260559082
    5. '','' → logprob: -12.750859260559082
    6. '')' → logprob: -13.625859260559082
    7. ']' → logprob: -13.750859260559082
    8. ',' → logprob: -14.125859260559082
    9. '','#' → logprob: -14.375859260559082
    10. '''' → logprob: -14.750859260559082

Token 43: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.41409212350845337
    2. ' '' → logprob: -1.6640920639038086
    3. ''A' → logprob: -1.9140920639038086
    4. 'A' → logprob: -6.664092063903809
    5. ' A' → logprob: -7.289092063903809
    6. ' ' → logprob: -10.039092063903809
    7. ' G' → logprob: -10.289092063903809
    8. '`' → logprob: -10.539092063903809
    9. 'G' → logprob: -10.664092063903809
    10. ''a' → logprob: -10.914092063903809

Token 44: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -5.676981345459353e-06
    2. ' G' → logprob: -12.375005722045898
    3. ''' → logprob: -13.875005722045898
    4. 'A' → logprob: -15.625005722045898
    5. '#' → logprob: -16.0000057220459
    6. ''''' → logprob: -17.2500057220459
    7. 'a' → logprob: -17.8750057220459
    8. '

' → logprob: -17.8750057220459
    9. '''' → logprob: -17.8750057220459
    10. '')' → logprob: -18.6250057220459

Token 45: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -8.196732960641384e-05
    2. '',' → logprob: -10.375082015991211
    3. ''#' → logprob: -10.625082015991211
    4. '#,' → logprob: -11.500082015991211
    5. ''' → logprob: -11.625082015991211
    6. '','#' → logprob: -12.375082015991211
    7. '<|end|>' → logprob: -14.250082015991211
    8. '﻿#' → logprob: -15.000082015991211
    9. '#",' → logprob: -15.000082015991211
    10. ',' → logprob: -15.125082015991211

Token 46: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00047714399988763034
    2. ''' → logprob: -7.875477313995361
    3. '']' → logprob: -9.375476837158203
    4. ']' → logprob: -12.750476837158203
    5. ']',' → logprob: -12.750476837158203
    6. ',' → logprob: -13.000476837158203
    7. '','' → logprob: -13.625476837158203
    8. '',
' → logprob: -14.500476837158203
    9. ')' → logprob: -14.625476837158203
    10. '')' → logprob: -14.750476837158203

Token 47: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.5611492991447449
    2. ' '' → logprob: -1.3111493587493896
    3. 'A' → logprob: -2.0611493587493896
    4. ' A' → logprob: -3.5611493587493896
    5. ''' → logprob: -5.8111491203308105
    6. ' ' → logprob: -7.1861491203308105
    7. '`' → logprob: -8.936149597167969
    8. '"A' → logprob: -9.686149597167969
    9. '’A' → logprob: -10.186149597167969
    10. ')' → logprob: -10.436149597167969

Token 48: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0046249874867498875
    2. 'G' → logprob: -5.379624843597412
    3. ' A' → logprob: -12.87962532043457
    4. 'a' → logprob: -13.37962532043457
    5. ''A' → logprob: -15.62962532043457
    6. 'Ab' → logprob: -17.00462532043457
    7. ''' → logprob: -17.31712532043457
    8. '_A' → logprob: -17.37962532043457
    9. ' G' → logprob: -17.44212532043457
    10. '#' → logprob: -17.75462532043457

Token 49: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0038115920033305883
    2. ''' → logprob: -5.753811359405518
    3. '#' → logprob: -8.003811836242676
    4. '']' → logprob: -8.378811836242676
    5. '')' → logprob: -11.253811836242676
    6. ',' → logprob: -11.503811836242676
    7. '''' → logprob: -11.628811836242676
    8. '','' → logprob: -11.628811836242676
    9. ']' → logprob: -12.128811836242676
    10. ' ',' → logprob: -12.253811836242676

Token 50: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.7439401745796204
    2. ' '' → logprob: -0.9939401745796204
    3. ''' → logprob: -1.9939401149749756
    4. ' A' → logprob: -4.368940353393555
    5. 'A' → logprob: -5.493940353393555
    6. ' ' → logprob: -6.868940353393555
    7. '"A' → logprob: -9.243940353393555
    8. '`' → logprob: -9.243940353393555
    9. ')' → logprob: -9.368940353393555
    10. ' B' → logprob: -9.493940353393555

Token 51: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.6240566083070007e-06
    2. ' A' → logprob: -13.625001907348633
    3. 'B' → logprob: -15.250001907348633
    4. ''A' → logprob: -16.375001907348633
    5. 'a' → logprob: -17.750001907348633
    6. 'Ａ' → logprob: -19.000001907348633
    7. '	A' → logprob: -19.625001907348633
    8. '"A' → logprob: -19.625001907348633
    9. '#' → logprob: -19.750001907348633
    10. 'G' → logprob: -19.875001907348633

Token 52: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1875571544806007e-05
    2. '<|end|>' → logprob: -11.500011444091797
    3. '#,' → logprob: -13.875011444091797
    4. '#
' → logprob: -15.000011444091797
    5. ',' → logprob: -16.000011444091797
    6. ' #' → logprob: -16.500011444091797
    7. '<|end|>' → logprob: -16.625011444091797
    8. '﻿#' → logprob: -17.375011444091797
    9. '#/' → logprob: -17.625011444091797
    10. '#

' → logprob: -17.750011444091797

Token 53: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.017135541886091232
    2. ''' → logprob: -4.5171356201171875
    3. '']' → logprob: -5.1421356201171875
    4. ']' → logprob: -9.267135620117188
    5. '','' → logprob: -10.517135620117188
    6. ']',' → logprob: -10.767135620117188
    7. '''' → logprob: -11.017135620117188
    8. ',' → logprob: -11.392135620117188
    9. '')' → logprob: -11.392135620117188
    10. '<|end|>' → logprob: -12.267135620117188

Token 54: ' '' (ID: 461)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.09499615430831909
    2. ''' → logprob: -3.219996213912964
    3. ' B' → logprob: -3.219996213912964
    4. ' '' → logprob: -4.594995975494385
    5. '"B' → logprob: -7.969995975494385
    6. ' ' → logprob: -8.969996452331543
    7. ')' → logprob: -10.344996452331543
    8. '`' → logprob: -10.594996452331543
    9. ' ' → logprob: -11.219996452331543
    10. ' 
' → logprob: -11.719996452331543

Token 55: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.1008713702030946e-06
    2. 'H' → logprob: -13.625001907348633
    3. ' B' → logprob: -14.750001907348633
    4. '')' → logprob: -16.625001907348633
    5. 'Bb' → logprob: -16.625001907348633
    6. ''' → logprob: -16.750001907348633
    7. 'b' → logprob: -17.000001907348633
    8. '```' → logprob: -17.125001907348633
    9. ')' → logprob: -17.625001907348633
    10. 'A' → logprob: -17.750001907348633

Token 56: '']

' (ID: 36979)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.00010533124441280961
    2. ']' → logprob: -9.375104904174805
    3. ''' → logprob: -10.875104904174805
    4. '"]' → logprob: -14.125104904174805
    5. '']
' → logprob: -15.250104904174805
    6. '```' → logprob: -15.625104904174805
    7. '']

' → logprob: -16.250104904174805
    8. ' ']' → logprob: -16.500104904174805
    9. '')' → logprob: -16.625104904174805
    10. '`]' → logprob: -16.750104904174805

Token 57: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009632128290832043
    2. '#' → logprob: -5.759632110595703
    3. 'n' → logprob: -6.384632110595703
    4. 'd' → logprob: -7.134632110595703
    5. '```' → logprob: -7.384632110595703
    6. 'a' → logprob: -7.884632110595703
    7. ':' → logprob: -8.009632110595703
    8. 'de' → logprob: -8.134632110595703
    9. 'A' → logprob: -8.509632110595703
    10. '[' → logprob: -8.509632110595703

Token 58: ' note' (ID: 7477)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46268945932388306
    2. ' find' → logprob: -1.7126893997192383
    3. ' get' → logprob: -2.8376893997192383
    4. ' calculate' → logprob: -3.0876893997192383
    5. ' play' → logprob: -4.337689399719238
    6. ' check' → logprob: -4.587689399719238
    7. ' is' → logprob: -4.837689399719238
    8. ' trans' → logprob: -5.087689399719238
    9. ' scale' → logprob: -5.212689399719238
    10. '_' → logprob: -5.212689399719238

Token 59: '_up' (ID: 18721)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.40522751212120056
    2. '_name' → logprob: -1.905227541923523
    3. '_' → logprob: -2.5302274227142334
    4. '_sequence' → logprob: -3.1552274227142334
    5. '_list' → logprob: -4.4052276611328125
    6. '(' → logprob: -5.1552276611328125
    7. '_distance' → logprob: -5.1552276611328125
    8. '_scale' → logprob: -5.5302276611328125
    9. '_from' → logprob: -5.9052276611328125
    10. ')' → logprob: -6.1552276611328125

Token 60: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04970311000943184
    2. '(note' → logprob: -3.4247031211853027
    3. '(n' → logprob: -4.174703121185303
    4. ' (' → logprob: -8.674702644348145
    5. '(token' → logprob: -10.049702644348145
    6. '("("' → logprob: -10.424702644348145
    7. '('' → logprob: -10.549702644348145
    8. '(i' → logprob: -10.799702644348145
    9. '(parent' → logprob: -10.799702644348145
    10. '(Note' → logprob: -10.799702644348145

Token 61: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6682681441307068
    2. '):' → logprob: -0.7932681441307068
    3. ')' → logprob: -3.6682682037353516
    4. 'ote' → logprob: -5.793268203735352
    5. 'um' → logprob: -5.918268203735352
    6. 'ot' → logprob: -7.043268203735352
    7. ':' → logprob: -7.168268203735352
    8. '):
' → logprob: -7.168268203735352
    9. 'umber' → logprob: -7.918268203735352
    10. 'otes' → logprob: -8.293268203735352

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005654182750731707
    2. ' return' → logprob: -5.380654335021973
    3. '    ' → logprob: -7.505654335021973
    4. ' ' → logprob: -8.505654335021973
    5. '  ' → logprob: -9.755654335021973
    6. ':' → logprob: -9.755654335021973
    7. 'return' → logprob: -9.755654335021973
    8. '   ' → logprob: -9.880654335021973
    9. ' n' → logprob: -11.505654335021973
    10. '   ' → logprob: -12.005654335021973

Token 63: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.013177761808037758
    2. 'return' (adapté à ' return') → logprob: -4.513177871704102
    3. '   ' → logprob: -6.263177871704102
    4. ' n' → logprob: -8.638177871704102
    5. 'n' → logprob: -10.763177871704102
    6. '    ' → logprob: -11.513177871704102
    7. ' ' → logprob: -12.888177871704102
    8. '```' → logprob: -13.013177871704102
    9. ' 
' → logprob: -13.138177871704102
    10. '   ' → logprob: -13.388177871704102

Token 64: ' note' (ID: 7477)
  Prédit: ' note'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' note' → logprob: -0.010756916366517544
    2. 'note' → logprob: -4.635756969451904
    3. '(note' → logprob: -7.385756969451904
    4. ' n' → logprob: -8.510756492614746
    5. ' (' → logprob: -8.885756492614746
    6. 'n' → logprob: -10.885756492614746
    7. ' ' → logprob: -12.010756492614746
    8. ' ' → logprob: -13.010756492614746
    9. ' not' → logprob: -13.010756492614746
    10. ' f' → logprob: -13.135756492614746

Token 65: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.537868779967539e-06
    2. 's' → logprob: -12.625008583068848
    3. '_up' → logprob: -12.625008583068848
    4. '_' → logprob: -14.000008583068848
    5. 'list' → logprob: -14.875008583068848
    6. '```' → logprob: -15.500008583068848
    7. '_lst' → logprob: -16.62500762939453
    8. '_note' → logprob: -16.87500762939453
    9. '##_' → logprob: -17.00000762939453
    10. '_lista' → logprob: -17.12500762939453

Token 66: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.1603119671344757
    2. '[n' → logprob: -1.9103119373321533
    3. '(n' → logprob: -10.035311698913574
    4. '[' → logprob: -10.160311698913574
    5. '[
' → logprob: -13.410311698913574
    6. ' [(' → logprob: -13.410311698913574
    7. ' (' → logprob: -14.160311698913574
    8. '[((' → logprob: -14.410311698913574
    9. 'n' → logprob: -15.160311698913574
    10. '   ' → logprob: -15.410311698913574

Token 67: 'note' (ID: 19320)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008791008032858372
    2. 'note' → logprob: -5.008790969848633
    3. ' n' → logprob: -6.633790969848633
    4. ' note' → logprob: -7.383790969848633
    5. '(note' → logprob: -9.508790969848633
    6. ')n' → logprob: -10.633790969848633
    7. '(n' → logprob: -11.258790969848633
    8. ')' → logprob: -11.883790969848633
    9. ' (' → logprob: -12.758790969848633
    10. '(' → logprob: -13.071290969848633

Token 68: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.007340872660279274
    2. '_up' → logprob: -5.007340908050537
    3. 'n' → logprob: -8.382340431213379
    4. 'list' → logprob: -8.507340431213379
    5. '+' → logprob: -9.507340431213379
    6. 'up' → logprob: -10.257340431213379
    7. '   ' → logprob: -11.382340431213379
    8. 's' → logprob: -11.757340431213379
    9. 'List' → logprob: -11.882340431213379
    10. ' ' → logprob: -11.882340431213379

Token 69: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -9.150362166110426e-05
    2. '.' → logprob: -9.875091552734375
    3. 'index' → logprob: -10.750091552734375
    4. ' .' → logprob: -11.000091552734375
    5. ').' → logprob: -13.750091552734375
    6. ' index' → logprob: -15.500091552734375
    7. '.Index' → logprob: -15.500091552734375
    8. '_index' → logprob: -16.250091552734375
    9. 'n' → logprob: -16.375091552734375
    10. '.n' → logprob: -16.625091552734375

Token 70: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009749477612785995
    2. '(' → logprob: -7.000975131988525
    3. '(note' → logprob: -9.875974655151367
    4. '('' → logprob: -11.875974655151367
    5. '((' → logprob: -13.125974655151367
    6. ' (' → logprob: -13.750974655151367
    7. ')' → logprob: -14.625974655151367
    8. '(
' → logprob: -14.875974655151367
    9. 'n' → logprob: -15.250974655151367
    10. ')n' → logprob: -15.250974655151367

Token 71: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003179855877533555
    2. ')+' → logprob: -5.753180027008057
    3. ' )' → logprob: -13.253179550170898
    4. '+' → logprob: -15.503179550170898
    5. ')+(' → logprob: -16.8781795501709
    6. ' +' → logprob: -17.0031795501709
    7. '）' → logprob: -17.6281795501709
    8. '')' → logprob: -17.6281795501709
    9. ' ' → logprob: -17.6281795501709
    10. ')
' → logprob: -17.8781795501709

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005547016044147313
    2. ' ' → logprob: -7.50055456161499
    3. '7' → logprob: -14.375555038452148
    4. '12' → logprob: -14.750555038452148
    5. ')' → logprob: -14.875555038452148
    6. '3' → logprob: -16.12555503845215
    7. '```' → logprob: -16.12555503845215
    8. '4' → logprob: -16.43805503845215
    9. '2' → logprob: -17.00055503845215
    10. '   ' → logprob: -17.12555503845215

Token 73: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018153805285692215
    2. ')%' → logprob: -4.018153667449951
    3. ' )' → logprob: -12.89315414428711
    4. ')]' → logprob: -14.01815414428711
    5. '%' → logprob: -15.64315414428711
    6. '）' → logprob: -16.39315414428711
    7. ')
' → logprob: -16.89315414428711
    8. ']' → logprob: -17.14315414428711
    9. ')`' → logprob: -17.14315414428711
    10. '))' → logprob: -17.26815414428711

Token 74: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.04871556535363197
    2. 'len' → logprob: -3.048715591430664
    3. ' len' → logprob: -9.048715591430664
    4. ' ' → logprob: -11.548715591430664
    5. '(len' → logprob: -14.298715591430664
    6. '```' → logprob: -15.548715591430664
    7. 'length' → logprob: -17.548715591430664
    8. '[len' → logprob: -18.048715591430664
    9. '=len' → logprob: -18.173715591430664
    10. '`' → logprob: -18.298715591430664

Token 75: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38769710063934326
    2. ']' → logprob: -1.1376971006393433
    3. ')]' → logprob: -7.387697219848633
    4. '])' → logprob: -8.762697219848633
    5. ' )' → logprob: -11.262697219848633
    6. ' ]' → logprob: -11.637697219848633
    7. '）' → logprob: -11.637697219848633
    8. '}' → logprob: -11.762697219848633
    9. ')
' → logprob: -12.637697219848633
    10. '']' → logprob: -13.137697219848633

Token 76: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0323457196354866
    2. '#' → logprob: -4.407345771789551
    3. '<|end|>' → logprob: -4.657345771789551
    4. 'n' → logprob: -5.657345771789551
    5. '
' → logprob: -6.282345771789551
    6. ')' → logprob: -6.407345771789551
    7. '```' → logprob: -6.907345771789551
    8. '\' → logprob: -7.282345771789551
    9. '\n' → logprob: -8.40734577178955
    10. 'newline' → logprob: -8.40734577178955

Token 77: ' note' (ID: 7477)
  Prédit: ' note'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' note' → logprob: -0.0063787791877985
    2. 'note' → logprob: -5.631378650665283
    3. '_note' → logprob: -6.131378650665283
    4. ' main' → logprob: -9.006379127502441
    5. '(note' → logprob: -9.256379127502441
    6. ' ' → logprob: -9.381379127502441
    7. '_' → logprob: -9.881379127502441
    8. ' n' → logprob: -10.131379127502441
    9. ' _' → logprob: -10.256379127502441
    10. ' user' → logprob: -11.006379127502441

Token 78: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -0.0006440493743866682
    2. '_up' → logprob: -7.625644207000732
    3. '_dn' → logprob: -10.250643730163574
    4. 'down' → logprob: -10.375643730163574
    5. '_to' → logprob: -10.625643730163574
    6. '_DOWN' → logprob: -11.000643730163574
    7. '_' → logprob: -11.125643730163574
    8. '_d' → logprob: -12.000643730163574
    9. '_list' → logprob: -12.125643730163574
    10. '_prev' → logprob: -13.125643730163574

Token 79: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00043591417488642037
    2. '(' → logprob: -7.750435829162598
    3. ' (' → logprob: -12.250435829162598
    4. '(note' → logprob: -15.500435829162598
    5. '(s' → logprob: -16.875436782836914
    6. '(N' → logprob: -17.875436782836914
    7. '(nn' → logprob: -18.000436782836914
    8. '(Note' → logprob: -18.375436782836914
    9. '(noun' → logprob: -18.625436782836914
    10. '("("' → logprob: -18.750436782836914

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010139751975657418
    2. ')' → logprob: -9.625101089477539
    3. '):
' → logprob: -10.375101089477539
    4. ' ):' → logprob: -12.625101089477539
    5. ':' → logprob: -15.000101089477539
    6. '(n' → logprob: -15.250101089477539
    7. '):
' → logprob: -16.37510108947754
    8. ' ' → logprob: -17.12510108947754
    9. '   ' → logprob: -17.12510108947754
    10. '):

' → logprob: -17.62510108947754

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5768090486526489
    2. ' return' → logprob: -1.076809048652649
    3. 'return' → logprob: -2.3268089294433594
    4. '	return' → logprob: -12.07680892944336
    5. ' ' → logprob: -12.45180892944336
    6. '```' → logprob: -12.45180892944336
    7. ')' → logprob: -12.82680892944336
    8. '    ' → logprob: -13.07680892944336
    9. '  ' → logprob: -13.20180892944336
    10. '   ' → logprob: -13.70180892944336

Token 82: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011088619939982891
    2. ' return' → logprob: -4.511088848114014
    3. '   ' → logprob: -10.136088371276855
    4. '```' → logprob: -14.636088371276855
    5. ' ' → logprob: -15.136088371276855
    6. 'note' → logprob: -15.761088371276855
    7. '`' → logprob: -16.136089324951172
    8. '	return' → logprob: -16.261089324951172
    9. '
' → logprob: -16.511089324951172
    10. 'index' → logprob: -16.886089324951172

Token 83: ' note' (ID: 7477)
  Prédit: ' note'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' note' → logprob: -0.08895287662744522
    2. 'note' → logprob: -2.4639527797698975
    3. '(note' → logprob: -11.338953018188477
    4. 'n' → logprob: -14.713953018188477
    5. ' ' → logprob: -15.088953018188477
    6. ' ' → logprob: -15.088953018188477
    7. '.note' → logprob: -15.963953018188477
    8. ' nota' → logprob: -16.213953018188477
    9. 'Note' → logprob: -16.213953018188477
    10. '_note' → logprob: -16.588953018188477

Token 84: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.8889261304575484e-06
    2. '_down' → logprob: -12.625003814697266
    3. 'list' → logprob: -14.625003814697266
    4. ''_' → logprob: -16.750003814697266
    5. 'List' → logprob: -17.625003814697266
    6. '[' → logprob: -17.750003814697266
    7. '_' → logprob: -18.250003814697266
    8. 'down' → logprob: -18.375003814697266
    9. '_up' → logprob: -18.500003814697266
    10. '['_' → logprob: -19.000003814697266

Token 85: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0037667090073227882
    2. '.index' → logprob: -5.7537665367126465
    3. '[' → logprob: -7.5037665367126465
    4. '[
' → logprob: -11.378767013549805
    5. '[n' → logprob: -11.628767013549805
    6. 'index' → logprob: -11.753767013549805
    7. '[((' → logprob: -12.378767013549805
    8. '[:' → logprob: -13.753767013549805
    9. '_index' → logprob: -13.753767013549805
    10. '.' → logprob: -14.003767013549805

Token 86: 'note' (ID: 19320)
  Prédit: 'note'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'note' → logprob: -0.6931735277175903
    2. '(note' → logprob: -0.6931735277175903
    3. ' note' → logprob: -10.6931734085083
    4. '(n' → logprob: -13.5681734085083
    5. ' (' → logprob: -14.3181734085083
    6. ')' → logprob: -14.9431734085083
    7. '.note' → logprob: -15.0681734085083
    8. 'Note' → logprob: -15.1931734085083
    9. 'notice' → logprob: -15.3181734085083
    10. 'n' → logprob: -15.9431734085083

Token 87: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0004757135466206819
    2. '.index' → logprob: -8.125475883483887
    3. 'list' → logprob: -8.875475883483887
    4. 'index' → logprob: -10.750475883483887
    5. '(note' → logprob: -12.000475883483887
    6. '-list' → logprob: -12.125475883483887
    7. 'List' → logprob: -12.500475883483887
    8. '_index' → logprob: -13.875475883483887
    9. 'note' → logprob: -14.375475883483887
    10. '.list' → logprob: -14.875475883483887

Token 88: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.00027599421446211636
    2. 'index' → logprob: -8.250275611877441
    3. '_list' → logprob: -11.500275611877441
    4. '_index' → logprob: -13.625275611877441
    5. 'List' → logprob: -13.750275611877441
    6. '#index' → logprob: -14.125275611877441
    7. ' index' → logprob: -15.000275611877441
    8. '.' → logprob: -15.125275611877441
    9. 'list' → logprob: -15.125275611877441
    10. ' .' → logprob: -15.375275611877441

Token 89: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.166338137816638e-05
    2. '(' → logprob: -10.750031471252441
    3. ' (' → logprob: -11.500031471252441
    4. '(note' → logprob: -16.750032424926758
    5. 'n' → logprob: -18.750032424926758
    6. ' ' → logprob: -19.000032424926758
    7. ')' → logprob: -19.125032424926758
    8. '((' → logprob: -19.250032424926758
    9. '(nn' → logprob: -19.250032424926758
    10. '(s' → logprob: -19.375032424926758

Token 90: ')-' (ID: 14080)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6783996820449829
    2. ')-' → logprob: -0.8033996820449829
    3. ')' → logprob: -3.4283995628356934
    4. ')+' → logprob: -4.803399562835693
    5. ')n' → logprob: -6.303399562835693
    6. 'n' → logprob: -6.803399562835693
    7. '-' → logprob: -7.678399562835693
    8. ' )' → logprob: -7.678399562835693
    9. ' ' → logprob: -9.053400039672852
    10. '(' → logprob: -10.053400039672852

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '<|end|>' → logprob: -17.875011444091797
    4. ')' → logprob: -18.500011444091797
    5. '```' → logprob: -19.375011444091797
    6. '   ' → logprob: -19.375011444091797
    7. '  ' → logprob: -20.375011444091797
    8. '۱' → logprob: -20.625011444091797
    9. '
' → logprob: -20.750011444091797
    10. '+' → logprob: -20.750011444091797

Token 92: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.00028576893964782357
    2. ')' → logprob: -8.250286102294922
    3. ')]' → logprob: -10.875286102294922
    4. ']%' → logprob: -12.375286102294922
    5. ' )' → logprob: -14.000286102294922
    6. ')n' → logprob: -15.125286102294922
    7. '%' → logprob: -16.875286102294922
    8. 'n' → logprob: -17.000286102294922
    9. '   ' → logprob: -17.125286102294922
    10. '(n' → logprob: -17.500286102294922

Token 93: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. 'len' → logprob: -17.25000762939453
    4. '```' → logprob: -18.87500762939453
    5. '012' → logprob: -19.25000762939453
    6. '[' → logprob: -19.50000762939453
    7. '۱۲' → logprob: -19.75000762939453
    8. '१२' → logprob: -20.25000762939453
    9. '１２' → logprob: -20.37500762939453
    10. '1' → logprob: -20.62500762939453

Token 94: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00045712877181358635
    2. ']' → logprob: -8.000456809997559
    3. ')]' → logprob: -9.375456809997559
    4. '])' → logprob: -10.500456809997559
    5. '）' → logprob: -12.625456809997559
    6. ' )' → logprob: -12.750456809997559
    7. '))' → logprob: -13.375456809997559
    8. ')])' → logprob: -14.125456809997559
    9. ')
' → logprob: -15.625456809997559
    10. ')}' → logprob: -15.875456809997559

Token 95: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004668407142162323
    2. '#' → logprob: -6.129668235778809
    3. 'n' → logprob: -7.379668235778809
    4. '\' → logprob: -7.504668235778809
    5. '<|end|>' → logprob: -8.004668235778809
    6. '```' → logprob: -8.629668235778809
    7. 'a' → logprob: -8.754668235778809
    8. 'A' → logprob: -9.129668235778809
    9. '\n' → logprob: -9.629668235778809
    10. 'print' → logprob: -10.254668235778809

Token 96: ' k' (ID: 372)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3527854681015015
    2. 'n' → logprob: -1.7277854681015015
    3. ' ' → logprob: -1.8527854681015015
    4. '#' → logprob: -2.602785587310791
    5. 'I' → logprob: -2.727785587310791
    6. 'A' → logprob: -2.977785587310791
    7. ' def' → logprob: -3.352785587310791
    8. ' #' → logprob: -3.977785587310791
    9. 'd' → logprob: -4.477785587310791
    10. 'D' → logprob: -4.477785587310791

Token 97: '段' (ID: 27561)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016596708446741104
    2. '=' → logprob: -4.391596794128418
    3. ',' → logprob: -6.391596794128418
    4. '<|end|>' → logprob: -7.016596794128418
    5. '_' → logprob: -7.766596794128418
    6. ' ,' → logprob: -8.391596794128418
    7. '<|end|>' → logprob: -8.766596794128418
    8. ' ' → logprob: -8.766596794128418
    9. '.' → logprob: -9.641596794128418
    10. '#' → logprob: -9.766596794128418

Token 98: 'に' (ID: 5280)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.765261709690094
    2. '=' → logprob: -0.890261709690094
    3. '階' → logprob: -2.515261650085449
    4. '_' → logprob: -4.015261650085449
    5. 'def' → logprob: -4.390261650085449
    6. 's' → logprob: -5.765261650085449
    7. '#' → logprob: -6.015261650085449
    8. 'k' → logprob: -7.265261650085449
    9. ',' → logprob: -7.390261650085449
    10. '_n' → logprob: -7.515261650085449

Token 99: 'いる' (ID: 86169)
  Prédit: 'わ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'わ' → logprob: -1.089879035949707
    2. '分' → logprob: -1.214879035949707
    3. '渡' → logprob: -1.964879035949707
    4. 'なる' → logprob: -3.089879035949707
    5. 'つ' → logprob: -3.464879035949707
    6. '#' → logprob: -3.839879035949707
    7. 'split' → logprob: -4.214879035949707
    8. 'する' → logprob: -4.464879035949707
    9. 'お' → logprob: -4.589879035949707
    10. '進' → logprob: -4.714879035949707

Token 100: '時' (ID: 12131)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'player' → logprob: -1.1225619316101074
    2. 'note' → logprob: -1.9975619316101074
    3. 'n' → logprob: -2.7475619316101074
    4. 'def' → logprob: -2.7475619316101074
    5. '#' → logprob: -2.8725619316101074
    6. 'position' → logprob: -3.2475619316101074
    7. 'k' → logprob: -3.4975619316101074
    8. '_' → logprob: -3.7475619316101074
    9. 's' → logprob: -3.7475619316101074
    10. ' note' → logprob: -3.9975619316101074

Token 101: 'に' (ID: 5280)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33900678157806396
    2. ' def' → logprob: -2.3390069007873535
    3. '<|end|>' → logprob: -2.7140069007873535
    4. ' ' → logprob: -3.3390069007873535
    5. ',' → logprob: -3.8390069007873535
    6. '<|end|>' → logprob: -4.3390069007873535
    7. 'k' → logprob: -4.8390069007873535
    8. '_' → logprob: -4.8390069007873535
    9. ' k' → logprob: -5.0890069007873535
    10. 's' → logprob: -5.4640069007873535

Token 102: '、' (ID: 1395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003350009210407734
    2. 'k' → logprob: -6.128349781036377
    3. ' def' → logprob: -8.128350257873535
    4. '#' → logprob: -8.253350257873535
    5. 'for' → logprob: -8.378350257873535
    6. 'print' → logprob: -9.503350257873535
    7. 'n' → logprob: -10.128350257873535
    8. 'return' → logprob: -10.128350257873535
    9. 'pass' → logprob: -10.128350257873535
    10. 'if' → logprob: -10.503350257873535

Token 103: 'i' (ID: 72)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4772401750087738
    2. '#' → logprob: -1.8522402048110962
    3. 'k' → logprob: -2.7272400856018066
    4. 'for' → logprob: -2.9772400856018066
    5. 'if' → logprob: -3.4772400856018066
    6. 'n' → logprob: -3.7272400856018066
    7. 'next' → logprob: -4.102240085601807
    8. 'pass' → logprob: -5.602240085601807
    9. 'note' → logprob: -5.852240085601807
    10. 'return' → logprob: -5.977240085601807

Token 104: '段' (ID: 27561)
  Prédit: '段'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '段' → logprob: -0.7658748626708984
    2. '番' → logprob: -1.5158748626708984
    3. '+' → logprob: -2.2658748626708984
    4. ')' → logprob: -3.1408748626708984
    5. '<|end|>' → logprob: -3.6408748626708984
    6. 'th' → logprob: -4.015874862670898
    7. '<|end|>' → logprob: -4.265874862670898
    8. 'まで' → logprob: -4.390874862670898
    9. '-' → logprob: -4.515874862670898
    10. ',' → logprob: -5.140874862670898

Token 105: 'に' (ID: 5280)
  Prédit: 'に'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'に' → logprob: -0.9579946398735046
    2. '<|end|>' → logprob: -0.9579946398735046
    3. 'の' → logprob: -2.5829946994781494
    4. 'から' → logprob: -3.2079946994781494
    5. 'まで' → logprob: -3.5829946994781494
    6. '#' → logprob: -3.7079946994781494
    7. ')' → logprob: -3.8329946994781494
    8. 'を' → logprob: -5.08299446105957
    9. '<|end|>' → logprob: -5.08299446105957
    10. ',' → logprob: -5.33299446105957

Token 106: '行' (ID: 6550)
  Prédit: '移'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '移' → logprob: -0.6537502408027649
    2. 'いる' → logprob: -1.2787501811981201
    3. '戻' → logprob: -2.65375018119812
    4. '#' → logprob: -4.028750419616699
    5. '行' → logprob: -4.028750419616699
    6. '上' → logprob: -4.153750419616699
    7. 'ジャン' → logprob: -4.403750419616699
    8. '下' → logprob: -4.403750419616699
    9. 'い' → logprob: -4.528750419616699
    10. '```' → logprob: -5.028750419616699

Token 107: 'く' (ID: 10459)
  Prédit: 'く'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'く' → logprob: -0.001382378744892776
    2. 'き' → logprob: -6.751382350921631
    3. 'け' → logprob: -8.751382827758789
    4. 'こう' → logprob: -10.876382827758789
    5. 'る' → logprob: -11.001382827758789
    6. '```' → logprob: -12.251382827758789
    7. '#' → logprob: -12.376382827758789
    8. ' ' → logprob: -13.126382827758789
    9. 'う' → logprob: -13.876382827758789
    10. 'こ' → logprob: -13.876382827758789

Token 108: '時' (ID: 12131)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002441741817165166
    2. ' def' → logprob: -8.625244140625
    3. '#' → logprob: -9.875244140625
    4. '<|end|>' → logprob: -13.000244140625
    5. ')' → logprob: -13.250244140625
    6. '
' → logprob: -13.500244140625
    7. 'de' → logprob: -13.750244140625
    8. ' ' → logprob: -13.750244140625
    9. 'from' → logprob: -14.250244140625
    10. 'd' → logprob: -14.250244140625

Token 109: 'に' (ID: 5280)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023967815563082695
    2. ' def' → logprob: -4.148967742919922
    3. '<|end|>' → logprob: -5.148967742919922
    4. ')' → logprob: -7.148967742919922
    5. '#' → logprob: -7.773967742919922
    6. ',' → logprob: -8.148967742919922
    7. '<|end|>' → logprob: -8.523967742919922
    8. ' ' → logprob: -9.023967742919922
    9. '
' → logprob: -9.898967742919922
    10. '(' → logprob: -10.273967742919922

Token 110: '�' (ID: 103050)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09805646538734436
    2. '#' → logprob: -3.4730565547943115
    3. 'return' → logprob: -3.9730565547943115
    4. 'if' → logprob: -4.473056316375732
    5. '必要' → logprob: -4.848056316375732
    6. 'i' → logprob: -5.473056316375732
    7. 'n' → logprob: -6.223056316375732
    8. ')' → logprob: -6.473056316375732
    9. 'steps' → logprob: -6.598056316375732
    10. 'k' → logprob: -6.973056316375732

Token 111: '�' (ID: 112)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.9734514355659485
    2. '必要' → logprob: -1.0984513759613037
    3. '#' → logprob: -1.9734513759613037
    4. 'る' → logprob: -2.9734513759613037
    5. 'て' → logprob: -4.348451614379883
    6. 'は' → logprob: -4.473451614379883
    7. 'return' → logprob: -4.598451614379883
    8. 'b' → logprob: -4.973451614379883
    9. '移' → logprob: -5.098451614379883
    10. 'n' → logprob: -5.098451614379883

Token 112: 'る' (ID: 6996)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19160209596157074
    2. '必要' → logprob: -2.3166019916534424
    3. 'す' → logprob: -4.1916022300720215
    4. 'return' → logprob: -4.3166022300720215
    5. 'def' → logprob: -4.6916022300720215
    6. 'b' → logprob: -5.5666022300720215
    7. ')' → logprob: -5.8166022300720215
    8. 'd' → logprob: -6.0666022300720215
    9. 'ゃ' → logprob: -6.0666022300720215
    10. 'u' → logprob: -6.3166022300720215

Token 113: '音' (ID: 15082)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6310685276985168
    2. '#' → logprob: -2.131068468093872
    3. 'd' → logprob: -2.131068468093872
    4. 'す' → logprob: -3.506068468093872
    5. ')' → logprob: -3.881068468093872
    6. 'る' → logprob: -3.881068468093872
    7. 'か' → logprob: -4.631068706512451
    8. ' def' → logprob: -4.631068706512451
    9. 'の' → logprob: -4.881068706512451
    10. 'と' → logprob: -4.881068706512451

Token 114: 'を' (ID: 7277)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6843444108963013
    2. 'が' → logprob: -1.8093444108963013
    3. 'def' → logprob: -2.3093442916870117
    4. ' ' → logprob: -2.4343442916870117
    5. ')' → logprob: -2.6843442916870117
    6. '#' → logprob: -2.8093442916870117
    7. 'は' → logprob: -3.6843442916870117
    8. 'd' → logprob: -3.8093442916870117
    9. ' def' → logprob: -3.8093442916870117
    10. 'を' → logprob: -3.8093442916870117

Token 115: '求' (ID: 16339)
  Prédit: '必要'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '必要' → logprob: -0.8615903854370117
    2. '必' → logprob: -2.2365903854370117
    3. '出' → logprob: -3.2365903854370117
    4. '#' → logprob: -3.3615903854370117
    5. 'つ' → logprob: -3.8615903854370117
    6. 'す' → logprob: -3.9865903854370117
    7. 'か' → logprob: -3.9865903854370117
    8. '知' → logprob: -3.9865903854370117
    9. '使' → logprob: -4.111590385437012
    10. 'る' → logprob: -4.111590385437012

Token 116: 'め' (ID: 17693)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.20676569640636444
    2. 'す' → logprob: -1.8317656517028809
    3. '```' → logprob: -4.581765651702881
    4. 'う' → logprob: -5.081765651702881
    5. 'な' → logprob: -6.081765651702881
    6. '#' → logprob: -6.956765651702881
    7. 'か' → logprob: -7.206765651702881
    8. 'て' → logprob: -7.206765651702881
    9. 'ら' → logprob: -7.331765651702881
    10. 'べ' → logprob: -7.456765651702881

Token 117: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.31296125054359436
    2. 'す' → logprob: -2.0629613399505615
    3. '#' → logprob: -2.4379613399505615
    4. 'て' → logprob: -4.062961101531982
    5. 'た' → logprob: -4.687961101531982
    6. '必要' → logprob: -5.437961101531982
    7. 'か' → logprob: -5.687961101531982
    8. '返' → logprob: -6.062961101531982
    9. '```' → logprob: -6.062961101531982
    10. 'っ' → logprob: -6.437961101531982

Token 118: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12477981299161911
    2. '#' → logprob: -3.24977970123291
    3. ')' → logprob: -3.49977970123291
    4. ' ' → logprob: -4.62477970123291
    5. '(' → logprob: -4.87477970123291
    6. 'd' → logprob: -4.99977970123291
    7. ' def' → logprob: -5.37477970123291
    8. '_' → logprob: -6.12477970123291
    9. 'て' → logprob: -6.74977970123291
    10. 'u' → logprob: -6.87477970123291

Token 119: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009200266562402248
    2. 'd' → logprob: -5.384200096130371
    3. '#' → logprob: -5.509200096130371
    4. 's' → logprob: -9.259200096130371
    5. 'de' → logprob: -9.259200096130371
    6. ' def' → logprob: -9.509200096130371
    7. ')' → logprob: -10.134200096130371
    8. 'f' → logprob: -10.134200096130371
    9. 'n' → logprob: -10.384200096130371
    10. 'c' → logprob: -11.134200096130371

Token 120: ' get' (ID: 717)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -1.1198545694351196
    2. ' find' → logprob: -1.2448545694351196
    3. ' get' → logprob: -1.6198545694351196
    4. ' note' → logprob: -2.49485445022583
    5. ' step' → logprob: -3.61985445022583
    6. ' next' → logprob: -4.11985445022583
    7. ' transition' → logprob: -4.36985445022583
    8. ' jump' → logprob: -4.61985445022583
    9. ' go' → logprob: -5.49485445022583
    10. 'get' → logprob: -5.61985445022583

Token 121: '_sound' (ID: 92263)
  Prédit: '_note'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_note' → logprob: -0.24122442305088043
    2. '_next' → logprob: -2.366224527359009
    3. '_move' → logprob: -3.241224527359009
    4. '_notes' → logprob: -3.366224527359009
    5. '_interval' → logprob: -4.61622428894043
    6. '_sound' → logprob: -5.11622428894043
    7. '_distance' → logprob: -5.49122428894043
    8. '_transition' → logprob: -5.61622428894043
    9. '_possible' → logprob: -5.61622428894043
    10. '_target' → logprob: -5.74122428894043

Token 122: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.007098954636603594
    2. '(' → logprob: -5.007099151611328
    3. '(i' → logprob: -8.507099151611328
    4. '(n' → logprob: -9.632099151611328
    5. '((' → logprob: -10.882099151611328
    6. '(s' → logprob: -11.007099151611328
    7. ' (' → logprob: -11.007099151611328
    8. '(K' → logprob: -11.007099151611328
    9. '_k' → logprob: -12.007099151611328
    10. '(m' → logprob: -12.507099151611328

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003848174586892128
    2. ',i' → logprob: -5.878848075866699
    3. ' ,' → logprob: -7.003848075866699
    4. ',n' → logprob: -9.5038480758667
    5. ',k' → logprob: -10.1288480758667
    6. '_,' → logprob: -12.3788480758667
    7. '，' → logprob: -12.7538480758667
    8. ',
' → logprob: -13.3788480758667
    9. 'i' → logprob: -13.5038480758667
    10. '、' → logprob: -13.6288480758667

Token 124: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01421639509499073
    2. ' i' → logprob: -4.264216423034668
    3. 'k' → logprob: -9.889216423034668
    4. ' k' → logprob: -14.389216423034668
    5. ' ' → logprob: -14.889216423034668
    6. 's' → logprob: -15.139216423034668
    7. '	i' → logprob: -15.389216423034668
    8. '   ' → logprob: -15.514216423034668
    9. 'n' → logprob: -16.13921546936035
    10. ')' → logprob: -16.63921546936035

Token 125: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023989591281861067
    2. ',' → logprob: -6.12739896774292
    3. ')' → logprob: -8.752398490905762
    4. '):
' → logprob: -10.127398490905762
    5. ' ):' → logprob: -12.377398490905762
    6. ',k' → logprob: -12.877398490905762
    7. ')：' → logprob: -13.002398490905762
    8. ':' → logprob: -13.502398490905762
    9. '   ' → logprob: -14.002398490905762
    10. '=' → logprob: -14.627398490905762

Token 126: ' T' (ID: 353)
  Prédit: ' direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' direction' → logprob: -2.2589380741119385
    2. 'note' → logprob: -2.3839380741119385
    3. 'n' → logprob: -2.5089380741119385
    4. 'direction' → logprob: -2.7589380741119385
    5. 'notes' → logprob: -2.8839380741119385
    6. 'step' → logprob: -2.8839380741119385
    7. 'steps' → logprob: -3.2589380741119385
    8. 'd' → logprob: -3.2589380741119385
    9. 'j' → logprob: -3.3839380741119385
    10. ' note' → logprob: -3.3839380741119385

Token 127: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0035327249206602573
    2. ',' → logprob: -6.628532886505127
    3. '[' → logprob: -7.503532886505127
    4. ')' → logprob: -7.753532886505127
    5. '[k' → logprob: -8.128532409667969
    6. ',k' → logprob: -8.503532409667969
    7. '_list' → logprob: -8.878532409667969
    8. '):
' → logprob: -9.128532409667969
    9. 'k' → logprob: -9.128532409667969
    10. '_k' → logprob: -9.253532409667969

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017529195174574852
    2. '    ' → logprob: -5.267529010772705
    3. ' if' → logprob: -5.392529010772705
    4. ')' → logprob: -6.142529010772705
    5. ' ' → logprob: -6.142529010772705
    6. '   ' → logprob: -7.517529010772705
    7. '\t' → logprob: -7.642529010772705
    8. '#' → logprob: -8.142529487609863
    9. ',' → logprob: -8.392529487609863
    10. 'if' → logprob: -8.517529487609863

Token 129: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21308328211307526
    2. 'if' (adapté à ' if') → logprob: -2.088083267211914
    3. '   ' → logprob: -4.088083267211914
    4. ' step' → logprob: -4.713083267211914
    5. ' diff' → logprob: -4.963083267211914
    6. ' return' → logprob: -5.338083267211914
    7. ' d' → logprob: -5.463083267211914
    8. ' s' → logprob: -5.838083267211914
    9. 'd' → logprob: -5.963083267211914
    10. 'diff' → logprob: -5.963083267211914

Token 130: ' i' (ID: 575)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5422868728637695
    2. 'k' → logprob: -0.9172868728637695
    3. ' i' → logprob: -4.2922868728637695
    4. 'i' → logprob: -5.5422868728637695
    5. ' abs' → logprob: -7.0422868728637695
    6. 'abs' → logprob: -8.66728687286377
    7. '(k' → logprob: -9.41728687286377
    8. ' T' → logprob: -9.66728687286377
    9. ' (' → logprob: -10.16728687286377
    10. 'T' → logprob: -10.16728687286377

Token 131: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3659643530845642
    2. ' ==' → logprob: -1.365964412689209
    3. '<=' → logprob: -3.615964412689209
    4. ' <=' → logprob: -4.490964412689209
    5. '>' → logprob: -4.990964412689209
    6. ' >' → logprob: -5.615964412689209
    7. '<' → logprob: -6.615964412689209
    8. ' <' → logprob: -7.240964412689209
    9. '>=' → logprob: -7.990964412689209
    10. '-' → logprob: -8.99096393585205

Token 132: ' len' (ID: 4631)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.25480735301971436
    2. '0' → logprob: -1.5048073530197144
    3. '1' → logprob: -6.379807472229004
    4. ' ' → logprob: -7.254807472229004
    5. ' k' → logprob: -8.004807472229004
    6. '-' → logprob: -10.129807472229004
    7. '2' → logprob: -10.754807472229004
    8. '4' → logprob: -11.379807472229004
    9. '3' → logprob: -11.442307472229004
    10. '6' → logprob: -11.879807472229004

Token 133: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.0006516746943816543
    2. '(note' → logprob: -7.500651836395264
    3. '(' → logprob: -9.625651359558105
    4. '(k' → logprob: -10.500651359558105
    5. '(Note' → logprob: -13.500651359558105
    6. 'T' → logprob: -13.875651359558105
    7. ' (' → logprob: -14.125651359558105
    8. '(notes' → logprob: -14.500651359558105
    9. '(s' → logprob: -14.625651359558105
    10. '(t' → logprob: -15.375651359558105

Token 134: ')+' (ID: 16161)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008309832774102688
    2. ')' → logprob: -5.383309841156006
    3. '):
' → logprob: -5.633309841156006
    4. ':' → logprob: -10.508309364318848
    5. ' ):' → logprob: -10.633309364318848
    6. ')-' → logprob: -11.008309364318848
    7. '   ' → logprob: -11.508309364318848
    8. ')return' → logprob: -12.258309364318848
    9. '):
' → logprob: -12.758309364318848
    10. ')：' → logprob: -12.883309364318848

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002580774249508977
    2. ' ' → logprob: -6.127580642700195
    3. '0' → logprob: -8.252580642700195
    4. 'k' → logprob: -9.377580642700195
    5. '2' → logprob: -10.127580642700195
    6. ' k' → logprob: -12.877580642700195
    7. '   ' → logprob: -13.252580642700195
    8. '-' → logprob: -13.252580642700195
    9. '3' → logprob: -13.627580642700195
    10. ':' → logprob: -14.752580642700195

Token 136: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007706364616751671
    2. ':
' → logprob: -5.257706165313721
    3. ':return' → logprob: -6.007706165313721
    4. ' :' → logprob: -12.257706642150879
    5. ' or' → logprob: -13.382706642150879
    6. ':
' → logprob: -14.007706642150879
    7. '   ' → logprob: -14.382706642150879
    8. '):' → logprob: -14.757706642150879
    9. 'return' → logprob: -14.757706642150879
    10. ' and' → logprob: -14.882706642150879

Token 137: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.47760242223739624
    2. 'return' → logprob: -1.727602481842041
    3. '   ' → logprob: -1.977602481842041
    4. ':return' → logprob: -3.602602481842041
    5. ':' → logprob: -3.852602481842041
    6. ' ' → logprob: -5.477602481842041
    7. '"' → logprob: -6.102602481842041
    8. '0' → logprob: -6.352602481842041
    9. '	return' → logprob: -6.602602481842041
    10. '    ' → logprob: -6.852602481842041

Token 138: ' n' (ID: 297)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.11361631751060486
    2. 'return' → logprob: -2.3636162281036377
    3. ':return' → logprob: -5.363616466522217
    4. ' ' → logprob: -5.613616466522217
    5. '0' → logprob: -6.613616466522217
    6. '   ' → logprob: -6.988616466522217
    7. ' k' → logprob: -7.238616466522217
    8. '	return' → logprob: -7.613616466522217
    9. ' True' → logprob: -8.488615989685059
    10. 'True' → logprob: -8.738615989685059

Token 139: '+' (ID: 10)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6515907645225525
    2. 'ot' → logprob: -1.4015908241271973
    3. ' ' → logprob: -3.2765908241271973
    4. '   ' → logprob: -3.4015908241271973
    5. ')' → logprob: -3.5265908241271973
    6. '-' → logprob: -3.7765908241271973
    7. ':' → logprob: -4.026590824127197
    8. '  ' → logprob: -4.401590824127197
    9. 'return' → logprob: -4.651590824127197
    10. '+' → logprob: -4.901590824127197

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008239185553975403
    2. '2' → logprob: -7.750823974609375
    3. ' ' → logprob: -7.875823974609375
    4. '
' → logprob: -12.250823974609375
    5. '+' → logprob: -13.000823974609375
    6. '#' → logprob: -13.875823974609375
    7. '   ' → logprob: -14.125823974609375
    8. '...' → logprob: -14.375823974609375
    9. '  ' → logprob: -14.500823974609375
    10. '１' → logprob: -14.500823974609375

Token 141: '段' (ID: 27561)
  Prédit: ':return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':return' → logprob: -0.6681505441665649
    2. ':' → logprob: -0.7931505441665649
    3. ')' → logprob: -4.543150424957275
    4. 'return' → logprob: -4.793150424957275
    5. ' return' → logprob: -4.918150424957275
    6. ':
' → logprob: -6.293150424957275
    7. ' ' → logprob: -6.543150424957275
    8. '):' → logprob: -7.043150424957275
    9. '<|end|>' → logprob: -7.293150424957275
    10. ' and' → logprob: -7.543150424957275

Token 142: '目' (ID: 10441)
  Prédit: ':return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':return' → logprob: -0.910811185836792
    2. '   ' → logprob: -1.035811185836792
    3. ':' → logprob: -2.285811185836792
    4. 'return' → logprob: -3.035811185836792
    5. ':
' → logprob: -3.285811185836792
    6. ' return' → logprob: -3.285811185836792
    7. '	return' → logprob: -5.160811424255371
    8. '       ' → logprob: -5.285811424255371
    9. '
' → logprob: -5.535811424255371
    10. ' ' → logprob: -6.285811424255371

Token 143: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9745444059371948
    2. '   ' → logprob: -0.9745444059371948
    3. ':return' → logprob: -1.7245444059371948
    4. ':
' → logprob: -3.0995445251464844
    5. '       ' → logprob: -4.849544525146484
    6. ' return' → logprob: -4.974544525146484
    7. 'return' → logprob: -5.474544525146484
    8. '	return' → logprob: -7.349544525146484
    9. ' ' → logprob: -7.474544525146484
    10. '
' → logprob: -7.474544525146484

Token 144: '地' (ID: 5557)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6986547708511353
    2. ')' → logprob: -1.8236547708511353
    3. 'return' → logprob: -2.1986546516418457
    4. ' return' → logprob: -3.0736546516418457
    5. 'None' → logprob: -3.4486546516418457
    6. '0' → logprob: -3.8236546516418457
    7. ' k' → logprob: -3.9486546516418457
    8. ' None' → logprob: -3.9486546516418457
    9. 'の' → logprob: -4.448654651641846
    10. 'C' → logprob: -4.448654651641846

Token 145: '上' (ID: 4286)
  Prédit: '面'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '面' → logprob: -0.36094915866851807
    2. '上' → logprob: -2.9859490394592285
    3. '#' → logprob: -3.1109490394592285
    4. '```' → logprob: -3.1109490394592285
    5. '声' → logprob: -3.4859490394592285
    6. ')' → logprob: -3.7359490394592285
    7. '震' → logprob: -3.8609490394592285
    8. '\xe7\x8d' → logprob: -3.9859490394592285
    9. '球' → logprob: -4.1109490394592285
    10. 'の' → logprob: -4.9859490394592285

Token 146: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029928438365459442
    2. 'に' → logprob: -4.154928207397461
    3. 'まで' → logprob: -5.904928207397461
    4. 'から' → logprob: -5.904928207397461
    5. '）' → logprob: -6.029928207397461
    6. '')' → logprob: -6.779928207397461
    7. 'では' → logprob: -7.279928207397461
    8. 'の' → logprob: -7.404928207397461
    9. '音' → logprob: -7.779928207397461
    10. '0' → logprob: -8.029928207397461

Token 147: 'に' (ID: 5280)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048085667192935944
    2. ':return' → logprob: -3.7980856895446777
    3. ':
' → logprob: -3.9230856895446777
    4. '   ' → logprob: -6.673085689544678
    5. ' :' → logprob: -6.923085689544678
    6. ' return' → logprob: -7.298085689544678
    7. 'return' → logprob: -7.548085689544678
    8. '):' → logprob: -7.673085689544678
    9. ')' → logprob: -7.923085689544678
    10. ' ' → logprob: -9.42308521270752

Token 148: '行' (ID: 6550)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0008215418201871216
    2. '戻' → logprob: -7.750821590423584
    3. ' return' → logprob: -8.125821113586426
    4. '
' → logprob: -10.375821113586426
    5. '   ' → logprob: -10.500821113586426
    6. '#' → logprob: -10.875821113586426
    7. '	return' → logprob: -12.500821113586426
    8. '返' → logprob: -13.000821113586426
    9. ':return' → logprob: -13.000821113586426
    10. 'def' → logprob: -13.875821113586426

Token 149: 'く' (ID: 10459)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.028958354145288467
    2. 'く' → logprob: -3.778958320617676
    3. 'return' → logprob: -5.278958320617676
    4. ' return' → logprob: -9.028958320617676
    5. ' ' → logprob: -9.903958320617676
    6. '```' → logprob: -9.903958320617676
    7. 'った' → logprob: -10.028958320617676
    8. '   ' → logprob: -10.028958320617676
    9. ')' → logprob: -10.153958320617676
    10. '#' → logprob: -10.153958320617676

Token 150: 'と' (ID: 5330)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8387410640716553
    2. ':return' → logprob: -1.3387410640716553
    3. 'return' → logprob: -1.7137410640716553
    4. ' return' → logprob: -2.5887410640716553
    5. ')' → logprob: -3.5887410640716553
    6. '   ' → logprob: -5.088741302490234
    7. ' ' → logprob: -5.338741302490234
    8. '0' → logprob: -5.463741302490234
    9. '	return' → logprob: -6.213741302490234
    10. '):' → logprob: -6.463741302490234

Token 151: 'き' (ID: 11852)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.019521951675415
    2. ' return' → logprob: -1.269521951675415
    3. '''' → logprob: -2.019521951675415
    4. ''' → logprob: -2.644521951675415
    5. '""' → logprob: -3.144521951675415
    6. 'None' → logprob: -3.769521951675415
    7. ' None' → logprob: -4.269521713256836
    8. '"' → logprob: -4.394521713256836
    9. ' ' → logprob: -4.519521713256836
    10. '　' → logprob: -4.769521713256836

Token 152: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8781296014785767
    2. ' return' → logprob: -1.2531296014785767
    3. '   ' → logprob: -1.7531296014785767
    4. ':' → logprob: -3.003129482269287
    5. ':return' → logprob: -3.253129482269287
    6. ')' → logprob: -4.378129482269287
    7. '	return' → logprob: -4.753129482269287
    8. ' ' → logprob: -4.878129482269287
    9. '0' → logprob: -5.878129482269287
    10. '    ' → logprob: -6.753129482269287

Token 153: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8083475232124329
    2. '   ' → logprob: -1.183347463607788
    3. 'return' → logprob: -1.433347463607788
    4. ' ' → logprob: -5.683347702026367
    5. '	return' → logprob: -5.808347702026367
    6. '0' → logprob: -7.308347702026367
    7. ':' → logprob: -7.933347702026367
    8. '  ' → logprob: -8.058347702026367
    9. '       ' → logprob: -8.058347702026367
    10. ':return' → logprob: -8.058347702026367

Token 154: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012928317300975323
    2. ' return' → logprob: -5.012928485870361
    3. 'if' → logprob: -5.137928485870361
    4. '   ' → logprob: -8.887928009033203
    5. ' if' → logprob: -9.762928009033203
    6. '#' → logprob: -11.262928009033203
    7. ' ' → logprob: -11.262928009033203
    8. 'prev' → logprob: -11.387928009033203
    9. 'print' → logprob: -11.637928009033203
    10. 'note' → logprob: -11.762928009033203

Token 155: ' T' (ID: 353)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8902925252914429
    2. 'note' → logprob: -1.7652925252914429
    3. ''T' → logprob: -2.0152926445007324
    4. 'None' → logprob: -2.3902926445007324
    5. '''' → logprob: -3.1402926445007324
    6. ' note' → logprob: -3.5152926445007324
    7. ' '' → logprob: -3.6402926445007324
    8. ''C' → logprob: -3.7652926445007324
    9. 'T' → logprob: -4.515292644500732
    10. '"' → logprob: -4.765292644500732

Token 156: '[i' (ID: 1768)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0035074150655418634
    2. '[i' → logprob: -6.253507614135742
    3. '[' → logprob: -6.753507614135742
    4. '[-' → logprob: -8.753507614135742
    5. '[n' → logprob: -9.003507614135742
    6. 'k' → logprob: -9.753507614135742
    7. '[key' → logprob: -11.003507614135742
    8. 'None' → logprob: -12.003507614135742
    9. '[j' → logprob: -12.003507614135742
    10. 'def' → logprob: -12.128507614135742

Token 157: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004192367661744356
    2. ' -' → logprob: -6.004192352294922
    3. ']' → logprob: -7.129192352294922
    4. '[i' → logprob: -7.254192352294922
    5. '-i' → logprob: -10.129192352294922
    6. '[-' → logprob: -10.379192352294922
    7. '[' → logprob: -10.504192352294922
    8. '1' → logprob: -11.254192352294922
    9. ']-' → logprob: -11.379192352294922
    10. '-k' → logprob: -11.379192352294922

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6327542662620544
    2. '2' → logprob: -0.7577542662620544
    3. '3' → logprob: -9.3827543258667
    4. ' ' → logprob: -10.1327543258667
    5. '-' → logprob: -11.5702543258667
    6. '12' → logprob: -12.2577543258667
    7. '11' → logprob: -13.4452543258667
    8. '```' → logprob: -13.5077543258667
    9. '4' → logprob: -13.6327543258667
    10. 'i' → logprob: -13.7577543258667

Token 159: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06698774546384811
    2. '][' → logprob: -3.1919877529144287
    3. '-' → logprob: -4.44198751449585
    4. '][-' → logprob: -4.94198751449585
    5. ']-' → logprob: -6.56698751449585
    6. ']+' → logprob: -6.81698751449585
    7. '[' → logprob: -7.06698751449585
    8. '][:' → logprob: -7.94198751449585
    9. '[-' → logprob: -8.816987991333008
    10. ' -' → logprob: -9.066987991333008

Token 160: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2800315618515015
    2. '<|end|>' → logprob: -1.5300315618515015
    3. ' ' → logprob: -2.030031681060791
    4. '[' → logprob: -2.030031681060791
    5. '
' → logprob: -2.155031681060791
    6. ')' → logprob: -3.530031681060791
    7. ' 
' → logprob: -4.030031681060791
    8. '  ' → logprob: -4.655031681060791
    9. '+' → logprob: -4.655031681060791
    10. '#' → logprob: -4.780031681060791

Token 161: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ' elif' (ID: 9497)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6175132393836975
    2. 'else' → logprob: -1.8675131797790527
    3. '   ' → logprob: -2.2425131797790527
    4. ' ' → logprob: -3.1175131797790527
    5. ' else' → logprob: -3.2425131797790527
    6. 'if' → logprob: -3.2425131797790527
    7. ')' → logprob: -3.9925131797790527
    8. '\n' → logprob: -4.242513179779053
    9. ' if' → logprob: -4.617513179779053
    10. '    
' → logprob: -5.242513179779053

Token 163: ' i' (ID: 575)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.9411929249763489
    2. ' i' → logprob: -1.191192865371704
    3. 'k' → logprob: -1.441192865371704
    4. 'i' → logprob: -2.816192865371704
    5. ' abs' → logprob: -6.191193103790283
    6. ' note' → logprob: -6.316193103790283
    7. ' (' → logprob: -6.941193103790283
    8. ' get' → logprob: -7.066193103790283
    9. 'note' → logprob: -7.316193103790283
    10. ' ' → logprob: -7.566193103790283

Token 164: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5473990440368652
    2. ' <' → logprob: -1.6723990440368652
    3. ' >' → logprob: -2.0473990440368652
    4. '==' → logprob: -2.5473990440368652
    5. '<' → logprob: -4.047399044036865
    6. '>' → logprob: -4.922399044036865
    7. ' <=' → logprob: -7.172399044036865
    8. ' ' → logprob: -7.672399044036865
    9. ' in' → logprob: -9.422399520874023
    10. '-' → logprob: -9.547399520874023

Token 165: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3264272212982178
    2. 'len' → logprob: -2.0764272212982178
    3. '0' → logprob: -2.8264272212982178
    4. ' k' → logprob: -2.9514272212982178
    5. ' ' → logprob: -3.8264272212982178
    6. ' len' → logprob: -4.576427459716797
    7. '1' → logprob: -4.701427459716797
    8. 'n' → logprob: -8.201427459716797
    9. ' n' → logprob: -10.076427459716797
    10. 'length' → logprob: -10.388927459716797

Token 166: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004775430075824261
    2. ':
' → logprob: -6.254775524139404
    3. ' and' → logprob: -6.379775524139404
    4. ':return' → logprob: -7.379775524139404
    5. ' :' → logprob: -8.254775047302246
    6. '):' → logprob: -9.504775047302246
    7. 'and' → logprob: -10.004775047302246
    8. '+' → logprob: -10.254775047302246
    9. ' or' → logprob: -10.629775047302246
    10. '-' → logprob: -11.129775047302246

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4347097873687744
    2. ' return' → logprob: -1.8097097873687744
    3. '   ' → logprob: -2.1847097873687744
    4. 'return' → logprob: -3.1847097873687744
    5. ':' → logprob: -4.434709548950195
    6. '	return' → logprob: -5.059709548950195
    7. ' ' → logprob: -5.684709548950195
    8. '
' → logprob: -5.809709548950195
    9. ':return' → logprob: -5.809709548950195
    10. '    ' → logprob: -6.809709548950195

Token 168: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.27209362387657166
    2. ' return' → logprob: -1.522093653678894
    3. '   ' → logprob: -4.147093772888184
    4. '       ' → logprob: -6.522093772888184
    5. 'note' → logprob: -7.147093772888184
    6. ' note' → logprob: -7.647093772888184
    7. ' ' → logprob: -8.397093772888184
    8. '    ' → logprob: -8.397093772888184
    9. '	return' → logprob: -9.022093772888184
    10. '#' → logprob: -9.272093772888184

Token 169: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9072811603546143
    2. 'i' → logprob: -1.4072811603546143
    3. ' T' → logprob: -2.5322811603546143
    4. ' k' → logprob: -2.6572811603546143
    5. 'T' → logprob: -2.7822811603546143
    6. 'k' → logprob: -3.0322811603546143
    7. ' note' → logprob: -3.1572811603546143
    8. 'note' → logprob: -4.157280921936035
    9. ' get' → logprob: -4.282280921936035
    10. ' (' → logprob: -5.407280921936035

Token 170: ' ==' (ID: 951)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3280640244483948
    2. ' >' → logprob: -2.20306396484375
    3. ' <' → logprob: -2.57806396484375
    4. '-' → logprob: -2.82806396484375
    5. ' ==' → logprob: -4.20306396484375
    6. '<' → logprob: -4.82806396484375
    7. '>' → logprob: -5.45306396484375
    8. '==' → logprob: -6.20306396484375
    9. ' ' → logprob: -6.95306396484375
    10. ' <=' → logprob: -6.95306396484375

Token 171: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004697953350841999
    2. ' k' → logprob: -5.879697799682617
    3. 'len' → logprob: -6.504697799682617
    4. 'n' → logprob: -9.004697799682617
    5. ' ' → logprob: -10.129697799682617
    6. 'i' → logprob: -10.129697799682617
    7. ' len' → logprob: -10.629697799682617
    8. 'T' → logprob: -10.629697799682617
    9. '12' → logprob: -10.879697799682617
    10. '1' → logprob: -10.879697799682617

Token 172: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09031998366117477
    2. ' +' → logprob: -2.465319871902466
    3. ':' → logprob: -7.215320110321045
    4. '-' → logprob: -8.090319633483887
    5. '+:' → logprob: -9.465319633483887
    6. ' -' → logprob: -10.090319633483887
    7. ' ' → logprob: -10.590319633483887
    8. '+
' → logprob: -10.715319633483887
    9. ' and' → logprob: -10.965319633483887
    10. '()+' → logprob: -11.090319633483887

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006413076189346611
    2. '2' → logprob: -7.375641345977783
    3. ' ' → logprob: -11.250640869140625
    4. '3' → logprob: -13.750640869140625
    5. '   ' → logprob: -15.250640869140625
    6. '4' → logprob: -16.250640869140625
    7. '  ' → logprob: -16.875640869140625
    8. '(' → logprob: -17.000640869140625
    9. '#' → logprob: -17.063140869140625
    10. '0' → logprob: -17.063140869140625

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06306321173906326
    2. ':
' → logprob: -2.938063144683838
    3. ' and' → logprob: -5.313063144683838
    4. ':return' → logprob: -6.063063144683838
    5. '):' → logprob: -8.063063621520996
    6. ')' → logprob: -8.938063621520996
    7. 'and' → logprob: -9.188063621520996
    8. '       ' → logprob: -9.438063621520996
    9. '):
' → logprob: -9.688063621520996
    10. ' or' → logprob: -10.063063621520996

Token 175: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3245565593242645
    2. ':
' → logprob: -2.199556589126587
    3. ':return' → logprob: -2.699556589126587
    4. '       ' → logprob: -2.949556589126587
    5. ' return' → logprob: -4.449556350708008
    6. 'return' → logprob: -4.824556350708008
    7. ' and' → logprob: -4.949556350708008
    8. '           ' → logprob: -5.949556350708008
    9. '
' → logprob: -6.074556350708008
    10. '   ' → logprob: -6.074556350708008

Token 176: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.049823228269815445
    2. ' return' → logprob: -3.04982328414917
    3. 'note' → logprob: -7.54982328414917
    4. '   ' → logprob: -8.549822807312012
    5. '	return' → logprob: -8.799822807312012
    6. '
' → logprob: -8.799822807312012
    7. ' note' → logprob: -10.049822807312012
    8. ':return' → logprob: -10.299822807312012
    9. ')' → logprob: -10.674822807312012
    10. '(note' → logprob: -11.049822807312012

Token 177: ' T' (ID: 353)
  Prédit: 'note'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'note' → logprob: -0.14816786348819733
    2. ' note' → logprob: -2.023167848587036
    3. 'get' → logprob: -5.648168087005615
    4. ' get' → logprob: -6.523168087005615
    5. 'T' → logprob: -8.398167610168457
    6. ' T' → logprob: -9.273167610168457
    7. '(note' → logprob: -9.273167610168457
    8. 'n' → logprob: -10.648167610168457
    9. 'Note' → logprob: -11.835667610168457
    10. ' ' → logprob: -12.210667610168457

Token 178: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03709816932678223
    2. '[n' → logprob: -3.5370981693267822
    3. '[get' → logprob: -5.787097930908203
    4. '[k' → logprob: -5.912097930908203
    5. '_up' → logprob: -7.662097930908203
    6. '_down' → logprob: -7.787097930908203
    7. '[' → logprob: -8.162097930908203
    8. '[(' → logprob: -9.037097930908203
    9. '[-' → logprob: -9.412097930908203
    10. 'down' → logprob: -10.912097930908203

Token 179: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00090407655807212
    2. ']' → logprob: -7.250904083251953
    3. ' -' → logprob: -8.625904083251953
    4. ']-' → logprob: -11.750904083251953
    5. '[' → logprob: -13.625904083251953
    6. '-
' → logprob: -13.875904083251953
    7. '])' → logprob: -14.000904083251953
    8. '1' → logprob: -14.250904083251953
    9. '   ' → logprob: -14.625904083251953
    10. ']]' → logprob: -14.875904083251953

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11302397400140762
    2. '2' → logprob: -2.2380239963531494
    3. '-' → logprob: -8.98802375793457
    4. ' ' → logprob: -9.86302375793457
    5. '3' → logprob: -11.98802375793457
    6. ']' → logprob: -12.55052375793457
    7. '   ' → logprob: -13.30052375793457
    8. 'i' → logprob: -13.30052375793457
    9. 'k' → logprob: -13.30052375793457
    10. '```' → logprob: -13.36302375793457

Token 181: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01636524684727192
    2. ']
' → logprob: -4.891365051269531
    3. ')' → logprob: -5.891365051269531
    4. ']+' → logprob: -6.016365051269531
    5. '][' → logprob: -6.516365051269531
    6. '])' → logprob: -7.016365051269531
    7. '-' → logprob: -8.016365051269531
    8. '].' → logprob: -8.141365051269531
    9. '+' → logprob: -9.266365051269531
    10. ' ]' → logprob: -9.266365051269531

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0569065660238266
    2. '
' → logprob: -3.8069064617156982
    3. '   ' → logprob: -4.306906700134277
    4. '<|end|>' → logprob: -4.806906700134277
    5. ' else' → logprob: -5.306906700134277
    6. 'else' → logprob: -5.681906700134277
    7. ')' → logprob: -6.306906700134277
    8. '\n' → logprob: -8.931906700134277
    9. '<|end|>' → logprob: -8.931906700134277
    10. ')
' → logprob: -9.181906700134277

Token 183: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -1.0553513765335083
    2. ' else' → logprob: -1.4303513765335083
    3. '
' → logprob: -1.8053513765335083
    4. '       ' → logprob: -1.9303513765335083
    5. '   ' → logprob: -2.3053512573242188
    6. 'return' → logprob: -6.430351257324219
    7. 'elif' → logprob: -7.305351257324219
    8. ' return' → logprob: -8.805351257324219
    9. '	else' → logprob: -8.930351257324219
    10. ')' → logprob: -9.180351257324219

Token 184: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1100863218307495
    2. ' return' → logprob: -1.4850863218307495
    3. ':' → logprob: -1.9850863218307495
    4. ':
' → logprob: -2.110086441040039
    5. '       ' → logprob: -2.360086441040039
    6. 'return' → logprob: -2.735086441040039
    7. ':return' → logprob: -5.485086441040039
    8. '   ' → logprob: -5.610086441040039
    9. ' if' → logprob: -5.860086441040039
    10. '
' → logprob: -6.235086441040039

Token 185: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.629629909992218
    2. ' return' → logprob: -0.879629909992218
    3. '       ' → logprob: -3.1296298503875732
    4. '   ' → logprob: -5.379630088806152
    5. '           ' → logprob: -6.754630088806152
    6. 'get' → logprob: -7.004630088806152
    7. '	return' → logprob: -7.879630088806152
    8. ' get' → logprob: -8.254630088806152
    9. 'note' → logprob: -8.379630088806152
    10. ' note' → logprob: -8.879630088806152

Token 186: ' i' (ID: 575)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2546800374984741
    2. 'return' → logprob: -1.5046800374984741
    3. '   ' → logprob: -7.629680156707764
    4. ' prev' → logprob: -8.129679679870605
    5. ' k' → logprob: -8.379679679870605
    6. '
' → logprob: -8.629679679870605
    7. '       ' → logprob: -8.629679679870605
    8. 'prev' → logprob: -8.879679679870605
    9. ' s' → logprob: -9.004679679870605
    10. ' up' → logprob: -9.129679679870605

Token 187: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6918712258338928
    2. ' <' → logprob: -0.8168712258338928
    3. ' <=' → logprob: -3.816871166229248
    4. '<' → logprob: -4.691871166229248
    5. ' ==' → logprob: -4.691871166229248
    6. ' -' → logprob: -5.066871166229248
    7. '>' → logprob: -5.191871166229248
    8. '-' → logprob: -5.691871166229248
    9. ' ' → logprob: -7.441871166229248
    10. ')' → logprob: -8.066871643066406

Token 188: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.20539437234401703
    2. ' k' → logprob: -1.7053943872451782
    3. 'i' → logprob: -6.330394268035889
    4. ' i' → logprob: -6.830394268035889
    5. ' get' → logprob: -8.205394744873047
    6. ' ' → logprob: -8.455394744873047
    7. 'get' → logprob: -8.580394744873047
    8. ' (' → logprob: -9.455394744873047
    9. '1' → logprob: -10.080394744873047
    10. 'n' → logprob: -10.205394744873047

Token 189: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0372575968503952
    2. '+' → logprob: -3.912257671356201
    3. ' -' → logprob: -4.162257671356201
    4. ':' → logprob: -8.287257194519043
    5. ' +' → logprob: -8.537257194519043
    6. '-
' → logprob: -9.162257194519043
    7. ':
' → logprob: -9.287257194519043
    8. '       ' → logprob: -9.412257194519043
    9. ' ' → logprob: -9.412257194519043
    10. '   ' → logprob: -9.787257194519043

Token 190: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3137427270412445
    2. '1' → logprob: -1.313742756843567
    3. ' ' → logprob: -8.313742637634277
    4. '+' → logprob: -8.563742637634277
    5. '3' → logprob: -10.813742637634277
    6. 'i' → logprob: -12.063742637634277
    7. '   ' → logprob: -12.563742637634277
    8. ' +' → logprob: -12.688742637634277
    9. '       ' → logprob: -13.063742637634277
    10. '```' → logprob: -13.688742637634277

Token 191: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9362493753433228
    2. '       ' → logprob: -1.3112493753433228
    3. ':
' → logprob: -1.4362493753433228
    4. ':return' → logprob: -3.311249256134033
    5. 'return' → logprob: -4.186249256134033
    6. '
' → logprob: -4.311249256134033
    7. '   ' → logprob: -4.811249256134033
    8. ' and' → logprob: -4.936249256134033
    9. ' return' → logprob: -5.311249256134033
    10. ' or' → logprob: -5.561249256134033

Token 192: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1341029852628708
    2. ' return' → logprob: -3.1341030597686768
    3. 'return' → logprob: -3.2591030597686768
    4. '   ' → logprob: -4.259102821350098
    5. '
' → logprob: -5.009102821350098
    6. '           ' → logprob: -5.134102821350098
    7. '	return' → logprob: -5.884102821350098
    8. ')' → logprob: -6.009102821350098
    9. ' ' → logprob: -6.009102821350098
    10. '	' → logprob: -6.384102821350098

Token 193: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.19274847209453583
    2. ' return' → logprob: -1.8177484273910522
    3. '   ' → logprob: -4.692748546600342
    4. 'if' → logprob: -7.067748546600342
    5. ' ' → logprob: -7.567748546600342
    6. ' if' → logprob: -7.692748546600342
    7. '       ' → logprob: -8.317748069763184
    8. '	return' → logprob: -8.692748069763184
    9. 'prev' → logprob: -8.817748069763184
    10. '  ' → logprob: -8.942748069763184

Token 194: ' note' (ID: 7477)
  Prédit: 'note'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'note' → logprob: -0.0443972609937191
    2. ' note' → logprob: -3.1693973541259766
    3. 'get' → logprob: -7.294397354125977
    4. 'T' → logprob: -7.794397354125977
    5. ' get' → logprob: -8.794397354125977
    6. '(note' → logprob: -9.794397354125977
    7. ' T' → logprob: -9.919397354125977
    8. 'n' → logprob: -11.169397354125977
    9. 'Note' → logprob: -11.919397354125977
    10. ' ' → logprob: -12.231897354125977

Token 195: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -0.6343653202056885
    2. '_down' → logprob: -0.7593653202056885
    3. '_list' → logprob: -6.384365081787109
    4. 'down' → logprob: -11.38436508178711
    5. 'up' → logprob: -11.50936508178711
    6. '_' → logprob: -11.63436508178711
    7. '_UP' → logprob: -12.25936508178711
    8. 'list' → logprob: -12.38436508178711
    9. '_u' → logprob: -12.50936508178711
    10. '_DOWN' → logprob: -12.88436508178711

Token 196: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.1356295645236969
    2. '(note' → logprob: -2.385629653930664
    3. '(get' → logprob: -3.885629653930664
    4. '(' → logprob: -4.260629653930664
    5. '(t' → logprob: -9.385629653930664
    6. '((' → logprob: -11.135629653930664
    7. '(Note' → logprob: -11.510629653930664
    8. '('' → logprob: -11.635629653930664
    9. '(s' → logprob: -12.135629653930664
    10. '(n' → logprob: -12.260629653930664

Token 197: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011689399980241433
    2. '[' → logprob: -9.500117301940918
    3. '[k' → logprob: -10.375117301940918
    4. '[get' → logprob: -11.750117301940918
    5. ' [' → logprob: -14.125117301940918
    6. '[
' → logprob: -14.375117301940918
    7. '[(' → logprob: -14.500117301940918
    8. ')' → logprob: -14.875117301940918
    9. '[n' → logprob: -16.3751163482666
    10. ')[' → logprob: -16.5001163482666

Token 198: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00010664248111424968
    2. ' -' → logprob: -10.250106811523438
    3. '[i' → logprob: -10.375106811523438
    4. '[' → logprob: -10.500106811523438
    5. '])' → logprob: -12.125106811523438
    6. ']' → logprob: -12.625106811523438
    7. ')' → logprob: -14.125106811523438
    8. '[-' → logprob: -14.500106811523438
    9. '1' → logprob: -14.875106811523438
    10. ']))' → logprob: -15.125106811523438

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005268618930131197
    2. '2' → logprob: -5.255268573760986
    3. ' ' → logprob: -10.880269050598145
    4. 'k' → logprob: -12.505269050598145
    5. ']' → logprob: -12.942769050598145
    6. '])' → logprob: -13.442769050598145
    7. ')' → logprob: -13.505269050598145
    8. 'i' → logprob: -13.630269050598145
    9. '```' → logprob: -13.692769050598145
    10. '3' → logprob: -14.255269050598145

Token 200: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.04337560385465622
    2. ')' → logprob: -3.1683754920959473
    3. ')])' → logprob: -8.668375968933105
    4. ']' → logprob: -9.543375968933105
    5. '])
' → logprob: -10.418375968933105
    6. '[' → logprob: -10.668375968933105
    7. '))' → logprob: -10.668375968933105
    8. ' ])' → logprob: -10.793375968933105
    9. ' )' → logprob: -11.668375968933105
    10. ')]' → logprob: -11.918375968933105

Token 201: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 203: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004227866418659687
    2. ':
' → logprob: -5.504227638244629
    3. ' :' → logprob: -9.504227638244629
    4. ':return' → logprob: -10.129227638244629
    5. '   ' → logprob: -10.629227638244629
    6. '       ' → logprob: -12.629227638244629
    7. ',' → logprob: -12.879227638244629
    8. ' :
' → logprob: -13.629227638244629
    9. ':
' → logprob: -13.754227638244629
    10. ':

' → logprob: -14.754227638244629

Token 204: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6444129347801208
    2. 'return' → logprob: -1.0194129943847656
    3. ' return' → logprob: -2.2694129943847656
    4. '   ' → logprob: -4.769412994384766
    5. 'if' → logprob: -6.394412994384766
    6. ' if' → logprob: -7.644412994384766
    7. '	return' → logprob: -9.269412994384766
    8. '
' → logprob: -10.269412994384766
    9. '           ' → logprob: -10.894412994384766
    10. ' ' → logprob: -10.894412994384766

Token 205: ' i' (ID: 575)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7530328631401062
    2. 'return' → logprob: -0.8780328631401062
    3. '   ' → logprob: -2.378032922744751
    4. 'if' → logprob: -5.003032684326172
    5. '       ' → logprob: -5.378032684326172
    6. ' if' → logprob: -5.503032684326172
    7. ' note' → logprob: -6.378032684326172
    8. ' k' → logprob: -7.128032684326172
    9. 'note' → logprob: -7.503032684326172
    10. '
' → logprob: -7.503032684326172

Token 206: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2019362896680832
    2. ' ==' → logprob: -2.4519362449645996
    3. '<' → logprob: -2.5769362449645996
    4. ' >' → logprob: -4.5769362449646
    5. '==' → logprob: -4.7019362449646
    6. '>' → logprob: -7.2019362449646
    7. '+' → logprob: -8.951936721801758
    8. '   ' → logprob: -9.076936721801758
    9. ' <=' → logprob: -9.576936721801758
    10. '-' → logprob: -9.701936721801758

Token 207: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.023302661255002022
    2. ' k' → logprob: -3.7733025550842285
    3. '1' → logprob: -11.148303031921387
    4. '0' → logprob: -11.523303031921387
    5. ' ' → logprob: -12.148303031921387
    6. 'n' → logprob: -12.273303031921387
    7. 'note' → logprob: -12.273303031921387
    8. ' note' → logprob: -12.648303031921387
    9. '(k' → logprob: -12.648303031921387
    10. '(' → logprob: -13.023303031921387

Token 208: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8949417471885681
    2. ':
' → logprob: -0.8949417471885681
    3. '   ' → logprob: -2.644941806793213
    4. 'return' → logprob: -3.144941806793213
    5. ':return' → logprob: -3.394941806793213
    6. '
' → logprob: -4.769941806793213
    7. ' return' → logprob: -4.894941806793213
    8. ')' → logprob: -5.519941806793213
    9. '-' → logprob: -5.644941806793213
    10. '       ' → logprob: -5.894941806793213

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.522638169466518e-05
    2. ' ' → logprob: -10.875024795532227
    3. '2' → logprob: -12.500024795532227
    4. '１' → logprob: -13.500024795532227
    5. '```' → logprob: -15.125024795532227
    6. '-' → logprob: -15.375024795532227
    7. '   ' → logprob: -15.750024795532227
    8. '...' → logprob: -16.062524795532227
    9. '۱' → logprob: -16.875024795532227
    10. '0' → logprob: -17.562524795532227

Token 210: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35114479064941406
    2. '       ' → logprob: -1.976144790649414
    3. ':
' → logprob: -2.226144790649414
    4. ':' → logprob: -3.851144790649414
    5. '
' → logprob: -4.226144790649414
    6. ' return' → logprob: -5.601144790649414
    7. '	return' → logprob: -6.351144790649414
    8. 'return' → logprob: -6.476144790649414
    9. ':return' → logprob: -6.726144790649414
    10. ')' → logprob: -6.851144790649414

Token 211: '戻' (ID: 175677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4749717712402344
    2. ')
' → logprob: -0.9749717712402344
    3. '   ' → logprob: -7.724971771240234
    4. ')return' → logprob: -9.224971771240234
    5. '):
' → logprob: -9.349971771240234
    6. ')n' → logprob: -9.849971771240234
    7. 'return' → logprob: -10.099971771240234
    8. ')

' → logprob: -10.474971771240234
    9. ' )
' → logprob: -10.974971771240234
    10. ')
' → logprob: -10.974971771240234

Token 212: 'る' (ID: 6996)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12207439541816711
    2. 'る' → logprob: -2.3720743656158447
    3. '）' → logprob: -4.247074604034424
    4. 'return' → logprob: -6.872074604034424
    5. 'り' → logprob: -6.872074604034424
    6. '')' → logprob: -7.122074604034424
    7. ']' → logprob: -7.247074604034424
    8. '-' → logprob: -7.747074604034424
    9. '=' → logprob: -8.497074127197266
    10. ' ' → logprob: -8.497074127197266

Token 213: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08913576602935791
    2. ')
' → logprob: -2.4641356468200684
    3. ' )' → logprob: -9.464136123657227
    4. ' )
' → logprob: -10.214136123657227
    5. '）' → logprob: -10.339136123657227
    6. '   ' → logprob: -11.589136123657227
    7. ')

' → logprob: -11.964136123657227
    8. '):
' → logprob: -12.089136123657227
    9. ')return' → logprob: -12.214136123657227
    10. ')
' → logprob: -12.714136123657227

Token 214: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10604408383369446
    2. ' return' → logprob: -2.481044054031372
    3. '       ' → logprob: -4.856044292449951
    4. 'return' → logprob: -4.856044292449951
    5. '	return' → logprob: -6.856044292449951
    6. ')' → logprob: -8.731043815612793
    7. '	' → logprob: -9.606043815612793
    8. '   ' → logprob: -10.231043815612793
    9. ' ' → logprob: -10.606043815612793
    10. ',' → logprob: -11.356043815612793

Token 215: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08910195529460907
    2. ' return' → logprob: -2.464102029800415
    3. '   ' → logprob: -8.839101791381836
    4. '
' → logprob: -12.464101791381836
    5. ' ' → logprob: -12.839101791381836
    6. 'eturn' → logprob: -12.964101791381836
    7. '	return' → logprob: -13.089101791381836
    8. 'def' → logprob: -13.089101791381836
    9. 'note' → logprob: -13.714101791381836
    10. ':return' → logprob: -14.089101791381836

Token 216: ' note' (ID: 7477)
  Prédit: 'note'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'note' → logprob: -0.029811009764671326
    2. ' note' → logprob: -3.529810905456543
    3. '(note' → logprob: -9.779810905456543
    4. 'n' → logprob: -13.904810905456543
    5. 'Note' → logprob: -14.279810905456543
    6. 'notice' → logprob: -14.404810905456543
    7. 'not' → logprob: -14.529810905456543
    8. '.note' → logprob: -15.029810905456543
    9. '_note' → logprob: -15.654810905456543
    10. 'NOTE' → logprob: -16.34231185913086

Token 217: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -0.003977242857217789
    2. '_list' → logprob: -6.003977298736572
    3. '_up' → logprob: -6.503977298736572
    4. 'down' → logprob: -13.753976821899414
    5. '_DOWN' → logprob: -14.378976821899414
    6. 'list' → logprob: -14.753976821899414
    7. 'Down' → logprob: -15.128976821899414
    8. '_' → logprob: -15.128976821899414
    9. '[' → logprob: -16.878976821899414
    10. '.down' → logprob: -17.003976821899414

Token 218: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.576866626739502
    2. '(' → logprob: -0.826866626739502
    3. '(note' → logprob: -7.201866626739502
    4. '(n' → logprob: -9.451866149902344
    5. '(Note' → logprob: -9.576866149902344
    6. '(
' → logprob: -11.826866149902344
    7. '('' → logprob: -12.076866149902344
    8. '(not' → logprob: -12.951866149902344
    9. '("("' → logprob: -12.951866149902344
    10. '(The' → logprob: -13.201866149902344

Token 219: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005583931924775243
    2. '[k' → logprob: -7.500558376312256
    3. '[' → logprob: -12.875558853149414
    4. ')' → logprob: -13.750558853149414
    5. 'i' → logprob: -14.125558853149414
    6. '[n' → logprob: -16.000558853149414
    7. '(i' → logprob: -16.125558853149414
    8. ' [' → logprob: -16.125558853149414
    9. '[(' → logprob: -16.125558853149414
    10. '[I' → logprob: -16.500558853149414

Token 220: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00010843054042197764
    2. ' -' → logprob: -10.00010871887207
    3. '])' → logprob: -10.12510871887207
    4. '[' → logprob: -11.37510871887207
    5. ']' → logprob: -12.37510871887207
    6. '[-' → logprob: -13.00010871887207
    7. '[i' → logprob: -13.75010871887207
    8. '   ' → logprob: -14.50010871887207
    9. ')])' → logprob: -14.87510871887207
    10. ']))' → logprob: -15.12510871887207

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. '-' → logprob: -10.500031471252441
    3. '2' → logprob: -13.375031471252441
    4. ' ' → logprob: -13.875031471252441
    5. ']' → logprob: -14.875031471252441
    6. '```' → logprob: -15.000031471252441
    7. '１' → logprob: -15.250031471252441
    8. 'i' → logprob: -16.250030517578125
    9. '۱' → logprob: -17.062530517578125
    10. '])' → logprob: -17.437530517578125

Token 222: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011948712635785341
    2. '])' → logprob: -6.751194953918457
    3. '）' → logprob: -12.126194953918457
    4. ')])' → logprob: -12.251194953918457
    5. '))' → logprob: -12.376194953918457
    6. ']' → logprob: -12.751194953918457
    7. ')]' → logprob: -13.001194953918457
    8. ')
' → logprob: -13.251194953918457
    9. '})' → logprob: -13.876194953918457
    10. ' )' → logprob: -14.376194953918457

Token 223: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20296648144721985
    2. '<|end|>' → logprob: -1.9529664516448975
    3. '#' → logprob: -3.8279664516448975
    4. '(' → logprob: -5.202966690063477
    5. '[' → logprob: -5.452966690063477
    6. ':' → logprob: -5.827966690063477
    7. ' ' → logprob: -6.452966690063477
    8. '\n' → logprob: -6.952966690063477
    9. '<|end|>' → logprob: -7.202966690063477
    10. '
' → logprob: -7.202966690063477

Token 224: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.11852797120809555
    2. ' dfs' → logprob: -3.368527889251709
    3. 'main' → logprob: -3.868527889251709
    4. ' play' → logprob: -4.243527889251709
    5. ' move' → logprob: -4.618527889251709
    6. ' climb' → logprob: -4.743527889251709
    7. ' solve' → logprob: -5.368527889251709
    8. ' get' → logprob: -5.743527889251709
    9. 'dfs' → logprob: -5.743527889251709
    10. ' sound' → logprob: -6.243527889251709

Token 225: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.2289079874753952
    2. '(' → logprob: -1.9789079427719116
    3. '(n' → logprob: -2.853908061981201
    4. '(N' → logprob: -5.478908061981201
    5. '(K' → logprob: -5.978908061981201
    6. '():' → logprob: -7.228908061981201
    7. '(i' → logprob: -7.978908061981201
    8. '(T' → logprob: -7.978908061981201
    9. '(s' → logprob: -8.978907585144043
    10. '(M' → logprob: -9.853907585144043

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2083042562007904
    2. '):' → logprob: -1.7083042860031128
    3. ')' → logprob: -5.708304405212402
    4. '):
' → logprob: -6.333304405212402
    5. '(n' → logprob: -7.083304405212402
    6. ',n' → logprob: -7.708304405212402
    7. ' ,' → logprob: -8.583304405212402
    8. 'n' → logprob: -9.208304405212402
    9. '),' → logprob: -10.833304405212402
    10. '):
' → logprob: -10.958304405212402

Token 227: ' m' (ID: 284)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.3454402685165405
    2. 'k' → logprob: -1.3454402685165405
    3. ' T' → logprob: -4.59544038772583
    4. 'm' → logprob: -4.84544038772583
    5. 'i' → logprob: -6.47044038772583
    6. ' k' → logprob: -6.47044038772583
    7. 'a' → logprob: -7.09544038772583
    8. 's' → logprob: -7.09544038772583
    9. 'q' → logprob: -7.22044038772583
    10. 'l' → logprob: -7.22044038772583

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7095316648483276
    2. '):' → logprob: -0.7095316648483276
    3. '):
' → logprob: -4.209531784057617
    4. ')' → logprob: -6.834531784057617
    5. '):
' → logprob: -8.709531784057617
    6. ',k' → logprob: -10.084531784057617
    7. '):

' → logprob: -10.459531784057617
    8. ' ,' → logprob: -11.209531784057617
    9. ',
' → logprob: -11.709531784057617
    10. 'k' → logprob: -11.709531784057617

Token 229: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.08247292786836624
    2. 'k' → logprob: -3.707473039627075
    3. 'q' → logprob: -4.457472801208496
    4. ' T' → logprob: -4.707472801208496
    5. 's' → logprob: -4.957472801208496
    6. 'S' → logprob: -5.082472801208496
    7. 'Q' → logprob: -5.707472801208496
    8. 'a' → logprob: -5.957472801208496
    9. 't' → logprob: -6.082472801208496
    10. 'l' → logprob: -6.332472801208496

Token 230: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12800639867782593
    2. ',' → logprob: -2.7530064582824707
    3. '):
' → logprob: -2.8780064582824707
    4. '):
' → logprob: -9.253005981445312
    5. ')' → logprob: -10.128005981445312
    6. '):

' → logprob: -11.503005981445312
    7. ' ):' → logprob: -12.128005981445312
    8. ',
' → logprob: -12.253005981445312
    9. ':' → logprob: -13.003005981445312
    10. '[]):' → logprob: -13.253005981445312

Token 231: ' S' (ID: 336)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8770478963851929
    2. 'Q' → logprob: -2.1270480155944824
    3. 'q' → logprob: -2.8770480155944824
    4. 'K' → logprob: -3.0020480155944824
    5. 'S' → logprob: -3.0020480155944824
    6. 's' → logprob: -3.0020480155944824
    7. 'a' → logprob: -3.3770480155944824
    8. 'X' → logprob: -3.7520480155944824
    9. 'x' → logprob: -3.7520480155944824
    10. 'A' → logprob: -4.127048015594482

Token 232: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08479029685258865
    2. ',' → logprob: -3.2097902297973633
    3. '):
' → logprob: -3.2097902297973633
    4. '):
' → logprob: -7.834790229797363
    5. ',k' → logprob: -10.084790229797363
    6. ')' → logprob: -10.084790229797363
    7. ' ):' → logprob: -11.209790229797363
    8. ',n' → logprob: -11.334790229797363
    9. '):

' → logprob: -11.459790229797363
    10. ',i' → logprob: -11.584790229797363

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45385652780532837
    2. '\' → logprob: -2.5788564682006836
    3. '<|end|>' → logprob: -2.7038564682006836
    4. ':' → logprob: -2.9538564682006836
    5. '    ' → logprob: -3.0788564682006836
    6. ' ' → logprob: -3.4538564682006836
    7. ' 
' → logprob: -3.5788564682006836
    8. '    
' → logprob: -4.578856468200684
    9. '(n' → logprob: -4.703856468200684
    10. ' :' → logprob: -5.453856468200684

Token 234: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1124348640441895
    2. 'current' → logprob: -1.8624348640441895
    3. ' current' → logprob: -2.3624348640441895
    4. ' k' → logprob: -2.4874348640441895
    5. 'dp' → logprob: -2.6124348640441895
    6. 'ans' → logprob: -3.4874348640441895
    7. 'pos' → logprob: -3.9874348640441895
    8. 'answer' → logprob: -4.1124348640441895
    9. ' dp' → logprob: -4.1124348640441895
    10. 'result' → logprob: -4.2374348640441895

Token 235: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.35192209482192993
    2. 'k' → logprob: -2.601922035217285
    3. ' dp' → logprob: -3.226922035217285
    4. 'current' → logprob: -3.226922035217285
    5. 'ans' → logprob: -3.976922035217285
    6. 'from' → logprob: -4.101922035217285
    7. 'prev' → logprob: -4.226922035217285
    8. 'answer' → logprob: -4.726922035217285
    9. ' k' → logprob: -5.101922035217285
    10. 'visited' → logprob: -5.226922035217285

Token 236: '0' (ID: 15)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.49365636706352234
    2. 'k' → logprob: -1.7436563968658447
    3. 'current' → logprob: -2.9936563968658447
    4. 'ans' → logprob: -3.6186563968658447
    5. 'from' → logprob: -3.8686563968658447
    6. 'prev' → logprob: -3.9936563968658447
    7. 'for' → logprob: -4.618656158447266
    8. 'result' → logprob: -4.743656158447266
    9. 'pos' → logprob: -4.743656158447266
    10. 'answer' → logprob: -4.743656158447266

Token 237: '段' (ID: 27561)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11599909514188766
    2. '_dp' → logprob: -3.9909989833831787
    3. 'result' → logprob: -4.240999221801758
    4. '
' → logprob: -4.365999221801758
    5. ' =' → logprob: -4.615999221801758
    6. 'def' → logprob: -4.990999221801758
    7. '   ' → logprob: -4.990999221801758
    8. ' dp' → logprob: -5.615999221801758
    9. 'prev' → logprob: -5.615999221801758
    10. '段' → logprob: -5.865999221801758

Token 238: '目' (ID: 10441)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5777957439422607
    2. ',' → logprob: -2.0777957439422607
    3. '=' → logprob: -2.7027957439422607
    4. ')' → logprob: -3.0777957439422607
    5. '目' → logprob: -3.2027957439422607
    6. '#' → logprob: -3.8277957439422607
    7. ' ' → logprob: -3.9527957439422607
    8. ':' → logprob: -4.20279598236084
    9. 'から' → logprob: -4.45279598236084
    10. 'def' → logprob: -4.45279598236084

Token 239: '(' (ID: 7)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.647926926612854
    2. ' =' → logprob: -1.272926926612854
    3. ' ,' → logprob: -2.5229268074035645
    4. ':' → logprob: -3.3979268074035645
    5. ')' → logprob: -4.2729268074035645
    6. ' ' → logprob: -4.7729268074035645
    7. '<|end|>' → logprob: -4.7729268074035645
    8. '=' → logprob: -5.2729268074035645
    9. 'から' → logprob: -5.2729268074035645
    10. ' k' → logprob: -5.6479268074035645

Token 240: '�' (ID: 5546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21744011342525482
    2. ' )' → logprob: -2.092440128326416
    3. 'def' → logprob: -4.092440128326416
    4. ' ' → logprob: -4.592440128326416
    5. 'n' → logprob: -4.717440128326416
    6. 'S' → logprob: -5.217440128326416
    7. '0' → logprob: -5.717440128326416
    8. '#' → logprob: -5.842440128326416
    9. ' S' → logprob: -6.092440128326416
    10. 'T' → logprob: -6.092440128326416

Token 241: '�' (ID: 110)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14914380013942719
    2. '0' → logprob: -3.274143695831299
    3. ' ' → logprob: -3.524143695831299
    4. ' )' → logprob: -3.899143695831299
    5. 'n' → logprob: -4.024143695831299
    6. 'def' → logprob: -4.649143695831299
    7. '
' → logprob: -5.024143695831299
    8. ')\' → logprob: -6.274143695831299
    9. '#' → logprob: -6.399143695831299
    10. ' n' → logprob: -6.524143695831299

Token 242: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1141892522573471
    2. ' )' → logprob: -2.8641891479492188
    3. 'def' → logprob: -3.9891891479492188
    4. '#' → logprob: -4.364189147949219
    5. 'n' → logprob: -5.614189147949219
    6. ' ' → logprob: -5.989189147949219
    7. '   ' → logprob: -6.114189147949219
    8. '0' → logprob: -6.489189147949219
    9. 'A' → logprob: -7.489189147949219
    10. '
' → logprob: -7.489189147949219

Token 243: 'から' (ID: 27500)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26238733530044556
    2. ',' → logprob: -2.887387275695801
    3. '=' → logprob: -3.637387275695801
    4. ')' → logprob: -3.762387275695801
    5. '
' → logprob: -3.887387275695801
    6. 'から' → logprob: -4.137387275695801
    7. 'の' → logprob: -4.387387275695801
    8. 'n' → logprob: -4.637387275695801
    9. 'current' → logprob: -5.387387275695801
    10. ' current' → logprob: -5.387387275695801

Token 244: 'スタ' (ID: 63355)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.409224033355713
    2. ' current' → logprob: -1.409224033355713
    3. 'current' → logprob: -1.909224033355713
    4. 'k' → logprob: -2.159224033355713
    5. '1' → logprob: -3.659224033355713
    6. ' ' → logprob: -4.034224033355713
    7. 'i' → logprob: -4.034224033355713
    8. ' for' → logprob: -4.159224033355713
    9. '現在' → logprob: -4.159224033355713
    10. 'for' → logprob: -4.284224033355713

Token 245: 'ート' (ID: 34471)
  Prédit: 'ート'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ート' → logprob: -0.0012815415393561125
    2. 'ー' → logprob: -6.75128173828125
    3. 'rt' → logprob: -9.50128173828125
    4. '```' → logprob: -11.00128173828125
    5. 'r' → logprob: -11.75128173828125
    6. 'art' → logprob: -12.00128173828125
    7. ' ' → logprob: -13.62628173828125
    8. '#' → logprob: -14.00128173828125
    9. 'ｰ' → logprob: -15.00128173828125
    10. 'ーー' → logprob: -15.00128173828125

Token 246: '、' (ID: 1395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12210710346698761
    2. 'current' → logprob: -3.4971070289611816
    3. ' current' → logprob: -3.8721070289611816
    4. ')' → logprob: -4.247107028961182
    5. ' ' → logprob: -4.872107028961182
    6. ' =' → logprob: -5.372107028961182
    7. ',' → logprob: -5.497107028961182
    8. ' k' → logprob: -5.497107028961182
    9. '  ' → logprob: -5.747107028961182
    10. ' ,' → logprob: -6.372107028961182

Token 247: 'm' (ID: 76)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3838861286640167
    2. ' k' → logprob: -1.2588860988616943
    3. ' current' → logprob: -4.008886337280273
    4. 'current' → logprob: -4.383886337280273
    5. ' cur' → logprob: -7.008886337280273
    6. 'curr' → logprob: -7.133886337280273
    7. 'cur' → logprob: -7.508886337280273
    8. '   ' → logprob: -7.758886337280273
    9. ' curr' → logprob: -8.008886337280273
    10. 'pos' → logprob: -8.508886337280273

Token 248: '曲' (ID: 43628)
  Prédit: '段'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '段' → logprob: -0.0012385640293359756
    2. '+' → logprob: -7.1262383460998535
    3. ' =' → logprob: -9.251238822937012
    4. ')' → logprob: -9.751238822937012
    5. '=' → logprob: -9.876238822937012
    6. 'から' → logprob: -10.001238822937012
    7. ' +' → logprob: -10.501238822937012
    8. '-' → logprob: -10.626238822937012
    9. 'まで' → logprob: -10.751238822937012
    10. '
' → logprob: -11.126238822937012

Token 249: 'の' (ID: 3385)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7955296039581299
    2. ' =' → logprob: -1.9205296039581299
    3. '段' → logprob: -1.9205296039581299
    4. '目' → logprob: -2.29552960395813
    5. '=' → logprob: -2.54552960395813
    6. 'の' → logprob: -2.67052960395813
    7. ',' → logprob: -2.79552960395813
    8. 'def' → logprob: -3.17052960395813
    9. '数' → logprob: -3.29552960395813
    10. 'から' → logprob: -3.92052960395813

Token 250: '順' (ID: 90778)
  Prédit: '段'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '段' → logprob: -1.3280911445617676
    2. 'コード' → logprob: -1.4530911445617676
    3. 'range' → logprob: -2.5780911445617676
    4. '続きを' → logprob: -2.9530911445617676
    5. 'steps' → logprob: -3.2030911445617676
    6. '続' → logprob: -3.8280911445617676
    7. '```' → logprob: -3.9530911445617676
    8. 'list' → logprob: -4.078091144561768
    9. '音' → logprob: -4.078091144561768
    10. '途中' → logprob: -4.203091144561768

Token 251: '番' (ID: 30357)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: '通' (ID: 9034)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: 'り' (ID: 7297)
  Prédit: 'で'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'で' → logprob: -0.8019499182701111
    2. 'に' → logprob: -1.0519499778747559
    3. '列' → logprob: -3.051949977874756
    4. '続きを' → logprob: -3.301949977874756
    5. '続' → logprob: -4.551949977874756
    6. 'コード' → logprob: -4.551949977874756
    7. '番' → logprob: -4.676949977874756
    8. 'は' → logprob: -4.801949977874756
    9. 'び' → logprob: -4.926949977874756
    10. '...' → logprob: -5.176949977874756

Token 254: 'に' (ID: 5280)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: '音' (ID: 15082)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7596971392631531
    2. 'i' → logprob: -1.5096971988677979
    3. 'current' → logprob: -2.009697198867798
    4. ' k' → logprob: -3.134697198867798
    5. 'for' → logprob: -4.009696960449219
    6. ' current' → logprob: -4.384696960449219
    7. 'cur' → logprob: -4.634696960449219
    8. ' i' → logprob: -4.884696960449219
    9. 'steps' → logprob: -5.009696960449219
    10. 'moves' → logprob: -5.134696960449219

Token 256: 'を' (ID: 7277)
  Prédit: 'を'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.07603287696838379
    2. ',' → logprob: -3.826032876968384
    3. 'で' → logprob: -4.576032638549805
    4. 'が' → logprob: -4.826032638549805
    5. ' を' → logprob: -4.951032638549805
    6. '階' → logprob: -5.326032638549805
    7. '   ' → logprob: -6.201032638549805
    8. ' ' → logprob: -6.326032638549805
    9. '続きを' → logprob: -6.576032638549805
    10. 'に' → logprob: -6.576032638549805

Token 257: '出' (ID: 6390)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\xe9\xb3' → logprob: -1.2094186544418335
    2. '奏' → logprob: -1.3344186544418335
    3. '出' → logprob: -1.7094186544418335
    4. 'for' → logprob: -2.584418773651123
    5. '演' → logprob: -3.584418773651123
    6. '\xe8\xbe' → logprob: -4.209418773651123
    7. '発' → logprob: -4.584418773651123
    8. '移' → logprob: -4.709418773651123
    9. 'return' → logprob: -4.709418773651123
    10. 'print' → logprob: -4.959418773651123

Token 258: 'した' (ID: 23085)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.06526535004377365
    2. 'し' → logprob: -3.440265417098999
    3. 'して' → logprob: -3.565265417098999
    4. 'る' → logprob: -7.06526517868042
    5. 'て' → logprob: -7.31526517868042
    6. '```' → logprob: -7.69026517868042
    7. '力' → logprob: -7.69026517868042
    8. 'せ' → logprob: -8.690265655517578
    9. 'そう' → logprob: -9.440265655517578
    10. 's' → logprob: -10.440265655517578

Token 259: 'ら' (ID: 8870)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5729120969772339
    2. '```' → logprob: -2.6979122161865234
    3. ',' → logprob: -2.8229122161865234
    4. '#' → logprob: -2.8229122161865234
    5. ' for' → logprob: -2.9479122161865234
    6. 'て' → logprob: -3.0729122161865234
    7. '   ' → logprob: -3.1979122161865234
    8. 'for' → logprob: -3.4479122161865234
    9. 'def' → logprob: -3.5729122161865234
    10. '`' → logprob: -3.6979122161865234

Token 260: 'n' (ID: 77)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1876070350408554
    2. 'return' → logprob: -1.9376070499420166
    3. '   ' → logprob: -3.9376070499420166
    4. ' ' → logprob: -6.1876068115234375
    5. '```' → logprob: -6.3126068115234375
    6. 'print' → logprob: -7.0626068115234375
    7. '
' → logprob: -7.9376068115234375
    8. '　' → logprob: -7.9376068115234375
    9. ' print' → logprob: -8.562606811523438
    10. '	return' → logprob: -8.937606811523438

Token 261: '+' (ID: 10)
  Prédit: '段'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '段' → logprob: -0.0038854614831507206
    2. ')' → logprob: -6.878885269165039
    3. ',' → logprob: -7.378885269165039
    4. 'まで' → logprob: -7.878885269165039
    5. 'を' → logprob: -8.128885269165039
    6. ' ' → logprob: -8.253885269165039
    7. 'の' → logprob: -8.878885269165039
    8. '階' → logprob: -8.878885269165039
    9. '<|end|>' → logprob: -9.128885269165039
    10. '0' → logprob: -9.503885269165039

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. 'm' → logprob: -12.62501335144043
    3. '１' → logprob: -12.62501335144043
    4. ' ' → logprob: -12.75001335144043
    5. '
' → logprob: -13.12501335144043
    6. '

' → logprob: -15.00001335144043
    7. '続きを' → logprob: -15.75001335144043
    8. '#' → logprob: -15.87501335144043
    9. '```' → logprob: -16.12501335144043
    10. '
' → logprob: -16.25001335144043

Token 263: '段' (ID: 27561)
  Prédit: '段'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '段' → logprob: -0.0005763856461271644
    2. '階' → logprob: -7.875576496124268
    3. '```' → logprob: -9.62557601928711
    4. 'def' → logprob: -10.37557601928711
    5. '#' → logprob: -10.50057601928711
    6. ')' → logprob: -10.62557601928711
    7. ' \xe6' → logprob: -11.62557601928711
    8. '0' → logprob: -12.12557601928711
    9. 'segment' → logprob: -12.50057601928711
    10. 'm' → logprob: -12.62557601928711

Token 264: '目' (ID: 10441)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46372053027153015
    2. '<|end|>' → logprob: -2.2137205600738525
    3. '(' → logprob: -2.5887205600738525
    4. 'まで' → logprob: -3.2137205600738525
    5. ' (' → logprob: -3.3387205600738525
    6. '()' → logprob: -3.4637205600738525
    7. 'から' → logprob: -4.463720321655273
    8. ',' → logprob: -4.963720321655273
    9. 'へ' → logprob: -4.963720321655273
    10. '<|end|>' → logprob: -5.338720321655273

Token 265: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46930691599845886
    2. 'から' → logprob: -2.2193069458007812
    3. '<|end|>' → logprob: -2.4693069458007812
    4. ' (' → logprob: -2.7193069458007812
    5. 'まで' → logprob: -3.2193069458007812
    6. ')' → logprob: -3.5943069458007812
    7. 'に' → logprob: -3.9693069458007812
    8. ',' → logprob: -4.969306945800781
    9. '()' → logprob: -5.219306945800781
    10. 'へ' → logprob: -5.219306945800781

Token 266: '地' (ID: 5557)
  Prédit: '地'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '地' → logprob: -0.055801767855882645
    2. ' ground' → logprob: -3.9308018684387207
    3. ''' → logprob: -4.055801868438721
    4. ')' → logprob: -5.180801868438721
    5. ' 地' → logprob: -5.180801868438721
    6. 'ground' → logprob: -5.805801868438721
    7. '_ground' → logprob: -7.430801868438721
    8. '')' → logprob: -7.555801868438721
    9. '空' → logprob: -8.305801391601562
    10. ' ' → logprob: -8.555801391601562

Token 267: '上' (ID: 4286)
  Prédit: '上'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '上' → logprob: -0.004746603313833475
    2. '面' → logprob: -5.629746437072754
    3. '```' → logprob: -7.254746437072754
    4. '下' → logprob: -7.879746437072754
    5. '#' → logprob: -11.129746437072754
    6. '``' → logprob: -11.754746437072754
    7. '`' → logprob: -12.004746437072754
    8. '球' → logprob: -12.004746437072754
    9. '0' → logprob: -12.879746437072754
    10. '��' → logprob: -13.004746437072754

Token 268: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13096748292446136
    2. 'から' → logprob: -2.130967378616333
    3. 'に' → logprob: -6.630967617034912
    4. '(' → logprob: -6.755967617034912
    5. 'まで' → logprob: -7.255967617034912
    6. 'へ' → logprob: -8.380967140197754
    7. '）' → logprob: -8.505967140197754
    8. '#' → logprob: -9.380967140197754
    9. '()' → logprob: -9.380967140197754
    10. '())' → logprob: -10.005967140197754

Token 269: 'に' (ID: 5280)
  Prédit: 'から'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'から' → logprob: -0.3466554880142212
    2. 'まで' → logprob: -1.5966554880142212
    3. ')' → logprob: -2.8466553688049316
    4. 'に' → logprob: -3.7216553688049316
    5. 'へ' → logprob: -5.846655368804932
    6. '
' → logprob: -6.471655368804932
    7. '(' → logprob: -7.096655368804932
    8. ',' → logprob: -7.346655368804932
    9. 'で' → logprob: -7.721655368804932
    10. ' ' → logprob: -8.34665584564209

Token 270: '降' (ID: 36722)
  Prédit: '戻'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '戻' → logprob: -1.2357980012893677
    2. '到' → logprob: -1.8607980012893677
    3. '行' → logprob: -1.9857980012893677
    4. '```' → logprob: -2.360797882080078
    5. 'return' → logprob: -2.860797882080078
    6. 'to' → logprob: -3.110797882080078
    7. '#' → logprob: -3.235797882080078
    8. 'go' → logprob: -3.360797882080078
    9. '帰' → logprob: -3.610797882080078
    10. '移' → logprob: -3.860797882080078

Token 271: 'り' (ID: 7297)
  Prédit: 'り'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.003235228592529893
    2. '```' → logprob: -5.878235340118408
    3. '
' → logprob: -8.37823486328125
    4. 'る' → logprob: -9.62823486328125
    5. 'ります' → logprob: -9.75323486328125
    6. '#' → logprob: -11.62823486328125
    7. '``' → logprob: -11.75323486328125
    8. '�' → logprob: -11.87823486328125
    9. '(' → logprob: -12.00323486328125
    10. '-' → logprob: -12.25323486328125

Token 272: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.5806791186332703
    2. 'り' → logprob: -0.8306791186332703
    3. 'ります' → logprob: -6.205678939819336
    4. '```' → logprob: -6.705678939819336
    5. 'って' → logprob: -6.955678939819336
    6. 'れる' → logprob: -8.955678939819336
    7. 'return' → logprob: -9.455678939819336
    8. 'ろ' → logprob: -9.455678939819336
    9. 'っ' → logprob: -9.955678939819336
    10. '#' → logprob: -10.330678939819336

Token 273: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.211391806602478
    2. 'def' → logprob: -1.211391806602478
    3. ')' → logprob: -1.586391806602478
    4. ' def' → logprob: -2.7113919258117676
    5. ',' → logprob: -3.7113919258117676
    6. ':' → logprob: -3.7113919258117676
    7. ' ' → logprob: -3.8363919258117676
    8. 'n' → logprob: -4.711391925811768
    9. ' =' → logprob: -5.086391925811768
    10. '(n' → logprob: -5.086391925811768

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0212411880493164
    2. ' k' → logprob: -1.5212411880493164
    3. ' current' → logprob: -1.8962411880493164
    4. '
' → logprob: -2.1462411880493164
    5. 'k' → logprob: -3.1462411880493164
    6. 'current' → logprob: -3.8962411880493164
    7. ' cur' → logprob: -4.021241188049316
    8. ' res' → logprob: -4.771241188049316
    9. 'def' → logprob: -4.771241188049316
    10. '```' → logprob: -5.021241188049316

Token 275: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1470271348953247
    2. ' k' → logprob: -1.5220271348953247
    3. ' current' → logprob: -1.5220271348953247
    4. 'current' → logprob: -1.8970271348953247
    5. 'pos' → logprob: -4.022027015686035
    6. ' res' → logprob: -4.647027015686035
    7. ' position' → logprob: -4.897027015686035
    8. '
' → logprob: -5.147027015686035
    9. 'cur' → logprob: -5.147027015686035
    10. 'position' → logprob: -5.397027015686035

Token 276: ' k' (ID: 372)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.9535473585128784
    2. 'current' → logprob: -1.8285473585128784
    3. 'k' → logprob: -2.078547477722168
    4. 'pos' → logprob: -2.578547477722168
    5. ' k' → logprob: -2.703547477722168
    6. ' pos' → logprob: -3.203547477722168
    7. ' position' → logprob: -3.578547477722168
    8. ' cur' → logprob: -3.703547477722168
    9. 'dp' → logprob: -4.078547477722168
    10. 'cur' → logprob: -4.078547477722168

Token 277: 'は' (ID: 5205)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0030611343681812286
    2. '=' → logprob: -6.003061294555664
    3. ' ' → logprob: -8.378061294555664
    4. '_' → logprob: -9.253061294555664
    5. ' _' → logprob: -9.503061294555664
    6. ')' → logprob: -9.753061294555664
    7. ',' → logprob: -10.128061294555664
    8. '<|end|>' → logprob: -11.003061294555664
    9. '_current' → logprob: -11.253061294555664
    10. '_space' → logprob: -11.878061294555664

Token 278: '現在' (ID: 96436)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2019602507352829
    2. ' ' → logprob: -1.7019602060317993
    3. ' k' → logprob: -8.576960563659668
    4. ' m' → logprob: -9.076960563659668
    5. 'm' → logprob: -9.826960563659668
    6. ' n' → logprob: -9.951960563659668
    7. 'k' → logprob: -10.201960563659668
    8. '1' → logprob: -10.701960563659668
    9. ' int' → logprob: -11.201960563659668
    10. '   ' → logprob: -11.326960563659668

Token 279: 'の' (ID: 3385)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3222302198410034
    2. ' ' → logprob: -1.3222302198410034
    3. '   ' → logprob: -5.197230339050293
    4. ',' → logprob: -7.447230339050293
    5. ' None' → logprob: -7.447230339050293
    6. 'の' → logprob: -7.572230339050293
    7. ' =' → logprob: -7.947230339050293
    8. '段' → logprob: -8.572230339050293
    9. '1' → logprob: -8.697230339050293
    10. ' #' → logprob: -8.822230339050293

Token 280: '段' (ID: 27561)
  Prédit: '段'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '段' → logprob: -0.09777996689081192
    2. '0' → logprob: -2.8477799892425537
    3. 'm' → logprob: -4.722779750823975
    4. 'step' → logprob: -4.847779750823975
    5. 'position' → logprob: -4.847779750823975
    6. ' ' → logprob: -6.347779750823975
    7. 'level' → logprob: -6.472779750823975
    8. '階' → logprob: -6.472779750823975
    9. 'segment' → logprob: -6.472779750823975
    10. 'k' → logprob: -7.097779750823975

Token 281: '数' (ID: 7135)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5121092200279236
    2. ')' → logprob: -2.0121092796325684
    3. ' _' → logprob: -2.3871092796325684
    4. ' ' → logprob: -3.0121092796325684
    5. ',' → logprob: -3.1371092796325684
    6. ' ,' → logprob: -3.7621092796325684
    7. '   ' → logprob: -4.137109279632568
    8. ' =' → logprob: -4.137109279632568
    9. 'def' → logprob: -4.762109279632568
    10. '  ' → logprob: -5.512109279632568

Token 282: '(' (ID: 7)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.2538323998451233
    2. '   ' → logprob: -2.0038323402404785
    3. 'k' → logprob: -2.8788323402404785
    4. ' def' → logprob: -3.8788323402404785
    5. 'def' → logprob: -4.5038323402404785
    6. '
' → logprob: -7.5038323402404785
    7. '	k' → logprob: -7.8788323402404785
    8. '```' → logprob: -9.128832817077637
    9. ' ' → logprob: -9.753832817077637
    10. ',k' → logprob: -10.503832817077637

Token 283: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18642349541187286
    2. ' )' → logprob: -1.8114235401153564
    3. 'n' → logprob: -6.311423301696777
    4. ' ' → logprob: -7.186423301696777
    5. '0' → logprob: -7.186423301696777
    6. ',' → logprob: -7.686423301696777
    7. '_' → logprob: -8.061423301696777
    8. '=' → logprob: -8.186423301696777
    9. '```' → logprob: -8.186423301696777
    10. 'def' → logprob: -8.311423301696777

Token 284: '~' (ID: 93)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015378494746983051
    2. ' )' → logprob: -4.640378475189209
    3. ')
' → logprob: -5.890378475189209
    4. 'から' → logprob: -6.265378475189209
    5. ' )
' → logprob: -8.515378952026367
    6. '）' → logprob: -8.765378952026367
    7. '
' → logprob: -9.140378952026367
    8. '+' → logprob: -9.390378952026367
    9. ',' → logprob: -9.890378952026367
    10. '0' → logprob: -10.390378952026367

Token 285: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11340933293104172
    2. ' n' → logprob: -2.2384092807769775
    3. 'm' → logprob: -7.488409519195557
    4. ' m' → logprob: -11.238409042358398
    5. ')n' → logprob: -11.738409042358398
    6. ')' → logprob: -13.113409042358398
    7. '
' → logprob: -13.988409042358398
    8. '0' → logprob: -14.363409042358398
    9. '_n' → logprob: -14.863409042358398
    10. 'len' → logprob: -14.863409042358398

Token 286: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009341167286038399
    2. '+' → logprob: -5.009341239929199
    3. ' )' → logprob: -6.759341239929199
    4. ')
' → logprob: -7.384341239929199
    5. '),' → logprob: -8.0093412399292
    6. ')、' → logprob: -9.1343412399292
    7. '）' → logprob: -9.5093412399292
    8. ')

' → logprob: -10.0093412399292
    9. 'の' → logprob: -10.0093412399292
    10. 'n' → logprob: -10.3843412399292

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -15.75
    3. ' ' → logprob: -16.375
    4. ')' → logprob: -16.75
    5. '+' → logprob: -16.875
    6. '１' → logprob: -17.5
    7. '```' → logprob: -17.5
    8. '
' → logprob: -18.125
    9. 'n' → logprob: -18.625
    10. '7' → logprob: -19.625

Token 288: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013219076208770275
    2. ' )' → logprob: -7.251321792602539
    3. ')
' → logprob: -7.501321792602539
    4. '),' → logprob: -11.001321792602539
    5. '）' → logprob: -11.251321792602539
    6. ')

' → logprob: -11.876321792602539
    7. 'def' → logprob: -12.501321792602539
    8. ' )
' → logprob: -12.876321792602539
    9. ')n' → logprob: -13.001321792602539
    10. 'まで' → logprob: -13.251321792602539

Token 289: '   ' (ID: 271)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3162010908126831
    2. 'k' → logprob: -1.316201090812683
    3. '   ' → logprob: -6.066201210021973
    4. ' current' → logprob: -7.941201210021973
    5. ' def' → logprob: -9.316201210021973
    6. '
' → logprob: -9.941201210021973
    7. ' ' → logprob: -10.316201210021973
    8. '	k' → logprob: -10.566201210021973
    9. ' n' → logprob: -11.191201210021973
    10. 'current' → logprob: -11.441201210021973

Token 290: ' #' (ID: 1069)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5276663899421692
    2. ' def' → logprob: -1.6526663303375244
    3. 'k' → logprob: -2.0276663303375244
    4. 'def' → logprob: -2.5276663303375244
    5. '   ' → logprob: -5.7776665687561035
    6. '
' → logprob: -6.4026665687561035
    7. ' ans' → logprob: -7.4026665687561035
    8. ' res' → logprob: -7.7776665687561035
    9. 'res' → logprob: -8.152666091918945
    10. ' from' → logprob: -8.777666091918945

Token 291: ' idx' (ID: 14016)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15253381431102753
    2. ' def' → logprob: -2.027533769607544
    3. 'from' → logprob: -5.777534008026123
    4. 'k' → logprob: -6.777534008026123
    5. 'res' → logprob: -7.027534008026123
    6. '
' → logprob: -7.027534008026123
    7. ' code' → logprob: -7.277534008026123
    8. ' k' → logprob: -7.402534008026123
    9. ' from' → logprob: -7.902534008026123
    10. 'result' → logprob: -8.027533531188965

Token 292: 'は' (ID: 5205)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3423205316066742
    2. ')' → logprob: -2.342320442199707
    3. ' ' → logprob: -2.467320442199707
    4. '_' → logprob: -2.967320442199707
    5. '=' → logprob: -4.217320442199707
    6. ',' → logprob: -4.467320442199707
    7. ' _' → logprob: -4.467320442199707
    8. ' ,' → logprob: -5.467320442199707
    9. '<|end|>' → logprob: -5.467320442199707
    10. ' )' → logprob: -6.217320442199707

Token 293: '現在' (ID: 96436)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4609450697898865
    2. ' ' → logprob: -2.2109451293945312
    3. ' current' → logprob: -2.5859451293945312
    4. 'current' → logprob: -2.8359451293945312
    5. 'k' → logprob: -3.7109451293945312
    6. '現在' → logprob: -3.8359451293945312
    7. '曲' → logprob: -3.8359451293945312
    8. ' k' → logprob: -4.085945129394531
    9. 'S' → logprob: -4.335945129394531
    10. ' S' → logprob: -4.460945129394531

Token 294: 'まで' (ID: 54342)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'の' → logprob: -1.3589590787887573
    2. '曲' → logprob: -1.6089590787887573
    3. '<|end|>' → logprob: -2.108959197998047
    4. '_song' → logprob: -2.483959197998047
    5. '_' → logprob: -2.608959197998047
    6. ')' → logprob: -2.733959197998047
    7. 'def' → logprob: -2.733959197998047
    8. ' ' → logprob: -3.733959197998047
    9. '_s' → logprob: -3.858959197998047
    10. 'song' → logprob: -4.733959197998047

Token 295: 'に' (ID: 5280)
  Prédit: '演'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '演' → logprob: -0.05307864770293236
    2. 'の' → logprob: -3.3030786514282227
    3. '出' → logprob: -5.428078651428223
    4. '曲' → logprob: -5.803078651428223
    5. '再' → logprob: -6.053078651428223
    6. '進' → logprob: -6.928078651428223
    7. ' \xe6\xbc' → logprob: -7.178078651428223
    8. ' ' → logprob: -7.803078651428223
    9. 'に' → logprob: -7.803078651428223
    10. '   ' → logprob: -7.803078651428223

Token 296: '出' (ID: 6390)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.7558077573776245
    2. ' ' → logprob: -1.7558077573776245
    3. '曲' → logprob: -2.005807876586914
    4. '演' → logprob: -2.255807876586914
    5. ' S' → logprob: -2.380807876586914
    6. 'm' → logprob: -3.005807876586914
    7. 'idx' → logprob: -3.130807876586914
    8. '出' → logprob: -3.380807876586914
    9. 'k' → logprob: -3.880807876586914
    10. ' m' → logprob: -4.130807876586914

Token 297: 'した' (ID: 23085)
  Prédit: 'した'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'した' → logprob: -0.13449226319789886
    2. 'す' → logprob: -2.1344921588897705
    3. 'た' → logprob: -5.25949239730835
    4. 'された' → logprob: -6.50949239730835
    5. 'して' → logprob: -7.88449239730835
    6. 'せ' → logprob: -8.259491920471191
    7. 'て' → logprob: -9.259491920471191
    8. 'る' → logprob: -10.009491920471191
    9. 'し' → logprob: -10.759491920471191
    10. '```' → logprob: -11.009491920471191

Token 298: '曲' (ID: 43628)
  Prédit: '曲'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '曲' → logprob: -1.229156732559204
    2. 'm' → logprob: -1.479156732559204
    3. '音' → logprob: -1.854156732559204
    4. 'S' → logprob: -2.354156732559204
    5. 'token' → logprob: -2.854156732559204
    6. 'k' → logprob: -3.354156732559204
    7. 'song' → logprob: -3.729156732559204
    8. 'idx' → logprob: -3.979156732559204
    9. 'sound' → logprob: -3.979156732559204
    10. 's' → logprob: -4.354156494140625

Token 299: 'の' (ID: 3385)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04904568940401077
    2. '   ' → logprob: -3.6740458011627197
    3. ' def' → logprob: -4.424045562744141
    4. '
' → logprob: -5.674045562744141
    5. ' ' → logprob: -6.174045562744141
    6. ',' → logprob: -6.174045562744141
    7. ':' → logprob: -7.799045562744141
    8. ')' → logprob: -7.799045562744141
    9. '<|end|>' → logprob: -8.17404556274414
    10. ' =' → logprob: -8.29904556274414

Token 300: '長' (ID: 35081)
  Prédit: '数'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '数' → logprob: -0.6867514252662659
    2. '曲' → logprob: -1.436751365661621
    3. 'index' → logprob: -2.936751365661621
    4. '音' → logprob: -3.061751365661621
    5. '番号' → logprob: -3.436751365661621
    6. 'number' → logprob: -3.936751365661621
    7. 'num' → logprob: -4.061751365661621
    8. ' ' → logprob: -4.061751365661621
    9. 'count' → logprob: -4.311751365661621
    10. 'token' → logprob: -4.436751365661621

Token 301: 'さ' (ID: 7500)
  Prédit: 'さ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'さ' → logprob: -0.00029708960209973156
    2. '度' → logprob: -9.125297546386719
    3. 'ex' → logprob: -10.125297546386719
    4. 'idx' → logprob: -10.500297546386719
    5. '   ' → logprob: -11.000297546386719
    6. 'index' → logprob: -11.250297546386719
    7. 'x' → logprob: -11.500297546386719
    8. 'th' → logprob: -11.500297546386719
    9. '
' → logprob: -11.625297546386719
    10. ' ' → logprob: -11.750297546386719

Token 302: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07848518341779709
    2. ' def' → logprob: -3.2034852504730225
    3. '   ' → logprob: -4.203485012054443
    4. '
' → logprob: -5.078485012054443
    5. ')' → logprob: -5.578485012054443
    6. ',' → logprob: -5.828485012054443
    7. ' ' → logprob: -6.078485012054443
    8. ':' → logprob: -6.828485012054443
    9. '):' → logprob: -7.953485012054443
    10. '<|end|>' → logprob: -7.953485012054443

Token 303: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9161390662193298
    2. 'def' → logprob: -0.9161390662193298
    3. '   ' → logprob: -1.6661391258239746
    4. '
' → logprob: -4.791139125823975
    5. '	def' → logprob: -6.916139125823975
    6. '    
' → logprob: -7.291139125823975
    7. ',' → logprob: -8.791138648986816
    8. '<|end|>' → logprob: -8.916138648986816
    9. '\t' → logprob: -9.041138648986816
    10. '\' → logprob: -9.916138648986816

Token 304: ' from' (ID: 591)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6006389856338501
    2. ' def' → logprob: -1.72563898563385
    3. '   ' → logprob: -1.85063898563385
    4. ' k' → logprob: -2.4756388664245605
    5. 'k' → logprob: -4.4756388664245605
    6. '    ' → logprob: -5.3506388664245605
    7. ' ' → logprob: -5.6006388664245605
    8. ' from' → logprob: -5.7256388664245605
    9. 'from' (adapté à ' from') → logprob: -6.1006388664245605
    10. ' return' → logprob: -7.4756388664245605

Token 305: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0012603526702150702
    2. ' collections' → logprob: -7.001260280609131
    3. 'bis' → logprob: -9.001260757446289
    4. 'heap' → logprob: -9.126260757446289
    5. 'sys' → logprob: -9.501260757446289
    6. 'math' → logprob: -10.876260757446289
    7. 'copy' → logprob: -11.126260757446289
    8. 'fun' → logprob: -12.001260757446289
    9. 'queue' → logprob: -14.126260757446289
    10. '_' → logprob: -15.001260757446289

Token 306: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1428726464509964
    2. ' import' → logprob: -2.0178725719451904
    3. '	import' → logprob: -9.76787281036377
    4. '.import' → logprob: -10.14287281036377
    5. '```' → logprob: -10.26787281036377
    6. '_import' → logprob: -10.76787281036377
    7. '.' → logprob: -11.51787281036377
    8. 'from' → logprob: -11.76787281036377
    9. 's' → logprob: -12.64287281036377
    10. '<|end|>' → logprob: -13.26787281036377

Token 307: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.00019781860464718193
    2. 'default' → logprob: -9.250197410583496
    3. ' deque' → logprob: -9.250197410583496
    4. 'de' → logprob: -12.875197410583496
    5. 'collections' → logprob: -13.000197410583496
    6. ' defaultdict' → logprob: -14.000197410583496
    7. 'named' → logprob: -19.500198364257812
    8. '```' → logprob: -19.625198364257812
    9. 'Deque' → logprob: -19.875198364257812
    10. 'queue' → logprob: -20.250198364257812

Token 308: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1655582189559937
    2. 'queue' → logprob: -1.1655582189559937
    3. 'q' → logprob: -1.6655582189559937
    4. ' queue' → logprob: -2.415558338165283
    5. 'deque' → logprob: -3.165558338165283
    6. 'dp' → logprob: -5.040558338165283
    7. 'dq' → logprob: -5.040558338165283
    8. ' q' → logprob: -5.165558338165283
    9. ' 
' → logprob: -5.415558338165283
    10. 'de' → logprob: -5.415558338165283

Token 309: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1152774095535278
    2. 'queue' → logprob: -1.3652774095535278
    3. 'q' → logprob: -2.2402772903442383
    4. '   ' → logprob: -2.4902772903442383
    5. 'dp' → logprob: -2.6152772903442383
    6. ' queue' → logprob: -2.8652772903442383
    7. '	queue' → logprob: -3.9902772903442383
    8. 'dq' → logprob: -4.115277290344238
    9. '    
' → logprob: -4.365277290344238
    10. ' q' → logprob: -4.365277290344238

Token 310: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -1.4221278429031372
    2. 'queue' (adapté à ' queue') → logprob: -1.5471278429031372
    3. 'q' → logprob: -1.6721278429031372
    4. 'dp' → logprob: -2.0471277236938477
    5. '
' → logprob: -2.5471277236938477
    6. ' q' → logprob: -2.7971277236938477
    7. 'dq' → logprob: -3.9221277236938477
    8. ' dp' → logprob: -4.047127723693848
    9. ' dq' → logprob: -4.547127723693848
    10. 'que' → logprob: -4.672127723693848

Token 311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2588109076023102
    2. ' =' → logprob: -1.6338108777999878
    3. '(' → logprob: -3.6338109970092773
    4. '.' → logprob: -6.383810997009277
    5. '=[]' → logprob: -6.383810997009277
    6. '<|end|>' → logprob: -7.008810997009277
    7. ')' → logprob: -7.258810997009277
    8. ',' → logprob: -7.883810997009277
    9. ' (' → logprob: -8.133810997009277
    10. '.append' → logprob: -8.633810997009277

Token 312: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.12692894041538239
    2. ' deque' → logprob: -2.1269290447235107
    3. 'Deque' → logprob: -15.12692928314209
    4. 'collections' → logprob: -15.12692928314209
    5. 'de' → logprob: -15.87692928314209
    6. '   ' → logprob: -16.126928329467773
    7. '[(' → logprob: -16.626928329467773
    8. ' collections' → logprob: -18.126928329467773
    9. ' ' → logprob: -18.501928329467773
    10. ' [(' → logprob: -18.626928329467773

Token 313: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.07517053931951523
    2. '()' → logprob: -3.0751705169677734
    3. '([' → logprob: -4.325170516967773
    4. '([
' → logprob: -4.700170516967773
    5. '(' → logprob: -5.700170516967773
    6. '()
' → logprob: -7.575170516967773
    7. '((' → logprob: -11.200170516967773
    8. '([...' → logprob: -11.575170516967773
    9. '[(' → logprob: -11.950170516967773
    10. '([]' → logprob: -12.325170516967773

Token 314: '   ' (ID: 271)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.677219569683075
    2. ' (' → logprob: -1.8022196292877197
    3. '([(' → logprob: -2.3022196292877197
    4. '(' → logprob: -2.8022196292877197
    5. '[(' → logprob: -3.0522196292877197
    6. ' [(' → logprob: -3.6772196292877197
    7. 'queue' → logprob: -3.8022196292877197
    8. '<|end|>' → logprob: -4.552219390869141
    9. '[' → logprob: -4.677219390869141
    10. ' queue' → logprob: -4.677219390869141

Token 315: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.17186176776885986
    2. ' queue' → logprob: -1.9218617677688599
    3. '(queue' → logprob: -4.54686164855957
    4. ' (' → logprob: -8.29686164855957
    5. '
' → logprob: -8.42186164855957
    6. '(' → logprob: -8.79686164855957
    7. '   ' → logprob: -8.92186164855957
    8. '	queue' → logprob: -9.54686164855957
    9. '    
' → logprob: -10.04686164855957
    10. '.queue' → logprob: -10.67186164855957

Token 316: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00038956227945163846
    2. '.' → logprob: -7.875389575958252
    3. ' .' → logprob: -12.750389099121094
    4. 'append' → logprob: -13.000389099121094
    5. '.enqueue' → logprob: -13.750389099121094
    6. '_append' → logprob: -14.375389099121094
    7. '=' → logprob: -14.500389099121094
    8. '.extend' → logprob: -14.500389099121094
    9. '   ' → logprob: -14.625389099121094
    10. '.p' → logprob: -15.125389099121094

Token 317: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00150390958879143
    2. '(' → logprob: -6.501503944396973
    3. '([' → logprob: -13.501503944396973
    4. ' ((' → logprob: -16.751502990722656
    5. '[(' → logprob: -17.126502990722656
    6. '(((' → logprob: -17.501502990722656
    7. ' (' → logprob: -18.251502990722656
    8. '([(' → logprob: -18.501502990722656
    9. '(([' → logprob: -18.751502990722656
    10. '(
' → logprob: -18.751502990722656

Token 318: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.492120155598968e-05
    2. '(' → logprob: -10.250064849853516
    3. ' ' → logprob: -10.500064849853516
    4. '   ' → logprob: -14.500064849853516
    5. ' (' → logprob: -15.125064849853516
    6. ')' → logprob: -15.250064849853516
    7. '[' → logprob: -15.375064849853516
    8. '1' → logprob: -15.625064849853516
    9. '[],' → logprob: -16.000064849853516
    10. ',' → logprob: -16.250064849853516

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042768914136104286
    2. ' ,' → logprob: -7.875427722930908
    3. ',m' → logprob: -10.37542724609375
    4. '0' → logprob: -11.50042724609375
    5. ',
' → logprob: -12.62542724609375
    6. ',n' → logprob: -13.87542724609375
    7. ')' → logprob: -14.75042724609375
    8. ',None' → logprob: -14.87542724609375
    9. '<|end|>' → logprob: -15.50042724609375
    10. ' ' → logprob: -15.62542724609375

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005583931924775243
    2. ' ' → logprob: -7.500558376312256
    3. '-' → logprob: -13.125558853149414
    4. ')' → logprob: -13.875558853149414
    5. '[]' → logprob: -14.250558853149414
    6. ' -' → logprob: -14.500558853149414
    7. '   ' → logprob: -15.188058853149414
    8. '[' → logprob: -15.625558853149414
    9. '1' → logprob: -15.688058853149414
    10. '[])' → logprob: -16.125558853149414

Token 321: '))
' (ID: 2210)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004126722924411297
    2. '))' → logprob: -5.62912654876709
    3. ')' → logprob: -8.00412654876709
    4. ',None' → logprob: -9.75412654876709
    5. ',"' → logprob: -9.87912654876709
    6. ' ,' → logprob: -10.62912654876709
    7. ','' → logprob: -11.12912654876709
    8. ',''' → logprob: -11.37912654876709
    9. ',S' → logprob: -11.50412654876709
    10. ',['' → logprob: -12.37912654876709

Token 322: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 323: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.05276206508278847
    2. ' visited' → logprob: -4.052762031555176
    3. 'seen' → logprob: -4.177762031555176
    4. 'while' → logprob: -4.427762031555176
    5. '   ' → logprob: -5.427762031555176
    6. ' while' → logprob: -7.177762031555176
    7. ' seen' → logprob: -7.427762031555176
    8. 'dp' → logprob: -8.052762031555176
    9. 'used' → logprob: -8.177762031555176
    10. ')' → logprob: -9.052762031555176

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16038528084754944
    2. '=' → logprob: -1.910385251045227
    3. '=set' → logprob: -8.785385131835938
    4. '[' → logprob: -12.785385131835938
    5. ')' → logprob: -13.535385131835938
    6. ' ' → logprob: -13.660385131835938
    7. '＝' → logprob: -14.285385131835938
    8. ',' → logprob: -14.410385131835938
    9. ')=' → logprob: -15.160385131835938
    10. '[(' → logprob: -15.410385131835938

Token 325: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.30574965476989746
    2. ' set' → logprob: -1.5557496547698975
    3. '[[' → logprob: -3.0557496547698975
    4. ' [[' → logprob: -5.305749893188477
    5. '{' → logprob: -8.680749893188477
    6. '{}' → logprob: -9.055749893188477
    7. ' {(' → logprob: -9.930749893188477
    8. '[' → logprob: -11.930749893188477
    9. '[(' → logprob: -13.180749893188477
    10. '{{' → logprob: -13.555749893188477

Token 326: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03304026648402214
    2. '()
' → logprob: -3.7830402851104736
    3. '   ' → logprob: -5.4080400466918945
    4. '<|end|>' → logprob: -6.6580400466918945
    5. '((' → logprob: -7.0330400466918945
    6. ')' → logprob: -7.1580400466918945
    7. '([(' → logprob: -7.4080400466918945
    8. '(' → logprob: -7.6580400466918945
    9. '<|end|>' → logprob: -7.7830400466918945
    10. ',' → logprob: -7.9080400466918945

Token 327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7899541854858398
    2. '<|end|>' → logprob: -1.2899541854858398
    3. ' 
' → logprob: -1.9149541854858398
    4. ' (' → logprob: -3.16495418548584
    5. ')' → logprob: -3.66495418548584
    6. '    
' → logprob: -4.66495418548584
    7. '
' → logprob: -4.91495418548584
    8. ' ' → logprob: -5.41495418548584
    9. '(queue' → logprob: -5.41495418548584
    10. ',' → logprob: -5.41495418548584

Token 328: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.9480645656585693
    2. '(' → logprob: -1.3230645656585693
    3. ' visited' → logprob: -1.6980645656585693
    4. ' (' → logprob: -2.3230645656585693
    5. '   ' → logprob: -3.0730645656585693
    6. ' queue' → logprob: -4.698064804077148
    7. 'queue' → logprob: -5.073064804077148
    8. '(queue' → logprob: -6.448064804077148
    9. '       ' → logprob: -8.198064804077148
    10. '```' → logprob: -8.323064804077148

Token 329: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0025560460053384304
    2. '.' → logprob: -6.502555847167969
    3. ' .' → logprob: -7.002555847167969
    4. ' =' → logprob: -9.252555847167969
    5. '=' → logprob: -10.377555847167969
    6. '().' → logprob: -11.502555847167969
    7. '.=' → logprob: -13.502555847167969
    8. '.clear' → logprob: -13.877555847167969
    9. '.append' → logprob: -13.877555847167969
    10. 'add' → logprob: -13.877555847167969

Token 330: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -4.127333340875339e-06
    2. '(' → logprob: -13.000003814697266
    3. ' ((' → logprob: -13.500003814697266
    4. ' ' → logprob: -14.875003814697266
    5. '(queue' → logprob: -16.750003814697266
    6. '   ' → logprob: -17.875003814697266
    7. '```' → logprob: -18.250003814697266
    8. ' (' → logprob: -18.250003814697266
    9. '(((' → logprob: -18.875003814697266
    10. '  ' → logprob: -19.500003814697266

Token 331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.6537622034084052e-05
    2. ' ' → logprob: -10.62502670288086
    3. '(' → logprob: -13.12502670288086
    4. '   ' → logprob: -16.75002670288086
    5. ',' → logprob: -17.12502670288086
    6. ')' → logprob: -17.75002670288086
    7. ' (' → logprob: -17.87502670288086
    8. '
' → logprob: -18.43752670288086
    9. '  ' → logprob: -18.50002670288086
    10. '```' → logprob: -18.68752670288086

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020663968462031335
    2. ' ,' → logprob: -8.62520694732666
    3. ',
' → logprob: -10.62520694732666
    4. '<|end|>' → logprob: -14.25020694732666
    5. ')' → logprob: -14.75020694732666
    6. '0' → logprob: -15.25020694732666
    7. ',None' → logprob: -15.37520694732666
    8. '
' → logprob: -15.62520694732666
    9. ',m' → logprob: -16.000205993652344
    10. '‌,' → logprob: -16.125205993652344

Token 333: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '<|end|>' → logprob: -17.750019073486328
    4. ')' → logprob: -18.125019073486328
    5. '   ' → logprob: -19.812519073486328
    6. '۰' → logprob: -20.062519073486328
    7. '  ' → logprob: -20.312519073486328
    8. '<|end|>' → logprob: -20.875019073486328
    9. '00' → logprob: -21.000019073486328
    10. '000' → logprob: -21.312519073486328

Token 334: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20144978165626526
    2. ')' → logprob: -1.7014497518539429
    3. '))
' → logprob: -10.451449394226074
    4. ')
' → logprob: -12.326449394226074
    5. ')))' → logprob: -13.326449394226074
    6. ' ))' → logprob: -14.826449394226074
    7. ',' → logprob: -14.951449394226074
    8. '),' → logprob: -15.076449394226074
    9. '))

' → logprob: -15.951449394226074
    10. ' )' → logprob: -16.45145034790039

Token 335: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20532198250293732
    2. '   ' → logprob: -2.080322027206421
    3. '<|end|>' → logprob: -3.455322027206421
    4. ',' → logprob: -3.830322027206421
    5. ' )' → logprob: -6.205321788787842
    6. ' ' → logprob: -6.205321788787842
    7. '    ' → logprob: -6.830321788787842
    8. '(' → logprob: -7.455321788787842
    9. ' while' → logprob: -8.455322265625
    10. ' 
' → logprob: -8.705322265625

Token 336: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.08358047902584076
    2. ' while' → logprob: -3.083580493927002
    3. ')' → logprob: -3.458580493927002
    4. '   ' → logprob: -5.958580493927002
    5. '	while' → logprob: -8.333580017089844
    6. '(' → logprob: -10.458580017089844
    7. ',' → logprob: -10.833580017089844
    8. 'for' → logprob: -12.708580017089844
    9. '```' → logprob: -12.708580017089844
    10. '<|end|>' → logprob: -12.708580017089844

Token 337: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.10022101551294327
    2. ' queue' → logprob: -2.3502209186553955
    3. 'len' → logprob: -11.475220680236816
    4. '(queue' → logprob: -12.975220680236816
    5. ' len' → logprob: -13.725220680236816
    6. '	queue' → logprob: -14.850220680236816
    7. 'True' → logprob: -15.850220680236816
    8. ' ' → logprob: -16.975221633911133
    9. 'que' → logprob: -17.100221633911133
    10. '   ' → logprob: -17.225221633911133

Token 338: ':
' (ID: 734)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.004824549425393343
    2. '.pop' → logprob: -5.504824638366699
    3. '.append' → logprob: -7.754824638366699
    4. '.' → logprob: -8.6298246383667
    5. ':
' → logprob: -9.3798246383667
    6. ' .' → logprob: -11.0048246383667
    7. '   ' → logprob: -11.2548246383667
    8. '.dequeue' → logprob: -11.5048246383667
    9. ':' → logprob: -11.7548246383667
    10. '):
' → logprob: -13.1298246383667

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026295650750398636
    2. ' (' → logprob: -4.2762956619262695
    3. ',' → logprob: -5.0262956619262695
    4. '(' → logprob: -6.1512956619262695
    5. '    ' → logprob: -7.0262956619262695
    6. '   ' → logprob: -7.6512956619262695
    7. ' ,' → logprob: -8.02629566192627
    8. '<|end|>' → logprob: -8.15129566192627
    9. '        
' → logprob: -8.65129566192627
    10. '     ' → logprob: -9.02629566192627

Token 340: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.0011752246646210551
    2. ' k' → logprob: -6.751175403594971
    3. '(k' → logprob: -12.251174926757812
    4. '	k' → logprob: -16.126174926757812
    5. '   ' → logprob: -17.001174926757812
    6. 'cur' → logprob: -17.376174926757812
    7. 'current' → logprob: -17.626174926757812
    8. ' (' → logprob: -18.501174926757812
    9. '_k' → logprob: -18.501174926757812
    10. '```' → logprob: -18.751174926757812

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008559550042264163
    2. ',i' → logprob: -7.125855922698975
    3. ' ,' → logprob: -9.875856399536133
    4. ',k' → logprob: -16.750856399536133
    5. '_,' → logprob: -17.625856399536133
    6. ',n' → logprob: -17.750856399536133
    7. ',
' → logprob: -18.000856399536133
    8. 'i' → logprob: -18.250856399536133
    9. ',index' → logprob: -18.875856399536133
    10. '，' → logprob: -18.875856399536133

Token 342: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0002622894535306841
    2. ' idx' → logprob: -8.250262260437012
    3. '_idx' → logprob: -14.375262260437012
    4. '	idx' → logprob: -15.750262260437012
    5. 'index' → logprob: -16.000263214111328
    6. 'i' → logprob: -16.375263214111328
    7. '
' → logprob: -17.625263214111328
    8. 's' → logprob: -17.625263214111328
    9. 'id' → logprob: -17.750263214111328
    10. 't' → logprob: -17.750263214111328

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07894036173820496
    2. '=' → logprob: -2.5789403915405273
    3. ',' → logprob: -10.828940391540527
    4. ')' → logprob: -11.203940391540527
    5. ')=' → logprob: -11.203940391540527
    6. ' =
' → logprob: -13.703940391540527
    7. ',k' → logprob: -14.453940391540527
    8. ' ' → logprob: -14.578940391540527
    9. '=k' → logprob: -14.578940391540527
    10. '    ' → logprob: -16.45393943786621

Token 344: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.06196846812963486
    2. ' queue' → logprob: -2.8119685649871826
    3. '	queue' → logprob: -14.811968803405762
    4. '(queue' → logprob: -15.811968803405762
    5. '   ' → logprob: -16.186967849731445
    6. ' ' → logprob: -16.311967849731445
    7. 'que' → logprob: -16.436967849731445
    8. '
' → logprob: -17.186967849731445
    9. '.queue' → logprob: -17.811967849731445
    10. '    ' → logprob: -18.811967849731445

Token 345: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5765359401702881
    2. ' =' → logprob: -0.8265359401702881
    3. ')' → logprob: -7.576536178588867
    4. '.pop' → logprob: -10.326536178588867
    5. '.append' → logprob: -11.451536178588867
    6. ' =
' → logprob: -11.701536178588867
    7. '.' → logprob: -11.826536178588867
    8. ',' → logprob: -12.201536178588867
    9. ')=' → logprob: -12.576536178588867
    10. '   ' → logprob: -12.951536178588867

Token 346: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0003942112671211362
    2. 'op' → logprob: -7.875394344329834
    3. 'opl' → logprob: -11.750393867492676
    4. 'ople' → logprob: -12.000393867492676
    5. 'opt' → logprob: -16.875394821166992
    6. 'opf' → logprob: -17.250394821166992
    7. 'oplevel' → logprob: -17.750394821166992
    8. '```' → logprob: -17.750394821166992
    9. 'p' → logprob: -17.875394821166992
    10. '   ' → logprob: -18.000394821166992

Token 347: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2292725145816803
    2. ')' → logprob: -2.1042726039886475
    3. '       ' → logprob: -2.9792726039886475
    4. '<|end|>' → logprob: -4.354272365570068
    5. '        
' → logprob: -4.604272365570068
    6. ')
' → logprob: -5.854272365570068
    7. '<|end|>' → logprob: -6.479272365570068
    8. '  
' → logprob: -6.604272365570068
    9. ' 
' → logprob: -6.979272365570068
    10. '    
' → logprob: -7.354272365570068

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006214474327862263
    2. '<|end|>' → logprob: -5.131214618682861
    3. '        
' → logprob: -9.381214141845703
    4. ')' → logprob: -9.631214141845703
    5. '<|end|>' → logprob: -9.881214141845703
    6. ' if' → logprob: -10.256214141845703
    7. ',' → logprob: -11.006214141845703
    8. 'if' → logprob: -11.881214141845703
    9. '        ' → logprob: -12.256214141845703
    10. '   ' → logprob: -12.256214141845703

Token 349: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03925561159849167
    2. ' if' → logprob: -3.2892556190490723
    3. 'for' → logprob: -7.039255619049072
    4. '       ' → logprob: -8.664255142211914
    5. ' for' → logprob: -8.914255142211914
    6. '   ' → logprob: -10.914255142211914
    7. 'i' → logprob: -12.914255142211914
    8. '           ' → logprob: -13.414255142211914
    9. '        
' → logprob: -13.539255142211914
    10. '#' → logprob: -13.789255142211914

Token 350: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6934733390808105
    2. ' idx' → logprob: -0.6934733390808105
    3. '(idx' → logprob: -8.943473815917969
    4. 'k' → logprob: -9.068473815917969
    5. ' k' → logprob: -10.068473815917969
    6. '	idx' → logprob: -10.568473815917969
    7. ' (' → logprob: -11.568473815917969
    8. '(' → logprob: -13.693473815917969
    9. ' ' → logprob: -14.818473815917969
    10. '   ' → logprob: -15.443473815917969

Token 351: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12693136930465698
    2. '==' → logprob: -2.1269314289093018
    3. ')==' → logprob: -13.751931190490723
    4. ']==' → logprob: -14.376931190490723
    5. '<|end|>' → logprob: -15.126931190490723
    6. '=' → logprob: -15.251931190490723
    7. '==
' → logprob: -15.251931190490723
    8. ')' → logprob: -15.626931190490723
    9. ' =' → logprob: -15.751931190490723
    10. '==(' → logprob: -15.876931190490723

Token 352: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.014586996287107468
    2. 'len' → logprob: -4.389586925506592
    3. ' m' → logprob: -6.264586925506592
    4. ' len' → logprob: -8.76458740234375
    5. 'n' → logprob: -11.26458740234375
    6. ' ' → logprob: -14.01458740234375
    7. '	m' → logprob: -14.26458740234375
    8. '   ' → logprob: -14.51458740234375
    9. '(len' → logprob: -14.76458740234375
    10. '(m' → logprob: -14.76458740234375

Token 353: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0939590185880661
    2. ' and' → logprob: -2.468959093093872
    3. ':
' → logprob: -5.843958854675293
    4. 'and' → logprob: -6.593958854675293
    5. ':return' → logprob: -8.343958854675293
    6. ' :' → logprob: -8.593958854675293
    7. '<|end|>' → logprob: -8.968958854675293
    8. ' ' → logprob: -9.218958854675293
    9. '+' → logprob: -10.593958854675293
    10. ' or' → logprob: -10.968958854675293

Token 354: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.016034485772252083
    2. ' k' → logprob: -4.1410346031188965
    3. '   ' → logprob: -16.516035079956055
    4. '(k' → logprob: -16.641035079956055
    5. ' ' → logprob: -16.891035079956055
    6. '	k' → logprob: -17.516035079956055
    7. '
' → logprob: -18.266035079956055
    8. '           ' → logprob: -18.266035079956055
    9. ')' → logprob: -18.766035079956055
    10. ',k' → logprob: -19.016035079956055

Token 355: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25193408131599426
    2. '==' → logprob: -1.5019340515136719
    3. '==(' → logprob: -13.126934051513672
    4. ')==' → logprob: -13.751934051513672
    5. ']==' → logprob: -14.376934051513672
    6. '==
' → logprob: -14.626934051513672
    7. '=' → logprob: -15.126934051513672
    8. ' ' → logprob: -15.376934051513672
    9. '===' → logprob: -16.376934051513672
    10. '()==' → logprob: -16.501934051513672

Token 356: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005589702632278204
    2. ' n' → logprob: -5.505589485168457
    3. 'len' → logprob: -6.505589485168457
    4. ' len' → logprob: -11.130589485168457
    5. '	n' → logprob: -16.130590438842773
    6. '(n' → logprob: -16.380590438842773
    7. '(len' → logprob: -16.630590438842773
    8. '   ' → logprob: -17.005590438842773
    9. '12' → logprob: -17.130590438842773
    10. ' (' → logprob: -17.130590438842773

Token 357: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00018161057960242033
    2. ' +' → logprob: -8.625181198120117
    3. '＋' → logprob: -13.250181198120117
    4. '+
' → logprob: -16.125181198120117
    5. '1' → logprob: -16.625181198120117
    6. '
' → logprob: -17.750181198120117
    7. ' ' → logprob: -18.000181198120117
    8. '()+' → logprob: -18.750181198120117
    9. ''+' → logprob: -19.000181198120117
    10. '#' → logprob: -19.500181198120117

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '0' → logprob: -17.75
    4. '```' → logprob: -17.875
    5. '<|end|>' → logprob: -18.625
    6. 'from' → logprob: -19.375
    7. '   ' → logprob: -19.375
    8. '１' → logprob: -19.5
    9. '
' → logprob: -19.75
    10. '[' → logprob: -19.75

Token 359: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07916604727506638
    2. ':
' → logprob: -2.5791659355163574
    3. ':return' → logprob: -8.954166412353516
    4. '):' → logprob: -9.954166412353516
    5. '):
' → logprob: -10.204166412353516
    6. '       ' → logprob: -10.454166412353516
    7. '           ' → logprob: -10.954166412353516
    8. ' and' → logprob: -12.079166412353516
    9. ')' → logprob: -12.079166412353516
    10. '<|end|>' → logprob: -13.829166412353516

Token 360: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006121229380369186
    2. 'return' → logprob: -5.6311211585998535
    3. ' return' → logprob: -6.0061211585998535
    4. '
' → logprob: -11.381121635437012
    5. '               ' → logprob: -11.631121635437012
    6. 'break' → logprob: -11.631121635437012
    7. 'continue' → logprob: -12.381121635437012
    8. ' break' → logprob: -12.381121635437012
    9. '       ' → logprob: -12.506121635437012
    10. '		' → logprob: -13.006121635437012

Token 361: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06990186125040054
    2. ' return' → logprob: -3.319901943206787
    3. 'print' → logprob: -3.569901943206787
    4. '           ' → logprob: -6.194901943206787
    5. 'break' → logprob: -7.194901943206787
    6. '       ' → logprob: -8.569901466369629
    7. ' print' → logprob: -8.819901466369629
    8. ' break' → logprob: -10.444901466369629
    9. '   ' → logprob: -10.569901466369629
    10. '
' → logprob: -11.444901466369629

Token 362: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.48180094361305237
    2. 'True' → logprob: -0.98180091381073
    3. ''' → logprob: -5.1068010330200195
    4. '"T' → logprob: -7.6068010330200195
    5. ''T' → logprob: -8.10680103302002
    6. 'k' → logprob: -8.10680103302002
    7. ' True' → logprob: -8.73180103302002
    8. '"k' → logprob: -9.35680103302002
    9. '(True' → logprob: -9.73180103302002
    10. '"S' → logprob: -9.73180103302002

Token 363: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0008104594890028238
    2. 'YES' → logprob: -7.250810623168945
    3. 'Possible' → logprob: -10.000810623168945
    4. ' Yes' → logprob: -10.125810623168945
    5. '"' → logprob: -12.000810623168945
    6. 'True' → logprob: -12.375810623168945
    7. 'yes' → logprob: -12.875810623168945
    8. 'possible' → logprob: -14.125810623168945
    9. 'No' → logprob: -15.375810623168945
    10. '_yes' → logprob: -15.375810623168945

Token 364: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.007555271498858929
    2. ')"' → logprob: -5.7575554847717285
    3. '"
' → logprob: -6.1325554847717285
    4. ')' → logprob: -6.3825554847717285
    5. '\n' → logprob: -7.7575554847717285
    6. '")' → logprob: -10.00755500793457
    7. ')"
' → logprob: -10.88255500793457
    8. '   ' → logprob: -12.13255500793457
    9. '       ' → logprob: -13.00755500793457
    10. ')
' → logprob: -13.13255500793457

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33059996366500854
    2. '<|end|>' → logprob: -1.3306000232696533
    3. '        
' → logprob: -4.580599784851074
    4. '
' → logprob: -5.705599784851074
    5. '<|end|>' → logprob: -6.955599784851074
    6. '\n' → logprob: -7.080599784851074
    7. ')' → logprob: -7.455599784851074
    8. '  
' → logprob: -8.455599784851074
    9. '		
' → logprob: -8.580599784851074
    10. '    
' → logprob: -8.580599784851074

Token 366: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01861037313938141
    2. 'for' → logprob: -4.64361047744751
    3. ' for' → logprob: -5.01861047744751
    4. '        
' → logprob: -6.89361047744751
    5. 'if' → logprob: -7.89361047744751
    6. 'next' → logprob: -8.018610000610352
    7. '
' → logprob: -8.393610000610352
    8. ' if' → logprob: -9.393610000610352
    9. ' next' → logprob: -9.893610000610352
    10. '   ' → logprob: -10.518610000610352

Token 367: ' 動' (ID: 158566)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5764089822769165
    2. ' for' → logprob: -0.8264089822769165
    3. ' i' → logprob: -9.201409339904785
    4. 'if' → logprob: -9.326409339904785
    5. 'i' → logprob: -9.826409339904785
    6. ' next' → logprob: -9.826409339904785
    7. '   ' → logprob: -9.826409339904785
    8. ' if' → logprob: -10.076409339904785
    9. '       ' → logprob: -10.201409339904785
    10. 'next' → logprob: -10.826409339904785

Token 368: 'け' (ID: 15707)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.755508542060852
    2. 'け' → logprob: -1.505508542060852
    3. 'か' → logprob: -2.2555084228515625
    4. 'k' → logprob: -3.6305084228515625
    5. 'from' → logprob: -4.0055084228515625
    6. 'dx' → logprob: -4.2555084228515625
    7. 't' → logprob: -4.5055084228515625
    8. 'く' → logprob: -4.7555084228515625
    9. 'next' → logprob: -4.7555084228515625
    10. 'き' → logprob: -5.0055084228515625

Token 369: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.0018918646965175867
    2. 'for' → logprob: -7.00189208984375
    3. 'て' → logprob: -8.37689208984375
    4. 'ます' → logprob: -8.87689208984375
    5. 'け' → logprob: -9.25189208984375
    6. '   ' → logprob: -9.50189208984375
    7. 'k' → logprob: -9.62689208984375
    8. 'か' → logprob: -9.62689208984375
    9. 'range' → logprob: -10.00189208984375
    10. 'if' → logprob: -10.25189208984375

Token 370: '段' (ID: 27561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe7\xaf' → logprob: -1.5650510787963867
    2. 'for' → logprob: -1.8150510787963867
    3. 'range' → logprob: -1.8150510787963867
    4. 'i' → logprob: -2.1900510787963867
    5. '   ' → logprob: -2.6900510787963867
    6. 'k' → logprob: -2.6900510787963867
    7. 'next' → logprob: -3.9400510787963867
    8. 'positions' → logprob: -3.9400510787963867
    9. '先' → logprob: -4.065051078796387
    10. ' i' → logprob: -4.065051078796387

Token 371: 'の' (ID: 3385)
  Prédit: '数'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.11530439555644989
    2. 'は' → logprob: -2.990304470062256
    3. '階' → logprob: -4.240304470062256
    4. 'for' → logprob: -4.740304470062256
    5. 'の' → logprob: -4.740304470062256
    6. 'が' → logprob: -5.115304470062256
    7. 'range' → logprob: -5.115304470062256
    8. 's' → logprob: -5.240304470062256
    9. 'を' → logprob: -6.240304470062256
    10. ' =' → logprob: -6.615304470062256

Token 372: '候' (ID: 33325)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06731723994016647
    2. '候' → logprob: -3.442317247390747
    3. '\xe7\xaf' → logprob: -3.567317247390747
    4. 'c' → logprob: -6.067317008972168
    5. 'range' → logprob: -6.817317008972168
    6. '次' → logprob: -8.192317008972168
    7. 's' → logprob: -8.317317008972168
    8. 'if' → logprob: -8.817317008972168
    9. 'next' → logprob: -8.817317008972168
    10. ' for' → logprob: -9.067317008972168

Token 373: '補' (ID: 157713)
  Prédit: '補'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '補' → logprob: -0.0010948538547381759
    2. '补' → logprob: -6.876094818115234
    3. 's' → logprob: -10.376094818115234
    4. '```' → logprob: -11.126094818115234
    5. '``' → logprob: -13.126094818115234
    6. '-' → logprob: -13.501094818115234
    7. 'ス' → logprob: -13.626094818115234
    8. 'ート' → logprob: -13.626094818115234
    9. 't' → logprob: -14.001094818115234
    10. '選' → logprob: -14.126094818115234

Token 374: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.254862517118454
    2. '       ' → logprob: -2.3798625469207764
    3. ' for' → logprob: -3.1298625469207764
    4. '   ' → logprob: -3.8798625469207764
    5. ':' → logprob: -4.004862308502197
    6. 'は' → logprob: -4.004862308502197
    7. ':
' → logprob: -5.129862308502197
    8. '=[' → logprob: -5.629862308502197
    9. 'として' → logprob: -5.754862308502197
    10. ',' → logprob: -6.004862308502197

Token 375: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1025838851928711
    2. ' for' → logprob: -3.227583885192871
    3. '   ' → logprob: -3.477583885192871
    4. '       ' → logprob: -4.852583885192871
    5. '=' → logprob: -5.227583885192871
    6. ',' → logprob: -5.727583885192871
    7. 'for' → logprob: -6.227583885192871
    8. '<|end|>' → logprob: -6.352583885192871
    9. ':' → logprob: -6.852583885192871
    10. '	for' → logprob: -7.602583885192871

Token 376: ' candidates' (ID: 18116)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4313364326953888
    2. ' for' → logprob: -1.0563364028930664
    3. ' candidates' → logprob: -6.431336402893066
    4. 'if' → logprob: -8.056336402893066
    5. ' if' → logprob: -8.431336402893066
    6. 'c' → logprob: -8.931336402893066
    7. ' next' → logprob: -9.306336402893066
    8. ' possible' → logprob: -9.681336402893066
    9. 'next' → logprob: -10.056336402893066
    10. '[' → logprob: -10.181336402893066

Token 377: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023248739540576935
    2. '=' → logprob: -3.7732486724853516
    3. ' =[' → logprob: -13.398248672485352
    4. '＝' → logprob: -13.648248672485352
    5. ' ' → logprob: -14.898248672485352
    6. '=[' → logprob: -16.02324867248535
    7. ',' → logprob: -17.02324867248535
    8. ' =
' → logprob: -17.14824867248535
    9. 's' → logprob: -17.52324867248535
    10. '=[]' → logprob: -18.02324867248535

Token 378: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.49168890714645386
    2. '[]
' → logprob: -0.9916889071464539
    3. '[k' → logprob: -4.8666887283325195
    4. '[' → logprob: -5.4916887283325195
    5. '[]

' → logprob: -5.7416887283325195
    6. '[(' → logprob: -6.7416887283325195
    7. '[n' → logprob: -7.4916887283325195
    8. '[i' → logprob: -8.36668872833252
    9. ' []' → logprob: -9.99168872833252
    10. 'set' → logprob: -10.11668872833252

Token 379: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6703439950942993
    2. '       ' → logprob: -0.7953439950942993
    3. 'for' → logprob: -4.42034387588501
    4. '[' → logprob: -5.29534387588501
    5. ' if' → logprob: -5.29534387588501
    6. '<|end|>' → logprob: -5.29534387588501
    7. '   ' → logprob: -5.92034387588501
    8. '
' → logprob: -6.42034387588501
    9. '        
' → logprob: -6.92034387588501
    10. ',' → logprob: -7.79534387588501

Token 380: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8151066899299622
    2. ' for' → logprob: -0.9401066899299622
    3. ' if' → logprob: -2.9401066303253174
    4. '[' → logprob: -3.0651066303253174
    5. 'if' (adapté à ' if') → logprob: -3.4401066303253174
    6. ' [' → logprob: -4.1901068687438965
    7. 'range' → logprob: -5.0651068687438965
    8. '[k' → logprob: -5.8151068687438965
    9. ' range' → logprob: -5.8151068687438965
    10. '[(' → logprob: -6.0651068687438965

Token 381: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0009399275877512991
    2. ' k' → logprob: -7.250939846038818
    3. '0' → logprob: -9.000940322875977
    4. 'idx' → logprob: -9.750940322875977
    5. '1' → logprob: -10.500940322875977
    6. 'i' → logprob: -11.625940322875977
    7. '(k' → logprob: -12.750940322875977
    8. ' ' → logprob: -12.875940322875977
    9. ' idx' → logprob: -13.500940322875977
    10. '   ' → logprob: -13.625940322875977

Token 382: ' >' (ID: 1424)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.36332350969314575
    2. ' <' → logprob: -1.863323450088501
    3. '<' → logprob: -2.238323450088501
    4. ' +' → logprob: -3.363323450088501
    5. '>' → logprob: -5.36332368850708
    6. '<n' → logprob: -6.61332368850708
    7. ' >' → logprob: -6.61332368850708
    8. '-' → logprob: -8.238323211669922
    9. '+k' → logprob: -9.113323211669922
    10. '<m' → logprob: -9.613323211669922

Token 383: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003362966235727072
    2. ' ' → logprob: -8.000336647033691
    3. '1' → logprob: -14.375336647033691
    4. '=' → logprob: -15.375336647033691
    5. 'n' → logprob: -16.500335693359375
    6. 'k' → logprob: -19.312835693359375
    7. '۰' → logprob: -19.812835693359375
    8. ')' → logprob: -20.187835693359375
    9. '#' → logprob: -20.437835693359375
    10. '2' → logprob: -20.562835693359375

Token 384: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001238004770129919
    2. ' ' → logprob: -9.000123977661133
    3. '1' → logprob: -15.625123977661133
    4. '=' → logprob: -16.750123977661133
    5. 'n' → logprob: -16.875123977661133
    6. '۰' → logprob: -18.250123977661133
    7. '０' → logprob: -18.625123977661133
    8. 'k' → logprob: -18.625123977661133
    9. '   ' → logprob: -19.625123977661133
    10. '-' → logprob: -19.625123977661133

Token 385: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21827566623687744
    2. ' and' → logprob: -2.093275547027588
    3. ':' → logprob: -2.718275547027588
    4. ',' → logprob: -5.968275547027588
    5. '       ' → logprob: -6.843275547027588
    6. '           ' → logprob: -7.093275547027588
    7. 'and' → logprob: -7.218275547027588
    8. ' candidates' → logprob: -7.593275547027588
    9. '):
' → logprob: -7.968275547027588
    10. ' :
' → logprob: -8.593276023864746

Token 386: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.09021041542291641
    2. '       ' → logprob: -3.090210437774658
    3. '           ' → logprob: -3.840210437774658
    4. 'c' → logprob: -4.090210437774658
    5. ',' → logprob: -7.465210437774658
    6. ' candidats' → logprob: -7.965210437774658
    7. '   ' → logprob: -8.0902099609375
    8. '_candidates' → logprob: -8.3402099609375
    9. '
' → logprob: -8.7152099609375
    10. 'andidates' → logprob: -8.8402099609375

Token 387: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006861839443445206
    2. '.' → logprob: -5.006861686706543
    3. ' .' → logprob: -9.006861686706543
    4. '.ap' → logprob: -11.381861686706543
    5. '+.' → logprob: -12.881861686706543
    6. ').' → logprob: -13.256861686706543
    7. '.app' → logprob: -13.381861686706543
    8. 'append' → logprob: -13.756861686706543
    9. '=' → logprob: -13.881861686706543
    10. '.add' → logprob: -14.131861686706543

Token 388: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.004878754261881113
    2. 'k' → logprob: -5.379878520965576
    3. '((' → logprob: -8.379878997802734
    4. '(' → logprob: -11.004878997802734
    5. '   ' → logprob: -12.004878997802734
    6. ' (' → logprob: -12.254878997802734
    7. ' k' → logprob: -14.504878997802734
    8. '  ' → logprob: -14.879878997802734
    9. ' ' → logprob: -15.879878997802734
    10. '{k' → logprob: -16.129878997802734

Token 389: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05488261952996254
    2. ' -' → logprob: -2.929882526397705
    3. ' ' → logprob: -15.929883003234863
    4. ')' → logprob: -16.304882049560547
    5. '-
' → logprob: -17.304882049560547
    6. ' ' → logprob: -17.929882049560547
    7. ')-' → logprob: -17.929882049560547
    8. '1' → logprob: -18.179882049560547
    9. '   ' → logprob: -18.179882049560547
    10. '-k' → logprob: -18.179882049560547

Token 390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. ')' → logprob: -17.375003814697266
    4. '<|end|>' → logprob: -17.500003814697266
    5. '   ' → logprob: -17.750003814697266
    6. '```' → logprob: -17.875003814697266
    7. '
' → logprob: -18.437503814697266
    8. '１' → logprob: -18.875003814697266
    9. '  ' → logprob: -19.125003814697266
    10. '۱' → logprob: -19.500003814697266

Token 391: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3870912492275238
    2. ')
' → logprob: -1.1370912790298462
    3. ' )
' → logprob: -9.012091636657715
    4. ' )' → logprob: -9.512091636657715
    5. ')
' → logprob: -11.012091636657715
    6. '       ' → logprob: -12.762091636657715
    7. '   ' → logprob: -13.137091636657715
    8. ')

' → logprob: -13.262091636657715
    9. ')c' → logprob: -15.137091636657715
    10. ')`
' → logprob: -15.387091636657715

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06323926150798798
    2. ' if' → logprob: -3.188239336013794
    3. '
' → logprob: -4.813239097595215
    4. 'if' → logprob: -5.313239097595215
    5. '<|end|>' → logprob: -6.188239097595215
    6. '   ' → logprob: -6.438239097595215
    7. ' candidates' → logprob: -6.563239097595215
    8. ')' → logprob: -7.063239097595215
    9. ')
' → logprob: -8.563239097595215
    10. ',' → logprob: -8.563239097595215

Token 393: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5110878348350525
    2. ' if' → logprob: -1.5110878944396973
    3. '       ' → logprob: -1.7610878944396973
    4. 'c' → logprob: -5.011087894439697
    5. ' candidates' → logprob: -7.011087894439697
    6. '   ' → logprob: -11.011087417602539
    7. '	if' → logprob: -11.761087417602539
    8. ' ' → logprob: -11.761087417602539
    9. ' c' → logprob: -12.011087417602539
    10. ')' → logprob: -12.136087417602539

Token 394: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5231300592422485
    2. ' k' → logprob: -0.8981300592422485
    3. ' ' → logprob: -13.023130416870117
    4. '0' → logprob: -13.648130416870117
    5. '(k' → logprob: -14.648130416870117
    6. '	k' → logprob: -14.773130416870117
    7. '1' → logprob: -14.898130416870117
    8. '   ' → logprob: -15.023130416870117
    9. '  ' → logprob: -15.148130416870117
    10. 'not' → logprob: -15.273130416870117

Token 395: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3970656394958496
    2. '<' → logprob: -1.2720656394958496
    3. '+' → logprob: -3.2720656394958496
    4. ' +' → logprob: -5.39706563949585
    5. '<n' → logprob: -6.14706563949585
    6. '+k' → logprob: -6.39706563949585
    7. 'k' → logprob: -8.147066116333008
    8. ' k' → logprob: -8.647066116333008
    9. ',k' → logprob: -8.897066116333008
    10. ')' → logprob: -9.522066116333008

Token 396: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12700821459293365
    2. 'n' → logprob: -2.1270081996917725
    3. 'len' → logprob: -10.502008438110352
    4. ' len' → logprob: -10.752008438110352
    5. '	n' → logprob: -11.877008438110352
    6. ' ' → logprob: -12.002008438110352
    7. '=' → logprob: -12.252008438110352
    8. '   ' → logprob: -12.377008438110352
    9. '=n' → logprob: -12.377008438110352
    10. ' =' → logprob: -13.752008438110352

Token 397: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012982117477804422
    2. ' +' → logprob: -7.626298427581787
    3. '1' → logprob: -7.751298427581787
    4. ':' → logprob: -8.001297950744629
    5. '):' → logprob: -10.876297950744629
    6. ':
' → logprob: -11.876297950744629
    7. ')' → logprob: -12.251297950744629
    8. '+k' → logprob: -12.876297950744629
    9. ')+' → logprob: -13.126297950744629
    10. '):
' → logprob: -13.376297950744629

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.9292415749514475e-05
    2. ' ' → logprob: -10.250039100646973
    3. '+' → logprob: -12.625039100646973
    4. '2' → logprob: -14.750039100646973
    5. '<|end|>' → logprob: -16.37504005432129
    6. ' +' → logprob: -17.50004005432129
    7. '   ' → logprob: -18.00004005432129
    8. '  ' → logprob: -18.37504005432129
    9. '```' → logprob: -18.37504005432129
    10. '<|end|>' → logprob: -18.37504005432129

Token 399: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006322643253952265
    2. ':c' → logprob: -5.256322860717773
    3. ' :' → logprob: -7.256322860717773
    4. ':
' → logprob: -8.756322860717773
    5. '):' → logprob: -8.881322860717773
    6. ' candidates' → logprob: -9.881322860717773
    7. ')c' → logprob: -11.006322860717773
    8. ',c' → logprob: -12.381322860717773
    9. ')' → logprob: -12.631322860717773
    10. 'c' → logprob: -12.881322860717773

Token 400: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.00986221618950367
    2. 'c' → logprob: -4.634862422943115
    3. ' candidats' → logprob: -10.509861946105957
    4. '           ' → logprob: -10.884861946105957
    5. ' queue' → logprob: -11.009861946105957
    6. '_candidates' → logprob: -11.509861946105957
    7. ' c' → logprob: -11.634861946105957
    8. 'queue' → logprob: -11.634861946105957
    9. '	c' → logprob: -12.134861946105957
    10. ' candidatos' → logprob: -13.134861946105957

Token 401: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007566197891719639
    2. '.' → logprob: -7.375756740570068
    3. '.add' → logprob: -9.62575626373291
    4. '+=' → logprob: -10.50075626373291
    5. 'append' → logprob: -11.12575626373291
    6. '+' → logprob: -11.87575626373291
    7. '<|end|>' → logprob: -12.12575626373291
    8. '.app' → logprob: -12.75075626373291
    9. '.Append' → logprob: -13.75075626373291
    10. ' +=' → logprob: -13.75075626373291

Token 402: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.005235648714005947
    2. 'k' → logprob: -5.25523567199707
    3. ' (' → logprob: -13.88023567199707
    4. '(' → logprob: -14.13023567199707
    5. ' k' → logprob: -16.25523567199707
    6. '	k' → logprob: -16.38023567199707
    7. '   ' → logprob: -18.63023567199707
    8. '(
' → logprob: -19.00523567199707
    9. '((' → logprob: -19.13023567199707
    10. '{k' → logprob: -20.75523567199707

Token 403: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00017827287956606597
    2. '+k' → logprob: -9.125178337097168
    3. ' +' → logprob: -9.750178337097168
    4. '1' → logprob: -11.500178337097168
    5. '+
' → logprob: -14.500178337097168
    6. '＋' → logprob: -16.25017738342285
    7. 'k' → logprob: -16.25017738342285
    8. ')+' → logprob: -16.37517738342285
    9. '+)' → logprob: -16.87517738342285
    10. '()+' → logprob: -17.62517738342285

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.780830830801278e-05
    2. 'k' → logprob: -9.37508773803711
    3. ' ' → logprob: -13.12508773803711
    4. '+' → logprob: -14.75008773803711
    5. ' k' → logprob: -15.25008773803711
    6. '
' → logprob: -16.12508773803711
    7. '```' → logprob: -17.00008773803711
    8. '+k' → logprob: -18.18758773803711
    9. '   ' → logprob: -18.31258773803711
    10. '2' → logprob: -18.37508773803711

Token 405: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004444931691978127
    2. ')
' → logprob: -7.750444412231445
    3. ' )' → logprob: -11.375444412231445
    4. '   ' → logprob: -14.250444412231445
    5. '       ' → logprob: -14.625444412231445
    6. ')
' → logprob: -15.000444412231445
    7. ')

' → logprob: -15.125444412231445
    8. '))' → logprob: -15.875444412231445
    9. ')`' → logprob: -16.250444412231445
    10. '）' → logprob: -16.375444412231445

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030410178005695343
    2. '<|end|>' → logprob: -4.280410289764404
    3. ' for' → logprob: -5.030410289764404
    4. '        
' → logprob: -5.405410289764404
    5. '   ' → logprob: -6.655410289764404
    6. '  
' → logprob: -7.155410289764404
    7. '<|end|>' → logprob: -7.280410289764404
    8. '
' → logprob: -7.905410289764404
    9. '	' → logprob: -8.155409812927246
    10. 'for' → logprob: -8.280409812927246

Token 407: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37901169061660767
    2. ' for' → logprob: -1.504011631011963
    3. 'for' → logprob: -2.379011631011963
    4. '   ' → logprob: -9.004012107849121
    5. '        
' → logprob: -9.004012107849121
    6. ',' → logprob: -9.379012107849121
    7. '
' → logprob: -9.379012107849121
    8. ' ' → logprob: -10.004012107849121
    9. '	for' → logprob: -10.379012107849121
    10. ')' → logprob: -10.879012107849121

Token 408: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03769645839929581
    2. 'idx' → logprob: -4.162696361541748
    3. ' k' → logprob: -4.287696361541748
    4. 'T' → logprob: -6.287696361541748
    5. ' idx' → logprob: -6.412696361541748
    6. 'i' → logprob: -7.162696361541748
    7. '0' → logprob: -7.287696361541748
    8. '(k' → logprob: -7.287696361541748
    9. 'S' → logprob: -7.662696361541748
    10. 'note' → logprob: -8.412696838378906

Token 409: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1446344554424286
    2. '+' → logprob: -2.894634485244751
    3. '<' → logprob: -3.144634485244751
    4. '<n' → logprob: -3.644634485244751
    5. ',' → logprob: -6.019634246826172
    6. ' +' → logprob: -6.269634246826172
    7. '<m' → logprob: -6.644634246826172
    8. ',k' → logprob: -7.144634246826172
    9. ' !=' → logprob: -7.394634246826172
    10. ' not' → logprob: -7.769634246826172

Token 410: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0620296411216259
    2. ' n' → logprob: -2.8120296001434326
    3. ' ' → logprob: -10.562029838562012
    4. 'len' → logprob: -11.687029838562012
    5. '	n' → logprob: -11.812029838562012
    6. 'note' → logprob: -11.812029838562012
    7. ' note' → logprob: -12.437029838562012
    8. '10' → logprob: -13.437029838562012
    9. '1' → logprob: -13.687029838562012
    10. ' len' → logprob: -13.812029838562012

Token 411: ' :' (ID: 712)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0486038476228714
    2. ':' → logprob: -3.1736037731170654
    3. ':
' → logprob: -6.0486040115356445
    4. ' +' → logprob: -6.1736040115356445
    5. '<|end|>' → logprob: -8.048604011535645
    6. '):' → logprob: -8.798604011535645
    7. '1' → logprob: -9.298604011535645
    8. ' and' → logprob: -9.798604011535645
    9. '):
' → logprob: -9.798604011535645
    10. ')' → logprob: -9.798604011535645

Token 412: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.0002016331272898242
    2. 'c' → logprob: -8.875201225280762
    3. 'andidates' → logprob: -10.500201225280762
    4. ' candidats' → logprob: -10.750201225280762
    5. '_candidates' → logprob: -12.500201225280762
    6. '   ' → logprob: -12.500201225280762
    7. 'cand' → logprob: -13.000201225280762
    8. ' candidatos' → logprob: -13.500201225280762
    9. 'Candidates' → logprob: -14.750201225280762
    10. ' ' → logprob: -15.250201225280762

Token 413: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10654325783252716
    2. '+=' → logprob: -2.3565433025360107
    3. ' +=' → logprob: -5.731543064117432
    4. '+' → logprob: -6.481543064117432
    5. '.' → logprob: -6.981543064117432
    6. '.add' → logprob: -8.60654354095459
    7. ' .' → logprob: -9.23154354095459
    8. '_candidates' → logprob: -9.48154354095459
    9. '           ' → logprob: -9.60654354095459
    10. '       ' → logprob: -10.48154354095459

Token 414: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -2.1054253011243418e-05
    2. 'k' → logprob: -11.000020980834961
    3. '(' → logprob: -12.750020980834961
    4. ' (' → logprob: -13.750020980834961
    5. '((' → logprob: -15.750020980834961
    6. '(
' → logprob: -16.37502098083496
    7. '(n' → logprob: -16.75002098083496
    8. ' k' → logprob: -18.50002098083496
    9. '   ' → logprob: -19.25002098083496
    10. '	k' → logprob: -19.25002098083496

Token 415: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012582694762386382
    2. ' +' → logprob: -9.125125885009766
    3. '+k' → logprob: -11.000125885009766
    4. '＋' → logprob: -16.000125885009766
    5. '++' → logprob: -18.125125885009766
    6. '+
' → logprob: -19.125125885009766
    7. ')+' → logprob: -19.125125885009766
    8. 'k' → logprob: -19.125125885009766
    9. ' k' → logprob: -19.625125885009766
    10. '()+' → logprob: -20.750125885009766

Token 416: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.758300438988954e-05
    2. '1' → logprob: -9.375097274780273
    3. ' ' → logprob: -11.375097274780273
    4. '+' → logprob: -14.250097274780273
    5. '
' → logprob: -15.375097274780273
    6. 'k' → logprob: -16.375097274780273
    7. '２' → logprob: -16.500097274780273
    8. '3' → logprob: -16.875097274780273
    9. '```' → logprob: -17.000097274780273
    10. ')' → logprob: -18.812597274780273

Token 417: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.76759916334413e-05
    2. ')
' → logprob: -9.500077247619629
    3. ' )' → logprob: -13.125077247619629
    4. '）' → logprob: -15.500077247619629
    5. '   ' → logprob: -15.875077247619629
    6. ')
' → logprob: -15.875077247619629
    7. ')

' → logprob: -16.125078201293945
    8. '))' → logprob: -16.250078201293945
    9. '       ' → logprob: -17.000078201293945
    10. ')`' → logprob: -17.500078201293945

Token 418: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 419: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11322667449712753
    2. ' for' → logprob: -2.3632266521453857
    3. 'for' (adapté à ' for') → logprob: -4.363226890563965
    4. '   ' → logprob: -9.113226890563965
    5. '        
' → logprob: -10.488226890563965
    6. '	for' → logprob: -10.863226890563965
    7. ')' → logprob: -11.488226890563965
    8. ',' → logprob: -11.863226890563965
    9. ' ' → logprob: -11.988226890563965
    10. ' ' → logprob: -12.488226890563965

Token 420: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8735910058021545
    2. 'next' → logprob: -1.2485909461975098
    3. ' next' → logprob: -1.7485909461975098
    4. ' i' → logprob: -2.8735909461975098
    5. 'nk' → logprob: -4.12359094619751
    6. 'c' → logprob: -4.24859094619751
    7. ' nk' → logprob: -4.87359094619751
    8. ' nxt' → logprob: -4.99859094619751
    9. ' ni' → logprob: -5.24859094619751
    10. 'candidate' → logprob: -5.87359094619751

Token 421: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0160394124686718
    2. 'in' → logprob: -4.1410393714904785
    3. ' ' → logprob: -12.516039848327637
    4. '	in' → logprob: -14.016039848327637
    5. 'n' → logprob: -14.641039848327637
    6. ',' → logprob: -17.01603889465332
    7. ' i' → logprob: -17.14103889465332
    8. '_in' → logprob: -17.14103889465332
    9. ' ' → logprob: -17.26603889465332
    10. 'space' → logprob: -17.89103889465332

Token 422: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07889573276042938
    2. ' candidates' → logprob: -2.5788958072662354
    3. '_candidates' → logprob: -13.703895568847656
    4. 'cand' → logprob: -13.703895568847656
    5. ' c' → logprob: -13.828895568847656
    6. ' candidats' → logprob: -14.328895568847656
    7. 'candidate' → logprob: -14.328895568847656
    8. '[c' → logprob: -15.203895568847656
    9. ')c' → logprob: -15.328895568847656
    10. '   ' → logprob: -15.578895568847656

Token 423: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08686394989490509
    2. ',' → logprob: -2.5868639945983887
    3. ':
' → logprob: -4.961863994598389
    4. ' in' → logprob: -8.08686351776123
    5. '       ' → logprob: -8.33686351776123
    6. '):' → logprob: -8.71186351776123
    7. '):
' → logprob: -9.21186351776123
    8. '           ' → logprob: -10.33686351776123
    9. ' :' → logprob: -10.83686351776123
    10. '        ' → logprob: -11.33686351776123

Token 424: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26234084367752075
    2. '       ' → logprob: -1.637340784072876
    3. ':' → logprob: -4.637341022491455
    4. ',' → logprob: -4.762341022491455
    5. ' if' → logprob: -5.137341022491455
    6. '        
' → logprob: -6.012341022491455
    7. '            
' → logprob: -6.387341022491455
    8. ' next' → logprob: -7.012341022491455
    9. 'if' → logprob: -7.137341022491455
    10. ':
' → logprob: -7.387341022491455

Token 425: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9606328010559082
    2. ' if' → logprob: -1.2106328010559082
    3. 'sound' → logprob: -1.5856328010559082
    4. '           ' → logprob: -3.210632801055908
    5. ' sound' → logprob: -3.460632801055908
    6. ' s' → logprob: -4.460632801055908
    7. 's' → logprob: -4.585632801055908
    8. 'next' → logprob: -5.460632801055908
    9. '#' → logprob: -5.710632801055908
    10. ' next' → logprob: -5.960632801055908

Token 426: ' i' (ID: 575)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.2745033800601959
    2. ' idx' → logprob: -1.5245033502578735
    3. '(idx' → logprob: -4.649503231048584
    4. 'i' → logprob: -5.399503231048584
    5. '(i' → logprob: -5.899503231048584
    6. ' i' → logprob: -6.274503231048584
    7. ' (' → logprob: -6.399503231048584
    8. '(' → logprob: -7.899503231048584
    9. '(T' → logprob: -8.774503707885742
    10. 'note' → logprob: -8.774503707885742

Token 427: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6718833446502686
    2. ' >' → logprob: -2.2968833446502686
    3. '==' → logprob: -2.4218833446502686
    4. ' <=' → logprob: -2.5468833446502686
    5. ' !=' → logprob: -2.6718833446502686
    6. '>' → logprob: -3.1718833446502686
    7. '!=' → logprob: -3.5468833446502686
    8. '<=' → logprob: -3.9218833446502686
    9. ' not' → logprob: -4.046883583068848
    10. ' <' → logprob: -4.421883583068848

Token 428: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2580578923225403
    2. 'len' → logprob: -1.7580578327178955
    3. '=' → logprob: -3.7580578327178955
    4. '1' → logprob: -3.7580578327178955
    5. ' ' → logprob: -5.508058071136475
    6. ' len' → logprob: -6.258058071136475
    7. 'n' → logprob: -6.758058071136475
    8. '=len' → logprob: -7.133058071136475
    9. ' =' → logprob: -8.383057594299316
    10. 'm' → logprob: -9.383057594299316

Token 429: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.41498294472694397
    2. 'len' → logprob: -1.2899829149246216
    3. '1' → logprob: -2.914983034133911
    4. '=' → logprob: -4.789982795715332
    5. 'n' → logprob: -7.039982795715332
    6. ' len' → logprob: -8.039982795715332
    7. ' ' → logprob: -8.289982795715332
    8. '=len' → logprob: -8.414982795715332
    9. ' =' → logprob: -9.664982795715332
    10. 'm' → logprob: -9.914982795715332

Token 430: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.032195668667554855
    2. ':' → logprob: -3.657195568084717
    3. 'or' → logprob: -5.657195568084717
    4. ':
' → logprob: -6.532195568084717
    5. '               ' → logprob: -7.407195568084717
    6. '	or' → logprob: -9.032196044921875
    7. '           ' → logprob: -9.282196044921875
    8. ' ' → logprob: -9.657196044921875
    9. ':return' → logprob: -10.907196044921875
    10. ' continue' → logprob: -11.282196044921875

Token 431: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008686548098921776
    2. ' i' → logprob: -4.758686542510986
    3. '(i' → logprob: -10.508687019348145
    4. ' ' → logprob: -11.633687019348145
    5. 'k' → logprob: -11.758687019348145
    6. '12' → logprob: -12.008687019348145
    7. ' (' → logprob: -12.258687019348145
    8. '(' → logprob: -12.883687019348145
    9. 'len' → logprob: -13.133687019348145
    10. 'n' → logprob: -13.258687019348145

Token 432: ' >' (ID: 1424)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6954249739646912
    2. '>' → logprob: -0.9454249739646912
    3. ' >=' → logprob: -2.820425033569336
    4. ' >' → logprob: -2.945425033569336
    5. '==' → logprob: -9.195425033569336
    6. '           ' → logprob: -9.320425033569336
    7. ' ' → logprob: -10.070425033569336
    8. ']>=' → logprob: -10.195425033569336
    9. ')>=' → logprob: -10.195425033569336
    10. '<|end|>' → logprob: -10.570425033569336

Token 433: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12695792317390442
    2. ' n' → logprob: -2.126957893371582
    3. '(n' → logprob: -11.251957893371582
    4. '	n' → logprob: -12.001957893371582
    5. '   ' → logprob: -12.251957893371582
    6. ' ' → logprob: -12.751957893371582
    7. ' (' → logprob: -13.376957893371582
    8. '  ' → logprob: -15.251957893371582
    9. '=n' → logprob: -15.376957893371582
    10. '_n' → logprob: -15.626957893371582

Token 434: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1994775377388578e-05
    2. ' +' → logprob: -11.500012397766113
    3. '+
' → logprob: -13.875012397766113
    4. '＋' → logprob: -14.250012397766113
    5. '1' → logprob: -16.125011444091797
    6. '<|end|>' → logprob: -17.250011444091797
    7. '+xml' → logprob: -17.750011444091797
    8. '<|end|>' → logprob: -18.625011444091797
    9. ')+' → logprob: -18.750011444091797
    10. '﻿' → logprob: -18.750011444091797

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '+' → logprob: -13.87500286102295
    3. ' ' → logprob: -13.87500286102295
    4. '2' → logprob: -14.37500286102295
    5. '   ' → logprob: -18.250001907348633
    6. '```' → logprob: -18.250001907348633
    7. '<|end|>' → logprob: -19.375001907348633
    8. '
' → logprob: -19.750001907348633
    9. '１' → logprob: -19.750001907348633
    10. '[' → logprob: -19.937501907348633

Token 436: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09210357815027237
    2. ':
' → logprob: -2.9671034812927246
    3. ' or' → logprob: -3.4671034812927246
    4. '               ' → logprob: -5.342103481292725
    5. ':return' → logprob: -8.467103958129883
    6. '           ' → logprob: -8.592103958129883
    7. ' continue' → logprob: -9.592103958129883
    8. '	continue' → logprob: -10.967103958129883
    9. 'continue' → logprob: -11.217103958129883
    10. '                   ' → logprob: -12.092103958129883

Token 437: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004282111767679453
    2. ' continue' → logprob: -5.504281997680664
    3. 'continue' → logprob: -8.879281997680664
    4. '           ' → logprob: -9.754281997680664
    5. '	continue' → logprob: -13.129281997680664
    6. '   ' → logprob: -13.879281997680664
    7. ' continues' → logprob: -14.254281997680664
    8. '       ' → logprob: -14.754281997680664
    9. '```' → logprob: -14.879281997680664
    10. '_continue' → logprob: -14.879281997680664

Token 438: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04605155438184738
    2. ' continue' → logprob: -3.796051502227783
    3. 'continue' (adapté à ' continue') → logprob: -3.796051502227783
    4. '	continue' → logprob: -9.921051979064941
    5. '           ' → logprob: -10.671051979064941
    6. '                   ' → logprob: -12.296051979064941
    7. '	           ' → logprob: -12.421051979064941
    8. '			' → logprob: -12.671051979064941
    9. '_continue' → logprob: -13.171051979064941
    10. '   ' → logprob: -13.671051979064941

Token 439: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001501652062870562
    2. '<|end|>' → logprob: -7.126501560211182
    3. '            
' → logprob: -8.12650203704834
    4. '               ' → logprob: -9.37650203704834
    5. '       ' → logprob: -9.62650203704834
    6. '
' → logprob: -9.75150203704834
    7. '<|end|>' → logprob: -9.87650203704834
    8. '          ' → logprob: -10.25150203704834
    9. '            ' → logprob: -10.62650203704834
    10. '```' → logprob: -10.87650203704834

Token 440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001590438769198954
    2. '       ' → logprob: -7.001590251922607
    3. '```' → logprob: -8.751590728759766
    4. ' if' → logprob: -9.126590728759766
    5. 'if' → logprob: -9.376590728759766
    6. '   ' → logprob: -9.626590728759766
    7. '            
' → logprob: -9.751590728759766
    8. '          ' → logprob: -10.001590728759766
    9. 'token' → logprob: -10.251590728759766
    10. '               ' → logprob: -10.251590728759766

Token 441: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2457147240638733
    2. 'if' (adapté à ' if') → logprob: -2.4957146644592285
    3. 'sound' → logprob: -2.4957146644592285
    4. ' if' → logprob: -3.7457146644592285
    5. 's' → logprob: -4.7457146644592285
    6. '#' → logprob: -5.1207146644592285
    7. 'next' → logprob: -5.6207146644592285
    8. ' sound' → logprob: -5.6207146644592285
    9. ' s' → logprob: -6.6207146644592285
    10. 'current' → logprob: -6.9957146644592285

Token 442: ' k' (ID: 372)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6650277972221375
    2. '(get' → logprob: -1.6650278568267822
    3. '(T' → logprob: -2.4150278568267822
    4. 'get' → logprob: -3.1650278568267822
    5. '(k' → logprob: -3.1650278568267822
    6. '(S' → logprob: -3.5400278568267822
    7. 'i' → logprob: -3.6650278568267822
    8. '(idx' → logprob: -4.165027618408203
    9. ' (' → logprob: -4.415027618408203
    10. 'idx' → logprob: -4.915027618408203

Token 443: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28946375846862793
    2. ' ==' → logprob: -1.914463758468628
    3. '!=' → logprob: -3.039463758468628
    4. '+' → logprob: -4.039463996887207
    5. '<' → logprob: -4.414463996887207
    6. ' !=' → logprob: -4.664463996887207
    7. ' <' → logprob: -4.914463996887207
    8. '>' → logprob: -5.164463996887207
    9. ' >' → logprob: -6.289463996887207
    10. ',' → logprob: -7.914463996887207

Token 444: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002362094121053815
    2. 'n' → logprob: -6.127362251281738
    3. 'i' → logprob: -8.877362251281738
    4. ' ' → logprob: -10.627362251281738
    5. 'len' → logprob: -12.439862251281738
    6. 'k' → logprob: -12.814862251281738
    7. '1' → logprob: -13.502362251281738
    8. ' n' → logprob: -13.877362251281738
    9. 'm' → logprob: -13.877362251281738
    10. 'j' → logprob: -14.939862251281738

Token 445: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013952343724668026
    2. 'n' → logprob: -6.626395225524902
    3. 'i' → logprob: -9.751395225524902
    4. ' ' → logprob: -12.251395225524902
    5. 'len' → logprob: -13.501395225524902
    6. 'm' → logprob: -13.751395225524902
    7. '1' → logprob: -13.813895225524902
    8. 'k' → logprob: -13.876395225524902
    9. '(n' → logprob: -15.251395225524902
    10. ' n' → logprob: -15.438895225524902

Token 446: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.34658196568489075
    2. ' or' → logprob: -1.4715819358825684
    3. 'and' → logprob: -2.8465819358825684
    4. 'or' → logprob: -6.221581935882568
    5. ':' → logprob: -6.471581935882568
    6. '           ' → logprob: -7.221581935882568
    7. ':
' → logprob: -7.596581935882568
    8. '               ' → logprob: -7.721581935882568
    9. ' ' → logprob: -10.971582412719727
    10. '   ' → logprob: -10.971582412719727

Token 447: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08214190602302551
    2. ' i' → logprob: -2.582141876220703
    3. 'k' → logprob: -6.582141876220703
    4. 'S' → logprob: -7.207141876220703
    5. 'T' → logprob: -8.332141876220703
    6. 'idx' → logprob: -8.582141876220703
    7. ' k' → logprob: -9.457141876220703
    8. ' S' → logprob: -9.457141876220703
    9. 'note' → logprob: -9.457141876220703
    10. '(i' → logprob: -9.707141876220703

Token 448: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8977169394493103
    2. '!=' → logprob: -1.147716999053955
    3. ' !=' → logprob: -1.772716999053955
    4. ' ==' → logprob: -2.272716999053955
    5. '>' → logprob: -6.397716999053955
    6. ' >' → logprob: -7.772716999053955
    7. ' ' → logprob: -9.897716522216797
    8. '0' → logprob: -10.897716522216797
    9. ' not' → logprob: -11.022716522216797
    10. ' in' → logprob: -11.022716522216797

Token 449: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19743457436561584
    2. '-' → logprob: -2.322434663772583
    3. '0' → logprob: -2.947434663772583
    4. 'n' → logprob: -4.072434425354004
    5. 'k' → logprob: -5.197434425354004
    6. '2' → logprob: -5.322434425354004
    7. ' ' → logprob: -7.197434425354004
    8. ' -' → logprob: -7.947434425354004
    9. 'i' → logprob: -10.322434425354004
    10. '-n' → logprob: -10.572434425354004

Token 450: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25942784547805786
    2. '-' → logprob: -1.884427785873413
    3. '0' → logprob: -2.884427785873413
    4. 'n' → logprob: -4.509428024291992
    5. 'k' → logprob: -5.009428024291992
    6. '2' → logprob: -5.884428024291992
    7. 'i' → logprob: -9.509428024291992
    8. ' -' → logprob: -9.884428024291992
    9. '-n' → logprob: -10.259428024291992
    10. ' ' → logprob: -10.634428024291992

Token 451: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018537232652306557
    2. ':
' → logprob: -4.0185370445251465
    3. '               ' → logprob: -8.143537521362305
    4. ':return' → logprob: -10.768537521362305
    5. '           ' → logprob: -11.143537521362305
    6. ' or' → logprob: -11.143537521362305
    7. ' continue' → logprob: -11.268537521362305
    8. 'continue' → logprob: -12.143537521362305
    9. '	continue' → logprob: -12.518537521362305
    10. ':
' → logprob: -12.518537521362305

Token 452: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006912271957844496
    2. ':' → logprob: -5.1319122314453125
    3. ':
' → logprob: -7.5069122314453125
    4. ' continue' → logprob: -8.631912231445312
    5. '           ' → logprob: -8.881912231445312
    6. '	           ' → logprob: -10.631912231445312
    7. 'continue' → logprob: -11.506912231445312
    8. '<|end|>' → logprob: -11.506912231445312
    9. '       ' → logprob: -11.756912231445312
    10. '	continue' → logprob: -11.881912231445312

Token 453: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2786513864994049
    2. ' continue' → logprob: -1.6536513566970825
    3. 'continue' (adapté à ' continue') → logprob: -3.028651475906372
    4. '	continue' → logprob: -6.028651237487793
    5. '                   ' → logprob: -7.653651237487793
    6. '           ' → logprob: -8.653651237487793
    7. '   ' → logprob: -9.028651237487793
    8. '	           ' → logprob: -9.653651237487793
    9. '                ' → logprob: -10.153651237487793
    10. '_continue' → logprob: -10.278651237487793

Token 454: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3902986943721771
    2. '<|end|>' → logprob: -1.1402987241744995
    3. '<|end|>' → logprob: -6.140298843383789
    4. '            
' → logprob: -7.765298843383789
    5. '
' → logprob: -8.390298843383789
    6. '          ' → logprob: -8.765298843383789
    7. '            ' → logprob: -9.265298843383789
    8. '       ' → logprob: -9.390298843383789
    9. '```' → logprob: -9.515298843383789
    10. ')' → logprob: -10.015298843383789

Token 455: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002080312930047512
    2. '<|end|>' → logprob: -7.00208044052124
    3. '       ' → logprob: -7.12708044052124
    4. '          ' → logprob: -9.252079963684082
    5. '```' → logprob: -9.377079963684082
    6. '            
' → logprob: -10.127079963684082
    7. '               ' → logprob: -10.377079963684082
    8. '   ' → logprob: -10.502079963684082
    9. '            ' → logprob: -10.877079963684082
    10. '		' → logprob: -11.377079963684082

Token 456: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27144137024879456
    2. 'sound' → logprob: -1.7714413404464722
    3. 'note' → logprob: -4.271441459655762
    4. 'if' (adapté à ' if') → logprob: -4.271441459655762
    5. 'current' → logprob: -5.021441459655762
    6. '#' → logprob: -5.271441459655762
    7. 's' → logprob: -5.271441459655762
    8. 'token' → logprob: -5.271441459655762
    9. 'next' → logprob: -5.396441459655762
    10. ' sound' → logprob: -6.021441459655762

Token 457: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8614333271980286
    2. 'i' → logprob: -1.6114332675933838
    3. '(i' → logprob: -1.7364332675933838
    4. '(k' → logprob: -2.486433267593384
    5. 'idx' → logprob: -2.861433267593384
    6. ' (' → logprob: -3.861433267593384
    7. '(idx' → logprob: -4.736433506011963
    8. 'get' → logprob: -5.111433506011963
    9. ' i' → logprob: -5.361433506011963
    10. '(T' → logprob: -5.486433506011963

Token 458: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3792559802532196
    2. ' ==' → logprob: -1.254256010055542
    3. '!=' → logprob: -4.129255771636963
    4. '+' → logprob: -4.754255771636963
    5. ' !=' → logprob: -5.254255771636963
    6. '==
' → logprob: -8.879256248474121
    7. '>' → logprob: -9.754256248474121
    8. ' +' → logprob: -10.129256248474121
    9. ' >' → logprob: -10.254256248474121
    10. ' ' → logprob: -10.504256248474121

Token 459: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05046585947275162
    2. 'n' → logprob: -3.6754658222198486
    3. ' ' → logprob: -3.9254658222198486
    4. 'i' → logprob: -6.550466060638428
    5. ' n' → logprob: -6.675466060638428
    6. '1' → logprob: -6.675466060638428
    7. 'k' → logprob: -9.42546558380127
    8. ' i' → logprob: -9.42546558380127
    9. 'm' → logprob: -12.42546558380127
    10. '  ' → logprob: -12.73796558380127

Token 460: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1381521373987198
    2. 'n' → logprob: -2.1381521224975586
    3. 'i' → logprob: -4.763152122497559
    4. ' ' → logprob: -6.388152122497559
    5. ' n' → logprob: -7.513152122497559
    6. '1' → logprob: -8.763152122497559
    7. 'k' → logprob: -8.763152122497559
    8. ' i' → logprob: -9.888152122497559
    9. '   ' → logprob: -11.638152122497559
    10. '  ' → logprob: -12.513152122497559

Token 461: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026355689391493797
    2. 'and' → logprob: -3.651355743408203
    3. ' or' → logprob: -10.901355743408203
    4. '   ' → logprob: -11.776355743408203
    5. ' и' → logprob: -12.276355743408203
    6. '	and' → logprob: -12.276355743408203
    7. 'と' → logprob: -12.651355743408203
    8. '           ' → logprob: -12.776355743408203
    9. 'そして' → logprob: -12.776355743408203
    10. ':' → logprob: -12.901355743408203

Token 462: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2950206696987152
    2. '1' → logprob: -1.4200206995010376
    3. ' i' → logprob: -4.545020580291748
    4. 'k' → logprob: -6.795020580291748
    5. ' ' → logprob: -6.795020580291748
    6. '0' → logprob: -7.670020580291748
    7. '2' → logprob: -7.795020580291748
    8. ' k' → logprob: -11.170021057128906
    9. '   ' → logprob: -12.232521057128906
    10. '	i' → logprob: -12.545021057128906

Token 463: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5769990682601929
    2. ' ==' → logprob: -0.8269990682601929
    3. ' !=' → logprob: -8.201998710632324
    4. '>' → logprob: -8.451998710632324
    5. ' >' → logprob: -8.451998710632324
    6. ' in' → logprob: -8.701998710632324
    7. '!=' → logprob: -9.201998710632324
    8. ' ' → logprob: -10.826998710632324
    9. '=' → logprob: -11.326998710632324
    10. '+' → logprob: -11.451998710632324

Token 464: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017889095470309258
    2. ' ' → logprob: -4.267889022827148
    3. 'n' → logprob: -6.767889022827148
    4. '2' → logprob: -6.767889022827148
    5. '0' → logprob: -7.392889022827148
    6. 'k' → logprob: -7.392889022827148
    7. ' n' → logprob: -9.642889022827148
    8. 'i' → logprob: -9.642889022827148
    9. ' k' → logprob: -10.892889022827148
    10. 'm' → logprob: -11.017889022827148

Token 465: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002187022240832448
    2. '2' → logprob: -6.752187252044678
    3. 'n' → logprob: -7.627187252044678
    4. '0' → logprob: -7.752187252044678
    5. '-' → logprob: -10.00218677520752
    6. 'k' → logprob: -11.00218677520752
    7. ' ' → logprob: -11.12718677520752
    8. 'm' → logprob: -11.37718677520752
    9. 'i' → logprob: -12.25218677520752
    10. '+' → logprob: -13.75218677520752

Token 466: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5583324432373047
    2. ':
' → logprob: -0.9333324432373047
    3. '               ' → logprob: -3.6833324432373047
    4. '           ' → logprob: -5.933332443237305
    5. ' continue' → logprob: -6.183332443237305
    6. ' and' → logprob: -7.058332443237305
    7. '	continue' → logprob: -7.183332443237305
    8. 'continue' → logprob: -7.433332443237305
    9. '+' → logprob: -7.558332443237305
    10. ':return' → logprob: -8.183332443237305

Token 467: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03088514879345894
    2. ' continue' → logprob: -4.280885219573975
    3. '<|end|>' → logprob: -5.155885219573975
    4. ':' → logprob: -6.030885219573975
    5. 'continue' → logprob: -6.030885219573975
    6. '       ' → logprob: -6.405885219573975
    7. '	continue' → logprob: -6.405885219573975
    8. '           ' → logprob: -6.905885219573975
    9. '   ' → logprob: -7.405885219573975
    10. '<|end|>' → logprob: -8.530884742736816

Token 468: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.1718875616788864
    2. ' continue' → logprob: -1.9218875169754028
    3. '               ' → logprob: -5.046887397766113
    4. '           ' → logprob: -5.921887397766113
    5. '   ' → logprob: -6.171887397766113
    6. '	continue' → logprob: -8.546887397766113
    7. '                   ' → logprob: -9.546887397766113
    8. ' ' → logprob: -9.671887397766113
    9. '       ' → logprob: -10.046887397766113
    10. '  ' → logprob: -11.921887397766113

Token 469: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9416232705116272
    2. '<|end|>' → logprob: -0.9416232705116272
    3. '
' → logprob: -2.3166232109069824
    4. '<|end|>' → logprob: -3.3166232109069824
    5. ':' → logprob: -3.8166232109069824
    6. ':
' → logprob: -4.191623210906982
    7. '       ' → logprob: -4.316623210906982
    8. '               ' → logprob: -4.566623210906982
    9. ')' → logprob: -5.691623210906982
    10. '            
' → logprob: -5.816623210906982

Token 470: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003283232916146517
    2. '<|end|>' → logprob: -6.7532830238342285
    3. '       ' → logprob: -7.1282830238342285
    4. ' continue' → logprob: -7.3782830238342285
    5. 'continue' → logprob: -8.503283500671387
    6. '               ' → logprob: -9.003283500671387
    7. '   ' → logprob: -9.253283500671387
    8. '```' → logprob: -10.253283500671387
    9. ' if' → logprob: -10.378283500671387
    10. '<|end|>' → logprob: -10.503283500671387

Token 471: ' sound' (ID: 7351)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05658319592475891
    2. ' if' → logprob: -4.431583404541016
    3. 'continue' → logprob: -4.681583404541016
    4. 'if' → logprob: -4.931583404541016
    5. 'sound' (adapté à ' sound') → logprob: -4.931583404541016
    6. ' continue' → logprob: -5.056583404541016
    7. 'token' → logprob: -5.431583404541016
    8. ' sound' → logprob: -6.556583404541016
    9. '   ' → logprob: -6.806583404541016
    10. 'next' → logprob: -7.556583404541016

Token 472: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14280909299850464
    2. '=' → logprob: -2.0178091526031494
    3. '_next' → logprob: -10.01780891418457
    4. '_' → logprob: -10.51780891418457
    5. 's' → logprob: -11.14280891418457
    6. ',' → logprob: -11.39280891418457
    7. '＝' → logprob: -11.76780891418457
    8. '=get' → logprob: -12.01780891418457
    9. '_new' → logprob: -12.76780891418457
    10. '_sound' → logprob: -12.76780891418457

Token 473: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.00012356207298580557
    2. ' get' → logprob: -9.000123977661133
    3. '(get' → logprob: -16.375123977661133
    4. '[get' → logprob: -18.000123977661133
    5. '	get' → logprob: -18.125123977661133
    6. '=get' → logprob: -18.125123977661133
    7. '.get' → logprob: -18.625123977661133
    8. ')get' → logprob: -19.000123977661133
    9. '
' → logprob: -19.500123977661133
    10. '   ' → logprob: -19.875123977661133

Token 474: '_sound' (ID: 92263)
  Prédit: '_sound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sound' → logprob: -9.968312951968983e-06
    2. 'sound' → logprob: -11.750009536743164
    3. '_s' → logprob: -13.375009536743164
    4. '```' → logprob: -16.000009536743164
    5. '_' → logprob: -16.375009536743164
    6. 's' → logprob: -16.625009536743164
    7. '_surface' → logprob: -16.750009536743164
    8. '_SOUND' → logprob: -17.500009536743164
    9. '_speed' → logprob: -17.750009536743164
    10. '_voice' → logprob: -17.750009536743164

Token 475: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -7.584239938296378e-06
    2. '(' → logprob: -11.875007629394531
    3. ' (' → logprob: -15.750007629394531
    4. '((' → logprob: -16.00000762939453
    5. '(s' → logprob: -17.00000762939453
    6. 'k' → logprob: -17.00000762939453
    7. '(i' → logprob: -17.50000762939453
    8. '[k' → logprob: -18.00000762939453
    9. '(n' → logprob: -18.12500762939453
    10. '<|end|>' → logprob: -18.25000762939453

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03728998824954033
    2. ',i' → logprob: -3.912290096282959
    3. ',S' → logprob: -4.162290096282959
    4. ',s' → logprob: -7.162290096282959
    5. ' ,' → logprob: -8.6622896194458
    6. ',T' → logprob: -10.1622896194458
    7. ',n' → logprob: -11.1622896194458
    8. ',k' → logprob: -11.6622896194458
    9. ',
' → logprob: -12.9122896194458
    10. ',int' → logprob: -13.0372896194458

Token 477: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.547789674485102e-05
    2. ' i' → logprob: -10.250035285949707
    3. '<|end|>' → logprob: -17.375036239624023
    4. '	i' → logprob: -18.375036239624023
    5. ')i' → logprob: -18.875036239624023
    6. ')' → logprob: -19.125036239624023
    7. ' ' → logprob: -19.875036239624023
    8. '<|end|>' → logprob: -21.125036239624023
    9. ',i' → logprob: -21.375036239624023
    10. '[i' → logprob: -21.375036239624023

Token 478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012282043462619185
    2. ',T' → logprob: -7.001228332519531
    3. ',S' → logprob: -8.126228332519531
    4. ' ,' → logprob: -11.251228332519531
    5. ',
' → logprob: -12.376228332519531
    6. '(' → logprob: -13.501228332519531
    7. '(T' → logprob: -14.501228332519531
    8. ')' → logprob: -14.626228332519531
    9. '(S' → logprob: -15.376228332519531
    10. ',s' → logprob: -15.501228332519531

Token 479: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00012415809032972902
    2. ' T' → logprob: -9.000123977661133
    3. 'S' → logprob: -14.125123977661133
    4. '	T' → logprob: -18.000123977661133
    5. ')' → logprob: -19.375123977661133
    6. '[T' → logprob: -19.375123977661133
    7. '(T' → logprob: -19.500123977661133
    8. '   ' → logprob: -19.625123977661133
    9. 'Ｔ' → logprob: -20.250123977661133
    10. '
' → logprob: -20.250123977661133

Token 480: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3134171664714813
    2. ')
' → logprob: -1.3134171962738037
    3. ')
' → logprob: -8.938417434692383
    4. ')`
' → logprob: -11.813417434692383
    5. ' )
' → logprob: -12.188417434692383
    6. ' )' → logprob: -12.188417434692383
    7. '           ' → logprob: -12.313417434692383
    8. ')

' → logprob: -14.563417434692383
    9. ')`' → logprob: -14.563417434692383
    10. '       ' → logprob: -15.313417434692383

Token 481: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5099493861198425
    2. ' if' → logprob: -1.2599494457244873
    3. 'if' → logprob: -2.5099494457244873
    4. '<|end|>' → logprob: -3.5099494457244873
    5. '       ' → logprob: -6.384949207305908
    6. '```' → logprob: -6.634949207305908
    7. ')' → logprob: -8.009949684143066
    8. '   ' → logprob: -8.634949684143066
    9. ',' → logprob: -8.759949684143066
    10. '          ' → logprob: -8.759949684143066

Token 482: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.035548992455005646
    2. ' if' → logprob: -3.5355489253997803
    3. '           ' → logprob: -5.160549163818359
    4. ')' → logprob: -10.78554916381836
    5. '```' → logprob: -12.16054916381836
    6. '<|end|>' → logprob: -12.78554916381836
    7. '               ' → logprob: -12.91054916381836
    8. '            
' → logprob: -13.28554916381836
    9. 'for' → logprob: -13.53554916381836
    10. '#' → logprob: -13.78554916381836

Token 483: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.40389952063560486
    2. 'sound' → logprob: -1.5288995504379272
    3. '(idx' → logprob: -2.5288994312286377
    4. '(sound' → logprob: -4.153899669647217
    5. ' idx' → logprob: -4.278899669647217
    6. '(S' → logprob: -6.403899669647217
    7. 'S' → logprob: -6.528899669647217
    8. ' sound' → logprob: -7.028899669647217
    9. ' (' → logprob: -7.403899669647217
    10. '(s' → logprob: -8.278899192810059

Token 484: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3721984326839447
    2. '<' → logprob: -1.247198462486267
    3. '+' → logprob: -3.9971983432769775
    4. ' +' → logprob: -5.497198581695557
    5. '<len' → logprob: -7.247198581695557
    6. '<m' → logprob: -8.372198104858398
    7. ' ==' → logprob: -10.997198104858398
    8. '==' → logprob: -11.622198104858398
    9. '<n' → logprob: -11.872198104858398
    10. '<size' → logprob: -11.997198104858398

Token 485: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.030201086774468422
    2. 'len' → logprob: -3.5302011966705322
    3. '0' → logprob: -7.780200958251953
    4. ' m' → logprob: -10.780200958251953
    5. ' len' → logprob: -11.905200958251953
    6. '   ' → logprob: -13.405200958251953
    7. ' ' → logprob: -14.280200958251953
    8. 'n' → logprob: -14.655200958251953
    9. '	m' → logprob: -15.155200958251953
    10. '```' → logprob: -15.217700958251953

Token 486: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.013540289364755154
    2. ':' → logprob: -5.013540267944336
    3. 'or' → logprob: -5.263540267944336
    4. ' and' → logprob: -7.888540267944336
    5. '               ' → logprob: -8.138540267944336
    6. '           ' → logprob: -8.513540267944336
    7. '	or' → logprob: -8.513540267944336
    8. ':return' → logprob: -9.263540267944336
    9. ':
' → logprob: -9.513540267944336
    10. '       ' → logprob: -9.763540267944336

Token 487: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034806203097105026
    2. ' continue' → logprob: -3.409806251525879
    3. 'continue' → logprob: -6.909806251525879
    4. '           ' → logprob: -10.534806251525879
    5. ':
' → logprob: -10.909806251525879
    6. '   ' → logprob: -10.909806251525879
    7. '	continue' → logprob: -10.909806251525879
    8. ' and' → logprob: -11.034806251525879
    9. ':' → logprob: -11.159806251525879
    10. ' or' → logprob: -11.284806251525879

Token 488: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.336106538772583
    2. ' continue' → logprob: -1.586106538772583
    3. '               ' → logprob: -2.586106538772583
    4. '                   ' → logprob: -5.336106300354004
    5. '	continue' → logprob: -8.086106300354004
    6. '   ' → logprob: -8.711106300354004
    7. '                       ' → logprob: -9.711106300354004
    8. '           ' → logprob: -9.961106300354004
    9. ' ' → logprob: -11.461106300354004
    10. 'if' → logprob: -12.086106300354004

Token 489: ' 曲' (ID: 142671)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.00016241880075540394
    2. ' continue' → logprob: -8.750162124633789
    3. 'return' → logprob: -13.250162124633789
    4. '   ' → logprob: -14.250162124633789
    5. '	continue' → logprob: -14.500162124633789
    6. 'if' → logprob: -15.000162124633789
    7. '           ' → logprob: -15.250162124633789
    8. '               ' → logprob: -15.750162124633789
    9. '                   ' → logprob: -16.12516212463379
    10. 'break' → logprob: -16.25016212463379

Token 490: 'は' (ID: 5205)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.2264165878295898
    2. ' continue' → logprob: -1.6014165878295898
    3. '続きを' → logprob: -2.10141658782959
    4. '[' → logprob: -2.60141658782959
    5. ')' → logprob: -3.35141658782959
    6. 'を' → logprob: -3.47641658782959
    7. '==' → logprob: -3.60141658782959
    8. ' continues' → logprob: -3.85141658782959
    9. '	continue' → logprob: -4.10141658782959
    10. '               ' → logprob: -4.10141658782959

Token 491: '全部' (ID: 55469)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7335315942764282
    2. 'n't' → logprob: -2.4835314750671387
    3. 'なし' → logprob: -2.8585314750671387
    4. 'n' → logprob: -2.9835314750671387
    5. '```' → logprob: -2.9835314750671387
    6. '#' → logprob: -3.1085314750671387
    7. 'not' → logprob: -3.2335314750671387
    8. '終了' → logprob: -3.4835314750671387
    9. ' continue' → logprob: -3.8585314750671387
    10. '終' → logprob: -3.9835314750671387

Token 492: '終' (ID: 65491)
  Prédit: '出'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '出' → logprob: -0.876312255859375
    2. '終' → logprob: -1.001312255859375
    3. '終了' → logprob: -2.126312255859375
    4. '```' → logprob: -4.126312255859375
    5. '再' → logprob: -4.251312255859375
    6. 'す' → logprob: -4.626312255859375
    7. '演' → logprob: -4.626312255859375
    8. 'でき' → logprob: -4.751312255859375
    9. 'を' → logprob: -5.001312255859375
    10. '完' → logprob: -5.126312255859375

Token 493: 'わ' (ID: 20473)
  Prédit: 'わ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'わ' → logprob: -0.01929512247443199
    2. '了' → logprob: -4.7692952156066895
    3. 'った' → logprob: -5.5192952156066895
    4. 'って' → logprob: -5.5192952156066895
    5. '```' → logprob: -6.6442952156066895
    6. 'て' → logprob: -7.2692952156066895
    7. 'た' → logprob: -8.519294738769531
    8. 'えて' → logprob: -9.269294738769531
    9. 'る' → logprob: -9.519294738769531
    10. 'りました' → logprob: -10.769294738769531

Token 494: 'って' (ID: 30677)
  Prédit: 'って'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'って' → logprob: -0.19182883203029633
    2. 'った' → logprob: -2.316828727722168
    3. 'て' → logprob: -2.691828727722168
    4. 'た' → logprob: -5.691828727722168
    5. 'っ' → logprob: -5.816828727722168
    6. '```' → logprob: -6.691828727722168
    7. 'る' → logprob: -7.816828727722168
    8. 'っています' → logprob: -9.816828727722168
    9. 'して' → logprob: -10.566828727722168
    10. 'ら' → logprob: -11.191828727722168

Token 495: 'る' (ID: 6996)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5364968776702881
    2. '                   ' → logprob: -2.036496877670288
    3. ' continue' → logprob: -2.161496877670288
    4. 'False' → logprob: -2.161496877670288
    5. '               ' → logprob: -3.911496877670288
    6. 'True' → logprob: -4.036497116088867
    7. 'return' → logprob: -4.786497116088867
    8. ' False' → logprob: -5.786497116088867
    9. '
' → logprob: -6.161497116088867
    10. ' True' → logprob: -6.786497116088867

Token 496: 'から' (ID: 27500)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16358913481235504
    2. '                   ' → logprob: -2.0385892391204834
    3. ' continue' → logprob: -4.413589000701904
    4. 'continue' → logprob: -5.538589000701904
    5. '           ' → logprob: -5.913589000701904
    6. ':
' → logprob: -7.413589000701904
    7. '                       ' → logprob: -8.038589477539062
    8. ',' → logprob: -8.413589477539062
    9. '	continue' → logprob: -8.538589477539062
    10. '   ' → logprob: -8.663589477539062

Token 497: '次' (ID: 11445)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.003358324058353901
    2. ' continue' → logprob: -5.753358364105225
    3. 'break' → logprob: -10.003357887268066
    4. '               ' → logprob: -10.253357887268066
    5. 'return' → logprob: -10.503357887268066
    6. '           ' → logprob: -10.628357887268066
    7. '                   ' → logprob: -10.878357887268066
    8. '   ' → logprob: -11.253357887268066
    9. 'if' → logprob: -11.628357887268066
    10. '	continue' → logprob: -12.378357887268066

Token 498: 'は' (ID: 5205)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 499: '降' (ID: 36722)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.019025320187211037
    2. 'if' → logprob: -4.6440253257751465
    3. 'return' → logprob: -5.6440253257751465
    4. '0' → logprob: -5.7690253257751465
    5. 'k' → logprob: -7.1440253257751465
    6. 'None' → logprob: -7.3940253257751465
    7. ' n' → logprob: -8.019024848937988
    8. '(n' → logprob: -8.894024848937988
    9. '#' → logprob: -9.019024848937988
    10. 'continue' → logprob: -9.269024848937988

Token 500: 'り' (ID: 7297)
  Prédit: 'り'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -2.0339031834737398e-05
    2. '```' → logprob: -11.500020027160645
    3. '1' → logprob: -12.875020027160645
    4. 'りました' → logprob: -13.000020027160645
    5. 'ります' → logprob: -13.250020027160645
    6. 'る' → logprob: -14.125020027160645
    7. '段' → logprob: -14.250020027160645
    8. '0' → logprob: -14.750020027160645
    9. '(' → logprob: -15.125020027160645
    10. 'n' → logprob: -15.250020027160645

Token 501: 'れる' (ID: 177495)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.0030648186802864075
    2. 'て' → logprob: -6.1280646324157715
    3. 'ろ' → logprob: -8.25306510925293
    4. 'な' → logprob: -8.37806510925293
    5. 'よう' → logprob: -9.12806510925293
    6. 'ら' → logprob: -9.37806510925293
    7. '```' → logprob: -9.62806510925293
    8. 'ま' → logprob: -10.50306510925293
    9. 'れる' → logprob: -11.12806510925293
    10. 'た' → logprob: -11.25306510925293

Token 502: '段' (ID: 27561)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20693786442279816
    2. '                   ' → logprob: -1.7069379091262817
    3. ' continue' → logprob: -6.206937789916992
    4. '           ' → logprob: -6.456937789916992
    5. 'continue' → logprob: -7.331937789916992
    6. '                       ' → logprob: -7.581937789916992
    7. '
' → logprob: -8.706937789916992
    8. ',' → logprob: -8.956937789916992
    9. '   ' → logprob: -9.081937789916992
    10. '                ' → logprob: -9.706937789916992

Token 503: 'だけ' (ID: 121885)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31277939677238464
    2. '           ' → logprob: -1.937779426574707
    3. 'continue' → logprob: -3.437779426574707
    4. ' continue' → logprob: -3.687779426574707
    5. ':
' → logprob: -3.937779426574707
    6. ')' → logprob: -4.062779426574707
    7. '                   ' → logprob: -4.187779426574707
    8. '                       ' → logprob: -5.562779426574707
    9. ')
' → logprob: -6.437779426574707
    10. '.' → logprob: -6.437779426574707

Token 504: '(' (ID: 7)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1407056599855423
    2. '                   ' → logprob: -2.1407055854797363
    3. 'continue' → logprob: -5.015705585479736
    4. ' continue' → logprob: -5.515705585479736
    5. '           ' → logprob: -6.515705585479736
    6. ' if' → logprob: -8.015706062316895
    7. ':
' → logprob: -8.265706062316895
    8. '                       ' → logprob: -8.390706062316895
    9. ',' → logprob: -8.390706062316895
    10. '   ' → logprob: -8.890706062316895

Token 505: 'つまり' (ID: 181067)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03499385714530945
    2. ' continue' → logprob: -4.659993648529053
    3. ')
' → logprob: -4.909993648529053
    4. 'continue' → logprob: -5.534993648529053
    5. '               ' → logprob: -6.034993648529053
    6. '                   ' → logprob: -6.034993648529053
    7. ' ' → logprob: -6.284993648529053
    8. ' if' → logprob: -6.409993648529053
    9. '```' → logprob: -6.784993648529053
    10. ' )' → logprob: -6.909993648529053

Token 506: 'n' (ID: 77)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7013385891914368
    2. 'k' → logprob: -1.451338529586792
    3. ' i' → logprob: -1.826338529586792
    4. ' k' → logprob: -2.451338529586792
    5. ' n' → logprob: -4.451338768005371
    6. 'n' → logprob: -4.826338768005371
    7. ')' → logprob: -6.951338768005371
    8. 'if' → logprob: -7.076338768005371
    9. ' if' → logprob: -8.201338768005371
    10. '```' → logprob: -8.201338768005371

Token 507: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.635164754698053e-05
    2. ' +' → logprob: -10.000066757202148
    3. '＋' → logprob: -12.125066757202148
    4. ')+' → logprob: -12.375066757202148
    5. '+
' → logprob: -12.750066757202148
    6. '```' → logprob: -12.875066757202148
    7. '
' → logprob: -13.750066757202148
    8. ')' → logprob: -14.125066757202148
    9. ''+' → logprob: -15.062566757202148
    10. '()+' → logprob: -15.187566757202148

Token 508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.478889215737581e-05
    2. '+' → logprob: -10.000054359436035
    3. ' ' → logprob: -12.625054359436035
    4. '
' → logprob: -13.250054359436035
    5. '2' → logprob: -13.375054359436035
    6. '```' → logprob: -14.000054359436035
    7. 'n' → logprob: -15.250054359436035
    8. '１' → logprob: -15.500054359436035
    9. ')' → logprob: -15.500054359436035
    10. '`' → logprob: -15.875054359436035

Token 509: '段' (ID: 27561)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007037643808871508
    2. '):' → logprob: -5.13203763961792
    3. '):
' → logprob: -8.007038116455078
    4. '):

' → logprob: -8.382038116455078
    5. ' )' → logprob: -9.007038116455078
    6. ')
' → logprob: -9.257038116455078
    7. ')==' → logprob: -9.632038116455078
    8. '```' → logprob: -9.757038116455078
    9. ').' → logprob: -10.257038116455078
    10. '==' → logprob: -10.382038116455078

Token 510: '目' (ID: 10441)
  Prédit: '目'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '目' → logprob: -0.3984207510948181
    2. ')' → logprob: -1.148420810699463
    3. '+' → logprob: -5.648420810699463
    4. '）' → logprob: -5.773420810699463
    5. 'まで' → logprob: -6.523420810699463
    6. 'で' → logprob: -7.773420810699463
    7. '==' → logprob: -8.023420333862305
    8. ')==' → logprob: -8.148420333862305
    9. '以上' → logprob: -8.148420333862305
    10. 'を' → logprob: -8.148420333862305

Token 511: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023579292465001345
    2. ')
' → logprob: -7.1273579597473145
    3. '）' → logprob: -7.8773579597473145
    4. 'まで' → logprob: -8.627357482910156
    5. 'に' → logprob: -8.627357482910156
    6. ' )' → logprob: -8.877357482910156
    7. 'のみ' → logprob: -9.002357482910156
    8. 'だけ' → logprob: -9.252357482910156
    9. 'で' → logprob: -9.502357482910156
    10. 'の' → logprob: -9.752357482910156

Token 512: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0912371501326561
    2. '           ' → logprob: -2.5912370681762695
    3. '                   ' → logprob: -5.2162370681762695
    4. '<|end|>' → logprob: -5.3412370681762695
    5. ',' → logprob: -7.8412370681762695
    6. ' and' → logprob: -8.21623706817627
    7. ' if' → logprob: -8.46623706817627
    8. '
' → logprob: -8.59123706817627
    9. '<|end|>' → logprob: -8.96623706817627
    10. '```' → logprob: -9.09123706817627

Token 513: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7597880959510803
    2. ' if' → logprob: -1.2597880363464355
    3. '               ' → logprob: -1.6347880363464355
    4. '                   ' → logprob: -3.6347880363464355
    5. 'continue' → logprob: -3.7597880363464355
    6. ' continue' → logprob: -5.8847880363464355
    7. '           ' → logprob: -7.5097880363464355
    8. '	if' → logprob: -9.134788513183594
    9. '	continue' → logprob: -9.384788513183594
    10. '                       ' → logprob: -9.634788513183594

Token 514: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.026379724964499474
    2. ' i' → logprob: -3.6513798236846924
    3. 'k' → logprob: -9.526379585266113
    4. ' k' → logprob: -13.651379585266113
    5. 'sound' → logprob: -13.776379585266113
    6. '   ' → logprob: -14.276379585266113
    7. 'not' → logprob: -14.276379585266113
    8. ' ' → logprob: -14.276379585266113
    9. '	i' → logprob: -14.776379585266113
    10. ' not' → logprob: -15.151379585266113

Token 515: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.36628690361976624
    2. '==' → logprob: -1.2412868738174438
    3. ' !=' → logprob: -4.241286754608154
    4. '!=' → logprob: -5.741286754608154
    5. '```' → logprob: -10.866287231445312
    6. ')==' → logprob: -11.116287231445312
    7. '==(' → logprob: -11.366287231445312
    8. '==
' → logprob: -11.491287231445312
    9. ')' → logprob: -11.741287231445312
    10. ']==' → logprob: -12.116287231445312

Token 516: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12692926824092865
    2. ' n' → logprob: -2.12692928314209
    3. '	n' → logprob: -14.37692928314209
    4. '   ' → logprob: -15.00192928314209
    5. ' ' → logprob: -16.001928329467773
    6. '(n' → logprob: -16.126928329467773
    7. '0' → logprob: -17.126928329467773
    8. '_n' → logprob: -17.376928329467773
    9. ')n' → logprob: -17.626928329467773
    10. ' (' → logprob: -18.251928329467773

Token 517: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.630610641877865e-06
    2. ' +' → logprob: -12.000006675720215
    3. '＋' → logprob: -15.625006675720215
    4. '```' → logprob: -17.0000057220459
    5. '<|end|>' → logprob: -17.2500057220459
    6. '+
' → logprob: -17.2500057220459
    7. '1' → logprob: -17.8750057220459
    8. ')+' → logprob: -19.0000057220459
    9. '﻿' → logprob: -19.5000057220459
    10. '+xml' → logprob: -19.5000057220459

Token 518: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. '<|end|>' → logprob: -13.75000286102295
    3. '+' → logprob: -14.12500286102295
    4. ' ' → logprob: -14.37500286102295
    5. '```' → logprob: -16.250001907348633
    6. '[' → logprob: -17.250001907348633
    7. '<|end|>' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '`' → logprob: -18.750001907348633
    10. '0' → logprob: -19.000001907348633

Token 519: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09206227958202362
    2. ':' → logprob: -2.84206223487854
    3. '):
' → logprob: -3.84206223487854
    4. ' and' → logprob: -5.592062473297119
    5. '               ' → logprob: -6.717062473297119
    6. ':return' → logprob: -6.842062473297119
    7. '):' → logprob: -6.967062473297119
    8. '                   ' → logprob: -7.592062473297119
    9. '                       ' → logprob: -8.092061996459961
    10. 'and' → logprob: -9.092061996459961

Token 520: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3333031237125397
    2. ':
' → logprob: -1.5833030939102173
    3. '               ' → logprob: -3.583303213119507
    4. ':return' → logprob: -3.833303213119507
    5. '                       ' → logprob: -4.333302974700928
    6. ' and' → logprob: -4.833302974700928
    7. ' return' → logprob: -6.083302974700928
    8. ':' → logprob: -6.208302974700928
    9. '):
' → logprob: -6.958302974700928
    10. 'return' → logprob: -7.333302974700928

Token 521: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.058496300131082535
    2. ' return' → logprob: -2.9334962368011475
    3. '                       ' → logprob: -6.433496475219727
    4. '                   ' → logprob: -6.683496475219727
    5. 'queue' → logprob: -8.058496475219727
    6. '               ' → logprob: -8.308496475219727
    7. 'if' (adapté à ' if') → logprob: -9.308496475219727
    8. '           ' → logprob: -10.558496475219727
    9. '                           ' → logprob: -10.808496475219727
    10. '
' → logprob: -10.933496475219727

Token 522: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.7177073955535889
    2. 'k' → logprob: -1.3427073955535889
    3. '(sound' → logprob: -3.092707395553589
    4. 'sound' → logprob: -3.342707395553589
    5. '(S' → logprob: -3.467707395553589
    6. '(i' → logprob: -3.717707395553589
    7. '(T' → logprob: -3.717707395553589
    8. 'S' → logprob: -3.967707395553589
    9. ' (' → logprob: -4.592707633972168
    10. '(True' → logprob: -4.592707633972168

Token 523: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010749129578471184
    2. 'k' → logprob: -4.635749340057373
    3. 'n' → logprob: -7.760749340057373
    4. '(i' → logprob: -8.510748863220215
    5. '0' → logprob: -8.635748863220215
    6. '(n' → logprob: -10.135748863220215
    7. ')' → logprob: -10.260748863220215
    8. ' i' → logprob: -10.260748863220215
    9. '(' → logprob: -10.510748863220215
    10. '(k' → logprob: -11.635748863220215

Token 524: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022432638332247734
    2. ',i' → logprob: -4.022432804107666
    3. ',n' → logprob: -6.272432804107666
    4. ',k' → logprob: -6.522432804107666
    5. ' ,' → logprob: -8.272432327270508
    6. ',
' → logprob: -8.647432327270508
    7. ',j' → logprob: -9.147432327270508
    8. ',x' → logprob: -10.272432327270508
    9. ',index' → logprob: -10.522432327270508
    10. ',m' → logprob: -10.772432327270508

Token 525: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -4.60414821645827e-06
    2. ' idx' → logprob: -12.750004768371582
    3. '	idx' → logprob: -14.250004768371582
    4. '   ' → logprob: -14.375004768371582
    5. '0' → logprob: -15.375004768371582
    6. 'm' → logprob: -16.000003814697266
    7. ' ' → logprob: -17.500003814697266
    8. '(idx' → logprob: -17.625003814697266
    9. '```' → logprob: -17.875003814697266
    10. '  ' → logprob: -18.125003814697266

Token 526: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00103686039801687
    2. ' not' → logprob: -7.001036643981934
    3. 'not' → logprob: -9.126036643981934
    4. ')==' → logprob: -11.751036643981934
    5. ' )' → logprob: -12.751036643981934
    6. ',)' → logprob: -12.876036643981934
    7. ',' → logprob: -13.751036643981934
    8. ')
' → logprob: -14.376036643981934
    9. '),' → logprob: -14.751036643981934
    10. 'in' → logprob: -15.376036643981934

Token 527: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0034018096048384905
    2. 'not' → logprob: -6.128401756286621
    3. ' in' → logprob: -6.878401756286621
    4. 'in' → logprob: -8.753401756286621
    5. ')' → logprob: -10.628401756286621
    6. '	not' → logprob: -13.003401756286621
    7. '==' → logprob: -14.003401756286621
    8. '<|end|>' → logprob: -15.128401756286621
    9. ' ==' → logprob: -15.503401756286621
    10. ')==' → logprob: -16.003402709960938

Token 528: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.429298996925354
    2. 'in' → logprob: -1.054298996925354
    3. ')' → logprob: -8.304299354553223
    4. 'visited' → logprob: -8.554299354553223
    5. '<|end|>' → logprob: -9.054299354553223
    6. ' visited' → logprob: -11.679299354553223
    7. ' ' → logprob: -11.804299354553223
    8. ',' → logprob: -12.429299354553223
    9. '```' → logprob: -13.054299354553223
    10. '   ' → logprob: -13.304299354553223

Token 529: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -6.2729995988775045e-06
    2. ' visited' → logprob: -12.000006675720215
    3. '   ' → logprob: -21.8750057220459
    4. 'seen' → logprob: -23.0000057220459
    5. 'visit' → logprob: -23.2500057220459
    6. '
' → logprob: -23.6250057220459
    7. 'visible' → logprob: -23.8750057220459
    8. 'queue' → logprob: -23.8750057220459
    9. '```' → logprob: -24.1250057220459
    10. ' ' → logprob: -24.5000057220459

Token 530: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14330120384693146
    2. ':' → logprob: -2.268301248550415
    3. '):
' → logprob: -3.643301248550415
    4. '):' → logprob: -6.268301010131836
    5. ' and' → logprob: -7.393301010131836
    6. '                       ' → logprob: -7.393301010131836
    7. ')' → logprob: -8.393301010131836
    8. '                   ' → logprob: -8.518301010131836
    9. ',' → logprob: -9.143301010131836
    10. '():
' → logprob: -9.768301010131836

Token 531: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0021610872354358435
    2. ' queue' → logprob: -6.627161026000977
    3. 'queue' → logprob: -7.877161026000977
    4. '                   ' → logprob: -8.377161026000977
    5. '                           ' → logprob: -9.127161026000977
    6. '
' → logprob: -11.127161026000977
    7. '(queue' → logprob: -11.127161026000977
    8. '```' → logprob: -11.127161026000977
    9. '                        
' → logprob: -11.377161026000977
    10. '<|end|>' → logprob: -12.002161026000977

Token 532: ' visited' (ID: 18416)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5654529333114624
    2. ' queue' → logprob: -0.9404529333114624
    3. '                           ' → logprob: -3.315453052520752
    4. '                       ' → logprob: -6.065453052520752
    5. '                               ' → logprob: -6.315453052520752
    6. 'visited' (adapté à ' visited') → logprob: -8.065452575683594
    7. '	queue' → logprob: -8.690452575683594
    8. '
' → logprob: -8.815452575683594
    9. '   ' → logprob: -9.065452575683594
    10. '```' → logprob: -9.190452575683594

Token 533: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -2.5776860184123507e-06
    2. 'add' → logprob: -13.50000286102295
    3. '.' → logprob: -14.87500286102295
    4. '.Add' → logprob: -15.50000286102295
    5. ')add' → logprob: -15.75000286102295
    6. ' add' → logprob: -16.125001907348633
    7. '<|end|>' → logprob: -16.750001907348633
    8. '.append' → logprob: -17.000001907348633
    9. ' .' → logprob: -17.750001907348633
    10. '_add' → logprob: -17.750001907348633

Token 534: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -12.75000286102295
    3. ' ((' → logprob: -16.625003814697266
    4. '(
' → logprob: -17.500003814697266
    5. '(((' → logprob: -17.500003814697266
    6. '(i' → logprob: -18.500003814697266
    7. ' ' → logprob: -20.250003814697266
    8. '({' → logprob: -20.750003814697266
    9. '{' → logprob: -20.875003814697266
    10. '[(' → logprob: -21.000003814697266

Token 535: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3140453100204468
    2. 'i' → logprob: -1.3140453100204468
    3. ' (' → logprob: -7.189045429229736
    4. ' i' → logprob: -11.189044952392578
    5. ')' → logprob: -12.439044952392578
    6. '(' → logprob: -12.439044952392578
    7. ')i' → logprob: -12.814044952392578
    8. ',i' → logprob: -14.064044952392578
    9. '	i' → logprob: -14.189044952392578
    10. '   ' → logprob: -14.314044952392578

Token 536: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.259079363080673e-05
    2. ' ,' → logprob: -11.375012397766113
    3. ',
' → logprob: -14.000012397766113
    4. '<|end|>' → logprob: -16.37501335144043
    5. 'idx' → logprob: -17.00001335144043
    6. ',index' → logprob: -17.25001335144043
    7. '‌,' → logprob: -18.12501335144043
    8. '[idx' → logprob: -18.50001335144043
    9. '                           ' → logprob: -18.75001335144043
    10. '
' → logprob: -19.00001335144043

Token 537: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.005234832875430584
    2. ' idx' → logprob: -5.255234718322754
    3. '	idx' → logprob: -13.880234718322754
    4. '[idx' → logprob: -16.75523567199707
    5. '(idx' → logprob: -17.00523567199707
    6. ' ' → logprob: -17.13023567199707
    7. '   ' → logprob: -17.38023567199707
    8. '_idx' → logprob: -18.38023567199707
    9. '  ' → logprob: -19.50523567199707
    10. '.idx' → logprob: -19.63023567199707

Token 538: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10695638507604599
    2. ')
' → logprob: -2.6069564819335938
    3. '))
' → logprob: -3.8569564819335938
    4. '))' → logprob: -5.106956481933594
    5. '                       ' → logprob: -7.731956481933594
    6. '                   ' → logprob: -10.356956481933594
    7. ')
' → logprob: -11.981956481933594
    8. ')')
' → logprob: -12.856956481933594
    9. '               ' → logprob: -13.106956481933594
    10. ')`
' → logprob: -13.356956481933594

Token 539: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00046749215107411146
    2. '               ' → logprob: -9.000467300415039
    3. ')' → logprob: -9.250467300415039
    4. '                   ' → logprob: -9.375467300415039
    5. '<|end|>' → logprob: -9.750467300415039
    6. '```' → logprob: -10.625467300415039
    7. '                        
' → logprob: -11.000467300415039
    8. '           ' → logprob: -11.125467300415039
    9. ',' → logprob: -11.250467300415039
    10. '                           ' → logprob: -11.875467300415039

Token 540: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.0003595376620069146
    2. ' queue' → logprob: -8.000359535217285
    3. '```' → logprob: -11.750359535217285
    4. '	queue' → logprob: -11.875359535217285
    5. '                       ' → logprob: -12.000359535217285
    6. '                           ' → logprob: -13.875359535217285
    7. '
' → logprob: -14.250359535217285
    8. 'return' → logprob: -14.500359535217285
    9. '.queue' → logprob: -15.000359535217285
    10. '``' → logprob: -15.500359535217285

Token 541: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.15441757265944e-05
    2. '.' → logprob: -11.250031471252441
    3. '.enqueue' → logprob: -11.625031471252441
    4. '.extend' → logprob: -11.875031471252441
    5. '.app' → logprob: -13.875031471252441
    6. '.put' → logprob: -14.250031471252441
    7. '.add' → logprob: -14.750031471252441
    8. '.Append' → logprob: -15.625031471252441
    9. '.p' → logprob: -16.000032424926758
    10. '.push' → logprob: -16.750032424926758

Token 542: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.2471589798224159e-05
    2. '(' → logprob: -12.000012397766113
    3. '(((' → logprob: -12.000012397766113
    4. '(i' → logprob: -17.75001335144043
    5. ' ((' → logprob: -17.87501335144043
    6. '(
' → logprob: -18.25001335144043
    7. '```' → logprob: -19.12501335144043
    8. ')((' → logprob: -19.75001335144043
    9. '(('' → logprob: -19.75001335144043
    10. '([(' → logprob: -20.37501335144043

Token 543: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0017136165406554937
    2. '(i' → logprob: -6.376713752746582
    3. ' i' → logprob: -12.001713752746582
    4. ' (' → logprob: -12.751713752746582
    5. ')i' → logprob: -14.126713752746582
    6. '	i' → logprob: -15.001713752746582
    7. '{i' → logprob: -15.001713752746582
    8. '   ' → logprob: -15.126713752746582
    9. ')' → logprob: -15.251713752746582
    10. '```' → logprob: -15.626713752746582

Token 544: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07048516720533371
    2. ',i' → logprob: -2.6954851150512695
    3. ',n' → logprob: -8.19548511505127
    4. ' ,' → logprob: -9.82048511505127
    5. ',(' → logprob: -9.82048511505127
    6. ',j' → logprob: -9.94548511505127
    7. ',k' → logprob: -10.07048511505127
    8. ',
' → logprob: -11.94548511505127
    9. ',x' → logprob: -11.94548511505127
    10. ',e' → logprob: -12.19548511505127

Token 545: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.003012291854247451
    2. ' idx' → logprob: -5.878012180328369
    3. '(idx' → logprob: -8.628012657165527
    4. 'i' → logprob: -10.753012657165527
    5. '	idx' → logprob: -12.378012657165527
    6. '(i' → logprob: -13.878012657165527
    7. '```' → logprob: -14.253012657165527
    8. ')' → logprob: -15.003012657165527
    9. '_idx' → logprob: -15.128012657165527
    10. ' (' → logprob: -15.628012657165527

Token 546: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007880675257183611
    2. '))
' → logprob: -7.37578821182251
    3. ')' → logprob: -8.750787734985352
    4. ')))' → logprob: -13.000787734985352
    5. ')
' → logprob: -14.875787734985352
    6. '))
' → logprob: -15.125787734985352
    7. ' ))' → logprob: -16.12578773498535
    8. '))

' → logprob: -16.25078773498535
    9. '));' → logprob: -17.87578773498535
    10. '),' → logprob: -18.25078773498535

Token 547: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028245890513062477
    2. '           ' → logprob: -4.15324592590332
    3. '               ' → logprob: -4.77824592590332
    4. '                   ' → logprob: -6.27824592590332
    5. '<|end|>' → logprob: -7.27824592590332
    6. '                           ' → logprob: -8.27824592590332
    7. '       ' → logprob: -8.90324592590332
    8. '                       ' → logprob: -9.15324592590332
    9. '          ' → logprob: -9.65324592590332
    10. '                ' → logprob: -9.77824592590332

Token 548: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12376577407121658
    2. '               ' → logprob: -2.248765707015991
    3. ')' → logprob: -5.74876594543457
    4. '                   ' → logprob: -5.74876594543457
    5. 'continue' (adapté à ' continue') → logprob: -6.49876594543457
    6. ' continue' → logprob: -6.87376594543457
    7. '       ' → logprob: -6.99876594543457
    8. 'else' → logprob: -8.37376594543457
    9. 'elif' → logprob: -8.74876594543457
    10. '                       ' → logprob: -9.12376594543457

Token 549: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015260485233739018
    2. 'if' → logprob: -6.62652587890625
    3. '```' → logprob: -9.00152587890625
    4. ' if' → logprob: -10.87652587890625
    5. '          ' → logprob: -10.87652587890625
    6. ')' → logprob: -11.12652587890625
    7. '       ' → logprob: -12.12652587890625
    8. '   ' → logprob: -12.37652587890625
    9. 'elif' → logprob: -12.75152587890625
    10. '               ' → logprob: -13.12652587890625

Token 550: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0045753768645226955
    2. 'if' → logprob: -6.504575252532959
    3. '<|end|>' → logprob: -6.504575252532959
    4. '```' → logprob: -7.004575252532959
    5. ')' → logprob: -8.754575729370117
    6. ' if' → logprob: -8.879575729370117
    7. '          ' → logprob: -9.504575729370117
    8. '<|end|>' → logprob: -9.754575729370117
    9. '       ' → logprob: -10.004575729370117
    10. '               ' → logprob: -10.004575729370117

Token 551: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6380128860473633
    2. '           ' → logprob: -0.7630128860473633
    3. ' if' → logprob: -5.388012886047363
    4. '            
' → logprob: -8.263012886047363
    5. 'elif' → logprob: -8.388012886047363
    6. '```' → logprob: -8.388012886047363
    7. '
' → logprob: -10.638012886047363
    8. '       ' → logprob: -11.013012886047363
    9. '          ' → logprob: -11.138012886047363
    10. ')' → logprob: -11.638012886047363

Token 552: ' 次' (ID: 88923)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.025021616369485855
    2. 'sound' → logprob: -3.775021553039551
    3. 'S' → logprob: -6.525021553039551
    4. '           ' → logprob: -9.02502155303955
    5. ' if' → logprob: -9.27502155303955
    6. 's' → logprob: -11.15002155303955
    7. 'for' → logprob: -11.27502155303955
    8. 'T' → logprob: -11.40002155303955
    9. 'idx' → logprob: -11.52502155303955
    10. '               ' → logprob: -11.90002155303955

Token 553: 'の' (ID: 3385)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13947995007038116
    2. 'if' → logprob: -2.139479875564575
    3. 'elif' → logprob: -5.514480113983154
    4. ' if' → logprob: -6.389480113983154
    5. ',' → logprob: -6.389480113983154
    6. '==' → logprob: -6.514480113983154
    7. ']' → logprob: -7.139480113983154
    8. 'token' → logprob: -7.764480113983154
    9. ']==' → logprob: -8.014479637145996
    10. '音' → logprob: -8.389479637145996

Token 554: '音' (ID: 15082)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19642150402069092
    2. 'sound' → logprob: -2.5714216232299805
    3. 'note' → logprob: -3.0714216232299805
    4. 'token' → logprob: -3.6964216232299805
    5. 'expected' → logprob: -5.1964216232299805
    6. 'target' → logprob: -5.1964216232299805
    7. 'idx' → logprob: -5.5714216232299805
    8. 's' → logprob: -5.9464216232299805
    9. 'desired' → logprob: -6.1964216232299805
    10. 'song' → logprob: -6.3214216232299805

Token 555: 'の' (ID: 3385)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.144782155752182
    2. ' =' → logprob: -2.019782066345215
    3. '==' → logprob: -6.394782066345215
    4. ' ==' → logprob: -8.644782066345215
    5. 'if' → logprob: -9.394782066345215
    6. '=S' → logprob: -9.769782066345215
    7. '=s' → logprob: -10.644782066345215
    8. '_idx' → logprob: -11.019782066345215
    9. '_needed' → logprob: -11.144782066345215
    10. '＝' → logprob: -12.019782066345215

Token 556: '候' (ID: 33325)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006937315920367837
    2. ' if' → logprob: -8.000693321228027
    3. 'expected' → logprob: -8.500693321228027
    4. 'target' → logprob: -10.250693321228027
    5. 'required' → logprob: -10.750693321228027
    6. 'desired' → logprob: -10.750693321228027
    7. '           ' → logprob: -11.125693321228027
    8. 's' → logprob: -11.250693321228027
    9. 'token' → logprob: -11.625693321228027
    10. 'next' → logprob: -11.625693321228027

Token 557: '補' (ID: 157713)
  Prédit: '補'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '補' → logprob: -0.00018327576981391758
    2. '补' → logprob: -9.37518310546875
    3. '```' → logprob: -9.37518310546875
    4. '場' → logprob: -13.12518310546875
    5. '``' → logprob: -13.12518310546875
    6. 'は' → logprob: -14.00018310546875
    7. 'a' → logprob: -14.25018310546875
    8. '#' → logprob: -14.50018310546875
    9. '応' → logprob: -15.00018310546875
    10. 's' → logprob: -15.00018310546875

Token 558: 'が' (ID: 6632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10548330098390579
    2. ' ==' → logprob: -2.855483293533325
    3. '==' → logprob: -3.980483293533325
    4. ' if' → logprob: -4.605483531951904
    5. '<|end|>' → logprob: -5.480483531951904
    6. ',' → logprob: -5.980483531951904
    7. 'if' → logprob: -6.105483531951904
    8. ' =' → logprob: -6.605483531951904
    9. '<|end|>' → logprob: -7.355483531951904
    10. ':' → logprob: -7.730483531951904

Token 559: '曲' (ID: 43628)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.006740119773894548
    2. ' S' → logprob: -5.006740093231201
    3. ' in' → logprob: -12.13174057006836
    4. '
' → logprob: -12.75674057006836
    5. '==' → logprob: -12.75674057006836
    6. '[S' → logprob: -13.00674057006836
    7. ' ' → logprob: -13.38174057006836
    8. 'sound' → logprob: -13.50674057006836
    9. '(S' → logprob: -13.63174057006836
    10. '   ' → logprob: -13.63174057006836

Token 560: 'の' (ID: 3385)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.41726192831993103
    2. ']==' → logprob: -1.9172619581222534
    3. ' ==' → logprob: -2.042261838912964
    4. ' in' → logprob: -3.917261838912964
    5. '=' → logprob: -4.667262077331543
    6. 's' → logprob: -5.667262077331543
    7. ')==' → logprob: -5.917262077331543
    8. ']' → logprob: -5.917262077331543
    9. 'and' → logprob: -5.917262077331543
    10. ' =' → logprob: -6.042262077331543

Token 561: '次' (ID: 11445)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.21305909752845764
    2. '[idx' → logprob: -1.8380590677261353
    3. 'idx' → logprob: -3.463059186935425
    4. ' S' → logprob: -7.713058948516846
    5. ' idx' → logprob: -7.838058948516846
    6. 'sound' → logprob: -8.588059425354004
    7. 's' → logprob: -9.088059425354004
    8. '(idx' → logprob: -9.713059425354004
    9. '[' → logprob: -10.713059425354004
    10. 'next' → logprob: -10.963059425354004

Token 562: 'の' (ID: 3385)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8995015025138855
    2. '==' → logprob: -1.3995015621185303
    3. ']==' → logprob: -2.2745015621185303
    4. ']' → logprob: -3.1495015621185303
    5. '[idx' → logprob: -3.2745015621185303
    6. ' ==' → logprob: -3.6495015621185303
    7. '_token' → logprob: -4.274501323699951
    8. '][' → logprob: -4.399501323699951
    9. 'S' → logprob: -4.649501323699951
    10. 'and' → logprob: -4.649501323699951

Token 563: '音' (ID: 15082)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.001483674393966794
    2. 'sound' → logprob: -7.25148344039917
    3. ' S' → logprob: -7.50148344039917
    4. 'idx' → logprob: -9.626483917236328
    5. 'note' → logprob: -9.626483917236328
    6. ' note' → logprob: -10.876483917236328
    7. ' sound' → logprob: -11.001483917236328
    8. '音' → logprob: -11.001483917236328
    9. 's' → logprob: -12.251483917236328
    10. ' idx' → logprob: -12.376483917236328

Token 564: 'と' (ID: 5330)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4434109926223755
    2. ' ==' → logprob: -1.1934109926223755
    3. 'and' → logprob: -4.443410873413086
    4. ']==' → logprob: -4.568410873413086
    5. ' and' → logprob: -4.693410873413086
    6. 's' → logprob: -5.068410873413086
    7. ')==' → logprob: -5.193410873413086
    8. '           ' → logprob: -5.693410873413086
    9. 'if' → logprob: -6.943410873413086
    10. ':' → logprob: -7.068410873413086

Token 565: '合' (ID: 4377)
  Prédit: ' equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' equal' → logprob: -0.5933668613433838
    2. 'equal' → logprob: -0.9683668613433838
    3. '一致' → logprob: -2.968366861343384
    4. 'sound' → logprob: -5.468366622924805
    5. '==' → logprob: -5.968366622924805
    6. 'S' → logprob: -6.218366622924805
    7. ' S' → logprob: -6.468366622924805
    8. '=' → logprob: -6.593366622924805
    9. ' sound' → logprob: -7.093366622924805
    10. ')' → logprob: -7.718366622924805

Token 566: 'って' (ID: 30677)
  Prédit: 'う'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'う' → logprob: -0.23247002065181732
    2. 'っ' → logprob: -2.6074700355529785
    3. 'って' → logprob: -2.9824700355529785
    4. '致' → logprob: -3.6074700355529785
    5. '=' → logprob: -3.8574700355529785
    6. 'った' → logprob: -4.4824700355529785
    7. '==' → logprob: -4.9824700355529785
    8. 'わ' → logprob: -5.2324700355529785
    9. '   ' → logprob: -6.4824700355529785
    10. '```' → logprob: -6.9824700355529785

Token 567: 'いた' (ID: 98451)
  Prédit: 'いる'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'いる' → logprob: -0.1398414522409439
    2. 'い' → logprob: -2.7648415565490723
    3. 'る' → logprob: -3.1398415565490723
    4. 'れば' → logprob: -4.889841556549072
    5. '(sound' → logprob: -5.264841556549072
    6. 'いた' → logprob: -5.514841556549072
    7. 'います' → logprob: -6.639841556549072
    8. '=True' → logprob: -6.764841556549072
    9. '=' → logprob: -6.764841556549072
    10. 'sound' → logprob: -7.889841556549072

Token 568: 'ら' (ID: 8870)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6525622010231018
    2. 'and' → logprob: -1.277562141418457
    3. '           ' → logprob: -1.652562141418457
    4. '               ' → logprob: -5.902562141418457
    5. ':' → logprob: -6.277562141418457
    6. ':
' → logprob: -6.902562141418457
    7. '          ' → logprob: -7.652562141418457
    8. 'if' → logprob: -7.777562141418457
    9. ' ' → logprob: -7.777562141418457
    10. ' if' → logprob: -7.902562141418457

Token 569: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.060610249638557434
    2. ' if' → logprob: -3.060610294342041
    3. '           ' → logprob: -4.435610294342041
    4. '               ' → logprob: -9.310609817504883
    5. '<|end|>' → logprob: -13.060609817504883
    6. '   ' → logprob: -13.560609817504883
    7. ' ' → logprob: -13.685609817504883
    8. '                       ' → logprob: -13.935609817504883
    9. '                   ' → logprob: -14.060609817504883
    10. 'If' → logprob: -14.310609817504883

Token 570: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5991248488426208
    2. ' if' → logprob: -1.0991249084472656
    3. 'if' → logprob: -2.3491249084472656
    4. '               ' → logprob: -3.8491249084472656
    5. '   ' → logprob: -8.099124908447266
    6. '                   ' → logprob: -9.099124908447266
    7. '       ' → logprob: -9.349124908447266
    8. '```' → logprob: -9.599124908447266
    9. '                       ' → logprob: -10.474124908447266
    10. '	if' → logprob: -10.599124908447266

Token 571: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02408524788916111
    2. ' if' → logprob: -3.899085283279419
    3. '           ' → logprob: -5.64908504486084
    4. 'next' → logprob: -12.39908504486084
    5. '               ' → logprob: -13.02408504486084
    6. '<|end|>' → logprob: -13.02408504486084
    7. ' next' → logprob: -13.39908504486084
    8. 'elif' → logprob: -13.77408504486084
    9. '```' → logprob: -14.02408504486084
    10. 'If' → logprob: -14.02408504486084

Token 572: ' idx' (ID: 14016)
  Prédit: 'sound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sound' → logprob: -0.23112443089485168
    2. 'S' → logprob: -1.8561244010925293
    3. ' sound' → logprob: -3.2311244010925293
    4. ' S' → logprob: -4.606124401092529
    5. '   ' → logprob: -8.606124877929688
    6. ' ' → logprob: -9.106124877929688
    7. 'Sound' → logprob: -9.356124877929688
    8. '  ' → logprob: -10.106124877929688
    9. '(sound' → logprob: -10.606124877929688
    10. '    ' → logprob: -10.856124877929688

Token 573: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.249693363904953
    2. '<' → logprob: -1.8746933937072754
    3. '<m' → logprob: -3.1246933937072754
    4. '+' → logprob: -3.8746933937072754
    5. '<len' → logprob: -6.374693393707275
    6. ' +' → logprob: -6.999693393707275
    7. '+m' → logprob: -9.749692916870117
    8. '<M' → logprob: -9.999692916870117
    9. '<n' → logprob: -10.374692916870117
    10. '<s' → logprob: -10.874692916870117

Token 574: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.007933334447443485
    2. 'len' → logprob: -5.132933139801025
    3. ' m' → logprob: -6.257933139801025
    4. ' len' → logprob: -9.632933616638184
    5. '   ' → logprob: -12.132933616638184
    6. '           ' → logprob: -12.132933616638184
    7. ' ' → logprob: -13.257933616638184
    8. '	m' → logprob: -13.632933616638184
    9. '               ' → logprob: -14.007933616638184
    10. '  ' → logprob: -14.257933616638184

Token 575: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05511324107646942
    2. 'and' → logprob: -2.9301133155822754
    3. '+' → logprob: -8.805112838745117
    4. ' +' → logprob: -10.430112838745117
    5. '           ' → logprob: -10.680112838745117
    6. '       ' → logprob: -12.430112838745117
    7. ',' → logprob: -12.680112838745117
    8. '	and' → logprob: -12.805112838745117
    9. '          ' → logprob: -12.930112838745117
    10. ' ' → logprob: -13.055112838745117

Token 576: ' sound' (ID: 7351)
  Prédit: 'sound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sound' → logprob: -0.026915529742836952
    2. 'S' → logprob: -4.276915550231934
    3. ' sound' → logprob: -4.401915550231934
    4. ' S' → logprob: -8.401915550231934
    5. '(sound' → logprob: -9.276915550231934
    6. '   ' → logprob: -10.776915550231934
    7. 's' → logprob: -10.901915550231934
    8. ' ' → logprob: -11.026915550231934
    9. 'Sound' → logprob: -11.776915550231934
    10. 'T' → logprob: -11.901915550231934

Token 577: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10020958632230759
    2. ' ==' → logprob: -2.3502094745635986
    3. '==
' → logprob: -13.60020923614502
    4. '=' → logprob: -13.85020923614502
    5. ')==' → logprob: -15.10020923614502
    6. '===' → logprob: -15.97520923614502
    7. ']==' → logprob: -16.350210189819336
    8. '()==' → logprob: -16.475210189819336
    9. ' ' → logprob: -16.975210189819336
    10. '==(' → logprob: -17.100210189819336

Token 578: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.008616581559181213
    2. ' S' → logprob: -4.7586164474487305
    3. '   ' → logprob: -14.38361644744873
    4. ' ' → logprob: -14.38361644744873
    5. '(S' → logprob: -15.63361644744873
    6. 's' → logprob: -15.88361644744873
    7. 'note' → logprob: -16.258617401123047
    8. 'list' → logprob: -16.383617401123047
    9. '	S' → logprob: -16.633617401123047
    10. '  ' → logprob: -17.071117401123047

Token 579: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.875
    3. 'idx' → logprob: -16.625
    4. '[S' → logprob: -16.875
    5. '(idx' → logprob: -17.125
    6. ' [' → logprob: -17.875
    7. '[s' → logprob: -18.375
    8. ' idx' → logprob: -18.5
    9. '[i' → logprob: -19.0
    10. '[T' → logprob: -19.25

Token 580: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5815393328666687
    2. ']:' → logprob: -1.0815393924713135
    3. ':' → logprob: -3.0815393924713135
    4. ':
' → logprob: -3.4565393924713135
    5. '[idx' → logprob: -4.456539154052734
    6. '):
' → logprob: -4.706539154052734
    7. '):' → logprob: -6.456539154052734
    8. '[' → logprob: -7.581539154052734
    9. '[next' → logprob: -8.081539154052734
    10. '[i' → logprob: -8.206539154052734

Token 581: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0210059005767107
    2. '                       ' → logprob: -4.146006107330322
    3. '                   ' → logprob: -6.646006107330322
    4. ':' → logprob: -6.646006107330322
    5. ':
' → logprob: -6.896006107330322
    6. ' and' → logprob: -7.271006107330322
    7. '):
' → logprob: -8.896005630493164
    8. '           ' → logprob: -9.146005630493164
    9. '                           ' → logprob: -9.646005630493164
    10. '<|end|>' → logprob: -10.021005630493164

Token 582: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8458631038665771
    2. '                       ' → logprob: -1.7208631038665771
    3. '                   ' → logprob: -2.095863103866577
    4. 'queue' → logprob: -2.345863103866577
    5. 'visited' → logprob: -2.595863103866577
    6. ' if' → logprob: -2.845863103866577
    7. '               ' → logprob: -3.470863103866577
    8. ' queue' → logprob: -5.095863342285156
    9. '   ' → logprob: -6.720863342285156
    10. ' visited' → logprob: -6.970863342285156

Token 583: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0031812789384275675
    2. ' (' → logprob: -5.753181457519531
    3. '   ' → logprob: -13.003181457519531
    4. '(k' → logprob: -14.753181457519531
    5. '(ii' → logprob: -15.253181457519531
    6. '(' → logprob: -15.378181457519531
    7. '(not' → logprob: -15.628181457519531
    8. ' ' → logprob: -16.12818145751953
    9. '(I' → logprob: -16.25318145751953
    10. '((' → logprob: -16.62818145751953

Token 584: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.2994620242971e-06
    2. ' i' → logprob: -12.000008583068848
    3. '(i' → logprob: -13.125008583068848
    4. '   ' → logprob: -16.50000762939453
    5. '	i' → logprob: -17.75000762939453
    6. ' (' → logprob: -17.87500762939453
    7. '(' → logprob: -19.25000762939453
    8. ')i' → logprob: -19.50000762939453
    9. '           ' → logprob: -20.12500762939453
    10. ',i' → logprob: -20.12500762939453

Token 585: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4855663721391466e-05
    2. ' ,' → logprob: -11.375015258789062
    3. ',
' → logprob: -13.125015258789062
    4. ',i' → logprob: -14.125015258789062
    5. '<|end|>' → logprob: -15.500015258789062
    6. ',k' → logprob: -16.250015258789062
    7. ',n' → logprob: -16.375015258789062
    8. ',index' → logprob: -17.125015258789062
    9. '‌,' → logprob: -17.250015258789062
    10. ',int' → logprob: -17.625015258789062

Token 586: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00043102685594931245
    2. ' idx' → logprob: -7.750431060791016
    3. '	idx' → logprob: -15.625431060791016
    4. '(idx' → logprob: -16.625431060791016
    5. '   ' → logprob: -16.750431060791016
    6. ' ' → logprob: -18.375431060791016
    7. '[idx' → logprob: -19.625431060791016
    8. '  ' → logprob: -20.625431060791016
    9. '           ' → logprob: -21.125431060791016
    10. '       ' → logprob: -21.375431060791016

Token 587: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015030752401798964
    2. ' +' → logprob: -6.501502990722656
    3. ',' → logprob: -15.501502990722656
    4. '+)' → logprob: -15.876502990722656
    5. '+,' → logprob: -16.001502990722656
    6. '+i' → logprob: -16.376502990722656
    7. '+
' → logprob: -16.501502990722656
    8. ')' → logprob: -16.501502990722656
    9. '＋' → logprob: -16.501502990722656
    10. '()+' → logprob: -18.876502990722656

Token 588: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. ')' → logprob: -15.625000953674316
    4. '```' → logprob: -18.5
    5. '<|end|>' → logprob: -19.625
    6. ',' → logprob: -20.5
    7. '   ' → logprob: -20.5
    8. '+' → logprob: -20.875
    9. '),' → logprob: -21.125
    10. '１' → logprob: -21.25

Token 589: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2471589798224159e-05
    2. ' )' → logprob: -12.000012397766113
    3. ' not' → logprob: -12.500012397766113
    4. '):
' → logprob: -13.875012397766113
    5. ',)' → logprob: -14.250012397766113
    6. ')
' → logprob: -15.000012397766113
    7. 'not' → logprob: -15.375012397766113
    8. ',' → logprob: -16.25001335144043
    9. '`)' → logprob: -16.50001335144043
    10. '               ' → logprob: -16.87501335144043

Token 590: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0032063538674265146
    2. 'not' → logprob: -5.753206253051758
    3. ')' → logprob: -10.503206253051758
    4. '	not' → logprob: -13.878206253051758
    5. ' )' → logprob: -16.253206253051758
    6. '<|end|>' → logprob: -16.878206253051758
    7. ']' → logprob: -17.503206253051758
    8. ':not' → logprob: -17.628206253051758
    9. '(not' → logprob: -18.878206253051758
    10. '_not' → logprob: -19.003206253051758

Token 591: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4740886688232422
    2. 'in' → logprob: -0.9740886688232422
    3. '<|end|>' → logprob: -12.099088668823242
    4. ')' → logprob: -13.474088668823242
    5. 'visited' → logprob: -13.724088668823242
    6. ',' → logprob: -13.724088668823242
    7. '```' → logprob: -13.974088668823242
    8. ' ' → logprob: -14.474088668823242
    9. ' not' → logprob: -15.224088668823242
    10. 'not' → logprob: -15.474088668823242

Token 592: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0015023599844425917
    2. ' visited' → logprob: -6.501502513885498
    3. '```' → logprob: -18.876502990722656
    4. '
' → logprob: -19.001502990722656
    5. '   ' → logprob: -19.251502990722656
    6. ' ' → logprob: -19.626502990722656
    7. 'seen' → logprob: -19.876502990722656
    8. 'visible' → logprob: -20.001502990722656
    9. 'Visited' → logprob: -20.251502990722656
    10. 'visit' → logprob: -21.001502990722656

Token 593: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3041745722293854
    2. ':' → logprob: -1.929174542427063
    3. '                   ' → logprob: -2.5541746616363525
    4. '                       ' → logprob: -3.4291746616363525
    5. '):
' → logprob: -5.304174423217773
    6. '               ' → logprob: -7.554174423217773
    7. '):' → logprob: -8.179174423217773
    8. ')' → logprob: -8.304174423217773
    9. '():
' → logprob: -8.554174423217773
    10. '                           ' → logprob: -8.929174423217773

Token 594: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.031148636713624
    2. '                       ' → logprob: -3.531148672103882
    3. '               ' → logprob: -7.031148433685303
    4. '```' → logprob: -7.906148433685303
    5. '           ' → logprob: -10.156148910522461
    6. '                  ' → logprob: -10.281148910522461
    7. '                           ' → logprob: -10.406148910522461
    8. '                ' → logprob: -11.781148910522461
    9. '                 ' → logprob: -11.781148910522461
    10. '``' → logprob: -12.531148910522461

Token 595: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.014500412158668041
    2. ' visited' → logprob: -4.264500617980957
    3. '                       ' → logprob: -8.639500617980957
    4. '                   ' → logprob: -8.764500617980957
    5. '```' → logprob: -12.889500617980957
    6. '   ' → logprob: -15.389500617980957
    7. '               ' → logprob: -15.514500617980957
    8. '``' → logprob: -16.01449966430664
    9. '                    ' → logprob: -16.13949966430664
    10. '
' → logprob: -16.13949966430664

Token 596: ' �' (ID: 37586)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0017186157638207078
    2. '                   ' → logprob: -7.001718521118164
    3. '                       ' → logprob: -7.251718521118164
    4. ' visited' → logprob: -9.376718521118164
    5. '   ' → logprob: -11.626718521118164
    6. '                           ' → logprob: -13.751718521118164
    7. '               ' → logprob: -13.751718521118164
    8. '           ' → logprob: -14.626718521118164
    9. '```' → logprob: -14.626718521118164
    10. '       ' → logprob: -14.751718521118164

Token 597: '�' (ID: 110)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0050858682952821255
    2. ' visited' → logprob: -5.8800859451293945
    3. '                   ' → logprob: -6.7550859451293945
    4. '                       ' → logprob: -8.005085945129395
    5. '   ' → logprob: -8.255085945129395
    6. '```' → logprob: -8.755085945129395
    7. '                           ' → logprob: -10.130085945129395
    8. '                               ' → logprob: -10.255085945129395
    9. '                    ' → logprob: -10.380085945129395
    10. '               ' → logprob: -10.755085945129395

Token 598: 'には' (ID: 68857)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.000698972842656076
    2. ' visited' → logprob: -7.750699043273926
    3. '                   ' → logprob: -8.750699043273926
    4. '                       ' → logprob: -9.250699043273926
    5. '   ' → logprob: -12.750699043273926
    6. '                           ' → logprob: -13.000699043273926
    7. '```' → logprob: -13.375699043273926
    8. '               ' → logprob: -13.500699043273926
    9. '           ' → logprob: -13.625699043273926
    10. '
' → logprob: -13.625699043273926

Token 599: '戻' (ID: 175677)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0007020648336037993
    2. '                   ' → logprob: -8.500701904296875
    3. '                       ' → logprob: -8.500701904296875
    4. ' visited' → logprob: -8.750701904296875
    5. '```' → logprob: -9.750701904296875
    6. 'queue' → logprob: -10.250701904296875
    7. '   ' → logprob: -11.625701904296875
    8. '
' → logprob: -11.875701904296875
    9. 'i' → logprob: -12.000701904296875
    10. 'k' → logprob: -12.250701904296875

Token 600: 'れ' (ID: 9472)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06678593158721924
    2. '                   ' → logprob: -2.9417858123779297
    3. '               ' → logprob: -5.56678581237793
    4. 'visited' → logprob: -6.31678581237793
    5. '                           ' → logprob: -7.06678581237793
    6. 'れ' → logprob: -7.19178581237793
    7. 'る' → logprob: -7.56678581237793
    8. '           ' → logprob: -7.56678581237793
    9. 'continue' → logprob: -7.56678581237793
    10. '                      ' → logprob: -8.19178581237793

Token 601: 'ない' (ID: 47592)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.0766414403915405
    2. 'queue' → logprob: -1.0766414403915405
    3. '                   ' → logprob: -1.5766414403915405
    4. 'continue' → logprob: -2.45164155960083
    5. '               ' → logprob: -4.32664155960083
    6. 'る' → logprob: -6.20164155960083
    7. '(queue' → logprob: -6.32664155960083
    8. 'ません' → logprob: -6.70164155960083
    9. 'visited' → logprob: -6.82664155960083
    10. '           ' → logprob: -7.20164155960083

Token 602: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.091550812125206
    2. '                   ' → logprob: -2.466550827026367
    3. '<|end|>' → logprob: -6.966550827026367
    4. '               ' → logprob: -7.966550827026367
    5. '                    ' → logprob: -8.591550827026367
    6. '```' → logprob: -8.841550827026367
    7. '                        
' → logprob: -8.966550827026367
    8. '                           ' → logprob: -9.091550827026367
    9. '           ' → logprob: -9.341550827026367
    10. '   ' → logprob: -9.466550827026367

Token 603: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6386154294013977
    2. '                   ' → logprob: -0.7636154294013977
    3. 'visited' → logprob: -6.013615608215332
    4. ' visited' → logprob: -6.638615608215332
    5. '```' → logprob: -7.263615608215332
    6. '               ' → logprob: -7.513615608215332
    7. '                    ' → logprob: -8.138615608215332
    8. '           ' → logprob: -8.513615608215332
    9. '       ' → logprob: -9.138615608215332
    10. '                        
' → logprob: -9.138615608215332

Token 604: ' if' (ID: 538)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7207635641098022
    2. 'if' (adapté à ' if') → logprob: -1.3457635641098022
    3. 'queue' → logprob: -2.345763683319092
    4. ' if' → logprob: -2.595763683319092
    5. '                   ' → logprob: -3.595763683319092
    6. '                       ' → logprob: -3.970763683319092
    7. ' visited' → logprob: -3.970763683319092
    8. ' queue' → logprob: -4.345763683319092
    9. 'continue' → logprob: -6.345763683319092
    10. '   ' → logprob: -6.720763683319092

Token 605: ' not' (ID: 625)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013091056607663631
    2. ' i' → logprob: -4.388091087341309
    3. 'k' → logprob: -7.888091087341309
    4. ' not' → logprob: -9.138091087341309
    5. 'not' → logprob: -10.388091087341309
    6. '(i' → logprob: -10.638091087341309
    7. '0' → logprob: -11.013091087341309
    8. '(' → logprob: -11.513091087341309
    9. ' k' → logprob: -12.138091087341309
    10. '	i' → logprob: -12.888091087341309

Token 606: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0700266882777214
    2. '(k' → logprob: -2.8200266361236572
    3. ' (' → logprob: -4.945026874542236
    4. '(' → logprob: -7.320026874542236
    5. 'i' → logprob: -9.195026397705078
    6. ' i' → logprob: -10.070026397705078
    7. 'k' → logprob: -10.320026397705078
    8. '((' → logprob: -10.320026397705078
    9. '(j' → logprob: -11.320026397705078
    10. ' k' → logprob: -12.195026397705078

Token 607: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05678436532616615
    2. 'k' → logprob: -2.9317843914031982
    3. '(i' → logprob: -6.806784152984619
    4. ' i' → logprob: -7.556784152984619
    5. '0' → logprob: -9.181784629821777
    6. '(k' → logprob: -9.431784629821777
    7. '(' → logprob: -10.431784629821777
    8. ' k' → logprob: -10.931784629821777
    9. ')' → logprob: -11.681784629821777
    10. ' (' → logprob: -11.806784629821777

Token 608: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03809623047709465
    2. ' ==' → logprob: -3.2880961894989014
    3. ',' → logprob: -10.78809642791748
    4. '=' → logprob: -11.03809642791748
    5. '==
' → logprob: -11.53809642791748
    6. '<|end|>' → logprob: -13.16309642791748
    7. '```' → logprob: -13.28809642791748
    8. '0' → logprob: -14.03809642791748
    9. ')==' → logprob: -14.28809642791748
    10. '===' → logprob: -14.28809642791748

Token 609: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002325936919078231
    2. ' ' → logprob: -6.127326011657715
    3. 'k' → logprob: -9.002326011657715
    4. 'n' → logprob: -12.064826011657715
    5. '1' → logprob: -12.127326011657715
    6. ' k' → logprob: -13.127326011657715
    7. '   ' → logprob: -14.564826011657715
    8. 'i' → logprob: -14.939826011657715
    9. '  ' → logprob: -14.939826011657715
    10. ' n' → logprob: -15.314826011657715

Token 610: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015693542081862688
    2. ' ' → logprob: -9.500157356262207
    3. 'k' → logprob: -9.625157356262207
    4. 'n' → logprob: -11.875157356262207
    5. '1' → logprob: -12.125157356262207
    6. 'i' → logprob: -14.625157356262207
    7. ' k' → logprob: -15.062657356262207
    8. '   ' → logprob: -15.187657356262207
    9. 'm' → logprob: -15.562657356262207
    10. 'j' → logprob: -15.812657356262207

Token 611: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20216068625450134
    2. 'and' → logprob: -1.7021607160568237
    3. ',' → logprob: -7.577160835266113
    4. ' or' → logprob: -8.702160835266113
    5. '	and' → logprob: -10.327160835266113
    6. ' ' → logprob: -11.827160835266113
    7. ')' → logprob: -11.952160835266113
    8. 'or' → logprob: -12.202160835266113
    9. '                           ' → logprob: -12.452160835266113
    10. ' ,' → logprob: -12.952160835266113

Token 612: ' k' (ID: 372)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.28608229756355286
    2. 'k' → logprob: -1.6610822677612305
    3. ' idx' → logprob: -3.4110822677612305
    4. 'i' → logprob: -4.0360822677612305
    5. 'True' → logprob: -6.0360822677612305
    6. '(idx' → logprob: -6.4110822677612305
    7. ' k' → logprob: -6.7860822677612305
    8. '(i' → logprob: -7.1610822677612305
    9. '(k' → logprob: -7.5360822677612305
    10. ' (' → logprob: -7.7860822677612305

Token 613: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06207714602351189
    2. ' ==' → logprob: -2.812077045440674
    3. '==
' → logprob: -10.437077522277832
    4. ')' → logprob: -10.937077522277832
    5. '!=' → logprob: -10.937077522277832
    6. '=' → logprob: -11.312077522277832
    7. ')==' → logprob: -11.562077522277832
    8. '+' → logprob: -12.312077522277832
    9. '==-' → logprob: -12.312077522277832
    10. ' !=' → logprob: -12.937077522277832

Token 614: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032803830690681934
    2. ' ' → logprob: -5.753280162811279
    3. '1' → logprob: -9.503280639648438
    4. 'k' → logprob: -11.253280639648438
    5. 'i' → logprob: -11.753280639648438
    6. 'idx' → logprob: -13.503280639648438
    7. '```' → logprob: -14.065780639648438
    8. '  ' → logprob: -14.253280639648438
    9. 'n' → logprob: -14.628280639648438
    10. '(' → logprob: -14.690780639648438

Token 615: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011871340684592724
    2. ' ' → logprob: -7.376187324523926
    3. 'i' → logprob: -7.626187324523926
    4. 'k' → logprob: -10.376187324523926
    5. '1' → logprob: -10.876187324523926
    6. ' i' → logprob: -11.126187324523926
    7. '-' → logprob: -14.188687324523926
    8. 'n' → logprob: -14.438687324523926
    9. '  ' → logprob: -14.438687324523926
    10. '```' → logprob: -14.438687324523926

Token 616: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5865614414215088
    2. '):' → logprob: -0.8365614414215088
    3. ' and' → logprob: -5.08656120300293
    4. 'and' → logprob: -6.08656120300293
    5. ')' → logprob: -6.21156120300293
    6. '):

' → logprob: -10.33656120300293
    7. '):
' → logprob: -10.58656120300293
    8. '                       ' → logprob: -11.33656120300293
    9. ' ):
' → logprob: -11.58656120300293
    10. '                           ' → logprob: -12.21156120300293

Token 617: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.010803625918924809
    2. ' continue' → logprob: -4.885803699493408
    3. ':
' → logprob: -6.260803699493408
    4. 'continue' → logprob: -7.010803699493408
    5. ':' → logprob: -8.88580322265625
    6. '                   ' → logprob: -9.63580322265625
    7. '):
' → logprob: -9.88580322265625
    8. '                           ' → logprob: -10.38580322265625
    9. ' and' → logprob: -10.88580322265625
    10. '                        
' → logprob: -11.76080322265625

Token 618: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.045512739568948746
    2. '                       ' → logprob: -3.5455126762390137
    3. ' visited' → logprob: -4.295512676239014
    4. '                           ' → logprob: -6.545512676239014
    5. '                   ' → logprob: -7.545512676239014
    6. '
' → logprob: -11.045513153076172
    7. '   ' → logprob: -11.545513153076172
    8. '                               ' → logprob: -12.170513153076172
    9. 'visit' → logprob: -13.045513153076172
    10. '               ' → logprob: -13.170513153076172

Token 619: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -3.6312321753939614e-05
    2. '.' → logprob: -10.250036239624023
    3. 'add' → logprob: -14.625036239624023
    4. ' .' → logprob: -15.750036239624023
    5. '.Add' → logprob: -16.625036239624023
    6. '                           ' → logprob: -17.250036239624023
    7. '<|end|>' → logprob: -17.250036239624023
    8. '_add' → logprob: -17.625036239624023
    9. '.remove' → logprob: -17.750036239624023
    10. '.append' → logprob: -18.000036239624023

Token 620: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -17.0
    3. ' ' → logprob: -17.0
    4. ' ((' → logprob: -17.25
    5. '(((' → logprob: -17.5
    6. '(
' → logprob: -18.375
    7. '```' → logprob: -19.125
    8. '   ' → logprob: -19.75
    9. '>((' → logprob: -20.75
    10. '__((' → logprob: -21.0

Token 621: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.057743949990254e-05
    2. ' (' → logprob: -11.000020980834961
    3. 'i' → logprob: -12.500020980834961
    4. '(' → logprob: -17.75002098083496
    5. '   ' → logprob: -18.25002098083496
    6. '(
' → logprob: -18.37502098083496
    7. '[i' → logprob: -18.62502098083496
    8. ')' → logprob: -18.87502098083496
    9. '((' → logprob: -19.12502098083496
    10. ' i' → logprob: -19.12502098083496

Token 622: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.12127808178775e-05
    2. ' ,' → logprob: -10.625051498413086
    3. ',
' → logprob: -11.125051498413086
    4. ',i' → logprob: -12.250051498413086
    5. ',(' → logprob: -13.000051498413086
    6. ' (' → logprob: -13.375051498413086
    7. '(i' → logprob: -13.500051498413086
    8. ',k' → logprob: -14.375051498413086
    9. '(' → logprob: -14.750051498413086
    10. ',n' → logprob: -15.125051498413086

Token 623: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.10025142878293991
    2. ' idx' → logprob: -2.3502514362335205
    3. '(idx' → logprob: -10.100251197814941
    4. '	idx' → logprob: -12.850251197814941
    5. '[idx' → logprob: -14.975251197814941
    6. '   ' → logprob: -15.350251197814941
    7. ' (' → logprob: -15.600251197814941
    8. '(' → logprob: -16.600252151489258
    9. ' ' → logprob: -16.600252151489258
    10. '                   ' → logprob: -16.725252151489258

Token 624: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.747814349073451e-05
    2. ' +' → logprob: -11.125017166137695
    3. '))' → logprob: -13.625017166137695
    4. '+
' → logprob: -14.625017166137695
    5. ')+' → logprob: -15.250017166137695
    6. '                   ' → logprob: -15.375017166137695
    7. '()+' → logprob: -15.625017166137695
    8. ')' → logprob: -16.750017166137695
    9. '                       ' → logprob: -16.750017166137695
    10. '               ' → logprob: -17.250017166137695

Token 625: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ')' → logprob: -15.250000953674316
    3. ' ' → logprob: -16.625
    4. '))' → logprob: -16.875
    5. '```' → logprob: -17.125
    6. '   ' → logprob: -18.5
    7. '
' → logprob: -19.625
    8. ')])' → logprob: -20.3125
    9. '１' → logprob: -20.4375
    10. ')))' → logprob: -20.5

Token 626: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020857853814959526
    2. ')
' → logprob: -6.5020856857299805
    3. '                       ' → logprob: -8.12708568572998
    4. '))' → logprob: -8.25208568572998
    5. '))
' → logprob: -11.12708568572998
    6. '                   ' → logprob: -11.62708568572998
    7. ')
' → logprob: -13.50208568572998
    8. '               ' → logprob: -15.12708568572998
    9. ')}' → logprob: -15.25208568572998
    10. ')`' → logprob: -15.37708568572998

Token 627: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00552781205624342
    2. '                   ' → logprob: -6.005527973175049
    3. ')' → logprob: -6.880527973175049
    4. '<|end|>' → logprob: -7.130527973175049
    5. '					' → logprob: -8.00552749633789
    6. '               ' → logprob: -8.25552749633789
    7. '```' → logprob: -8.88052749633789
    8. '                        
' → logprob: -9.00552749633789
    9. '	                   ' → logprob: -10.00552749633789
    10. '                           ' → logprob: -10.13052749633789

Token 628: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.0015112892724573612
    2. ' queue' → logprob: -6.501511096954346
    3. '                       ' → logprob: -11.751511573791504
    4. '	queue' → logprob: -14.626511573791504
    5. '                   ' → logprob: -15.001511573791504
    6. '
' → logprob: -16.876510620117188
    7. '```' → logprob: -17.001510620117188
    8. '   ' → logprob: -17.126510620117188
    9. '.queue' → logprob: -17.376510620117188
    10. '(queue' → logprob: -17.751510620117188

Token 629: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.1008713702030946e-06
    2. '.' → logprob: -14.000001907348633
    3. '.extend' → logprob: -15.000001907348633
    4. 'append' → logprob: -15.000001907348633
    5. '.app' → logprob: -15.375001907348633
    6. '.enqueue' → logprob: -15.625001907348633
    7. '```' → logprob: -16.625001907348633
    8. '.Append' → logprob: -17.750001907348633
    9. '           ' → logprob: -17.875001907348633
    10. ' .' → logprob: -18.125001907348633

Token 630: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -9.849109119386412e-06
    2. '(' → logprob: -11.625009536743164
    3. '(i' → logprob: -14.375009536743164
    4. '(
' → logprob: -15.875009536743164
    5. ' ((' → logprob: -16.625009536743164
    6. '(((' → logprob: -17.500009536743164
    7. '```' → logprob: -17.750009536743164
    8. ' ' → logprob: -18.625009536743164
    9. '[(' → logprob: -19.625009536743164
    10. ' (' → logprob: -19.750009536743164

Token 631: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007634070352651179
    2. '(i' → logprob: -7.250763416290283
    3. ' i' → logprob: -10.000762939453125
    4. ' (' → logprob: -12.875762939453125
    5. '   ' → logprob: -13.125762939453125
    6. '	i' → logprob: -13.875762939453125
    7. ')' → logprob: -14.375762939453125
    8. ')i' → logprob: -14.625762939453125
    9. '{i' → logprob: -15.500762939453125
    10. '```' → logprob: -15.500762939453125

Token 632: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00550718791782856
    2. ',i' → logprob: -5.255506992340088
    3. ' ,' → logprob: -8.255507469177246
    4. 'i' → logprob: -12.880507469177246
    5. '                       ' → logprob: -13.255507469177246
    6. '               ' → logprob: -13.380507469177246
    7. ',k' → logprob: -13.755507469177246
    8. '                               ' → logprob: -13.880507469177246
    9. '           ' → logprob: -13.880507469177246
    10. '                           ' → logprob: -14.130507469177246

Token 633: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.013258934020996094
    2. 'i' → logprob: -4.388258934020996
    3. ' idx' → logprob: -7.388258934020996
    4. '(idx' → logprob: -9.263258934020996
    5. '(i' → logprob: -10.513258934020996
    6. '	idx' → logprob: -12.638258934020996
    7. ' i' → logprob: -13.138258934020996
    8. '   ' → logprob: -14.138258934020996
    9. ' (' → logprob: -14.388258934020996
    10. '(' → logprob: -14.638258934020996

Token 634: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002946559339761734
    2. ',' → logprob: -6.252946376800537
    3. ',i' → logprob: -7.127946376800537
    4. '(i' → logprob: -9.252946853637695
    5. '+i' → logprob: -10.252946853637695
    6. '),' → logprob: -10.377946853637695
    7. 'i' → logprob: -10.502946853637695
    8. ' +' → logprob: -11.627946853637695
    9. '```' → logprob: -12.002946853637695
    10. '[i' → logprob: -13.377946853637695

Token 635: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '+' → logprob: -14.000001907348633
    3. ' ' → logprob: -14.250001907348633
    4. '```' → logprob: -14.875001907348633
    5. ')' → logprob: -15.375001907348633
    6. 'idx' → logprob: -16.125001907348633
    7. 'i' → logprob: -17.125001907348633
    8. '2' → logprob: -17.500001907348633
    9. '   ' → logprob: -18.062501907348633
    10. '``' → logprob: -18.187501907348633

Token 636: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741646647453308
    2. '))' → logprob: -0.9741646647453308
    3. '))
' → logprob: -9.724164962768555
    4. ')))' → logprob: -10.849164962768555
    5. ')
' → logprob: -12.474164962768555
    6. '                   ' → logprob: -13.849164962768555
    7. '                       ' → logprob: -13.974164962768555
    8. '           ' → logprob: -14.349164962768555
    9. '               ' → logprob: -14.599164962768555
    10. '）' → logprob: -14.724164962768555

Token 637: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11458668857812881
    2. '<|end|>' → logprob: -2.239586591720581
    3. '<|end|>' → logprob: -7.86458683013916
    4. '```' → logprob: -7.98958683013916
    5. '       ' → logprob: -8.48958683013916
    6. '           ' → logprob: -8.73958683013916
    7. ')return' → logprob: -8.98958683013916
    8. '
' → logprob: -8.98958683013916
    9. '               ' → logprob: -9.23958683013916
    10. '                   ' → logprob: -10.23958683013916

Token 638: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 639: ' "' (ID: 392)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.004365798085927963
    2. '"' → logprob: -5.504365921020508
    3. '   ' → logprob: -9.004365921020508
    4. ''' → logprob: -9.129365921020508
    5. ' "' → logprob: -10.504365921020508
    6. 'No' → logprob: -10.629365921020508
    7. '“No' → logprob: -13.129365921020508
    8. '```' → logprob: -14.254365921020508
    9. ' ' → logprob: -15.004365921020508
    10. '	' → logprob: -15.129365921020508

Token 640: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.5332478142227046e-05
    2. '"No' → logprob: -11.750015258789062
    3. '"' → logprob: -12.250015258789062
    4. 'Impossible' → logprob: -13.000015258789062
    5. 'Yes' → logprob: -16.000015258789062
    6. ' No' → logprob: -16.000015258789062
    7. 'NO' → logprob: -16.500015258789062
    8. '_No' → logprob: -17.375015258789062
    9. 'None' → logprob: -17.625015258789062
    10. 'Fail' → logprob: -17.750015258789062

Token 641: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 642: 'input' (ID: 2586)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 643: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.032820988446474075
    2. '().' → logprob: -3.7828209400177
    3. '_data' → logprob: -5.657821178436279
    4. '_line' → logprob: -6.032821178436279
    5. '(' → logprob: -6.657821178436279
    6. '_' → logprob: -7.782821178436279
    7. '_lines' → logprob: -7.782821178436279
    8. '_str' → logprob: -7.907821178436279
    9. '.' → logprob: -8.282820701599121
    10. ' =' → logprob: -9.032820701599121

Token 644: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014301585964858532
    2. '=' → logprob: -4.639301776885986
    3. ' =' → logprob: -6.264301776885986
    4. '().' → logprob: -6.514301776885986
    5. '[' → logprob: -7.764301776885986
    6. '(' → logprob: -8.639301300048828
    7. '.' → logprob: -8.764301300048828
    8. '()[' → logprob: -9.139301300048828
    9. '=[]' → logprob: -9.889301300048828
    10. '   ' → logprob: -10.014301300048828

Token 645: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0006008113850839436
    2. ' sys' → logprob: -7.500600814819336
    3. '[' → logprob: -10.000600814819336
    4. '[]' → logprob: -13.875600814819336
    5. '(sys' → logprob: -14.625600814819336
    6. '=sys' → logprob: -14.625600814819336
    7. ' [' → logprob: -15.750600814819336
    8. 'iter' → logprob: -15.875600814819336
    9. '	sys' → logprob: -16.125600814819336
    10. '[int' → logprob: -16.250600814819336

Token 646: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.6701529622077942
    2. '.' → logprob: -1.5451529026031494
    3. '.stdin' → logprob: -1.9201529026031494
    4. '().' → logprob: -2.1701529026031494
    5. '=' → logprob: -5.1701531410217285
    6. '.read' → logprob: -5.2951531410217285
    7. ' =' → logprob: -6.9201531410217285
    8. '.readlines' → logprob: -7.0451531410217285
    9. '.setdefault' → logprob: -7.9201531410217285
    10. '=input' → logprob: -8.17015266418457

Token 647: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0012607101816684008
    2. '.readlines' → logprob: -7.001260757446289
    3. '.' → logprob: -8.126260757446289
    4. '.read' → logprob: -10.001260757446289
    5. 'read' → logprob: -13.001260757446289
    6. '=' → logprob: -13.501260757446289
    7. ' =' → logprob: -14.126260757446289
    8. '.buffer' → logprob: -14.126260757446289
    9. '_read' → logprob: -14.251260757446289
    10. '.Read' → logprob: -15.001260757446289

Token 648: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018240783363580704
    2. '()' → logprob: -4.018240928649902
    3. '.split' → logprob: -10.518240928649902
    4. '_lines' → logprob: -10.643240928649902
    5. '()
' → logprob: -11.393240928649902
    6. ' ().' → logprob: -11.893240928649902
    7. '(' → logprob: -12.393240928649902
    8. '（）' → logprob: -12.393240928649902
    9. 'split' → logprob: -12.768240928649902
    10. ' ()' → logprob: -13.018240928649902

Token 649: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3868809938430786
    2. 'strip' → logprob: -1.1368809938430786
    3. 'rstrip' → logprob: -11.636880874633789
    4. 'decode' → logprob: -13.761880874633789
    5. ' split' → logprob: -16.26188087463379
    6. 'read' → logprob: -18.26188087463379
    7. ' strip' → logprob: -18.38688087463379
    8. 'spl' → logprob: -19.01188087463379
    9. 'str' → logprob: -20.01188087463379
    10. '(split' → logprob: -20.38688087463379

Token 650: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.38709667325019836
    2. '()' → logprob: -1.137096643447876
    3. '()\' → logprob: -9.137096405029297
    4. '('\' → logprob: -9.637096405029297
    5. '()[' → logprob: -10.887096405029297
    6. '()
' → logprob: -11.012096405029297
    7. '()]' → logprob: -11.887096405029297
    8. 'line' → logprob: -12.637096405029297
    9. '_lines' → logprob: -13.887096405029297
    10. '())' → logprob: -13.887096405029297

Token 651: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00042221311014145613
    2. '()
' → logprob: -7.87542200088501
    3. '()[' → logprob: -11.375422477722168
    4. ' ()' → logprob: -12.250422477722168
    5. '())' → logprob: -12.625422477722168
    6. '()`' → logprob: -12.750422477722168
    7. '()]' → logprob: -12.750422477722168
    8. '()\' → logprob: -12.875422477722168
    9. '(' → logprob: -13.000422477722168
    10. '()

' → logprob: -13.000422477722168

Token 652: 't' (ID: 83)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.790129555156454e-05
    2. '```' → logprob: -9.750067710876465
    3. ' n' → logprob: -11.875067710876465
    4. '(n' → logprob: -14.375067710876465
    5. '``' → logprob: -14.875067710876465
    6. 'data' → logprob: -15.000067710876465
    7. '_n' → logprob: -15.125067710876465
    8. '
' → logprob: -15.375067710876465
    9. 'num' → logprob: -15.375067710876465
    10. '<|end|>' → logprob: -15.750067710876465

Token 653: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0552196241915226
    2. '=' → logprob: -2.9302196502685547
    3. '=int' → logprob: -8.055219650268555
    4. '_idx' → logprob: -11.805219650268555
    5. '_index' → logprob: -13.305219650268555
    6. '=n' → logprob: -13.930219650268555
    7. '   ' → logprob: -14.055219650268555
    8. 'idx' → logprob: -14.180219650268555
    9. ' ' → logprob: -14.305219650268555
    10. '_' → logprob: -14.555219650268555

Token 654: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.15310683415737e-05
    2. ' int' → logprob: -10.750021934509277
    3. '1' → logprob: -17.62502098083496
    4. '[int' → logprob: -18.00002098083496
    5. 'input' → logprob: -18.37502098083496
    6. 'len' → logprob: -19.75002098083496
    7. '0' → logprob: -20.12502098083496
    8. '	int' → logprob: -20.25002098083496
    9. '(int' → logprob: -20.50002098083496
    10. '=int' → logprob: -20.87502098083496

Token 655: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02324594371020794
    2. 'input' → logprob: -3.7732460498809814
    3. '(' → logprob: -15.523245811462402
    4. ' input' → logprob: -16.02324676513672
    5. '=input' → logprob: -16.14824676513672
    6. '[input' → logprob: -17.02324676513672
    7. 't' → logprob: -18.77324676513672
    8. '<input' → logprob: -19.14824676513672
    9. '(
' → logprob: -19.14824676513672
    10. ',input' → logprob: -19.27324676513672

Token 656: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02194107696413994
    2. '()[' → logprob: -4.521941184997559
    3. '())' → logprob: -4.771941184997559
    4. '_lines' → logprob: -6.771941184997559
    5. '(' → logprob: -6.896941184997559
    6. '().' → logprob: -9.396941184997559
    7. '()
' → logprob: -10.271941184997559
    8. '()(' → logprob: -10.396941184997559
    9. '_tokens' → logprob: -10.896941184997559
    10. '[' → logprob: -10.896941184997559

Token 657: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '[t' → logprob: -16.875
    3. '(' → logprob: -17.375
    4. ' [' → logprob: -17.625
    5. '```' → logprob: -17.875
    6. '1' → logprob: -18.125
    7. '[
' → logprob: -18.125
    8. '0' → logprob: -18.25
    9. ')[' → logprob: -19.0
    10. '\[' → logprob: -19.25

Token 658: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '1' → logprob: -17.625
    3. ' ' → logprob: -19.0
    4. '[' → logprob: -21.375
    5. '
' → logprob: -21.625
    6. '```' → logprob: -23.75
    7. '０' → logprob: -23.75
    8. '00' → logprob: -24.125
    9. '   ' → logprob: -24.125
    10. '۰' → logprob: -24.125

Token 659: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0017531297635287046
    2. '[' → logprob: -6.626753330230713
    3. ']' → logprob: -8.501752853393555
    4. '][' → logprob: -9.251752853393555
    5. '].' → logprob: -9.376752853393555
    6. '])
' → logprob: -10.876752853393555
    7. ')' → logprob: -10.876752853393555
    8. '],' → logprob: -13.251752853393555
    9. ' ])' → logprob: -13.251752853393555
    10. ']);' → logprob: -15.126752853393555

Token 660: 'pos' (ID: 1103)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6210671067237854
    2. 'for' → logprob: -0.8710671067237854
    3. 'idx' → logprob: -3.4960670471191406
    4. 'pos' → logprob: -4.746067047119141
    5. 'index' → logprob: -5.621067047119141
    6. 'current' → logprob: -7.621067047119141
    7. '```' → logprob: -8.12106704711914
    8. 'cur' → logprob: -8.62106704711914
    9. 'i' → logprob: -8.74606704711914
    10. 'pointer' → logprob: -9.37106704711914

Token 661: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24791021645069122
    2. ' =' → logprob: -1.6229102611541748
    3. 's' → logprob: -4.497910022735596
    4. '_lines' → logprob: -5.622910022735596
    5. 't' → logprob: -5.747910022735596
    6. '1' → logprob: -7.247910022735596
    7. '_=' → logprob: -7.622910022735596
    8. '_idx' → logprob: -7.622910022735596
    9. 'ition' → logprob: -7.747910022735596
    10. '_line' → logprob: -7.997910022735596

Token 662: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -21.125001907348633
    4. '１' → logprob: -21.625001907348633
    5. '=' → logprob: -21.875001907348633
    6. '   ' → logprob: -22.250001907348633
    7. 't' → logprob: -23.125001907348633
    8. ' =' → logprob: -23.375001907348633
    9. ' t' → logprob: -23.500001907348633
    10. 'pos' → logprob: -23.500001907348633

Token 663: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '１' → logprob: -20.75
    4. '```' → logprob: -21.875
    5. '   ' → logprob: -23.75
    6. 't' → logprob: -24.375
    7. '१' → logprob: -24.875
    8. '১' → logprob: -25.125
    9. '  ' → logprob: -25.25
    10. '2' → logprob: -25.25

Token 664: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00024524700711481273
    2. ' for' → logprob: -8.625245094299316
    3. '
' → logprob: -9.875245094299316
    4. '```' → logprob: -11.500245094299316
    5. 'while' → logprob: -12.875245094299316
    6. '<|end|>' → logprob: -13.625245094299316
    7. '	for' → logprob: -16.125246047973633
    8. '``' → logprob: -16.875246047973633
    9. '   ' → logprob: -18.125246047973633
    10. '  
' → logprob: -18.250246047973633

Token 665: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.895480277715251e-06
    2. ' for' → logprob: -11.875008583068848
    3. '```' → logprob: -13.625008583068848
    4. '
' → logprob: -14.625008583068848
    5. 'while' → logprob: -15.750008583068848
    6. '	for' → logprob: -16.875009536743164
    7. '<|end|>' → logprob: -17.250009536743164
    8. 't' → logprob: -17.875009536743164
    9. '``' → logprob: -18.875009536743164
    10. '_for' → logprob: -19.000009536743164

Token 666: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0008659643935970962
    2. ' _' → logprob: -7.250865936279297
    3. '_t' → logprob: -8.875865936279297
    4. '_i' → logprob: -11.875865936279297
    5. '_tc' → logprob: -12.125865936279297
    6. '_case' → logprob: -13.500865936279297
    7. 't' → logprob: -14.125865936279297
    8. 'i' → logprob: -14.750865936279297
    9. '_range' → logprob: -15.125865936279297
    10. ' t' → logprob: -15.125865936279297

Token 667: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.012770733796060085
    2. ' in' → logprob: -4.387770652770996
    3. 'range' → logprob: -8.637770652770996
    4. 't' → logprob: -9.762770652770996
    5. '_' → logprob: -10.762770652770996
    6. 'i' → logprob: -13.637770652770996
    7. ' ' → logprob: -14.137770652770996
    8. ' range' → logprob: -14.387770652770996
    9. 'pos' → logprob: -14.887770652770996
    10. 'x' → logprob: -14.887770652770996

Token 668: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007108822464942932
    2. ' range' → logprob: -7.250710964202881
    3. 't' → logprob: -14.125710487365723
    4. 'r' → logprob: -17.12571144104004
    5. '_range' → logprob: -17.12571144104004
    6. '	range' → logprob: -17.12571144104004
    7. '
' → logprob: -17.37571144104004
    8. '(range' → logprob: -17.75071144104004
    9. '```' → logprob: -17.87571144104004
    10. '   ' → logprob: -18.00071144104004

Token 669: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.33467796444892883
    2. 't' → logprob: -1.3346779346466064
    3. '(' → logprob: -3.9596779346466064
    4. 'range' → logprob: -6.8346781730651855
    5. ' t' → logprob: -7.5846781730651855
    6. '(range' → logprob: -8.459677696228027
    7. ' (' → logprob: -8.834677696228027
    8. ' range' → logprob: -9.084677696228027
    9. 'in' → logprob: -10.709677696228027
    10. ' in' → logprob: -11.334677696228027

Token 670: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21014103293418884
    2. '):
' → logprob: -1.8351410627365112
    3. ':' → logprob: -4.210141181945801
    4. ',' → logprob: -4.335141181945801
    5. ':
' → logprob: -7.460141181945801
    6. ')' → logprob: -7.960141181945801
    7. '():' → logprob: -8.3351411819458
    8. '   ' → logprob: -8.4601411819458
    9. '():
' → logprob: -8.7101411819458
    10. '```' → logprob: -9.3351411819458

Token 671: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1012164056301117
    2. 'n' → logprob: -3.1012163162231445
    3. ' n' → logprob: -3.8512163162231445
    4. '(n' → logprob: -4.1012163162231445
    5. ',' → logprob: -6.1012163162231445
    6. '```' → logprob: -6.3512163162231445
    7. '	n' → logprob: -6.6012163162231445
    8. '    
' → logprob: -6.8512163162231445
    9. '<|end|>' → logprob: -6.8512163162231445
    10. ' ' → logprob: -6.9762163162231445

Token 672: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0006746663711965084
    2. ' n' → logprob: -7.625674724578857
    3. '	n' → logprob: -9.1256742477417
    4. 'nm' → logprob: -9.6256742477417
    5. '   ' → logprob: -12.0006742477417
    6. '_n' → logprob: -13.0006742477417
    7. '```' → logprob: -13.5006742477417
    8. ',n' → logprob: -13.8756742477417
    9. '(n' → logprob: -15.3756742477417
    10. 'parts' → logprob: -16.250675201416016

Token 673: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00824090838432312
    2. ',m' → logprob: -5.133240699768066
    3. '=' → logprob: -6.633240699768066
    4. ' =' → logprob: -8.008240699768066
    5. ',n' → logprob: -8.008240699768066
    6. ',k' → logprob: -9.133240699768066
    7. '   ' → logprob: -9.133240699768066
    8. ' ,' → logprob: -10.508240699768066
    9. ',int' → logprob: -11.508240699768066
    10. ',c' → logprob: -11.633240699768066

Token 674: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0010354298865422606
    2. ' m' → logprob: -6.876035213470459
    3. '=' → logprob: -13.251035690307617
    4. ',' → logprob: -15.126035690307617
    5. ',m' → logprob: -15.126035690307617
    6. ' =' → logprob: -15.251035690307617
    7. '   ' → logprob: -16.626035690307617
    8. ' ' → logprob: -17.751035690307617
    9. '_m' → logprob: -17.876035690307617
    10. '```' → logprob: -17.876035690307617

Token 675: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10037747770547867
    2. ' =' → logprob: -2.3503775596618652
    3. ',' → logprob: -8.725377082824707
    4. '=int' → logprob: -12.725377082824707
    5. '=
' → logprob: -13.225377082824707
    6. '=line' → logprob: -13.975377082824707
    7. '＝' → logprob: -14.225377082824707
    8. '=input' → logprob: -14.225377082824707
    9. '=n' → logprob: -14.475377082824707
    10. ' =
' → logprob: -15.225377082824707

Token 676: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -3.5597102396423e-05
    2. ' map' → logprob: -10.250035285949707
    3. 'list' → logprob: -16.500036239624023
    4. '   ' → logprob: -17.375036239624023
    5. '(map' → logprob: -17.625036239624023
    6. '	map' → logprob: -18.375036239624023
    7. '
' → logprob: -19.000036239624023
    8. '.map' → logprob: -19.625036239624023
    9. '```' → logprob: -20.625036239624023
    10. '[' → logprob: -20.625036239624023

Token 677: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6934492588043213
    2. '(int' → logprob: -0.6934492588043213
    3. '[int' → logprob: -8.943449020385742
    4. ' int' → logprob: -9.693449020385742
    5. '=int' → logprob: -10.318449020385742
    6. ',int' → logprob: -10.568449020385742
    7. 'str' → logprob: -11.568449020385742
    8. '<int' → logprob: -11.693449020385742
    9. '(str' → logprob: -11.943449020385742
    10. ':int' → logprob: -11.943449020385742

Token 678: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7270119786262512
    2. ',input' → logprob: -0.9770119786262512
    3. 'input' → logprob: -2.7270119190216064
    4. ',' → logprob: -3.4770119190216064
    5. '(int' → logprob: -3.4770119190216064
    6. ',int' → logprob: -4.8520121574401855
    7. '=input' → logprob: -6.1020121574401855
    8. 'int' → logprob: -6.6020121574401855
    9. ' input' → logprob: -7.2270121574401855
    10. '[input' → logprob: -8.102011680603027

Token 679: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019291093340143561
    2. ' input' → logprob: -6.25192928314209
    3. '(input' → logprob: -15.37692928314209
    4. 'int' → logprob: -16.251928329467773
    5. 'str' → logprob: -16.501928329467773
    6. '=input' → logprob: -17.376928329467773
    7. 'list' → logprob: -17.501928329467773
    8. '[input' → logprob: -17.751928329467773
    9. ',input' → logprob: -18.001928329467773
    10. ')' → logprob: -18.251928329467773

Token 680: '_lines' (ID: 42980)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.5801724791526794
    2. '_lines' → logprob: -1.5801725387573242
    3. '[pos' → logprob: -2.705172538757324
    4. '(input' → logprob: -2.830172538757324
    5. 'input' → logprob: -4.080172538757324
    6. '[' → logprob: -4.205172538757324
    7. '   ' → logprob: -4.455172538757324
    8. 'lines' → logprob: -4.455172538757324
    9. 'Lines' → logprob: -4.580172538757324
    10. '=input' → logprob: -5.080172538757324

Token 681: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: 0.0
    2. '[' → logprob: -17.25
    3. '[
' → logprob: -17.625
    4. '[position' → logprob: -17.875
    5. '   ' → logprob: -18.5
    6. '
' → logprob: -18.75
    7. 'pos' → logprob: -19.125
    8. ' [' → logprob: -19.375
    9. ')[' → logprob: -19.5
    10. '```' → logprob: -19.75

Token 682: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.011998585425317287
    2. '+' → logprob: -4.761998653411865
    3. '[pos' → logprob: -5.761998653411865
    4. ' +' → logprob: -9.011998176574707
    5. ' ].' → logprob: -10.011998176574707
    6. 'pos' → logprob: -11.511998176574707
    7. '][' → logprob: -11.511998176574707
    8. ']' → logprob: -11.511998176574707
    9. ' ' → logprob: -11.761998176574707
    10. '[' → logprob: -12.261998176574707

Token 683: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0032024311367422342
    2. 'strip' → logprob: -5.753202438354492
    3. ' split' → logprob: -11.003202438354492
    4. '.split' → logprob: -12.253202438354492
    5. 'rstrip' → logprob: -13.128202438354492
    6. 'plit' → logprob: -15.003202438354492
    7. '.strip' → logprob: -15.003202438354492
    8. '1' → logprob: -15.878202438354492
    9. '```' → logprob: -16.128202438354492
    10. '_split' → logprob: -16.253202438354492

Token 684: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013375152833759785
    2. ')
' → logprob: -4.888375282287598
    3. '())' → logprob: -5.263375282287598
    4. '())
' → logprob: -8.013375282287598
    5. '[pos' → logprob: -9.138375282287598
    6. '(pos' → logprob: -10.013375282287598
    7. '(' → logprob: -10.263375282287598
    8. '[' → logprob: -10.638375282287598
    9. ');' → logprob: -11.638375282287598
    10. '()' → logprob: -12.513375282287598

Token 685: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.003294513560831547
    2. ' pos' → logprob: -6.128294467926025
    3. '```' → logprob: -7.253294467926025
    4. '	pos' → logprob: -8.503294944763184
    5. '   ' → logprob: -9.253294944763184
    6. '[pos' → logprob: -9.878294944763184
    7. '``' → logprob: -10.628294944763184
    8. ',pos' → logprob: -11.003294944763184
    9. '
' → logprob: -12.378294944763184
    10. '(pos' → logprob: -13.003294944763184

Token 686: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -5.073596548754722e-05
    2. '   ' → logprob: -10.25005054473877
    3. ' pos' → logprob: -11.25005054473877
    4. 'T' → logprob: -13.00005054473877
    5. '	pos' → logprob: -16.875051498413086
    6. '```' → logprob: -18.625051498413086
    7. 'S' → logprob: -19.625051498413086
    8. '_pos' → logprob: -19.625051498413086
    9. '       ' → logprob: -21.000051498413086
    10. ' T' → logprob: -21.250051498413086

Token 687: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12696339190006256
    2. ' +=' → logprob: -2.1269633769989014
    3. '=' → logprob: -10.37696361541748
    4. '+' → logprob: -13.12696361541748
    5. ' =' → logprob: -14.25196361541748
    6. ']+=' → logprob: -14.25196361541748
    7. '   ' → logprob: -14.37696361541748
    8. '```' → logprob: -16.251962661743164
    9. '+="' → logprob: -16.376962661743164
    10. '+='' → logprob: -17.376962661743164

Token 688: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '2' → logprob: -18.0
    4. '```' → logprob: -19.25
    5. '+' → logprob: -19.75
    6. '１' → logprob: -20.125
    7. '=' → logprob: -20.5
    8. '3' → logprob: -21.0
    9. '4' → logprob: -22.5
    10. '   ' → logprob: -22.5625

Token 689: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '```' → logprob: -20.125
    4. '2' → logprob: -21.5
    5. '１' → logprob: -21.875
    6. '+' → logprob: -22.0
    7. '3' → logprob: -23.125
    8. '=' → logprob: -23.125
    9. '
' → logprob: -23.375
    10. '0' → logprob: -23.75

Token 690: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4487513601779938
    2. 'T' → logprob: -1.1987513303756714
    3. 'S' → logprob: -2.823751449584961
    4. ' T' → logprob: -7.698751449584961
    5. '```' → logprob: -9.573751449584961
    6. ' S' → logprob: -9.948751449584961
    7. ' ' → logprob: -11.198751449584961
    8. 's' → logprob: -11.573751449584961
    9. '  ' → logprob: -11.573751449584961
    10. '    
' → logprob: -11.948751449584961

Token 691: '   ' (ID: 271)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.1355534791946411
    2. '   ' → logprob: -2.1355533599853516
    3. 'S' → logprob: -4.760553359985352
    4. ' T' → logprob: -11.385553359985352
    5. '```' → logprob: -11.760553359985352
    6. 't' → logprob: -12.510553359985352
    7. 's' → logprob: -13.510553359985352
    8. '  ' → logprob: -13.885553359985352
    9. '	T' → logprob: -14.260553359985352
    10. '    
' → logprob: -14.635553359985352

Token 692: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' (adapté à ' T') → logprob: -1.0564331205387134e-05
    2. '   ' → logprob: -12.12501049041748
    3. ' T' → logprob: -12.62501049041748
    4. '```' → logprob: -13.37501049041748
    5. 't' → logprob: -16.000011444091797
    6. 'S' → logprob: -16.375011444091797
    7. '``' → logprob: -17.500011444091797
    8. '
' → logprob: -17.875011444091797
    9. '	T' → logprob: -18.750011444091797
    10. '`' → logprob: -18.750011444091797

Token 693: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009876965545117855
    2. ' =' → logprob: -4.634876728057861
    3. '.append' → logprob: -9.88487720489502
    4. '[pos' → logprob: -10.00987720489502
    5. '   ' → logprob: -11.00987720489502
    6. '+=' → logprob: -12.75987720489502
    7. '[' → logprob: -12.75987720489502
    8. ',' → logprob: -14.00987720489502
    9. '=
' → logprob: -14.50987720489502
    10. ' +=' → logprob: -15.25987720489502

Token 694: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019558717031031847
    2. 'list' → logprob: -6.251955986022949
    3. ' input' → logprob: -11.00195598602295
    4. '[input' → logprob: -11.50195598602295
    5. '['' → logprob: -15.87695598602295
    6. ' list' → logprob: -16.626955032348633
    7. '[' → logprob: -16.626955032348633
    8. 'note' → logprob: -17.751955032348633
    9. '(input' → logprob: -18.126955032348633
    10. '[list' → logprob: -18.376955032348633

Token 695: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0007171963807195425
    2. '[pos' → logprob: -7.2507171630859375
    3. 'Lines' → logprob: -13.375717163085938
    4. '[' → logprob: -13.750717163085938
    5. 'lines' → logprob: -13.750717163085938
    6. '_list' → logprob: -13.750717163085938
    7. '(pos' → logprob: -14.000717163085938
    8. '```' → logprob: -14.625717163085938
    9. '_LINES' → logprob: -14.750717163085938
    10. 'pos' → logprob: -15.375717163085938

Token 696: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -3.128163257315464e-07
    2. '[
' → logprob: -15.75
    3. 'pos' → logprob: -16.0
    4. '```' → logprob: -17.875
    5. '(pos' → logprob: -18.0
    6. '[' → logprob: -18.0
    7. '   ' → logprob: -18.25
    8. '[position' → logprob: -19.75
    9. ',pos' → logprob: -20.0
    10. '
' → logprob: -20.25

Token 697: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0011105667799711227
    2. '[pos' → logprob: -7.376110553741455
    3. '.split' → logprob: -8.126111030578613
    4. ']' → logprob: -8.876111030578613
    5. ' ].' → logprob: -10.376111030578613
    6. ' .' → logprob: -11.876111030578613
    7. '.pos' → logprob: -12.876111030578613
    8. '[' → logprob: -13.251111030578613
    9. '.' → logprob: -13.376111030578613
    10. '.strip' → logprob: -13.876111030578613

Token 698: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.4740777611732483
    2. 'split' → logprob: -0.9740777611732483
    3. 'rstrip' → logprob: -14.099078178405762
    4. ' strip' → logprob: -18.224077224731445
    5. 'pos' → logprob: -18.724077224731445
    6. 'spl' → logprob: -20.099077224731445
    7. ' split' → logprob: -20.224077224731445
    8. '.strip' → logprob: -20.474077224731445
    9. 'skip' → logprob: -20.474077224731445
    10. 's' → logprob: -20.599077224731445

Token 699: '()
' (ID: 1234)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.2924859821796417
    2. '
' → logprob: -2.4174859523773193
    3. 'pos' → logprob: -2.9174859523773193
    4. '   ' → logprob: -3.0424859523773193
    5. '(pos' → logprob: -3.1674859523773193
    6. '()
' → logprob: -4.292486190795898
    7. '[]
' → logprob: -6.292486190795898
    8. '[' → logprob: -6.792486190795898
    9. ' pos' → logprob: -6.917486190795898
    10. ',pos' → logprob: -7.417486190795898

Token 700: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.004405074752867222
    2. ' pos' → logprob: -6.0044050216674805
    3. '   ' → logprob: -6.5044050216674805
    4. '	pos' → logprob: -8.87940502166748
    5. '[pos' → logprob: -8.87940502166748
    6. '```' → logprob: -9.12940502166748
    7. ',pos' → logprob: -11.00440502166748
    8. '_pos' → logprob: -11.50440502166748
    9. '(pos' → logprob: -12.12940502166748
    10. '<|end|>' → logprob: -12.25440502166748

Token 701: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -4.572941179503687e-05
    2. ' pos' → logprob: -10.000045776367188
    3. '	pos' → logprob: -16.375045776367188
    4. '   ' → logprob: -16.750045776367188
    5. '[pos' → logprob: -17.750045776367188
    6. '```' → logprob: -18.250045776367188
    7. '_pos' → logprob: -18.375045776367188
    8. '.pos' → logprob: -19.500045776367188
    9. '(pos' → logprob: -19.750045776367188
    10. ',pos' → logprob: -19.875045776367188

Token 702: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00020377879263833165
    2. ' +=' → logprob: -8.500204086303711
    3. ']+=' → logprob: -15.500204086303711
    4. '+' → logprob: -16.37520408630371
    5. '=' → logprob: -17.12520408630371
    6. '+='' → logprob: -19.62520408630371
    7. '+=(' → logprob: -20.00020408630371
    8. '+="' → logprob: -20.25020408630371
    9. '```' → logprob: -20.25020408630371
    10. '   ' → logprob: -21.75020408630371

Token 703: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. 'm' → logprob: -16.500003814697266
    4. '```' → logprob: -20.375003814697266
    5. '0' → logprob: -20.750003814697266
    6. '(' → logprob: -21.250003814697266
    7. 't' → logprob: -21.750003814697266
    8. '2' → logprob: -22.000003814697266
    9. '   ' → logprob: -22.000003814697266
    10. '(m' → logprob: -22.250003814697266

Token 704: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -19.5
    4. 'm' → logprob: -19.625
    5. '１' → logprob: -20.0
    6. 't' → logprob: -20.75
    7. '+' → logprob: -20.75
    8. '(' → logprob: -20.875
    9. '0' → logprob: -21.0625
    10. '#' → logprob: -21.25

Token 705: '
' (ID: 198)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07897075265645981
    2. '   ' → logprob: -2.5789706707000732
    3. ' S' → logprob: -9.453970909118652
    4. '```' → logprob: -14.078970909118652
    5. '  ' → logprob: -14.453970909118652
    6. ' ' → logprob: -14.703970909118652
    7. '<|end|>' → logprob: -14.703970909118652
    8. '	S' → logprob: -14.953970909118652
    9. 's' → logprob: -17.203969955444336
    10. '>S' → logprob: -17.328969955444336

Token 706: '   ' (ID: 271)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.038065481930971146
    2. '   ' → logprob: -3.2880654335021973
    3. ' S' → logprob: -10.663065910339355
    4. '```' → logprob: -15.163065910339355
    5. '  ' → logprob: -15.663065910339355
    6. ' ' → logprob: -15.913065910339355
    7. '	S' → logprob: -16.16306495666504
    8. '>S' → logprob: -17.53806495666504
    9. ',S' → logprob: -18.28806495666504
    10. '_S' → logprob: -18.28806495666504

Token 707: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -1.5332478142227046e-05
    2. '   ' → logprob: -11.125015258789062
    3. ' S' → logprob: -14.500015258789062
    4. 'for' → logprob: -19.000015258789062
    5. '```' → logprob: -19.250015258789062
    6. '  ' → logprob: -20.125015258789062
    7. ' ' → logprob: -21.250015258789062
    8. '	S' → logprob: -21.250015258789062
    9. '       ' → logprob: -21.500015258789062
    10. '``' → logprob: -22.125015258789062

Token 708: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163628220558167
    2. ' =' → logprob: -4.264163494110107
    3. '＝' → logprob: -16.389163970947266
    4. '+=' → logprob: -17.014163970947266
    5. '=
' → logprob: -18.014163970947266
    6. '   ' → logprob: -18.139163970947266
    7. '=line' → logprob: -18.639163970947266
    8. '=input' → logprob: -18.889163970947266
    9. '=S' → logprob: -19.639163970947266
    10. '.=' → logprob: -19.764163970947266

Token 709: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023245595395565033
    2. ' input' → logprob: -3.7732455730438232
    3. 'list' → logprob: -16.398244857788086
    4. '[input' → logprob: -17.898244857788086
    5. '	input' → logprob: -18.648244857788086
    6. '(input' → logprob: -19.148244857788086
    7. '=input' → logprob: -19.523244857788086
    8. ' ' → logprob: -19.898244857788086
    9. ' list' → logprob: -20.148244857788086
    10. '[]' → logprob: -20.273244857788086

Token 710: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.5385280847549438
    2. '[pos' → logprob: -0.9135280847549438
    3. '[input' → logprob: -4.663527965545654
    4. 'lines' → logprob: -6.413527965545654
    5. 'Lines' → logprob: -6.413527965545654
    6. '[' → logprob: -6.663527965545654
    7. 'input' → logprob: -7.538527965545654
    8. 'pos' → logprob: -8.163528442382812
    9. '[line' → logprob: -9.038528442382812
    10. '1' → logprob: -9.538528442382812

Token 711: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -1.8624639324116288e-06
    2. 'pos' → logprob: -13.250001907348633
    3. '```' → logprob: -18.125001907348633
    4. '(pos' → logprob: -19.250001907348633
    5. '   ' → logprob: -19.750001907348633
    6. '[' → logprob: -19.750001907348633
    7. '[position' → logprob: -20.875001907348633
    8. '[p' → logprob: -21.000001907348633
    9. ' [' → logprob: -21.000001907348633
    10. '[
' → logprob: -21.500001907348633

Token 712: '].' (ID: 1651)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.12488988786935806
    2. '.' → logprob: -2.374889850616455
    3. '].' → logprob: -3.999889850616455
    4. ' .' → logprob: -5.999889850616455
    5. '().' → logprob: -5.999889850616455
    6. '.pos' → logprob: -7.874889850616455
    7. ').' → logprob: -7.874889850616455
    8. 'pos' → logprob: -8.749890327453613
    9. '[pos' → logprob: -9.499890327453613
    10. '   ' → logprob: -10.499890327453613

Token 713: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.318681188422488e-05
    2. 'strip' → logprob: -11.25001335144043
    3. ' split' → logprob: -16.25001335144043
    4. '(split' → logprob: -19.87501335144043
    5. 'spl' → logprob: -20.50001335144043
    6. '.split' → logprob: -20.87501335144043
    7. 'rstrip' → logprob: -20.87501335144043
    8. 'read' → logprob: -21.37501335144043
    9. '_split' → logprob: -22.62501335144043
    10. 'plit' → logprob: -24.37501335144043

Token 714: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.028374407440423965
    2. '()
' → logprob: -4.278374195098877
    3. 'pos' → logprob: -4.903374195098877
    4. '   ' → logprob: -5.778374195098877
    5. '[pos' → logprob: -6.403374195098877
    6. ' pos' → logprob: -7.778374195098877
    7. ',pos' → logprob: -7.778374195098877
    8. ')' → logprob: -8.528374671936035
    9. '(pos' → logprob: -8.653374671936035
    10. ',' → logprob: -8.778374671936035

Token 715: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.011715730652213097
    2. ' pos' → logprob: -4.511715888977051
    3. '[pos' → logprob: -7.761715888977051
    4. '	pos' → logprob: -8.76171588897705
    5. ',pos' → logprob: -10.26171588897705
    6. '```' → logprob: -10.88671588897705
    7. '(pos' → logprob: -11.01171588897705
    8. '.pos' → logprob: -12.63671588897705
    9. '<|end|>' → logprob: -12.76171588897705
    10. '_pos' → logprob: -12.88671588897705

Token 716: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -2.7729658540920354e-05
    2. ' pos' → logprob: -10.500027656555176
    3. '	pos' → logprob: -16.875028610229492
    4. '```' → logprob: -17.125028610229492
    5. '_pos' → logprob: -17.500028610229492
    6. '[pos' → logprob: -17.750028610229492
    7. '
' → logprob: -19.875028610229492
    8. '(pos' → logprob: -20.500028610229492
    9. '.pos' → logprob: -20.875028610229492
    10. '``' → logprob: -20.875028610229492

Token 717: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07908894866704941
    2. ' +=' → logprob: -2.5790889263153076
    3. '+' → logprob: -8.704089164733887
    4. '=' → logprob: -10.829089164733887
    5. '   ' → logprob: -11.454089164733887
    6. '```' → logprob: -13.454089164733887
    7. ']+=' → logprob: -14.329089164733887
    8. '++' → logprob: -15.079089164733887
    9. ' ' → logprob: -16.45408821105957
    10. '  ' → logprob: -16.45408821105957

Token 718: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. 'm' → logprob: -18.75
    4. '１' → logprob: -20.625
    5. 't' → logprob: -20.875
    6. '(' → logprob: -21.0
    7. '```' → logprob: -21.0
    8. '0' → logprob: -22.0
    9. '+' → logprob: -22.625
    10. '۱' → logprob: -23.125

Token 719: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. 'm' → logprob: -15.250000953674316
    4. '3' → logprob: -18.000001907348633
    5. '１' → logprob: -18.375001907348633
    6. '2' → logprob: -18.625001907348633
    7. '```' → logprob: -18.625001907348633
    8. '   ' → logprob: -19.125001907348633
    9. '0' → logprob: -19.250001907348633
    10. 't' → logprob: -19.375001907348633

Token 720: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7954958821064793e-05
    2. 'result' → logprob: -11.125018119812012
    3. '```' → logprob: -12.875018119812012
    4. ' print' → logprob: -14.625018119812012
    5. 'for' → logprob: -16.625017166137695
    6. '``' → logprob: -17.250017166137695
    7. 'answer' → logprob: -17.750017166137695
    8. 'output' → logprob: -18.125017166137695
    9. '
' → logprob: -18.250017166137695
    10. '	print' → logprob: -18.875017166137695

Token 721: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.630610641877865e-06
    2. '```' → logprob: -12.000006675720215
    3. ' print' → logprob: -15.250006675720215
    4. 'result' → logprob: -15.500006675720215
    5. '``' → logprob: -17.2500057220459
    6. '
' → logprob: -19.5000057220459
    7. '	print' → logprob: -19.7500057220459
    8. 'for' → logprob: -20.8750057220459
    9. '#print' → logprob: -21.3750057220459
    10. 'output' → logprob: -21.8750057220459

Token 722: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.5
    3. 'result' → logprob: -17.0
    4. ' print' → logprob: -18.125
    5. '
' → logprob: -20.0
    6. 'answer' → logprob: -20.375
    7. '	print' → logprob: -22.25
    8. 'output' → logprob: -22.25
    9. '``' → logprob: -22.625
    10. 'pr' → logprob: -22.625

Token 723: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00011844364780699834
    2. '(' → logprob: -9.625118255615234
    3. 'solve' → logprob: -9.875118255615234
    4. '("' → logprob: -15.125118255615234
    5. '(
' → logprob: -15.250118255615234
    6. '(solution' → logprob: -16.250118255615234
    7. ' solve' → logprob: -16.500118255615234
    8. 's' → logprob: -17.250118255615234
    9. '(sol' → logprob: -17.250118255615234
    10. '(resolve' → logprob: -17.375118255615234

Token 724: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -1.1279553291387856e-05
    2. 'solve' → logprob: -11.500011444091797
    3. 'ol' → logprob: -14.500011444091797
    4. 'l' → logprob: -15.250011444091797
    5. 'olv' → logprob: -15.625011444091797
    6. 'ove' → logprob: -16.375011444091797
    7. 'olver' → logprob: -16.875011444091797
    8. 'OLVE' → logprob: -16.875011444091797
    9. 'love' → logprob: -17.625011444091797
    10. 't' → logprob: -19.000011444091797

Token 725: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00250918953679502
    2. '(' → logprob: -6.002509117126465
    3. ')' → logprob: -11.502509117126465
    4. ' (' → logprob: -11.627509117126465
    5. '(
' → logprob: -12.127509117126465
    6. 'n' → logprob: -12.502509117126465
    7. ')(' → logprob: -13.002509117126465
    8. ')n' → logprob: -13.002509117126465
    9. '((' → logprob: -15.127509117126465
    10. ' n' → logprob: -15.377509117126465

Token 726: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018235044553875923
    2. ',m' → logprob: -4.018235206604004
    3. ' ,' → logprob: -9.518235206604004
    4. ',n' → logprob: -11.768235206604004
    5. ',
' → logprob: -13.143235206604004
    6. 'm' → logprob: -14.518235206604004
    7. '(m' → logprob: -15.143235206604004
    8. ',M' → logprob: -15.143235206604004
    9. '(' → logprob: -15.268235206604004
    10. '   ' → logprob: -16.018234252929688

Token 727: ',T' (ID: 44428)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004244842566549778
    2. 'S' → logprob: -6.254244804382324
    3. ',S' → logprob: -6.254244804382324
    4. ',n' → logprob: -8.879244804382324
    5. ',T' → logprob: -9.004244804382324
    6. ' ,' → logprob: -9.379244804382324
    7. 'T' → logprob: -11.254244804382324
    8. '(n' → logprob: -11.754244804382324
    9. '(S' → logprob: -12.129244804382324
    10. ')' → logprob: -12.254244804382324

Token 728: ',S' (ID: 42097)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6931766867637634
    2. ',S' → logprob: -0.6931766867637634
    3. ' ,' → logprob: -10.44317626953125
    4. 'S' → logprob: -16.06817626953125
    5. ',
' → logprob: -16.56817626953125
    6. ',s' → logprob: -17.31817626953125
    7. '   ' → logprob: -18.69317626953125
    8. ',A' → logprob: -19.44317626953125
    9. ',T' → logprob: -19.44317626953125
    10. '，' → logprob: -19.69317626953125

Token 729: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3132636249065399
    2. ')' → logprob: -1.3132636547088623
    3. ')))' → logprob: -13.438263893127441
    4. '())' → logprob: -15.813263893127441
    5. '()))' → logprob: -16.813262939453125
    6. '})' → logprob: -17.313262939453125
    7. ' ))' → logprob: -17.313262939453125
    8. '))
' → logprob: -17.438262939453125
    9. '()' → logprob: -17.938262939453125
    10. ')")' → logprob: -18.063262939453125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 727
Tokens correctement prédits (1ère position, stricte): 284
Tokens correctement prédits (1ère position, avec adaptation): 314
Tokens correctement prédits (top 10): 572
Précision stricte (1ère position): 39.06%
Précision adaptée (1ère position): 43.19%
Précision (top 10): 78.68%
================================================================================
