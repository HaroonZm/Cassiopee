================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter

def min_compressed_length(s):
    # Compter le nombre de chaque caractère
    count = Counter(s)
    
    # Séparer les lettres et les chiffres et les trier
    letters = sorted([c for c in count if c.isalpha()])
    digits = sorted([c for c in count if c.isdigit()])
    
    # Fonction pour trouver les intervalles contigus dans une liste de caractères ordonnés
    # par rapport à leur code ASCII
    def find_intervals(chars):
        intervals = []
        if not chars:
            return intervals
        start = prev = chars[0]
        for c in chars[1:]:
            if ord(c) == ord(prev) + 1:
                prev = c
            else:
                intervals.append((start, prev))
                start = prev = c
        intervals.append((start, prev))
        return intervals
    
    # Calcul des intervalles continus pour lettres et chiffres
    letter_intervals = find_intervals(letters)
    digit_intervals = find_intervals(digits)
    
    # La compression remplace chaque intervalle par "x-y" (2 chars + le tiret = 3 chars)
    # mais si l'intervalle ne fait qu'une lettre/chiffre, on garde 1 caractère.
    # Donc, pour chaque intervalle, la longueur compressée est
    # 3 si long intervalle (diff > 0), sinon 1
    
    def compressed_length(intervals):
        length = 0
        for start, end in intervals:
            if start == end:
                length += 1
            else:
                length += 3
        return length
    
    # On doit aussi compter les caractères qui ne sont ni lettres ni chiffres présents dans s
    # Or le problème indique que s ne contient que lettres minuscules et chiffres, donc pas de caractère autre.
    # Par contre, il peut y avoir répétitions de caractères.
    
    # La compression opère sur des groupes consécutifs de caractères après réordonnancement
    # En réordonnant, on peut mettre ensemble un seul intervalle pour toutes les occurrences du même caractère.
    # Le problème ne précise pas qu'une même lettre répétée est compressée en nombre réduit (ex: "aaa" → "a" ou "a-a")
    # Il faut donc compter combien de fois chaque caractère apparaît.
    # Mais la compression ne réduit pas le nombre de répétitions d'un même caractère,
    # il ne change que la représentation des séquences consécutives d'éléments consécutifs dans l'alphabet/digits.
    
    # La meilleure approche est donc de :
    # - Regrouper toutes les occurrences d'un même caractère (il est permis de réordonner)
    # - Pour chaque intervalle, la longueur finale sera le nombre d'occurrences de tous caractères dans cet intervalle
    #   remplacé par le nombre d'intervalles * (3 ou 1)
    #   MAIS la compression ne précise pas que l'on supprime répétitions, donc ? 
    #   En exemple : "1122334455" devient "1-5" (exemple answer=6)
    #   Le nombre minimal est la somme des longueurs minimisées par regroupement par intervalle
    
    # Correction :
    # La compression ne réduit pas les occurrences multiples d'un même caractère en un seul, elles restent toutes.
    # Donc on doit compter :
    # Pour un intervalle [start, end]
    # la longueur initiale est la somme des occurrences de tous characters dans l'intervalle
    # la longueur compressée est 3 (start-end) si intervalle>1 caractère, sinon nombre d'occurrences si simple caractère.
    # Le but est de minimiser la longueur après compression.
    
    # On doit donc partitionner les caractères en intervalles continus,
    # et pour chaque intervalle, le cout est :
    #   - si intervalle > 1 : 3 (ex: "a-d")
    #   - si intervalle = 1 : nombre d'occurrences de ce caractère (ex: "z" multiple fois)
    # Et on doit répartir les caractères pour minimiser la somme totale.
    
    # Remarque : On peut choisir de partitionner la liste triée des lettres en sous intervalles pour minimiser la taille
    # de sortis compressée. Pareil pour les chiffres.
    
    # On doit donc faire du DP pour partitionner la liste de lettres et la liste de chiffres.
    
    # Fonction récursive pour calculer la longueur minimale de compression sur un sousensemble ordonné de caractères
    def dp_min_length(sorted_chars):
        n = len(sorted_chars)
        
        # mémoriser par indice l'optimum
        memo = {}
        
        # pré-calcul occurrences cumulées pour gagner du temps
        occ = [count[c] for c in sorted_chars]
        prefix_sum = [0]*(n+1)
        for i in range(n):
            prefix_sum[i+1] = prefix_sum[i]+occ[i]
        
        def cost(i,j):
            # i,j inclusifs indices de characters dans sorted_chars
            # vérifier si chars forment une plage continue
            if ord(sorted_chars[j]) - ord(sorted_chars[i]) != j - i:
                return float('inf')  # intervalle discontinu interdit
            length = j - i +1
            total_occurrences = prefix_sum[j+1] - prefix_sum[i]
            if length == 1:
                # pas possible de compresser, doit écrire tous les occurrences
                return total_occurrences
            else:
                # on compresse en x-y avec 3 caractères
                return 3
        
        def dfs(i):
            if i == n:
                return 0
            if i in memo:
                return memo[i]
            res = float('inf')
            for j in range(i,n):
                c = cost(i,j)
                if c == float('inf'):
                    break  # pas continuity, pas besoin d'essayer plus loin
                res = min(res, c + dfs(j+1))
            memo[i] = res
            return res
        
        return dfs(0)
    
    # Calcul minimal séparément pour les lettres et les chiffres
    min_letters = dp_min_length(letters) if letters else 0
    min_digits = dp_min_length(digits) if digits else 0
    
    # La chaine compressée finale est la concaténation des compressions lettres + compression chiffres,
    # le problème montre dans l'exemple qu'une réorganisation put toute la rendre contiguë.
    # Le nombre total minimal est alors somme des min des 2 groupes.
    
    return min_letters + min_digits

# Lecture de l'entrée
s = input().strip()

# Calcul et affichage du résultat
print(min_compressed_length(s))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.6052130460739136
    2. 'deque' → logprob: -1.2302130460739136
    3. 'default' → logprob: -2.230213165283203
    4. ' defaultdict' → logprob: -3.730213165283203
    5. 'Counter' → logprob: -4.105213165283203
    6. ' abc' → logprob: -4.980213165283203
    7. 'named' → logprob: -5.730213165283203
    8. ' deque' → logprob: -6.605213165283203
    9. ' Counter' → logprob: -7.230213165283203
    10. '```' → logprob: -7.355213165283203

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001641619368456304
    2. '\(' → logprob: -7.251641750335693
    3. '\' → logprob: -8.126641273498535
    4. '.' → logprob: -8.376641273498535
    5. '\n' → logprob: -9.251641273498535
    6. '```' → logprob: -9.626641273498535
    7. 'newline' → logprob: -9.626641273498535
    8. 'a' → logprob: -10.126641273498535
    9. 'import' → logprob: -10.251641273498535
    10. '()' → logprob: -10.751641273498535

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008476639166474342
    2. 'a' → logprob: -5.633476734161377
    3. '\(' → logprob: -7.258476734161377
    4. '\n' → logprob: -7.383476734161377
    5. 'newline' → logprob: -7.383476734161377
    6. '\' → logprob: -7.508476734161377
    7. '.' → logprob: -7.508476734161377
    8. 'C' → logprob: -7.758476734161377
    9. '```' → logprob: -8.258476257324219
    10. 'Counter' → logprob: -8.258476257324219

Token 6: ' min' (ID: 1349)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0007291130605153739
    2. ' space' → logprob: -8.25072956085205
    3. ' process' → logprob: -9.37572956085205
    4. ' calculate' → logprob: -9.62572956085205
    5. ' ' → logprob: -9.87572956085205
    6. ' find' → logprob: -10.62572956085205
    7. ' ```' → logprob: -10.62572956085205
    8. ' add' → logprob: -10.62572956085205
    9. ' _' → logprob: -11.00072956085205
    10. ' func' → logprob: -11.37572956085205

Token 7: '_com' (ID: 10828)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39478498697280884
    2. 'imum' → logprob: -1.144784927368164
    3. '_freq' → logprob: -6.519784927368164
    4. '_count' → logprob: -7.144784927368164
    5. 'imal' → logprob: -7.144784927368164
    6. '_length' → logprob: -7.269784927368164
    7. '_word' → logprob: -7.394784927368164
    8. '_distance' → logprob: -8.269784927368164
    9. '_window' → logprob: -8.269784927368164
    10. '(' → logprob: -8.394784927368164

Token 8: 'pressed' (ID: 26974)
  Prédit: 'plete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plete' → logprob: -0.2508481740951538
    2. 'pute' → logprob: -1.7508481740951538
    3. 'p' → logprob: -4.125848293304443
    4. 'pletion' → logprob: -4.125848293304443
    5. 'ple' → logprob: -5.250848293304443
    6. 'mon' → logprob: -6.000848293304443
    7. 'ponent' → logprob: -6.125848293304443
    8. 'plet' → logprob: -6.375848293304443
    9. 'pare' → logprob: -6.625848293304443
    10. 'press' → logprob: -7.375848293304443

Token 9: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.166415274143219
    2. '_size' → logprob: -2.666415214538574
    3. '_' → logprob: -2.916415214538574
    4. '_string' → logprob: -3.541415214538574
    5. '_code' → logprob: -8.791415214538574
    6. '_suffix' → logprob: -8.916415214538574
    7. '_len' → logprob: -9.166415214538574
    8. '_a' → logprob: -10.416415214538574
    9. '_version' → logprob: -10.416415214538574
    10. '_text' → logprob: -10.541415214538574

Token 10: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006455989787355065
    2. '_' → logprob: -8.000645637512207
    3. '(s' → logprob: -9.375645637512207
    4. '():' → logprob: -10.125645637512207
    5. 's' → logprob: -10.875645637512207
    6. ' (' → logprob: -11.125645637512207
    7. '(user' → logprob: -11.250645637512207
    8. '('' → logprob: -11.375645637512207
    9. ':' → logprob: -11.750645637512207
    10. '(sentence' → logprob: -11.750645637512207

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009533654898405075
    2. ':' → logprob: -4.884533882141113
    3. ')' → logprob: -6.384533882141113
    4. '):
' → logprob: -8.884533882141113
    5. ',' → logprob: -9.634533882141113
    6. 's' → logprob: -12.134533882141113
    7. '=' → logprob: -12.384533882141113
    8. '[' → logprob: -12.634533882141113
    9. ''):' → logprob: -12.634533882141113
    10. ' ):' → logprob: -12.759533882141113

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09046145528554916
    2. '    ' → logprob: -2.840461492538452
    3. ':' → logprob: -4.465461254119873
    4. ' ' → logprob: -5.215461254119873
    5. ' :' → logprob: -5.340461254119873
    6. '(' → logprob: -6.340461254119873
    7. '    
' → logprob: -7.090461254119873
    8. '"' → logprob: -7.340461254119873
    9. '     
' → logprob: -7.840461254119873
    10. ' counter' → logprob: -8.090461730957031

Token 13: ' #' (ID: 1069)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3535690903663635
    2. '   ' → logprob: -1.6035690307617188
    3. 'n' → logprob: -2.8535690307617188
    4. ' max' → logprob: -3.6035690307617188
    5. '```' → logprob: -5.228569030761719
    6. ' counter' → logprob: -6.603569030761719
    7. ' length' → logprob: -6.603569030761719
    8. 'max' → logprob: -6.853569030761719
    9. '`' → logprob: -7.478569030761719
    10. ' best' → logprob: -8.103569030761719

Token 14: ' Comp' (ID: 5211)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.09962435811758041
    2. 'n' → logprob: -3.2246243953704834
    3. ' max' → logprob: -3.5996243953704834
    4. ' length' → logprob: -4.599624156951904
    5. '   ' → logprob: -5.224624156951904
    6. ' if' → logprob: -5.974624156951904
    7. 'max' → logprob: -6.224624156951904
    8. ' return' → logprob: -6.349624156951904
    9. 'length' → logprob: -6.724624156951904
    10. ' for' → logprob: -6.849624156951904

Token 15: 'ter' (ID: 399)
  Prédit: 'ress'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ress' → logprob: -0.8058716058731079
    2. 'ute' → logprob: -1.930871605873108
    3. 'let' → logprob: -1.930871605873108
    4. 'ut' → logprob: -2.6808714866638184
    5. 'ressed' → logprob: -2.6808714866638184
    6. 'lete' → logprob: -2.9308714866638184
    7. 'ret' → logprob: -3.0558714866638184
    8. 're' → logprob: -5.430871486663818
    9. '```' → logprob: -6.055871486663818
    10. 'r' → logprob: -6.180871486663818

Token 16: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45501962304115295
    2. '(' → logprob: -1.7050195932388306
    3. ' ' → logprob: -2.20501971244812
    4. '(s' → logprob: -3.58001971244812
    5. 't' → logprob: -4.330019474029541
    6. ' =' → logprob: -4.830019474029541
    7. '=' → logprob: -4.830019474029541
    8. '_' → logprob: -5.455019474029541
    9. 'r' → logprob: -5.705019474029541
    10. '('' → logprob: -5.955019474029541

Token 17: ' nombre' (ID: 9733)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9391693472862244
    2. 's' → logprob: -1.3141694068908691
    3. 'n' → logprob: -1.4391694068908691
    4. ' Counter' → logprob: -3.564169406890869
    5. ' n' → logprob: -3.939169406890869
    6. 't' → logprob: -4.314169406890869
    7. ' c' → logprob: -5.314169406890869
    8. ' t' → logprob: -5.314169406890869
    9. ' ' → logprob: -5.564169406890869
    10. ' counter' → logprob: -5.939169406890869

Token 18: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06284203380346298
    2. 's' → logprob: -3.6878421306610107
    3. ' de' → logprob: -4.062841892242432
    4. '_' → logprob: -5.312841892242432
    5. '  ' → logprob: -5.437841892242432
    6. 'r' → logprob: -5.812841892242432
    7. ' d' → logprob: -6.187841892242432
    8. '   ' → logprob: -6.562841892242432
    9. 'space' → logprob: -7.437841892242432
    10. 'd' → logprob: -7.687841892242432

Token 19: ' chaque' (ID: 21194)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.41604962944984436
    2. ' ' → logprob: -1.666049599647522
    3. ' c' → logprob: -4.041049480438232
    4. 'car' → logprob: -4.041049480438232
    5. ' caracteres' → logprob: -4.041049480438232
    6. ' caract' → logprob: -4.166049480438232
    7. ' mots' → logprob: -4.291049480438232
    8. 's' → logprob: -4.541049480438232
    9. ' car' → logprob: -4.791049480438232
    10. ' occurrences' → logprob: -4.916049480438232

Token 20: ' caractère' (ID: 80509)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.048475056886672974
    2. '_' → logprob: -3.4234750270843506
    3. ' caract' → logprob: -5.67347526550293
    4. ''' → logprob: -6.54847526550293
    5. ' caractère' → logprob: -6.54847526550293
    6. ' caractères' → logprob: -6.92347526550293
    7. 'm' → logprob: -6.92347526550293
    8. '  ' → logprob: -7.04847526550293
    9. ' )' → logprob: -7.42347526550293
    10. 's' → logprob: -7.54847526550293

Token 21: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3874114751815796
    2. ' ' → logprob: -2.137411594390869
    3. ' =' → logprob: -2.512411594390869
    4. 's' → logprob: -3.637411594390869
    5. 'r' → logprob: -4.137411594390869
    6. '  ' → logprob: -4.137411594390869
    7. ' :' → logprob: -4.887411594390869
    8. '(' → logprob: -4.887411594390869
    9. 'n' → logprob: -5.012411594390869
    10. ''' → logprob: -5.262411594390869

Token 22: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.563902735710144
    2. '   ' → logprob: -1.563902735710144
    3. ' =' → logprob: -2.4389028549194336
    4. '(' → logprob: -2.6889028549194336
    5. 's' → logprob: -3.9389028549194336
    6. 'c' → logprob: -4.813902854919434
    7. '_' → logprob: -5.438902854919434
    8. '  ' → logprob: -5.563902854919434
    9. ''' → logprob: -5.563902854919434
    10. 't' → logprob: -5.813902854919434

Token 23: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5076661109924316
    2. 'c' → logprob: -1.1326661109924316
    3. 'counter' → logprob: -3.6326661109924316
    4. ' counter' → logprob: -4.257666110992432
    5. 'count' (adapté à ' count') → logprob: -4.757666110992432
    6. '   ' → logprob: -5.007666110992432
    7. ' c' → logprob: -5.007666110992432
    8. 's' → logprob: -5.882666110992432
    9. 'counts' → logprob: -6.257666110992432
    10. ' counts' → logprob: -6.257666110992432

Token 24: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.049446508288383484
    2. '=' → logprob: -3.9244465827941895
    3. ' =' → logprob: -4.2994465827941895
    4. 'r' → logprob: -4.2994465827941895
    5. 'er' → logprob: -7.1744465827941895
    6. '(' → logprob: -7.5494465827941895
    7. '_' → logprob: -10.924446105957031
    8. '(s' → logprob: -11.174446105957031
    9. ')' → logprob: -12.424446105957031
    10. 'es' → logprob: -12.674446105957031

Token 25: ' Counter' (ID: 32251)
  Prédit: ' Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.16023214161396027
    2. 'Counter' → logprob: -1.9102321863174438
    3. '.Counter' → logprob: -12.410232543945312
    4. ' counter' → logprob: -13.285232543945312
    5. '_counter' → logprob: -14.410232543945312
    6. ' ' → logprob: -14.410232543945312
    7. ' ' → logprob: -15.285232543945312
    8. '```' → logprob: -15.410232543945312
    9. 'C' → logprob: -15.910232543945312
    10. 'counter' → logprob: -15.910232543945312

Token 26: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.03808968514204025
    2. '(' → logprob: -3.2880897521972656
    3. 's' → logprob: -10.163089752197266
    4. ' (' → logprob: -12.163089752197266
    5. '(ss' → logprob: -13.538089752197266
    6. '(
' → logprob: -13.788089752197266
    7. '()' → logprob: -14.788089752197266
    8. '(user' → logprob: -14.913089752197266
    9. '('' → logprob: -14.913089752197266
    10. '(str' → logprob: -15.788089752197266

Token 27: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.688212614681106e-05
    2. ' )' → logprob: -11.625017166137695
    3. '))' → logprob: -12.125017166137695
    4. '[' → logprob: -14.375017166137695
    5. '   ' → logprob: -14.375017166137695
    6. ' ' → logprob: -15.375017166137695
    7. ')
' → logprob: -15.625017166137695
    8. ').' → logprob: -15.625017166137695
    9. ']' → logprob: -16.125017166137695
    10. ')[' → logprob: -16.750017166137695

Token 28: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.172878384590149
    2. ' ' → logprob: -1.547878384590149
    3. ')' → logprob: -1.672878384590149
    4. '.' → logprob: -2.1728782653808594
    5. ' 
' → logprob: -2.9228782653808594
    6. '\n' → logprob: -3.9228782653808594
    7. '    
' → logprob: -4.172878265380859
    8. '   ' → logprob: -4.297878265380859
    9. '\' → logprob: -4.297878265380859
    10. ',' → logprob: -4.547878265380859

Token 29: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5475201606750488
    2. '   ' → logprob: -1.9225201606750488
    3. 'return' → logprob: -1.9225201606750488
    4. 'max' → logprob: -1.9225201606750488
    5. ' max' → logprob: -2.172520160675049
    6. ' return' → logprob: -3.047520160675049
    7. 'min' → logprob: -3.172520160675049
    8. ' min' → logprob: -3.422520160675049
    9. ' #' → logprob: -3.672520160675049
    10. 'length' → logprob: -4.172520160675049

Token 30: ' #' (ID: 1069)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6153801679611206
    2. ' return' → logprob: -1.8653801679611206
    3. 'max' → logprob: -2.49038028717041
    4. ' min' → logprob: -2.61538028717041
    5. 'return' → logprob: -3.24038028717041
    6. ' length' → logprob: -3.86538028717041
    7. ' result' → logprob: -4.11538028717041
    8. ' best' → logprob: -4.11538028717041
    9. 'min' → logprob: -4.61538028717041
    10. '   ' → logprob: -4.86538028717041

Token 31: ' Sé' (ID: 53058)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.8113061785697937
    2. 'max' → logprob: -1.9363062381744385
    3. ' length' → logprob: -2.3113062381744385
    4. ' min' → logprob: -2.8113062381744385
    5. 'min' → logprob: -3.0613062381744385
    6. 'length' → logprob: -3.1863062381744385
    7. '#' → logprob: -3.3113062381744385
    8. ' #' → logprob: -3.8113062381744385
    9. ' return' → logprob: -4.311305999755859
    10. 'return' → logprob: -4.561305999755859

Token 32: 'parer' (ID: 48041)
  Prédit: 'parer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parer' → logprob: -0.16956663131713867
    2. 'lection' → logprob: -3.0445666313171387
    3. 'quence' → logprob: -3.4195666313171387
    4. 'par' → logprob: -3.9195666313171387
    5. 'rie' → logprob: -4.294566631317139
    6. 'qu' → logprob: -4.669566631317139
    7. 'q' → logprob: -4.794566631317139
    8. 'rier' → logprob: -5.544566631317139
    9. 'quent' → logprob: -5.794566631317139
    10. 'paration' → logprob: -5.794566631317139

Token 33: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.19471661746501923
    2. 's' → logprob: -2.194716691970825
    3. 'les' → logprob: -3.944716691970825
    4. ' s' → logprob: -4.069716453552246
    5. ' the' → logprob: -5.069716453552246
    6. ' la' → logprob: -5.569716453552246
    7. ' le' → logprob: -5.694716453552246
    8. 'tokens' → logprob: -5.944716453552246
    9. ' tokens' → logprob: -6.194716453552246
    10. ' ' → logprob: -7.069716453552246

Token 34: ' lettres' (ID: 101234)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -1.0656611919403076
    2. 'm' → logprob: -2.0656611919403076
    3. ' groupes' → logprob: -2.4406611919403076
    4. ' mots' → logprob: -2.5656611919403076
    5. ' tokens' → logprob: -2.6906611919403076
    6. 'car' → logprob: -2.8156611919403076
    7. ' s' → logprob: -2.8156611919403076
    8. 'tokens' → logprob: -3.1906611919403076
    9. 's' → logprob: -4.065661430358887
    10. ' espaces' → logprob: -4.190661430358887

Token 35: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8712206482887268
    2. '(' → logprob: -1.496220588684082
    3. ' =' → logprob: -1.871220588684082
    4. ',' → logprob: -2.996220588684082
    5. 's' → logprob: -2.996220588684082
    6. ')' → logprob: -3.871220588684082
    7. '=' → logprob: -4.121220588684082
    8. ' ' → logprob: -4.121220588684082
    9. '   ' → logprob: -4.621220588684082
    10. ' (' → logprob: -4.621220588684082

Token 36: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.34979933500289917
    2. 'les' → logprob: -1.599799394607544
    3. ' chiffres' → logprob: -3.099799394607544
    4. ' digits' → logprob: -4.349799156188965
    5. ' espaces' → logprob: -4.349799156188965
    6. 'digits' → logprob: -4.849799156188965
    7. 'ch' → logprob: -5.349799156188965
    8. ' spaces' → logprob: -6.474799156188965
    9. ' ' → logprob: -6.474799156188965
    10. 'spaces' → logprob: -6.724799156188965

Token 37: ' chiffres' (ID: 105565)
  Prédit: ' chiffres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chiffres' → logprob: -0.9102506041526794
    2. ' espaces' → logprob: -1.0352506637573242
    3. 'ch' → logprob: -2.035250663757324
    4. ' digits' → logprob: -2.910250663757324
    5. ' spaces' → logprob: -3.785250663757324
    6. 'digits' → logprob: -4.785250663757324
    7. ' nombres' → logprob: -5.035250663757324
    8. 'spaces' → logprob: -5.160250663757324
    9. '```' → logprob: -5.410250663757324
    10. ' numbers' → logprob: -6.035250663757324

Token 38: ' et' (ID: 859)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.22087058424949646
    2. '   ' → logprob: -2.3458704948425293
    3. ' letters' → logprob: -2.9708704948425293
    4. '_letters' → logprob: -3.4708704948425293
    5. ',' → logprob: -4.845870494842529
    6. ' lettres' → logprob: -5.970870494842529
    7. '```' → logprob: -6.595870494842529
    8. '_' → logprob: -7.095870494842529
    9. 's' → logprob: -7.095870494842529
    10. ' letras' → logprob: -7.470870494842529

Token 39: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3458116054534912
    2. ' leurs' → logprob: -2.220811605453491
    3. ' their' → logprob: -3.845811605453491
    4. 'les' → logprob: -3.845811605453491
    5. ' calcul' → logprob: -3.845811605453491
    6. ' leur' → logprob: -4.09581184387207
    7. 'r' → logprob: -4.47081184387207
    8. 'leur' → logprob: -5.09581184387207
    9. ' ' → logprob: -5.22081184387207
    10. ' numbers' → logprob: -5.34581184387207

Token 40: ' tr' (ID: 498)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.5529181361198425
    2. ' tr' → logprob: -1.3029181957244873
    3. ' spaces' → logprob: -3.1779181957244873
    4. 'tr' → logprob: -4.302917957305908
    5. ' convertir' → logprob: -4.552917957305908
    6. ' compter' → logprob: -4.802917957305908
    7. ' chiffres' → logprob: -4.802917957305908
    8. ' retourner' → logprob: -5.302917957305908
    9. ' stock' → logprob: -5.427917957305908
    10. ' symbols' → logprob: -5.552917957305908

Token 41: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.1512274295091629
    2. 'i' → logprob: -3.5262274742126465
    3. 'ouver' → logprob: -3.5262274742126465
    4. 'ans' → logprob: -4.4012274742126465
    5. 'ait' → logprob: -4.9012274742126465
    6. 'ié' → logprob: -5.0262274742126465
    7. 'a' → logprob: -5.2762274742126465
    8. 'e' → logprob: -5.4012274742126465
    9. 'aites' → logprob: -5.4012274742126465
    10. 'ie' → logprob: -5.4012274742126465

Token 42: '
' (ID: 198)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.9614390134811401
    2. '   ' → logprob: -1.0864390134811401
    3. '_letters' → logprob: -2.2114391326904297
    4. ' letters' → logprob: -2.4614391326904297
    5. '(' → logprob: -3.7114391326904297
    6. 's' → logprob: -4.71143913269043
    7. '```' → logprob: -4.71143913269043
    8. '_' → logprob: -4.96143913269043
    9. ',' → logprob: -5.58643913269043
    10. '[' → logprob: -5.96143913269043

Token 43: '   ' (ID: 271)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.5991986989974976
    2. ' letters' → logprob: -1.7241986989974976
    3. '   ' → logprob: -1.9741986989974976
    4. '_letters' → logprob: -3.599198818206787
    5. 's' → logprob: -4.099198818206787
    6. '```' → logprob: -4.474198818206787
    7. ',' → logprob: -4.599198818206787
    8. '[' → logprob: -5.224198818206787
    9. 'sorted' → logprob: -5.224198818206787
    10. 'a' → logprob: -5.474198818206787

Token 44: ' letters' (ID: 18151)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' (adapté à ' letters') → logprob: -0.6411282420158386
    2. ' letters' → logprob: -0.7661282420158386
    3. '   ' → logprob: -5.266128063201904
    4. ' lettres' → logprob: -7.266128063201904
    5. 'chars' → logprob: -7.516128063201904
    6. '_letters' → logprob: -8.016128540039062
    7. '```' → logprob: -8.141128540039062
    8. '[' → logprob: -8.266128540039062
    9. ' letras' → logprob: -8.641128540039062
    10. 'letter' → logprob: -8.766128540039062

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1107172966003418
    2. '=' → logprob: -2.485717296600342
    3. ',' → logprob: -3.860717296600342
    4. '_' → logprob: -7.985717296600342
    5. ' ,' → logprob: -10.1107177734375
    6. 's' → logprob: -10.6107177734375
    7. '_sorted' → logprob: -10.6107177734375
    8. '_letters' → logprob: -11.3607177734375
    9. '_counts' → logprob: -11.9857177734375
    10. '_count' → logprob: -12.2357177734375

Token 46: ' sorted' (ID: 20099)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.1237077713012695
    2. ' sorted' → logprob: -1.1237077713012695
    3. '[' → logprob: -1.6237077713012695
    4. 'sorted' → logprob: -1.9987077713012695
    5. '[s' → logprob: -5.6237077713012695
    6. '[k' → logprob: -6.1237077713012695
    7. '[key' → logprob: -6.1237077713012695
    8. '[count' → logprob: -6.2487077713012695
    9. '[counter' → logprob: -6.3737077713012695
    10. '(sorted' → logprob: -6.7487077713012695

Token 47: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.010546035133302212
    2. '(c' → logprob: -5.2605462074279785
    3. '((' → logprob: -5.6355462074279785
    4. '(k' → logprob: -6.8855462074279785
    5. '(' → logprob: -8.38554573059082
    6. '(count' → logprob: -8.51054573059082
    7. '(ch' → logprob: -9.38554573059082
    8. '({' → logprob: -9.88554573059082
    9. '(char' → logprob: -10.13554573059082
    10. '([(' → logprob: -10.13554573059082

Token 48: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09084458649158478
    2. 'ch' → logprob: -2.5908446311950684
    3. '(c' → logprob: -5.215844631195068
    4. 'char' → logprob: -5.715844631195068
    5. 'k' → logprob: -6.090844631195068
    6. '(ch' → logprob: -7.215844631195068
    7. '(char' → logprob: -10.21584415435791
    8. 'x' → logprob: -10.21584415435791
    9. 'key' → logprob: -10.84084415435791
    10. '(k' → logprob: -10.84084415435791

Token 49: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.054913658648729324
    2. 'for' → logprob: -2.9299137592315674
    3. ' ' → logprob: -10.429913520812988
    4. ' f' → logprob: -14.429913520812988
    5. '   ' → logprob: -15.304913520812988
    6. 'f' → logprob: -15.554913520812988
    7. '	for' → logprob: -15.554913520812988
    8. ']' → logprob: -15.679913520812988
    9. 'or' → logprob: -15.929913520812988
    10. '  ' → logprob: -16.054914474487305

Token 50: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.7557468414306641
    2. ' s' → logprob: -1.005746841430664
    3. ' count' → logprob: -2.255746841430664
    4. 'c' → logprob: -3.630746841430664
    5. 's' → logprob: -3.880746841430664
    6. 'count' → logprob: -4.380746841430664
    7. '(count' → logprob: -11.130746841430664
    8. ' counter' → logprob: -11.255746841430664
    9. ' ' → logprob: -11.630746841430664
    10. ' in' → logprob: -11.818246841430664

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007878576405346394
    2. 's' → logprob: -5.25787878036499
    3. 'in' → logprob: -6.00787878036499
    4. ' s' → logprob: -9.382878303527832
    5. 'c' → logprob: -10.007878303527832
    6. ' ' → logprob: -11.382878303527832
    7. 'e' → logprob: -11.757878303527832
    8. '<|end|>' → logprob: -11.757878303527832
    9. ' c' → logprob: -12.132878303527832
    10. 'count' → logprob: -12.507878303527832

Token 52: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9463854432106018
    2. 's' → logprob: -1.196385383605957
    3. ' s' → logprob: -1.696385383605957
    4. ' count' → logprob: -2.071385383605957
    5. 'counter' → logprob: -10.133885383605957
    6. 'c' → logprob: -10.383885383605957
    7. ' ' → logprob: -10.571385383605957
    8. ' counter' → logprob: -11.008885383605957
    9. '(count' → logprob: -11.133885383605957
    10. '```' → logprob: -12.008885383605957

Token 53: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04631233215332031
    2. 'if' → logprob: -3.1713123321533203
    3. '.keys' → logprob: -5.92131233215332
    4. '.elements' → logprob: -8.54631233215332
    5. ' ' → logprob: -8.67131233215332
    6. 'c' → logprob: -9.42131233215332
    7. 'elements' → logprob: -9.42131233215332
    8. '.items' → logprob: -11.04631233215332
    9. 'in' → logprob: -11.04631233215332
    10. ' in' → logprob: -11.17131233215332

Token 54: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.056114453822374344
    2. 'c' → logprob: -2.931114435195923
    3. ' not' → logprob: -6.931114673614502
    4. ' isinstance' → logprob: -8.681114196777344
    5. ' ' → logprob: -10.306114196777344
    6. 'not' → logprob: -10.556114196777344
    7. ' '' → logprob: -11.306114196777344
    8. ''' → logprob: -12.556114196777344
    9. 'count' → logprob: -13.431114196777344
    10. ' ' → logprob: -13.681114196777344

Token 55: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.03730146586894989
    2. '.' → logprob: -3.912301540374756
    3. ' c' → logprob: -4.912301540374756
    4. 'is' → logprob: -4.912301540374756
    5. 'c' → logprob: -6.912301540374756
    6. ' .' → logprob: -7.287301540374756
    7. '.c' → logprob: -9.537301063537598
    8. 'isdigit' → logprob: -9.537301063537598
    9. ' is' → logprob: -10.787301063537598
    10. ' not' → logprob: -11.287301063537598

Token 56: 'alpha' (ID: 15453)
  Prédit: 'alpha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -1.2664456789934775e-06
    2. 'al' → logprob: -14.250000953674316
    3. 'digit' → logprob: -15.500000953674316
    4. ' alpha' → logprob: -15.875000953674316
    5. '_alpha' → logprob: -15.875000953674316
    6. 'a' → logprob: -16.375001907348633
    7. '-alpha' → logprob: -18.000001907348633
    8. 'letter' → logprob: -18.375001907348633
    9. '.alpha' → logprob: -18.750001907348633
    10. 'lower' → logprob: -19.250001907348633

Token 57: '()])
' (ID: 141457)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003386806638445705
    2. '])' → logprob: -9.000338554382324
    3. '()]' → logprob: -9.375338554382324
    4. '())' → logprob: -9.500338554382324
    5. '()],' → logprob: -11.000338554382324
    6. '()])
' → logprob: -11.250338554382324
    7. '(' → logprob: -11.375338554382324
    8. 'c' → logprob: -12.000338554382324
    9. ')])' → logprob: -13.000338554382324
    10. '()][' → logprob: -13.375338554382324

Token 58: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07512719184160233
    2. '   ' → logprob: -2.825127124786377
    3. 'digits' → logprob: -5.200127124786377
    4. ',' → logprob: -6.200127124786377
    5. 'numbers' → logprob: -6.825127124786377
    6. '()' → logprob: -7.325127124786377
    7. 'letters' → logprob: -7.450127124786377
    8. ')
' → logprob: -7.575127124786377
    9. ' )' → logprob: -7.700127124786377
    10. ' digits' → logprob: -7.825127124786377

Token 59: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' (adapté à ' digits') → logprob: -0.2272823005914688
    2. ' digits' → logprob: -1.9772822856903076
    3. 'numbers' → logprob: -3.3522822856903076
    4. '   ' → logprob: -3.9772822856903076
    5. ')' → logprob: -5.102282524108887
    6. ' numbers' → logprob: -5.852282524108887
    7. '    
' → logprob: -7.852282524108887
    8. 'nums' → logprob: -8.477282524108887
    9. 'd' → logprob: -8.602282524108887
    10. '#' → logprob: -8.852282524108887

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026301926001906395
    2. '=' → logprob: -3.651301860809326
    3. ' ' → logprob: -14.526302337646484
    4. ')' → logprob: -14.526302337646484
    5. ']' → logprob: -15.526302337646484
    6. ' =[' → logprob: -15.776302337646484
    7. '=[]' → logprob: -16.026302337646484
    8. ' =)' → logprob: -16.651302337646484
    9. 'sorted' → logprob: -16.901302337646484
    10. '[' → logprob: -17.526302337646484

Token 61: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.0890805795788765
    2. 'sorted' → logprob: -2.464080572128296
    3. '[' → logprob: -9.964080810546875
    4. ' [' → logprob: -10.214080810546875
    5. '(sorted' → logprob: -10.839080810546875
    6. '   ' → logprob: -11.339080810546875
    7. ' ' → logprob: -11.589080810546875
    8. '.sorted' → logprob: -11.964080810546875
    9. '[s' → logprob: -12.589080810546875
    10. '  ' → logprob: -13.339080810546875

Token 62: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -1.4617256056226324e-05
    2. '(' → logprob: -11.625014305114746
    3. '(c' → logprob: -12.375014305114746
    4. '[' → logprob: -14.875014305114746
    5. '([(' → logprob: -14.875014305114746
    6. '((' → logprob: -15.000014305114746
    7. '[c' → logprob: -15.625014305114746
    8. '({' → logprob: -17.125015258789062
    9. '(([' → logprob: -17.125015258789062
    10. ' ([' → logprob: -17.750015258789062

Token 63: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0012709470465779305
    2. ' c' → logprob: -6.751270771026611
    3. '(c' → logprob: -9.37627124786377
    4. '   ' → logprob: -12.00127124786377
    5. 'd' → logprob: -12.25127124786377
    6. ')c' → logprob: -13.25127124786377
    7. ' ' → logprob: -14.25127124786377
    8. 'int' → logprob: -14.25127124786377
    9. 'str' → logprob: -14.25127124786377
    10. '	c' → logprob: -14.50127124786377

Token 64: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.003626320045441389
    2. 'for' → logprob: -5.628626346588135
    3. ' ' → logprob: -10.628625869750977
    4. 'd' → logprob: -14.503625869750977
    5. 'c' → logprob: -14.878625869750977
    6. ' c' → logprob: -15.003625869750977
    7. '(c' → logprob: -15.128625869750977
    8. ')' → logprob: -15.378625869750977
    9. '   ' → logprob: -15.878625869750977
    10. ' d' → logprob: -16.253625869750977

Token 65: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14780586957931519
    2. 'count' → logprob: -2.39780592918396
    3. ' c' → logprob: -3.27280592918396
    4. ' count' → logprob: -4.772805690765381
    5. ' ' → logprob: -9.897806167602539
    6. 'd' → logprob: -10.147806167602539
    7. '  ' → logprob: -12.397806167602539
    8. '   ' → logprob: -12.522806167602539
    9. ' in' → logprob: -12.647806167602539
    10. 'e' → logprob: -12.647806167602539

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03263375908136368
    2. 'in' → logprob: -3.5326337814331055
    3. 'is' → logprob: -7.0326337814331055
    4. ' ' → logprob: -7.5326337814331055
    5. 'count' → logprob: -7.6576337814331055
    6. 'for' → logprob: -8.782633781433105
    7. 'isdigit' → logprob: -8.782633781433105
    8. 'if' → logprob: -8.907633781433105
    9. ' for' → logprob: -9.407633781433105
    10. 's' → logprob: -9.657633781433105

Token 67: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.10182490944862366
    2. ' count' → logprob: -2.351824998855591
    3. 'c' → logprob: -6.476824760437012
    4. ' c' → logprob: -10.226824760437012
    5. ' ' → logprob: -10.726824760437012
    6. '[count' → logprob: -11.976824760437012
    7. '(count' → logprob: -12.601824760437012
    8. 'ount' → logprob: -13.101824760437012
    9. '	count' → logprob: -13.351824760437012
    10. '   ' → logprob: -13.476824760437012

Token 68: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0032029079739004374
    2. 'if' → logprob: -5.75320291519165
    3. '   ' → logprob: -12.253202438354492
    4. ' ' → logprob: -12.378202438354492
    5. '()' → logprob: -12.503202438354492
    6. ' for' → logprob: -12.628202438354492
    7. ' in' → logprob: -13.128202438354492
    8. 's' → logprob: -13.253202438354492
    9. 'f' → logprob: -13.753202438354492
    10. 'd' → logprob: -13.878202438354492

Token 69: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.08897753059864044
    2. 'c' → logprob: -2.463977575302124
    3. 'isdigit' → logprob: -10.463977813720703
    4. ')c' → logprob: -13.088977813720703
    5. ' ' → logprob: -13.213977813720703
    6. '.c' → logprob: -13.463977813720703
    7. '	c' → logprob: -13.963977813720703
    8. '   ' → logprob: -14.088977813720703
    9. '.' → logprob: -14.713977813720703
    10. '  ' → logprob: -15.088977813720703

Token 70: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0005197895807214081
    2. '.' → logprob: -7.625519752502441
    3. 'isdigit' → logprob: -10.625519752502441
    4. '().' → logprob: -12.125519752502441
    5. ' .' → logprob: -13.250519752502441
    6. '.Is' → logprob: -16.125520706176758
    7. ' is' → logprob: -17.125520706176758
    8. 'is' → logprob: -17.375520706176758
    9. 's' → logprob: -17.500520706176758
    10. ').' → logprob: -17.875520706176758

Token 71: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.0003930192324332893
    2. 'd' → logprob: -8.62539291381836
    3. 'alpha' → logprob: -9.12539291381836
    4. 'igit' → logprob: -9.62539291381836
    5. 'al' → logprob: -10.75039291381836
    6. 'digital' → logprob: -12.75039291381836
    7. 'a' → logprob: -13.00039291381836
    8. 'isdigit' → logprob: -13.00039291381836
    9. '_digit' → logprob: -13.50039291381836
    10. 'numeric' → logprob: -13.50039291381836

Token 72: '()])
' (ID: 141457)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01450406014919281
    2. '])' → logprob: -4.2645039558410645
    3. '()]' → logprob: -9.139504432678223
    4. '()])
' → logprob: -9.389504432678223
    5. ')])' → logprob: -9.764504432678223
    6. ']' → logprob: -10.264504432678223
    7. '())' → logprob: -10.514504432678223
    8. '(' → logprob: -11.139504432678223
    9. '()],' → logprob: -12.139504432678223
    10. '"])' → logprob: -13.139504432678223

Token 73: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.504885733127594
    2. '   ' → logprob: -1.2548856735229492
    3. ')' → logprob: -3.129885673522949
    4. '
' → logprob: -3.379885673522949
    5. '    ' → logprob: -4.379885673522949
    6. 'n' → logprob: -5.379885673522949
    7. ' 
' → logprob: -5.879885673522949
    8. '  
' → logprob: -6.004885673522949
    9. '   
' → logprob: -6.129885673522949
    10. '<|end|>' → logprob: -6.254885673522949

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048070214688777924
    2. '    
' → logprob: -3.173070192337036
    3. ')' → logprob: -6.548070430755615
    4. 'result' → logprob: -6.673070430755615
    5. '    ' → logprob: -6.923070430755615
    6. '
' → logprob: -8.423069953918457
    7. 'min' → logprob: -8.673069953918457
    8. '#' → logprob: -9.173069953918457
    9. ' result' → logprob: -9.173069953918457
    10. 'length' → logprob: -9.298069953918457

Token 75: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7231647968292236
    2. '   ' → logprob: -1.7231647968292236
    3. 'result' → logprob: -2.3481647968292236
    4. 'min' → logprob: -2.4731647968292236
    5. 'return' → logprob: -3.5981647968292236
    6. ' #' → logprob: -4.0981645584106445
    7. ' min' → logprob: -4.2231645584106445
    8. 'best' → logprob: -4.2231645584106445
    9. 'length' → logprob: -4.2231645584106445
    10. 'if' → logprob: -4.7231645584106445

Token 76: ' Fonction' (ID: 189149)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.4498205184936523
    2. 'result' → logprob: -1.5748205184936523
    3. ' min' → logprob: -2.4498205184936523
    4. '#' → logprob: -2.4498205184936523
    5. 'min' → logprob: -2.9498205184936523
    6. ' length' → logprob: -3.0748205184936523
    7. ' res' → logprob: -3.3248205184936523
    8. ' #' → logprob: -3.3248205184936523
    9. ' best' → logprob: -3.4498205184936523
    10. ' compressed' → logprob: -3.5748205184936523

Token 77: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23883017897605896
    2. ' def' → logprob: -1.8638302087783813
    3. ' min' → logprob: -3.488830089569092
    4. ' calculate' → logprob: -4.613830089569092
    5. ' de' → logprob: -5.238830089569092
    6. '   ' → logprob: -5.363830089569092
    7. 'min' → logprob: -6.238830089569092
    8. ' return' → logprob: -7.113830089569092
    9. 'calculate' → logprob: -7.363830089569092
    10. ' compress' → logprob: -7.613830089569092

Token 78: ' trouver' (ID: 23195)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.566713273525238
    2. 'calcul' → logprob: -1.8167133331298828
    3. ' comp' → logprob: -2.066713333129883
    4. 'comp' → logprob: -2.191713333129883
    5. 'cal' → logprob: -4.566713333129883
    6. 'compress' → logprob: -5.691713333129883
    7. ' construire' → logprob: -6.816713333129883
    8. ' calc' → logprob: -6.816713333129883
    9. ' calcular' → logprob: -6.816713333129883
    10. ' compr' → logprob: -6.941713333129883

Token 79: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.19014641642570496
    2. ' le' → logprob: -1.9401464462280273
    3. 'le' → logprob: -4.565146446228027
    4. 'la' → logprob: -5.065146446228027
    5. ' l' → logprob: -5.565146446228027
    6. ' the' → logprob: -6.190146446228027
    7. 'the' → logprob: -6.440146446228027
    8. '_le' → logprob: -6.690146446228027
    9. 'l' → logprob: -7.690146446228027
    10. ' ' → logprob: -7.815146446228027

Token 80: ' interv' (ID: 37413)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.3394317626953125
    2. ' plus' → logprob: -2.2144317626953125
    3. 'group' → logprob: -2.2144317626953125
    4. ' groupes' → logprob: -2.7144317626953125
    5. 's' → logprob: -3.2144317626953125
    6. ' group' → logprob: -3.7144317626953125
    7. ' sequences' → logprob: -3.7144317626953125
    8. 'me' → logprob: -3.7144317626953125
    9. 'indices' → logprob: -4.2144317626953125
    10. 'ranges' → logprob: -4.3394317626953125

Token 81: 'alles' (ID: 28825)
  Prédit: 'alles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alles' → logprob: -0.054363515228033066
    2. 'al' → logprob: -3.679363489151001
    3. 'als' → logprob: -4.05436372756958
    4. 'ales' → logprob: -5.67936372756958
    5. 'a' → logprob: -5.92936372756958
    6. 'aux' → logprob: -7.49186372756958
    7. '```' → logprob: -7.74186372756958
    8. '`' → logprob: -7.80436372756958
    9. 'alls' → logprob: -8.304363250732422
    10. 'alle' → logprob: -8.554363250732422

Token 82: ' cont' (ID: 836)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08302252739667892
    2. ' def' → logprob: -3.2080225944519043
    3. '(' → logprob: -3.9580225944519043
    4. ' (' → logprob: -5.208022594451904
    5. '(s' → logprob: -6.083022594451904
    6. ' des' → logprob: -6.208022594451904
    7. 's' → logprob: -6.583022594451904
    8. ':' → logprob: -6.833022594451904
    9. '_between' → logprob: -6.833022594451904
    10. '```' → logprob: -7.083022594451904

Token 83: 'igus' (ID: 79914)
  Prédit: 'igus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igus' → logprob: -0.30568861961364746
    2. 'inus' → logprob: -1.8056886196136475
    3. 'inu' → logprob: -2.6806886196136475
    4. 'in' → logprob: -3.8056886196136475
    5. 'enus' → logprob: -5.055688858032227
    6. 'igu' → logprob: -7.555688858032227
    7. 'inue' → logprob: -7.680688858032227
    8. 'nus' → logprob: -8.305688858032227
    9. '(in' → logprob: -9.180688858032227
    10. 'iguous' → logprob: -9.430688858032227

Token 84: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04474726691842079
    2. ' def' → logprob: -4.169747352600098
    3. '(' → logprob: -4.919747352600098
    4. '   ' → logprob: -5.544747352600098
    5. ' (' → logprob: -5.669747352600098
    6. '(s' → logprob: -5.794747352600098
    7. ':' → logprob: -6.169747352600098
    8. 's' → logprob: -6.544747352600098
    9. '```' → logprob: -7.044747352600098
    10. '(lines' → logprob: -7.544747352600098

Token 85: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.24294917285442352
    2. ' une' → logprob: -2.2429492473602295
    3. 'la' → logprob: -3.2429492473602295
    4. 'les' → logprob: -3.9929492473602295
    5. 'lst' → logprob: -4.24294900894165
    6. ' la' → logprob: -5.11794900894165
    7. 'un' → logprob: -5.11794900894165
    8. 'liste' → logprob: -5.61794900894165
    9. ' lst' → logprob: -5.86794900894165
    10. 'sorted' → logprob: -6.36794900894165

Token 86: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.6818675398826599
    2. ' liste' → logprob: -0.9318675398826599
    3. ' sequence' → logprob: -3.5568675994873047
    4. 'sequence' → logprob: -3.9318675994873047
    5. 'list' → logprob: -4.056867599487305
    6. 'sorted' → logprob: -4.556867599487305
    7. ' list' → logprob: -4.806867599487305
    8. ' sorted' → logprob: -5.181867599487305
    9. 'lst' → logprob: -6.306867599487305
    10. 'chaine' → logprob: -6.806867599487305

Token 87: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.046726640313863754
    2. ' def' → logprob: -3.296726703643799
    3. '
' → logprob: -4.796726703643799
    4. '```' → logprob: -8.92172622680664
    5. '   ' → logprob: -10.04672622680664
    6. ':' → logprob: -10.29672622680664
    7. ':def' → logprob: -10.67172622680664
    8. '(def' → logprob: -10.92172622680664
    9. '(' → logprob: -11.17172622680664
    10. ' (' → logprob: -11.42172622680664

Token 88: ' caractères' (ID: 183106)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.35634106397628784
    2. 'n' → logprob: -1.7313411235809326
    3. 'ent' → logprob: -3.4813411235809326
    4. 'indices' → logprob: -4.3563408851623535
    5. 'nombre' → logprob: -4.4813408851623535
    6. 'nums' → logprob: -4.9813408851623535
    7. 'ints' → logprob: -5.1063408851623535
    8. 'élé' → logprob: -5.2313408851623535
    9. 'numbers' → logprob: -5.3563408851623535
    10. 'positions' → logprob: -5.3563408851623535

Token 89: ' ord' (ID: 6608)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04016998037695885
    2. ' def' → logprob: -3.4151699542999268
    3. '
' → logprob: -5.540170192718506
    4. ':' → logprob: -6.540170192718506
    5. ':def' → logprob: -7.040170192718506
    6. '```' → logprob: -9.790169715881348
    7. '   ' → logprob: -10.165169715881348
    8. ':
' → logprob: -10.165169715881348
    9. 'de' → logprob: -10.290169715881348
    10. '(def' → logprob: -11.540169715881348

Token 90: 'onn' (ID: 9525)
  Prédit: 'onn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onn' → logprob: -0.7504479885101318
    2. 'onnées' → logprob: -1.0004479885101318
    3. 'onnée' → logprob: -2.125447988510132
    4. 'onné' → logprob: -3.250447988510132
    5. 'on' → logprob: -6.875448226928711
    6. 'in' → logprob: -7.250448226928711
    7. 'iné' → logprob: -9.625448226928711
    8. 'onnance' → logprob: -10.375448226928711
    9. 'inaire' → logprob: -10.750448226928711
    10. '```' → logprob: -10.750448226928711

Token 91: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.04806680604815483
    2. 'ées' → logprob: -3.4230668544769287
    3. 'ée' → logprob: -4.29806661605835
    4. 'es' → logprob: -8.173067092895508
    5. 'é' → logprob: -9.173067092895508
    6. 'nées' → logprob: -9.423067092895508
    7. 'onnée' → logprob: -9.923067092895508
    8. 'ed' → logprob: -10.173067092895508
    9. 'nés' → logprob: -10.173067092895508
    10. 'née' → logprob: -10.798067092895508

Token 92: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02484511211514473
    2. ':' → logprob: -4.274845123291016
    3. ' def' → logprob: -5.399845123291016
    4. '
' → logprob: -5.899845123291016
    5. ':def' → logprob: -6.524845123291016
    6. ':
' → logprob: -6.774845123291016
    7. '\' → logprob: -8.899845123291016
    8. '(' → logprob: -9.399845123291016
    9. '```' → logprob: -9.649845123291016
    10. ' :' → logprob: -9.649845123291016

Token 93: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08936820179224014
    2. '
' → logprob: -2.7143681049346924
    3. ' def' → logprob: -4.3393683433532715
    4. '   ' → logprob: -5.7143683433532715
    5. '```' → logprob: -6.8393683433532715
    6. ':' → logprob: -7.3393683433532715
    7. '    
' → logprob: -7.8393683433532715
    8. ':def' → logprob: -7.9643683433532715
    9. '  
' → logprob: -8.964367866516113
    10. '\n' → logprob: -9.589367866516113

Token 94: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47583046555519104
    2. ' def' → logprob: -0.9758304357528687
    3. '
' → logprob: -6.475830554962158
    4. ' 
' → logprob: -9.350830078125
    5. '   ' → logprob: -9.975830078125
    6. '```' → logprob: -10.225830078125
    7. '    
' → logprob: -10.975830078125
    8. '  
' → logprob: -12.350830078125
    9. ' déf' → logprob: -12.600830078125
    10. 'de' → logprob: -12.725830078125

Token 95: ' par' (ID: 686)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.28759047389030457
    2. 'def' → logprob: -1.412590503692627
    3. '   ' → logprob: -5.162590503692627
    4. '
' → logprob: -7.537590503692627
    5. '    ' → logprob: -9.537590026855469
    6. '```' → logprob: -10.537590026855469
    7. '    
' → logprob: -10.662590026855469
    8. ' 
' → logprob: -11.037590026855469
    9. ')' → logprob: -12.725090026855469
    10. ' déf' → logprob: -13.037590026855469

Token 96: ' rapport' (ID: 20847)
  Prédit: 'leur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leur' → logprob: -2.0499813556671143
    2. ' leur' → logprob: -2.1749813556671143
    3. 'index' → logprob: -3.4249813556671143
    4. 'ranges' → logprob: -3.4249813556671143
    5. 'indices' → logprob: -3.5499813556671143
    6. ' group' → logprob: -3.5499813556671143
    7. 'def' → logprob: -3.6749813556671143
    8. 'leurs' → logprob: -3.6749813556671143
    9. ' def' → logprob: -3.6749813556671143
    10. ' leurs' → logprob: -3.7999813556671143

Token 97: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.06594837456941605
    2. ' au' → logprob: -3.815948486328125
    3. ' ' → logprob: -4.190948486328125
    4. 'à' → logprob: -4.190948486328125
    5. 'au' → logprob: -5.315948486328125
    6. ' aux' → logprob: -6.315948486328125
    7. ' a' → logprob: -6.690948486328125
    8. '  ' → logprob: -7.065948486328125
    9. ' to' → logprob: -7.190948486328125
    10. 'a' → logprob: -7.315948486328125

Token 98: ' leur' (ID: 9853)
  Prédit: ' leur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leur' → logprob: -0.7629444599151611
    2. 'leur' → logprob: -1.1379444599151611
    3. ' their' → logprob: -2.512944459915161
    4. 'ord' → logprob: -3.512944459915161
    5. ' ord' → logprob: -3.512944459915161
    6. 'leurs' → logprob: -3.762944459915161
    7. ' leurs' → logprob: -3.887944459915161
    8. 'their' → logprob: -4.262944221496582
    9. ' l' → logprob: -5.262944221496582
    10. 'l' → logprob: -6.012944221496582

Token 99: ' code' (ID: 3490)
  Prédit: ' code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.47610726952552795
    2. ' ord' → logprob: -1.2261072397232056
    3. 'ord' → logprob: -2.976107358932495
    4. 'code' → logprob: -4.726107120513916
    5. ' valeur' → logprob: -5.351107120513916
    6. ' ordinal' → logprob: -5.351107120513916
    7. 'ordinal' → logprob: -5.601107120513916
    8. ' codes' → logprob: -6.101107120513916
    9. 'ordre' → logprob: -6.351107120513916
    10. ' ordre' → logprob: -6.351107120513916

Token 100: ' ASCII' (ID: 87479)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0572606697678566
    2. ' points' → logprob: -3.682260751724243
    3. 'point' → logprob: -4.057260513305664
    4. '_points' → logprob: -4.557260513305664
    5. ' point' → logprob: -7.057260513305664
    6. 's' → logprob: -7.307260513305664
    7. '_point' → logprob: -7.307260513305664
    8. 'oints' → logprob: -8.307260513305664
    9. 'c' → logprob: -10.307260513305664
    10. 'pont' → logprob: -10.307260513305664

Token 101: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11190275847911835
    2. '
' → logprob: -2.3619027137756348
    3. ' def' → logprob: -4.611902713775635
    4. '   ' → logprob: -6.986902713775635
    5. ':' → logprob: -8.861903190612793
    6. ')' → logprob: -9.111903190612793
    7. '```' → logprob: -9.236903190612793
    8. ':def' → logprob: -9.236903190612793
    9. ')
' → logprob: -9.861903190612793
    10. '    
' → logprob: -9.986903190612793

Token 102: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12934476137161255
    2. '   ' → logprob: -2.3793447017669678
    3. ' def' → logprob: -3.8793447017669678
    4. '
' → logprob: -4.879344940185547
    5. ')' → logprob: -8.754344940185547
    6. '    
' → logprob: -9.129344940185547
    7. '  
' → logprob: -10.379344940185547
    8. ' 
' → logprob: -10.379344940185547
    9. ' ' → logprob: -10.629344940185547
    10. '```' → logprob: -10.754344940185547

Token 103: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06995655596256256
    2. ' def' → logprob: -2.8199565410614014
    3. '   ' → logprob: -5.3199567794799805
    4. '
' → logprob: -5.8199567794799805
    5. '    
' → logprob: -9.56995677947998
    6. ' 
' → logprob: -11.69495677947998
    7. '```' → logprob: -12.56995677947998
    8. 'ranges' → logprob: -13.19495677947998
    9. ' intervals' → logprob: -13.31995677947998
    10. '  
' → logprob: -13.69495677947998

Token 104: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.02482883632183075
    2. 'find' → logprob: -3.7748289108276367
    3. ' intervals' → logprob: -7.024828910827637
    4. ' get' → logprob: -7.774828910827637
    5. 'get' → logprob: -9.524828910827637
    6. 'interval' → logprob: -10.024828910827637
    7. ' ranges' → logprob: -10.399828910827637
    8. '	find' → logprob: -10.774828910827637
    9. ' contiguous' → logprob: -10.774828910827637
    10. 'ranges' → logprob: -10.899828910827637

Token 105: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.984703779220581
    2. '_cont' → logprob: -1.109703779220581
    3. '_ranges' → logprob: -1.234703779220581
    4. '_sequences' → logprob: -5.73470401763916
    5. '_con' → logprob: -6.98470401763916
    6. '_' → logprob: -6.98470401763916
    7. '_runs' → logprob: -7.60970401763916
    8. '_missing' → logprob: -9.85970401763916
    9. '_in' → logprob: -10.35970401763916
    10. '_sub' → logprob: -10.60970401763916

Token 106: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.10123763978481293
    2. 'val' → logprob: -2.3512375354766846
    3. 'vel' → logprob: -8.601237297058105
    4. '```' → logprob: -8.976237297058105
    5. ' vals' → logprob: -9.601237297058105
    6. 'v' → logprob: -9.851237297058105
    7. 'valid' → logprob: -9.913737297058105
    8. 'r' → logprob: -9.913737297058105
    9. 't' → logprob: -10.038737297058105
    10. '_val' → logprob: -10.288737297058105

Token 107: '(chars' (ID: 168140)
  Prédit: '(chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chars' → logprob: -0.07451773434877396
    2. '(lst' → logprob: -2.8245177268981934
    3. '(arr' → logprob: -4.824517726898193
    4. '(char' → logprob: -6.074517726898193
    5. '(nums' → logprob: -7.074517726898193
    6. '(l' → logprob: -7.449517726898193
    7. '(seq' → logprob: -8.324518203735352
    8. '(' → logprob: -9.074518203735352
    9. '(c' → logprob: -9.199518203735352
    10. '(ls' → logprob: -9.699518203735352

Token 108: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022521954961121082
    2. '):
' → logprob: -6.127252101898193
    3. ')' → logprob: -10.752252578735352
    4. '   ' → logprob: -11.002252578735352
    5. ' ):' → logprob: -11.002252578735352
    6. '):
' → logprob: -11.752252578735352
    7. ',' → logprob: -12.877252578735352
    8. ':' → logprob: -13.752252578735352
    9. ' ' → logprob: -15.752252578735352
    10. '):

' → logprob: -16.25225257873535

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38739240169525146
    2. '   ' → logprob: -1.7623924016952515
    3. ':' → logprob: -2.137392520904541
    4. '    ' → logprob: -4.012392520904541
    5. '):' → logprob: -5.512392520904541
    6. ' :' → logprob: -5.637392520904541
    7. ' ' → logprob: -6.512392520904541
    8. ')' → logprob: -6.637392520904541
    9. '(' → logprob: -7.637392520904541
    10. ',' → logprob: -7.887392520904541

Token 110: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.20074111223220825
    2. 'interval' → logprob: -2.5757410526275635
    3. ' if' → logprob: -2.8257410526275635
    4. '       ' → logprob: -3.2007410526275635
    5. 'if' → logprob: -5.700741291046143
    6. '   ' → logprob: -6.075741291046143
    7. 'ranges' → logprob: -9.950740814208984
    8. ' ranges' → logprob: -10.200740814208984
    9. ' result' → logprob: -11.575740814208984
    10. ' interval' → logprob: -11.700740814208984

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007267494685947895
    2. '=' → logprob: -5.007267475128174
    3. '   ' → logprob: -7.882267475128174
    4. '=[]' → logprob: -9.007267951965332
    5. '    ' → logprob: -11.882267951965332
    6. ' ' → logprob: -12.007267951965332
    7. '=[]
' → logprob: -12.007267951965332
    8. '(' → logprob: -12.007267951965332
    9. '       ' → logprob: -12.132267951965332
    10. ')' → logprob: -12.382267951965332

Token 112: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04947373643517494
    2. '[]
' → logprob: -3.049473762512207
    3. ' []' → logprob: -7.424473762512207
    4. ' []
' → logprob: -8.174473762512207
    5. '[' → logprob: -12.299473762512207
    6. '[]

' → logprob: -13.924473762512207
    7. ' ' → logprob: -14.174473762512207
    8. ' []
' → logprob: -14.799473762512207
    9. '   ' → logprob: -14.799473762512207
    10. '[]"' → logprob: -15.424473762512207

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10434683412313461
    2. '   ' → logprob: -2.479346752166748
    3. ' if' → logprob: -4.979346752166748
    4. ' =' → logprob: -6.104346752166748
    5. ',' → logprob: -6.479346752166748
    6. '    ' → logprob: -6.479346752166748
    7. '        
' → logprob: -7.354346752166748
    8. 'if' → logprob: -7.604346752166748
    9. '=' → logprob: -7.854346752166748
    10. '    
' → logprob: -8.229347229003906

Token 114: ' if' (ID: 538)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.9710589647293091
    2. 'if' (adapté à ' if') → logprob: -1.471058964729309
    3. ' if' → logprob: -1.471058964729309
    4. ' start' → logprob: -1.846058964729309
    5. '       ' → logprob: -5.5960588455200195
    6. '   ' → logprob: -8.34605884552002
    7. 'i' → logprob: -10.22105884552002
    8. 'current' → logprob: -10.59605884552002
    9. ' current' → logprob: -10.72105884552002
    10. ' i' → logprob: -11.09605884552002

Token 115: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07015961408615112
    2. 'not' → logprob: -2.695159673690796
    3. ' chars' → logprob: -9.070159912109375
    4. 'chars' → logprob: -9.445159912109375
    5. ' len' → logprob: -10.945159912109375
    6. 'len' → logprob: -12.195159912109375
    7. ' ' → logprob: -13.570159912109375
    8. '	not' → logprob: -13.570159912109375
    9. '   ' → logprob: -14.632659912109375
    10. 'n't' → logprob: -14.695159912109375

Token 116: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.5759637951850891
    2. ' chars' → logprob: -0.8259637951850891
    3. '(chars' → logprob: -10.825963973999023
    4. 'Chars' → logprob: -13.200963973999023
    5. '_chars' → logprob: -13.325963973999023
    6. 'char' → logprob: -14.825963973999023
    7. ' ' → logprob: -15.200963973999023
    8. '   ' → logprob: -15.825963973999023
    9. 's' → logprob: -16.825963973999023
    10. 'characters' → logprob: -17.325963973999023

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02979607880115509
    2. ':
' → logprob: -3.6547961235046387
    3. ':return' → logprob: -6.029796123504639
    4. ' :' → logprob: -6.904796123504639
    5. '):' → logprob: -10.27979564666748
    6. ' :
' → logprob: -10.77979564666748
    7. '):
' → logprob: -11.40479564666748
    8. ')' → logprob: -12.52979564666748
    9. 'return' → logprob: -13.15479564666748
    10. '   ' → logprob: -13.27979564666748

Token 118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08798767626285553
    2. ' return' → logprob: -3.4629876613616943
    3. '       ' → logprob: -3.9629876613616943
    4. 'return' → logprob: -4.337987899780273
    5. ':' → logprob: -4.587987899780273
    6. ':
' → logprob: -4.962987899780273
    7. '
' → logprob: -6.212987899780273
    8. ':return' → logprob: -7.087987899780273
    9. '   ' → logprob: -7.587987899780273
    10. ',' → logprob: -9.962987899780273

Token 119: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2534348964691162
    2. 'return' (adapté à ' return') → logprob: -1.5034348964691162
    3. '       ' → logprob: -6.628435134887695
    4. '           ' → logprob: -9.503435134887695
    5. '   ' → logprob: -10.253435134887695
    6. '    ' → logprob: -10.503435134887695
    7. '
' → logprob: -10.878435134887695
    8. '        ' → logprob: -11.628435134887695
    9. ' ' → logprob: -12.503435134887695
    10. ' 
' → logprob: -12.753435134887695

Token 120: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.13247177004814148
    2. ' intervals' → logprob: -2.132471799850464
    3. '[]' → logprob: -5.382471561431885
    4. '[]
' → logprob: -7.507471561431885
    5. ' []' → logprob: -8.257472038269043
    6. ' []
' → logprob: -9.882472038269043
    7. ' ' → logprob: -10.757472038269043
    8. '[]

' → logprob: -11.007472038269043
    9. 'None' → logprob: -11.882472038269043
    10. '   ' → logprob: -12.007472038269043

Token 121: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021050482988357544
    2. '       ' → logprob: -4.521050453186035
    3. '        
' → logprob: -5.646050453186035
    4. '
' → logprob: -6.396050453186035
    5. '    
' → logprob: -6.521050453186035
    6. '\n' → logprob: -6.646050453186035
    7. ' 
' → logprob: -7.396050453186035
    8. '   ' → logprob: -8.146050453186035
    9. '	
' → logprob: -8.396050453186035
    10. '
        
' → logprob: -8.646050453186035

Token 122: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3298659324645996
    2. '       ' → logprob: -1.9548659324645996
    3. '    
' → logprob: -2.8298659324645996
    4. '        
' → logprob: -2.9548659324645996
    5. '   ' → logprob: -4.2048659324646
    6. ' 
' → logprob: -5.2048659324646
    7. '\n' → logprob: -6.3298659324646
    8. '    ' → logprob: -6.9548659324646
    9. '     
' → logprob: -7.0798659324646
    10. '   
' → logprob: -7.2048659324646

Token 123: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.10581879317760468
    2. 'start' (adapté à ' start') → logprob: -2.355818748474121
    3. ' current' → logprob: -5.980818748474121
    4. '       ' → logprob: -6.230818748474121
    5. ' prev' → logprob: -7.855818748474121
    6. '   ' → logprob: -8.230818748474121
    7. 'current' → logprob: -8.480818748474121
    8. 'prev' → logprob: -9.105818748474121
    9. '        
' → logprob: -9.855818748474121
    10. '
' → logprob: -11.355818748474121

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3138585686683655
    2. '=' → logprob: -1.3138585090637207
    3. ',' → logprob: -7.438858509063721
    4. '_char' → logprob: -12.938858985900879
    5. '=int' → logprob: -14.188858985900879
    6. '_idx' → logprob: -14.188858985900879
    7. ',char' → logprob: -14.438858985900879
    8. ' ,' → logprob: -14.438858985900879
    9. '=index' → logprob: -14.688858985900879
    10. '_index' → logprob: -14.813858985900879

Token 125: ' prev' (ID: 10258)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.07589787244796753
    2. 'ord' → logprob: -2.8258979320526123
    3. ' chars' → logprob: -4.825897693634033
    4. ' ord' → logprob: -5.325897693634033
    5. 'ords' → logprob: -7.075897693634033
    6. '   ' → logprob: -10.950898170471191
    7. '(chars' → logprob: -11.075898170471191
    8. '0' → logprob: -11.200898170471191
    9. 'chr' → logprob: -11.325898170471191
    10. 'char' → logprob: -11.575898170471191

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1925501674413681
    2. '=' → logprob: -1.8175501823425293
    3. '_chars' → logprob: -4.442550182342529
    4. '(chars' → logprob: -7.942550182342529
    5. 'chars' → logprob: -8.442549705505371
    6. ' chars' → logprob: -8.817549705505371
    7. '_char' → logprob: -9.567549705505371
    8. '_ord' → logprob: -9.567549705505371
    9. '(ord' → logprob: -11.192549705505371
    10. ' ord' → logprob: -11.192549705505371

Token 127: ' chars' (ID: 47991)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.14361412823200226
    2. 'chars' → logprob: -2.3936140537261963
    3. ' ord' → logprob: -3.2686140537261963
    4. 'ords' → logprob: -5.643614292144775
    5. ' chars' → logprob: -7.143614292144775
    6. '(ord' → logprob: -10.268613815307617
    7. '   ' → logprob: -10.768613815307617
    8. 'chr' → logprob: -11.268613815307617
    9. '(chars' → logprob: -12.518613815307617
    10. '
' → logprob: -12.893613815307617

Token 128: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009306333377026021
    2. '.index' → logprob: -7.5009307861328125
    3. '0' → logprob: -8.125930786132812
    4. 'index' → logprob: -9.750930786132812
    5. ' [' → logprob: -11.625930786132812
    6. 's' → logprob: -12.625930786132812
    7. '[
' → logprob: -13.375930786132812
    8. '.' → logprob: -13.500930786132812
    9. '][' → logprob: -13.625930786132812
    10. ' index' → logprob: -13.625930786132812

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.684157026233152e-05
    2. ' ' → logprob: -9.500077247619629
    3. '<|end|>' → logprob: -15.312577247619629
    4. ',' → logprob: -15.812577247619629
    5. '```' → logprob: -16.062576293945312
    6. '-' → logprob: -16.062576293945312
    7. '00' → logprob: -16.187576293945312
    8. ')' → logprob: -16.250076293945312
    9. '[' → logprob: -16.312576293945312
    10. 's' → logprob: -16.437576293945312

Token 130: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038504209369421005
    2. ' )' → logprob: -3.538504123687744
    3. ']' → logprob: -5.913504123687744
    4. '<|end|>' → logprob: -6.288504123687744
    5. ')
' → logprob: -6.663504123687744
    6. '       ' → logprob: -6.788504123687744
    7. ')]' → logprob: -7.913504123687744
    8. ' ]' → logprob: -8.038504600524902
    9. '
' → logprob: -8.038504600524902
    10. '   ' → logprob: -9.163504600524902

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23567934334278107
    2. '   ' → logprob: -2.3606793880462646
    3. '
' → logprob: -3.1106793880462646
    4. ' for' → logprob: -3.2356793880462646
    5. '    
' → logprob: -4.8606791496276855
    6. '<|end|>' → logprob: -4.8606791496276855
    7. ' 
' → logprob: -5.4856791496276855
    8. '        
' → logprob: -5.7356791496276855
    9. '  
' → logprob: -5.9856791496276855
    10. 'for' → logprob: -6.2356791496276855

Token 132: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.025151479989290237
    2. 'for' (adapté à ' for') → logprob: -3.900151491165161
    3. '   ' → logprob: -5.900151252746582
    4. '
' → logprob: -6.650151252746582
    5. ' 
' → logprob: -7.775151252746582
    6. '    
' → logprob: -10.525151252746582
    7. '       ' → logprob: -10.650151252746582
    8. ' ' → logprob: -10.775151252746582
    9. '  
' → logprob: -10.775151252746582
    10. ' tokens' → logprob: -11.775151252746582

Token 133: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16053229570388794
    2. ' c' → logprob: -1.9105322360992432
    3. 'char' → logprob: -8.785531997680664
    4. 'ch' → logprob: -9.285531997680664
    5. 'i' → logprob: -10.285531997680664
    6. ' i' → logprob: -11.160531997680664
    7. ' char' → logprob: -11.910531997680664
    8. 'curr' → logprob: -12.910531997680664
    9. ' ch' → logprob: -13.160531997680664
    10. ' ' → logprob: -13.910531997680664

Token 134: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03821201249957085
    2. 'in' → logprob: -3.2882120609283447
    3. ' ' → logprob: -8.788211822509766
    4. 's' → logprob: -11.913211822509766
    5. ',' → logprob: -12.663211822509766
    6. '  ' → logprob: -13.163211822509766
    7. ' ,' → logprob: -13.663211822509766
    8. '_in' → logprob: -14.288211822509766
    9. ' i' → logprob: -14.413211822509766
    10. 'In' → logprob: -14.788211822509766

Token 135: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.029793426394462585
    2. ' chars' → logprob: -3.5297935009002686
    3. '(chars' → logprob: -10.154793739318848
    4. '_chars' → logprob: -12.529793739318848
    5. 'Chars' → logprob: -15.779793739318848
    6. ' ' → logprob: -16.15479278564453
    7. '   ' → logprob: -16.90479278564453
    8. 'char' → logprob: -17.27979278564453
    9. 'c' → logprob: -17.27979278564453
    10. 'characters' → logprob: -17.77979278564453

Token 136: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10824878513813019
    2. ' in' → logprob: -2.608248710632324
    3. 'in' → logprob: -4.233248710632324
    4. ':
' → logprob: -4.733248710632324
    5. ' :' → logprob: -5.983248710632324
    6. '[' → logprob: -6.608248710632324
    7. ',' → logprob: -7.483248710632324
    8. '   ' → logprob: -7.983248710632324
    9. ' if' → logprob: -8.858248710632324
    10. ' ' → logprob: -9.233248710632324

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003915849607437849
    2. 'range' → logprob: -5.628915786743164
    3. ' ' → logprob: -9.003915786743164
    4. '(' → logprob: -9.378915786743164
    5. ' range' → logprob: -9.753915786743164
    6. 'chars' → logprob: -11.003915786743164
    7. '   ' → logprob: -11.628915786743164
    8. '[' → logprob: -11.753915786743164
    9. ':' → logprob: -11.878915786743164
    10. '
' → logprob: -13.378915786743164

Token 138: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15513166785240173
    2. ']:' → logprob: -2.0301315784454346
    3. ']:
' → logprob: -4.655131816864014
    4. ' :' → logprob: -6.155131816864014
    5. ':
' → logprob: -8.030131340026855
    6. '):' → logprob: -9.655131340026855
    7. ':]' → logprob: -9.780131340026855
    8. ',' → logprob: -9.905131340026855
    9. ']' → logprob: -10.030131340026855
    10. ' in' → logprob: -10.280131340026855

Token 139: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8085770010948181
    2. ':' → logprob: -1.558577060699463
    3. ':
' → logprob: -1.683577060699463
    4. ']:
' → logprob: -2.308577060699463
    5. '       ' → logprob: -3.183577060699463
    6. '   ' → logprob: -5.683577060699463
    7. '           ' → logprob: -6.058577060699463
    8. ' :
' → logprob: -6.058577060699463
    9. '):' → logprob: -6.183577060699463
    10. ']:' → logprob: -6.433577060699463

Token 140: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25398895144462585
    2. '           ' → logprob: -1.8789889812469482
    3. ' if' → logprob: -3.1289889812469482
    4. '        ' → logprob: -4.628988742828369
    5. ',' → logprob: -5.253988742828369
    6. '<|end|>' → logprob: -5.878988742828369
    7. '   ' → logprob: -6.003988742828369
    8. ' ' → logprob: -6.628988742828369
    9. '    ' → logprob: -6.628988742828369
    10. 'if' → logprob: -7.128988742828369

Token 141: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.020820269361138344
    2. 'if' (adapté à ' if') → logprob: -3.895820379257202
    3. '       ' → logprob: -8.770820617675781
    4. ' ' → logprob: -10.145820617675781
    5. '   ' → logprob: -10.145820617675781
    6. '           ' → logprob: -10.770820617675781
    7. '    ' → logprob: -12.645820617675781
    8. '<|end|>' → logprob: -12.770820617675781
    9. '	if' → logprob: -13.270820617675781
    10. ',' → logprob: -13.395820617675781

Token 142: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.3133802115917206
    2. 'ord' → logprob: -1.313380241394043
    3. '(ord' → logprob: -9.188380241394043
    4. ' ' → logprob: -11.813380241394043
    5. 'chr' → logprob: -12.313380241394043
    6. '   ' → logprob: -12.813380241394043
    7. '  ' → logprob: -13.938380241394043
    8. ' chr' → logprob: -15.188380241394043
    9. 'ords' → logprob: -15.688380241394043
    10. '_ord' → logprob: -16.063379287719727

Token 143: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.45848218582978e-06
    2. 'c' → logprob: -13.37500286102295
    3. '©' → logprob: -15.25000286102295
    4. '(prev' → logprob: -15.25000286102295
    5. '(' → logprob: -15.50000286102295
    6. ')c' → logprob: -15.87500286102295
    7. ')' → logprob: -17.875001907348633
    8. '(ord' → logprob: -18.625001907348633
    9. ' (' → logprob: -18.750001907348633
    10. 'prev' → logprob: -18.750001907348633

Token 144: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4645007252693176
    2. ')' → logprob: -1.2145006656646729
    3. '!=' → logprob: -3.339500665664673
    4. '-' → logprob: -4.714500904083252
    5. ')==' → logprob: -4.839500904083252
    6. 'prev' → logprob: -4.839500904083252
    7. ' ==' → logprob: -4.839500904083252
    8. ' !=' → logprob: -6.214500904083252
    9. '()' → logprob: -6.589500904083252
    10. '>' → logprob: -7.214500904083252

Token 145: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.46758514642715454
    2. ' ==' → logprob: -1.2175850868225098
    3. ' !=' → logprob: -2.9675850868225098
    4. '!=' → logprob: -3.7175850868225098
    5. '-' → logprob: -6.96758508682251
    6. '>' → logprob: -7.84258508682251
    7. ' -' → logprob: -7.96758508682251
    8. ')' → logprob: -9.717585563659668
    9. '=' → logprob: -10.842585563659668
    10. ')==' → logprob: -11.092585563659668

Token 146: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.062152981758117676
    2. ' ord' → logprob: -2.812152862548828
    3. 'prev' → logprob: -9.437152862548828
    4. '   ' → logprob: -9.937152862548828
    5. '    ' → logprob: -10.187152862548828
    6. '(ord' → logprob: -11.437152862548828
    7. '           ' → logprob: -12.187152862548828
    8. ' prev' → logprob: -14.062152862548828
    9. ' ' → logprob: -14.312152862548828
    10. '        ' → logprob: -14.437152862548828

Token 147: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -5.943783253314905e-05
    2. 'prev' → logprob: -9.750059127807617
    3. ' prev' → logprob: -15.125059127807617
    4. '	prev' → logprob: -15.125059127807617
    5. '(' → logprob: -15.500059127807617
    6. ' (' → logprob: -15.625059127807617
    7. '(previous' → logprob: -15.875059127807617
    8. '(pre' → logprob: -17.000059127807617
    9. '   ' → logprob: -18.375059127807617
    10. ' ' → logprob: -18.375059127807617

Token 148: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03722865507006645
    2. ')+' → logprob: -3.662228584289551
    3. '+' → logprob: -4.662228584289551
    4. ' +' → logprob: -6.662228584289551
    5. ' )' → logprob: -9.53722858428955
    6. ' ' → logprob: -10.28722858428955
    7. ']+' → logprob: -11.53722858428955
    8. ']' → logprob: -11.66222858428955
    9. '}+' → logprob: -12.41222858428955
    10. '}' → logprob: -12.53722858428955

Token 149: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16024139523506165
    2. '+' → logprob: -1.9102413654327393
    3. ')+' → logprob: -11.91024112701416
    4. ' ' → logprob: -12.16024112701416
    5. ')' → logprob: -12.78524112701416
    6. '    ' → logprob: -14.41024112701416
    7. '1' → logprob: -14.78524112701416
    8. '   ' → logprob: -14.78524112701416
    9. '()+' → logprob: -15.03524112701416
    10. '+c' → logprob: -15.16024112701416

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.750158309936523
    4. '```' → logprob: -17.375158309936523
    5. '
' → logprob: -18.375158309936523
    6. '  ' → logprob: -19.000158309936523
    7. '<|end|>' → logprob: -19.500158309936523
    8. '' → logprob: -20.625158309936523
    9. ' ' → logprob: -21.125158309936523
    10. '

' → logprob: -21.250158309936523

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018268341955263168
    2. ' ' → logprob: -8.62518310546875
    3. '```' → logprob: -13.37518310546875
    4. '
' → logprob: -14.87518310546875
    5. '<|end|>' → logprob: -14.87518310546875
    6. '   ' → logprob: -15.12518310546875
    7. '  ' → logprob: -16.12518310546875
    8. '' → logprob: -16.12518310546875
    9. '

' → logprob: -16.68768310546875
    10. ' ' → logprob: -16.87518310546875

Token 152: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08931729197502136
    2. ':
' → logprob: -2.4643173217773438
    3. '       ' → logprob: -9.339317321777344
    4. '):
' → logprob: -9.464317321777344
    5. '):' → logprob: -9.589317321777344
    6. '           ' → logprob: -10.589317321777344
    7. ' :' → logprob: -10.589317321777344
    8. ':
' → logprob: -10.589317321777344
    9. ')' → logprob: -10.714317321777344
    10. ' and' → logprob: -11.339317321777344

Token 153: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0896429643034935
    2. '           ' → logprob: -2.7146430015563965
    3. '               ' → logprob: -4.0896430015563965
    4. ',' → logprob: -7.7146430015563965
    5. 'interval' → logprob: -7.8396430015563965
    6. ')' → logprob: -7.9646430015563965
    7. ':' → logprob: -8.214642524719238
    8. '#' → logprob: -8.339642524719238
    9. '):
' → logprob: -8.839642524719238
    10. '   ' → logprob: -8.839642524719238

Token 154: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.0383363738656044
    2. ' prev' → logprob: -3.2883362770080566
    3. '           ' → logprob: -8.413336753845215
    4. '               ' → logprob: -10.413336753845215
    5. '	prev' → logprob: -10.413336753845215
    6. '   ' → logprob: -12.538336753845215
    7. '(prev' → logprob: -12.788336753845215
    8. '_prev' → logprob: -12.913336753845215
    9. '       ' → logprob: -13.413336753845215
    10. '.prev' → logprob: -13.788336753845215

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025470197200775
    2. '=' → logprob: -1.910254716873169
    3. '=c' → logprob: -10.41025447845459
    4. '<|end|>' → logprob: -16.285255432128906
    5. ' ' → logprob: -16.660255432128906
    6. '=cut' → logprob: -17.035255432128906
    7. '=end' → logprob: -17.035255432128906
    8. ' =
' → logprob: -17.285255432128906
    9. '=
' → logprob: -17.535255432128906
    10. 'c' → logprob: -18.160255432128906

Token 156: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10020720958709717
    2. ' c' → logprob: -2.3502073287963867
    3. '	c' → logprob: -15.600207328796387
    4. ')c' → logprob: -15.725207328796387
    5. ' ' → logprob: -16.85020637512207
    6. '_c' → logprob: -17.22520637512207
    7. '(c' → logprob: -17.35020637512207
    8. '<c' → logprob: -17.47520637512207
    9. '$c' → logprob: -17.60020637512207
    10. 'cation' → logprob: -18.22520637512207

Token 157: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038817848544567823
    2. 'continue' → logprob: -6.378881931304932
    3. '       ' → logprob: -6.753881931304932
    4. '               ' → logprob: -7.503881931304932
    5. 'else' → logprob: -8.628881454467773
    6. ' continue' → logprob: -9.128881454467773
    7. ' continues' → logprob: -10.253881454467773
    8. ' else' → logprob: -10.878881454467773
    9. 'contin' → logprob: -11.253881454467773
    10. '   ' → logprob: -11.378881454467773

Token 158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000309840717818588
    2. '       ' → logprob: -8.500309944152832
    3. 'else' → logprob: -9.500309944152832
    4. '               ' → logprob: -11.250309944152832
    5. ' else' → logprob: -11.625309944152832
    6. 'continue' → logprob: -12.625309944152832
    7. 'elif' → logprob: -13.125309944152832
    8. ',' → logprob: -13.875309944152832
    9. '   ' → logprob: -14.375309944152832
    10. '```' → logprob: -14.375309944152832

Token 159: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.14791259169578552
    2. '       ' → logprob: -2.8979125022888184
    3. ' else' → logprob: -3.0229125022888184
    4. '           ' → logprob: -3.3979125022888184
    5. '               ' → logprob: -9.147912979125977
    6. 'elif' → logprob: -9.147912979125977
    7. '   ' → logprob: -11.272912979125977
    8. '	else' → logprob: -11.522912979125977
    9. '```' → logprob: -11.897912979125977
    10. ' elif' → logprob: -12.397912979125977

Token 160: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4604249596595764
    2. ':' → logprob: -1.2104249000549316
    3. '               ' → logprob: -2.8354249000549316
    4. '):
' → logprob: -5.335424900054932
    5. '           ' → logprob: -5.710424900054932
    6. '       ' → logprob: -6.710424900054932
    7. ',' → logprob: -6.710424900054932
    8. ' :
' → logprob: -7.085424900054932
    9. '):' → logprob: -8.46042537689209
    10. ' :' → logprob: -8.71042537689209

Token 161: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04668806865811348
    2. '           ' → logprob: -3.4216880798339844
    3. ' intervals' → logprob: -4.921688079833984
    4. 'interval' → logprob: -5.296688079833984
    5. '   ' → logprob: -7.421688079833984
    6. '               ' → logprob: -10.296688079833984
    7. '
' → logprob: -11.296688079833984
    8. '```' → logprob: -12.671688079833984
    9. 'inter' → logprob: -13.046688079833984
    10. '#' → logprob: -13.421688079833984

Token 162: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.05960887297987938
    2. 'interval' → logprob: -3.0596089363098145
    3. '           ' → logprob: -4.5596089363098145
    4. '       ' → logprob: -8.059608459472656
    5. '               ' → logprob: -9.809608459472656
    6. ' interval' → logprob: -10.059608459472656
    7. '   ' → logprob: -11.184608459472656
    8. ' ' → logprob: -11.559608459472656
    9. '            ' → logprob: -11.684608459472656
    10. '```' → logprob: -11.809608459472656

Token 163: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00150390958879143
    2. '.' → logprob: -6.501503944396973
    3. '.extend' → logprob: -14.501503944396973
    4. ').' → logprob: -15.126503944396973
    5. ' .' → logprob: -15.126503944396973
    6. '.app' → logprob: -15.251503944396973
    7. 'append' → logprob: -16.501502990722656
    8. '.Append' → logprob: -16.626502990722656
    9. '.ap' → logprob: -17.251502990722656
    10. '.add' → logprob: -17.251502990722656

Token 164: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004966662731021643
    2. '(' → logprob: -5.754966735839844
    3. '(start' → logprob: -6.629966735839844
    4. ' (' → logprob: -8.129966735839844
    5. '   ' → logprob: -9.379966735839844
    6. '(f' → logprob: -10.004966735839844
    7. '([' → logprob: -10.629966735839844
    8. ' ((' → logprob: -12.129966735839844
    9. ' ' → logprob: -12.629966735839844
    10. '  ' → logprob: -13.004966735839844

Token 165: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00033593899570405483
    2. ' start' → logprob: -8.000335693359375
    3. 'ord' → logprob: -15.125335693359375
    4. '(start' → logprob: -15.375335693359375
    5. '   ' → logprob: -18.125335693359375
    6. ',start' → logprob: -18.250335693359375
    7. ' ord' → logprob: -18.625335693359375
    8. ' ' → logprob: -19.625335693359375
    9. '[start' → logprob: -19.875335693359375
    10. 'str' → logprob: -20.000335693359375

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012023737654089928
    2. ' ,' → logprob: -6.751202583312988
    3. ',
' → logprob: -11.376202583312988
    4. ',start' → logprob: -11.501202583312988
    5. ')' → logprob: -13.626202583312988
    6. ' ' → logprob: -13.751202583312988
    7. ',end' → logprob: -13.876202583312988
    8. 'prev' → logprob: -14.251202583312988
    9. ',c' → logprob: -14.501202583312988
    10. 'start' → logprob: -14.501202583312988

Token 167: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.011049704626202583
    2. ' prev' → logprob: -4.511049747467041
    3. '(prev' → logprob: -13.761049270629883
    4. '	prev' → logprob: -14.511049270629883
    5. '    ' → logprob: -17.011049270629883
    6. '.prev' → logprob: -17.136049270629883
    7. '_prev' → logprob: -17.261049270629883
    8. '           ' → logprob: -17.511049270629883
    9. 'Prev' → logprob: -17.886049270629883
    10. '   ' → logprob: -18.011049270629883

Token 168: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07214367389678955
    2. '))' → logprob: -2.8221435546875
    3. ')
' → logprob: -4.8221435546875
    4. '))
' → logprob: -6.1971435546875
    5. ' )' → logprob: -10.8221435546875
    6. '       ' → logprob: -11.4471435546875
    7. ' ))' → logprob: -13.1971435546875
    8. ')
' → logprob: -13.3221435546875
    9. ' )
' → logprob: -13.6971435546875
    10. '))
' → logprob: -14.0721435546875

Token 169: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023826390504837036
    2. '       ' → logprob: -3.8988263607025146
    3. '
' → logprob: -5.898826599121094
    4. '                
' → logprob: -8.523826599121094
    5. '           ' → logprob: -9.523826599121094
    6. '        
' → logprob: -9.773826599121094
    7. '
' → logprob: -10.273826599121094
    8. ' 
' → logprob: -10.523826599121094
    9. ',' → logprob: -10.523826599121094
    10. 'start' → logprob: -10.523826599121094

Token 170: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.014272099360823631
    2. ' start' → logprob: -4.264272212982178
    3. '               ' → logprob: -10.13927173614502
    4. '       ' → logprob: -10.26427173614502
    5. '           ' → logprob: -10.51427173614502
    6. '   ' → logprob: -12.13927173614502
    7. ' ' → logprob: -13.76427173614502
    8. '	start' → logprob: -15.26427173614502
    9. '
' → logprob: -15.63927173614502
    10. '  ' → logprob: -16.514272689819336

Token 171: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005235648714005947
    2. ' =' → logprob: -5.25523567199707
    3. '=c' → logprob: -13.75523567199707
    4. ',' → logprob: -14.88023567199707
    5. '=
' → logprob: -15.38023567199707
    6. ')' → logprob: -16.25523567199707
    7. '=

' → logprob: -16.25523567199707
    8. 'c' → logprob: -17.38023567199707
    9. ')=' → logprob: -17.88023567199707
    10. '＝' → logprob: -18.25523567199707

Token 172: ' prev' (ID: 10258)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005530327325686812
    2. ' c' → logprob: -7.500553131103516
    3. ')c' → logprob: -17.875553131103516
    4. '	c' → logprob: -19.125553131103516
    5. 'prev' → logprob: -19.250553131103516
    6. '           ' → logprob: -19.625553131103516
    7. '   ' → logprob: -20.000553131103516
    8. '_c' → logprob: -20.375553131103516
    9. '       ' → logprob: -20.500553131103516
    10. ' ' → logprob: -21.125553131103516

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48317694664001465
    2. '=' → logprob: -1.2331769466400146
    3. '=c' → logprob: -2.6081769466400146
    4. '<|end|>' → logprob: -5.108177185058594
    5. '               ' → logprob: -5.358177185058594
    6. 'c' → logprob: -6.483177185058594
    7. ')' → logprob: -6.608177185058594
    8. '           ' → logprob: -7.233177185058594
    9. '
' → logprob: -7.233177185058594
    10. ' c' → logprob: -7.358177185058594

Token 174: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0021853535436093807
    2. ' c' → logprob: -6.127185344696045
    3. '	c' → logprob: -16.627185821533203
    4. ')c' → logprob: -16.627185821533203
    5. '   ' → logprob: -18.377185821533203
    6. '_c' → logprob: -18.627185821533203
    7. '<c' → logprob: -19.252185821533203
    8. '%c' → logprob: -19.502185821533203
    9. '(c' → logprob: -20.127185821533203
    10. ':c' → logprob: -20.127185821533203

Token 175: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.868328920158092e-05
    2. '
' → logprob: -10.875028610229492
    3. '   ' → logprob: -12.000028610229492
    4. '           ' → logprob: -13.750028610229492
    5. 'return' → logprob: -14.875028610229492
    6. ',' → logprob: -15.000028610229492
    7. '      ' → logprob: -15.125028610229492
    8. ')' → logprob: -15.125028610229492
    9. '        
' → logprob: -15.125028610229492
    10. '    
' → logprob: -15.625028610229492

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8789383830153383e-05
    2. '
' → logprob: -11.500019073486328
    3. '           ' → logprob: -12.500019073486328
    4. '   ' → logprob: -12.625019073486328
    5. ',' → logprob: -15.000019073486328
    6. '               ' → logprob: -15.375019073486328
    7. ')' → logprob: -15.500019073486328
    8. '      ' → logprob: -15.750019073486328
    9. '#' → logprob: -15.875019073486328
    10. '
' → logprob: -16.250019073486328

Token 177: ' intervals' (ID: 49900)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2131161391735077
    2. '   ' → logprob: -1.71311616897583
    3. '
' → logprob: -4.71311616897583
    4. ' intervals' → logprob: -6.21311616897583
    5. 'interval' → logprob: -7.83811616897583
    6. '        
' → logprob: -9.838115692138672
    7. ')' → logprob: -9.963115692138672
    8. '    
' → logprob: -10.463115692138672
    9. ')
' → logprob: -10.713115692138672
    10. '           ' → logprob: -10.838115692138672

Token 178: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001173917087726295
    2. '.' → logprob: -6.751173973083496
    3. 'append' → logprob: -13.626173973083496
    4. ').' → logprob: -14.251173973083496
    5. ' .' → logprob: -14.501173973083496
    6. '<|end|>' → logprob: -14.501173973083496
    7. '.Append' → logprob: -14.626173973083496
    8. '.app' → logprob: -15.626173973083496
    9. '.add' → logprob: -16.25117301940918
    10. '.
' → logprob: -16.62617301940918

Token 179: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -8.65707261255011e-06
    2. '(start' → logprob: -12.125008583068848
    3. '(' → logprob: -12.750008583068848
    4. ' ((' → logprob: -16.500009536743164
    5. ' ' → logprob: -16.875009536743164
    6. ' (' → logprob: -17.000009536743164
    7. '(
' → logprob: -18.250009536743164
    8. '  ' → logprob: -19.375009536743164
    9. '   ' → logprob: -19.625009536743164
    10. ')((' → logprob: -20.500009536743164

Token 180: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -4.127333340875339e-06
    2. ' start' → logprob: -12.500003814697266
    3. 'prev' → logprob: -15.250003814697266
    4. '(start' → logprob: -16.250003814697266
    5. '[start' → logprob: -19.875003814697266
    6. 'end' → logprob: -20.375003814697266
    7. ')' → logprob: -22.250003814697266
    8. '	start' → logprob: -23.125003814697266
    9. ',start' → logprob: -23.125003814697266
    10. '_start' → logprob: -23.250003814697266

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.961759259458631e-06
    2. ' ,' → logprob: -12.250004768371582
    3. ',
' → logprob: -16.1250057220459
    4. ',

' → logprob: -19.5000057220459
    5. '‌,' → logprob: -20.6250057220459
    6. 'prev' → logprob: -20.6250057220459
    7. '<|end|>' → logprob: -20.6250057220459
    8. '),' → logprob: -20.7500057220459
    9. '(prev' → logprob: -20.8750057220459
    10. ')' → logprob: -21.1250057220459

Token 182: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.1269325166940689
    2. ' prev' → logprob: -2.1269326210021973
    3. '(prev' → logprob: -13.001932144165039
    4. 'chars' → logprob: -14.126932144165039
    5. ' ' → logprob: -14.626932144165039
    6. '	prev' → logprob: -14.751932144165039
    7. ')' → logprob: -14.876932144165039
    8. ' chars' → logprob: -16.75193214416504
    9. 'c' → logprob: -16.75193214416504
    10. '_prev' → logprob: -16.87693214416504

Token 183: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1602349877357483
    2. '))' → logprob: -1.9102349281311035
    3. ' )' → logprob: -12.535235404968262
    4. ')
' → logprob: -12.660235404968262
    5. '))
' → logprob: -13.410235404968262
    6. ')))' → logprob: -14.410235404968262
    7. ')}' → logprob: -14.410235404968262
    8. ')")' → logprob: -14.785235404968262
    9. ')return' → logprob: -15.160235404968262
    10. ' ))' → logprob: -15.160235404968262

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00722063472494483
    2. '   ' → logprob: -5.00722074508667
    3. 'return' → logprob: -8.007220268249512
    4. ' return' → logprob: -9.007220268249512
    5. '<|end|>' → logprob: -11.132220268249512
    6. '	return' → logprob: -11.632220268249512
    7. '           ' → logprob: -11.882220268249512
    8. '	' → logprob: -12.507220268249512
    9. ')' → logprob: -13.007220268249512
    10. '
' → logprob: -13.007220268249512

Token 185: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05986400321125984
    2. '       ' → logprob: -3.809864044189453
    3. '   ' → logprob: -3.934864044189453
    4. ' return' → logprob: -4.184864044189453
    5. '	return' → logprob: -6.934864044189453
    6. '
' → logprob: -8.809864044189453
    7. '	' → logprob: -10.434864044189453
    8. ' ' → logprob: -11.559864044189453
    9. '    
' → logprob: -12.434864044189453
    10. ':return' → logprob: -12.559864044189453

Token 186: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.00861528143286705
    2. ' intervals' → logprob: -4.758615493774414
    3. '(interval' → logprob: -14.508615493774414
    4. 'int' → logprob: -17.258615493774414
    5. 'inter' → logprob: -17.633615493774414
    6. 'Intervals' → logprob: -17.883615493774414
    7. '[' → logprob: -17.883615493774414
    8. 'inte' → logprob: -17.883615493774414
    9. ' interval' → logprob: -18.008615493774414
    10. '```' → logprob: -18.008615493774414

Token 187: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.3542144298553467
    2. '   ' → logprob: -1.6042144298553467
    3. '
' → logprob: -2.9792144298553467
    4. '<|end|>' → logprob: -3.2292144298553467
    5. '    ' → logprob: -6.729214668273926
    6. '  
' → logprob: -6.854214668273926
    7. '   
' → logprob: -6.979214668273926
    8. '        
' → logprob: -7.229214668273926
    9. '<|end|>' → logprob: -7.229214668273926
    10. ')' → logprob: -7.229214668273926

Token 188: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.6472290754318237
    2. '   ' → logprob: -0.8972290754318237
    3. '
' → logprob: -2.7722291946411133
    4. '    ' → logprob: -5.772229194641113
    5. '    
    
' → logprob: -7.397229194641113
    6. '  
' → logprob: -7.897229194641113
    7. '   
' → logprob: -8.022229194641113
    8. 'def' → logprob: -8.022229194641113
    9. '        
' → logprob: -8.272229194641113
    10. 'return' → logprob: -8.772229194641113

Token 189: ' #' (ID: 1069)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.5288334488868713
    2. '#' (adapté à ' #') → logprob: -2.0288333892822266
    3. '   ' → logprob: -2.1538333892822266
    4. 'letter' → logprob: -2.2788333892822266
    5. 'compressed' → logprob: -3.7788333892822266
    6. 'interval' → logprob: -4.278833389282227
    7. '    
' → logprob: -5.403833389282227
    8. 'result' → logprob: -5.403833389282227
    9. 'length' → logprob: -5.653833389282227
    10. 'def' → logprob: -6.028833389282227

Token 190: ' Calcul' (ID: 57243)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.5942798256874084
    2. 'letter' → logprob: -0.9692798256874084
    3. 'interval' → logprob: -3.2192797660827637
    4. '#' → logprob: -4.219279766082764
    5. 'compressed' → logprob: -5.594279766082764
    6. 'all' → logprob: -5.844279766082764
    7. 'length' → logprob: -6.969279766082764
    8. 'def' → logprob: -7.094279766082764
    9. 'lett' → logprob: -7.094279766082764
    10. 'result' → logprob: -7.469279766082764

Token 191: ' des' (ID: 731)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6243890523910522
    2. '   ' → logprob: -0.8743890523910522
    3. ' total' → logprob: -4.374389171600342
    4. ' length' → logprob: -4.499389171600342
    5. ' lengths' → logprob: -5.499389171600342
    6. 'total' → logprob: -5.749389171600342
    7. '#' → logprob: -6.499389171600342
    8. ' =' → logprob: -6.624389171600342
    9. ' letters' → logprob: -6.874389171600342
    10. ' letter' → logprob: -6.874389171600342

Token 192: ' interv' (ID: 37413)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.3881028890609741
    2. 'length' → logprob: -2.1381030082702637
    3. 'letters' → logprob: -2.5131030082702637
    4. 'inter' → logprob: -3.6381030082702637
    5. 'lett' → logprob: -3.6381030082702637
    6. 'long' → logprob: -3.6381030082702637
    7. 'len' → logprob: -4.388103008270264
    8. 'compressed' → logprob: -4.888103008270264
    9. '#' → logprob: -5.638103008270264
    10. 'letter' → logprob: -5.763103008270264

Token 193: 'alles' (ID: 28825)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.02776726894080639
    2. 'al' → logprob: -4.027767181396484
    3. 'vals' → logprob: -6.027767181396484
    4. 'alles' → logprob: -6.152767181396484
    5. 'ales' → logprob: -6.652767181396484
    6. 'aux' → logprob: -6.902767181396484
    7. '   ' → logprob: -7.527767181396484
    8. '#' → logprob: -7.652767181396484
    9. '```' → logprob: -7.777767181396484
    10. 'ents' → logprob: -8.402767181396484

Token 194: ' contin' (ID: 2590)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3431735336780548
    2. 'letters' → logprob: -1.4681735038757324
    3. '_letters' → logprob: -3.0931735038757324
    4. ' letters' → logprob: -4.718173503875732
    5. 'letter' → logprob: -6.093173503875732
    6. '_letter' → logprob: -6.718173503875732
    7. ' lettres' → logprob: -7.843173503875732
    8. '    
' → logprob: -8.09317398071289
    9. 'for' → logprob: -8.21817398071289
    10. '_' → logprob: -8.46817398071289

Token 195: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.0009594622533768415
    2. 'u' → logprob: -7.875959396362305
    3. 'uus' → logprob: -7.875959396362305
    4. 'ues' → logprob: -9.000959396362305
    5. 'uous' → logprob: -10.625959396362305
    6. 'gus' → logprob: -11.125959396362305
    7. 'eus' → logprob: -11.250959396362305
    8. 'uos' → logprob: -12.875959396362305
    9. 'ous' → logprob: -13.250959396362305
    10. 'ус' → logprob: -13.500959396362305

Token 196: ' pour' (ID: 1930)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.24900460243225098
    2. '   ' → logprob: -1.874004602432251
    3. 'letter' → logprob: -3.499004602432251
    4. ' letters' → logprob: -3.749004602432251
    5. 'interval' → logprob: -5.874004364013672
    6. ' letter' → logprob: -6.124004364013672
    7. '_letters' → logprob: -6.124004364013672
    8. ' intervals' → logprob: -6.499004364013672
    9. '
' → logprob: -6.874004364013672
    10. 'for' → logprob: -7.624004364013672

Token 197: ' lettres' (ID: 101234)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.019833559170365334
    2. ' letters' → logprob: -4.019833564758301
    3. 'lett' → logprob: -6.644833564758301
    4. ' lettres' → logprob: -8.3948335647583
    5. 'les' → logprob: -9.6448335647583
    6. 'digits' → logprob: -10.0198335647583
    7. 'let' → logprob: -11.1448335647583
    8. '_letters' → logprob: -11.8948335647583
    9. 'le' → logprob: -12.3948335647583
    10. 'lets' → logprob: -12.7698335647583

Token 198: ' et' (ID: 859)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.3291628956794739
    2. '_letters' → logprob: -1.954162836074829
    3. '   ' → logprob: -2.079162836074829
    4. ' =' → logprob: -4.954163074493408
    5. ' letters' → logprob: -5.454163074493408
    6. '_' → logprob: -7.704163074493408
    7. '=' → logprob: -7.829163074493408
    8. ',' → logprob: -7.829163074493408
    9. ' and' → logprob: -8.57916259765625
    10. ')' → logprob: -9.45416259765625

Token 199: ' chiffres' (ID: 105565)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.802771270275116
    2. ' chiffres' → logprob: -1.3027713298797607
    3. 'ch' → logprob: -1.8027713298797607
    4. ' digits' → logprob: -2.1777713298797607
    5. 'd' → logprob: -7.177771091461182
    6. '#' → logprob: -7.677771091461182
    7. ' ' → logprob: -8.55277156829834
    8. '   ' → logprob: -8.92777156829834
    9. ' ch' → logprob: -9.80277156829834
    10. 'dig' → logprob: -9.92777156829834

Token 200: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7241634130477905
    2. 'letters' → logprob: -0.7241634130477905
    3. '
' → logprob: -4.47416353225708
    4. '    
' → logprob: -4.72416353225708
    5. ' letters' → logprob: -4.84916353225708
    6. 'letter' → logprob: -6.59916353225708
    7. '_letters' → logprob: -7.34916353225708
    8. 'interval' → logprob: -9.349163055419922
    9. '```' → logprob: -9.349163055419922
    10. ' letter' → logprob: -10.224163055419922

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2730593681335449
    2. 'letters' → logprob: -1.523059368133545
    3. ' letters' → logprob: -4.148059368133545
    4. 'letter' → logprob: -5.648059368133545
    5. '    
' → logprob: -7.523059368133545
    6. ' letter' → logprob: -7.523059368133545
    7. '_letters' → logprob: -8.523059844970703
    8. '
' → logprob: -9.273059844970703
    9. ' lettres' → logprob: -10.273059844970703
    10. '```' → logprob: -10.398059844970703

Token 202: ' letter' (ID: 10263)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.1445048749446869
    2. 'letter' (adapté à ' letter') → logprob: -2.3945047855377197
    3. ' letters' → logprob: -3.8945047855377197
    4. '   ' → logprob: -4.019505023956299
    5. ' letter' → logprob: -5.394505023956299
    6. 'interval' → logprob: -8.76950454711914
    7. ' intervals' → logprob: -9.51950454711914
    8. 'l' → logprob: -10.39450454711914
    9. '    
' → logprob: -10.39450454711914
    10. 'let' → logprob: -10.51950454711914

Token 203: '_inter' (ID: 16818)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.023751426488161087
    2. '_inter' → logprob: -3.7737514972686768
    3. '_s' → logprob: -7.773751258850098
    4. ' s' → logprob: -10.273751258850098
    5. 'inter' → logprob: -11.148751258850098
    6. 'interval' → logprob: -11.523751258850098
    7. '_' → logprob: -12.023751258850098
    8. 'Intervals' → logprob: -12.523751258850098
    9. 'Inter' → logprob: -12.898751258850098
    10. '_interval' → logprob: -13.148751258850098

Token 204: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.00493914308026433
    2. '=' → logprob: -6.379939079284668
    3. 'val' → logprob: -6.504939079284668
    4. '_' → logprob: -8.379939079284668
    5. '```' → logprob: -8.629939079284668
    6. ' =' → logprob: -8.754939079284668
    7. '#' → logprob: -9.129939079284668
    8. 'als' → logprob: -9.129939079284668
    9. 's' → logprob: -9.629939079284668
    10. '   ' → logprob: -9.629939079284668

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407761216163635
    2. '=' → logprob: -0.974077582359314
    3. ',' → logprob: -15.224077224731445
    4. ')' → logprob: -15.849077224731445
    5. '   ' → logprob: -16.349077224731445
    6. ' ' → logprob: -17.224077224731445
    7. 's' → logprob: -17.724077224731445
    8. '=

' → logprob: -17.724077224731445
    9. ' =
' → logprob: -18.099077224731445
    10. '＝' → logprob: -18.474077224731445

Token 206: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.06197518855333328
    2. 'find' → logprob: -2.8119752407073975
    3. '(find' → logprob: -12.686975479125977
    4. '	find' → logprob: -13.061975479125977
    5. ' ' → logprob: -13.686975479125977
    6. '   ' → logprob: -14.811975479125977
    7. '=find' → logprob: -15.061975479125977
    8. ' ' → logprob: -16.061975479125977
    9. '  ' → logprob: -16.061975479125977
    10. '.find' → logprob: -16.749475479125977

Token 207: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -1.0087516784551553e-05
    2. '_letters' → logprob: -12.00001049041748
    3. '_' → logprob: -13.00001049041748
    4. 'interval' → logprob: -14.75001049041748
    5. '_interval' → logprob: -14.87501049041748
    6. '(_' → logprob: -15.50001049041748
    7. '(' → logprob: -15.87501049041748
    8. '(interval' → logprob: -16.000009536743164
    9. '_in' → logprob: -16.250009536743164
    10. '```' → logprob: -16.375009536743164

Token 208: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.0017016025958582759
    2. 'als' → logprob: -6.751701831817627
    3. 'val' → logprob: -7.626701831817627
    4. '_' → logprob: -11.876701354980469
    5. ' vals' → logprob: -11.876701354980469
    6. 's' → logprob: -12.126701354980469
    7. '[' → logprob: -12.876701354980469
    8. 'v' → logprob: -13.001701354980469
    9. '(' → logprob: -13.001701354980469
    10. '_val' → logprob: -13.251701354980469

Token 209: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.339278580620885e-06
    2. ' (' → logprob: -13.500001907348633
    3. 'letters' → logprob: -14.125001907348633
    4. '(let' → logprob: -16.625001907348633
    5. '(chars' → logprob: -17.250001907348633
    6. '((' → logprob: -17.625001907348633
    7. '(letter' → logprob: -17.750001907348633
    8. ' letters' → logprob: -18.375001907348633
    9. '(numbers' → logprob: -18.625001907348633
    10. ')' → logprob: -19.000001907348633

Token 210: 'letters' (ID: 38724)
  Prédit: 'letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.0002210596576333046
    2. ' letters' → logprob: -8.625221252441406
    3. '(' → logprob: -10.750221252441406
    4. ')' → logprob: -10.875221252441406
    5. '   ' → logprob: -15.250221252441406
    6. 'let' → logprob: -15.875221252441406
    7. ')(' → logprob: -16.125221252441406
    8. ')
' → logprob: -16.125221252441406
    9. 'lett' → logprob: -16.250221252441406
    10. '_letters' → logprob: -16.250221252441406

Token 211: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023252932354807854
    2. ')
' → logprob: -3.7732529640197754
    3. '   ' → logprob: -12.148252487182617
    4. ')
' → logprob: -13.273252487182617
    5. ')

' → logprob: -15.648252487182617
    6. ' )' → logprob: -15.898252487182617
    7. ' )
' → logprob: -17.398252487182617
    8. '),' → logprob: -17.773252487182617
    9. ')`
' → logprob: -18.773252487182617
    10. ')\' → logprob: -19.023252487182617

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6872099041938782
    2. 'digit' → logprob: -0.8122099041938782
    3. ' digit' → logprob: -2.9372098445892334
    4. '    
' → logprob: -10.312210083007812
    5. 'digits' → logprob: -10.312210083007812
    6. '
' → logprob: -10.812210083007812
    7. 'number' → logprob: -11.562210083007812
    8. '-digit' → logprob: -11.812210083007812
    9. '_digit' → logprob: -11.812210083007812
    10. '  ' → logprob: -12.062210083007812

Token 213: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' (adapté à ' digit') → logprob: -0.0005997385596856475
    2. ' digit' → logprob: -7.5005998611450195
    3. '   ' → logprob: -10.00059986114502
    4. 'number' → logprob: -13.87559986114502
    5. 'digits' → logprob: -16.000598907470703
    6. 'digital' → logprob: -16.500598907470703
    7. '_digit' → logprob: -16.500598907470703
    8. 'Digit' → logprob: -16.750598907470703
    9. ' ' → logprob: -16.875598907470703
    10. '-digit' → logprob: -17.625598907470703

Token 214: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.03806639462709427
    2. 's' → logprob: -3.2880663871765137
    3. '_s' → logprob: -10.788066864013672
    4. ' s' → logprob: -13.163066864013672
    5. '_' → logprob: -13.913066864013672
    6. 'interval' → logprob: -14.038066864013672
    7. 'inter' → logprob: -15.163066864013672
    8. ' _' → logprob: -15.913066864013672
    9. '_interval' → logprob: -16.538066864013672
    10. ' intervals' → logprob: -16.663066864013672

Token 215: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.0025737560354173183
    2. 'als' → logprob: -6.6275739669799805
    3. 'val' → logprob: -6.7525739669799805
    4. ' vals' → logprob: -10.87757396697998
    5. '_' → logprob: -12.00257396697998
    6. 's' → logprob: -12.00257396697998
    7. '```' → logprob: -12.25257396697998
    8. '=' → logprob: -12.37757396697998
    9. 'v' → logprob: -12.62757396697998
    10. '_val' → logprob: -12.75257396697998

Token 216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687339425086975
    2. '=' → logprob: -1.1368733644485474
    3. ')' → logprob: -13.136873245239258
    4. '=find' → logprob: -15.261873245239258
    5. ',' → logprob: -16.261873245239258
    6. ' ' → logprob: -17.136873245239258
    7. '   ' → logprob: -17.386873245239258
    8. '(' → logprob: -17.636873245239258
    9. '＝' → logprob: -18.011873245239258
    10. ')=' → logprob: -18.386873245239258

Token 217: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.1602955162525177
    2. 'find' → logprob: -1.9102954864501953
    3. 'digit' → logprob: -10.410295486450195
    4. ' digit' → logprob: -11.035295486450195
    5. 'digits' → logprob: -11.535295486450195
    6. '(find' → logprob: -11.785295486450195
    7. ' digits' → logprob: -12.035295486450195
    8. '	find' → logprob: -13.785295486450195
    9. '=find' → logprob: -15.160295486450195
    10. ' ' → logprob: -15.910295486450195

Token 218: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.00037848003557883203
    2. '(d' → logprob: -8.375378608703613
    3. '_digits' → logprob: -9.750378608703613
    4. 'interval' → logprob: -9.875378608703613
    5. 's' → logprob: -11.000378608703613
    6. 'digits' → logprob: -11.500378608703613
    7. '_interval' → logprob: -12.125378608703613
    8. 'd' → logprob: -12.750378608703613
    9. 'inter' → logprob: -13.750378608703613
    10. '(_' → logprob: -14.625378608703613

Token 219: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.0034976734314113855
    2. 'als' → logprob: -6.00349760055542
    3. 'val' → logprob: -7.12849760055542
    4. 's' → logprob: -10.003498077392578
    5. 'v' → logprob: -10.753498077392578
    6. 'erv' → logprob: -11.128498077392578
    7. '```' → logprob: -11.128498077392578
    8. 't' → logprob: -11.503498077392578
    9. ' vals' → logprob: -11.503498077392578
    10. 'ls' → logprob: -11.628498077392578

Token 220: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.868328920158092e-05
    2. '(' → logprob: -10.500028610229492
    3. ' (' → logprob: -13.750028610229492
    4. 'digits' → logprob: -18.375028610229492
    5. '(
' → logprob: -18.625028610229492
    6. '(D' → logprob: -19.000028610229492
    7. '(s' → logprob: -19.375028610229492
    8. '((' → logprob: -19.750028610229492
    9. ' digits' → logprob: -20.250028610229492
    10. '(chars' → logprob: -20.750028610229492

Token 221: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0002003218833124265
    2. 'its' → logprob: -8.875200271606445
    3. 'ig' → logprob: -10.250200271606445
    4. 'igts' → logprob: -11.250200271606445
    5. 'digits' → logprob: -12.125200271606445
    6. 'g' → logprob: -12.750200271606445
    7. 'igit' → logprob: -13.750200271606445
    8. 'i' → logprob: -14.500200271606445
    9. 'ights' → logprob: -14.625200271606445
    10. 'd' → logprob: -15.000200271606445

Token 222: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ')
' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.125004768371582
    4. ' )' → logprob: -16.3750057220459
    5. ')

' → logprob: -16.3750057220459
    6. ')`' → logprob: -18.2500057220459
    7. '))' → logprob: -18.5000057220459
    8. ')
' → logprob: -19.0000057220459
    9. '()' → logprob: -19.7500057220459
    10. '())' → logprob: -20.5000057220459

Token 223: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.7400813698768616
    2. '   ' → logprob: -0.8650813698768616
    3. '
' → logprob: -2.365081310272217
    4. 'compressed' → logprob: -5.615081310272217
    5. 'length' → logprob: -7.240081310272217
    6. '#' → logprob: -7.240081310272217
    7. 'result' → logprob: -7.615081310272217
    8. '    ' → logprob: -7.865081310272217
    9. '        
' → logprob: -7.990081310272217
    10. 'return' → logprob: -8.115081787109375

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3907935917377472
    2. '#' → logprob: -1.7657935619354248
    3. 'result' → logprob: -2.640793561935425
    4. 'compressed' → logprob: -3.265793561935425
    5. 'return' → logprob: -4.265793800354004
    6. 'total' → logprob: -5.015793800354004
    7. 'length' → logprob: -5.015793800354004
    8. '
' → logprob: -5.265793800354004
    9. 'def' → logprob: -5.515793800354004
    10. '    
' → logprob: -6.765793800354004

Token 225: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.4115279912948608
    2. 'compressed' → logprob: -1.5365279912948608
    3. 'def' → logprob: -1.6615279912948608
    4. '#' (adapté à ' #') → logprob: -1.9115279912948608
    5. 'length' → logprob: -2.1615281105041504
    6. 'res' → logprob: -3.4115281105041504
    7. 'min' → logprob: -3.7865281105041504
    8. 'total' → logprob: -3.9115281105041504
    9. 'compression' → logprob: -5.91152811050415
    10. 'parts' → logprob: -6.53652811050415

Token 226: ' La' (ID: 3038)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3243085145950317
    2. 'result' → logprob: -1.4493085145950317
    3. 'def' → logprob: -1.8243085145950317
    4. 'length' → logprob: -1.8243085145950317
    5. 'compressed' → logprob: -2.324308395385742
    6. 'total' → logprob: -3.449308395385742
    7. 'res' → logprob: -4.324308395385742
    8. ' length' → logprob: -5.074308395385742
    9. ' #' → logprob: -5.199308395385742
    10. 'compression' → logprob: -5.449308395385742

Token 227: ' compression' (ID: 41811)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.50588458776474
    2. 'result' → logprob: -2.5058846473693848
    3. '#' → logprob: -3.1308846473693848
    4. 'compressed' → logprob: -3.1308846473693848
    5. 'length' → logprob: -3.2558846473693848
    6. ' compressed' → logprob: -3.5058846473693848
    7. 'min' → logprob: -3.8808846473693848
    8. ' result' → logprob: -3.8808846473693848
    9. 'return' → logprob: -4.380884647369385
    10. '   ' → logprob: -4.380884647369385

Token 228: ' rem' (ID: 1662)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06071503087878227
    2. '_length' → logprob: -3.8107149600982666
    3. '_result' → logprob: -4.560715198516846
    4. '=' → logprob: -4.685715198516846
    5. 'result' → logprob: -4.685715198516846
    6. '   ' → logprob: -6.060715198516846
    7. 'length' → logprob: -6.560715198516846
    8. '_len' → logprob: -6.935715198516846
    9. ' result' → logprob: -7.060715198516846
    10. 'def' → logprob: -7.310715198516846

Token 229: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.18149858713150024
    2. 'plit' → logprob: -2.6814985275268555
    3. 'plac' → logprob: -3.8064985275268555
    4. 'placer' → logprob: -3.9314985275268555
    5. 'placement' → logprob: -4.1814985275268555
    6. 'ain' → logprob: -4.3064985275268555
    7. 'pl' → logprob: -4.8064985275268555
    8. 'ains' → logprob: -5.8064985275268555
    9. 'pla' → logprob: -5.8064985275268555
    10. 'onte' → logprob: -5.9314985275268555

Token 230: ' chaque' (ID: 21194)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.07423455268144608
    2. ' les' → logprob: -3.3242344856262207
    3. 'une' → logprob: -4.949234485626221
    4. ' chaque' → logprob: -5.074234485626221
    5. 'len' → logprob: -5.949234485626221
    6. '#' → logprob: -6.449234485626221
    7. 'des' → logprob: -6.449234485626221
    8. 'l' → logprob: -6.449234485626221
    9. 'each' → logprob: -6.574234485626221
    10. 'interval' → logprob: -6.699234485626221

Token 231: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.03361688181757927
    2. ' interval' → logprob: -3.533616781234741
    3. '(interval' → logprob: -6.03361701965332
    4. 'inter' → logprob: -6.90861701965332
    5. 'g' → logprob: -9.78361701965332
    6. ' groupe' → logprob: -9.90861701965332
    7. ' (' → logprob: -10.40861701965332
    8. ' interv' → logprob: -10.65861701965332
    9. 'sequence' → logprob: -10.84611701965332
    10. 'int' → logprob: -10.97111701965332

Token 232: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.01621607318520546
    2. 've' → logprob: -4.766216278076172
    3. 'val' → logprob: -5.141216278076172
    4. 'e' → logprob: -7.266216278076172
    5. 'vale' → logprob: -7.516216278076172
    6. 'v' → logprob: -8.391216278076172
    7. 'ale' → logprob: -9.891216278076172
    8. 'de' → logprob: -10.391216278076172
    9. 'va' → logprob: -10.641216278076172
    10. '(' → logprob: -11.141216278076172

Token 233: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.31439706683158875
    2. ' par' → logprob: -1.4393970966339111
    3. ' by' → logprob: -4.314396858215332
    4. 'by' → logprob: -4.564396858215332
    5. ' (' → logprob: -5.814396858215332
    6. '(par' → logprob: -6.689396858215332
    7. ' de' → logprob: -7.189396858215332
    8. 'de' → logprob: -7.564396858215332
    9. '(' → logprob: -7.939396858215332
    10. ' ' → logprob: -8.064396858215332

Token 234: ' "' (ID: 392)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.288917899131775
    2. '1' → logprob: -1.413917899131775
    3. 'le' → logprob: -2.0389180183410645
    4. ' f' → logprob: -2.2889180183410645
    5. ' ' → logprob: -2.9139180183410645
    6. '2' → logprob: -3.0389180183410645
    7. 'une' → logprob: -3.5389180183410645
    8. 'la' → logprob: -3.7889180183410645
    9. '3' → logprob: -4.0389180183410645
    10. ' le' → logprob: -4.5389180183410645

Token 235: 'x' (ID: 87)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.6183791756629944
    2. '"' → logprob: -2.2433791160583496
    3. 'start' → logprob: -2.3683791160583496
    4. '-' → logprob: -2.4933791160583496
    5. '{' → logprob: -2.4933791160583496
    6. '{"' → logprob: -3.2433791160583496
    7. '[start' → logprob: -4.11837911605835
    8. ''' → logprob: -4.49337911605835
    9. '[' → logprob: -4.61837911605835
    10. '-"' → logprob: -5.49337911605835

Token 236: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.09762167930603027
    2. '-x' → logprob: -3.5976216793060303
    3. '-start' → logprob: -3.5976216793060303
    4. '-' → logprob: -4.347621917724609
    5. '-z' → logprob: -5.222621917724609
    6. 'x' → logprob: -5.472621917724609
    7. 'start' → logprob: -5.722621917724609
    8. 'y' → logprob: -5.847621917724609
    9. '-end' → logprob: -6.347621917724609
    10. '-dé' → logprob: -6.597621917724609

Token 237: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06820064038038254
    2. ')"' → logprob: -3.0682005882263184
    3. '")' → logprob: -4.318200588226318
    4. ')' → logprob: -5.568200588226318
    5. ' "' → logprob: -7.443200588226318
    6. '-"' → logprob: -7.693200588226318
    7. '-' → logprob: -7.818200588226318
    8. '",' → logprob: -8.818201065063477
    9. ''"' → logprob: -9.568201065063477
    10. ',' → logprob: -9.693201065063477

Token 238: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40663984417915344
    2. 'length' → logprob: -1.531639814376831
    3. ' +' → logprob: -3.906639814376831
    4. '
' → logprob: -4.03164005279541
    5. ' length' → logprob: -4.28164005279541
    6. 'def' → logprob: -4.53164005279541
    7. ',' → logprob: -4.65664005279541
    8. 'len' → logprob: -5.28164005279541
    9. 'result' → logprob: -5.28164005279541
    10. '#' → logprob: -5.40664005279541

Token 239: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.23941855132579803
    2. ')' → logprob: -2.3644185066223145
    3. '2' → logprob: -3.7394185066223145
    4. 'x' → logprob: -4.4894185066223145
    5. 'def' → logprob: -4.6144185066223145
    6. ' or' → logprob: -4.7394185066223145
    7. '3' → logprob: -4.9894185066223145
    8. 'f' → logprob: -5.2394185066223145
    9. '1' → logprob: -5.3644185066223145
    10. '#' → logprob: -5.4894185066223145

Token 240: ' chars' (ID: 47991)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4394831657409668
    2. ' +' → logprob: -1.3144831657409668
    3. '3' → logprob: -3.564483165740967
    4. 'len' → logprob: -3.939483165740967
    5. ')' → logprob: -4.064483165740967
    6. ' plus' → logprob: -5.814483165740967
    7. '2' → logprob: -6.439483165740967
    8. '1' → logprob: -6.439483165740967
    9. 'length' → logprob: -6.439483165740967
    10. '*' → logprob: -6.564483165740967

Token 241: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06487004458904266
    2. '+' → logprob: -2.9398701190948486
    3. ')' → logprob: -5.0648698806762695
    4. ' plus' → logprob: -6.0648698806762695
    5. ' )' → logprob: -8.06486988067627
    6. '+)' → logprob: -8.68986988067627
    7. ',' → logprob: -8.81486988067627
    8. ' ' → logprob: -9.06486988067627
    9. ' ou' → logprob: -9.18986988067627
    10. '")' → logprob: -9.56486988067627

Token 242: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05636023357510567
    2. ' ' → logprob: -2.9313602447509766
    3. 'len' → logprob: -7.556360244750977
    4. '3' → logprob: -8.306360244750977
    5. '2' → logprob: -8.431360244750977
    6. ' (' → logprob: -9.181360244750977
    7. '-' → logprob: -9.431360244750977
    8. ' len' → logprob: -9.931360244750977
    9. ' -' → logprob: -10.181360244750977
    10. '```' → logprob: -10.181360244750977

Token 243: ' tire' (ID: 30796)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9558331370353699
    2. 'len' → logprob: -0.9558331370353699
    3. ''-' → logprob: -2.4558331966400146
    4. '-' → logprob: -3.0808331966400146
    5. ' ' → logprob: -3.4558331966400146
    6. 'nombre' → logprob: -4.3308329582214355
    7. ' '-'' → logprob: -4.5808329582214355
    8. ' (' → logprob: -5.5808329582214355
    9. ' nombre' → logprob: -5.5808329582214355
    10. ' -' → logprob: -5.7058329582214355

Token 244: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.018184710294008255
    2. '-' → logprob: -4.018184661865234
    3. 'n' → logprob: -11.143184661865234
    4. 'te' → logprob: -11.893184661865234
    5. 'ts' → logprob: -12.893184661865234
    6. 'u' → logprob: -13.393184661865234
    7. 'tte' → logprob: -13.643184661865234
    8. 's' → logprob: -13.768184661865234
    9. ''-' → logprob: -13.768184661865234
    10. 'ne' → logprob: -14.018184661865234

Token 245: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7163903117179871
    2. ' +' → logprob: -1.0913903713226318
    3. ')' → logprob: -1.8413903713226318
    4. '")' → logprob: -5.966390132904053
    5. ' )' → logprob: -6.216390132904053
    6. '+)' → logprob: -6.216390132904053
    7. 'length' → logprob: -6.341390132904053
    8. '),' → logprob: -6.466390132904053
    9. '   ' → logprob: -6.966390132904053
    10. ',' → logprob: -7.091390132904053

Token 246: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6639823317527771
    2. '1' → logprob: -1.0389823913574219
    3. ' ' → logprob: -2.038982391357422
    4. '2' → logprob: -7.413982391357422
    5. ')' → logprob: -7.913982391357422
    6. 'len' → logprob: -8.913982391357422
    7. ' )' → logprob: -10.038982391357422
    8. ' (' → logprob: -11.163982391357422
    9. '
' → logprob: -11.288982391357422
    10. '```' → logprob: -11.663982391357422

Token 247: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11312948167324066
    2. '1' → logprob: -2.4881293773651123
    3. ' ' → logprob: -3.7381293773651123
    4. '2' → logprob: -9.363129615783691
    5. 'len' → logprob: -11.863129615783691
    6. '```' → logprob: -13.113129615783691
    7. ')' → logprob: -14.050629615783691
    8. '-' → logprob: -14.238129615783691
    9. 'length' → logprob: -14.488129615783691
    10. '4' → logprob: -14.550629615783691

Token 248: ' chars' (ID: 47991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07456386834383011
    2. ' )' → logprob: -3.824563980102539
    3. ' +' → logprob: -4.699563980102539
    4. '2' → logprob: -4.699563980102539
    5. 'length' → logprob: -4.699563980102539
    6. '3' → logprob: -4.949563980102539
    7. '+' → logprob: -5.949563980102539
    8. 'chars' → logprob: -6.074563980102539
    9. 'len' → logprob: -6.199563980102539
    10. ' chars' → logprob: -6.324563980102539

Token 249: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16964077949523926
    2. ' +' → logprob: -2.5446407794952393
    3. '+' → logprob: -3.4196407794952393
    4. '   ' → logprob: -3.5446407794952393
    5. ' plus' → logprob: -5.41964054107666
    6. ' )' → logprob: -6.41964054107666
    7. '#' → logprob: -6.54464054107666
    8. ',' → logprob: -6.54464054107666
    9. ')
' → logprob: -6.91964054107666
    10. ')+' → logprob: -7.04464054107666

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30820298194885254
    2. 'length' → logprob: -2.0582029819488525
    3. '
' → logprob: -2.9332029819488525
    4. ' length' → logprob: -3.4332029819488525
    5. 'compressed' → logprob: -3.8082029819488525
    6. 'result' → logprob: -4.183202743530273
    7. '#' → logprob: -5.433202743530273
    8. ' compressed' → logprob: -6.308202743530273
    9. 'total' → logprob: -6.683202743530273
    10. 'return' → logprob: -6.683202743530273

Token 251: ' #' (ID: 1069)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5152976512908936
    2. 'compressed' → logprob: -1.5152976512908936
    3. ' length' → logprob: -2.5152976512908936
    4. '   ' → logprob: -3.3902976512908936
    5. 'total' → logprob: -3.5152976512908936
    6. 'result' → logprob: -4.390297889709473
    7. ' compressed' → logprob: -4.765297889709473
    8. '#' (adapté à ' #') → logprob: -5.265297889709473
    9. 'return' → logprob: -5.640297889709473
    10. ' total' → logprob: -5.765297889709473

Token 252: ' mais' (ID: 2899)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7125748991966248
    2. 'compressed' → logprob: -0.9625748991966248
    3. 'total' → logprob: -2.8375749588012695
    4. ' length' → logprob: -3.8375749588012695
    5. 'result' → logprob: -4.7125749588012695
    6. ' compressed' → logprob: -4.8375749588012695
    7. '#' → logprob: -4.9625749588012695
    8. '   ' → logprob: -5.0875749588012695
    9. ' total' → logprob: -5.8375749588012695
    10. 'compression' → logprob: -5.8375749588012695

Token 253: ' si' (ID: 1784)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.9393658638000488
    2. ' si' → logprob: -2.314365863800049
    3. ' if' → logprob: -2.439365863800049
    4. ' il' → logprob: -2.689365863800049
    5. '#' → logprob: -2.814365863800049
    6. 'if' → logprob: -2.939365863800049
    7. ' le' → logprob: -3.064365863800049
    8. ' on' → logprob: -3.064365863800049
    9. 'on' → logprob: -3.314365863800049
    10. ' seulement' → logprob: -3.564365863800049

Token 254: ' l' (ID: 305)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.838323712348938
    2. 'start' → logprob: -0.963323712348938
    3. 'x' → logprob: -1.838323712348938
    4. ' x' → logprob: -4.338323593139648
    5. 'l' → logprob: -5.213323593139648
    6. ' l' → logprob: -5.713323593139648
    7. 'len' → logprob: -6.588323593139648
    8. ' les' → logprob: -7.463323593139648
    9. ' la' → logprob: -7.713323593139648
    10. ' le' → logprob: -7.713323593139648

Token 255: ''' (ID: 6)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.7293866276741028
    2. ''' → logprob: -2.104386568069458
    3. 'e' → logprob: -2.104386568069458
    4. ''inter' → logprob: -2.354386568069458
    5. 'a' → logprob: -2.604386568069458
    6. 'es' → logprob: -3.354386568069458
    7. 'len' → logprob: -3.729386568069458
    8. ' interval' → logprob: -4.604386806488037
    9. 'inter' → logprob: -4.604386806488037
    10. '(interval' → logprob: -5.104386806488037

Token 256: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.005420515313744545
    2. ' interval' → logprob: -6.255420684814453
    3. 'len' → logprob: -6.255420684814453
    4. 'inter' → logprob: -7.380420684814453
    5. 'length' → logprob: -9.005420684814453
    6. 'a' → logprob: -9.255420684814453
    7. 'range' → logprob: -9.380420684814453
    8. 'long' → logprob: -9.505420684814453
    9. '(interval' → logprob: -9.880420684814453
    10. ''' → logprob: -10.005420684814453

Token 257: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1455579996109009
    2. 'le' → logprob: -1.1455579996109009
    3. 've' → logprob: -1.5205579996109009
    4. 'val' → logprob: -2.1455578804016113
    5. 'vale' → logprob: -4.020557880401611
    6. 'ce' → logprob: -5.395557880401611
    7. 'v' → logprob: -6.020557880401611
    8. 'ale' → logprob: -7.395557880401611
    9. 'eve' → logprob: -7.645557880401611
    10. 'ève' → logprob: -8.27055835723877

Token 258: ' ne' (ID: 453)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.26785752177238464
    2. ' est' → logprob: -1.517857551574707
    3. 'a' → logprob: -4.892857551574707
    4. 's' → logprob: -5.767857551574707
    5. ' is' → logprob: -6.892857551574707
    6. ' a' → logprob: -7.392857551574707
    7. 'se' → logprob: -7.517857551574707
    8. 'is' → logprob: -7.767857551574707
    9. 'start' → logprob: -7.892857551574707
    10. ' se' → logprob: -8.017857551574707

Token 259: ' fait' (ID: 7473)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.5995612740516663
    2. ' contient' → logprob: -1.8495612144470215
    3. 'cont' → logprob: -2.4745612144470215
    4. 'a' → logprob: -2.5995612144470215
    5. 's' → logprob: -2.5995612144470215
    6. 'x' → logprob: -4.4745612144470215
    7. 'compr' → logprob: -4.4745612144470215
    8. ' est' → logprob: -4.7245612144470215
    9. 'se' → logprob: -4.8495612144470215
    10. ' comporte' → logprob: -5.3495612144470215

Token 260: ' qu' (ID: 474)
  Prédit: ' qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qu' → logprob: -0.8868882656097412
    2. '1' → logprob: -2.136888265609741
    3. 'qu' → logprob: -2.136888265609741
    4. 'pas' → logprob: -2.136888265609741
    5. ' que' → logprob: -2.386888265609741
    6. 'que' → logprob: -2.511888265609741
    7. 'un' → logprob: -4.13688850402832
    8. 'plus' → logprob: -4.38688850402832
    9. 'une' → logprob: -4.76188850402832
    10. 'moins' → logprob: -5.01188850402832

Token 261: ''une' (ID: 13337)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.0398661233484745
    2. ''une' → logprob: -3.2898662090301514
    3. 'un' → logprob: -7.039865970611572
    4. '1' → logprob: -7.289865970611572
    5. 'e' → logprob: -9.28986644744873
    6. '’un' → logprob: -9.53986644744873
    7. 'une' → logprob: -10.41486644744873
    8. 'a' → logprob: -10.53986644744873
    9. ''au' → logprob: -11.53986644744873
    10. 'u' → logprob: -11.91486644744873

Token 262: ' lettre' (ID: 68013)
  Prédit: ' lettre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lettre' → logprob: -0.3144384026527405
    2. 'le' → logprob: -2.5644383430480957
    3. 'lett' → logprob: -2.5644383430480957
    4. ' seule' → logprob: -3.0644383430480957
    5. ' ' → logprob: -3.3144383430480957
    6. 'char' → logprob: -4.939438343048096
    7. 'let' → logprob: -5.439438343048096
    8. ' seul' → logprob: -6.189438343048096
    9. 'a' → logprob: -6.189438343048096
    10. 'se' → logprob: -6.189438343048096

Token 263: '/ch' (ID: 43491)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.06829439103603363
    2. ',' → logprob: -2.9432942867279053
    3. '   ' → logprob: -5.443294525146484
    4. ' or' → logprob: -5.693294525146484
    5. 'ou' → logprob: -6.318294525146484
    6. ' ,' → logprob: -6.568294525146484
    7. ' (' → logprob: -7.068294525146484
    8. 's' → logprob: -7.943294525146484
    9. 'e' → logprob: -8.443294525146484
    10. ' seule' → logprob: -8.818294525146484

Token 264: 'iff' (ID: 4443)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0012564226053655148
    2. 'arle' → logprob: -8.501255989074707
    3. 'a' → logprob: -8.626255989074707
    4. 'arse' → logprob: -8.876255989074707
    5. '```' → logprob: -8.876255989074707
    6. '   ' → logprob: -9.501255989074707
    7. 'aré' → logprob: -9.501255989074707
    8. 'r' → logprob: -9.501255989074707
    9. 'are' → logprob: -9.751255989074707
    10. 'arc' → logprob: -9.751255989074707

Token 265: 're' (ID: 264)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.27187690138816833
    2. 're' → logprob: -1.5218769311904907
    3. 'ar' → logprob: -4.021876811981201
    4. 'er' → logprob: -7.521876811981201
    5. 'r' → logprob: -7.521876811981201
    6. 'are' → logprob: -8.64687728881836
    7. '```' → logprob: -8.64687728881836
    8. '
' → logprob: -9.27187728881836
    9. 'ere' → logprob: -9.64687728881836
    10. '   ' → logprob: -10.02187728881836

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025878820568323135
    2. 's' → logprob: -4.77587890625
    3. ' ,' → logprob: -5.15087890625
    4. '   ' → logprob: -5.52587890625
    5. ':' → logprob: -6.40087890625
    6. ' (' → logprob: -6.52587890625
    7. '(s' → logprob: -7.15087890625
    8. ')' → logprob: -7.40087890625
    9. ' s' → logprob: -7.65087890625
    10. ',
' → logprob: -7.90087890625

Token 267: ' on' (ID: 402)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7880935072898865
    2. ' length' → logprob: -0.9130935072898865
    3. '   ' → logprob: -3.2880935668945312
    4. 'count' → logprob: -3.7880935668945312
    5. ' count' → logprob: -4.288093566894531
    6. '#' → logprob: -4.413093566894531
    7. ' continue' → logprob: -4.913093566894531
    8. 'result' → logprob: -5.163093566894531
    9. ' longueur' → logprob: -5.288093566894531
    10. ' result' → logprob: -5.413093566894531

Token 268: ' garde' (ID: 65309)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.6468383073806763
    2. 'len' → logprob: -2.0218381881713867
    3. ' compte' → logprob: -2.2718381881713867
    4. 'aj' → logprob: -2.8968381881713867
    5. 'g' → logprob: -3.1468381881713867
    6. ' ajoute' → logprob: -3.1468381881713867
    7. 'é' → logprob: -3.8968381881713867
    8. 'le' → logprob: -4.771838188171387
    9. 'encode' → logprob: -4.896838188171387
    10. ' comp' → logprob: -4.896838188171387

Token 269: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9225335717201233
    2. 'len' → logprob: -0.9225335717201233
    3. ' len' → logprob: -2.6725335121154785
    4. 'la' → logprob: -3.1725335121154785
    5. '   ' → logprob: -3.7975335121154785
    6. 'le' → logprob: -3.7975335121154785
    7. 'c' → logprob: -4.1725335121154785
    8. 'l' → logprob: -4.6725335121154785
    9. 'interval' → logprob: -4.7975335121154785
    10. ' la' → logprob: -5.1725335121154785

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01451321505010128
    2. 'le' → logprob: -5.38951301574707
    3. 'len' → logprob: -5.63951301574707
    4. 'la' → logprob: -5.76451301574707
    5. ' ' → logprob: -6.51451301574707
    6. 'c' → logprob: -7.26451301574707
    7. 'l' → logprob: -7.88951301574707
    8. ' la' → logprob: -8.76451301574707
    9. 'se' → logprob: -9.13951301574707
    10. ' len' → logprob: -9.26451301574707

Token 271: ' caractère' (ID: 80509)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.2521284818649292
    2. ' length' → logprob: -1.3771284818649292
    3. '   ' → logprob: -1.5021284818649292
    4. '
' → logprob: -1.7521284818649292
    5. 'compressed' → logprob: -3.5021286010742188
    6. '    
' → logprob: -5.002128601074219
    7. ' compressed' → logprob: -5.002128601074219
    8. 'total' → logprob: -5.377128601074219
    9. 'result' → logprob: -5.502128601074219
    10. 'def' → logprob: -5.627128601074219

Token 272: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7112557888031006
    2. '
' → logprob: -1.5862557888031006
    3. 'length' → logprob: -1.5862557888031006
    4. 'compressed' → logprob: -3.4612557888031006
    5. ' length' → logprob: -3.5862557888031006
    6. '    
' → logprob: -3.7112557888031006
    7. 'total' → logprob: -5.08625602722168
    8. 'result' → logprob: -5.21125602722168
    9. ' compressed' → logprob: -6.71125602722168
    10. 'def' → logprob: -7.71125602722168

Token 273: '   ' (ID: 271)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.9354259371757507
    2. '   ' → logprob: -1.3104259967803955
    3. 'compressed' → logprob: -1.5604259967803955
    4. 'total' → logprob: -3.3104259967803955
    5. ' length' → logprob: -3.3104259967803955
    6. 'result' → logprob: -3.4354259967803955
    7. ' compressed' → logprob: -4.560425758361816
    8. ' total' → logprob: -5.685425758361816
    9. 'res' → logprob: -6.060425758361816
    10. '
' → logprob: -6.185425758361816

Token 274: ' #' (ID: 1069)
  Prédit: 'compressed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compressed' → logprob: -0.7111990451812744
    2. 'length' → logprob: -0.9611990451812744
    3. 'result' → logprob: -3.0861990451812744
    4. 'total' → logprob: -3.3361990451812744
    5. 'def' → logprob: -4.336198806762695
    6. '   ' → logprob: -4.461198806762695
    7. 'res' → logprob: -4.711198806762695
    8. 'min' → logprob: -5.711198806762695
    9. ' length' → logprob: -5.961198806762695
    10. ' compressed' → logprob: -6.211198806762695

Token 275: ' Donc' (ID: 88837)
  Prédit: 'compressed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compressed' → logprob: -1.0273808240890503
    2. 'length' → logprob: -1.1523808240890503
    3. 'def' → logprob: -1.6523808240890503
    4. 'total' → logprob: -2.77738094329834
    5. 'result' → logprob: -3.40238094329834
    6. '   ' → logprob: -4.77738094329834
    7. 'res' → logprob: -4.90238094329834
    8. 'letter' → logprob: -5.40238094329834
    9. ' length' → logprob: -5.65238094329834
    10. 'min' → logprob: -5.77738094329834

Token 276: ',' (ID: 11)
  Prédit: 'compressed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compressed' → logprob: -0.9380887150764465
    2. ' compressed' → logprob: -1.9380886554718018
    3. ' length' → logprob: -2.1880886554718018
    4. 'length' → logprob: -2.3130886554718018
    5. '   ' → logprob: -2.5630886554718018
    6. ' total' → logprob: -2.6880886554718018
    7. 'total' → logprob: -2.9380886554718018
    8. 'def' → logprob: -4.313088893890381
    9. 'min' → logprob: -4.688088893890381
    10. ' def' → logprob: -4.688088893890381

Token 277: ' pour' (ID: 1930)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.9042371511459351
    2. 'compressed' → logprob: -1.279237151145935
    3. 'def' → logprob: -2.2792372703552246
    4. ' length' → logprob: -2.5292372703552246
    5. ' compressed' → logprob: -3.1542372703552246
    6. ' def' → logprob: -3.2792372703552246
    7. 'total' → logprob: -3.5292372703552246
    8. '   ' → logprob: -4.779237270355225
    9. ' total' → logprob: -5.154237270355225
    10. 'result' → logprob: -5.279237270355225

Token 278: ' chaque' (ID: 21194)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.7110674977302551
    2. ' interval' → logprob: -1.3360674381256104
    3. ' chaque' → logprob: -2.4610674381256104
    4. 'l' → logprob: -2.7110674381256104
    5. ' l' → logprob: -3.2110674381256104
    6. 'i' → logprob: -4.7110676765441895
    7. 'c' → logprob: -4.7110676765441895
    8. 'each' → logprob: -4.9610676765441895
    9. ' c' → logprob: -5.0860676765441895
    10. 'letter' → logprob: -5.4610676765441895

Token 279: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.049540773034095764
    2. ' interval' → logprob: -3.0495407581329346
    3. 'inter' → logprob: -7.799540996551514
    4. 'i' → logprob: -8.674540519714355
    5. '(interval' → logprob: -8.674540519714355
    6. 'int' → logprob: -9.424540519714355
    7. ' interv' → logprob: -9.924540519714355
    8. ' intervalo' → logprob: -10.924540519714355
    9. ' i' → logprob: -11.174540519714355
    10. 'intr' → logprob: -12.549540519714355

Token 280: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.33999940752983093
    2. 'le' → logprob: -2.0899994373321533
    3. 'ale' → logprob: -2.8399994373321533
    4. 'e' → logprob: -3.0899994373321533
    5. 'vale' → logprob: -3.2149994373321533
    6. 've' → logprob: -4.589999198913574
    7. 'v' → logprob: -5.089999198913574
    8. 'al' → logprob: -6.964999198913574
    9. 'ule' → logprob: -7.589999198913574
    10. 'vel' → logprob: -7.714999198913574

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8197374939918518
    2. 'length' → logprob: -1.444737434387207
    3. ':' → logprob: -2.444737434387207
    4. '_length' → logprob: -2.819737434387207
    5. ':
' → logprob: -3.069737434387207
    6. '   ' → logprob: -3.194737434387207
    7. ' length' → logprob: -3.694737434387207
    8. 'len' → logprob: -4.069737434387207
    9. 'in' → logprob: -4.319737434387207
    10. 'for' → logprob: -5.319737434387207

Token 282: ' la' (ID: 557)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3572734594345093
    2. ' length' → logprob: -1.4822734594345093
    3. 'compressed' → logprob: -3.482273578643799
    4. 'total' → logprob: -4.232273578643799
    5. '   ' → logprob: -4.732273578643799
    6. ' compressed' → logprob: -4.982273578643799
    7. ' total' → logprob: -5.482273578643799
    8. 'result' → logprob: -6.357273578643799
    9. ' if' → logprob: -6.482273578643799
    10. 'res' → logprob: -6.482273578643799

Token 283: ' longueur' (ID: 104613)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0941333994269371
    2. 'compressed' → logprob: -3.7191333770751953
    3. ' length' → logprob: -4.094133377075195
    4. 'def' → logprob: -4.344133377075195
    5. 'compression' → logprob: -4.594133377075195
    6. 'long' → logprob: -4.594133377075195
    7. 'total' → logprob: -5.844133377075195
    8. 'result' → logprob: -5.969133377075195
    9. ' longueur' → logprob: -5.969133377075195
    10. 'tail' → logprob: -6.094133377075195

Token 284: ' compress' (ID: 34112)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04602617397904396
    2. ' +=' → logprob: -3.1710262298583984
    3. '=' → logprob: -6.046026229858398
    4. 'est' → logprob: -8.171026229858398
    5. 'total' → logprob: -9.296026229858398
    6. '+' → logprob: -9.421026229858398
    7. '   ' → logprob: -9.671026229858398
    8. ' =' → logprob: -10.296026229858398
    9. 's' → logprob: -10.671026229858398
    10. '_est' → logprob: -11.546026229858398

Token 285: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.016151554882526398
    2. 'ee' → logprob: -4.516151428222656
    3. 'é' → logprob: -5.766151428222656
    4. 'e' → logprob: -6.266151428222656
    5. 'ed' → logprob: -11.016151428222656
    6. '   ' → logprob: -11.391151428222656
    7. '#' → logprob: -12.641151428222656
    8. 'lée' → logprob: -12.766151428222656
    9. '�' → logprob: -13.141151428222656
    10. 'és' → logprob: -13.266151428222656

Token 286: ' est' (ID: 893)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018691575154662132
    2. ' +=' → logprob: -4.393691539764404
    3. '=' → logprob: -5.143691539764404
    4. '   ' → logprob: -8.268692016601562
    5. '+' → logprob: -10.393692016601562
    6. ' =' → logprob: -11.393692016601562
    7. '+=(' → logprob: -11.518692016601562
    8. 'est' → logprob: -13.268692016601562
    9. ']+=' → logprob: -13.393692016601562
    10. 'len' → logprob: -13.518692016601562

Token 287: '
' (ID: 198)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7423631548881531
    2. '1' → logprob: -1.2423632144927979
    3. '   ' → logprob: -2.742363214492798
    4. '(' → logprob: -3.242363214492798
    5. 'sum' → logprob: -3.367363214492798
    6. ' ' → logprob: -3.742363214492798
    7. ' (' → logprob: -3.992363214492798
    8. ' sum' → logprob: -4.117362976074219
    9. 'interval' → logprob: -4.617362976074219
    10. 'len' → logprob: -5.117362976074219

Token 288: '   ' (ID: 271)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.2667998969554901
    2. '   ' → logprob: -2.2667999267578125
    3. 'sum' → logprob: -2.5167999267578125
    4. ' def' → logprob: -4.3917999267578125
    5. ' len' → logprob: -4.3917999267578125
    6. '0' → logprob: -5.7667999267578125
    7. '3' → logprob: -6.0167999267578125
    8. ' length' → logprob: -6.0167999267578125
    9. 'def' → logprob: -6.0167999267578125
    10. ' (' → logprob: -6.2667999267578125

Token 289: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.15695181488990784
    2. ' sum' → logprob: -3.281951904296875
    3. '   ' → logprob: -3.531951904296875
    4. 'def' → logprob: -3.656951904296875
    5. 'length' → logprob: -4.281951904296875
    6. 'len' → logprob: -4.656951904296875
    7. '3' → logprob: -4.781951904296875
    8. '
' → logprob: -5.031951904296875
    9. 'result' → logprob: -5.906951904296875
    10. 'interval' → logprob: -6.406951904296875

Token 290: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.09624996781349182
    2. '   ' → logprob: -3.846250057220459
    3. 'lambda' → logprob: -4.096250057220459
    4. '3' → logprob: -4.096250057220459
    5. ' sum' → logprob: -4.096250057220459
    6. 'def' → logprob: -4.721250057220459
    7. '(lambda' → logprob: -5.471250057220459
    8. '(sum' → logprob: -6.096250057220459
    9. ' lambda' → logprob: -6.471250057220459
    10. 'interval' → logprob: -6.971250057220459

Token 291: '3' (ID: 18)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.14604081213474274
    2. '3' → logprob: -2.521040916442871
    3. 'lambda' → logprob: -4.021040916442871
    4. '(lambda' → logprob: -4.146040916442871
    5. '(sum' → logprob: -4.896040916442871
    6. '(' → logprob: -5.646040916442871
    7. '   ' → logprob: -6.021040916442871
    8. ' sum' → logprob: -6.021040916442871
    9. 'interval' → logprob: -6.521040916442871
    10. '1' → logprob: -6.896040916442871

Token 292: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2519318461418152
    2. 'if' → logprob: -1.50193190574646
    3. '   ' → logprob: -14.001932144165039
    4. ' ' → logprob: -14.376932144165039
    5. '+' → logprob: -15.251932144165039
    6. '	if' → logprob: -15.251932144165039
    7. ' +' → logprob: -15.751932144165039
    8. '*' → logprob: -16.12693214416504
    9. '
' → logprob: -16.12693214416504
    10. '  ' → logprob: -16.62693214416504

Token 293: ' long' (ID: 1701)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.15784859657287598
    2. ' start' → logprob: -2.032848596572876
    3. 'interval' → logprob: -5.282848358154297
    4. 'end' → logprob: -5.532848358154297
    5. 'ord' → logprob: -5.532848358154297
    6. ' end' → logprob: -7.157848358154297
    7. ' ord' → logprob: -7.657848358154297
    8. ' interval' → logprob: -8.282848358154297
    9. '(start' → logprob: -8.907848358154297
    10. 'letter' → logprob: -9.032848358154297

Token 294: ' interval' (ID: 17116)
  Prédit: 'ueur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.026162343099713326
    2. '(interval' → logprob: -3.9011623859405518
    3. 'eur' → logprob: -6.151162147521973
    4. 'ue' → logprob: -6.901162147521973
    5. '(' → logprob: -7.026162147521973
    6. '(e' → logprob: -7.776162147521973
    7. 'e' → logprob: -8.026162147521973
    8. '(inter' → logprob: -8.151162147521973
    9. 'er' → logprob: -8.901162147521973
    10. 'uer' → logprob: -9.151162147521973

Token 295: 'le' (ID: 282)
  Prédit: 'ueur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.413072407245636
    2. 'ue' → logprob: -1.2880723476409912
    3. 'e' → logprob: -2.913072347640991
    4. '(interval' → logprob: -5.66307258605957
    5. 'le' → logprob: -6.78807258605957
    6. '>' → logprob: -6.78807258605957
    7. 'eur' → logprob: -6.91307258605957
    8. '>=' → logprob: -7.91307258605957
    9. 'er' → logprob: -8.41307258605957
    10. '(' → logprob: -8.91307258605957

Token 296: ' (' (ID: 350)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.13644061982631683
    2. ' >' → logprob: -2.2614405155181885
    3. 'else' → logprob: -4.511440753936768
    4. ' else' → logprob: -5.386440753936768
    5. '>=' → logprob: -5.886440753936768
    6. 'e' → logprob: -6.761440753936768
    7. 's' → logprob: -7.136440753936768
    8. ' >=' → logprob: -7.636440753936768
    9. ' and' → logprob: -7.761440753936768
    10. ',' → logprob: -7.886440753936768

Token 297: 'diff' (ID: 31460)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6265680193901062
    2. 'interval' → logprob: -1.251568078994751
    3. 'prev' → logprob: -2.126568078994751
    4. 'end' → logprob: -3.126568078994751
    5. '>' → logprob: -5.501567840576172
    6. ' start' → logprob: -5.751567840576172
    7. 'letter' → logprob: -5.876567840576172
    8. 'len' → logprob: -6.251567840576172
    9. ' intervals' → logprob: -6.876567840576172
    10. ' prev' → logprob: -7.751567840576172

Token 298: ' >' (ID: 1424)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.05578012391924858
    2. 'e' → logprob: -3.6807801723480225
    3. '(e' → logprob: -5.055779933929443
    4. '>' → logprob: -5.180779933929443
    5. '(interval' → logprob: -5.180779933929443
    6. 'ér' → logprob: -5.430779933929443
    7. '(' → logprob: -6.055779933929443
    8. '>=' → logprob: -6.805779933929443
    9. 'érence' → logprob: -7.680779933929443
    10. 'èr' → logprob: -7.805779933929443

Token 299: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1540786623954773
    2. '0' → logprob: -2.404078722000122
    3. '=' → logprob: -3.029078722000122
    4. ' ' → logprob: -5.529078483581543
    5. ' =' → logprob: -10.404078483581543
    6. '>' → logprob: -10.529078483581543
    7. ')' → logprob: -11.154078483581543
    8. 'start' → logprob: -11.404078483581543
    9. '(' → logprob: -11.654078483581543
    10. '   ' → logprob: -12.154078483581543

Token 300: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6351735591888428
    2. '1' → logprob: -0.7601735591888428
    3. ' ' → logprob: -6.135173797607422
    4. 'start' → logprob: -8.635173797607422
    5. '=' → logprob: -8.760173797607422
    6. '>' → logprob: -10.760173797607422
    7. '
' → logprob: -11.885173797607422
    8. '(' → logprob: -12.260173797607422
    9. '(start' → logprob: -12.322673797607422
    10. ' =' → logprob: -12.947673797607422

Token 301: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5297916531562805
    2. '),' → logprob: -1.4047915935516357
    3. ' else' → logprob: -1.9047915935516357
    4. 'else' → logprob: -4.779791831970215
    5. ' )' → logprob: -6.029791831970215
    6. ' ),' → logprob: -6.154791831970215
    7. '   ' → logprob: -6.529791831970215
    8. ' ' → logprob: -7.154791831970215
    9. ' or' → logprob: -7.779791831970215
    10. '    ' → logprob: -8.154791831970215

Token 302: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3749469816684723
    2. '#' → logprob: -2.3749470710754395
    3. '1' → logprob: -2.4999470710754395
    4. '3' → logprob: -2.9999470710754395
    5. '2' → logprob: -3.7499470710754395
    6. 'len' → logprob: -4.2499470710754395
    7. 'else' → logprob: -4.2499470710754395
    8. ' ' → logprob: -4.8749470710754395
    9. 'def' → logprob: -5.1249470710754395
    10. ' else' → logprob: -5.6249470710754395

Token 303: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.504040356958285e-05
    2. ' ' → logprob: -9.750064849853516
    3. '   ' → logprob: -12.125064849853516
    4. 'len' → logprob: -13.875064849853516
    5. '
' → logprob: -15.125064849853516
    6. '  ' → logprob: -17.000064849853516
    7. 'length' → logprob: -17.000064849853516
    8. '    ' → logprob: -17.500064849853516
    9. '```' → logprob: -18.500064849853516
    10. '2' → logprob: -18.875064849853516

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0219828002154827e-05
    2. ' ' → logprob: -10.875020027160645
    3. 'len' → logprob: -14.000020027160645
    4. '
' → logprob: -15.625020027160645
    5. '   ' → logprob: -15.875020027160645
    6. 'length' → logprob: -17.43752098083496
    7. '```' → logprob: -17.75002098083496
    8. '2' → logprob: -18.18752098083496
    9. '

' → logprob: -18.50002098083496
    10. '１' → logprob: -18.68752098083496

Token 305: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.087600938975811
    2. 'length' → logprob: -3.4626009464263916
    3. '    
' → logprob: -3.7126009464263916
    4. 'compressed' → logprob: -4.0876007080078125
    5. '
' → logprob: -5.4626007080078125
    6. 'def' → logprob: -5.4626007080078125
    7. 'result' → logprob: -6.9626007080078125
    8. 'total' → logprob: -7.4626007080078125
    9. ' length' → logprob: -7.7126007080078125
    10. 'len' → logprob: -8.462600708007812

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5529366135597229
    2. 'length' → logprob: -1.4279365539550781
    3. 'compressed' → logprob: -1.9279365539550781
    4. ' length' → logprob: -4.177936553955078
    5. 'result' → logprob: -4.927936553955078
    6. 'total' → logprob: -5.302936553955078
    7. ' compressed' → logprob: -5.677936553955078
    8. '    
' → logprob: -5.677936553955078
    9. 'def' → logprob: -6.177936553955078
    10. '
' → logprob: -6.552936553955078

Token 307: ' def' (ID: 1056)
  Prédit: 'compressed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compressed' → logprob: -0.36962297558784485
    2. 'length' → logprob: -1.6196229457855225
    3. '   ' → logprob: -3.2446229457855225
    4. 'result' → logprob: -4.119623184204102
    5. ' compressed' → logprob: -4.119623184204102
    6. 'total' → logprob: -4.244623184204102
    7. ' length' → logprob: -4.494623184204102
    8. 'def' (adapté à ' def') → logprob: -4.619623184204102
    9. 'res' → logprob: -6.369623184204102
    10. ' total' → logprob: -7.369623184204102

Token 308: ' compressed' (ID: 58419)
  Prédit: ' compressed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compressed' → logprob: -0.6787254810333252
    2. 'compressed' → logprob: -0.8037254810333252
    3. 'interval' → logprob: -4.053725242614746
    4. ' interval' → logprob: -4.303725242614746
    5. 'compress' → logprob: -4.803725242614746
    6. ' compress' → logprob: -5.678725242614746
    7. ' compression' → logprob: -7.678725242614746
    8. ' get' → logprob: -7.678725242614746
    9. ' length' → logprob: -7.928725242614746
    10. 'compression' → logprob: -7.928725242614746

Token 309: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.001453567179851234
    2. '_len' → logprob: -6.626453399658203
    3. '_size' → logprob: -9.626453399658203
    4. '_lengths' → logprob: -11.001453399658203
    5. '_' → logprob: -11.126453399658203
    6. '_interval' → logprob: -11.876453399658203
    7. '_count' → logprob: -12.126453399658203
    8. '_inter' → logprob: -12.126453399658203
    9. ' _' → logprob: -13.501453399658203
    10. '_l' → logprob: -13.626453399658203

Token 310: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.0010076811304315925
    2. '(inter' → logprob: -7.501007556915283
    3. '(start' → logprob: -8.626008033752441
    4. '(range' → logprob: -9.501008033752441
    5. '(s' → logprob: -9.751008033752441
    6. ' (' → logprob: -10.251008033752441
    7. '(' → logprob: -10.251008033752441
    8. '(r' → logprob: -10.376008033752441
    9. '(length' → logprob: -11.001008033752441
    10. '(chars' → logprob: -11.876008033752441

Token 311: 's' (ID: 82)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.5804919600486755
    2. 'al' → logprob: -1.4554920196533203
    3. 'val' → logprob: -2.7054920196533203
    4. 's' → logprob: -2.9554920196533203
    5. ')' → logprob: -3.0804920196533203
    6. 'vals' → logprob: -3.3304920196533203
    7. '):
' → logprob: -6.33049201965332
    8. ')
' → logprob: -6.58049201965332
    9. '):' → logprob: -6.95549201965332
    10. '   ' → logprob: -7.58049201965332

Token 312: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004091816488653421
    2. '):
' → logprob: -5.504091739654541
    3. '):
' → logprob: -11.7540922164917
    4. ')' → logprob: -12.3790922164917
    5. ':' → logprob: -14.5040922164917
    6. '   ' → logprob: -15.1290922164917
    7. ' ):' → logprob: -16.004091262817383
    8. '):

' → logprob: -16.129091262817383
    9. 's' → logprob: -16.254091262817383
    10. '(interval' → logprob: -16.379091262817383

Token 313: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18543130159378052
    2. 'length' → logprob: -1.8104312419891357
    3. ' length' → logprob: -6.060431480407715
    4. '       ' → logprob: -6.185431480407715
    5. 'total' → logprob: -7.935431480407715
    6. 'return' → logprob: -8.060431480407715
    7. 'l' → logprob: -9.185431480407715
    8. 'len' → logprob: -9.185431480407715
    9. '    ' → logprob: -10.060431480407715
    10. 'result' → logprob: -10.185431480407715

Token 314: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.007046406157314777
    2. 'total' → logprob: -5.757046222686768
    3. '   ' → logprob: -6.257046222686768
    4. ' length' → logprob: -6.507046222686768
    5. 'return' → logprob: -7.757046222686768
    6. ' total' → logprob: -11.132046699523926
    7. 'l' → logprob: -12.757046699523926
    8. '       ' → logprob: -13.007046699523926
    9. 'leng' → logprob: -14.007046699523926
    10. 'result' → logprob: -14.257046699523926

Token 315: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380503311753273
    2. ' =' → logprob: -3.288050413131714
    3. '   ' → logprob: -11.913050651550293
    4. ' ' → logprob: -13.913050651550293
    5. 's' → logprob: -15.038050651550293
    6. '(' → logprob: -15.663050651550293
    7. '=
' → logprob: -15.913050651550293
    8. '       ' → logprob: -16.163049697875977
    9. ' +=' → logprob: -16.163049697875977
    10. '):' → logprob: -16.288049697875977

Token 316: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00462154159322381
    2. ' ' → logprob: -5.379621505737305
    3. '   ' → logprob: -14.379621505737305
    4. ' sum' → logprob: -15.004621505737305
    5. 'sum' → logprob: -15.254621505737305
    6. 'len' → logprob: -16.629621505737305
    7. '  ' → logprob: -17.379621505737305
    8. ' ' → logprob: -18.004621505737305
    9. '       ' → logprob: -18.004621505737305
    10. ' len' → logprob: -18.379621505737305

Token 317: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. 'sum' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.250001907348633
    4. 'len' → logprob: -18.500001907348633
    5. '   ' → logprob: -18.625001907348633
    6. '۰' → logprob: -20.375001907348633
    7. '```' → logprob: -20.625001907348633
    8. '０' → logprob: -20.750001907348633
    9. '1' → logprob: -21.000001907348633
    10. ' sum' → logprob: -21.312501907348633

Token 318: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11179637163877487
    2. ' for' → logprob: -2.7367963790893555
    3. '   ' → logprob: -3.7367963790893555
    4. 'for' → logprob: -4.4867963790893555
    5. '       ' → logprob: -5.9867963790893555
    6. '    
' → logprob: -6.3617963790893555
    7. '	for' → logprob: -7.3617963790893555
    8. ' 
' → logprob: -8.111796379089355
    9. '  
' → logprob: -8.111796379089355
    10. '        
' → logprob: -8.986796379089355

Token 319: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.647819995880127
    2. ' for' → logprob: -1.022819995880127
    3. '       ' → logprob: -2.772819995880127
    4. '
' → logprob: -3.522819995880127
    5. 'for' → logprob: -4.397819995880127
    6. '	for' → logprob: -4.647819995880127
    7. '    
' → logprob: -6.647819995880127
    8. ' ' → logprob: -7.272819995880127
    9. '<|end|>' → logprob: -8.022819519042969
    10. '  
' → logprob: -8.397819519042969

Token 320: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018946601077914238
    2. ' for' → logprob: -4.018946647644043
    3. '       ' → logprob: -7.268946647644043
    4. '   ' → logprob: -9.268946647644043
    5. '	for' → logprob: -12.268946647644043
    6. ' ' → logprob: -15.018946647644043
    7. '
' → logprob: -16.143945693969727
    8. '	' → logprob: -17.268945693969727
    9. '        
' → logprob: -17.643945693969727
    10. '	   ' → logprob: -17.643945693969727

Token 321: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.013460190035402775
    2. ' start' → logprob: -4.638460159301758
    3. '(start' → logprob: -5.638460159301758
    4. 'interval' → logprob: -9.138460159301758
    5. 's' → logprob: -11.013460159301758
    6. ' (' → logprob: -11.763460159301758
    7. '(s' → logprob: -13.138460159301758
    8. ' interval' → logprob: -13.763460159301758
    9. '(interval' → logprob: -14.013460159301758
    10. 'i' → logprob: -14.013460159301758

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.943783253314905e-05
    2. ' ,' → logprob: -10.250059127807617
    3. ',end' → logprob: -11.250059127807617
    4. ',length' → logprob: -12.250059127807617
    5. ',start' → logprob: -13.750059127807617
    6. ' in' → logprob: -13.750059127807617
    7. ',char' → logprob: -14.375059127807617
    8. ',in' → logprob: -14.750059127807617
    9. ',last' → logprob: -15.000059127807617
    10. ',int' → logprob: -15.250059127807617

Token 323: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0015023599844425917
    2. ' end' → logprob: -6.501502513885498
    3. '	end' → logprob: -19.876502990722656
    4. 'stop' → logprob: -19.876502990722656
    5. '_end' → logprob: -21.001502990722656
    6. '(end' → logprob: -21.251502990722656
    7. '=end' → logprob: -22.126502990722656
    8. 'End' → logprob: -22.501502990722656
    9. '   ' → logprob: -23.251502990722656
    10. '.end' → logprob: -23.376502990722656

Token 324: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0016726837493479252
    2. 'in' → logprob: -6.626672744750977
    3. ':' → logprob: -8.251672744750977
    4. ',' → logprob: -9.751672744750977
    5. '   ' → logprob: -11.751672744750977
    6. '<|end|>' → logprob: -12.251672744750977
    7. ':
' → logprob: -12.501672744750977
    8. ' ' → logprob: -13.001672744750977
    9. ')' → logprob: -13.626672744750977
    10. '<|end|>' → logprob: -13.751672744750977

Token 325: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.00026181264547631145
    2. ' intervals' → logprob: -8.250262260437012
    3. '(interval' → logprob: -14.875262260437012
    4. '   ' → logprob: -16.125261306762695
    5. ' ' → logprob: -17.750261306762695
    6. '
' → logprob: -17.750261306762695
    7. 'int' → logprob: -18.750261306762695
    8. ')' → logprob: -19.000261306762695
    9. '    ' → logprob: -19.750261306762695
    10. 'Intervals' → logprob: -19.875261306762695

Token 326: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03929239511489868
    2. ':
' → logprob: -3.289292335510254
    3. '):
' → logprob: -7.539292335510254
    4. '       ' → logprob: -7.789292335510254
    5. '):' → logprob: -9.414292335510254
    6. ',' → logprob: -9.539292335510254
    7. '           ' → logprob: -10.039292335510254
    8. '=' → logprob: -10.414292335510254
    9. '<|end|>' → logprob: -10.539292335510254
    10. '<|end|>' → logprob: -11.539292335510254

Token 327: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02323499508202076
    2. '       ' → logprob: -4.273234844207764
    3. ' if' → logprob: -5.273234844207764
    4. 'if' → logprob: -5.898234844207764
    5. 'length' → logprob: -7.398234844207764
    6. ' length' → logprob: -8.398235321044922
    7. '
' → logprob: -8.398235321044922
    8. '	       ' → logprob: -10.398235321044922
    9. '        
' → logprob: -11.398235321044922
    10. '   ' → logprob: -11.398235321044922

Token 328: ' if' (ID: 538)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4466085135936737
    2. 'if' (adapté à ' if') → logprob: -1.696608543395996
    3. ' if' → logprob: -2.196608543395996
    4. '           ' → logprob: -3.071608543395996
    5. ' length' → logprob: -4.196608543395996
    6. '               ' → logprob: -5.446608543395996
    7. '       ' → logprob: -11.946608543395996
    8. '	length' → logprob: -12.821608543395996
    9. '   ' → logprob: -13.071608543395996
    10. ',length' → logprob: -13.821608543395996

Token 329: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6536127924919128
    2. ' start' → logprob: -0.7786127924919128
    3. 'ord' → logprob: -4.4036126136779785
    4. ' ord' → logprob: -4.7786126136779785
    5. 'end' → logprob: -9.403613090515137
    6. ' ' → logprob: -10.653613090515137
    7. ' end' → logprob: -11.028613090515137
    8. '	start' → logprob: -11.653613090515137
    9. '(ord' → logprob: -11.903613090515137
    10. '   ' → logprob: -12.028613090515137

Token 330: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0227313544601202
    2. ' !=' → logprob: -4.022731304168701
    3. '==' → logprob: -5.397731304168701
    4. ' ==' → logprob: -10.89773178100586
    5. '=' → logprob: -11.39773178100586
    6. '<' → logprob: -11.39773178100586
    7. '!==' → logprob: -14.89773178100586
    8. '()!=' → logprob: -14.89773178100586
    9. '!=(' → logprob: -14.89773178100586
    10. ')!=' → logprob: -15.02273178100586

Token 331: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0019286326132714748
    2. ' end' → logprob: -6.251928806304932
    3. ' ' → logprob: -18.501928329467773
    4. '=end' → logprob: -18.501928329467773
    5. '(end' → logprob: -19.126928329467773
    6. '   ' → logprob: -19.501928329467773
    7. '	end' → logprob: -20.251928329467773
    8. '           ' → logprob: -21.126928329467773
    9. '[end' → logprob: -21.376928329467773
    10. ''end' → logprob: -21.376928329467773

Token 332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.637310802936554
    2. ':
' → logprob: -0.762310802936554
    3. '               ' → logprob: -5.512310981750488
    4. '           ' → logprob: -8.012310981750488
    5. '):
' → logprob: -8.637310981750488
    6. ')' → logprob: -10.137310981750488
    7. ':
' → logprob: -10.262310981750488
    8. ':length' → logprob: -10.887310981750488
    9. ':

' → logprob: -11.637310981750488
    10. '):' → logprob: -11.637310981750488

Token 333: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17240700125694275
    2. 'length' → logprob: -2.0474069118499756
    3. ' length' → logprob: -3.5474069118499756
    4. ':
' → logprob: -8.547407150268555
    5. '1' → logprob: -9.047407150268555
    6. '
' → logprob: -9.672407150268555
    7. '           ' → logprob: -10.422407150268555
    8. ',length' → logprob: -10.547407150268555
    9. '	length' → logprob: -11.047407150268555
    10. '(length' → logprob: -11.422407150268555

Token 334: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.03338609263300896
    2. ' length' → logprob: -3.533385992050171
    3. '1' → logprob: -5.78338623046875
    4. '               ' → logprob: -7.53338623046875
    5. '           ' → logprob: -11.15838623046875
    6. ' ' → logprob: -14.15838623046875
    7. '	length' → logprob: -15.03338623046875
    8. '   ' → logprob: -15.53338623046875
    9. '
' → logprob: -15.90838623046875
    10. ',length' → logprob: -16.28338623046875

Token 335: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38689324259757996
    2. ' +=' → logprob: -1.1368932723999023
    3. '           ' → logprob: -11.261893272399902
    4. '+' → logprob: -12.886893272399902
    5. ']+=' → logprob: -13.011893272399902
    6. '   ' → logprob: -13.011893272399902
    7. '       ' → logprob: -14.636893272399902
    8. '1' → logprob: -14.636893272399902
    9. '            ' → logprob: -14.761893272399902
    10. '```' → logprob: -15.511893272399902

Token 336: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.75002098083496
    4. '```' → logprob: -20.12502098083496
    5. '
' → logprob: -20.37502098083496
    6. '           ' → logprob: -21.00002098083496
    7. '  ' → logprob: -21.62502098083496
    8. ' ' → logprob: -21.62502098083496
    9. '       ' → logprob: -21.75002098083496
    10. '１' → logprob: -22.37502098083496

Token 337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -19.125
    4. '
' → logprob: -20.875
    5. '```' → logprob: -21.875
    6. '  ' → logprob: -23.0
    7. '１' → logprob: -23.25
    8. '۱' → logprob: -23.75
    9. 'len' → logprob: -23.875
    10. '       ' → logprob: -24.3125

Token 338: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21909527480602264
    2. 'else' → logprob: -1.719095230102539
    3. ' else' → logprob: -4.094095230102539
    4. '       ' → logprob: -7.469095230102539
    5. '               ' → logprob: -9.344095230102539
    6. '
' → logprob: -9.469095230102539
    7. '	       ' → logprob: -10.344095230102539
    8. '		' → logprob: -10.844095230102539
    9. '            
' → logprob: -10.969095230102539
    10. '    
' → logprob: -11.219095230102539

Token 339: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1521511673927307
    2. 'else' → logprob: -2.652151107788086
    3. ' else' → logprob: -2.652151107788086
    4. '<|end|>' → logprob: -10.152151107788086
    5. '	       ' → logprob: -10.277151107788086
    6. '       ' → logprob: -10.777151107788086
    7. '               ' → logprob: -11.527151107788086
    8. '	else' → logprob: -11.777151107788086
    9. '		' → logprob: -11.777151107788086
    10. '            
' → logprob: -12.527151107788086

Token 340: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.180088073015213
    2. ' else' → logprob: -1.9300880432128906
    3. '           ' → logprob: -3.9300880432128906
    4. '       ' → logprob: -10.93008804321289
    5. '	else' → logprob: -12.55508804321289
    6. '               ' → logprob: -13.43008804321289
    7. 'elif' → logprob: -13.93008804321289
    8. '		' → logprob: -14.05508804321289
    9. '	       ' → logprob: -14.30508804321289
    10. '   ' → logprob: -15.30508804321289

Token 341: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6277485489845276
    2. ':' → logprob: -1.6277484893798828
    3. ':
' → logprob: -1.6277484893798828
    4. ' length' → logprob: -3.127748489379883
    5. 'length' → logprob: -4.127748489379883
    6. '           ' → logprob: -4.502748489379883
    7. ':length' → logprob: -7.252748489379883
    8. ' :' → logprob: -7.627748489379883
    9. ' :
' → logprob: -8.627748489379883
    10. '   ' → logprob: -8.752748489379883

Token 342: '               ' (ID: 506)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.39597398042678833
    2. ' length' → logprob: -1.1459739208221436
    3. '               ' → logprob: -4.770974159240723
    4. '           ' → logprob: -7.645974159240723
    5. '	length' → logprob: -9.895974159240723
    6. '            ' → logprob: -10.520974159240723
    7. '3' → logprob: -12.020974159240723
    8. '_length' → logprob: -12.270974159240723
    9. ',length' → logprob: -12.520974159240723
    10. '			' → logprob: -13.020974159240723

Token 343: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.03808819502592087
    2. ' length' → logprob: -3.288088083267212
    3. '3' → logprob: -10.038087844848633
    4. '               ' → logprob: -13.288087844848633
    5. '           ' → logprob: -14.038087844848633
    6. '                   ' → logprob: -15.663087844848633
    7. ' ' → logprob: -16.163087844848633
    8. '	length' → logprob: -16.288087844848633
    9. '            ' → logprob: -16.413087844848633
    10. 'Length' → logprob: -16.788087844848633

Token 344: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931489706039429
    2. '+=' → logprob: -0.6931489706039429
    3. '+' → logprob: -13.818148612976074
    4. ']+=' → logprob: -15.068148612976074
    5. '   ' → logprob: -15.943148612976074
    6. '           ' → logprob: -16.56814956665039
    7. '=' → logprob: -16.69314956665039
    8. ' ' → logprob: -16.69314956665039
    9. '    ' → logprob: -16.94314956665039
    10. ' +' → logprob: -17.06814956665039

Token 345: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.500045776367188
    4. '           ' → logprob: -18.250045776367188
    5. '３' → logprob: -18.500045776367188
    6. '  ' → logprob: -19.125045776367188
    7. '۳' → logprob: -19.187545776367188
    8. '
' → logprob: -19.687545776367188
    9. '       ' → logprob: -19.750045776367188
    10. '4' → logprob: -19.875045776367188

Token 346: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.25
    4. '３' → logprob: -19.25
    5. '۳' → logprob: -19.375
    6. '4' → logprob: -20.1875
    7. '```' → logprob: -20.875
    8. '٣' → logprob: -21.125
    9. 'len' → logprob: -21.1875
    10. '           ' → logprob: -21.3125

Token 347: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003168337047100067
    2. 'return' → logprob: -6.753168106079102
    3. '   ' → logprob: -7.253168106079102
    4. '
' → logprob: -7.628168106079102
    5. ' return' → logprob: -7.628168106079102
    6. '	return' → logprob: -8.878168106079102
    7. '<|end|>' → logprob: -9.003168106079102
    8. '	' → logprob: -11.253168106079102
    9. '    
' → logprob: -11.878168106079102
    10. '           ' → logprob: -12.253168106079102

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014158309204503894
    2. '   ' → logprob: -7.376415729522705
    3. 'return' → logprob: -7.751415729522705
    4. ' return' → logprob: -8.751416206359863
    5. '	return' → logprob: -9.126416206359863
    6. '
' → logprob: -9.751416206359863
    7. '	' → logprob: -11.001416206359863
    8. '           ' → logprob: -11.626416206359863
    9. '    
' → logprob: -12.751416206359863
    10. '	   ' → logprob: -13.001416206359863

Token 349: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3560641407966614
    2. '   ' → logprob: -1.6060640811920166
    3. 'return' (adapté à ' return') → logprob: -2.3560640811920166
    4. ' return' → logprob: -5.606064319610596
    5. '
' → logprob: -8.106063842773438
    6. '	return' → logprob: -9.481063842773438
    7. '        
' → logprob: -11.356063842773438
    8. '    
' → logprob: -11.606063842773438
    9. '           ' → logprob: -11.606063842773438
    10. '     ' → logprob: -12.231063842773438

Token 350: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0002614550176076591
    2. ' length' → logprob: -8.250261306762695
    3. 'len' → logprob: -15.750261306762695
    4. '   ' → logprob: -18.750261306762695
    5. '	length' → logprob: -20.625261306762695
    6. '    ' → logprob: -21.125261306762695
    7. 'leng' → logprob: -21.250261306762695
    8. '_length' → logprob: -22.000261306762695
    9. 'l' → logprob: -22.500261306762695
    10. '(length' → logprob: -22.500261306762695

Token 351: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.5394471287727356
    2. '
' → logprob: -1.2894470691680908
    3. '   ' → logprob: -2.164447069168091
    4. '<|end|>' → logprob: -4.03944730758667
    5. '

' → logprob: -5.16444730758667
    6. '
    
' → logprob: -6.78944730758667
    7. 'return' → logprob: -7.66444730758667
    8. '        
' → logprob: -8.164446830749512
    9. '<|end|>' → logprob: -8.164446830749512
    10. '  
' → logprob: -8.289446830749512

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07466033846139908
    2. 'return' → logprob: -2.699660301208496
    3. '    
' → logprob: -5.949660301208496
    4. ' return' → logprob: -7.074660301208496
    5. 'result' → logprob: -7.824660301208496
    6. '
' → logprob: -7.949660301208496
    7. 'compressed' → logprob: -7.949660301208496
    8. 'length' → logprob: -9.324660301208496
    9. 'total' → logprob: -10.824660301208496
    10. '#' → logprob: -11.824660301208496

Token 353: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11176928877830505
    2. '#' (adapté à ' #') → logprob: -3.111769199371338
    3. 'length' → logprob: -3.986769199371338
    4. 'len' → logprob: -4.236769199371338
    5. 'letters' → logprob: -4.611769199371338
    6. 'compressed' → logprob: -4.861769199371338
    7. 'total' → logprob: -5.611769199371338
    8. 'letter' → logprob: -5.861769199371338
    9. '   ' → logprob: -6.986769199371338
    10. 'original' → logprob: -6.986769199371338

Token 354: ' On' (ID: 2160)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05903829634189606
    2. '#' → logprob: -3.1840384006500244
    3. 'letters' → logprob: -5.434038162231445
    4. 'total' → logprob: -5.684038162231445
    5. 'compressed' → logprob: -6.184038162231445
    6. 'original' → logprob: -6.434038162231445
    7. 'count' → logprob: -6.434038162231445
    8. 'result' → logprob: -6.559038162231445
    9. 'length' → logprob: -7.934038162231445
    10. '   ' → logprob: -8.684038162231445

Token 355: ' doit' (ID: 21822)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2599092721939087
    2. ' return' → logprob: -1.7599092721939087
    3. ' retourne' → logprob: -4.009909152984619
    4. '#' → logprob: -4.384909152984619
    5. '   ' → logprob: -5.509909152984619
    6. ' #' → logprob: -5.884909152984619
    7. 'ret' → logprob: -5.884909152984619
    8. 'continue' → logprob: -6.134909152984619
    9. 'compare' → logprob: -6.384909152984619
    10. 'rev' → logprob: -6.509909152984619

Token 356: ' aussi' (ID: 9894)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8312141299247742
    2. 'consider' → logprob: -2.331214189529419
    3. 'com' → logprob: -2.706214189529419
    4. 'calcul' → logprob: -2.956214189529419
    5. ' tester' → logprob: -3.206214189529419
    6. ' calcul' → logprob: -3.331214189529419
    7. 'tester' → logprob: -3.456214189529419
    8. 'égal' → logprob: -3.831214189529419
    9. ' return' → logprob: -3.831214189529419
    10. 'comp' → logprob: -3.831214189529419

Token 357: ' compter' (ID: 81694)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5980225801467896
    2. 'consider' → logprob: -1.9730225801467896
    3. ' compter' → logprob: -2.0980224609375
    4. ' prendre' → logprob: -2.0980224609375
    5. ' considérer' → logprob: -2.4730224609375
    6. ' comparer' → logprob: -2.7230224609375
    7. 'return' → logprob: -3.0980224609375
    8. 'comp' → logprob: -3.3480224609375
    9. ' ajouter' → logprob: -3.7230224609375
    10. ' ' → logprob: -3.7230224609375

Token 358: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5680806040763855
    2. ' les' → logprob: -1.0680806636810303
    3. ' le' → logprob: -2.8180806636810303
    4. ' l' → logprob: -4.318080425262451
    5. ' len' → logprob: -5.693080425262451
    6. 'le' → logprob: -5.943080425262451
    7. ' ' → logprob: -6.068080425262451
    8. ' for' → logprob: -6.068080425262451
    9. 'les' → logprob: -6.818080425262451
    10. ' length' → logprob: -6.818080425262451

Token 359: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.34876513481140137
    2. ' caractères' → logprob: -1.7237651348114014
    3. ' espaces' → logprob: -2.9737651348114014
    4. 'chars' → logprob: -3.9737651348114014
    5. ' autres' → logprob: -4.0987653732299805
    6. ' caracteres' → logprob: -5.0987653732299805
    7. 'esp' → logprob: -5.3487653732299805
    8. '#' → logprob: -5.7237653732299805
    9. 'spaces' → logprob: -6.4737653732299805
    10. '-' → logprob: -6.7237653732299805

Token 360: ' qui' (ID: 2780)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.653659701347351
    2. ' qui' → logprob: -1.903659701347351
    3. ' rest' → logprob: -2.0286598205566406
    4. ' hors' → logprob: -2.1536598205566406
    5. ' non' → logprob: -2.6536598205566406
    6. 'non' → logprob: -2.6536598205566406
    7. 's' → logprob: -3.4036598205566406
    8. ' uniques' → logprob: -3.4036598205566406
    9. 'qui' → logprob: -3.5286598205566406
    10. 'isol' → logprob: -3.5286598205566406

Token 361: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.23899652063846588
    2. ' n' → logprob: -1.7389965057373047
    3. 'n' → logprob: -3.9889965057373047
    4. 'ne' → logprob: -4.238996505737305
    5. ' are' → logprob: -6.113996505737305
    6. ' sont' → logprob: -7.863996505737305
    7. 's' → logprob: -8.613996505737305
    8. '   ' → logprob: -8.738996505737305
    9. 'n't' → logprob: -8.863996505737305
    10. 'are' → logprob: -8.988996505737305

Token 362: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006376771721988916
    2. ' sont' → logprob: -5.38137674331665
    3. 'font' → logprob: -7.50637674331665
    4. ' font' → logprob: -7.88137674331665
    5. 'app' → logprob: -8.381377220153809
    6. 'se' → logprob: -9.381377220153809
    7. 't' → logprob: -9.631377220153809
    8. ' figur' → logprob: -9.631377220153809
    9. ' appart' → logprob: -9.881377220153809
    10. 'ont' → logprob: -10.131377220153809

Token 363: ' ni' (ID: 2565)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.11077897995710373
    2. ' pas' → logprob: -2.360779047012329
    3. ' ni' → logprob: -4.98577880859375
    4. 'ni' → logprob: -5.73577880859375
    5. 'dans' → logprob: -8.98577880859375
    6. '```' → logprob: -9.48577880859375
    7. 'not' → logprob: -10.36077880859375
    8. 'prés' → logprob: -10.86077880859375
    9. 's' → logprob: -11.11077880859375
    10. ' dans' → logprob: -11.23577880859375

Token 364: ' lettres' (ID: 101234)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.9128246903419495
    2. 'dans' → logprob: -1.6628246307373047
    3. 'lett' → logprob: -2.0378246307373047
    4. 'des' → logprob: -2.5378246307373047
    5. 'pas' → logprob: -2.9128246307373047
    6. ' lettres' → logprob: -3.4128246307373047
    7. ' des' → logprob: -3.5378246307373047
    8. 'alpha' → logprob: -4.412824630737305
    9. ' dans' → logprob: -4.537824630737305
    10. 'digits' → logprob: -4.662824630737305

Token 365: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.5572457909584045
    2. ' ni' → logprob: -0.9322457909584045
    3. '   ' → logprob: -3.9322457313537598
    4. ',' → logprob: -4.55724573135376
    5. ' ' → logprob: -6.93224573135376
    6. 'ne' → logprob: -7.68224573135376
    7. ' nor' → logprob: -7.80724573135376
    8. '```' → logprob: -7.80724573135376
    9. 'né' → logprob: -8.432246208190918
    10. '       ' → logprob: -8.682246208190918

Token 366: ' chiffres' (ID: 105565)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.2577030658721924
    2. 'digits' → logprob: -1.5077030658721924
    3. ' chiffres' → logprob: -5.382702827453613
    4. ' digits' → logprob: -6.882702827453613
    5. '   ' → logprob: -9.757702827453613
    6. 'digit' → logprob: -10.382702827453613
    7. 'd' → logprob: -11.257702827453613
    8. '```' → logprob: -11.507702827453613
    9. 'ni' → logprob: -12.007702827453613
    10. ' ' → logprob: -12.132702827453613

Token 367: ' présents' (ID: 108718)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05784565582871437
    2. ' other' → logprob: -3.9328455924987793
    3. 'other' → logprob: -4.057845592498779
    4. 'others' → logprob: -4.432845592498779
    5. 'non' → logprob: -6.432845592498779
    6. ' others' → logprob: -6.682845592498779
    7. ' non' → logprob: -6.807845592498779
    8. '    
' → logprob: -7.182845592498779
    9. '```' → logprob: -7.182845592498779
    10. ' special' → logprob: -7.932845592498779

Token 368: ' dans' (ID: 2671)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.8056271076202393
    2. 'other' → logprob: -1.5556271076202393
    3. '   ' → logprob: -1.8056271076202393
    4. 'others' → logprob: -3.4306271076202393
    5. ' neither' → logprob: -3.9306271076202393
    6. 'non' → logprob: -4.05562686920166
    7. ' non' → logprob: -4.05562686920166
    8. ' autres' → logprob: -4.43062686920166
    9. ' ni' → logprob: -4.55562686920166
    10. ' in' → logprob: -4.93062686920166

Token 369: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1220519170165062
    2. ' s' → logprob: -2.247051954269409
    3. 'count' → logprob: -6.12205171585083
    4. '   ' → logprob: -6.49705171585083
    5. ' la' → logprob: -6.49705171585083
    6. ' le' → logprob: -6.87205171585083
    7. 'le' → logprob: -7.12205171585083
    8. 'la' → logprob: -7.12205171585083
    9. ' ' → logprob: -7.74705171585083
    10. ' count' → logprob: -8.372052192687988

Token 370: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07272201776504517
    2. ',' → logprob: -3.3227219581604004
    3. 'other' → logprob: -4.0727219581604
    4. 'others' → logprob: -5.4477219581604
    5. '```' → logprob: -5.6977219581604
    6. 'non' → logprob: -6.4477219581604
    7. '
' → logprob: -7.0727219581604
    8. '_other' → logprob: -7.1977219581604
    9. '#' → logprob: -7.1977219581604
    10. 'else' → logprob: -7.3227219581604

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09765000641345978
    2. 'other' → logprob: -2.9726500511169434
    3. 'others' → logprob: -3.7226500511169434
    4. ' other' → logprob: -4.972650051116943
    5. '    
' → logprob: -5.222650051116943
    6. 'non' → logprob: -6.722650051116943
    7. 'special' → logprob: -7.222650051116943
    8. '```' → logprob: -7.222650051116943
    9. 'specialchars' → logprob: -7.472650051116943
    10. '#' → logprob: -7.847650051116943

Token 372: ' #' (ID: 1069)
  Prédit: 'others'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'others' → logprob: -0.1199038177728653
    2. 'other' → logprob: -2.369903802871704
    3. ' others' → logprob: -4.619904041290283
    4. 'non' → logprob: -5.619904041290283
    5. ' other' → logprob: -5.744904041290283
    6. 'special' → logprob: -6.494904041290283
    7. '   ' → logprob: -7.619904041290283
    8. ' special' → logprob: -8.494903564453125
    9. 'symbols' → logprob: -8.744903564453125
    10. 'else' → logprob: -9.619903564453125

Token 373: ' Or' (ID: 2604)
  Prédit: 'others'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'others' → logprob: -0.06262394040822983
    2. 'other' → logprob: -3.312623977661133
    3. ' others' → logprob: -4.812623977661133
    4. 'non' → logprob: -5.062623977661133
    5. '   ' → logprob: -5.562623977661133
    6. 'special' → logprob: -5.687623977661133
    7. ' other' → logprob: -6.812623977661133
    8. ' special' → logprob: -7.562623977661133
    9. 'symbols' → logprob: -7.937623977661133
    10. 'specialchars' → logprob: -9.312623977661133

Token 374: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2600492238998413
    2. 'others' → logprob: -2.260049343109131
    3. 'other' → logprob: -2.635049343109131
    4. 'non' → logprob: -4.010049343109131
    5. ' other' → logprob: -4.510049343109131
    6. 'special' → logprob: -5.260049343109131
    7. 'for' → logprob: -5.885049343109131
    8. ' others' → logprob: -6.260049343109131
    9. ' special' → logprob: -6.385049343109131
    10. ' non' → logprob: -6.385049343109131

Token 375: ' problème' (ID: 35630)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -1.1203010082244873
    2. 'non' → logprob: -1.7453010082244873
    3. ' other' → logprob: -1.9953010082244873
    4. 'others' → logprob: -2.1203010082244873
    5. ' non' → logprob: -2.4953010082244873
    6. 'for' → logprob: -3.9953010082244873
    7. 'aut' → logprob: -4.245301246643066
    8. ' for' → logprob: -4.245301246643066
    9. ' autres' → logprob: -4.620301246643066
    10. '   ' → logprob: -4.620301246643066

Token 376: ' indique' (ID: 97324)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.2604553699493408
    2. ' est' → logprob: -1.2604553699493408
    3. ' reste' → logprob: -2.010455369949341
    4. ' is' → logprob: -2.635455369949341
    5. 's' → logprob: -2.760455369949341
    6. ',' → logprob: -3.760455369949341
    7. ' =' → logprob: -3.760455369949341
    8. ' continue' → logprob: -4.135455131530762
    9. 'continue' → logprob: -4.385455131530762
    10. ' rest' → logprob: -4.635455131530762

Token 377: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.3815617263317108
    2. ' qu' → logprob: -2.756561756134033
    3. ' seulement' → logprob: -2.881561756134033
    4. ' simplement' → logprob: -3.006561756134033
    5. ' uniquement' → logprob: -3.131561756134033
    6. ' juste' → logprob: -3.631561756134033
    7. 's' → logprob: -3.881561756134033
    8. ' s' → logprob: -4.631561756134033
    9. ' that' → logprob: -4.881561756134033
    10. '   ' → logprob: -5.381561756134033

Token 378: ' s' (ID: 265)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.7322258949279785
    2. 'for' → logprob: -1.7322258949279785
    3. '#' → logprob: -2.1072258949279785
    4. 'len' → logprob: -2.4822258949279785
    5. 'non' → logprob: -2.9822258949279785
    6. ' these' → logprob: -3.2322258949279785
    7. ' ceux' → logprob: -3.4822258949279785
    8. ' non' → logprob: -3.6072258949279785
    9. ' les' → logprob: -3.6072258949279785
    10. ' ces' → logprob: -3.6072258949279785

Token 379: ' ne' (ID: 453)
  Prédit: ' contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contains' → logprob: -0.8653135895729065
    2. ' contient' → logprob: -1.2403135299682617
    3. ' peut' → logprob: -1.6153135299682617
    4. ' =' → logprob: -4.240313529968262
    5. 'contains' → logprob: -4.365313529968262
    6. ' can' → logprob: -4.365313529968262
    7. ' may' → logprob: -4.490313529968262
    8. ' ne' → logprob: -4.615313529968262
    9. '   ' → logprob: -5.490313529968262
    10. 'cont' → logprob: -5.740313529968262

Token 380: ' contient' (ID: 89067)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.03373410180211067
    2. ' contient' → logprob: -3.908734083175659
    3. 'compr' → logprob: -4.908734321594238
    4. ' cont' → logprob: -6.158734321594238
    5. 'contains' → logprob: -6.658734321594238
    6. 'contain' → logprob: -7.158734321594238
    7. ' contains' → logprob: -7.283734321594238
    8. '_cont' → logprob: -7.783734321594238
    9. 'conten' → logprob: -8.658734321594238
    10. ' comporte' → logprob: -9.908734321594238

Token 381: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.023368701338768005
    2. 'que' → logprob: -4.523368835449219
    3. ' pas' → logprob: -5.148368835449219
    4. 'pas' → logprob: -5.898368835449219
    5. ' aucun' → logprob: -6.148368835449219
    6. ' ni' → logprob: -7.148368835449219
    7. '   ' → logprob: -8.523368835449219
    8. 'ni' → logprob: -8.773368835449219
    9. ' uniquement' → logprob: -9.148368835449219
    10. 'auc' → logprob: -9.523368835449219

Token 382: ' lettres' (ID: 101234)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.9562751650810242
    2. ' des' → logprob: -1.206275224685669
    3. 'lett' → logprob: -1.956275224685669
    4. 'des' → logprob: -2.206275224685669
    5. ' lettres' → logprob: -2.956275224685669
    6. ' letters' → logprob: -4.70627498626709
    7. 'let' → logprob: -6.58127498626709
    8. 'alph' → logprob: -7.58127498626709
    9. 'digits' → logprob: -8.08127498626709
    10. 'alpha' → logprob: -8.58127498626709

Token 383: ' minus' (ID: 40335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07675382494926453
    2. 'return' → logprob: -2.951753854751587
    3. ' return' → logprob: -4.451753616333008
    4. ',' → logprob: -5.576753616333008
    5. '    
' → logprob: -5.701753616333008
    6. ' et' → logprob: -7.951753616333008
    7. '.' → logprob: -7.951753616333008
    8. '#' → logprob: -7.951753616333008
    9. ')' → logprob: -8.076753616333008
    10. ' ,' → logprob: -8.701753616333008

Token 384: 'cules' (ID: 40805)
  Prédit: 'cules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cules' → logprob: -0.006771499291062355
    2. 'c' → logprob: -5.006771564483643
    3. '```' → logprob: -11.131771087646484
    4. 'cule' → logprob: -12.131771087646484
    5. 'culas' → logprob: -12.131771087646484
    6. 'cu' → logprob: -12.381771087646484
    7. 'cul' → logprob: -12.381771087646484
    8. '#' → logprob: -12.506771087646484
    9. '   ' → logprob: -12.631771087646484
    10. '[c' → logprob: -13.381771087646484

Token 385: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03951621800661087
    2. 'return' → logprob: -3.7895162105560303
    3. ' return' → logprob: -4.539516448974609
    4. '    
' → logprob: -6.164516448974609
    5. '#' → logprob: -6.664516448974609
    6. '.' → logprob: -7.664516448974609
    7. '
' → logprob: -8.53951644897461
    8. ',' → logprob: -8.66451644897461
    9. ' non' → logprob: -8.91451644897461
    10. 'non' → logprob: -9.03951644897461

Token 386: ' chiffres' (ID: 105565)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.08186197280883789
    2. 'digits' → logprob: -2.706861972808838
    3. ' chiffres' → logprob: -4.581861972808838
    4. ' digits' → logprob: -7.206861972808838
    5. 'des' → logprob: -7.206861972808838
    6. 'digit' → logprob: -10.83186149597168
    7. '   ' → logprob: -10.83186149597168
    8. ' des' → logprob: -10.83186149597168
    9. 'd' → logprob: -10.95686149597168
    10. '```' → logprob: -11.33186149597168

Token 387: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020100805908441544
    2. '    
' → logprob: -4.0201005935668945
    3. '
' → logprob: -7.2701005935668945
    4. 'return' → logprob: -7.5201005935668945
    5. ',' → logprob: -9.020100593566895
    6. ' return' → logprob: -9.270100593566895
    7. '#' → logprob: -9.270100593566895
    8. '.' → logprob: -9.395100593566895
    9. ')' → logprob: -9.645100593566895
    10. '    ' → logprob: -10.020100593566895

Token 388: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06234755367040634
    2. ' donc' → logprob: -3.062347650527954
    3. ' so' → logprob: -5.312347412109375
    4. 'return' → logprob: -5.812347412109375
    5. ' return' → logprob: -5.812347412109375
    6. '    
' → logprob: -6.687347412109375
    7. ' ' → logprob: -7.562347412109375
    8. 'so' → logprob: -8.312347412109375
    9. '  ' → logprob: -8.937347412109375
    10. ')' → logprob: -8.937347412109375

Token 389: ' pas' (ID: 2173)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.19471514225006104
    2. '   ' → logprob: -1.944715142250061
    3. ' return' → logprob: -3.6947150230407715
    4. 'pass' → logprob: -5.1947150230407715
    5. '#' → logprob: -5.8197150230407715
    6. ' pass' → logprob: -8.81971549987793
    7. ' #' → logprob: -9.44471549987793
    8. 'length' → logprob: -9.69471549987793
    9. 'ret' → logprob: -10.06971549987793
    10. 'len' → logprob: -10.19471549987793

Token 390: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5494102835655212
    2. ' besoin' → logprob: -1.299410343170166
    3. 'de' → logprob: -2.799410343170166
    4. ' d' → logprob: -2.924410343170166
    5. 'bes' → logprob: -3.674410343170166
    6. ' de' → logprob: -4.924410343170166
    7. 'need' → logprob: -6.424410343170166
    8. ' ' → logprob: -8.049409866333008
    9. '#' → logprob: -8.299409866333008
    10. ' besoins' → logprob: -8.424409866333008

Token 391: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.38904353976249695
    2. 'aut' → logprob: -2.1390435695648193
    3. ' caractères' → logprob: -2.5140435695648193
    4. ' autres' → logprob: -2.7640435695648193
    5. '#' → logprob: -4.76404333114624
    6. ' espaces' → logprob: -5.13904333114624
    7. 'esp' → logprob: -5.63904333114624
    8. ' cas' → logprob: -5.76404333114624
    9. 'spaces' → logprob: -5.88904333114624
    10. ' caractère' → logprob: -5.88904333114624

Token 392: ' autre' (ID: 20278)
  Prédit: ' hors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' hors' → logprob: -0.437644362449646
    2. 's' → logprob: -1.687644362449646
    3. ' spé' → logprob: -2.8126444816589355
    4. 'special' → logprob: -3.8126444816589355
    5. ' spécial' → logprob: -4.3126444816589355
    6. ' non' → logprob: -4.3126444816589355
    7. ' special' → logprob: -5.0626444816589355
    8. 'non' → logprob: -5.0626444816589355
    9. '_special' → logprob: -5.3126444816589355
    10. ' supplémentaire' → logprob: -5.3126444816589355

Token 393: '.
' (ID: 558)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.5054815411567688
    2. 's' → logprob: -1.380481481552124
    3. 'que' → logprob: -3.505481481552124
    4. '   ' → logprob: -3.505481481552124
    5. ',' → logprob: -4.380481719970703
    6. '.' → logprob: -4.380481719970703
    7. ' than' → logprob: -4.505481719970703
    8. ''' → logprob: -4.880481719970703
    9. 'return' → logprob: -5.380481719970703
    10. '```' → logprob: -5.380481719970703

Token 394: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01927395910024643
    2. '    
' → logprob: -4.64427375793457
    3. 'return' → logprob: -5.01927375793457
    4. '
' → logprob: -6.26927375793457
    5. ' return' → logprob: -7.51927375793457
    6. 'length' → logprob: -8.76927375793457
    7. '#' → logprob: -9.64427375793457
    8. '    ' → logprob: -9.89427375793457
    9. 'total' → logprob: -10.64427375793457
    10. ' length' → logprob: -10.89427375793457

Token 395: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17587342858314514
    2. '   ' → logprob: -2.0508735179901123
    3. '#' (adapté à ' #') → logprob: -4.175873279571533
    4. ' return' → logprob: -5.050873279571533
    5. '    
' → logprob: -5.425873279571533
    6. '
' → logprob: -6.550873279571533
    7. 'result' → logprob: -6.675873279571533
    8. 'compressed' → logprob: -6.675873279571533
    9. 'total' → logprob: -7.050873279571533
    10. 'length' → logprob: -7.550873279571533

Token 396: ' Par' (ID: 3371)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1664341390132904
    2. '   ' → logprob: -2.6664340496063232
    3. ' return' → logprob: -2.6664340496063232
    4. '#' → logprob: -4.791434288024902
    5. 'total' → logprob: -6.041434288024902
    6. 'compressed' → logprob: -6.791434288024902
    7. 'result' → logprob: -7.416434288024902
    8. 'length' → logprob: -7.541434288024902
    9. ' #' → logprob: -8.166434288024902
    10. ' total' → logprob: -8.291434288024902

Token 397: ' contre' (ID: 17771)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9932501316070557
    2. 'contre' → logprob: -1.6182501316070557
    3. 'return' → logprob: -1.7432501316070557
    4. 'cons' → logprob: -1.9932501316070557
    5. ' conséquent' → logprob: -3.3682501316070557
    6. 'don' → logprob: -4.118249893188477
    7. '```' → logprob: -4.618249893188477
    8. 'import' → logprob: -4.743249893188477
    9. 'fait' → logprob: -4.993249893188477
    10. 't' → logprob: -5.118249893188477

Token 398: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7594590783119202
    2. ',' → logprob: -1.1344590187072754
    3. ' on' → logprob: -2.7594590187072754
    4. '#' → logprob: -3.7594590187072754
    5. ' for' → logprob: -3.7594590187072754
    6. ' if' → logprob: -4.134459018707275
    7. ' ,' → logprob: -4.259459018707275
    8. '    ' → logprob: -4.259459018707275
    9. ' la' → logprob: -4.634459018707275
    10. ' il' → logprob: -4.759459018707275

Token 399: ' il' (ID: 1793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7279468178749084
    2. ' on' → logprob: -1.3529467582702637
    3. ' #' → logprob: -2.1029467582702637
    4. '   ' → logprob: -3.6029467582702637
    5. ' return' → logprob: -3.7279467582702637
    6. 'return' → logprob: -3.9779467582702637
    7. 'on' → logprob: -4.477946758270264
    8. ' il' → logprob: -4.477946758270264
    9. ' la' → logprob: -4.602946758270264
    10. ' for' → logprob: -4.727946758270264

Token 400: ' peut' (ID: 9216)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9163392782211304
    2. ' faut' → logprob: -1.5413392782211304
    3. ' manque' → logprob: -2.04133939743042
    4. ' reste' → logprob: -2.41633939743042
    5. ' n' → logprob: -3.29133939743042
    6. ' faudrait' → logprob: -3.66633939743042
    7. '   ' → logprob: -3.91633939743042
    8. '#' → logprob: -4.16633939743042
    9. ' peut' → logprob: -4.29133939743042
    10. 'n' → logprob: -5.16633939743042

Token 401: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.8204532861709595
    2. ' y' → logprob: -1.0704532861709595
    3. ' manquer' → logprob: -1.8204532861709595
    4. ' rester' → logprob: -3.94545316696167
    5. 'avoir' → logprob: -4.44545316696167
    6. 'man' → logprob: -4.94545316696167
    7. 'arr' → logprob: -5.69545316696167
    8. 'être' → logprob: -5.82045316696167
    9. ' arriver' → logprob: -6.69545316696167
    10. ' avoir' → logprob: -6.82045316696167

Token 402: ' avoir' (ID: 16595)
  Prédit: 'avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoir' → logprob: -0.009619382210075855
    2. ' avoir' → logprob: -5.009619235992432
    3. ''avoir' → logprob: -6.009619235992432
    4. 'voir' → logprob: -7.884619235992432
    5. '   ' → logprob: -10.50961971282959
    6. '’avoir' → logprob: -10.88461971282959
    7. 'avait' → logprob: -12.25961971282959
    8. 'a' → logprob: -12.50961971282959
    9. 'have' → logprob: -12.75961971282959
    10. 'av' → logprob: -13.00961971282959

Token 403: ' répét' (ID: 156936)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.06407024711370468
    2. ' des' → logprob: -3.689070224761963
    3. 'plus' → logprob: -3.689070224761963
    4. ' plusieurs' → logprob: -4.939070224761963
    5. 'd' → logprob: -6.439070224761963
    6. 'dup' → logprob: -7.439070224761963
    7. 'une' → logprob: -7.814070224761963
    8. ' plus' → logprob: -7.939070224761963
    9. 'que' → logprob: -8.314070701599121
    10. 'un' → logprob: -8.439070701599121

Token 404: 'itions' (ID: 5500)
  Prédit: 'itions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itions' → logprob: -0.47970977425575256
    2. 'és' → logprob: -1.8547097444534302
    3. 'ition' → logprob: -2.2297098636627197
    4. 'é' → logprob: -2.4797098636627197
    5. 'ions' → logprob: -4.854709625244141
    6. 'e' → logprob: -4.979709625244141
    7. 'es' → logprob: -5.104709625244141
    8. 'ations' → logprob: -5.854709625244141
    9. 's' → logprob: -5.979709625244141
    10. 'ées' → logprob: -6.104709625244141

Token 405: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24359044432640076
    2. '
' → logprob: -1.6185904741287231
    3. '    
' → logprob: -4.618590354919434
    4. ',' → logprob: -6.118590354919434
    5. '#' → logprob: -6.618590354919434
    6. 'return' → logprob: -7.118590354919434
    7. ' return' → logprob: -7.368590354919434
    8. 'length' → logprob: -7.618590354919434
    9. 'count' → logprob: -8.243590354919434
    10. 'def' → logprob: -8.493590354919434

Token 406: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.0029971599578857
    2. ' caractères' → logprob: -1.7529971599578857
    3. ' lettres' → logprob: -2.1279971599578857
    4. 'lett' → logprob: -2.3779971599578857
    5. 'la' → logprob: -2.3779971599578857
    6. 'chars' → logprob: -3.7529971599578857
    7. ' la' → logprob: -4.002997398376465
    8. ' chaque' → logprob: -4.127997398376465
    9. 'le' → logprob: -4.252997398376465
    10. 'c' → logprob: -4.627997398376465

Token 407: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08362182229757309
    2. '
' → logprob: -2.9586217403411865
    3. '    
' → logprob: -3.7086217403411865
    4. '#' → logprob: -6.708621978759766
    5. 'count' → logprob: -7.708621978759766
    6. 'total' → logprob: -8.208621978759766
    7. 'length' → logprob: -8.583621978759766
    8. ' total' → logprob: -8.583621978759766
    9. 'return' → logprob: -8.583621978759766
    10. ',' → logprob: -8.708621978759766

Token 408: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1190207228064537
    2. '
' → logprob: -2.494020700454712
    3. 'return' → logprob: -4.369020938873291
    4. ' return' → logprob: -5.369020938873291
    5. '    
' → logprob: -5.494020938873291
    6. 'length' → logprob: -5.744020938873291
    7. '#' → logprob: -5.869020938873291
    8. ' length' → logprob: -6.994020938873291
    9. 'result' → logprob: -7.744020938873291
    10. '```' → logprob: -8.869020462036133

Token 409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6983109712600708
    2. 'return' → logprob: -1.1983109712600708
    3. ' return' → logprob: -2.4483108520507812
    4. '#' → logprob: -2.5733108520507812
    5. 'total' → logprob: -4.448310852050781
    6. '
' → logprob: -5.073310852050781
    7. ' total' → logprob: -5.198310852050781
    8. 'count' → logprob: -5.448310852050781
    9. ' #' → logprob: -6.073310852050781
    10. '    
' → logprob: -6.073310852050781

Token 410: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4741046130657196
    2. '#' (adapté à ' #') → logprob: -1.974104642868042
    3. '   ' → logprob: -2.224104642868042
    4. 'total' → logprob: -2.474104642868042
    5. 'count' → logprob: -3.849104642868042
    6. ' return' → logprob: -4.599104404449463
    7. 'letters' → logprob: -5.849104404449463
    8. ' total' → logprob: -5.974104404449463
    9. 'freq' → logprob: -6.099104404449463
    10. 'counts' → logprob: -6.849104404449463

Token 411: ' La' (ID: 3038)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2035672962665558
    2. '#' → logprob: -1.9535672664642334
    3. '   ' → logprob: -4.2035675048828125
    4. ' return' → logprob: -4.7035675048828125
    5. 'length' → logprob: -5.3285675048828125
    6. 'min' → logprob: -5.8285675048828125
    7. 'count' → logprob: -6.0785675048828125
    8. 'total' → logprob: -6.5785675048828125
    9. 'res' → logprob: -7.0785675048828125
    10. 'compressed' → logprob: -7.0785675048828125

Token 412: ' compression' (ID: 41811)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5649442076683044
    2. '#' → logprob: -2.314944267272949
    3. 'total' → logprob: -2.314944267272949
    4. 'def' → logprob: -2.814944267272949
    5. 'count' → logprob: -3.189944267272949
    6. 'long' → logprob: -3.314944267272949
    7. ' return' → logprob: -3.689944267272949
    8. 'length' → logprob: -4.314944267272949
    9. 'compression' → logprob: -5.064944267272949
    10. '   ' → logprob: -5.189944267272949

Token 413: ' op' (ID: 991)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.1615276336669922
    2. '#' → logprob: -2.036527633666992
    3. '   ' → logprob: -2.036527633666992
    4. 'length' → logprob: -2.786527633666992
    5. ' =' → logprob: -3.161527633666992
    6. ' length' → logprob: -3.286527633666992
    7. 'def' → logprob: -3.411527633666992
    8. ' est' → logprob: -3.536527633666992
    9. '_len' → logprob: -3.911527633666992
    10. ' totale' → logprob: -4.036527633666992

Token 414: 'ère' (ID: 4346)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6456356048583984
    2. 'tim' → logprob: -0.8956356048583984
    3. 'ère' → logprob: -3.0206356048583984
    4. 'time' → logprob: -4.770635604858398
    5. 'timer' → logprob: -6.645635604858398
    6. 'te' → logprob: -6.770635604858398
    7. 'té' → logprob: -6.895635604858398
    8. 'er' → logprob: -7.270635604858398
    9. 'prime' → logprob: -7.395635604858398
    10. 'ti' → logprob: -7.520635604858398

Token 415: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.36003577709198
    2. ' uniquement' → logprob: -1.48503577709198
    3. 'sur' → logprob: -3.8600358963012695
    4. ' seulement' → logprob: -4.1100358963012695
    5. ' toujours' → logprob: -4.7350358963012695
    6. ' en' → logprob: -5.2350358963012695
    7. 's' → logprob: -5.4850358963012695
    8. ' only' → logprob: -5.6100358963012695
    9. ' ' → logprob: -5.9850358963012695
    10. '   ' → logprob: -6.3600358963012695

Token 416: ' des' (ID: 731)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7123488187789917
    2. ' l' → logprob: -1.7123488187789917
    3. ' la' → logprob: -1.9623488187789917
    4. 'les' → logprob: -2.5873489379882812
    5. ' chaque' → logprob: -3.5873489379882812
    6. ' le' → logprob: -3.9623489379882812
    7. 'l' → logprob: -3.9623489379882812
    8. 'la' → logprob: -4.212348937988281
    9. ' des' → logprob: -4.337348937988281
    10. 'le' → logprob: -5.212348937988281

Token 417: ' groupes' (ID: 72206)
  Prédit: ' groupes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groupes' → logprob: -0.4366746246814728
    2. ' caractères' → logprob: -1.8116745948791504
    3. ' ensembles' → logprob: -3.0616745948791504
    4. ' types' → logprob: -3.4366745948791504
    5. 'car' → logprob: -4.31167459487915
    6. 'ense' → logprob: -4.43667459487915
    7. 'group' → logprob: -4.43667459487915
    8. ' group' → logprob: -4.93667459487915
    9. ' blocs' → logprob: -4.93667459487915
    10. 'types' → logprob: -5.18667459487915

Token 418: ' cons' (ID: 1473)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.18415099382400513
    2. 'de' → logprob: -2.4341509342193604
    3. '   ' → logprob: -2.8091509342193604
    4. ' of' → logprob: -5.8091511726379395
    5. ',' → logprob: -6.3091511726379395
    6. ' uniques' → logprob: -6.3091511726379395
    7. 'd' → logprob: -6.9341511726379395
    8. ' d' → logprob: -6.9341511726379395
    9. 'distinct' → logprob: -7.1841511726379395
    10. '    ' → logprob: -7.1841511726379395

Token 419: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0019557522609829903
    2. 'ecut' → logprob: -6.251955986022949
    3. 'secut' → logprob: -11.37695598602295
    4. 'cut' → logprob: -11.87695598602295
    5. 'é' → logprob: -13.00195598602295
    6. 'icut' → logprob: -13.50195598602295
    7. '```' → logprob: -13.62695598602295
    8. 't' → logprob: -14.12695598602295
    9. 'e' → logprob: -14.50195598602295
    10. '{' → logprob: -14.62695598602295

Token 420: 'ifs' (ID: 14119)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9579751491546631
    2. '   ' → logprob: -2.082975149154663
    3. 'écut' → logprob: -2.207975149154663
    4. 'ut' → logprob: -2.332975149154663
    5. 'us' → logprob: -3.082975149154663
    6. 'ifs' → logprob: -3.457975149154663
    7. ' de' → logprob: -3.582975149154663
    8. 'uts' → logprob: -3.582975149154663
    9. ' ' → logprob: -3.582975149154663
    10. 't' → logprob: -4.332975387573242

Token 421: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7607362270355225
    2. ',' → logprob: -1.8857362270355225
    3. 'def' → logprob: -2.0107362270355225
    4. '   ' → logprob: -2.5107362270355225
    5. 'de' → logprob: -3.1357362270355225
    6. ' of' → logprob: -3.5107362270355225
    7. '#' → logprob: -4.635736465454102
    8. 's' → logprob: -4.760736465454102
    9. ' et' → logprob: -4.760736465454102
    10. '.' → logprob: -5.135736465454102

Token 422: ' caractères' (ID: 183106)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8830633759498596
    2. 'car' → logprob: -1.8830633163452148
    3. ' caractères' → logprob: -1.8830633163452148
    4. 'lett' → logprob: -2.008063316345215
    5. 'la' → logprob: -2.883063316345215
    6. ' même' → logprob: -3.633063316345215
    7. ' mêmes' → logprob: -4.008063316345215
    8. 'le' → logprob: -4.258063316345215
    9. ' lettres' → logprob: -4.258063316345215
    10. ' la' → logprob: -5.133063316345215

Token 423: ' après' (ID: 16460)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.417165070772171
    2. ',' → logprob: -1.9171650409698486
    3. 'def' → logprob: -2.6671650409698486
    4. '
' → logprob: -4.167165279388428
    5. '.' → logprob: -4.292165279388428
    6. '#' → logprob: -4.292165279388428
    7. 'import' → logprob: -4.667165279388428
    8. ' de' → logprob: -4.917165279388428
    9. ' ,' → logprob: -5.042165279388428
    10. ' présents' → logprob: -5.042165279388428

Token 424: ' ré' (ID: 3146)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.4504394233226776
    2. ' tri' → logprob: -1.950439453125
    3. 'compression' → logprob: -2.200439453125
    4. 'sorted' → logprob: -4.450439453125
    5. 'sorting' → logprob: -4.450439453125
    6. '#' → logprob: -4.575439453125
    7. ' compression' → logprob: -4.700439453125
    8. 'count' → logprob: -4.950439453125
    9. 'avoir' → logprob: -5.325439453125
    10. 'tr' → logprob: -5.450439453125

Token 425: 'ord' (ID: 604)
  Prédit: 'duction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duction' → logprob: -0.27468055486679077
    2. 'ord' → logprob: -1.8996806144714355
    3. 'index' → logprob: -3.5246806144714355
    4. 'é' → logprob: -3.6496806144714355
    5. 'arr' → logprob: -4.0246806144714355
    6. 'organisation' → logprob: -5.8996806144714355
    7. 'ordon' → logprob: -5.8996806144714355
    8. 'initial' → logprob: -6.2746806144714355
    9. 'union' → logprob: -6.5246806144714355
    10. 'partition' → logprob: -6.8996806144714355

Token 426: 'onn' (ID: 9525)
  Prédit: 'onn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onn' → logprob: -0.3385384976863861
    2. 'onnance' → logprob: -1.9635385274887085
    3. 'onné' → logprob: -2.338538408279419
    4. 'onnement' → logprob: -3.713538408279419
    5. 're' → logprob: -5.088538646697998
    6. 'onnée' → logprob: -5.213538646697998
    7. 'on' → logprob: -5.838538646697998
    8. 'er' → logprob: -6.088538646697998
    9. '```' → logprob: -6.213538646697998
    10. 'ering' → logprob: -6.338538646697998

Token 427: 'ancement' (ID: 16092)
  Prédit: 'onnement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'onnement' → logprob: -0.8769195675849915
    2. 'onn' → logprob: -1.2519195079803467
    3. 'onné' → logprob: -2.0019195079803467
    4. 'onnance' → logprob: -2.3769195079803467
    5. 'er' → logprob: -3.7519195079803467
    6. 'onnée' → logprob: -4.626919746398926
    7. 'on' → logprob: -4.876919746398926
    8. 're' → logprob: -5.126919746398926
    9. 'ering' → logprob: -5.626919746398926
    10. 'ination' → logprob: -5.751919746398926

Token 428: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025818878784775734
    2. '
' → logprob: -4.900818824768066
    3. '#' → logprob: -5.275818824768066
    4. '    
' → logprob: -5.400818824768066
    5. ',' → logprob: -5.775818824768066
    6. 'return' → logprob: -6.400818824768066
    7. '.' → logprob: -6.775818824768066
    8. ' return' → logprob: -6.900818824768066
    9. 'def' → logprob: -7.775818824768066
    10. 'import' → logprob: -8.775818824768066

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024461064487695694
    2. '
' → logprob: -4.149461269378662
    3. '    
' → logprob: -5.524461269378662
    4. '#' → logprob: -6.274461269378662
    5. ',' → logprob: -6.774461269378662
    6. '.' → logprob: -7.899461269378662
    7. 'def' → logprob: -8.399460792541504
    8. ' et' → logprob: -9.274460792541504
    9. 'import' → logprob: -9.399460792541504
    10. 'return' → logprob: -9.399460792541504

Token 430: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09825584292411804
    2. '
' → logprob: -3.0982558727264404
    3. '#' (adapté à ' #') → logprob: -3.8482558727264404
    4. '    
' → logprob: -4.348255634307861
    5. 'return' → logprob: -4.973255634307861
    6. ' return' → logprob: -5.598255634307861
    7. 'def' → logprob: -7.473255634307861
    8. ' #' → logprob: -7.848255634307861
    9. 'length' → logprob: -7.973255634307861
    10. ' lengths' → logprob: -8.34825611114502

Token 431: ' En' (ID: 2130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5895249247550964
    2. '#' → logprob: -1.3395249843597412
    3. 'return' → logprob: -2.839524984359741
    4. ' return' → logprob: -3.464524984359741
    5. '
' → logprob: -3.839524984359741
    6. 'total' → logprob: -4.339524745941162
    7. 'count' → logprob: -4.589524745941162
    8. ' total' → logprob: -4.714524745941162
    9. ' #' → logprob: -5.214524745941162
    10. 'max' → logprob: -5.339524745941162

Token 432: ' ré' (ID: 3146)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7304588556289673
    2. 'fait' → logprob: -1.9804588556289673
    3. 'fonction' → logprob: -2.4804587364196777
    4. ' fait' → logprob: -2.6054587364196777
    5. ' fonction' → logprob: -2.9804587364196777
    6. ' effet' → logprob: -3.1054587364196777
    7. 'com' → logprob: -3.2304587364196777
    8. 'test' → logprob: -3.4804587364196777
    9. 'def' → logprob: -3.4804587364196777
    10. 'fin' → logprob: -3.6054587364196777

Token 433: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.17807486653327942
    2. 'arr' → logprob: -2.678074836730957
    3. 'organ' → logprob: -2.803074836730957
    4. 'ordon' → logprob: -4.553074836730957
    5. 'sum' → logprob: -5.553074836730957
    6. 'alité' → logprob: -6.303074836730957
    7. 'du' → logprob: -6.428074836730957
    8. 'é' → logprob: -6.428074836730957
    9. 's' → logprob: -6.678074836730957
    10. 'group' → logprob: -6.928074836730957

Token 434: 'onn' (ID: 9525)
  Prédit: 'onn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onn' → logprob: -0.01282111182808876
    2. 'onnance' → logprob: -4.637821197509766
    3. 'onné' → logprob: -7.262821197509766
    4. 'arr' → logprob: -8.012821197509766
    5. 'onnement' → logprob: -8.137821197509766
    6. 'on' → logprob: -8.137821197509766
    7. 'onne' → logprob: -8.262821197509766
    8. 'er' → logprob: -8.637821197509766
    9. 'onnée' → logprob: -8.637821197509766
    10. 'e' → logprob: -9.262821197509766

Token 435: 'ant' (ID: 493)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.2815956175327301
    2. 'ant' → logprob: -1.5315955877304077
    3. 'ement' → logprob: -3.9065957069396973
    4. 'agement' → logprob: -5.406595706939697
    5. 'er' → logprob: -6.656595706939697
    6. 'ag' → logprob: -6.906595706939697
    7. 'a' → logprob: -7.906595706939697
    8. 'ment' → logprob: -8.281595230102539
    9. 'gement' → logprob: -8.406595230102539
    10. 'ament' → logprob: -8.781595230102539

Token 436: ',' (ID: 11)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.386694997549057
    2. 'les' → logprob: -2.63669490814209
    3. 'letters' → logprob: -2.76169490814209
    4. ',' → logprob: -2.88669490814209
    5. ' s' → logprob: -3.26169490814209
    6. ' letters' → logprob: -3.88669490814209
    7. 's' → logprob: -4.26169490814209
    8. ' la' → logprob: -4.76169490814209
    9. 'the' → logprob: -4.76169490814209
    10. '#' → logprob: -5.01169490814209

Token 437: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5679977536201477
    2. '#' → logprob: -1.567997694015503
    3. '   ' → logprob: -2.692997694015503
    4. ' #' → logprob: -2.817997694015503
    5. ' la' → logprob: -3.567997694015503
    6. 'on' → logprob: -4.067997932434082
    7. ' length' → logprob: -4.442997932434082
    8. ' s' → logprob: -5.067997932434082
    9. ' il' → logprob: -5.192997932434082
    10. 'length' → logprob: -5.192997932434082

Token 438: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.08235844224691391
    2. ' peut' → logprob: -3.3323583602905273
    3. 'pour' → logprob: -4.457358360290527
    4. 'p' → logprob: -5.957358360290527
    5. ' essa' → logprob: -6.207358360290527
    6. 'essa' → logprob: -6.332358360290527
    7. ' pe' → logprob: -6.457358360290527
    8. 'optim' → logprob: -6.582358360290527
    9. 'cherche' → logprob: -6.707358360290527
    10. ' minimise' → logprob: -6.832358360290527

Token 439: ' mettre' (ID: 25339)
  Prédit: ' reg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reg' → logprob: -1.2265256643295288
    2. ' choisir' → logprob: -2.4765257835388184
    3. 'cho' → logprob: -2.4765257835388184
    4. ' comp' → logprob: -2.6015257835388184
    5. 'comp' → logprob: -2.7265257835388184
    6. 'reg' → logprob: -2.7265257835388184
    7. 'mettre' → logprob: -3.1015257835388184
    8. 'ess' → logprob: -3.3515257835388184
    9. ' essayer' → logprob: -3.7265257835388184
    10. 'g' → logprob: -3.8515257835388184

Token 440: ' ensemble' (ID: 33081)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0447051525115967
    2. 'les' → logprob: -1.2947051525115967
    3. ' toutes' → logprob: -2.0447051525115967
    4. ' les' → logprob: -2.1697051525115967
    5. ' tous' → logprob: -3.4197051525115967
    6. 'tout' → logprob: -4.044705390930176
    7. 'letters' → logprob: -4.419705390930176
    8. 'ensemble' → logprob: -4.419705390930176
    9. 'all' → logprob: -4.544705390930176
    10. ' ensemble' → logprob: -4.919705390930176

Token 441: ' un' (ID: 537)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4937446117401123
    2. ' letters' → logprob: -2.1187446117401123
    3. 'les' → logprob: -2.2437446117401123
    4. 'letters' → logprob: -2.8687446117401123
    5. ' tous' → logprob: -3.3687446117401123
    6. ' toutes' → logprob: -3.8687446117401123
    7. ' lettres' → logprob: -3.8687446117401123
    8. 't' → logprob: -4.618744850158691
    9. ' des' → logprob: -4.618744850158691
    10. ' all' → logprob: -5.993744850158691

Token 442: ' seul' (ID: 33041)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.37916451692581177
    2. 'es' → logprob: -2.004164457321167
    3. 'a' → logprob: -2.754164457321167
    4. 's' → logprob: -4.129164695739746
    5. ' interval' → logprob: -4.379164695739746
    6. 'interval' → logprob: -4.629164695739746
    7. 'les' → logprob: -4.879164695739746
    8. ' espace' → logprob: -4.879164695739746
    9. ''ensemble' → logprob: -5.379164695739746
    10. ' e' → logprob: -5.629164695739746

Token 443: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.8744572401046753
    2. ' interval' → logprob: -1.3744572401046753
    3. ' type' → logprob: -2.249457359313965
    4. ' caractère' → logprob: -2.624457359313965
    5. 'type' → logprob: -3.124457359313965
    6. ' groupe' → logprob: -3.499457359313965
    7. 'car' → logprob: -3.999457359313965
    8. ' espace' → logprob: -4.374457359313965
    9. 'es' → logprob: -4.499457359313965
    10. ' des' → logprob: -5.499457359313965

Token 444: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.36934420466423035
    2. 'le' → logprob: -1.3693442344665527
    3. ',' → logprob: -3.2443442344665527
    4. '_' → logprob: -5.494344234466553
    5. 's' → logprob: -6.494344234466553
    6. ' (' → logprob: -6.994344234466553
    7. ' e' → logprob: -7.244344234466553
    8. '-' → logprob: -7.244344234466553
    9. ')' → logprob: -7.619344234466553
    10. 'l' → logprob: -7.619344234466553

Token 445: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045970384031534195
    2. '    
' → logprob: -4.045970439910889
    3. '
' → logprob: -4.545970439910889
    4. ',' → logprob: -5.295970439910889
    5. 'def' → logprob: -6.545970439910889
    6. ' ,' → logprob: -6.545970439910889
    7. '#' → logprob: -6.545970439910889
    8. '.' → logprob: -7.045970439910889
    9. ' return' → logprob: -7.045970439910889
    10. ' s' → logprob: -7.545970439910889

Token 446: ' toutes' (ID: 17502)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6799293160438538
    2. 'tout' → logprob: -1.804929256439209
    3. 'letters' → logprob: -2.304929256439209
    4. 'les' → logprob: -2.804929256439209
    5. ' toutes' → logprob: -3.054929256439209
    6. ' letters' → logprob: -3.804929256439209
    7. ' lettres' → logprob: -3.929929256439209
    8. 'all' → logprob: -4.429929256439209
    9. ' les' → logprob: -4.429929256439209
    10. ' tous' → logprob: -5.179929256439209

Token 447: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.20882952213287354
    2. 'les' → logprob: -2.083829402923584
    3. ' lettres' → logprob: -3.083829402923584
    4. 'letters' → logprob: -4.833829402923584
    5. ' letters' → logprob: -5.083829402923584
    6. ' ' → logprob: -7.458829402923584
    7. ' the' → logprob: -7.458829402923584
    8. '   ' → logprob: -8.083829879760742
    9. ' letras' → logprob: -8.333829879760742
    10. ' des' → logprob: -8.333829879760742

Token 448: ' occurrences' (ID: 108073)
  Prédit: 'lett'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lett' → logprob: -0.19744367897510529
    2. 'letters' → logprob: -2.197443723678589
    3. ' lettres' → logprob: -2.822443723678589
    4. ' letters' → logprob: -6.19744348526001
    5. 'le' → logprob: -6.44744348526001
    6. 'l' → logprob: -6.44744348526001
    7. 'let' → logprob: -7.44744348526001
    8. 'chars' → logprob: -7.57244348526001
    9. 'digits' → logprob: -7.57244348526001
    10. 'a' → logprob: -7.69744348526001

Token 449: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24553412199020386
    2. '    
' → logprob: -1.7455341815948486
    3. '
' → logprob: -3.3705341815948486
    4. '#' → logprob: -5.7455339431762695
    5. ',' → logprob: -6.7455339431762695
    6. '
    
' → logprob: -7.4955339431762695
    7. '    
    
' → logprob: -7.4955339431762695
    8. 'def' → logprob: -7.6205339431762695
    9. 'return' → logprob: -7.8705339431762695
    10. ' return' → logprob: -8.12053394317627

Token 450: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9683871269226074
    2. ' lettres' → logprob: -1.5933871269226074
    3. ' même' → logprob: -1.7183871269226074
    4. ' mêmes' → logprob: -1.9683871269226074
    5. 'lett' → logprob: -2.8433871269226074
    6. ' caractères' → logprob: -4.343387126922607
    7. ' m' → logprob: -5.343387126922607
    8. 'car' → logprob: -5.468387126922607
    9. ' letters' → logprob: -5.593387126922607
    10. ' lettre' → logprob: -5.843387126922607

Token 451: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.8786966800689697
    2. 'car' → logprob: -1.0036966800689697
    3. ' caract' → logprob: -2.6286966800689697
    4. ' lettre' → logprob: -3.1286966800689697
    5. ' type' → logprob: -3.3786966800689697
    6. 'type' → logprob: -4.128696441650391
    7. 'char' → logprob: -4.378696441650391
    8. 'c' → logprob: -4.628696441650391
    9. 'lett' → logprob: -4.628696441650391
    10. ' ' → logprob: -5.628696441650391

Token 452: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5689443349838257
    2. '    
' → logprob: -1.1939443349838257
    3. '
' → logprob: -2.0689444541931152
    4. 'return' → logprob: -6.818944454193115
    5. '#' → logprob: -7.443944454193115
    6. '    
    
' → logprob: -7.443944454193115
    7. '  
' → logprob: -7.818944454193115
    8. '   
' → logprob: -8.318943977355957
    9. '<|end|>' → logprob: -8.318943977355957
    10. ',' → logprob: -8.693943977355957

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039488036185503006
    2. '    
' → logprob: -4.039487838745117
    3. '
' → logprob: -4.289487838745117
    4. 'return' → logprob: -6.039487838745117
    5. ' return' → logprob: -6.289487838745117
    6. '#' → logprob: -6.414487838745117
    7. '  
' → logprob: -8.164487838745117
    8. '```' → logprob: -8.414487838745117
    9. ' 
' → logprob: -8.664487838745117
    10. '    ' → logprob: -8.914487838745117

Token 454: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03064165823161602
    2. '    
' → logprob: -4.280641555786133
    3. 'return' → logprob: -4.655641555786133
    4. ' return' → logprob: -6.030641555786133
    5. '
' → logprob: -6.155641555786133
    6. '#' (adapté à ' #') → logprob: -7.155641555786133
    7. 'result' → logprob: -7.655641555786133
    8. 'length' → logprob: -8.155641555786133
    9. 'count' → logprob: -9.030641555786133
    10. '    ' → logprob: -9.405641555786133

Token 455: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6930723786354065
    2. 'return' → logprob: -1.1930723190307617
    3. ' return' → logprob: -2.6930723190307617
    4. '#' → logprob: -2.6930723190307617
    5. '
' → logprob: -3.4430723190307617
    6. '    
' → logprob: -4.318072319030762
    7. 'total' → logprob: -5.568072319030762
    8. 'count' → logprob: -5.693072319030762
    9. 'result' → logprob: -5.943072319030762
    10. ' total' → logprob: -6.318072319030762

Token 456: ' problème' (ID: 35630)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.9572030305862427
    2. '#' → logprob: -2.082202911376953
    3. ' code' → logprob: -2.082202911376953
    4. 'count' → logprob: -2.207202911376953
    5. ' #' → logprob: -2.332202911376953
    6. ' count' → logprob: -2.582202911376953
    7. 'return' → logprob: -2.832202911376953
    8. ' total' → logprob: -3.207202911376953
    9. 'def' → logprob: -3.582202911376953
    10. ' best' → logprob: -4.082202911376953

Token 457: ' ne' (ID: 453)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3194218575954437
    2. ' est' → logprob: -2.5694217681884766
    3. ' s' → logprob: -3.3194217681884766
    4. ' n' → logprob: -3.3194217681884766
    5. ' semble' → logprob: -3.4444217681884766
    6. ' #' → logprob: -3.8194217681884766
    7. ' continue' → logprob: -4.319421768188477
    8. 'est' → logprob: -5.069421768188477
    9. ' continues' → logprob: -5.069421768188477
    10. ' is' → logprob: -5.069421768188477

Token 458: ' précise' (ID: 95250)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6790077686309814
    2. ' s' → logprob: -1.1790077686309814
    3. ' continue' → logprob: -3.5540077686309814
    4. ')' → logprob: -3.8040077686309814
    5. 'continue' → logprob: -4.054007530212402
    6. 'return' → logprob: -4.054007530212402
    7. ' return' → logprob: -4.054007530212402
    8. ' semble' → logprob: -4.304007530212402
    9. '#' → logprob: -4.929007530212402
    10. ':' → logprob: -4.929007530212402

Token 459: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.02660064958035946
    2. 'pas' → logprob: -3.7766005992889404
    3. ' donc' → logprob: -6.9016008377075195
    4. ' ' → logprob: -7.4016008377075195
    5. ' rien' → logprob: -7.6516008377075195
    6. ' plus' → logprob: -8.40160083770752
    7. ' que' → logprob: -8.52660083770752
    8. ',' → logprob: -8.77660083770752
    9. 'plus' → logprob: -9.77660083770752
    10. '.' → logprob: -9.77660083770752

Token 460: ' qu' (ID: 474)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' si' → logprob: -1.0081478357315063
    2. ' comment' → logprob: -2.133147716522217
    3. 'comment' → logprob: -2.383147716522217
    4. ' s' → logprob: -2.633147716522217
    5. ' if' → logprob: -2.883147716522217
    6. ',' → logprob: -3.008147716522217
    7. ' la' → logprob: -3.258147716522217
    8. ' ce' → logprob: -3.258147716522217
    9. 'explicit' → logprob: -3.633147716522217
    10. 'if' → logprob: -4.008147716522217

Token 461: ''une' (ID: 13337)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1898137331008911
    2. ''' → logprob: -1.4398137331008911
    3. 'u' → logprob: -1.6898137331008911
    4. ' a' → logprob: -3.0648136138916016
    5. ' ' → logprob: -3.4398136138916016
    6. 'a' → logprob: -3.5648136138916016
    7. ' on' → logprob: -3.5648136138916016
    8. ' la' → logprob: -3.6898136138916016
    9. ' the' → logprob: -4.064813613891602
    10. ''il' → logprob: -4.439813613891602

Token 462: ' même' (ID: 9679)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -2.803426504135132
    2. ' interval' → logprob: -2.803426504135132
    3. ' autre' → logprob: -2.928426504135132
    4. ' lettre' → logprob: -3.053426504135132
    5. ' fois' → logprob: -3.178426504135132
    6. ' répét' → logprob: -3.178426504135132
    7. 'interval' → logprob: -3.303426504135132
    8. ' possible' → logprob: -3.428426504135132
    9. ' espace' → logprob: -3.428426504135132
    10. 'ré' → logprob: -3.428426504135132

Token 463: ' lettre' (ID: 68013)
  Prédit: ' lettre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lettre' → logprob: -0.3522034287452698
    2. 'lett' → logprob: -2.227203369140625
    3. 'occ' → logprob: -2.852203369140625
    4. 'occur' → logprob: -3.727203369140625
    5. 'car' → logprob: -3.977203369140625
    6. ' occurrence' → logprob: -4.602203369140625
    7. ' occur' → logprob: -5.227203369140625
    8. ' let' → logprob: -5.227203369140625
    9. ' caractère' → logprob: -5.352203369140625
    10. '   ' → logprob: -5.352203369140625

Token 464: ' répét' (ID: 156936)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ou' → logprob: -1.0245685577392578
    2. ' peut' → logprob: -1.2745685577392578
    3. 'pe' → logprob: -1.3995685577392578
    4. '#' → logprob: -2.399568557739258
    5. 'ou' → logprob: -4.649568557739258
    6. ' pourrait' → logprob: -5.899568557739258
    7. ' ne' → logprob: -6.024568557739258
    8. ' doit' → logprob: -6.274568557739258
    9. ' #' → logprob: -6.524568557739258
    10. ' peux' → logprob: -6.899568557739258

Token 465: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.014275161549448967
    2. 'é' → logprob: -4.389275074005127
    3. 'ition' → logprob: -7.389275074005127
    4. 'e' → logprob: -7.389275074005127
    5. 'ee' → logprob: -8.264275550842285
    6. 'ées' → logprob: -9.764275550842285
    7. 'ence' → logprob: -10.139275550842285
    8. 'és' → logprob: -10.389275550842285
    9. ')' → logprob: -11.264275550842285
    10. '
' → logprob: -11.389275550842285

Token 466: ' est' (ID: 893)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.7590780854225159
    2. '#' → logprob: -1.384078025817871
    3. 'pe' → logprob: -2.259078025817871
    4. ' ne' → logprob: -2.384078025817871
    5. ' ou' → logprob: -4.009078025817871
    6. ' est' → logprob: -4.009078025817871
    7. ' multiple' → logprob: -5.134078025817871
    8. 's' → logprob: -5.384078025817871
    9. ' n' → logprob: -5.384078025817871
    10. ' dans' → logprob: -5.384078025817871

Token 467: ' compress' (ID: 34112)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.6703377962112427
    2. ' compt' → logprob: -1.6703377962112427
    3. 'trait' → logprob: -1.7953377962112427
    4. 'compress' → logprob: -2.295337677001953
    5. ' compress' → logprob: -2.670337677001953
    6. 'count' → logprob: -3.045337677001953
    7. 'prise' → logprob: -3.545337677001953
    8. ' prise' → logprob: -3.670337677001953
    9. ' forcément' → logprob: -4.420337677001953
    10. 'comp' → logprob: -4.420337677001953

Token 468: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.04868955910205841
    2. 'é' → logprob: -3.048689603805542
    3. 'e' → logprob: -10.048689842224121
    4. 'ible' → logprob: -10.548689842224121
    5. 'able' → logprob: -10.923689842224121
    6. '   ' → logprob: -12.048689842224121
    7. 'ed' → logprob: -12.798689842224121
    8. 'éd' → logprob: -13.298689842224121
    9. 'és' → logprob: -13.673689842224121
    10. 'ées' → logprob: -13.923689842224121

Token 469: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36476531624794006
    2. '#' → logprob: -1.9897652864456177
    3. '<|end|>' → logprob: -2.4897654056549072
    4. ',' → logprob: -3.7397654056549072
    5. '
' → logprob: -4.239765167236328
    6. '<|end|>' → logprob: -4.364765167236328
    7. '    
' → logprob: -4.489765167236328
    8. '.' → logprob: -4.739765167236328
    9. 'def' → logprob: -6.239765167236328
    10. ')' → logprob: -6.364765167236328

Token 470: ' nombre' (ID: 9733)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.5305073857307434
    2. ' un' → logprob: -1.1555073261260986
    3. 'une' → logprob: -2.7805073261260986
    4. ' une' → logprob: -4.530507564544678
    5. '1' → logprob: -4.780507564544678
    6. 'se' → logprob: -5.280507564544678
    7. ' ' → logprob: -5.905507564544678
    8. ''un' → logprob: -5.905507564544678
    9. 'plus' → logprob: -6.780507564544678
    10. ' plusieurs' → logprob: -7.280507564544678

Token 471: ' réduit' (ID: 120775)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16525696218013763
    2. '#' → logprob: -2.415256977081299
    3. '<|end|>' → logprob: -3.915256977081299
    4. ',' → logprob: -4.290256977081299
    5. ')' → logprob: -5.040256977081299
    6. '<|end|>' → logprob: -5.290256977081299
    7. '
' → logprob: -5.415256977081299
    8. '.' → logprob: -5.415256977081299
    9. 'def' → logprob: -5.915256977081299
    10. '    
' → logprob: -6.290256977081299

Token 472: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35295283794403076
    2. '<|end|>' → logprob: -1.4779528379440308
    3. '<|end|>' → logprob: -3.7279529571533203
    4. '#' → logprob: -3.8529529571533203
    5. '    
' → logprob: -4.60295295715332
    6. '
' → logprob: -5.22795295715332
    7. ')' → logprob: -5.97795295715332
    8. '  
' → logprob: -6.60295295715332
    9. ',' → logprob: -7.10295295715332
    10. ' ' → logprob: -7.47795295715332

Token 473: 'ex' (ID: 490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15691615641117096
    2. ' )' → logprob: -2.2819161415100098
    3. '),' → logprob: -4.40691614151001
    4. ' seulement' → logprob: -4.90691614151001
    5. ',' → logprob: -5.03191614151001
    6. ' ),' → logprob: -5.28191614151001
    7. ' uniquement' → logprob: -5.28191614151001
    8. ').' → logprob: -6.53191614151001
    9. ' ou' → logprob: -7.40691614151001
    10. ' au' → logprob: -7.78191614151001

Token 474: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2144254446029663
    2. 'cept' → logprob: -2.089425563812256
    3. 'emple' → logprob: -3.589425563812256
    4. 'act' → logprob: -5.089425563812256
    5. 'plic' → logprob: -5.214425563812256
    6. 'cepte' → logprob: -5.214425563812256
    7. ' ce' → logprob: -5.589425563812256
    8. 'c' → logprob: -6.214425563812256
    9. '#' → logprob: -6.464425563812256
    10. 'cl' → logprob: -6.464425563812256

Token 475: ' "' (ID: 392)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6633633375167847
    2. ' "' → logprob: -2.913363456726074
    3. '"' → logprob: -3.038363456726074
    4. ''' → logprob: -3.038363456726074
    5. ' la' → logprob: -3.288363456726074
    6. ' a' → logprob: -3.413363456726074
    7. ''a' → logprob: -3.413363456726074
    8. ')' → logprob: -3.663363456726074
    9. ' on' → logprob: -3.788363456726074
    10. 'a' → logprob: -4.038363456726074

Token 476: 'aaa' (ID: 55894)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9364005923271179
    2. '"' → logprob: -1.9364006519317627
    3. '2' → logprob: -2.3114006519317627
    4. '")' → logprob: -2.5614006519317627
    5. '3' → logprob: -2.8114006519317627
    6. 's' → logprob: -3.5614006519317627
    7. 'count' → logprob: -3.9364006519317627
    8. ''' → logprob: -4.061400413513184
    9. ' a' → logprob: -4.061400413513184
    10. ' ' → logprob: -4.186400413513184

Token 477: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.09457414597272873
    2. '"' → logprob: -3.094574213027954
    3. 's' → logprob: -3.594574213027954
    4. ' ")' → logprob: -4.969573974609375
    5. 'a' → logprob: -5.469573974609375
    6. '"),' → logprob: -5.969573974609375
    7. ')' → logprob: -6.719573974609375
    8. ' "' → logprob: -7.094573974609375
    9. ' "),' → logprob: -8.469573974609375
    10. ')")' → logprob: -8.469573974609375

Token 478: ' →' (ID: 15155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7158649563789368
    2. '")' → logprob: -0.8408649563789368
    3. '"),' → logprob: -3.965864896774292
    4. '   ' → logprob: -3.965864896774292
    5. '),' → logprob: -4.340865135192871
    6. '"' → logprob: -4.840865135192871
    7. ')")' → logprob: -4.965865135192871
    8. ' )' → logprob: -5.715865135192871
    9. ',' → logprob: -6.090865135192871
    10. '#' → logprob: -6.590865135192871

Token 479: ' "' (ID: 392)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9446280598640442
    2. ' a' → logprob: -1.0696280002593994
    3. ''a' → logprob: -1.5696280002593994
    4. ' '' → logprob: -3.5696280002593994
    5. '"a' → logprob: -4.0696282386779785
    6. ' "' → logprob: -4.9446282386779785
    7. ' ' → logprob: -5.8196282386779785
    8. '"' → logprob: -5.8196282386779785
    9. ''' → logprob: -6.8196282386779785
    10. '3' → logprob: -9.06962776184082

Token 480: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007821110193617642
    2. '3' → logprob: -8.125782012939453
    3. ''a' → logprob: -8.625782012939453
    4. '1' → logprob: -8.875782012939453
    5. ' a' → logprob: -9.375782012939453
    6. 'aaa' → logprob: -10.125782012939453
    7. ''' → logprob: -12.063282012939453
    8. '```' → logprob: -12.188282012939453
    9. '"a' → logprob: -12.500782012939453
    10. '"' → logprob: -12.563282012939453

Token 481: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.08828248083591461
    2. '"' → logprob: -3.088282585144043
    3. ' ")' → logprob: -3.588282585144043
    4. 'a' → logprob: -4.713282585144043
    5. ')' → logprob: -6.713282585144043
    6. '"),' → logprob: -8.338282585144043
    7. ' "' → logprob: -8.713282585144043
    8. 's' → logprob: -8.713282585144043
    9. ' "),' → logprob: -9.463282585144043
    10. '")
' → logprob: -9.713282585144043

Token 482: ' ou' (ID: 2031)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3750120997428894
    2. ')' → logprob: -1.2500121593475342
    3. '"' → logprob: -4.500011920928955
    4. '"),' → logprob: -5.500011920928955
    5. ')")' → logprob: -5.875011920928955
    6. '   ' → logprob: -6.125011920928955
    7. ' ")' → logprob: -6.125011920928955
    8. '),' → logprob: -7.000011920928955
    9. ' )' → logprob: -7.000011920928955
    10. ')"' → logprob: -7.625011920928955

Token 483: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8121307492256165
    2. '"a' → logprob: -1.1871306896209717
    3. ' "' → logprob: -1.4371306896209717
    4. 'a' → logprob: -5.312130928039551
    5. ' a' → logprob: -5.937130928039551
    6. '"x' → logprob: -6.562130928039551
    7. ''a' → logprob: -6.812130928039551
    8. ' ' → logprob: -6.937130928039551
    9. ' '' → logprob: -8.56213092803955
    10. '"d' → logprob: -8.93713092803955

Token 484: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4422341585159302
    2. '")' → logprob: -1.5672341585159302
    3. '"' → logprob: -2.5672340393066406
    4. '...' → logprob: -4.192234039306641
    5. ' a' → logprob: -4.692234039306641
    6. '3' → logprob: -4.692234039306641
    7. ')' → logprob: -5.317234039306641
    8. ' ")' → logprob: -5.442234039306641
    9. '"a' → logprob: -5.817234039306641
    10. ''' → logprob: -6.067234039306641

Token 485: '-a' (ID: 8575)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.06828471273183823
    2. '"' → logprob: -2.818284749984741
    3. '"),' → logprob: -5.568284511566162
    4. 'a' → logprob: -6.943284511566162
    5. ' ")' → logprob: -7.568284511566162
    6. ')' → logprob: -8.06828498840332
    7. '").' → logprob: -8.56828498840332
    8. '")
' → logprob: -9.31828498840332
    9. ' "),' → logprob: -10.06828498840332
    10. ')")' → logprob: -10.06828498840332

Token 486: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.035481348633766174
    2. ')")' → logprob: -4.0354814529418945
    3. '"' → logprob: -4.7854814529418945
    4. ')' → logprob: -5.4104814529418945
    5. 'a' → logprob: -6.4104814529418945
    6. ')"' → logprob: -6.7854814529418945
    7. '"),' → logprob: -6.9104814529418945
    8. 'b' → logprob: -9.535481452941895
    9. ')").' → logprob: -9.535481452941895
    10. ')")
' → logprob: -9.660481452941895

Token 487: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3504845201969147
    2. '#' (adapté à ' #') → logprob: -1.4754844903945923
    3. '<|end|>' → logprob: -3.850484609603882
    4. ')' → logprob: -4.600484371185303
    5. '    
' → logprob: -4.600484371185303
    6. 'return' → logprob: -4.975484371185303
    7. '
' → logprob: -5.475484371185303
    8. 'def' → logprob: -5.475484371185303
    9. '<|end|>' → logprob: -5.475484371185303
    10. ' return' → logprob: -5.975484371185303

Token 489: ' Il' (ID: 5329)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19985301792621613
    2. 'return' → logprob: -2.57485294342041
    3. '#' → logprob: -3.07485294342041
    4. ' return' → logprob: -3.57485294342041
    5. ')' → logprob: -4.19985294342041
    6. '    
' → logprob: -5.32485294342041
    7. '
' → logprob: -5.94985294342041
    8. 'def' → logprob: -6.19985294342041
    9. 'length' → logprob: -6.82485294342041
    10. ' ' → logprob: -7.44985294342041

Token 490: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -1.213574767112732
    2. 'f' → logprob: -1.338574767112732
    3. ' semble' → logprob: -1.963574767112732
    4. ' manque' → logprob: -2.2135748863220215
    5. ' faudrait' → logprob: -3.2135748863220215
    6. ' n' → logprob: -3.4635748863220215
    7. ' is' → logprob: -3.7135748863220215
    8. ' a' → logprob: -4.2135748863220215
    9. ' est' → logprob: -4.3385748863220215
    10. ''' → logprob: -4.5885748863220215

Token 491: ' donc' (ID: 14206)
  Prédit: ' juste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' juste' → logprob: -1.5191251039505005
    2. ' compter' → logprob: -1.6441251039505005
    3. 'just' → logprob: -1.8941251039505005
    4. 'comp' → logprob: -2.144124984741211
    5. 'com' → logprob: -3.144124984741211
    6. 'return' → logprob: -3.269124984741211
    7. 'don' → logprob: -3.519124984741211
    8. ' donc' → logprob: -3.769124984741211
    9. 'penser' → logprob: -3.894124984741211
    10. ' just' → logprob: -3.894124984741211

Token 492: ' compter' (ID: 81694)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.6748875975608826
    2. ' compter' → logprob: -1.2998876571655273
    3. 'return' → logprob: -2.7998876571655273
    4. 'count' → logprob: -3.1748876571655273
    5. 'com' → logprob: -3.6748876571655273
    6. 'contin' → logprob: -4.174887657165527
    7. 'prendre' → logprob: -4.174887657165527
    8. 'ret' → logprob: -4.674887657165527
    9. 'consider' → logprob: -4.799887657165527
    10. 'aj' → logprob: -5.049887657165527

Token 493: ' combien' (ID: 106648)
  Prédit: ' uniquement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' uniquement' → logprob: -1.26119863986969
    2. ' seulement' → logprob: -1.38619863986969
    3. ' la' → logprob: -1.51119863986969
    4. ' les' → logprob: -3.2611985206604004
    5. ' au' → logprob: -3.3861985206604004
    6. ' le' → logprob: -3.3861985206604004
    7. 'au' → logprob: -3.7611985206604004
    8. 'le' → logprob: -4.2611985206604
    9. 'len' → logprob: -4.3861985206604
    10. 'la' → logprob: -4.3861985206604

Token 494: ' de' (ID: 334)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.6559624671936035
    2. ' total' → logprob: -1.6559624671936035
    3. ' for' → logprob: -2.0309624671936035
    4. ')' → logprob: -2.7809624671936035
    5. '   ' → logprob: -3.0309624671936035
    6. 'total' → logprob: -3.0309624671936035
    7. '_total' → logprob: -3.1559624671936035
    8. ' #' → logprob: -3.7809624671936035
    9. '    ' → logprob: -3.7809624671936035
    10. ' ' → logprob: -3.9059624671936035

Token 495: ' fois' (ID: 14697)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.7856366038322449
    2. 'car' → logprob: -1.2856366634368896
    3. 'chars' → logprob: -2.2856366634368896
    4. 'tokens' → logprob: -2.7856366634368896
    5. ' tokens' → logprob: -3.7856366634368896
    6. 'interval' → logprob: -4.0356364250183105
    7. 'characters' → logprob: -4.2856364250183105
    8. ' caracteres' → logprob: -4.5356364250183105
    9. 'fois' → logprob: -4.9106364250183105
    10. ' fois' → logprob: -5.1606364250183105

Token 496: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.10021023452281952
    2. ' le' → logprob: -3.475210189819336
    3. ' each' → logprob: -4.100210189819336
    4. ' ' → logprob: -5.100210189819336
    5. 'le' → logprob: -5.100210189819336
    6. 'each' → logprob: -5.100210189819336
    7. ' s' → logprob: -5.600210189819336
    8. 'au' → logprob: -5.975210189819336
    9. ' on' → logprob: -6.225210189819336
    10. ' au' → logprob: -6.225210189819336

Token 497: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.5215719938278198
    2. 'car' → logprob: -1.0215719938278198
    3. ' caract' → logprob: -4.271572113037109
    4. 'char' → logprob: -4.646572113037109
    5. 'c' → logprob: -5.271572113037109
    6. 'occ' → logprob: -5.521572113037109
    7. 'token' → logprob: -5.771572113037109
    8. ' character' → logprob: -6.271572113037109
    9. 'character' → logprob: -6.271572113037109
    10. ' car' → logprob: -7.021572113037109

Token 498: ' apparaît' (ID: 147656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1865566521883011
    2. '    
' → logprob: -2.436556577682495
    3. '
' → logprob: -2.811556577682495
    4. '<|end|>' → logprob: -4.936556816101074
    5. '#' → logprob: -5.686556816101074
    6. '<|end|>' → logprob: -6.311556816101074
    7. ')' → logprob: -6.561556816101074
    8. '    ' → logprob: -6.686556816101074
    9. 'length' → logprob: -6.936556816101074
    10. ',' → logprob: -7.061556816101074

Token 499: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8184617757797241
    2. '   ' → logprob: -1.3184617757797241
    3. '    
' → logprob: -2.0684618949890137
    4. '<|end|>' → logprob: -2.0684618949890137
    5. '<|end|>' → logprob: -4.068461894989014
    6. '#' → logprob: -4.693461894989014
    7. 'length' → logprob: -6.068461894989014
    8. '
    
' → logprob: -6.193461894989014
    9. '  
' → logprob: -6.943461894989014
    10. ')' → logprob: -7.193461894989014

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05789807811379433
    2. '#' → logprob: -3.8078980445861816
    3. '<|end|>' → logprob: -4.682898044586182
    4. '    
' → logprob: -4.807898044586182
    5. '```' → logprob: -5.307898044586182
    6. '
' → logprob: -5.682898044586182
    7. 'return' → logprob: -6.182898044586182
    8. '<|end|>' → logprob: -6.307898044586182
    9. ' return' → logprob: -6.682898044586182
    10. 'tokens' → logprob: -7.307898044586182

Token 501: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06739748269319534
    2. '#' (adapté à ' #') → logprob: -3.6923975944519043
    3. '
' → logprob: -3.8173975944519043
    4. '    
' → logprob: -4.567397594451904
    5. '```' → logprob: -6.067397594451904
    6. 'return' → logprob: -6.692397594451904
    7. 'length' → logprob: -6.817397594451904
    8. ' return' → logprob: -7.317397594451904
    9. ' length' → logprob: -7.942397594451904
    10. 'compressed' → logprob: -8.067397117614746

Token 502: ' Mais' (ID: 13880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6146695017814636
    2. '#' → logprob: -0.9896695017814636
    3. ' return' → logprob: -3.8646695613861084
    4. '
' → logprob: -4.239669322967529
    5. 'return' → logprob: -4.239669322967529
    6. '    
' → logprob: -4.614669322967529
    7. ' #' → logprob: -4.864669322967529
    8. ' total' → logprob: -4.989669322967529
    9. ' length' → logprob: -5.489669322967529
    10. 'total' → logprob: -5.864669322967529

Token 503: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3963650166988373
    2. ' le' → logprob: -2.27136492729187
    3. ' on' → logprob: -2.89636492729187
    4. '#' → logprob: -3.52136492729187
    5. ' for' → logprob: -3.52136492729187
    6. ' dans' → logprob: -3.64636492729187
    7. ' ici' → logprob: -4.021365165710449
    8. ' pour' → logprob: -4.896365165710449
    9. 'le' → logprob: -5.146365165710449
    10. ' il' → logprob: -5.271365165710449

Token 504: ' compression' (ID: 41811)
  Prédit: ' compression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compression' → logprob: -0.6406696438789368
    2. '#' → logprob: -1.390669584274292
    3. 'compression' → logprob: -2.515669584274292
    4. 'def' → logprob: -3.140669584274292
    5. ' code' → logprob: -3.765669584274292
    6. 'count' → logprob: -4.015669822692871
    7. ' #' → logprob: -4.890669822692871
    8. ' count' → logprob: -5.390669822692871
    9. 'compressed' → logprob: -5.515669822692871
    10. ' def' → logprob: -5.765669822692871

Token 505: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.9793802499771118
    2. ' n' → logprob: -1.6043802499771118
    3. ' des' → logprob: -2.3543801307678223
    4. ' s' → logprob: -2.4793801307678223
    5. ' ' → logprob: -3.1043801307678223
    6. ' continue' → logprob: -3.3543801307678223
    7. '<|end|>' → logprob: -4.479380130767822
    8. ' does' → logprob: -4.604380130767822
    9. ' est' → logprob: -4.729380130767822
    10. 's' → logprob: -4.729380130767822

Token 506: ' réduit' (ID: 120775)
  Prédit: ' compte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compte' → logprob: -1.5702424049377441
    2. ' comp' → logprob: -1.6952424049377441
    3. ' prend' → logprob: -1.8202424049377441
    4. 'comp' → logprob: -1.9452424049377441
    5. ' se' → logprob: -2.945242404937744
    6. 'se' → logprob: -2.945242404937744
    7. ' s' → logprob: -3.070242404937744
    8. 'ne' → logprob: -3.320242404937744
    9. 'count' → logprob: -3.695242404937744
    10. 's' → logprob: -3.820242404937744

Token 507: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.1888514757156372
    2. 'pas' → logprob: -2.3138513565063477
    3. ' que' → logprob: -2.9388513565063477
    4. ' la' → logprob: -4.188851356506348
    5. ' plus' → logprob: -6.813851356506348
    6. 'plus' → logprob: -7.563851356506348
    7. ' uniquement' → logprob: -7.938851356506348
    8. 'la' → logprob: -8.063851356506348
    9. 'length' → logprob: -8.188851356506348
    10. ' strict' → logprob: -8.438851356506348

Token 508: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.09610942006111145
    2. 'la' → logprob: -2.721109390258789
    3. ' pas' → logprob: -5.346109390258789
    4. 'l' → logprob: -5.721109390258789
    5. 'length' → logprob: -5.721109390258789
    6. 'pas' → logprob: -6.096109390258789
    7. 'plus' → logprob: -6.471109390258789
    8. ' plus' → logprob: -6.721109390258789
    9. '   ' → logprob: -6.846109390258789
    10. 'le' → logprob: -6.846109390258789

Token 509: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.32175785303115845
    2. ' nombre' → logprob: -2.0717577934265137
    3. 'length' → logprob: -3.3217577934265137
    4. ' code' → logprob: -3.5717577934265137
    5. 'comp' → logprob: -4.196757793426514
    6. 'count' → logprob: -4.321757793426514
    7. 'tail' → logprob: -4.446757793426514
    8. 's' → logprob: -4.821757793426514
    9. 'code' → logprob: -4.821757793426514
    10. ' length' → logprob: -5.196757793426514

Token 510: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.42422282695770264
    2. ' des' → logprob: -1.4242228269577026
    3. '   ' → logprob: -3.924222946166992
    4. ' tokens' → logprob: -4.424222946166992
    5. ' ' → logprob: -4.924222946166992
    6. ' s' → logprob: -5.174222946166992
    7. '<|end|>' → logprob: -5.174222946166992
    8. ' d' → logprob: -5.299222946166992
    9. ' +=' → logprob: -5.674222946166992
    10. ',' → logprob: -5.799222946166992

Token 511: ' répét' (ID: 156936)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.3365090489387512
    2. ' caractères' → logprob: -1.3365089893341064
    3. 'tokens' → logprob: -4.3365092277526855
    4. ' tokens' → logprob: -4.8365092277526855
    5. 'token' → logprob: -7.8365092277526855
    6. 'chars' → logprob: -8.211508750915527
    7. ' car' → logprob: -8.211508750915527
    8. ' ' → logprob: -8.336508750915527
    9. ' caracteres' → logprob: -8.961508750915527
    10. ' caract' → logprob: -8.961508750915527

Token 512: 'itions' (ID: 5500)
  Prédit: 'itions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itions' → logprob: -0.2767203748226166
    2. 'ition' → logprob: -1.651720404624939
    3. 'es' → logprob: -3.5267202854156494
    4. 'és' → logprob: -5.4017205238342285
    5. 'e' → logprob: -5.7767205238342285
    6. ' caractères' → logprob: -5.7767205238342285
    7. 'it' → logprob: -6.6517205238342285
    8. 'é' → logprob: -7.0267205238342285
    9. ' caracteres' → logprob: -7.1517205238342285
    10. 'ctions' → logprob: -7.2767205238342285

Token 513: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5209066271781921
    2. '<|end|>' → logprob: -1.520906686782837
    3. '    
' → logprob: -2.395906686782837
    4. '
' → logprob: -2.895906686782837
    5. '<|end|>' → logprob: -3.645906686782837
    6. '#' → logprob: -5.020906448364258
    7. ')' → logprob: -6.145906448364258
    8. '  
' → logprob: -6.645906448364258
    9. '```' → logprob: -7.020906448364258
    10. '\n' → logprob: -7.645906448364258

Token 514: ''un' (ID: 9788)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7582345008850098
    2. 'e' → logprob: -0.8832345008850098
    3. 'es' → logprob: -3.5082345008850098
    4. ''un' → logprob: -3.5082345008850098
    5. 'ans' → logprob: -3.5082345008850098
    6. ''espace' → logprob: -4.75823450088501
    7. 'eux' → logprob: -5.00823450088501
    8. ' e' → logprob: -5.50823450088501
    9. ''' → logprob: -5.63323450088501
    10. ''u' → logprob: -7.13323450088501

Token 515: ' même' (ID: 9679)
  Prédit: ' caractère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.5147547125816345
    2. 'car' → logprob: -1.0147547721862793
    3. ' même' → logprob: -4.764754772186279
    4. 'char' → logprob: -4.889754772186279
    5. 'interval' → logprob: -5.014754772186279
    6. ' caract' → logprob: -5.139754772186279
    7. ' interval' → logprob: -6.014754772186279
    8. ' ' → logprob: -6.389754772186279
    9. 'token' → logprob: -6.514754772186279
    10. ' token' → logprob: -6.889754772186279

Token 516: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.2287304550409317
    2. ' caractère' → logprob: -1.7287304401397705
    3. ' ' → logprob: -4.60373067855835
    4. ' caract' → logprob: -5.22873067855835
    5. 'char' → logprob: -5.60373067855835
    6. 'token' → logprob: -5.97873067855835
    7. ' espace' → logprob: -6.97873067855835
    8. 'es' → logprob: -7.35373067855835
    9. ' car' → logprob: -7.35373067855835
    10. 'character' → logprob: -7.35373067855835

Token 517: ',
' (ID: 412)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 518: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0108911991119385
    2. '#' → logprob: -1.1358911991119385
    3. '<|end|>' → logprob: -1.5108911991119385
    4. ' #' → logprob: -3.1358911991119385
    5. '<|end|>' → logprob: -4.635890960693359
    6. ')' → logprob: -4.635890960693359
    7. ' mais' → logprob: -5.510890960693359
    8. ' ' → logprob: -5.510890960693359
    9. ',' → logprob: -5.760890960693359
    10. ' but' → logprob: -5.760890960693359

Token 519: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.07178337126970291
    2. '   ' → logprob: -2.9467833042144775
    3. ' #' → logprob: -4.446783542633057
    4. ' donc' → logprob: -6.196783542633057
    5. ' mais' → logprob: -6.571783542633057
    6. ' so' → logprob: -7.821783542633057
    7. ' car' → logprob: -7.821783542633057
    8. ' ' → logprob: -9.321783065795898
    9. ' but' → logprob: -9.571783065795898
    10. '    
' → logprob: -9.696783065795898

Token 520: ' il' (ID: 1793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2441696673631668
    2. ' #' → logprob: -1.9941697120666504
    3. '   ' → logprob: -3.7441697120666504
    4. ' return' → logprob: -4.11916971206665
    5. ' donc' → logprob: -4.49416971206665
    6. ' car' → logprob: -4.86916971206665
    7. ' mais' → logprob: -4.86916971206665
    8. 'return' → logprob: -4.99416971206665
    9. ' il' → logprob: -6.36916971206665
    10. ' ' → logprob: -7.49416971206665

Token 521: ' ne' (ID: 453)
  Prédit: ' faut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.1795155107975006
    2. ' ne' → logprob: -2.4295156002044678
    3. ' n' → logprob: -3.8045156002044678
    4. 'f' → logprob: -4.179515361785889
    5. ' semble' → logprob: -4.179515361785889
    6. 's' → logprob: -5.304515361785889
    7. 'n' → logprob: -6.054515361785889
    8. '#' → logprob: -6.054515361785889
    9. ' faudra' → logprob: -6.179515361785889
    10. ' faudrait' → logprob: -6.179515361785889

Token 522: ' change' (ID: 3343)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.027090387418866158
    2. ' faut' → logprob: -3.902090311050415
    3. 'fa' → logprob: -5.152090549468994
    4. 's' → logprob: -8.402090072631836
    5. ' f' → logprob: -8.652090072631836
    6. 'fait' → logprob: -9.152090072631836
    7. 'pas' → logprob: -10.527090072631836
    8. ' fa' → logprob: -10.652090072631836
    9. ' ' → logprob: -10.652090072631836
    10. ' reste' → logprob: -11.027090072631836

Token 523: ' que' (ID: 661)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.0088764363899827
    2. 'pas' → logprob: -5.133876323699951
    3. ' rien' → logprob: -6.883876323699951
    4. ' donc' → logprob: -7.133876323699951
    5. 't' → logprob: -8.00887680053711
    6. ' plus' → logprob: -8.38387680053711
    7. 's' → logprob: -9.00887680053711
    8. 'r' → logprob: -9.00887680053711
    9. 'ra' → logprob: -9.13387680053711
    10. ' jamais' → logprob: -9.63387680053711

Token 524: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.15062282979488373
    2. 'la' → logprob: -2.275622844696045
    3. ' l' → logprob: -4.025622844696045
    4. 'l' → logprob: -4.525622844696045
    5. 'leur' → logprob: -5.400622844696045
    6. 'le' → logprob: -6.150622844696045
    7. ' leur' → logprob: -7.400622844696045
    8. ' le' → logprob: -7.650622844696045
    9. ' sa' → logprob: -8.525622367858887
    10. ' ' → logprob: -9.025622367858887

Token 525: ' représentation' (ID: 162614)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.7214446067810059
    2. ' nombre' → logprob: -1.0964446067810059
    3. 'length' → logprob: -2.721444606781006
    4. 'count' → logprob: -3.221444606781006
    5. ' length' → logprob: -4.346444606781006
    6. ' type' → logprob: -5.096444606781006
    7. ' count' → logprob: -5.096444606781006
    8. ' code' → logprob: -5.221444606781006
    9. ' compteur' → logprob: -5.221444606781006
    10. 'code' → logprob: -5.346444606781006

Token 526: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40116530656814575
    2. '<|end|>' → logprob: -1.901165246963501
    3. '
' → logprob: -2.401165246963501
    4. '    
' → logprob: -2.776165246963501
    5. '<|end|>' → logprob: -4.52616548538208
    6. '#' → logprob: -5.77616548538208
    7. '  
' → logprob: -6.15116548538208
    8. 'return' → logprob: -6.27616548538208
    9. ' 
' → logprob: -6.52616548538208
    10. ')' → logprob: -6.90116548538208

Token 527: ' sé' (ID: 7462)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.3765162527561188
    2. 'interval' → logprob: -1.7515162229537964
    3. ' interv' → logprob: -3.001516342163086
    4. 'inter' → logprob: -3.001516342163086
    5. ' caractères' → logprob: -3.626516342163086
    6. 'group' → logprob: -5.751516342163086
    7. 'characters' → logprob: -6.501516342163086
    8. 'ranges' → logprob: -6.501516342163086
    9. 'pl' → logprob: -6.876516342163086
    10. 'contin' → logprob: -7.001516342163086

Token 528: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.527934193611145
    2. 'quence' → logprob: -0.902934193611145
    3. 'quent' → logprob: -5.7779340744018555
    4. 'q' → logprob: -7.1529340744018555
    5. 'r' → logprob: -8.152934074401855
    6. 'qu' → logprob: -8.902934074401855
    7. 'lect' → logprob: -9.277934074401855
    8. 'rie' → logprob: -9.402934074401855
    9. 'ries' → logprob: -9.527934074401855
    10. 'lection' → logprob: -9.652934074401855

Token 529: ' cons' (ID: 1473)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03994745761156082
    2. '    
' → logprob: -4.039947509765625
    3. '
' → logprob: -5.039947509765625
    4. '#' → logprob: -5.414947509765625
    5. '<|end|>' → logprob: -5.664947509765625
    6. 'return' → logprob: -6.414947509765625
    7. ' return' → logprob: -6.664947509765625
    8. ')' → logprob: -7.414947509765625
    9. '<|end|>' → logprob: -7.539947509765625
    10. '    ' → logprob: -7.539947509765625

Token 530: 'écut' (ID: 96392)
  Prédit: 'quent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quent' → logprob: -0.005736560095101595
    2. 'qu' → logprob: -5.505736351013184
    3. 'quences' → logprob: -7.255736351013184
    4. 'quential' → logprob: -7.755736351013184
    5. 'cut' → logprob: -8.630736351013184
    6. 'lect' → logprob: -8.880736351013184
    7. 'r' → logprob: -10.255736351013184
    8. 'u' → logprob: -10.380736351013184
    9. '```' → logprob: -10.755736351013184
    10. 'quence' → logprob: -10.880736351013184

Token 531: 'ives' (ID: 2264)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.7970383763313293
    2. 'ifs' → logprob: -1.6720383167266846
    3. 'ives' → logprob: -2.0470383167266846
    4. 'utive' → logprob: -2.1720383167266846
    5. 'if' → logprob: -3.2970383167266846
    6. 'ive' → logprob: -3.4220383167266846
    7. 'uts' → logprob: -4.297038555145264
    8. 'u' → logprob: -4.422038555145264
    9. 'utes' → logprob: -5.672038555145264
    10. 'iv' → logprob: -5.922038555145264

Token 532: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6343284845352173
    2. '
' → logprob: -1.1343284845352173
    3. '<|end|>' → logprob: -2.2593283653259277
    4. '    
' → logprob: -4.259328365325928
    5. 'return' → logprob: -5.259328365325928
    6. ')' → logprob: -5.634328365325928
    7. '<|end|>' → logprob: -5.759328365325928
    8. '\n' → logprob: -5.884328365325928
    9. '#' → logprob: -5.884328365325928
    10. ' ' → logprob: -6.009328365325928

Token 533: ''' (ID: 6)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.07890433073043823
    2. ' caractères' → logprob: -3.453904390335083
    3. 'lett' → logprob: -4.578904151916504
    4. 'chars' → logprob: -5.078904151916504
    5. 'des' → logprob: -5.328904151916504
    6. 'characters' → logprob: -6.078904151916504
    7. 'diff' → logprob: -6.078904151916504
    8. 'le' → logprob: -6.078904151916504
    9. 'c' → logprob: -6.203904151916504
    10. '```' → logprob: -6.453904151916504

Token 534: 'élé' (ID: 15228)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.007251407485455275
    2. 'diff' → logprob: -5.632251262664795
    3. 'lett' → logprob: -6.257251262664795
    4. ' caractères' → logprob: -7.507251262664795
    5. 'chars' → logprob: -8.007251739501953
    6. 'codes' → logprob: -8.507251739501953
    7. '```' → logprob: -8.632251739501953
    8. 'characters' → logprob: -9.007251739501953
    9. 'des' → logprob: -9.382251739501953
    10. 'l' → logprob: -9.882251739501953

Token 535: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.011089440435171127
    2. 'ment' → logprob: -4.511089324951172
    3. 'm' → logprob: -11.261089324951172
    4. 'MENTS' → logprob: -12.136089324951172
    5. '`' → logprob: -12.636089324951172
    6. 'mente' → logprob: -13.011089324951172
    7. 'mentar' → logprob: -13.136089324951172
    8. '```' → logprob: -13.136089324951172
    9. 'ements' → logprob: -13.261089324951172
    10. 'mentation' → logprob: -13.511089324951172

Token 536: ' cons' (ID: 1473)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3890727162361145
    2. '<|end|>' → logprob: -1.5140726566314697
    3. ')' → logprob: -3.5140726566314697
    4. '<|end|>' → logprob: -3.6390726566314697
    5. '    
' → logprob: -4.139072895050049
    6. '
' → logprob: -4.389072895050049
    7. '#' → logprob: -5.389072895050049
    8. '  
' → logprob: -6.389072895050049
    9. ' ' → logprob: -7.014072895050049
    10. ',' → logprob: -7.014072895050049

Token 537: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0012023737654089928
    2. 'ecut' → logprob: -6.751202583312988
    3. 'cut' → logprob: -11.501202583312988
    4. 'secut' → logprob: -11.876202583312988
    5. 'é' → logprob: -12.001202583312988
    6. 'éc' → logprob: -13.001202583312988
    7. 'ec' → logprob: -13.376202583312988
    8. 't' → logprob: -13.876202583312988
    9. '```' → logprob: -14.001202583312988
    10. '%C' → logprob: -14.501202583312988

Token 538: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.0018534351838752627
    2. 'if' → logprob: -6.8768534660339355
    3. 'ut' → logprob: -8.501852989196777
    4. 'uts' → logprob: -8.876852989196777
    5. '   ' → logprob: -9.001852989196777
    6. 'u' → logprob: -9.001852989196777
    7. 'i' → logprob: -9.501852989196777
    8. 'ive' → logprob: -10.251852989196777
    9. '#' → logprob: -11.001852989196777
    10. 'ivement' → logprob: -11.251852989196777

Token 539: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6160882115364075
    2. '<|end|>' → logprob: -1.6160881519317627
    3. ')' → logprob: -2.6160881519317627
    4. 'return' → logprob: -3.3660881519317627
    5. '<|end|>' → logprob: -3.6160881519317627
    6. '#' → logprob: -3.6160881519317627
    7. '    
' → logprob: -3.9910881519317627
    8. '
' → logprob: -3.9910881519317627
    9. 'tokens' → logprob: -4.366088390350342
    10. ' return' → logprob: -4.741088390350342

Token 540: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07821115851402283
    2. 'la' → logprob: -2.9532110691070557
    3. ' l' → logprob: -4.578211307525635
    4. 's' → logprob: -5.328211307525635
    5. 'le' → logprob: -5.828211307525635
    6. 'lex' → logprob: -5.953211307525635
    7. ' la' → logprob: -7.328211307525635
    8. 'une' → logprob: -7.453211307525635
    9. 'leur' → logprob: -7.953211307525635
    10. 'les' → logprob: -8.453210830688477

Token 541: ''al' (ID: 47062)
  Prédit: ''ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.38750436902046204
    2. 'ordre' → logprob: -1.6375043392181396
    3. 'ascii' → logprob: -3.5125043392181396
    4. ''' → logprob: -3.8875043392181396
    5. ''ensemble' → logprob: -3.8875043392181396
    6. 's' → logprob: -4.887504577636719
    7. 'ASCII' → logprob: -4.887504577636719
    8. 'interval' → logprob: -5.012504577636719
    9. 'ord' → logprob: -5.512504577636719
    10. 'code' → logprob: -5.512504577636719

Token 542: 'phabet' (ID: 29466)
  Prédit: 'phabet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phabet' → logprob: -0.0020774556323885918
    2. 'pha' → logprob: -6.627077579498291
    3. 'ph' → logprob: -7.752077579498291
    4. 'ement' → logprob: -8.752077102661133
    5. 'p' → logprob: -10.627077102661133
    6. 'phan' → logprob: -10.752077102661133
    7. 'phe' → logprob: -11.002077102661133
    8. 's' → logprob: -11.002077102661133
    9. 'alphabet' → logprob: -11.127077102661133
    10. 'ément' → logprob: -11.502077102661133

Token 543: '/d' (ID: 6662)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0498734675347805
    2. '    
' → logprob: -4.174873352050781
    3. '#' → logprob: -5.049873352050781
    4. ')' → logprob: -5.174873352050781
    5. '<|end|>' → logprob: -5.299873352050781
    6. 'return' → logprob: -5.424873352050781
    7. 'length' → logprob: -5.674873352050781
    8. '
' → logprob: -6.549873352050781
    9. '    ' → logprob: -6.799873352050781
    10. ' return' → logprob: -6.799873352050781

Token 544: 'igits' (ID: 64824)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -1.4033129215240479
    2. 'e' → logprob: -1.7783129215240479
    3. 'igit' → logprob: -1.9033129215240479
    4. ''ordre' → logprob: -2.278312921524048
    5. 'u' → logprob: -2.403312921524048
    6. ''une' → logprob: -2.778312921524048
    7. 'igits' → logprob: -2.903312921524048
    8. 'é' → logprob: -3.278312921524048
    9. ''' → logprob: -4.028312683105469
    10. 'ans' → logprob: -4.278312683105469

Token 545: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22801333665847778
    2. 'return' → logprob: -2.103013277053833
    3. '#' → logprob: -3.978013277053833
    4. ' return' → logprob: -4.103013515472412
    5. '
' → logprob: -4.353013515472412
    6. ')' → logprob: -4.353013515472412
    7. '    
' → logprob: -4.478013515472412
    8. 'length' → logprob: -5.853013515472412
    9. 'result' → logprob: -6.728013515472412
    10. 'def' → logprob: -7.353013515472412

Token 546: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09205781668424606
    2. 'return' → logprob: -3.217057704925537
    3. '    
' → logprob: -4.092057704925537
    4. ' return' → logprob: -4.967057704925537
    5. '
' → logprob: -5.092057704925537
    6. ')' → logprob: -5.342057704925537
    7. 'tokens' → logprob: -5.842057704925537
    8. 'count' → logprob: -6.217057704925537
    9. '<|end|>' → logprob: -6.467057704925537
    10. '```' → logprob: -6.967057704925537

Token 547: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05759438872337341
    2. 'return' → logprob: -3.3075942993164062
    3. '
' → logprob: -5.057594299316406
    4. '    
' → logprob: -5.057594299316406
    5. ' return' → logprob: -6.307594299316406
    6. '#' → logprob: -6.557594299316406
    7. 'result' → logprob: -6.932594299316406
    8. 'count' → logprob: -7.057594299316406
    9. 'length' → logprob: -7.307594299316406
    10. 'total' → logprob: -7.807594299316406

Token 548: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7013137340545654
    2. 'total' → logprob: -1.5763137340545654
    3. '#' (adapté à ' #') → logprob: -1.9513137340545654
    4. '   ' → logprob: -2.3263137340545654
    5. 'count' → logprob: -3.7013137340545654
    6. 'compressed' → logprob: -4.3263139724731445
    7. 'result' → logprob: -5.3263139724731445
    8. 'freq' → logprob: -5.7013139724731445
    9. 'counts' → logprob: -5.9513139724731445
    10. 'min' → logprob: -6.4513139724731445

Token 549: ' La' (ID: 3038)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9842975735664368
    2. 'total' → logprob: -1.109297513961792
    3. '#' → logprob: -2.234297513961792
    4. 'count' → logprob: -2.984297513961792
    5. 'result' → logprob: -3.484297513961792
    6. '   ' → logprob: -3.734297513961792
    7. 'compressed' → logprob: -3.734297513961792
    8. 'freq' → logprob: -4.359297752380371
    9. ' total' → logprob: -4.484297752380371
    10. ' return' → logprob: -4.734297752380371

Token 550: ' meilleure' (ID: 52387)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1246570348739624
    2. 'return' → logprob: -1.3746570348739624
    3. 'count' → logprob: -1.9996570348739624
    4. '#' → logprob: -2.124657154083252
    5. 'total' → logprob: -2.874657154083252
    6. 'result' → logprob: -3.499657154083252
    7. ' return' → logprob: -4.249657154083252
    8. 'compressed' → logprob: -4.249657154083252
    9. 'length' → logprob: -4.374657154083252
    10. '   ' → logprob: -5.124657154083252

Token 551: ' approche' (ID: 102373)
  Prédit: '_solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_solution' → logprob: -1.5541142225265503
    2. 'compression' → logprob: -1.9291142225265503
    3. 'compressed' → logprob: -2.55411434173584
    4. 'option' → logprob: -2.67911434173584
    5. 'solution' → logprob: -2.67911434173584
    6. '_com' → logprob: -2.80411434173584
    7. '_option' → logprob: -2.92911434173584
    8. ' solution' → logprob: -3.17911434173584
    9. 'comp' → logprob: -3.30411434173584
    10. '_length' → logprob: -3.42911434173584

Token 552: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.9682056903839111
    2. '   ' → logprob: -1.0932056903839111
    3. ' return' → logprob: -2.593205690383911
    4. ':' → logprob: -3.093205690383911
    5. 'return' → logprob: -3.718205690383911
    6. ',' → logprob: -3.843205690383911
    7. ' is' → logprob: -4.093205451965332
    8. ' serait' → logprob: -4.093205451965332
    9. '#' → logprob: -4.218205451965332
    10. 'est' → logprob: -4.843205451965332

Token 553: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3046563863754272
    2. ' de' → logprob: -1.3046563863754272
    3. '    ' → logprob: -1.5546563863754272
    4. 'def' → logprob: -2.179656505584717
    5. 'return' → logprob: -2.679656505584717
    6. 'min' → logprob: -4.304656505584717
    7. ' return' → logprob: -4.429656505584717
    8. ' d' → logprob: -4.554656505584717
    9. 'de' → logprob: -4.804656505584717
    10. ' to' → logprob: -5.054656505584717

Token 554: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39001667499542236
    2. 'return' → logprob: -1.8900166749954224
    3. ' return' → logprob: -2.515016555786133
    4. 'min' → logprob: -3.015016555786133
    5. ' min' → logprob: -4.390016555786133
    6. 'max' → logprob: -4.515016555786133
    7. 'def' → logprob: -5.890016555786133
    8. '    ' → logprob: -5.890016555786133
    9. 'len' → logprob: -5.890016555786133
    10. ' max' → logprob: -5.890016555786133

Token 555: ' :
' (ID: 10039)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.19547368586063385
    2. ' min' → logprob: -2.4454736709594727
    3. 'return' → logprob: -3.9454736709594727
    4. 'max' → logprob: -4.320473670959473
    5. 'sum' → logprob: -4.320473670959473
    6. 'count' → logprob: -4.445473670959473
    7. 'len' → logprob: -4.695473670959473
    8. ' return' → logprob: -5.195473670959473
    9. ' sum' → logprob: -5.945473670959473
    10. ' compter' → logprob: -6.195473670959473

Token 556: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7071095108985901
    2. '   ' → logprob: -0.8321095108985901
    3. '#' → logprob: -3.5821094512939453
    4. ' #' → logprob: -4.332109451293945
    5. ' calcul' → logprob: -4.957109451293945
    6. 'return' → logprob: -5.332109451293945
    7. ' compter' → logprob: -5.582109451293945
    8. ' comb' → logprob: -6.082109451293945
    9. ' length' → logprob: -6.707109451293945
    10. ' comp' → logprob: -6.707109451293945

Token 557: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.589626133441925
    2. '#' (adapté à ' #') → logprob: -1.2146260738372803
    3. ' return' → logprob: -2.4646260738372803
    4. ' #' → logprob: -3.4646260738372803
    5. 'return' → logprob: -3.8396260738372803
    6. ' comb' → logprob: -6.339626312255859
    7. '```' → logprob: -6.964626312255859
    8. '
' → logprob: -7.089626312255859
    9. '    
' → logprob: -7.089626312255859
    10. ' compter' → logprob: -7.714626312255859

Token 558: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14090509712696075
    2. 'return' → logprob: -3.6409051418304443
    3. ' return' → logprob: -3.6409051418304443
    4. ' #' → logprob: -4.015904903411865
    5. 'comp' → logprob: -5.015904903411865
    6. '   ' → logprob: -5.390904903411865
    7. 'min' → logprob: -5.640904903411865
    8. 'count' → logprob: -6.015904903411865
    9. 'consider' → logprob: -6.140904903411865
    10. 'length' → logprob: -6.265904903411865

Token 559: ' Reg' (ID: 3955)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0115045309066772
    2. 'comp' → logprob: -2.136504650115967
    3. ' calcul' → logprob: -2.261504650115967
    4. ' #' → logprob: -2.886504650115967
    5. ' compter' → logprob: -3.011504650115967
    6. 'calcul' → logprob: -3.011504650115967
    7. 'Calcul' → logprob: -3.386504650115967
    8. 'Comparer' → logprob: -3.636504650115967
    9. ' for' → logprob: -3.761504650115967
    10. 'for' → logprob: -4.511504650115967

Token 560: 'rou' (ID: 691)
  Prédit: 'rou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rou' → logprob: -0.11557652056217194
    2. 'arder' → logprob: -2.2405765056610107
    3. 'roup' → logprob: -5.99057674407959
    4. 'ard' → logprob: -8.61557674407959
    5. 'ar' → logprob: -11.86557674407959
    6. 'arner' → logprob: -11.99057674407959
    7. 'our' → logprob: -12.11557674407959
    8. 'arnir' → logprob: -12.11557674407959
    9. 'oup' → logprob: -12.36557674407959
    10. 'agner' → logprob: -12.49057674407959

Token 561: 'per' (ID: 543)
  Prédit: 'rou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rou' → logprob: -0.0063208662904798985
    2. 'arder' → logprob: -5.756320953369141
    3. 'per' → logprob: -6.631320953369141
    4. 'roup' → logprob: -6.756320953369141
    5. '   ' → logprob: -8.63132095336914
    6. 'er' → logprob: -9.50632095336914
    7. 'ro' → logprob: -9.63132095336914
    8. 'ar' → logprob: -10.13132095336914
    9. 'uper' → logprob: -10.13132095336914
    10. 'ner' → logprob: -10.25632095336914

Token 562: ' toutes' (ID: 17502)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.3924176692962646
    2. 'les' → logprob: -1.3924176692962646
    3. ' les' → logprob: -1.6424176692962646
    4. ' tous' → logprob: -2.3924176692962646
    5. ' toutes' → logprob: -2.6424176692962646
    6. '   ' → logprob: -3.5174176692962646
    7. 'all' → logprob: -3.6424176692962646
    8. ' all' → logprob: -3.8924176692962646
    9. ' par' → logprob: -4.017417907714844
    10. 'par' → logprob: -4.892417907714844

Token 563: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.18539366126060486
    2. 'les' → logprob: -1.8103936910629272
    3. ' ' → logprob: -6.685393810272217
    4. ' the' → logprob: -7.560393810272217
    5. ' caractères' → logprob: -7.810393810272217
    6. ' l' → logprob: -7.935393810272217
    7. 'l' → logprob: -7.935393810272217
    8. ' occurrences' → logprob: -8.310393333435059
    9. '#' → logprob: -8.560393333435059
    10. 'the' → logprob: -8.810393333435059

Token 564: ' occurrences' (ID: 108073)
  Prédit: 'lett'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lett' → logprob: -1.0701804161071777
    2. 'car' → logprob: -1.5701804161071777
    3. 'occ' → logprob: -1.8201804161071777
    4. ' lettres' → logprob: -2.5701804161071777
    5. 'occur' → logprob: -2.8201804161071777
    6. ' occurrences' → logprob: -3.3201804161071777
    7. 'interval' → logprob: -3.6951804161071777
    8. ' interv' → logprob: -3.9451804161071777
    9. ' caractères' → logprob: -4.570180416107178
    10. 'inter' → logprob: -4.570180416107178

Token 565: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.24421383440494537
    2. ' des' → logprob: -2.369213819503784
    3. ' par' → logprob: -2.619213819503784
    4. 'de' → logprob: -3.619213819503784
    5. 'par' → logprob: -5.244214057922363
    6. ' d' → logprob: -5.619214057922363
    7. ' en' → logprob: -5.994214057922363
    8. ' du' → logprob: -6.119214057922363
    9. ' ' → logprob: -6.494214057922363
    10. ' of' → logprob: -6.744214057922363

Token 566: ''un' (ID: 9788)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.3847542703151703
    2. 'e' → logprob: -1.6347543001174927
    3. 'es' → logprob: -3.134754180908203
    4. ' caractères' → logprob: -4.009754180908203
    5. ' chars' → logprob: -4.634754180908203
    6. 'chars' → logprob: -5.009754180908203
    7. ''un' → logprob: -5.009754180908203
    8. ''' → logprob: -5.634754180908203
    9. ' un' → logprob: -5.759754180908203
    10. ' e' → logprob: -5.884754180908203

Token 567: ' même' (ID: 9679)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.0142849683761597
    2. ' même' → logprob: -1.1392849683761597
    3. ' caractère' → logprob: -1.5142849683761597
    4. 'c' → logprob: -4.014285087585449
    5. 'interval' → logprob: -4.139285087585449
    6. 'e' → logprob: -4.139285087585449
    7. ' interval' → logprob: -4.639285087585449
    8. ' type' → logprob: -4.889285087585449
    9. 'm' → logprob: -5.014285087585449
    10. 'es' → logprob: -5.139285087585449

Token 568: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0845470279455185
    2. ' caractère' → logprob: -2.5845470428466797
    3. 'c' → logprob: -5.58454704284668
    4. 'type' → logprob: -7.08454704284668
    5. ' type' → logprob: -7.45954704284668
    6. 'char' → logprob: -8.83454704284668
    7. ' caract' → logprob: -8.95954704284668
    8. ' car' → logprob: -10.33454704284668
    9. '```' → logprob: -10.33454704284668
    10. ' caractères' → logprob: -10.45954704284668

Token 569: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12122277170419693
    2. '#' → logprob: -2.621222734451294
    3. ',' → logprob: -4.121222972869873
    4. '
' → logprob: -5.121222972869873
    5. ' en' → logprob: -5.246222972869873
    6. ' #' → logprob: -5.996222972869873
    7. ' et' → logprob: -6.371222972869873
    8. ' dans' → logprob: -6.871222972869873
    9. '    
' → logprob: -7.121222972869873
    10. 's' → logprob: -7.246222972869873

Token 570: 'il' (ID: 311)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42444726824760437
    2. ' )' → logprob: -1.6744472980499268
    3. ' s' → logprob: -4.299447059631348
    4. ' c' → logprob: -4.424447059631348
    5. ' chars' → logprob: -4.674447059631348
    6. ' )
' → logprob: -4.799447059631348
    7. ' ' → logprob: -4.799447059631348
    8. ',' → logprob: -4.924447059631348
    9. ' count' → logprob: -5.299447059631348
    10. 'count' → logprob: -5.299447059631348

Token 571: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6533669233322144
    2. ' n' → logprob: -1.5283669233322144
    3. 's' → logprob: -3.278367042541504
    4. ' )' → logprob: -3.278367042541504
    5. ' faut' → logprob: -3.653367042541504
    6. '#' → logprob: -3.903367042541504
    7. 'n' → logprob: -4.403367042541504
    8. ''' → logprob: -4.528367042541504
    9. ' ne' → logprob: -4.653367042541504
    10. ' est' → logprob: -4.778367042541504

Token 572: ' permis' (ID: 48678)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.29228994250297546
    2. ' possible' → logprob: -1.5422899723052979
    3. ')' → logprob: -4.667289733886719
    4. 's' → logprob: -5.542289733886719
    5. '   ' → logprob: -5.667289733886719
    6. 'd' → logprob: -6.542289733886719
    7. 'dans' → logprob: -6.542289733886719
    8. '#' → logprob: -6.792289733886719
    9. 'count' → logprob: -6.792289733886719
    10. 'prés' → logprob: -6.917289733886719

Token 573: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.051922399550676346
    2. ')' → logprob: -3.80192232131958
    3. ' )' → logprob: -4.55192232131958
    4. ' d' → logprob: -4.80192232131958
    5. 'de' → logprob: -4.80192232131958
    6. '),' → logprob: -8.301922798156738
    7. ',' → logprob: -8.301922798156738
    8. ' ),' → logprob: -8.426922798156738
    9. 'd' → logprob: -8.926922798156738
    10. ' ' → logprob: -9.176922798156738

Token 574: ' ré' (ID: 3146)
  Prédit: ' reg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reg' → logprob: -0.9710087180137634
    2. 'ré' → logprob: -1.2210087776184082
    3. 'reg' → logprob: -1.7210087776184082
    4. 'mettre' → logprob: -3.346008777618408
    5. 're' → logprob: -4.221008777618408
    6. 'r' → logprob: -4.221008777618408
    7. 'repr' → logprob: -4.596008777618408
    8. 'tr' → logprob: -4.971008777618408
    9. ' rearr' → logprob: -5.096008777618408
    10. ' ré' → logprob: -5.221008777618408

Token 575: 'ordon' (ID: 39916)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6511337757110596
    2. 'ordon' → logprob: -1.2761337757110596
    3. 'organ' → logprob: -1.6511337757110596
    4. 'ord' → logprob: -6.1511335372924805
    5. 'ar' → logprob: -6.5261335372924805
    6. 'assembler' → logprob: -6.7761335372924805
    7. 'or' → logprob: -7.2761335372924805
    8. 'util' → logprob: -8.40113353729248
    9. 'ag' → logprob: -8.40113353729248
    10. '-' → logprob: -8.77613353729248

Token 576: 'ner' (ID: 1247)
  Prédit: 'onner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onner' → logprob: -0.7787275314331055
    2. 'ner' → logprob: -0.9037275314331055
    3. 'nner' → logprob: -2.6537275314331055
    4. 'er' → logprob: -3.2787275314331055
    5. 'n' → logprob: -3.7787275314331055
    6. 'r' → logprob: -6.4037275314331055
    7. 'onn' → logprob: -7.2787275314331055
    8. '   ' → logprob: -7.7787275314331055
    9. 'oner' → logprob: -7.9037275314331055
    10. 'onné' → logprob: -8.403727531433105

Token 577: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7664029598236084
    2. ' la' → logprob: -1.8914029598236084
    3. ' les' → logprob: -2.5164029598236084
    4. 'les' → logprob: -2.8914029598236084
    5. ' )' → logprob: -3.0164029598236084
    6. 'le' → logprob: -3.1414029598236084
    7. ' le' → logprob: -3.2664029598236084
    8. ' s' → logprob: -3.3914029598236084
    9. 's' → logprob: -3.5164029598236084
    10. '),' → logprob: -4.1414031982421875

Token 578: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007474825251847506
    2. '#' → logprob: -5.007474899291992
    3. '    
' → logprob: -8.132474899291992
    4. '
' → logprob: -8.507474899291992
    5. ' #' → logprob: -9.882474899291992
    6. 'return' → logprob: -9.882474899291992
    7. ')' → logprob: -10.382474899291992
    8. '    ' → logprob: -10.507474899291992
    9. '  ' → logprob: -11.007474899291992
    10. ',' → logprob: -11.132474899291992

Token 579: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00814560055732727
    2. '#' (adapté à ' #') → logprob: -5.633145809173584
    3. '    
' → logprob: -6.008145809173584
    4. '
' → logprob: -7.008145809173584
    5. 'return' → logprob: -7.633145809173584
    6. ')' → logprob: -8.883145332336426
    7. ' return' → logprob: -9.383145332336426
    8. 'length' → logprob: -9.383145332336426
    9. '    ' → logprob: -9.633145332336426
    10. 'total' → logprob: -9.758145332336426

Token 580: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024098163470625877
    2. '#' → logprob: -3.8990981578826904
    3. 'return' → logprob: -6.5240983963012695
    4. '
' → logprob: -7.1490983963012695
    5. ' return' → logprob: -7.6490983963012695
    6. '    
' → logprob: -8.02409839630127
    7. ' #' → logprob: -8.27409839630127
    8. 'total' → logprob: -9.64909839630127
    9. 'length' → logprob: -9.77409839630127
    10. ' total' → logprob: -10.89909839630127

Token 581: ' Pour' (ID: 13931)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4147292375564575
    2. '#' → logprob: -1.6647292375564575
    3. ' return' → logprob: -2.289729118347168
    4. '   ' → logprob: -3.664729118347168
    5. 'Calcul' → logprob: -4.789729118347168
    6. ' #' → logprob: -5.414729118347168
    7. 'Retour' → logprob: -5.414729118347168
    8. ' Retour' → logprob: -7.539729118347168
    9. 'calcul' → logprob: -7.664729118347168
    10. 'comp' → logprob: -7.664729118347168

Token 582: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.10756537318229675
    2. ' c' → logprob: -3.607565402984619
    3. ' each' → logprob: -3.732565402984619
    4. 'c' → logprob: -4.357565402984619
    5. 'each' → logprob: -4.857565402984619
    6. 'ch' → logprob: -4.857565402984619
    7. ' ch' → logprob: -5.732565402984619
    8. ' le' → logprob: -5.982565402984619
    9. 'min' → logprob: -6.107565402984619
    10. '#' → logprob: -6.357565402984619

Token 583: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.8744162321090698
    2. ' type' → logprob: -1.4994162321090698
    3. ' interval' → logprob: -1.6244162321090698
    4. ' groupe' → logprob: -2.4994163513183594
    5. 'type' → logprob: -2.8744163513183594
    6. ' group' → logprob: -4.124416351318359
    7. 'group' → logprob: -6.499416351318359
    8. 'g' → logprob: -6.624416351318359
    9. 'c' → logprob: -7.499416351318359
    10. ' set' → logprob: -7.624416351318359

Token 584: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08399739861488342
    2. 'le' → logprob: -2.5839974880218506
    3. 'val' → logprob: -5.4589972496032715
    4. 'v' → logprob: -8.58399772644043
    5. '   ' → logprob: -8.83399772644043
    6. 've' → logprob: -8.83399772644043
    7. ',' → logprob: -9.83399772644043
    8. 'es' → logprob: -9.95899772644043
    9. 'ale' → logprob: -9.95899772644043
    10. '       ' → logprob: -10.08399772644043

Token 585: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5590838193893433
    2. ':' → logprob: -1.1840838193893433
    3. '   ' → logprob: -2.559083938598633
    4. ':
' → logprob: -3.559083938598633
    5. ' ,' → logprob: -5.059083938598633
    6. '       ' → logprob: -5.559083938598633
    7. ' in' → logprob: -6.184083938598633
    8. ' :' → logprob: -6.309083938598633
    9. ',
' → logprob: -7.434083938598633
    10. 'in' → logprob: -8.309083938598633

Token 586: ' la' (ID: 557)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4555918872356415
    2. ' length' → logprob: -1.9555919170379639
    3. 'add' → logprob: -2.705591917037964
    4. 'calcul' → logprob: -3.205591917037964
    5. ' ajouter' → logprob: -3.705591917037964
    6. '#' → logprob: -3.955591917037964
    7. '       ' → logprob: -4.330591678619385
    8. 'aj' → logprob: -4.330591678619385
    9. 'count' → logprob: -4.705591678619385
    10. 'comp' → logprob: -4.830591678619385

Token 587: ' longueur' (ID: 104613)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.04859350249171257
    2. 'compressed' → logprob: -3.798593521118164
    3. ' length' → logprob: -4.298593521118164
    4. 'len' → logprob: -6.048593521118164
    5. 'total' → logprob: -6.298593521118164
    6. 'long' → logprob: -6.548593521118164
    7. 'result' → logprob: -6.798593521118164
    8. 'compression' → logprob: -6.923593521118164
    9. '#' → logprob: -7.048593521118164
    10. 'def' → logprob: -7.673593521118164

Token 588: ' finale' (ID: 37759)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5310945510864258
    2. ' +=' → logprob: -0.9060945510864258
    3. 'compressed' → logprob: -5.906094551086426
    4. '=' → logprob: -6.406094551086426
    5. 'com' → logprob: -7.156094551086426
    6. ' =' → logprob: -7.281094551086426
    7. 'total' → logprob: -7.906094551086426
    8. '   ' → logprob: -8.031094551086426
    9. '_com' → logprob: -8.281094551086426
    10. 'compr' → logprob: -8.406094551086426

Token 589: ' sera' (ID: 15511)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6360899806022644
    2. ' +=' → logprob: -0.7610899806022644
    3. '=' → logprob: -6.38608980178833
    4. '   ' → logprob: -6.63608980178833
    5. ' =' → logprob: -8.136090278625488
    6. 'est' → logprob: -10.011090278625488
    7. '+' → logprob: -10.386090278625488
    8. 'compressed' → logprob: -10.386090278625488
    9. 's' → logprob: -11.136090278625488
    10. '    ' → logprob: -11.386090278625488

Token 590: ' le' (ID: 505)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7859354019165039
    2. '3' → logprob: -1.660935401916504
    3. 'compressed' → logprob: -1.910935401916504
    4. 'sum' → logprob: -2.535935401916504
    5. 'min' → logprob: -3.410935401916504
    6. ' length' → logprob: -3.535935401916504
    7. 'max' → logprob: -3.785935401916504
    8. '   ' → logprob: -4.285935401916504
    9. 'len' → logprob: -5.035935401916504
    10. ' compressed' → logprob: -5.285935401916504

Token 591: ' nombre' (ID: 9733)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0703130960464478
    2. 'compressed' → logprob: -1.0703130960464478
    3. ' sum' → logprob: -1.9453130960464478
    4. '3' → logprob: -2.570312976837158
    5. ' compressed' → logprob: -2.820312976837158
    6. 'length' → logprob: -4.320312976837158
    7. ' length' → logprob: -5.070312976837158
    8. ' ' → logprob: -5.820312976837158
    9. ' somme' → logprob: -6.195312976837158
    10. 's' → logprob: -7.070312976837158

Token 592: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0404695272445679
    2. '+' → logprob: -1.5404695272445679
    3. ' +=' → logprob: -1.7904695272445679
    4. ' +' → logprob: -2.1654696464538574
    5. ' de' → logprob: -2.7904696464538574
    6. 'des' → logprob: -3.6654696464538574
    7. '+=' → logprob: -4.040469646453857
    8. ' of' → logprob: -4.165469646453857
    9. 'de' → logprob: -4.790469646453857
    10. ' totale' → logprob: -5.665469646453857

Token 593: ''occ' (ID: 158932)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.42276012897491455
    2. ' caractères' → logprob: -1.9227601289749146
    3. 'car' → logprob: -3.047760009765625
    4. 'inter' → logprob: -3.672760009765625
    5. ' interv' → logprob: -3.797760009765625
    6. 'tokens' → logprob: -3.922760009765625
    7. 'characters' → logprob: -4.422760009765625
    8. 'chars' → logprob: -4.422760009765625
    9. ' intervals' → logprob: -4.547760009765625
    10. 'occ' → logprob: -4.547760009765625

Token 594: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.051843173801898956
    2. 'ur' → logprob: -3.1768431663513184
    3. 'interval' → logprob: -5.676843166351318
    4. 'urr' → logprob: -6.426843166351318
    5. 'curr' → logprob: -7.176843166351318
    6. 'urrence' → logprob: -7.426843166351318
    7. '```' → logprob: -7.551843166351318
    8. ' intervals' → logprob: -8.926843643188477
    9. 'r' → logprob: -9.176843643188477
    10. 'urrent' → logprob: -9.301843643188477

Token 595: ' de' (ID: 334)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08785884827375412
    2. '   ' → logprob: -3.0878589153289795
    3. '+' → logprob: -3.9628589153289795
    4. '
' → logprob: -5.3378586769104
    5. ' +
' → logprob: -5.5878586769104
    6. '    ' → logprob: -6.0878586769104
    7. ')' → logprob: -6.3378586769104
    8. 'def' → logprob: -7.0878586769104
    9. ' ' → logprob: -7.3378586769104
    10. '    
' → logprob: -7.7128586769104

Token 596: ' tous' (ID: 10688)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5659963488578796
    2. 'c' → logprob: -2.1909964084625244
    3. 'interval' → logprob: -2.6909964084625244
    4. 'chars' → logprob: -2.8159964084625244
    5. ' start' → logprob: -3.0659964084625244
    6. 'characters' → logprob: -3.3159964084625244
    7. ' c' → logprob: -3.5659964084625244
    8. 'all' → logprob: -4.815996170043945
    9. 'the' → logprob: -4.815996170043945
    10. '   ' → logprob: -4.940996170043945

Token 597: ' caractères' (ID: 183106)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.5413678884506226
    2. 'car' → logprob: -2.166368007659912
    3. 'characters' → logprob: -2.166368007659912
    4. ' caractères' → logprob: -3.166368007659912
    5. 'c' → logprob: -3.416368007659912
    6. 'tokens' → logprob: -3.416368007659912
    7. ' chars' → logprob: -4.041368007659912
    8. 'les' → logprob: -4.166368007659912
    9. ' caracteres' → logprob: -4.166368007659912
    10. ' caract' → logprob: -5.041368007659912

Token 598: ' dans' (ID: 2671)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2536795139312744
    2. '+' → logprob: -3.0036795139312744
    3. '   ' → logprob: -3.7536795139312744
    4. '
' → logprob: -4.003679275512695
    5. ')' → logprob: -4.003679275512695
    6. 's' → logprob: -4.378679275512695
    7. 'def' → logprob: -4.503679275512695
    8. ' dans' → logprob: -4.753679275512695
    9. ' plus' → logprob: -4.878679275512695
    10. 'for' → logprob: -5.003679275512695

Token 599: ' cet' (ID: 19505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1322675943374634
    2. ' l' → logprob: -1.1322675943374634
    3. 'interval' → logprob: -1.1322675943374634
    4. ' interval' → logprob: -4.132267475128174
    5. ' intervals' → logprob: -5.382267475128174
    6. ' cet' → logprob: -6.257267475128174
    7. ' cette' → logprob: -6.257267475128174
    8. 'inter' → logprob: -6.257267475128174
    9. ' ' → logprob: -6.632267475128174
    10. 'cet' → logprob: -7.382267475128174

Token 600: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.001805606996640563
    2. ' interval' → logprob: -6.376805782318115
    3. 'inter' → logprob: -9.626805305480957
    4. '(interval' → logprob: -10.751805305480957
    5. ' intervalo' → logprob: -11.251805305480957
    6. '_interval' → logprob: -13.126805305480957
    7. ' interv' → logprob: -15.126805305480957
    8. '
' → logprob: -15.501805305480957
    9. '<|end|>' → logprob: -15.751805305480957
    10. '.interval' → logprob: -16.376806259155273

Token 601: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.4236924648284912
    2. 'vals' → logprob: -1.4236924648284912
    3. '   ' → logprob: -1.5486924648284912
    4. '       ' → logprob: -2.423692464828491
    5. 'erval' → logprob: -3.423692464828491
    6. 'r' → logprob: -3.798692464828491
    7. 'erv' → logprob: -3.798692464828491
    8. 'al' → logprob: -4.04869270324707
    9. 's' → logprob: -4.04869270324707
    10. 'v' → logprob: -4.29869270324707

Token 602: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10902012884616852
    2. '    
' → logprob: -2.859020233154297
    3. '
' → logprob: -3.234020233154297
    4. ',' → logprob: -6.609020233154297
    5. ' +' → logprob: -6.859020233154297
    6. 'def' → logprob: -6.984020233154297
    7. '    ' → logprob: -7.234020233154297
    8. '+' → logprob: -7.859020233154297
    9. '   
' → logprob: -8.109020233154297
    10. '#' → logprob: -8.359020233154297

Token 603: '   ' (ID: 271)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6533910632133484
    2. '   ' → logprob: -0.7783910632133484
    3. '+' → logprob: -4.778390884399414
    4. '       ' → logprob: -5.028390884399414
    5. ' plus' → logprob: -6.653390884399414
    6. '    
' → logprob: -7.028390884399414
    7. '    ' → logprob: -7.153390884399414
    8. '
' → logprob: -7.528390884399414
    9. 'def' → logprob: -8.278390884399414
    10. ',' → logprob: -8.403390884399414

Token 604: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7457383275032043
    2. ' +' → logprob: -0.7457383275032043
    3. '+' → logprob: -3.2457382678985596
    4. ' plus' → logprob: -5.120738506317139
    5. '       ' → logprob: -6.245738506317139
    6. '
' → logprob: -7.245738506317139
    7. '    
' → logprob: -7.745738506317139
    8. 'plus' → logprob: -7.745738506317139
    9. '           ' → logprob: -7.870738506317139
    10. ')' → logprob: -8.24573802947998

Token 605: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01001305878162384
    2. ' +' → logprob: -5.510013103485107
    3. '
' → logprob: -6.385013103485107
    4. '    
' → logprob: -7.135013103485107
    5. 'def' → logprob: -7.135013103485107
    6. '#' → logprob: -7.385013103485107
    7. '+' → logprob: -7.760013103485107
    8. '    ' → logprob: -8.01001262664795
    9. '       ' → logprob: -8.26001262664795
    10. '```' → logprob: -8.76001262664795

Token 606: ' remplac' (ID: 140149)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2810290455818176
    2. '+' → logprob: -2.156028985977173
    3. '   ' → logprob: -2.156028985977173
    4. ' plus' → logprob: -4.656029224395752
    5. '
' → logprob: -7.281029224395752
    6. 'plus' → logprob: -7.406029224395752
    7. ' +
' → logprob: -7.531029224395752
    8. '       ' → logprob: -7.906029224395752
    9. ' ' → logprob: -7.906029224395752
    10. '```' → logprob: -8.781028747558594

Token 607: 'é' (ID: 377)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.31629249453544617
    2. 'é' → logprob: -1.3162925243377686
    3. 'és' → logprob: -5.9412922859191895
    4. 'e' → logprob: -8.691292762756348
    5. 'ées' → logprob: -8.816292762756348
    6. 'ed' → logprob: -10.441292762756348
    7. 'ee' → logprob: -11.066292762756348
    8. 'ant' → logprob: -11.191292762756348
    9. 'er' → logprob: -12.441292762756348
    10. '   ' → logprob: -13.066292762756348

Token 608: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.35976776480674744
    2. ' ' → logprob: -1.9847677946090698
    3. ' by' → logprob: -2.4847676753997803
    4. 'par' → logprob: -3.6097676753997803
    5. 'by' → logprob: -3.9847676753997803
    6. '_' → logprob: -4.359767913818359
    7. '   ' → logprob: -5.234767913818359
    8. '  ' → logprob: -5.609767913818359
    9. '<|end|>' → logprob: -5.859767913818359
    10. ' +' → logprob: -6.234767913818359

Token 609: ' le' (ID: 505)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.31901106238365173
    2. 'le' → logprob: -2.4440109729766846
    3. ' ' → logprob: -3.3190109729766846
    4. 'l' → logprob: -3.6940109729766846
    5. 'len' → logprob: -3.9440109729766846
    6. ' l' → logprob: -4.069011211395264
    7. '"' → logprob: -4.194011211395264
    8. 'the' → logprob: -4.319011211395264
    9. 'la' → logprob: -4.569011211395264
    10. ' la' → logprob: -5.069011211395264

Token 610: ' nombre' (ID: 9733)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.9013447165489197
    2. 'nombre' → logprob: -1.1513447761535645
    3. 'interval' → logprob: -2.5263447761535645
    4. ' nombre' → logprob: -2.5263447761535645
    5. ' interval' → logprob: -3.9013447761535645
    6. 'start' → logprob: -4.4013447761535645
    7. 'long' → logprob: -4.6513447761535645
    8. ' ' → logprob: -5.0263447761535645
    9. ' format' → logprob: -5.0263447761535645
    10. 'comp' → logprob: -5.2763447761535645

Token 611: ' d' (ID: 272)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22614158689975739
    2. '+' → logprob: -2.4761416912078857
    3. ' +=' → logprob: -3.6011416912078857
    4. '[' → logprob: -3.6011416912078857
    5. 'import' → logprob: -4.476141452789307
    6. ' plus' → logprob: -5.101141452789307
    7. ' of' → logprob: -5.101141452789307
    8. '_' → logprob: -5.226141452789307
    9. '    ' → logprob: -6.101141452789307
    10. ' ' → logprob: -6.226141452789307

Token 612: ''inter' (ID: 55731)
  Prédit: ''inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''inter' → logprob: -0.9948545694351196
    2. 'interval' → logprob: -1.2448545694351196
    3. 'car' → logprob: -2.24485445022583
    4. 'chars' → logprob: -2.99485445022583
    5. ''' → logprob: -3.36985445022583
    6. ' caractères' → logprob: -3.49485445022583
    7. ''occ' → logprob: -3.49485445022583
    8. 'e' → logprob: -3.99485445022583
    9. 'inter' → logprob: -4.11985445022583
    10. 'characters' → logprob: -4.49485445022583

Token 613: 'v' (ID: 85)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6181553602218628
    2. 'v' → logprob: -0.8681553602218628
    3. '```' → logprob: -4.618155479431152
    4. 'erv' → logprob: -4.993155479431152
    5. 'r' → logprob: -5.493155479431152
    6. '#' → logprob: -5.743155479431152
    7. 'erval' → logprob: -6.118155479431152
    8. 'vals' → logprob: -6.368155479431152
    9. 'er' → logprob: -6.368155479431152
    10. '(' → logprob: -6.930655479431152

Token 614: 'alles' (ID: 28825)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5299244523048401
    2. 'ales' → logprob: -2.1549243927001953
    3. 'v' → logprob: -2.4049243927001953
    4. 'alles' → logprob: -2.4049243927001953
    5. '```' → logprob: -3.4049243927001953
    6. 'al' → logprob: -3.6549243927001953
    7. 'vals' → logprob: -3.9049243927001953
    8. 'als' → logprob: -5.154924392700195
    9. 'aux' → logprob: -5.279924392700195
    10. '(' → logprob: -6.029924392700195

Token 615: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07505907863378525
    2. '
' → logprob: -3.200059175491333
    3. '    
' → logprob: -3.700059175491333
    4. '#' → logprob: -6.200058937072754
    5. 'def' → logprob: -7.075058937072754
    6. '    ' → logprob: -7.700058937072754
    7. ',' → logprob: -7.700058937072754
    8. ')' → logprob: -7.700058937072754
    9. 'length' → logprob: -7.825058937072754
    10. ' +' → logprob: -8.075058937072754

Token 616: ' (' (ID: 350)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11275073885917664
    2. ' ' → logprob: -3.112750768661499
    3. '1' → logprob: -4.23775053024292
    4. ' (' → logprob: -4.48775053024292
    5. '<|end|>' → logprob: -4.86275053024292
    6. 'length' → logprob: -5.11275053024292
    7. '(' → logprob: -5.23775053024292
    8. 'def' → logprob: -6.67525053024292
    9. '```' → logprob: -6.67525053024292
    10. '<|end|>' → logprob: -6.67525053024292

Token 617: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7934060096740723
    2. '1' → logprob: -0.9184060096740723
    3. 'compressed' → logprob: -3.0434060096740723
    4. ' ' → logprob: -3.4184060096740723
    5. ')' → logprob: -4.668406009674072
    6. ' (' → logprob: -4.793406009674072
    7. 'length' → logprob: -4.793406009674072
    8. '2' → logprob: -5.293406009674072
    9. '   ' → logprob: -5.293406009674072
    10. 'len' → logprob: -5.793406009674072

Token 618: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24986031651496887
    2. ' +' → logprob: -1.7498602867126465
    3. '+' → logprob: -3.2498602867126465
    4. ' )' → logprob: -4.9998602867126465
    5. ')+' → logprob: -6.7498602867126465
    6. ' plus' → logprob: -8.124860763549805
    7. '+)' → logprob: -9.249860763549805
    8. ' ' → logprob: -9.624860763549805
    9. '   ' → logprob: -9.999860763549805
    10. ' ' → logprob: -10.624860763549805

Token 619: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07300595939159393
    2. ' ' → logprob: -2.6980059146881104
    3. ' (' → logprob: -6.4480061531066895
    4. '(' → logprob: -7.1980061531066895
    5. 'len' → logprob: -9.135505676269531
    6. '```' → logprob: -9.385505676269531
    7. '2' → logprob: -9.698005676269531
    8. ' len' → logprob: -9.698005676269531
    9. 'length' → logprob: -9.823005676269531
    10. '3' → logprob: -9.948005676269531

Token 620: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008891870966181159
    2. ' ' → logprob: -7.375889301300049
    3. 'len' → logprob: -8.75088882446289
    4. '(' → logprob: -10.75088882446289
    5. '3' → logprob: -11.12588882446289
    6. 'length' → logprob: -11.12588882446289
    7. '```' → logprob: -11.37588882446289
    8. ' (' → logprob: -11.87588882446289
    9. '   ' → logprob: -12.50088882446289
    10. '2' → logprob: -12.56338882446289

Token 621: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002163825323805213
    2. ' )' → logprob: -6.252163887023926
    3. ')+' → logprob: -10.002163887023926
    4. '   ' → logprob: -10.502163887023926
    5. ' ' → logprob: -10.627163887023926
    6. '+' → logprob: -10.752163887023926
    7. ')`' → logprob: -10.877163887023926
    8. ').' → logprob: -11.127163887023926
    9. '),' → logprob: -11.252163887023926
    10. ' +' → logprob: -11.752163887023926

Token 622: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07226977497339249
    2. 'def' → logprob: -3.1972696781158447
    3. '
' → logprob: -4.322269916534424
    4. '#' → logprob: -5.197269916534424
    5. '    
' → logprob: -5.572269916534424
    6. ')' → logprob: -6.447269916534424
    7. ' +' → logprob: -7.447269916534424
    8. ' def' → logprob: -7.447269916534424
    9. 'length' → logprob: -7.822269916534424
    10. ',' → logprob: -8.197269439697266

Token 623: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09627844393253326
    2. '
' → logprob: -3.346278429031372
    3. '    
' → logprob: -3.346278429031372
    4. '#' (adapté à ' #') → logprob: -5.096278667449951
    5. 'def' → logprob: -5.596278667449951
    6. 'return' → logprob: -5.846278667449951
    7. 'total' → logprob: -6.846278667449951
    8. ')' → logprob: -6.971278667449951
    9. 'compressed' → logprob: -7.221278667449951
    10. ' return' → logprob: -7.346278667449951

Token 624: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03437989950180054
    2. '
' → logprob: -4.659379959106445
    3. '#' → logprob: -4.909379959106445
    4. '    
' → logprob: -5.159379959106445
    5. 'total' → logprob: -5.909379959106445
    6. 'def' → logprob: -6.409379959106445
    7. ' total' → logprob: -6.659379959106445
    8. 'return' → logprob: -7.159379959106445
    9. 'length' → logprob: -7.409379959106445
    10. 'result' → logprob: -7.409379959106445

Token 625: ' MAIS' (ID: 133890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0632239356637001
    2. '#' → logprob: -3.9382238388061523
    3. '
' → logprob: -4.188223838806152
    4. 'return' → logprob: -4.563223838806152
    5. '    
' → logprob: -5.313223838806152
    6. 'def' → logprob: -5.813223838806152
    7. ' return' → logprob: -6.063223838806152
    8. 'total' → logprob: -7.188223838806152
    9. 'count' → logprob: -7.313223838806152
    10. 'result' → logprob: -7.688223838806152

Token 626: ' la' (ID: 557)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.3741071224212646
    2. '   ' → logprob: -1.6241071224212646
    3. ' for' → logprob: -1.9991071224212646
    4. ' #' → logprob: -2.1241071224212646
    5. '    ' → logprob: -2.9991071224212646
    6. ' la' → logprob: -3.1241071224212646
    7. ' on' → logprob: -3.1241071224212646
    8. ' le' → logprob: -3.3741071224212646
    9. ' il' → logprob: -3.4991071224212646
    10. '#' → logprob: -3.4991071224212646

Token 627: ' compression' (ID: 41811)
  Prédit: ' compression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compression' → logprob: -0.2922527492046356
    2. 'compression' → logprob: -2.542252779006958
    3. ' longueur' → logprob: -3.667252779006958
    4. 'count' → logprob: -4.292252540588379
    5. '#' → logprob: -4.417252540588379
    6. 'def' → logprob: -4.542252540588379
    7. ' def' → logprob: -4.667252540588379
    8. 'compressed' → logprob: -4.667252540588379
    9. ' compressed' → logprob: -4.917252540588379
    10. 's' → logprob: -4.917252540588379

Token 628: ' ne' (ID: 453)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.13599975407123566
    2. ' _' → logprob: -3.3859996795654297
    3. ' s' → logprob: -4.13599967956543
    4. ' des' → logprob: -4.26099967956543
    5. ' length' → logprob: -4.63599967956543
    6. '_' → logprob: -4.88599967956543
    7. 's' → logprob: -5.38599967956543
    8. 'length' → logprob: -6.01099967956543
    9. ' est' → logprob: -6.13599967956543
    10. ' ' → logprob: -6.13599967956543

Token 629: ' précise' (ID: 95250)
  Prédit: ' comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comp' → logprob: -1.6810716390609741
    2. ' rem' → logprob: -1.9310716390609741
    3. 'comp' → logprob: -2.0560717582702637
    4. ' ne' → logprob: -2.0560717582702637
    5. ' compte' → logprob: -2.3060717582702637
    6. 'ne' → logprob: -2.5560717582702637
    7. ' prend' → logprob: -3.1810717582702637
    8. 'rem' → logprob: -3.3060717582702637
    9. ' s' → logprob: -3.6810717582702637
    10. 'pe' → logprob: -3.9310717582702637

Token 630: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.04982832446694374
    2. 'pas' → logprob: -3.049828290939331
    3. 't' → logprob: -7.67482852935791
    4. ' ' → logprob: -7.67482852935791
    5. ' rien' → logprob: -10.04982852935791
    6. 'it' → logprob: -10.29982852935791
    7. ' ' → logprob: -10.67482852935791
    8. ' donc' → logprob: -10.79982852935791
    9. ' que' → logprob: -10.92482852935791
    10. '_pas' → logprob: -10.92482852935791

Token 631: ' que' (ID: 661)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.3065733015537262
    2. ' ' → logprob: -3.1815733909606934
    3. ' rien' → logprob: -3.4315733909606934
    4. ',' → logprob: -3.5565733909606934
    5. ' plus' → logprob: -4.181573390960693
    6. 'def' → logprob: -4.181573390960693
    7. '.' → logprob: -4.806573390960693
    8. ' que' → logprob: -4.806573390960693
    9. ' comment' → logprob: -4.806573390960693
    10. 'comment' → logprob: -5.181573390960693

Token 632: ' l' (ID: 305)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.5335700511932373
    2. ' la' → logprob: -1.2835700511932373
    3. ' l' → logprob: -3.1585700511932373
    4. ' les' → logprob: -4.033570289611816
    5. ' on' → logprob: -4.283570289611816
    6. 'la' → logprob: -4.533570289611816
    7. 'on' → logprob: -4.783570289611816
    8. ' le' → logprob: -5.408570289611816
    9. ' nous' → logprob: -5.533570289611816
    10. '#' → logprob: -5.533570289611816

Token 633: ''on' (ID: 25812)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9214088916778564
    2. ' for' → logprob: -2.2964088916778564
    3. ''' → logprob: -2.4214088916778564
    4. ' code' → logprob: -2.4214088916778564
    5. 'e' → logprob: -2.5464088916778564
    6. '#' → logprob: -2.7964088916778564
    7. 'def' → logprob: -2.9214088916778564
    8. 'for' → logprob: -3.1714088916778564
    9. ' s' → logprob: -3.2964088916778564
    10. 'a' → logprob: -3.4214088916778564

Token 634: ' sup' (ID: 1982)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.3194677531719208
    2. 'comp' → logprob: -2.194467782974243
    3. ' peut' → logprob: -3.069467782974243
    4. 'do' → logprob: -3.819467782974243
    5. ' comp' → logprob: -4.069467544555664
    6. ' compte' → logprob: -4.194467544555664
    7. 'f' → logprob: -4.944467544555664
    8. 'p' → logprob: -5.444467544555664
    9. 'rem' → logprob: -5.694467544555664
    10. ' rem' → logprob: -5.819467544555664

Token 635: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.0005691178957931697
    2. 'pr' → logprob: -7.8755693435668945
    3. 'prim' → logprob: -9.625569343566895
    4. 'pl' → logprob: -10.250569343566895
    5. 'porte' → logprob: -11.250569343566895
    6. 'port' → logprob: -11.500569343566895
    7. 'primer' → logprob: -11.500569343566895
    8. 'prima' → logprob: -11.500569343566895
    9. 'pri' → logprob: -11.750569343566895
    10. 'r' → logprob: -12.000569343566895

Token 636: ' répét' (ID: 156936)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.44409868121147156
    2. 'les' → logprob: -1.069098711013794
    3. ' la' → logprob: -4.694098472595215
    4. ' l' → logprob: -6.444098472595215
    5. 'l' → logprob: -7.069098472595215
    6. 'la' → logprob: -7.194098472595215
    7. ' ' → logprob: -7.194098472595215
    8. 'r' → logprob: -7.694098472595215
    9. '   ' → logprob: -8.194098472595215
    10. 'le' → logprob: -8.444098472595215

Token 637: 'itions' (ID: 5500)
  Prédit: 'ét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ét' → logprob: -0.026169778779149055
    2. 'et' → logprob: -4.901169776916504
    3. 'é' → logprob: -5.276169776916504
    4. 'lications' → logprob: -5.901169776916504
    5. 'érations' → logprob: -5.901169776916504
    6. 'ète' → logprob: -6.276169776916504
    7. 'e' → logprob: -7.026169776916504
    8. 'éter' → logprob: -7.276169776916504
    9. 'itions' → logprob: -7.526169776916504
    10. 'ètes' → logprob: -7.526169776916504

Token 638: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06547517329454422
    2. ')' → logprob: -2.9404752254486084
    3. '<|end|>' → logprob: -5.690474987030029
    4. '    ' → logprob: -6.690474987030029
    5. '#' → logprob: -6.940474987030029
    6. 'return' → logprob: -7.315474987030029
    7. '    
' → logprob: -7.815474987030029
    8. ' return' → logprob: -7.815474987030029
    9. '<|end|>' → logprob: -7.940474987030029
    10. '.' → logprob: -8.065475463867188

Token 639: ' donc' (ID: 14206)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7008970379829407
    2. ' donc' → logprob: -1.575896978378296
    3. 'return' → logprob: -2.075896978378296
    4. '   ' → logprob: -2.700896978378296
    5. ' return' → logprob: -2.950896978378296
    6. ' #' → logprob: -4.450897216796875
    7. ' so' → logprob: -5.325897216796875
    8. '<|end|>' → logprob: -5.575897216796875
    9. ')' → logprob: -5.700897216796875
    10. 's' → logprob: -5.700897216796875

Token 640: ' ?' (ID: 1423)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.42346054315567017
    2. ' return' → logprob: -1.1734604835510254
    3. '   ' → logprob: -3.5484604835510254
    4. '#' → logprob: -6.173460483551025
    5. 'length' → logprob: -6.298460483551025
    6. ' la' → logprob: -7.173460483551025
    7. 'pass' → logprob: -7.298460483551025
    8. '       ' → logprob: -7.798460483551025
    9. ' length' → logprob: -7.798460483551025
    10. ' on' → logprob: -8.673460960388184

Token 641: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5383026599884033
    2. '#' → logprob: -1.5383026599884033
    3. ' return' → logprob: -2.6633026599884033
    4. ')' → logprob: -3.0383026599884033
    5. 'return' → logprob: -3.2883026599884033
    6. '<|end|>' → logprob: -4.163302421569824
    7. ' #' → logprob: -5.038302421569824
    8. '
' → logprob: -5.538302421569824
    9. 'def' → logprob: -5.663302421569824
    10. ' ' → logprob: -5.663302421569824

Token 642: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06926137953996658
    2. ')' → logprob: -3.569261312484741
    3. '#' → logprob: -3.944261312484741
    4. ' return' → logprob: -5.19426155090332
    5. 'return' → logprob: -5.19426155090332
    6. '<|end|>' → logprob: -5.94426155090332
    7. '
' → logprob: -6.69426155090332
    8. '    
' → logprob: -7.56926155090332
    9. '    ' → logprob: -7.69426155090332
    10. ' ' → logprob: -7.81926155090332

Token 643: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03677384555339813
    2. '#' (adapté à ' #') → logprob: -3.536773920059204
    3. 'return' → logprob: -5.786773681640625
    4. '    
' → logprob: -6.286773681640625
    5. '
' → logprob: -7.286773681640625
    6. ' return' → logprob: -7.536773681640625
    7. 'def' → logprob: -8.411773681640625
    8. 'length' → logprob: -8.786773681640625
    9. 'count' → logprob: -9.411773681640625
    10. ' #' → logprob: -9.786773681640625

Token 644: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03062882088124752
    2. '#' → logprob: -3.7806289196014404
    3. 'return' → logprob: -5.280628681182861
    4. ' return' → logprob: -6.655628681182861
    5. 'length' → logprob: -8.03062915802002
    6. ' #' → logprob: -9.03062915802002
    7. '    
' → logprob: -9.03062915802002
    8. 'result' → logprob: -9.40562915802002
    9. ' length' → logprob: -9.53062915802002
    10. 'compressed' → logprob: -9.65562915802002

Token 645: ' En' (ID: 2130)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5467321276664734
    2. '#' → logprob: -1.2967321872711182
    3. '   ' → logprob: -2.296732187271118
    4. 'total' → logprob: -3.796732187271118
    5. 'length' → logprob: -5.046731948852539
    6. 'count' → logprob: -5.421731948852539
    7. ' return' → logprob: -5.546731948852539
    8. 'counts' → logprob: -5.546731948852539
    9. 'result' → logprob: -6.171731948852539
    10. 'interval' → logprob: -7.171731948852539

Token 646: ' exemple' (ID: 26320)
  Prédit: ' fait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fait' → logprob: -1.0145246982574463
    2. '#' → logprob: -1.6395246982574463
    3. 'fait' → logprob: -1.7645246982574463
    4. ' résumé' → logprob: -2.5145246982574463
    5. 'com' → logprob: -3.3895246982574463
    6. ' effet' → logprob: -3.7645246982574463
    7. 'def' → logprob: -3.7645246982574463
    8. 'compress' → logprob: -4.264524459838867
    9. ' continu' → logprob: -4.764524459838867
    10. 'return' → logprob: -4.764524459838867

Token 647: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06576946377754211
    2. ' :' → logprob: -3.5657694339752197
    3. ',' → logprob: -4.940769672393799
    4. ' ' → logprob: -5.315769672393799
    5. 'def' → logprob: -5.565769672393799
    6. ':
' → logprob: -5.690769672393799
    7. ')' → logprob: -5.690769672393799
    8. '#' → logprob: -5.815769672393799
    9. '   ' → logprob: -5.940769672393799
    10. '):' → logprob: -7.065769672393799

Token 648: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7369030117988586
    2. '#' → logprob: -1.7369029521942139
    3. '    ' → logprob: -2.486902952194214
    4. ' ' → logprob: -2.861902952194214
    5. ' #' → logprob: -3.361902952194214
    6. ' return' → logprob: -3.736902952194214
    7. 'return' → logprob: -3.986902952194214
    8. ' 
' → logprob: -3.986902952194214
    9. ')' → logprob: -4.236903190612793
    10. 'def' → logprob: -4.236903190612793

Token 649: '112' (ID: 12307)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5198166966438293
    2. '"' → logprob: -1.8948166370391846
    3. ' "' → logprob: -2.5198166370391846
    4. 'return' → logprob: -3.5198166370391846
    5. '   ' → logprob: -4.019816875457764
    6. 'aaa' → logprob: -4.019816875457764
    7. 'def' → logprob: -4.144816875457764
    8. 'abc' → logprob: -4.144816875457764
    9. ' a' → logprob: -4.269816875457764
    10. 's' → logprob: -4.394816875457764

Token 650: '233' (ID: 22328)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.145871639251709
    2. '3' → logprob: -1.145871639251709
    3. '"' → logprob: -1.270871639251709
    4. '23' → logprob: -4.020871639251709
    5. '-' → logprob: -4.145871639251709
    6. '233' → logprob: -4.395871639251709
    7. '")' → logprob: -4.520871639251709
    8. ' ' → logprob: -5.770871639251709
    9. ' "' → logprob: -5.770871639251709
    10. '1' → logprob: -6.020871639251709

Token 651: '445' (ID: 35339)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5385124683380127
    2. ')' → logprob: -1.6635124683380127
    3. '")' → logprob: -2.0385124683380127
    4. 'def' → logprob: -3.9135124683380127
    5. ')"' → logprob: -3.9135124683380127
    6. '"
' → logprob: -4.288512229919434
    7. '   ' → logprob: -4.788512229919434
    8. ' "' → logprob: -5.038512229919434
    9. '3' → logprob: -5.288512229919434
    10. ')"
' → logprob: -6.038512229919434

Token 652: '5' (ID: 20)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8435159921646118
    2. ')' → logprob: -1.2185159921646118
    3. ')"' → logprob: -1.9685159921646118
    4. '")' → logprob: -2.4685158729553223
    5. '5' → logprob: -3.4685158729553223
    6. 'def' → logprob: -6.093515872955322
    7. '3' → logprob: -6.468515872955322
    8. '"
' → logprob: -6.593515872955322
    9. '6' → logprob: -6.843515872955322
    10. '7' → logprob: -6.843515872955322

Token 653: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.11369249224662781
    2. '")' → logprob: -3.11369252204895
    3. ')"' → logprob: -3.61369252204895
    4. ')' → logprob: -3.86369252204895
    5. ' "' → logprob: -4.863692283630371
    6. '"
' → logprob: -6.113692283630371
    7. 'def' → logprob: -7.113692283630371
    8. '"""' → logprob: -7.363692283630371
    9. '..."' → logprob: -8.113692283630371
    10. ' )' → logprob: -8.238692283630371

Token 654: ' devient' (ID: 63488)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5345038175582886
    2. ')' → logprob: -1.9095038175582886
    3. 'def' → logprob: -2.784503936767578
    4. ':' → logprob: -2.909503936767578
    5. '
' → logprob: -3.159503936767578
    6. '#' → logprob: -3.159503936767578
    7. 'return' → logprob: -4.659503936767578
    8. '<|end|>' → logprob: -4.659503936767578
    9. '<|end|>' → logprob: -4.909503936767578
    10. '```' → logprob: -5.659503936767578

Token 655: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7517510652542114
    2. ' ' → logprob: -1.1267510652542114
    3. '3' → logprob: -1.8767510652542114
    4. ' "' → logprob: -4.626750946044922
    5. '5' → logprob: -4.751750946044922
    6. ''' → logprob: -4.876750946044922
    7. '9' → logprob: -5.751750946044922
    8. '4' → logprob: -5.876750946044922
    9. ' '' → logprob: -5.876750946044922
    10. '6' → logprob: -6.001750946044922

Token 656: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15497680008411407
    2. '11' → logprob: -2.6549768447875977
    3. '"' → logprob: -2.9049768447875977
    4. ''' → logprob: -4.154976844787598
    5. '5' → logprob: -6.904976844787598
    6. '112' → logprob: -7.654976844787598
    7. 'a' → logprob: -7.904976844787598
    8. ' ' → logprob: -8.654976844787598
    9. '10' → logprob: -8.779976844787598
    10. '12' → logprob: -8.779976844787598

Token 657: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003089059144258499
    2. '0' → logprob: -5.87808895111084
    3. '2' → logprob: -9.25308895111084
    4. '1' → logprob: -9.62808895111084
    5. '-"' → logprob: -10.37808895111084
    6. ' -' → logprob: -10.87808895111084
    7. '5' → logprob: -11.00308895111084
    8. '"' → logprob: -11.50308895111084
    9. '"-' → logprob: -11.75308895111084
    10. ' ' → logprob: -11.87808895111084

Token 658: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.008038944564759731
    2. '2' → logprob: -5.5080389976501465
    3. '1' → logprob: -5.6330389976501465
    4. '0' → logprob: -8.008038520812988
    5. '```' → logprob: -11.008038520812988
    6. ' ' → logprob: -11.633038520812988
    7. '
' → logprob: -12.258038520812988
    8. '10' → logprob: -12.883038520812988
    9. '"' → logprob: -13.008038520812988
    10. '9' → logprob: -13.133038520812988

Token 659: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4375510811805725
    2. '")' → logprob: -1.0625510215759277
    3. '-' → logprob: -6.062551021575928
    4. ')' → logprob: -6.187551021575928
    5. '3' → logprob: -6.562551021575928
    6. ')"' → logprob: -6.812551021575928
    7. '"-' → logprob: -7.187551021575928
    8. '5' → logprob: -7.812551021575928
    9. '"""' → logprob: -8.312551498413086
    10. '-"' → logprob: -8.937551498413086

Token 660: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060175634920597076
    2. 'def' → logprob: -3.435175657272339
    3. '#' → logprob: -5.18517541885376
    4. ')' → logprob: -5.31017541885376
    5. '
' → logprob: -5.31017541885376
    6. 'return' → logprob: -6.31017541885376
    7. ' return' → logprob: -6.43517541885376
    8. '"' → logprob: -6.81017541885376
    9. '    
' → logprob: -7.18517541885376
    10. ' #' → logprob: -7.31017541885376

Token 661: 'ex' (ID: 490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18009085953235626
    2. '")' → logprob: -2.05509090423584
    3. '3' → logprob: -3.68009090423584
    4. '"' → logprob: -6.18009090423584
    5. 'length' → logprob: -6.18009090423584
    6. '...' → logprob: -6.93009090423584
    7. ' length' → logprob: -7.43009090423584
    8. '),' → logprob: -7.43009090423584
    9. ',' → logprob: -7.55509090423584
    10. '   ' → logprob: -7.93009090423584

Token 662: 'emple' (ID: 55259)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.7336574792861938
    2. ')' → logprob: -1.2336574792861938
    3. '"' → logprob: -1.9836574792861938
    4. '-' → logprob: -3.4836573600769043
    5. ')"' → logprob: -3.4836573600769043
    6. '...' → logprob: -4.358657360076904
    7. '3' → logprob: -5.608657360076904
    8. ')")' → logprob: -5.858657360076904
    9. '"""' → logprob: -6.108657360076904
    10. '
' → logprob: -7.358657360076904

Token 663: ' answer' (ID: 6052)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4342612326145172
    2. '"' → logprob: -2.0592613220214844
    3. ')"' → logprob: -2.0592613220214844
    4. ':' → logprob: -3.9342613220214844
    5. 'def' → logprob: -4.059261322021484
    6. '   ' → logprob: -4.184261322021484
    7. '):' → logprob: -4.434261322021484
    8. '")' → logprob: -4.434261322021484
    9. ' )' → logprob: -5.184261322021484
    10. ' "' → logprob: -5.809261322021484

Token 664: '=' (ID: 28)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.974644124507904
    2. ')"' → logprob: -0.974644124507904
    3. ')' → logprob: -1.5996441841125488
    4. ':' → logprob: -3.974644184112549
    5. '")' → logprob: -4.224644184112549
    6. '"""' → logprob: -6.349644184112549
    7. 's' → logprob: -6.474644184112549
    8. '   ' → logprob: -6.724644184112549
    9. 'def' → logprob: -6.849644184112549
    10. '):' → logprob: -6.974644184112549

Token 665: '6' (ID: 21)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.4294978678226471
    2. ' ' → logprob: -1.8044978380203247
    3. '3' → logprob: -2.3044979572296143
    4. '6' → logprob: -3.4294979572296143
    5. '11' → logprob: -4.179497718811035
    6. '7' → logprob: -4.554497718811035
    7. ')' → logprob: -4.554497718811035
    8. '9' → logprob: -5.304497718811035
    9. '10' → logprob: -5.554497718811035
    10. '4' → logprob: -5.679497718811035

Token 666: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8272714614868164
    2. '   ' → logprob: -0.8272714614868164
    3. 'def' → logprob: -2.5772714614868164
    4. '"' → logprob: -3.8272714614868164
    5. 'return' → logprob: -5.077271461486816
    6. '#' → logprob: -5.202271461486816
    7. ' return' → logprob: -5.827271461486816
    8. ')"' → logprob: -6.202271461486816
    9. '")' → logprob: -6.327271461486816
    10. ':' → logprob: -6.952271461486816

Token 667: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3735923767089844
    2. 'def' → logprob: -1.9985923767089844
    3. ')' → logprob: -2.2485923767089844
    4. ':' → logprob: -4.373592376708984
    5. '#' → logprob: -4.498592376708984
    6. '):' → logprob: -4.498592376708984
    7. ' return' → logprob: -5.248592376708984
    8. 'return' → logprob: -5.373592376708984
    9. ' total' → logprob: -5.873592376708984
    10. 'total' → logprob: -6.123592376708984

Token 668: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023400263860821724
    2. 'def' → logprob: -4.52340030670166
    3. '
' → logprob: -5.89840030670166
    4. 'return' → logprob: -6.02340030670166
    5. ' return' → logprob: -6.14840030670166
    6. ')' → logprob: -6.27340030670166
    7. '#' (adapté à ' #') → logprob: -6.89840030670166
    8. '    
' → logprob: -7.14840030670166
    9. ')
' → logprob: -8.77340030670166
    10. '```' → logprob: -9.02340030670166

Token 669: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0046875146217644215
    2. ' return' → logprob: -7.004687309265137
    3. '    
' → logprob: -7.129687309265137
    4. '
' → logprob: -7.254687309265137
    5. 'return' → logprob: -7.504687309265137
    6. '#' → logprob: -7.629687309265137
    7. ')' → logprob: -7.879687309265137
    8. 'def' → logprob: -8.254687309265137
    9. ' length' → logprob: -9.879687309265137
    10. 'count' → logprob: -10.004687309265137

Token 670: ' Le' (ID: 2018)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.38703489303588867
    2. '   ' → logprob: -1.3870348930358887
    3. '#' → logprob: -3.3870348930358887
    4. ' return' → logprob: -3.7620348930358887
    5. 'total' → logprob: -5.762034893035889
    6. 'result' → logprob: -5.887034893035889
    7. 'count' → logprob: -6.262034893035889
    8. 'length' → logprob: -6.512034893035889
    9. 'compressed' → logprob: -6.637034893035889
    10. 'def' → logprob: -6.762034893035889

Token 671: ' nombre' (ID: 9733)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8571313619613647
    2. 'return' → logprob: -1.8571313619613647
    3. ' return' → logprob: -1.8571313619613647
    4. 'def' → logprob: -2.2321314811706543
    5. ' #' → logprob: -3.4821314811706543
    6. '   ' → logprob: -4.107131481170654
    7. 'result' → logprob: -4.107131481170654
    8. ' code' → logprob: -4.232131481170654
    9. ' def' → logprob: -4.357131481170654
    10. ' result' → logprob: -4.482131481170654

Token 672: ' minimal' (ID: 19957)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5763964056968689
    2. ' =' → logprob: -1.7013964653015137
    3. '_total' → logprob: -2.9513964653015137
    4. '=' → logprob: -3.0763964653015137
    5. '_' → logprob: -3.2013964653015137
    6. ' de' → logprob: -4.076396465301514
    7. 'total' → logprob: -4.326396465301514
    8. '_com' → logprob: -4.451396465301514
    9. '_inter' → logprob: -4.576396465301514
    10. 'def' → logprob: -4.701396465301514

Token 673: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9479700326919556
    2. ' ' → logprob: -1.4479700326919556
    3. ' =' → logprob: -1.9479700326919556
    4. '   ' → logprob: -2.822969913482666
    5. ')' → logprob: -2.947969913482666
    6. '=' → logprob: -2.947969913482666
    7. ':' → logprob: -4.447969913482666
    8. ' _' → logprob: -4.447969913482666
    9. '<|end|>' → logprob: -4.822969913482666
    10. '  ' → logprob: -5.072969913482666

Token 674: ' la' (ID: 557)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6861993074417114
    2. ' ' → logprob: -0.8111993074417114
    3. '   ' → logprob: -4.436199188232422
    4. '6' → logprob: -4.436199188232422
    5. ' len' → logprob: -4.936199188232422
    6. 'len' → logprob: -5.311199188232422
    7. 'min' → logprob: -6.061199188232422
    8. ' min' → logprob: -6.186199188232422
    9. 'return' → logprob: -6.811199188232422
    10. ' return' → logprob: -6.811199188232422

Token 675: ' somme' (ID: 64484)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8662582039833069
    2. 'minimum' → logprob: -1.741258144378662
    3. 'return' → logprob: -2.366258144378662
    4. '3' → logprob: -2.491258144378662
    5. ' minimum' → logprob: -2.741258144378662
    6. ' min' → logprob: -2.741258144378662
    7. ' return' → logprob: -3.366258144378662
    8. 'def' → logprob: -4.116258144378662
    9. 'len' → logprob: -4.616258144378662
    10. 'length' → logprob: -4.741258144378662

Token 676: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1740785837173462
    2. 'def' → logprob: -1.4240785837173462
    3. ' =' → logprob: -1.5490785837173462
    4. ')' → logprob: -2.4240784645080566
    5. ' des' → logprob: -3.9240784645080566
    6. '=' → logprob: -4.424078464508057
    7. ' +' → logprob: -4.549078464508057
    8. ' +=' → logprob: -4.549078464508057
    9. ' of' → logprob: -4.674078464508057
    10. '(
' → logprob: -4.799078464508057

Token 677: ' longue' (ID: 59564)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.5036263465881348
    2. 'len' → logprob: -1.6286263465881348
    3. 'interval' → logprob: -2.6286263465881348
    4. 'length' → logprob: -2.8786263465881348
    5. 'inter' → logprob: -3.8786263465881348
    6. '3' → logprob: -4.128626346588135
    7. ' longue' → logprob: -4.253626346588135
    8. 'lon' → logprob: -5.753626346588135
    9. 'tokens' → logprob: -5.878626346588135
    10. ' interv' → logprob: -6.128626346588135

Token 678: 'urs' (ID: 1628)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.284076988697052
    2. 'urs' → logprob: -1.5340769290924072
    3. 'r' → logprob: -3.5340769290924072
    4. '#' → logprob: -7.284077167510986
    5. 'rs' → logprob: -7.409077167510986
    6. '```' → logprob: -8.034076690673828
    7. 'ueur' → logprob: -8.909076690673828
    8. ')' → logprob: -9.909076690673828
    9. '\' → logprob: -10.346576690673828
    10. ']' → logprob: -10.346576690673828

Token 679: ' minim' (ID: 23874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03774329274892807
    2. 'def' → logprob: -4.287743091583252
    3. '
' → logprob: -5.162743091583252
    4. ' return' → logprob: -5.912743091583252
    5. ')' → logprob: -6.037743091583252
    6. 'return' → logprob: -6.037743091583252
    7. ' +' → logprob: -6.787743091583252
    8. '    
' → logprob: -6.787743091583252
    9. '```' → logprob: -7.162743091583252
    10. ':' → logprob: -7.162743091583252

Token 680: 'isées' (ID: 108324)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.03460873290896416
    2. 'r' → logprob: -4.034608840942383
    3. 'urs' → logprob: -4.784608840942383
    4. 'ueur' → logprob: -6.034608840942383
    5. 'eur' → logprob: -6.409608840942383
    6. 'e' → logprob: -6.534608840942383
    7. '#' → logprob: -6.534608840942383
    8. 'eurs' → logprob: -8.659608840942383
    9. '```' → logprob: -9.284608840942383
    10. 'ue' → logprob: -9.284608840942383

Token 681: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038424715399742126
    2. ')' → logprob: -4.538424491882324
    3. 'return' → logprob: -4.788424491882324
    4. '#' → logprob: -5.288424491882324
    5. ' return' → logprob: -5.288424491882324
    6. 'def' → logprob: -6.038424491882324
    7. '    
' → logprob: -6.913424491882324
    8. '
' → logprob: -7.413424491882324
    9. '    ' → logprob: -7.913424491882324
    10. '.' → logprob: -8.038424491882324

Token 682: ' regroup' (ID: 118203)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2544584274291992
    2. 'l' → logprob: -2.129458427429199
    3. 'les' → logprob: -3.004458427429199
    4. '3' → logprob: -3.629458427429199
    5. 'la' → logprob: -4.629458427429199
    6. 'len' → logprob: -4.879458427429199
    7. 'inter' → logprob: -5.754458427429199
    8. 'le' → logprob: -6.504458427429199
    9. '#' → logprob: -7.004458427429199
    10. 'min' → logprob: -7.629458427429199

Token 683: 'ement' (ID: 962)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6384564638137817
    2. ')' → logprob: -1.5134564638137817
    3. 'def' → logprob: -2.513456344604492
    4. ']' → logprob: -3.263456344604492
    5. ' +' → logprob: -3.638456344604492
    6. ' =' → logprob: -4.513456344604492
    7. '_length' → logprob: -4.638456344604492
    8. 'return' → logprob: -4.763456344604492
    9. ',' → logprob: -5.388456344604492
    10. ')
' → logprob: -5.388456344604492

Token 684: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023775754496455193
    2. 'def' → logprob: -5.148775577545166
    3. '
' → logprob: -5.398775577545166
    4. ' return' → logprob: -5.523775577545166
    5. 'return' → logprob: -5.648775577545166
    6. '    
' → logprob: -7.023775577545166
    7. ')' → logprob: -7.023775577545166
    8. '#' → logprob: -7.648775577545166
    9. 'length' → logprob: -8.148776054382324
    10. '```' → logprob: -8.398776054382324

Token 685: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.027592763304710388
    2. 'inter' → logprob: -4.652592658996582
    3. 'type' → logprob: -4.902592658996582
    4. 'les' → logprob: -5.402592658996582
    5. '3' → logprob: -6.152592658996582
    6. 'l' → logprob: -6.527592658996582
    7. 'car' → logprob: -7.902592658996582
    8. 'types' → logprob: -8.027592658996582
    9. '2' → logprob: -8.902592658996582
    10. 'le' → logprob: -9.152592658996582

Token 686: 'le' (ID: 282)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13242082297801971
    2. 'def' → logprob: -2.632420778274536
    3. '
' → logprob: -4.507421016693115
    4. 'return' → logprob: -4.632421016693115
    5. ')' → logprob: -4.757421016693115
    6. '#' → logprob: -5.257421016693115
    7. ' return' → logprob: -5.507421016693115
    8. ')
' → logprob: -6.757421016693115
    9. ']' → logprob: -7.007421016693115
    10. 'count' → logprob: -7.007421016693115

Token 687: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42498961091041565
    2. 'return' → logprob: -2.424989700317383
    3. 'count' → logprob: -2.674989700317383
    4. 'total' → logprob: -2.674989700317383
    5. '#' → logprob: -3.549989700317383
    6. 'def' → logprob: -3.674989700317383
    7. 'counts' → logprob: -3.674989700317383
    8. 'result' → logprob: -4.174989700317383
    9. 'length' → logprob: -5.549989700317383
    10. ' return' → logprob: -5.549989700317383

Token 688: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015249008312821388
    2. '    
' → logprob: -4.515248775482178
    3. '
' → logprob: -5.765248775482178
    4. '#' → logprob: -8.140249252319336
    5. 'def' → logprob: -8.515249252319336
    6. 'count' → logprob: -8.890249252319336
    7. 'total' → logprob: -9.140249252319336
    8. 'counts' → logprob: -9.515249252319336
    9. 'return' → logprob: -10.265249252319336
    10. 'length' → logprob: -10.515249252319336

Token 689: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3465532660484314
    2. 'total' → logprob: -2.096553325653076
    3. '#' (adapté à ' #') → logprob: -2.846553325653076
    4. 'count' → logprob: -2.971553325653076
    5. 'counts' → logprob: -4.346553325653076
    6. 'return' → logprob: -4.596553325653076
    7. 'result' → logprob: -4.596553325653076
    8. ' total' → logprob: -5.471553325653076
    9. 'def' → logprob: -5.721553325653076
    10. '
' → logprob: -5.721553325653076

Token 690: ' Correction' (ID: 134873)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4767056703567505
    2. '#' → logprob: -1.9767056703567505
    3. '   ' → logprob: -2.601705551147461
    4. ' total' → logprob: -3.476705551147461
    5. 'counts' → logprob: -3.476705551147461
    6. 'count' → logprob: -3.601705551147461
    7. 'min' → logprob: -4.101705551147461
    8. 'freq' → logprob: -4.226705551147461
    9. 'return' → logprob: -4.351705551147461
    10. 'result' → logprob: -4.976705551147461

Token 691: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03773157671093941
    2. '    
' → logprob: -5.162731647491455
    3. 'def' → logprob: -5.287731647491455
    4. '
' → logprob: -5.287731647491455
    5. 'counts' → logprob: -6.037731647491455
    6. '_total' → logprob: -6.162731647491455
    7. '_count' → logprob: -6.287731647491455
    8. 'total' → logprob: -6.287731647491455
    9. 'count' → logprob: -6.287731647491455
    10. '_counts' → logprob: -6.412731647491455

Token 692: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06340239942073822
    2. '#' → logprob: -4.06340217590332
    3. ' total' → logprob: -4.68840217590332
    4. 'counts' → logprob: -4.93840217590332
    5. ' counts' → logprob: -5.31340217590332
    6. 'def' → logprob: -5.31340217590332
    7. 'total' → logprob: -6.06340217590332
    8. 'count' → logprob: -6.06340217590332
    9. ' #' → logprob: -6.06340217590332
    10. ' freq' → logprob: -6.43840217590332

Token 693: ' #' (ID: 1069)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.1162267923355103
    2. 'total' → logprob: -1.3662267923355103
    3. '#' (adapté à ' #') → logprob: -1.7412267923355103
    4. '   ' → logprob: -2.9912266731262207
    5. 'freq' → logprob: -3.2412266731262207
    6. 'counts' → logprob: -3.4912266731262207
    7. ' freq' → logprob: -3.8662266731262207
    8. 'count' → logprob: -4.116226673126221
    9. 'def' → logprob: -4.241226673126221
    10. 'return' → logprob: -4.241226673126221

Token 694: ' La' (ID: 3038)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6241365671157837
    2. '#' → logprob: -1.7491365671157837
    3. 'result' → logprob: -2.749136447906494
    4. ' total' → logprob: -2.874136447906494
    5. 'return' → logprob: -3.874136447906494
    6. 'counts' → logprob: -3.874136447906494
    7. 'compressed' → logprob: -4.124136447906494
    8. 'min' → logprob: -4.124136447906494
    9. 'length' → logprob: -4.249136447906494
    10. 'interval' → logprob: -4.374136447906494

Token 695: ' compression' (ID: 41811)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.777098536491394
    2. ' compression' → logprob: -1.902098536491394
    3. 'compression' → logprob: -1.902098536491394
    4. 'compressed' → logprob: -2.6520986557006836
    5. 'def' → logprob: -3.0270986557006836
    6. ' longueur' → logprob: -3.6520986557006836
    7. ' #' → logprob: -3.7770986557006836
    8. 'long' → logprob: -4.402098655700684
    9. 'length' → logprob: -4.527098655700684
    10. ' compressed' → logprob: -4.902098655700684

Token 696: ' ne' (ID: 453)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.2375549077987671
    2. ' =' → logprob: -2.7375550270080566
    3. '_count' → logprob: -2.8625550270080566
    4. 'def' → logprob: -4.112555027008057
    5. '_size' → logprob: -4.362555027008057
    6. '=' → logprob: -4.987555027008057
    7. 'length' → logprob: -4.987555027008057
    8. '#' → logprob: -5.487555027008057
    9. '_counts' → logprob: -5.487555027008057
    10. 'count' → logprob: -5.737555027008057

Token 697: ' réduit' (ID: 120775)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.9422126412391663
    2. 'ne' → logprob: -1.6922125816345215
    3. 'sup' → logprob: -1.9422125816345215
    4. ' compte' → logprob: -2.8172125816345215
    5. ' sup' → logprob: -3.3172125816345215
    6. 's' → logprob: -3.3172125816345215
    7. 'rem' → logprob: -3.8172125816345215
    8. 'count' → logprob: -3.9422125816345215
    9. 'se' → logprob: -4.3172125816345215
    10. 'g' → logprob: -4.6922125816345215

Token 698: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.21960368752479553
    2. ' pas' → logprob: -1.9696036577224731
    3. ' que' → logprob: -2.9696037769317627
    4. 'que' → logprob: -5.719603538513184
    5. 'plus' → logprob: -6.469603538513184
    6. ' plus' → logprob: -7.844603538513184
    7. ' donc' → logprob: -8.344603538513184
    8. 's' → logprob: -9.094603538513184
    9. ' jamais' → logprob: -9.219603538513184
    10. '   ' → logprob: -9.469603538513184

Token 699: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.239158272743225
    2. ' pas' → logprob: -1.489158272743225
    3. ' la' → logprob: -2.2391581535339355
    4. 'pas' → logprob: -2.3641581535339355
    5. 'la' → logprob: -2.4891581535339355
    6. 'import' → logprob: -3.7391581535339355
    7. 'length' → logprob: -4.2391581535339355
    8. 'le' → logprob: -4.2391581535339355
    9. 'l' → logprob: -4.4891581535339355
    10. 'def' → logprob: -4.4891581535339355

Token 700: ' occurrences' (ID: 108073)
  Prédit: ' répét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' répét' → logprob: -0.8931685090065002
    2. 'count' → logprob: -2.5181684494018555
    3. 'nombre' → logprob: -2.6431684494018555
    4. ' caractères' → logprob: -2.7681684494018555
    5. 'car' → logprob: -3.0181684494018555
    6. ' nombres' → logprob: -3.2681684494018555
    7. 'occ' → logprob: -3.2681684494018555
    8. ' espaces' → logprob: -3.6431684494018555
    9. 'comp' → logprob: -3.8931684494018555
    10. 're' → logprob: -4.0181684494018555

Token 701: ' multiples' (ID: 70720)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3382408618927002
    2. 'def' → logprob: -2.2132408618927
    3. ')' → logprob: -3.3382408618927
    4. '#' → logprob: -4.088240623474121
    5. '
' → logprob: -4.338240623474121
    6. '_length' → logprob: -4.338240623474121
    7. 's' → logprob: -4.463240623474121
    8. '.' → logprob: -4.463240623474121
    9. ',' → logprob: -4.838240623474121
    10. '_count' → logprob: -5.213240623474121

Token 702: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17992249131202698
    2. '
' → logprob: -2.929922580718994
    3. 'def' → logprob: -3.429922580718994
    4. '#' → logprob: -4.304922580718994
    5. ')' → logprob: -4.429922580718994
    6. 'length' → logprob: -4.929922580718994
    7. '_length' → logprob: -5.054922580718994
    8. 'return' → logprob: -5.304922580718994
    9. ',' → logprob: -5.429922580718994
    10. '.' → logprob: -5.429922580718994

Token 703: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8156244158744812
    2. 'u' → logprob: -1.315624475479126
    3. 'es' → logprob: -1.940624475479126
    4. ''un' → logprob: -2.565624475479126
    5. ''' → logprob: -3.940624475479126
    6. ''espace' → logprob: -3.940624475479126
    7. 'ans' → logprob: -4.815624237060547
    8. ''une' → logprob: -5.190624237060547
    9. ''esp' → logprob: -5.815624237060547
    10. ''u' → logprob: -5.940624237060547

Token 704: ' même' (ID: 9679)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.8677653074264526
    2. ' caractère' → logprob: -1.2427653074264526
    3. ' même' → logprob: -1.8677653074264526
    4. 'interval' → logprob: -2.617765426635742
    5. 'm' → logprob: -3.367765426635742
    6. ' interval' → logprob: -3.867765426635742
    7. 'char' → logprob: -5.492765426635742
    8. ' caract' → logprob: -6.867765426635742
    9. ' ' → logprob: -6.867765426635742
    10. 'c' → logprob: -7.492765426635742

Token 705: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.5114160180091858
    2. 'car' → logprob: -1.011415958404541
    3. ' caract' → logprob: -4.261415958404541
    4. ' ' → logprob: -4.636415958404541
    5. 'es' → logprob: -6.136415958404541
    6. ' espace' → logprob: -6.511415958404541
    7. 'interval' → logprob: -6.636415958404541
    8. 'char' → logprob: -6.761415958404541
    9. ' caractères' → logprob: -6.886415958404541
    10. 'c' → logprob: -6.886415958404541

Token 706: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14465396106243134
    2. '<|end|>' → logprob: -2.6446540355682373
    3. '
' → logprob: -4.144653797149658
    4. ')' → logprob: -4.894653797149658
    5. '<|end|>' → logprob: -5.019653797149658
    6. '    
' → logprob: -5.269653797149658
    7. ' return' → logprob: -5.269653797149658
    8. 'return' → logprob: -5.644653797149658
    9. ' ' → logprob: -5.769653797149658
    10. ' +' → logprob: -6.144653797149658

Token 707: ' un' (ID: 537)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.3971810340881348
    2. 'nombre' → logprob: -1.7721810340881348
    3. 'long' → logprob: -1.8971810340881348
    4. ' longueur' → logprob: -2.2721810340881348
    5. 'plus' → logprob: -3.2721810340881348
    6. 'length' → logprob: -3.3971810340881348
    7. ' compte' → logprob: -3.5221810340881348
    8. 'count' → logprob: -4.147181034088135
    9. '3' → logprob: -4.147181034088135
    10. 'la' → logprob: -4.272181034088135

Token 708: ' seul' (ID: 33041)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8887246251106262
    2. ' seul' → logprob: -1.6387245655059814
    3. 'se' → logprob: -1.8887245655059814
    4. 'ité' → logprob: -2.5137245655059814
    5. 'interval' → logprob: -3.2637245655059814
    6. 'token' → logprob: -3.7637245655059814
    7. 'car' → logprob: -4.6387248039245605
    8. ' caractère' → logprob: -4.6387248039245605
    9. 'iquement' → logprob: -4.7637248039245605
    10. ' interval' → logprob: -4.7637248039245605

Token 709: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 710: ' elles' (ID: 36156)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17718027532100677
    2. ' mais' → logprob: -2.927180290222168
    3. ' return' → logprob: -3.177180290222168
    4. 'return' → logprob: -3.802180290222168
    5. '#' → logprob: -4.052180290222168
    6. ' but' → logprob: -4.552180290222168
    7. ' donc' → logprob: -5.427180290222168
    8. ' #' → logprob: -5.927180290222168
    9. '    
' → logprob: -6.302180290222168
    10. '    ' → logprob: -7.177180290222168

Token 711: ' restent' (ID: 116443)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 712: ' toutes' (ID: 17502)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4901812076568604
    2. 'multip' → logprob: -1.8651812076568604
    3. ' ég' → logprob: -2.6151812076568604
    4. ' ' → logprob: -2.8651812076568604
    5. ' présentes' → logprob: -3.3651812076568604
    6. 'dans' → logprob: -3.3651812076568604
    7. 'les' → logprob: -3.4901812076568604
    8. 'count' → logprob: -3.4901812076568604
    9. '=' → logprob: -3.6151812076568604
    10. 's' → logprob: -3.7401812076568604

Token 713: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06761109083890915
    2. '    
' → logprob: -3.5676109790802
    3. '
' → logprob: -4.942611217498779
    4. '.' → logprob: -5.192611217498779
    5. ')' → logprob: -5.942611217498779
    6. ' tokens' → logprob: -5.942611217498779
    7. '    ' → logprob: -6.442611217498779
    8. 'length' → logprob: -6.567611217498779
    9. ' +' → logprob: -6.567611217498779
    10. '<|end|>' → logprob: -6.692611217498779

Token 714: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011769349686801434
    2. '<|end|>' → logprob: -5.7617692947387695
    3. 'return' → logprob: -6.1367692947387695
    4. 'length' → logprob: -6.6367692947387695
    5. '#' → logprob: -6.7617692947387695
    6. ' return' → logprob: -7.1367692947387695
    7. '
' → logprob: -7.3867692947387695
    8. '    
' → logprob: -7.7617692947387695
    9. '<|end|>' → logprob: -8.01176929473877
    10. ' length' → logprob: -8.13676929473877

Token 715: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009418400935828686
    2. '    
' → logprob: -6.009418487548828
    3. '
' → logprob: -6.134418487548828
    4. ')' → logprob: -6.759418487548828
    5. '#' (adapté à ' #') → logprob: -7.009418487548828
    6. ' length' → logprob: -7.634418487548828
    7. 'length' → logprob: -7.759418487548828
    8. ' return' → logprob: -7.884418487548828
    9. '    ' → logprob: -7.884418487548828
    10. 'return' → logprob: -8.634418487548828

Token 716: ' Donc' (ID: 88837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09647535532712936
    2. 'return' → logprob: -3.09647536277771
    3. ' return' → logprob: -4.721475124359131
    4. 'total' → logprob: -4.846475124359131
    5. 'result' → logprob: -5.096475124359131
    6. 'length' → logprob: -5.471475124359131
    7. 'compressed' → logprob: -5.721475124359131
    8. 'count' → logprob: -5.846475124359131
    9. '
' → logprob: -5.846475124359131
    10. '#' → logprob: -5.971475124359131

Token 717: ' on' (ID: 402)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5754529237747192
    2. 'return' → logprob: -1.0754529237747192
    3. '   ' → logprob: -3.0754528045654297
    4. ' length' → logprob: -3.7004528045654297
    5. 'length' → logprob: -4.45045280456543
    6. ' total' → logprob: -5.32545280456543
    7. ' la' → logprob: -5.32545280456543
    8. 'total' → logprob: -6.57545280456543
    9. '#' → logprob: -7.57545280456543
    10. ' result' → logprob: -7.95045280456543

Token 718: ' doit' (ID: 21822)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.42640602588653564
    2. 'comp' → logprob: -1.5514060258865356
    3. '#' → logprob: -3.551405906677246
    4. 'ne' → logprob: -3.551405906677246
    5. 'pe' → logprob: -3.926405906677246
    6. ' doit' → logprob: -3.926405906677246
    7. ' compte' → logprob: -4.551405906677246
    8. ' ne' → logprob: -5.676405906677246
    9. 'aj' → logprob: -6.051405906677246
    10. 'return' → logprob: -6.176405906677246

Token 719: ' compter' (ID: 81694)
  Prédit: ' compter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -1.0241856575012207
    2. 'return' → logprob: -1.5241856575012207
    3. 'comp' → logprob: -1.5241856575012207
    4. 'count' → logprob: -2.1491856575012207
    5. '   ' → logprob: -3.7741856575012207
    6. 'calcul' → logprob: -4.149185657501221
    7. ' return' → logprob: -4.899185657501221
    8. 'com' → logprob: -5.024185657501221
    9. 'contin' → logprob: -5.274185657501221
    10. ' compt' → logprob: -5.649185657501221

Token 720: ' :
' (ID: 10039)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4531077742576599
    2. ' for' → logprob: -3.3281078338623047
    3. 'for' → logprob: -3.3281078338623047
    4. '   ' → logprob: -3.4531078338623047
    5. 'la' → logprob: -3.5781078338623047
    6. ' le' → logprob: -3.5781078338623047
    7. ' les' → logprob: -3.7031078338623047
    8. ' toutes' → logprob: -3.7031078338623047
    9. ' au' → logprob: -4.078107833862305
    10. 'le' → logprob: -4.453107833862305

Token 721: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005269565153867006
    2. ' la' → logprob: -5.755269527435303
    3. '#' → logprob: -6.755269527435303
    4. '    ' → logprob: -8.505270004272461
    5. 'def' → logprob: -9.130270004272461
    6. 'for' → logprob: -9.630270004272461
    7. 'length' → logprob: -9.755270004272461
    8. ' le' → logprob: -9.880270004272461
    9. ' #' → logprob: -9.880270004272461
    10. '       ' → logprob: -10.005270004272461

Token 722: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07469817996025085
    2. ' la' → logprob: -3.5746982097625732
    3. ' length' → logprob: -4.449697971343994
    4. 'length' → logprob: -4.574697971343994
    5. ' total' → logprob: -5.324697971343994
    6. 'total' → logprob: -5.574697971343994
    7. '#' (adapté à ' #') → logprob: -5.949697971343994
    8. ' return' → logprob: -6.324697971343994
    9. 'return' → logprob: -6.449697971343994
    10. 'compressed' → logprob: -6.449697971343994

Token 723: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6564264297485352
    2. ' return' → logprob: -2.531426429748535
    3. ' la' → logprob: -2.531426429748535
    4. ' total' → logprob: -2.531426429748535
    5. ' length' → logprob: -3.031426429748535
    6. 'compressed' → logprob: -3.031426429748535
    7. 'return' → logprob: -3.156426429748535
    8. 'length' → logprob: -3.656426429748535
    9. ' compressed' → logprob: -3.781426429748535
    10. 'total' → logprob: -3.906426429748535

Token 724: ' un' (ID: 537)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.48560830950737
    2. ' interval' → logprob: -1.4856083393096924
    3. 'interval' → logprob: -2.1106083393096924
    4. ' each' → logprob: -4.235608100891113
    5. 'each' → logprob: -4.735608100891113
    6. ' start' → logprob: -5.360608100891113
    7. ' l' → logprob: -6.235608100891113
    8. 'start' → logprob: -6.860608100891113
    9. ' intervals' → logprob: -7.360608100891113
    10. ' les' → logprob: -7.485608100891113

Token 725: ' interval' (ID: 17116)
  Prédit: ' interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.3183574080467224
    2. 'interval' → logprob: -1.3183574676513672
    3. 'e' → logprob: -6.568357467651367
    4. ' caractère' → logprob: -7.943357467651367
    5. ' group' → logprob: -8.193357467651367
    6. ' groupe' → logprob: -8.443357467651367
    7. ' token' → logprob: -8.443357467651367
    8. 'inter' → logprob: -8.443357467651367
    9. '(interval' → logprob: -8.693357467651367
    10. ' start' → logprob: -8.818357467651367

Token 726: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.066539466381073
    2. 'val' → logprob: -3.6915395259857178
    3. 'ale' → logprob: -4.066539287567139
    4. 'le' → logprob: -4.066539287567139
    5. 'al' → logprob: -6.066539287567139
    6. 'es' → logprob: -7.066539287567139
    7. 'vale' → logprob: -7.191539287567139
    8. 've' → logprob: -8.191539764404297
    9. 'v' → logprob: -8.316539764404297
    10. 'ule' → logprob: -8.441539764404297

Token 727: ' [' (ID: 723)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24901007115840912
    2. ' ,' → logprob: -2.3740100860595703
    3. ' =' → logprob: -3.3740100860595703
    4. ':' → logprob: -3.7490100860595703
    5. ' in' → logprob: -3.7490100860595703
    6. ' :' → logprob: -4.24901008605957
    7. '   ' → logprob: -4.49901008605957
    8. '[' → logprob: -5.37401008605957
    9. ' (' → logprob: -5.74901008605957
    10. '[start' → logprob: -5.99901008605957

Token 728: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.004045987036079168
    2. 'ord' → logprob: -6.1290459632873535
    3. ' start' → logprob: -6.7540459632873535
    4. ',' → logprob: -8.754046440124512
    5. '(start' → logprob: -9.129046440124512
    6. 'c' → logprob: -9.254046440124512
    7. 'ordre' → logprob: -10.129046440124512
    8. '(ord' → logprob: -10.129046440124512
    9. '   ' → logprob: -10.629046440124512
    10. '[start' → logprob: -10.879046440124512

Token 729: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013820252381265163
    2. ' ,' → logprob: -4.388820171356201
    3. ',end' → logprob: -7.388820171356201
    4. '           ' → logprob: -8.38882064819336
    5. '
' → logprob: -9.26382064819336
    6. '       ' → logprob: -9.51382064819336
    7. '   ' → logprob: -9.63882064819336
    8. '],' → logprob: -10.01382064819336
    9. ',
' → logprob: -10.51382064819336
    10. '...' → logprob: -10.76382064819336

Token 730: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.31327250599861145
    2. 'end' → logprob: -1.313272476196289
    3. ',' → logprob: -12.188272476196289
    4. ',end' → logprob: -12.188272476196289
    5. '       ' → logprob: -15.813272476196289
    6. '(end' → logprob: -16.43827247619629
    7. ' ' → logprob: -16.56327247619629
    8. '	end' → logprob: -16.56327247619629
    9. '[end' → logprob: -16.93827247619629
    10. ''end' → logprob: -16.93827247619629

Token 731: ']
' (ID: 1592)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.25883281230926514
    2. ']' → logprob: -1.8838328123092651
    3. ']:' → logprob: -3.3838329315185547
    4. ',' → logprob: -3.6338329315185547
    5. ']:
' → logprob: -4.633832931518555
    6. '   ' → logprob: -5.633832931518555
    7. '       ' → logprob: -7.008832931518555
    8. ' ],' → logprob: -7.758832931518555
    9. '           ' → logprob: -8.383832931518555
    10. ']:
' → logprob: -8.883832931518555

Token 732: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23301447927951813
    2. '   ' → logprob: -1.608014464378357
    3. ',' → logprob: -5.2330145835876465
    4. ':' → logprob: -7.2330145835876465
    5. '#' → logprob: -7.4830145835876465
    6. ' =' → logprob: -8.858014106750488
    7. 'def' → logprob: -9.233014106750488
    8. 'total' → logprob: -9.358014106750488
    9. '    ' → logprob: -9.858014106750488
    10. '           ' → logprob: -9.858014106750488

Token 733: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13222917914390564
    2. '       ' → logprob: -2.2572290897369385
    3. ',' → logprob: -4.757229328155518
    4. ':' → logprob: -5.382229328155518
    5. ' =' → logprob: -6.132229328155518
    6. '    ' → logprob: -6.757229328155518
    7. '#' (adapté à ' #') → logprob: -7.632229328155518
    8. 'def' → logprob: -8.00722885131836
    9. ' ,' → logprob: -8.25722885131836
    10. '  ' → logprob: -8.63222885131836

Token 734: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4099283814430237
    2. '   ' → logprob: -1.159928321838379
    3. ' length' → logprob: -5.534928321838379
    4. '#' → logprob: -6.159928321838379
    5. ' total' → logprob: -6.159928321838379
    6. 'count' → logprob: -6.159928321838379
    7. 'length' → logprob: -6.409928321838379
    8. ' count' → logprob: -6.409928321838379
    9. '    ' → logprob: -6.659928321838379
    10. ' #' → logprob: -6.909928321838379

Token 735: ' longueur' (ID: 104613)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5730813145637512
    2. ' length' → logprob: -1.1980812549591064
    3. 'compressed' → logprob: -2.8230812549591064
    4. 'def' → logprob: -3.8230812549591064
    5. ' compressed' → logprob: -4.5730814933776855
    6. 'count' → logprob: -4.5730814933776855
    7. 'compression' → logprob: -5.3230814933776855
    8. '#' → logprob: -5.4480814933776855
    9. '   ' → logprob: -5.5730814933776855
    10. ' longueur' → logprob: -5.6980814933776855

Token 736: ' initial' (ID: 4871)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10756012797355652
    2. '+=' → logprob: -2.357560157775879
    3. ' =' → logprob: -5.607560157775879
    4. '=' → logprob: -6.357560157775879
    5. '   ' → logprob: -6.482560157775879
    6. '+' → logprob: -8.982560157775879
    7. '+=(' → logprob: -10.232560157775879
    8. ' +' → logprob: -10.232560157775879
    9. '    ' → logprob: -10.607560157775879
    10. ' ' → logprob: -11.482560157775879

Token 737: 'e' (ID: 68)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4519207179546356
    2. ' =' → logprob: -1.951920747756958
    3. '   ' → logprob: -2.451920747756958
    4. 'e' → logprob: -3.076920747756958
    5. '=' → logprob: -3.201920747756958
    6. '+=' → logprob: -3.201920747756958
    7. 'é' → logprob: -6.451920509338379
    8. 'ité' → logprob: -7.326920509338379
    9. '+' → logprob: -7.701920509338379
    10. 'ée' → logprob: -7.826920509338379

Token 738: ' est' (ID: 893)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3776506185531616
    2. ' =' → logprob: -1.8776506185531616
    3. '=' → logprob: -2.877650737762451
    4. '+=' → logprob: -3.002650737762451
    5. '   ' → logprob: -4.127650737762451
    6. ')' → logprob: -4.627650737762451
    7. 'def' → logprob: -4.752650737762451
    8. '+' → logprob: -5.377650737762451
    9. ' +' → logprob: -5.877650737762451
    10. 's' → logprob: -6.002650737762451

Token 739: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.043400947004556656
    2. '   ' → logprob: -4.043400764465332
    3. ' sum' → logprob: -4.168400764465332
    4. '0' → logprob: -4.918400764465332
    5. 'end' → logprob: -6.418400764465332
    6. 'interval' → logprob: -9.043400764465332
    7. '    ' → logprob: -9.168400764465332
    8. 'count' → logprob: -9.918400764465332
    9. 'abs' → logprob: -10.418400764465332
    10. ' end' → logprob: -10.543400764465332

Token 740: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.003913476597517729
    2. 'end' → logprob: -6.628913402557373
    3. '0' → logprob: -6.753913402557373
    4. ' sum' → logprob: -6.878913402557373
    5. 'count' → logprob: -9.503913879394531
    6. 'length' → logprob: -9.503913879394531
    7. '   ' → logprob: -9.878913879394531
    8. 'som' → logprob: -10.003913879394531
    9. 'diff' → logprob: -10.628913879394531
    10. 's' → logprob: -10.878913879394531

Token 741: ' des' (ID: 731)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.09799009561538696
    2. '   ' → logprob: -3.222990036010742
    3. ' +' → logprob: -3.972990036010742
    4. ' of' → logprob: -4.972990036010742
    5. '+=' → logprob: -5.597990036010742
    6. '(' → logprob: -5.722990036010742
    7. '    ' → logprob: -5.722990036010742
    8. ' des' → logprob: -5.972990036010742
    9. '+' → logprob: -6.222990036010742
    10. '(count' → logprob: -6.222990036010742

Token 742: ' occurrences' (ID: 108073)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.13169074058532715
    2. 'counts' → logprob: -2.131690740585327
    3. ' count' → logprob: -6.506690979003906
    4. 'occ' → logprob: -6.881690979003906
    5. ' counts' → logprob: -7.506690979003906
    6. 'length' → logprob: -7.756690979003906
    7. '(count' → logprob: -8.006690979003906
    8. 'len' → logprob: -8.381690979003906
    9. 'counter' → logprob: -8.881690979003906
    10. '[count' → logprob: -8.881690979003906

Token 743: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1713431179523468
    2. 'for' → logprob: -2.9213430881500244
    3. '       ' → logprob: -3.0463430881500244
    4. ' for' → logprob: -4.0463433265686035
    5. '[start' → logprob: -4.7963433265686035
    6. 'def' → logprob: -5.1713433265686035
    7. '(start' → logprob: -5.7963433265686035
    8. ' of' → logprob: -6.0463433265686035
    9. '           ' → logprob: -6.0463433265686035
    10. 'of' → logprob: -6.1713433265686035

Token 744: ' tous' (ID: 10688)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.15212547779083252
    2. 'chars' → logprob: -2.527125358581543
    3. 'all' → logprob: -3.277125358581543
    4. 'characters' → logprob: -4.902125358581543
    5. 'char' → logprob: -5.277125358581543
    6. ' c' → logprob: -5.402125358581543
    7. '[c' → logprob: -6.027125358581543
    8. ' all' → logprob: -7.027125358581543
    9. 'tokens' → logprob: -7.277125358581543
    10. 'count' → logprob: -7.652125358581543

Token 745: ' characters' (ID: 9862)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09482887387275696
    2. 'chars' → logprob: -2.7198288440704346
    3. 'characters' → logprob: -4.469829082489014
    4. 'char' → logprob: -4.719829082489014
    5. ' c' → logprob: -6.719829082489014
    6. '   ' → logprob: -6.969829082489014
    7. 'for' → logprob: -7.844829082489014
    8. 'interval' → logprob: -7.969829082489014
    9. '       ' → logprob: -8.344828605651855
    10. 'car' → logprob: -8.469828605651855

Token 746: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053810253739356995
    2. '       ' → logprob: -4.053810119628906
    3. ' dans' → logprob: -4.428810119628906
    4. ',' → logprob: -5.428810119628906
    5. 'dans' → logprob: -5.428810119628906
    6. ' in' → logprob: -5.928810119628906
    7. 'in' → logprob: -6.553810119628906
    8. ')' → logprob: -6.803810119628906
    9. '    ' → logprob: -7.053810119628906
    10. 'def' → logprob: -7.178810119628906

Token 747: ' l' (ID: 305)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.14327506721019745
    2. 'range' → logprob: -2.893275022506714
    3. ' interval' → logprob: -2.893275022506714
    4. ' range' → logprob: -4.143275260925293
    5. ' ' → logprob: -6.518275260925293
    6. '   ' → logprob: -6.518275260925293
    7. ' the' → logprob: -7.393275260925293
    8. 'chars' → logprob: -7.518275260925293
    9. 'the' → logprob: -7.643275260925293
    10. 'count' → logprob: -7.893275260925293

Token 748: ''' (ID: 6)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0021214729640632868
    2. 'range' → logprob: -6.252121448516846
    3. 'inter' → logprob: -9.377121925354004
    4. '(interval' → logprob: -10.752121925354004
    5. '   ' → logprob: -10.877121925354004
    6. ''' → logprob: -11.252121925354004
    7. ' interval' → logprob: -11.377121925354004
    8. '
' → logprob: -11.877121925354004
    9. '```' → logprob: -12.002121925354004
    10. '`' → logprob: -12.002121925354004

Token 749: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.001317977556027472
    2. 'range' → logprob: -6.876317977905273
    3. 'inter' → logprob: -8.626317977905273
    4. '
' → logprob: -10.126317977905273
    5. ' interval' → logprob: -10.626317977905273
    6. '   ' → logprob: -11.126317977905273
    7. '(interval' → logprob: -12.126317977905273
    8. '[' → logprob: -12.376317977905273
    9. '[
' → logprob: -12.876317977905273
    10. '#' → logprob: -13.126317977905273

Token 750: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6492016911506653
    2. 'erval' → logprob: -1.1492016315460205
    3. 'interval' → logprob: -2.7742016315460205
    4. '   ' → logprob: -3.5242016315460205
    5. '       ' → logprob: -4.3992018699646
    6. 'er' → logprob: -4.3992018699646
    7. 'e' → logprob: -4.8992018699646
    8. 'al' → logprob: -5.1492018699646
    9. 'ier' → logprob: -5.6492018699646
    10. '(interval' → logprob: -5.6492018699646

Token 751: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031379126012325287
    2. 'def' → logprob: -6.378138065338135
    3. '    
' → logprob: -7.253138065338135
    4. '
' → logprob: -9.128137588500977
    5. '    ' → logprob: -9.253137588500977
    6. 'length' → logprob: -9.378137588500977
    7. 'interval' → logprob: -9.503137588500977
    8. '#' → logprob: -9.878137588500977
    9. 'counts' → logprob: -10.128137588500977
    10. ')' → logprob: -10.378137588500977

Token 752: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034007367212325335
    2. ',' → logprob: -6.628400802612305
    3. '       ' → logprob: -8.253400802612305
    4. ' +' → logprob: -8.378400802612305
    5. 'def' → logprob: -8.628400802612305
    6. '    
' → logprob: -8.878400802612305
    7. '.' → logprob: -9.003400802612305
    8. ')' → logprob: -9.003400802612305
    9. 'tokens' → logprob: -9.003400802612305
    10. '#' → logprob: -9.128400802612305

Token 753: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004574549850076437
    2. '       ' → logprob: -5.879574775695801
    3. ',' → logprob: -8.0045747756958
    4. ' +' → logprob: -8.1295747756958
    5. '.' → logprob: -8.7545747756958
    6. ')' → logprob: -8.7545747756958
    7. '#' (adapté à ' #') → logprob: -8.8795747756958
    8. '    ' → logprob: -9.1295747756958
    9. ' =' → logprob: -9.1295747756958
    10. 'def' → logprob: -9.6295747756958

Token 754: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000605337496381253
    2. '#' → logprob: -8.000605583190918
    3. 'def' → logprob: -9.375605583190918
    4. '    
' → logprob: -10.000605583190918
    5. '    ' → logprob: -10.250605583190918
    6. 'length' → logprob: -10.625605583190918
    7. '       ' → logprob: -10.750605583190918
    8. '
' → logprob: -11.125605583190918
    9. ',' → logprob: -11.875605583190918
    10. 'return' → logprob: -12.000605583190918

Token 755: ' longueur' (ID: 104613)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.9876187443733215
    2. 'compressed' → logprob: -1.3626186847686768
    3. 'length' → logprob: -1.6126186847686768
    4. ' compressed' → logprob: -2.6126186847686768
    5. 'def' → logprob: -3.1126186847686768
    6. '_length' → logprob: -4.487618923187256
    7. '#' → logprob: -4.612618923187256
    8. ' result' → logprob: -5.112618923187256
    9. 'final' → logprob: -5.487618923187256
    10. ' final' → logprob: -5.737618923187256

Token 756: ' compress' (ID: 34112)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8786174654960632
    2. 'compressed' → logprob: -1.628617525100708
    3. 'compress' → logprob: -2.503617525100708
    4. '_com' → logprob: -2.503617525100708
    5. ' =' → logprob: -2.753617525100708
    6. '+=' → logprob: -3.003617525100708
    7. 'compr' → logprob: -3.878617525100708
    8. 'com' → logprob: -4.003617286682129
    9. '   ' → logprob: -4.128617286682129
    10. 'comp' → logprob: -4.378617286682129

Token 757: 'ée' (ID: 2894)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.10174480825662613
    2. 'ée' → logprob: -2.3517448902130127
    3. 'e' → logprob: -7.226744651794434
    4. 'é' → logprob: -7.476744651794434
    5. 'ee' → logprob: -9.226744651794434
    6. 'éd' → logprob: -9.476744651794434
    7. 'ion' → logprob: -10.851744651794434
    8. '=' → logprob: -11.226744651794434
    9. 'eed' → logprob: -11.726744651794434
    10. '_ed' → logprob: -12.476744651794434

Token 758: ' est' (ID: 893)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5024875402450562
    2. ' =' → logprob: -1.1274875402450562
    3. '=' → logprob: -3.0024876594543457
    4. '+=' → logprob: -4.627487659454346
    5. '   ' → logprob: -5.002487659454346
    6. ' est' → logprob: -6.502487659454346
    7. 'def' → logprob: -6.752487659454346
    8. 'est' → logprob: -7.002487659454346
    9. ')' → logprob: -7.877487659454346
    10. '           ' → logprob: -8.252487182617188

Token 759: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.021265003830194473
    2. '   ' → logprob: -4.646265029907227
    3. 'end' → logprob: -4.896265029907227
    4. ' ' → logprob: -6.396265029907227
    5. '(end' → logprob: -7.771265029907227
    6. 'len' → logprob: -8.021265029907227
    7. '           ' → logprob: -8.021265029907227
    8. '       ' → logprob: -8.396265029907227
    9. '(' → logprob: -8.521265029907227
    10. ' (' → logprob: -8.896265029907227

Token 760: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.013529353775084019
    2. '(' → logprob: -5.263529300689697
    3. 'end' → logprob: -5.388529300689697
    4. 'length' → logprob: -6.888529300689697
    5. '1' → logprob: -7.388529300689697
    6. '(end' → logprob: -7.638529300689697
    7. ' ' → logprob: -8.263529777526855
    8. 'len' → logprob: -8.263529777526855
    9. 'sum' → logprob: -8.388529777526855
    10. '0' → logprob: -8.888529777526855

Token 761: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2340857833623886
    2. '<|end|>' → logprob: -2.60908579826355
    3. ' +' → logprob: -3.23408579826355
    4. '+' → logprob: -3.48408579826355
    5. '
' → logprob: -3.48408579826355
    6. '    
' → logprob: -3.98408579826355
    7. '    ' → logprob: -5.734085559844971
    8. '<|end|>' → logprob: -5.984085559844971
    9. 'def' → logprob: -6.484085559844971
    10. ')' → logprob: -6.484085559844971

Token 762: 'start' (ID: 5236)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6334007978439331
    2. ')' → logprob: -1.008400797843933
    3. 'if' → logprob: -2.5084009170532227
    4. ' +' → logprob: -5.133400917053223
    5. ' )' → logprob: -5.133400917053223
    6. '<|end|>' → logprob: -5.883400917053223
    7. '   ' → logprob: -6.133400917053223
    8. ' for' → logprob: -6.383400917053223
    9. 'for' → logprob: -6.758400917053223
    10. '+' → logprob: -7.508400917053223

Token 763: '-end' (ID: 18507)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09803160279989243
    2. ' ,' → logprob: -3.223031520843506
    3. '-' → logprob: -3.848031520843506
    4. ' if' → logprob: -4.348031520843506
    5. ')' → logprob: -5.098031520843506
    6. '   ' → logprob: -5.848031520843506
    7. 'if' → logprob: -6.098031520843506
    8. ' -' → logprob: -6.723031520843506
    9. ' ' → logprob: -6.973031520843506
    10. ',
' → logprob: -7.598031520843506

Token 764: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018941258313134313
    2. '   ' → logprob: -7.501893997192383
    3. '+' → logprob: -8.251893997192383
    4. '-' → logprob: -8.501893997192383
    5. ' )' → logprob: -8.751893997192383
    6. ')
' → logprob: -9.251893997192383
    7. ')")' → logprob: -9.251893997192383
    8. '")' → logprob: -9.376893997192383
    9. ' if' → logprob: -9.501893997192383
    10. ' +' → logprob: -9.626893997192383

Token 765: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027260806411504745
    2. '    
' → logprob: -4.277260780334473
    3. '
' → logprob: -4.902260780334473
    4. 'def' → logprob: -6.027260780334473
    5. ' +' → logprob: -7.527260780334473
    6. '#' → logprob: -7.652260780334473
    7. ')' → logprob: -7.652260780334473
    8. '    ' → logprob: -8.402260780334473
    9. 'length' → logprob: -8.527260780334473
    10. ',' → logprob: -8.902260780334473

Token 766: ' interval' (ID: 17116)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.04922829940915108
    2. ' start' → logprob: -3.2992281913757324
    3. 'end' → logprob: -4.549228191375732
    4. ' end' → logprob: -7.799228191375732
    5. 'diff' → logprob: -9.04922866821289
    6. ' ' → logprob: -12.17422866821289
    7. 'len' → logprob: -12.17422866821289
    8. '   ' → logprob: -12.92422866821289
    9. '	start' → logprob: -12.92422866821289
    10. '```' → logprob: -13.67422866821289

Token 767: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8131927847862244
    2. 'val' → logprob: -1.0631928443908691
    3. 'e' → logprob: -1.9381928443908691
    4. 've' → logprob: -3.688192844390869
    5. 'v' → logprob: -4.438192844390869
    6. '   ' → logprob: -4.938192844390869
    7. 'vel' → logprob: -5.813192844390869
    8. '=' → logprob: -5.938192844390869
    9. 's' → logprob: -5.938192844390869
    10. 'al' → logprob: -6.188192844390869

Token 768: '>' (ID: 29)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3004889190196991
    2. '[' → logprob: -2.3004889488220215
    3. ' ==' → logprob: -2.6754889488220215
    4. ' +' → logprob: -3.9254889488220215
    5. ')' → logprob: -3.9254889488220215
    6. ',' → logprob: -4.5504889488220215
    7. '   ' → logprob: -4.6754889488220215
    8. '==' → logprob: -5.1754889488220215
    9. '!=' → logprob: -5.1754889488220215
    10. ' >' → logprob: -5.5504889488220215

Token 769: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04008088260889053
    2. ' ' → logprob: -3.5400807857513428
    3. 'start' → logprob: -5.165081024169922
    4. '1' → logprob: -6.290081024169922
    5. ' start' → logprob: -6.415081024169922
    6. '   ' → logprob: -7.790081024169922
    7. 'end' → logprob: -7.915081024169922
    8. ' end' → logprob: -9.665081024169922
    9. '(start' → logprob: -10.040081024169922
    10. ' (' → logprob: -10.290081024169922

Token 770: ' caractère' (ID: 80509)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13296522200107574
    2. '
' → logprob: -2.757965326309204
    3. ' +' → logprob: -3.882965326309204
    4. '    
' → logprob: -3.882965326309204
    5. '+' → logprob: -5.507965087890625
    6. 'def' → logprob: -6.007965087890625
    7. ',' → logprob: -6.382965087890625
    8. '       ' → logprob: -6.507965087890625
    9. '  
' → logprob: -6.757965087890625
    10. '```' → logprob: -6.757965087890625

Token 771: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04486125707626343
    2. 'def' → logprob: -3.544861316680908
    3. '
' → logprob: -5.669861316680908
    4. '    
' → logprob: -5.919861316680908
    5. '       ' → logprob: -6.294861316680908
    6. ',' → logprob: -6.794861316680908
    7. '           ' → logprob: -7.169861316680908
    8. ' +' → logprob: -7.169861316680908
    9. ')' → logprob: -7.169861316680908
    10. ' def' → logprob: -7.794861316680908

Token 772: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0036637783050537
    2. ' ' → logprob: -1.7536637783050537
    3. ' else' → logprob: -1.8786637783050537
    4. ')' → logprob: -2.0036637783050537
    5. '<|end|>' → logprob: -3.2536637783050537
    6. 'else' → logprob: -3.3786637783050537
    7. ' )' → logprob: -3.8786637783050537
    8. '    ' → logprob: -4.003664016723633
    9. ' or' → logprob: -4.628664016723633
    10. ' 
' → logprob: -4.753664016723633

Token 773: ' nombre' (ID: 9733)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42988866567611694
    2. ' ' → logprob: -1.0548887252807617
    3. ' length' → logprob: -7.179888725280762
    4. 'length' → logprob: -7.929888725280762
    5. '    ' → logprob: -10.554888725280762
    6. '   ' → logprob: -10.679888725280762
    7. '           ' → logprob: -12.054888725280762
    8. '+' → logprob: -12.679888725280762
    9. '2' → logprob: -13.304888725280762
    10. ' +' → logprob: -13.929888725280762

Token 774: ' d' (ID: 272)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7042520046234131
    2. ' +' → logprob: -0.9542520046234131
    3. 's' → logprob: -3.329252004623413
    4. '+' → logprob: -3.704252004623413
    5. '   ' → logprob: -3.954252004623413
    6. '(s' → logprob: -5.454252243041992
    7. ' =' → logprob: -5.454252243041992
    8. ' ' → logprob: -5.704252243041992
    9. 'def' → logprob: -5.829252243041992
    10. '  ' → logprob: -6.204252243041992

Token 775: ''occ' (ID: 158932)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.6915524005889893
    2. 'count' → logprob: -0.8165524005889893
    3. 'start' → logprob: -3.8165524005889893
    4. 'occur' → logprob: -4.31655216217041
    5. 'oc' → logprob: -4.56655216217041
    6. 'c' → logprob: -6.69155216217041
    7. ' occurrences' → logprob: -6.69155216217041
    8. 'characters' → logprob: -7.19155216217041
    9. 's' → logprob: -7.19155216217041
    10. 'ord' → logprob: -7.19155216217041

Token 776: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.007548889145255089
    2. 'ur' → logprob: -5.882548809051514
    3. 'curr' → logprob: -6.257548809051514
    4. 'ences' → logprob: -7.257548809051514
    5. 'urr' → logprob: -7.632548809051514
    6. 's' → logprob: -7.632548809051514
    7. '```' → logprob: -8.632549285888672
    8. 'es' → logprob: -8.757549285888672
    9. 'urrence' → logprob: -8.882549285888672
    10. 'orr' → logprob: -9.257549285888672

Token 777: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020500782877206802
    2. '
' → logprob: -5.270500659942627
    3. '    
' → logprob: -5.270500659942627
    4. '       ' → logprob: -5.520500659942627
    5. 'def' → logprob: -5.645500659942627
    6. ')' → logprob: -8.020501136779785
    7. '    ' → logprob: -8.020501136779785
    8. ',' → logprob: -8.395501136779785
    9. ' +' → logprob: -8.520501136779785
    10. '+' → logprob: -8.770501136779785

Token 778: ' simple' (ID: 4705)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.03656239062547684
    2. ' start' → logprob: -3.411562442779541
    3. 'end' → logprob: -5.911562442779541
    4. 'interval' → logprob: -9.411561965942383
    5. ' end' → logprob: -10.411561965942383
    6. '```' → logprob: -10.911561965942383
    7. ' ' → logprob: -11.286561965942383
    8. 'c' → logprob: -11.411561965942383
    9. 'len' → logprob: -11.536561965942383
    10. '(start' → logprob: -11.536561965942383

Token 779: ' caractère' (ID: 80509)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02217966504395008
    2. 'def' → logprob: -4.64717960357666
    3. '
' → logprob: -5.27217960357666
    4. '    
' → logprob: -5.52217960357666
    5. ')' → logprob: -7.14717960357666
    6. '    ' → logprob: -7.64717960357666
    7. '       ' → logprob: -8.14717960357666
    8. '  ' → logprob: -8.27217960357666
    9. '_length' → logprob: -8.39717960357666
    10. '  
' → logprob: -8.77217960357666

Token 780: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03155621141195297
    2. 'def' → logprob: -4.031556129455566
    3. '    
' → logprob: -4.906556129455566
    4. '
' → logprob: -5.281556129455566
    5. ')' → logprob: -8.281556129455566
    6. '    ' → logprob: -9.031556129455566
    7. '       ' → logprob: -9.406556129455566
    8. '#' → logprob: -9.656556129455566
    9. ' def' → logprob: -10.031556129455566
    10. '   
' → logprob: -10.406556129455566

Token 781: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7629920840263367
    2. 'def' → logprob: -0.7629920840263367
    3. ' def' → logprob: -3.6379921436309814
    4. '
' → logprob: -3.8879921436309814
    5. '    
' → logprob: -4.887991905212402
    6. ')' → logprob: -5.012991905212402
    7. '  
' → logprob: -6.887991905212402
    8. ':' → logprob: -7.012991905212402
    9. '   
' → logprob: -7.387991905212402
    10. '#' → logprob: -7.762991905212402

Token 782: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013409147970378399
    2. '       ' → logprob: -4.51340913772583
    3. ')' → logprob: -6.51340913772583
    4. '    ' → logprob: -7.88840913772583
    5. '<|end|>' → logprob: -8.513409614562988
    6. '    
' → logprob: -9.763409614562988
    7. '           ' → logprob: -9.888409614562988
    8. 'def' → logprob: -10.138409614562988
    9. '
' → logprob: -10.763409614562988
    10. '<|end|>' → logprob: -10.888409614562988

Token 783: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005795358680188656
    2. 'def' → logprob: -5.505795478820801
    3. '
' → logprob: -6.880795478820801
    4. '    
' → logprob: -7.880795478820801
    5. '    ' → logprob: -9.3807954788208
    6. ')' → logprob: -9.5057954788208
    7. ' def' → logprob: -9.6307954788208
    8. '       ' → logprob: -10.3807954788208
    9. '```' → logprob: -11.0057954788208
    10. '#' → logprob: -11.6307954788208

Token 784: ' but' (ID: 889)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47320908308029175
    2. '   ' → logprob: -2.4732091426849365
    3. ' return' → logprob: -2.4732091426849365
    4. '#' → logprob: -2.5982091426849365
    5. ' def' → logprob: -3.0982091426849365
    6. 'return' → logprob: -3.5982091426849365
    7. ' for' → logprob: -3.7232091426849365
    8. 'for' → logprob: -4.223208904266357
    9. ' #' → logprob: -5.598208904266357
    10. ' code' → logprob: -6.098208904266357

Token 785: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.24185810983181
    2. ' =' → logprob: -2.6168580055236816
    3. '   ' → logprob: -2.7418580055236816
    4. ' is' → logprob: -3.1168580055236816
    5. '=' → logprob: -4.116858005523682
    6. 'est' → logprob: -4.991858005523682
    7. '    ' → logprob: -5.741858005523682
    8. ':' → logprob: -6.616858005523682
    9. ' n' → logprob: -6.991858005523682
    10. '  ' → logprob: -6.991858005523682

Token 786: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.39018961787223816
    2. ' to' → logprob: -2.0151896476745605
    3. ' donc' → logprob: -2.3901896476745605
    4. '   ' → logprob: -2.8901896476745605
    5. ' d' → logprob: -3.8901896476745605
    6. '    ' → logprob: -4.6401896476745605
    7. 'to' → logprob: -5.0151896476745605
    8. 'def' → logprob: -6.5151896476745605
    9. '       ' → logprob: -7.2651896476745605
    10. ' alors' → logprob: -7.2651896476745605

Token 787: ' minim' (ID: 23874)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24159188568592072
    2. 'min' → logprob: -1.7415919303894043
    3. ' return' → logprob: -3.6165919303894043
    4. 'ret' → logprob: -5.866591930389404
    5. 'optim' → logprob: -6.116591930389404
    6. 'find' → logprob: -6.366591930389404
    7. ' minim' → logprob: -6.366591930389404
    8. ' minimize' → logprob: -6.491591930389404
    9. 'calcul' → logprob: -7.616591930389404
    10. ' trouver' → logprob: -7.866591930389404

Token 788: 'iser' (ID: 7466)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.612659752368927
    2. 'm' → logprob: -0.862659752368927
    3. 'er' → logprob: -4.237659931182861
    4. 'iser' → logprob: -4.237659931182861
    5. 'mer' → logprob: -5.612659931182861
    6. 'zer' → logprob: -6.237659931182861
    7. 'user' → logprob: -7.487659931182861
    8. 'al' → logprob: -9.112659454345703
    9. '#' → logprob: -9.237659454345703
    10. 'um' → logprob: -9.737659454345703

Token 789: ' la' (ID: 557)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4258999824523926
    2. '_' → logprob: -1.3008999824523926
    3. '_length' → logprob: -3.0508999824523926
    4. ' ' → logprob: -4.925899982452393
    5. '   ' → logprob: -5.175899982452393
    6. 'def' → logprob: -5.800899982452393
    7. '  ' → logprob: -6.550899982452393
    8. ')' → logprob: -6.800899982452393
    9. 'length' → logprob: -7.175899982452393
    10. '
' → logprob: -7.300899982452393

Token 790: ' longueur' (ID: 104613)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.46279966831207275
    2. ' length' → logprob: -1.5877996683120728
    3. ' longueur' → logprob: -2.087799549102783
    4. 'long' → logprob: -4.212799549102783
    5. ' return' → logprob: -4.837799549102783
    6. 'return' → logprob: -4.962799549102783
    7. 'len' → logprob: -5.337799549102783
    8. 'distance' → logprob: -6.212799549102783
    9. 'result' → logprob: -7.087799549102783
    10. 'nombre' → logprob: -7.337799549102783

Token 791: ' après' (ID: 16460)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02681642211973667
    2. '
' → logprob: -4.901816368103027
    3. 'def' → logprob: -5.026816368103027
    4. '    
' → logprob: -5.651816368103027
    5. ')' → logprob: -6.026816368103027
    6. '#' → logprob: -6.651816368103027
    7. '    ' → logprob: -6.901816368103027
    8. ' 
' → logprob: -7.526816368103027
    9. ' def' → logprob: -7.901816368103027
    10. 'import' → logprob: -8.026816368103027

Token 792: ' compression' (ID: 41811)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.6329169273376465
    2. ' ' → logprob: -1.7579169273376465
    3. '   ' → logprob: -1.7579169273376465
    4. ')' → logprob: -2.5079169273376465
    5. ' )' → logprob: -2.5079169273376465
    6. 'def' → logprob: -2.6329169273376465
    7. ' def' → logprob: -3.2579169273376465
    8. 'return' → logprob: -3.7579169273376465
    9. ' tokens' → logprob: -3.7579169273376465
    10. '  ' → logprob: -4.1329169273376465

Token 793: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01108437217772007
    2. '
' → logprob: -5.51108455657959
    3. '    
' → logprob: -5.51108455657959
    4. '    ' → logprob: -6.26108455657959
    5. 'def' → logprob: -8.13608455657959
    6. ' 
' → logprob: -9.01108455657959
    7. ')' → logprob: -9.01108455657959
    8. '```' → logprob: -9.51108455657959
    9. ',' → logprob: -9.63608455657959
    10. '     
' → logprob: -9.88608455657959

Token 794: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008906570263206959
    2. 'def' → logprob: -5.383906364440918
    3. '
' → logprob: -5.883906364440918
    4. '    
' → logprob: -7.008906364440918
    5. '    ' → logprob: -8.133906364440918
    6. ')' → logprob: -9.258906364440918
    7. ' def' → logprob: -9.383906364440918
    8. ' 
' → logprob: -10.883906364440918
    9. '#' → logprob: -11.133906364440918
    10. '```' → logprob: -11.133906364440918

Token 795: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010868360288441181
    2. '
' → logprob: -4.760868549346924
    3. '    
' → logprob: -6.635868549346924
    4. 'def' → logprob: -8.010868072509766
    5. 'from' → logprob: -8.385868072509766
    6. 'import' → logprob: -9.385868072509766
    7. '    ' → logprob: -9.385868072509766
    8. '```' → logprob: -9.760868072509766
    9. 'count' → logprob: -10.510868072509766
    10. '#' → logprob: -10.635868072509766

Token 796: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8171895742416382
    2. '#' (adapté à ' #') → logprob: -1.0671895742416382
    3. 'def' → logprob: -2.1921896934509277
    4. 'from' → logprob: -3.3171896934509277
    5. 'counts' → logprob: -3.6921896934509277
    6. 'total' → logprob: -4.692189693450928
    7. 'count' → logprob: -4.692189693450928
    8. 'freq' → logprob: -5.192189693450928
    9. 'n' → logprob: -5.817189693450928
    10. 'char' → logprob: -5.942189693450928

Token 797: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8598647713661194
    2. '#' → logprob: -1.4848647117614746
    3. 'def' → logprob: -1.6098647117614746
    4. 'from' → logprob: -2.6098647117614746
    5. 'counts' → logprob: -4.359864711761475
    6. 'total' → logprob: -4.859864711761475
    7. 'return' → logprob: -5.109864711761475
    8. ' #' → logprob: -5.109864711761475
    9. 'count' → logprob: -5.234864711761475
    10. 'freq' → logprob: -5.359864711761475

Token 798: ' doit' (ID: 21822)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6913150548934937
    2. 'def' → logprob: -1.5663150548934937
    3. '#' → logprob: -2.066315174102783
    4. 'continue' → logprob: -2.566315174102783
    5. 'import' → logprob: -3.316315174102783
    6. 'n' → logprob: -4.816315174102783
    7. '   ' → logprob: -4.941315174102783
    8. 's' → logprob: -5.191315174102783
    9. ' n' → logprob: -5.566315174102783
    10. ' continue' → logprob: -5.691315174102783

Token 799: ' donc' (ID: 14206)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.281758189201355
    2. '   ' → logprob: -1.406758189201355
    3. 'import' → logprob: -1.781758189201355
    4. '#' → logprob: -1.781758189201355
    5. 'contin' → logprob: -3.2817583084106445
    6. 'def' → logprob: -3.6567583084106445
    7. 'penser' → logprob: -4.4067583084106445
    8. 'chercher' → logprob: -4.9067583084106445
    9. 'return' → logprob: -5.0317583084106445
    10. 'count' → logprob: -5.4067583084106445

Token 800: ' partition' (ID: 31512)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -1.4128886461257935
    2. 'import' → logprob: -1.7878886461257935
    3. 'from' → logprob: -2.162888526916504
    4. 'min' → logprob: -2.537888526916504
    5. 'penser' → logprob: -2.662888526916504
    6. '#' → logprob: -2.787888526916504
    7. 'tr' → logprob: -3.412888526916504
    8. 'chercher' → logprob: -3.412888526916504
    9. ' continuer' → logprob: -3.662888526916504
    10. '   ' → logprob: -3.662888526916504

Token 801: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.043029677122831345
    2. 'er' → logprob: -3.79302978515625
    3. '_' → logprob: -4.91802978515625
    4. '   ' → logprob: -5.41802978515625
    5. ' ' → logprob: -6.66802978515625
    6. 'nner' → logprob: -6.79302978515625
    7. 'ners' → logprob: -6.79302978515625
    8. 'n' → logprob: -6.91802978515625
    9. 'ing' → logprob: -7.04302978515625
    10. ' =' → logprob: -7.29302978515625

Token 802: ' les' (ID: 1341)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1454195976257324
    2. ' )' → logprob: -2.0204195976257324
    3. 's' → logprob: -2.3954195976257324
    4. ')' → logprob: -2.3954195976257324
    5. '(s' → logprob: -2.7704195976257324
    6. ' ,' → logprob: -2.8954195976257324
    7. ' ' → logprob: -2.8954195976257324
    8. ',' → logprob: -3.1454195976257324
    9. '   ' → logprob: -3.8954195976257324
    10. ' ]' → logprob: -4.145419597625732

Token 803: ' caractères' (ID: 183106)
  Prédit: ' letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' letters' → logprob: -1.3069616556167603
    2. ' intervals' → logprob: -1.6819616556167603
    3. ' characters' → logprob: -2.0569615364074707
    4. ' chars' → logprob: -2.1819615364074707
    5. ' digits' → logprob: -2.4319615364074707
    6. 'chars' → logprob: -2.9319615364074707
    7. 'digits' → logprob: -3.0569615364074707
    8. 'letters' → logprob: -3.3069615364074707
    9. 'interval' → logprob: -3.8069615364074707
    10. 'characters' → logprob: -4.431961536407471

Token 804: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7142478227615356
    2. ',' → logprob: -2.214247703552246
    3. '   ' → logprob: -2.339247703552246
    4. ' ,' → logprob: -2.339247703552246
    5. ' )' → logprob: -2.589247703552246
    6. 'def' → logprob: -2.714247703552246
    7. ']' → logprob: -3.214247703552246
    8. 's' → logprob: -3.214247703552246
    9. ' ]' → logprob: -3.214247703552246
    10. '<|end|>' → logprob: -3.214247703552246

Token 805: ' interv' (ID: 37413)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6703581213951111
    2. ' interv' → logprob: -1.0453581809997559
    3. ' intervals' → logprob: -3.045358180999756
    4. 'inter' → logprob: -3.545358180999756
    5. ' groupes' → logprob: -4.545358180999756
    6. 'sub' → logprob: -5.170358180999756
    7. 'une' → logprob: -5.295358180999756
    8. ' plusieurs' → logprob: -5.670358180999756
    9. ' contiguous' → logprob: -5.795358180999756
    10. ' group' → logprob: -6.045358180999756

Token 806: 'alles' (ID: 28825)
  Prédit: 'alles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alles' → logprob: -0.12273741513490677
    2. 'ales' → logprob: -2.622737407684326
    3. 'al' → logprob: -3.372737407684326
    4. 'als' → logprob: -6.122737407684326
    5. '```' → logprob: -6.122737407684326
    6. 'alle' → logprob: -7.372737407684326
    7. 'ale' → logprob: -7.872737407684326
    8. 'aux' → logprob: -8.185237884521484
    9. '</' → logprob: -8.372737884521484
    10. '`' → logprob: -8.497737884521484

Token 807: ' contin' (ID: 2590)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33673328161239624
    2. ',' → logprob: -2.336733341217041
    3. '.' → logprob: -2.836733341217041
    4. ')' → logprob: -3.336733341217041
    5. 'def' → logprob: -4.211733341217041
    6. '    
' → logprob: -4.461733341217041
    7. ':' → logprob: -4.586733341217041
    8. ' ,' → logprob: -4.836733341217041
    9. 's' → logprob: -5.086733341217041
    10. '
' → logprob: -5.336733341217041

Token 808: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.0005435001221485436
    2. 'uus' → logprob: -7.875543594360352
    3. 'u' → logprob: -9.500543594360352
    4. 'ues' → logprob: -9.750543594360352
    5. 'eus' → logprob: -11.625543594360352
    6. 'uous' → logprob: -12.750543594360352
    7. 'ús' → logprob: -12.875543594360352
    8. '   ' → logprob: -13.125543594360352
    9. 'ус' → logprob: -13.375543594360352
    10. '#' → logprob: -13.750543594360352

Token 809: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37245115637779236
    2. ',' → logprob: -1.8724511861801147
    3. '.' → logprob: -3.247451066970825
    4. ')' → logprob: -3.372451066970825
    5. ' ,' → logprob: -4.372451305389404
    6. 'def' → logprob: -4.497451305389404
    7. '    
' → logprob: -4.747451305389404
    8. '<|end|>' → logprob: -4.872451305389404
    9. 's' → logprob: -5.122451305389404
    10. '
' → logprob: -5.372451305389404

Token 810: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3796690702438354
    2. ' puis' → logprob: -1.3796690702438354
    3. ' mais' → logprob: -1.8796690702438354
    4. '   ' → logprob: -2.004669189453125
    5. ' et' → logprob: -3.004669189453125
    6. ' pas' → logprob: -3.129669189453125
    7. ' #' → logprob: -3.879669189453125
    8. ' not' → logprob: -4.129669189453125
    9. 'et' → logprob: -4.254669189453125
    10. 'not' → logprob: -4.504669189453125

Token 811: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3035195767879486
    2. ' mais' → logprob: -1.928519606590271
    3. '   ' → logprob: -3.4285194873809814
    4. ' et' → logprob: -3.6785194873809814
    5. ' #' → logprob: -3.9285194873809814
    6. ' puis' → logprob: -4.5535197257995605
    7. 'et' → logprob: -5.0535197257995605
    8. 'mais' → logprob: -5.4285197257995605
    9. ' en' → logprob: -5.6785197257995605
    10. 'def' → logprob: -5.8035197257995605

Token 812: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15320569276809692
    2. '   ' → logprob: -2.653205633163452
    3. ' mais' → logprob: -3.403205633163452
    4. ' #' → logprob: -4.778205871582031
    5. 'mais' → logprob: -5.028205871582031
    6. 'def' → logprob: -5.153205871582031
    7. ' et' → logprob: -5.153205871582031
    8. 'et' → logprob: -5.528205871582031
    9. ' puis' → logprob: -6.403205871582031
    10. ' pas' → logprob: -6.653205871582031

Token 813: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8020201921463013
    2. ' #' → logprob: -1.5520201921463013
    3. '   ' → logprob: -2.9270200729370117
    4. ' return' → logprob: -3.4270200729370117
    5. 'def' → logprob: -3.5520200729370117
    6. ' compter' → logprob: -3.6770200729370117
    7. ' optimiser' → logprob: -3.8020200729370117
    8. 'return' → logprob: -3.9270200729370117
    9. ' trouver' → logprob: -3.9270200729370117
    10. 'import' → logprob: -4.052020072937012

Token 814: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.6100155711174011
    2. ' i' → logprob: -1.235015630722046
    3. 'i' → logprob: -3.110015630722046
    4. ' each' → logprob: -3.110015630722046
    5. 'each' → logprob: -3.860015630722046
    6. 'partition' → logprob: -5.360015392303467
    7. ' ' → logprob: -5.610015392303467
    8. 'ch' → logprob: -5.735015392303467
    9. 'interval' → logprob: -5.735015392303467
    10. ' interval' → logprob: -5.860015392303467

Token 815: ' interval' (ID: 17116)
  Prédit: ' interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.4771624207496643
    2. 'interval' → logprob: -1.1021623611450195
    3. ' caractère' → logprob: -4.7271623611450195
    4. ' start' → logprob: -5.4771623611450195
    5. ' type' → logprob: -5.6021623611450195
    6. '   ' → logprob: -5.7271623611450195
    7. 'inter' → logprob: -6.2271623611450195
    8. ' possible' → logprob: -6.2271623611450195
    9. '#' → logprob: -6.3521623611450195
    10. ' caract' → logprob: -6.4771623611450195

Token 816: 'le' (ID: 282)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.6911811232566833
    2. 'val' → logprob: -0.8161811232566833
    3. 'e' → logprob: -3.816181182861328
    4. 'le' → logprob: -4.316181182861328
    5. 'al' → logprob: -4.566181182861328
    6. 've' → logprob: -5.941181182861328
    7. 'aire' → logprob: -6.191181182861328
    8. 'v' → logprob: -6.316181182861328
    9. 'vale' → logprob: -7.316181182861328
    10. '#' → logprob: -7.691181182861328

Token 817: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9631943106651306
    2. '       ' → logprob: -1.0881943702697754
    3. '   ' → logprob: -1.3381943702697754
    4. ' ,' → logprob: -4.963194370269775
    5. '#' → logprob: -5.838194370269775
    6. '           ' → logprob: -6.338194370269775
    7. '    ' → logprob: -6.463194370269775
    8. 'def' → logprob: -6.838194370269775
    9. ' on' → logprob: -7.713194370269775
    10. ':' → logprob: -7.838194370269775

Token 818: ' le' (ID: 505)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6446731686592102
    2. '       ' → logprob: -1.6446731090545654
    3. '   ' → logprob: -3.0196731090545654
    4. 'def' → logprob: -3.1446731090545654
    5. ' #' → logprob: -3.3946731090545654
    6. ' calcul' → logprob: -3.6446731090545654
    7. ' on' → logprob: -3.7696731090545654
    8. ' return' → logprob: -4.2696733474731445
    9. 'length' → logprob: -4.5196733474731445
    10. 'import' → logprob: -4.6446733474731445

Token 819: ' cout' (ID: 10504)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.8162140846252441
    2. '#' → logprob: -2.191214084625244
    3. ' length' → logprob: -2.191214084625244
    4. 'def' → logprob: -2.566214084625244
    5. 'count' → logprob: -3.066214084625244
    6. 'result' → logprob: -3.191214084625244
    7. '   ' → logprob: -3.316214084625244
    8. 'cost' → logprob: -3.441214084625244
    9. ' code' → logprob: -3.566214084625244
    10. ' #' → logprob: -3.691214084625244

Token 820: ' est' (ID: 893)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.33786246180534363
    2. ' =' → logprob: -1.337862491607666
    3. '=' → logprob: -5.337862491607666
    4. '<|end|>' → logprob: -5.462862491607666
    5. '+=' → logprob: -6.587862491607666
    6. ' ' → logprob: -6.587862491607666
    7. ' de' → logprob: -6.712862491607666
    8. ' est' → logprob: -6.837862491607666
    9. '<|end|>' → logprob: -6.962862491607666
    10. ' +' → logprob: -6.962862491607666

Token 821: ' :
' (ID: 10039)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.23767654597759247
    2. ' ' → logprob: -1.6126765012741089
    3. '#' → logprob: -5.237676620483398
    4. '   ' → logprob: -5.612676620483398
    5. ' lambda' → logprob: -7.237676620483398
    6. ' min' → logprob: -7.487676620483398
    7. ' #' → logprob: -7.737676620483398
    8. 'def' → logprob: -7.987676620483398
    9. '    ' → logprob: -8.237676620483398
    10. ' def' → logprob: -8.987676620483398

Token 822: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0660836324095726
    2. '#' → logprob: -3.9410836696624756
    3. ' ' → logprob: -4.4410834312438965
    4. '3' → logprob: -4.9410834312438965
    5. '```' → logprob: -5.0660834312438965
    6. '1' → logprob: -5.4410834312438965
    7. '    ' → logprob: -5.4410834312438965
    8. ' #' → logprob: -6.3160834312438965
    9. ' =' → logprob: -6.4410834312438965
    10. ')' → logprob: -7.0660834312438965

Token 823: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23588283360004425
    2. '#' (adapté à ' #') → logprob: -2.8608827590942383
    3. ' ' → logprob: -2.9858827590942383
    4. '1' → logprob: -3.3608827590942383
    5. '    ' → logprob: -3.9858827590942383
    6. '3' → logprob: -4.110882759094238
    7. ' #' → logprob: -4.485882759094238
    8. ' len' → logprob: -5.110882759094238
    9. '       ' → logprob: -5.985882759094238
    10. '```' → logprob: -6.235882759094238

Token 824: '  ' (ID: 256)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5866497755050659
    2. '   ' → logprob: -1.211649775505066
    3. 'def' → logprob: -2.5866498947143555
    4. '#' → logprob: -3.7116498947143555
    5. ' ' → logprob: -4.3366498947143555
    6. '```' → logprob: -4.9616498947143555
    7. ' def' → logprob: -5.0866498947143555
    8. '       ' → logprob: -5.0866498947143555
    9. '1' → logprob: -5.7116498947143555
    10. '    ' → logprob: -5.9616498947143555

Token 825: ' -' (ID: 533)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7158065438270569
    2. '3' → logprob: -1.090806484222412
    3. 'lambda' → logprob: -3.090806484222412
    4. '   ' → logprob: -3.465806484222412
    5. '#' → logprob: -3.590806484222412
    6. 'sum' → logprob: -3.715806484222412
    7. 'max' → logprob: -4.590806484222412
    8. 'def' → logprob: -5.215806484222412
    9. 'length' → logprob: -5.215806484222412
    10. 'len' → logprob: -5.215806484222412

Token 826: ' si' (ID: 1784)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.2517101764678955
    2. '3' → logprob: -1.3767101764678955
    3. 'nombre' → logprob: -1.5017101764678955
    4. 'sum' → logprob: -2.1267101764678955
    5. 'max' → logprob: -3.8767101764678955
    6. '   ' → logprob: -3.8767101764678955
    7. 's' → logprob: -4.126709938049316
    8. 'la' → logprob: -4.501709938049316
    9. 'le' → logprob: -5.001709938049316
    10. 'som' → logprob: -5.126709938049316

Token 827: ' interval' (ID: 17116)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.904638946056366
    2. 'start' → logprob: -1.2796390056610107
    3. 'end' → logprob: -2.0296390056610107
    4. ' start' → logprob: -2.5296390056610107
    5. ' len' → logprob: -3.0296390056610107
    6. 'interval' → logprob: -3.6546390056610107
    7. ' end' → logprob: -3.7796390056610107
    8. ' interval' → logprob: -5.779638767242432
    9. 'l' → logprob: -5.904638767242432
    10. ' l' → logprob: -7.404638767242432

Token 828: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.0144776105880737
    2. '>' → logprob: -1.8894776105880737
    3. 'e' → logprob: -2.1394777297973633
    4. '_' → logprob: -2.1394777297973633
    5. 'al' → logprob: -3.0144777297973633
    6. 'v' → logprob: -3.1394777297973633
    7. 's' → logprob: -3.3894777297973633
    8. 'le' → logprob: -3.8894777297973633
    9. ' >' → logprob: -4.014477729797363
    10. 'vl' → logprob: -4.764477729797363

Token 829: ' >' (ID: 1424)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6465372443199158
    2. '>' → logprob: -1.2715373039245605
    3. '==' → logprob: -3.1465373039245605
    4. '   ' → logprob: -3.5215373039245605
    5. 'start' → logprob: -3.6465373039245605
    6. ' >' → logprob: -4.3965373039245605
    7. 'len' → logprob: -4.3965373039245605
    8. ' ==' → logprob: -4.6465373039245605
    9. '[start' → logprob: -4.6465373039245605
    10. ' ' → logprob: -5.0215373039245605

Token 830: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003016214817762375
    2. '0' → logprob: -6.503015995025635
    3. ' ' → logprob: -6.503015995025635
    4. '   ' → logprob: -12.003016471862793
    5. '=' → logprob: -13.378016471862793
    6. '>' → logprob: -13.878016471862793
    7. ' ' → logprob: -13.878016471862793
    8. 'len' → logprob: -14.378016471862793
    9. 'start' → logprob: -14.503016471862793
    10. 'length' → logprob: -14.503016471862793

Token 831: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3497461974620819
    2. '1' → logprob: -1.2247462272644043
    3. ' ' → logprob: -6.724746227264404
    4. 'start' → logprob: -9.974745750427246
    5. '=' → logprob: -10.849745750427246
    6. 'length' → logprob: -11.599745750427246
    7. '>' → logprob: -11.849745750427246
    8. 'len' → logprob: -12.224745750427246
    9. '   ' → logprob: -12.349745750427246
    10. 'end' → logprob: -13.599745750427246

Token 832: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2219034433364868
    2. '   ' → logprob: -1.3469034433364868
    3. ' ' → logprob: -2.8469033241271973
    4. ',' → logprob: -3.0969033241271973
    5. ' >' → logprob: -3.0969033241271973
    6. ' +' → logprob: -3.2219033241271973
    7. '+' → logprob: -3.7219033241271973
    8. ' :' → logprob: -3.8469033241271973
    9. '    ' → logprob: -4.221903324127197
    10. ' start' → logprob: -4.596903324127197

Token 833: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5962346792221069
    2. ' ' → logprob: -0.8462346792221069
    3. '   ' → logprob: -4.2212347984313965
    4. 'length' → logprob: -6.8462347984313965
    5. ' sum' → logprob: -7.2212347984313965
    6. ' length' → logprob: -7.4712347984313965
    7. ' len' → logprob: -7.7212347984313965
    8. ' return' → logprob: -7.9712347984313965
    9. 'len' → logprob: -8.346234321594238
    10. '       ' → logprob: -8.471234321594238

Token 834: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00043448375072330236
    2. ' ' → logprob: -8.000434875488281
    3. '   ' → logprob: -9.375434875488281
    4. 'length' → logprob: -12.750434875488281
    5. 'return' → logprob: -13.250434875488281
    6. 'def' → logprob: -13.375434875488281
    7. '```' → logprob: -13.875434875488281
    8. 'len' → logprob: -14.000434875488281
    9. 'cost' → logprob: -14.125434875488281
    10. '           ' → logprob: -14.375434875488281

Token 835: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24808350205421448
    2. ' +' → logprob: -1.998083472251892
    3. '
' → logprob: -3.3730835914611816
    4. '    
' → logprob: -4.248083591461182
    5. '+' → logprob: -4.373083591461182
    6. ')' → logprob: -5.498083591461182
    7. '\n' → logprob: -5.748083591461182
    8. 'def' → logprob: -5.748083591461182
    9. ',' → logprob: -6.123083591461182
    10. '```' → logprob: -6.248083591461182

Token 836: 'ex' (ID: 490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30751726031303406
    2. ' +' → logprob: -2.0575172901153564
    3. '+' → logprob: -2.9325172901153564
    4. ' plus' → logprob: -3.5575172901153564
    5. ' tokens' → logprob: -4.432517051696777
    6. ' )' → logprob: -4.682517051696777
    7. 'tokens' → logprob: -4.807517051696777
    8. '*' → logprob: -4.932517051696777
    9. 'plus' → logprob: -5.932517051696777
    10. ' par' → logprob: -6.307517051696777

Token 837: ':' (ID: 25)
  Prédit: 'cept'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cept' → logprob: -0.1767486035823822
    2. ')' → logprob: -3.426748514175415
    3. '   ' → logprob: -3.551748514175415
    4. 'interval' → logprob: -4.551748752593994
    5. 'start' → logprob: -5.176748752593994
    6. '```' → logprob: -5.176748752593994
    7. 'p' → logprob: -5.301748752593994
    8. '+' → logprob: -5.426748752593994
    9. 'ceptions' → logprob: -5.551748752593994
    10. 'pression' → logprob: -5.551748752593994

Token 838: ' "' (ID: 392)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5574922561645508
    2. 'x' → logprob: -2.307492256164551
    3. ' start' → logprob: -2.932492256164551
    4. ''' → logprob: -3.307492256164551
    5. '   ' → logprob: -3.557492256164551
    6. 'end' → logprob: -3.807492256164551
    7. '"' → logprob: -3.807492256164551
    8. 'interval' → logprob: -3.807492256164551
    9. ''-' → logprob: -3.932492256164551
    10. 'len' → logprob: -3.932492256164551

Token 839: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20451661944389343
    2. 'x' → logprob: -1.8295166492462158
    3. 'start' → logprob: -3.954516649246216
    4. ''a' → logprob: -6.454516410827637
    5. '1' → logprob: -7.704516410827637
    6. ''' → logprob: -7.829516410827637
    7. ' a' → logprob: -7.829516410827637
    8. 'f' → logprob: -8.079516410827637
    9. '   ' → logprob: -8.329516410827637
    10. '"' → logprob: -8.454516410827637

Token 840: '-d' (ID: 2469)
  Prédit: '-b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.5237109065055847
    2. '-z' → logprob: -1.5237109661102295
    3. '-' → logprob: -2.1487109661102295
    4. ' -' → logprob: -2.7737109661102295
    5. 'b' → logprob: -5.52371072769165
    6. '-a' → logprob: -6.02371072769165
    7. '   ' → logprob: -7.14871072769165
    8. '"-' → logprob: -7.27371072769165
    9. ' ' → logprob: -7.39871072769165
    10. 'a' → logprob: -7.64871072769165

Token 841: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.05376359447836876
    2. '"' → logprob: -4.303763389587402
    3. ')' → logprob: -4.303763389587402
    4. ')")' → logprob: -4.303763389587402
    5. ' ")' → logprob: -5.553763389587402
    6. '+")' → logprob: -6.803763389587402
    7. 'a' → logprob: -6.928763389587402
    8. '+' → logprob: -7.303763389587402
    9. '...' → logprob: -7.428763389587402
    10. '"),' → logprob: -7.678763389587402

Token 842: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008918622508645058
    2. '#' → logprob: -5.633918762207031
    3. ')' → logprob: -6.133918762207031
    4. '       ' → logprob: -6.883918762207031
    5. ',' → logprob: -7.633918762207031
    6. '  ' → logprob: -7.883918762207031
    7. '<|end|>' → logprob: -8.383918762207031
    8. ' +' → logprob: -8.508918762207031
    9. '           ' → logprob: -8.758918762207031
    10. ' ' → logprob: -8.883918762207031

Token 843: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007671456318348646
    2. '#' (adapté à ' #') → logprob: -5.257671356201172
    3. ' +' → logprob: -7.382671356201172
    4. '       ' → logprob: -7.757671356201172
    5. ' ' → logprob: -8.257671356201172
    6. '  ' → logprob: -8.632671356201172
    7. '+' → logprob: -8.757671356201172
    8. ',' → logprob: -8.757671356201172
    9. ')' → logprob: -8.882671356201172
    10. 'def' → logprob: -9.132671356201172

Token 844: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.527816891670227
    2. '#' → logprob: -0.902816891670227
    3. ' #' → logprob: -5.6528167724609375
    4. '       ' → logprob: -7.6528167724609375
    5. '  ' → logprob: -8.527816772460938
    6. '           ' → logprob: -8.902816772460938
    7. ' ' → logprob: -9.027816772460938
    8. ',' → logprob: -10.027816772460938
    9. '    ' → logprob: -10.527816772460938
    10. ')' → logprob: -10.652816772460938

Token 845: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3074222207069397
    2. '#' → logprob: -1.432422161102295
    3. 'else' → logprob: -4.057422161102295
    4. ' #' → logprob: -5.807422161102295
    5. ' else' → logprob: -6.057422161102295
    6. '       ' → logprob: -6.432422161102295
    7. '  ' → logprob: -7.807422161102295
    8. ' ' → logprob: -8.057422637939453
    9. ')' → logprob: -8.182422637939453
    10. '           ' → logprob: -9.182422637939453

Token 846: ' si' (ID: 1784)
  Prédit: '  '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.7314968109130859
    2. ' ' → logprob: -1.481496810913086
    3. '   ' → logprob: -1.606496810913086
    4. ' sinon' → logprob: -3.856496810913086
    5. 'else' → logprob: -4.106496810913086
    6. 'if' → logprob: -4.106496810913086
    7. ' ' → logprob: -4.606496810913086
    8. '    ' → logprob: -4.856496810913086
    9. '#' → logprob: -5.356496810913086
    10. 'si' → logprob: -5.731496810913086

Token 847: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.13399185240268707
    2. ' interval' → logprob: -2.1339919567108154
    3. 'len' → logprob: -5.633991718292236
    4. ' len' → logprob: -6.883991718292236
    5. '   ' → logprob: -7.133991718292236
    6. 'start' → logprob: -7.633991718292236
    7. 'end' → logprob: -8.383992195129395
    8. '(interval' → logprob: -8.633992195129395
    9. ' start' → logprob: -8.758992195129395
    10. ' ' → logprob: -8.883992195129395

Token 848: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.412198781967163
    2. 'erve' → logprob: -1.662198781967163
    3. 'ule' → logprob: -1.912198781967163
    4. 'v' → logprob: -2.412198781967163
    5. 'erv' → logprob: -3.037198781967163
    6. 'interval' → logprob: -3.287198781967163
    7. '>' → logprob: -3.787198781967163
    8. 'le' → logprob: -3.787198781967163
    9. 'val' → logprob: -3.912198781967163
    10. '=' → logprob: -3.912198781967163

Token 849: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7955453991889954
    2. ' >' → logprob: -0.7955453991889954
    3. '>' → logprob: -2.6705453395843506
    4. '==' → logprob: -4.17054557800293
    5. ' =' → logprob: -5.92054557800293
    6. '[' → logprob: -6.17054557800293
    7. '=' → logprob: -6.29554557800293
    8. ' <' → logprob: -6.42054557800293
    9. ' ' → logprob: -6.79554557800293
    10. '   ' → logprob: -7.04554557800293

Token 850: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03626961633563042
    2. ' ' → logprob: -3.9112696647644043
    3. '0' → logprob: -4.161269664764404
    4. '=' → logprob: -12.036269187927246
    5. '   ' → logprob: -12.911269187927246
    6. '(' → logprob: -13.286269187927246
    7. ' =' → logprob: -13.786269187927246
    8. 'start' → logprob: -13.848769187927246
    9. ' (' → logprob: -13.911269187927246
    10. '  ' → logprob: -14.598769187927246

Token 851: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07927342504262924
    2. '0' → logprob: -2.5792734622955322
    3. ' ' → logprob: -8.579273223876953
    4. 'start' → logprob: -8.954273223876953
    5. '=' → logprob: -10.204273223876953
    6. '   ' → logprob: -12.329273223876953
    7. 'end' → logprob: -12.454273223876953
    8. '(' → logprob: -12.829273223876953
    9. ' =' → logprob: -13.204273223876953
    10. '==' → logprob: -13.329273223876953

Token 852: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4923805594444275
    2. ' :' → logprob: -0.9923805594444275
    3. ':
' → logprob: -4.992380619049072
    4. ' :
' → logprob: -6.117380619049072
    5. '       ' → logprob: -6.367380619049072
    6. '   ' → logprob: -6.492380619049072
    7. ' +' → logprob: -6.742380619049072
    8. '           ' → logprob: -6.992380619049072
    9. 'length' → logprob: -7.867380619049072
    10. '    ' → logprob: -7.867380619049072

Token 853: ' nombre' (ID: 9733)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.2868432104587555
    2. 'count' → logprob: -1.411843180656433
    3. ' length' → logprob: -6.286843299865723
    4. 'interval' → logprob: -6.411843299865723
    5. '   ' → logprob: -7.161843299865723
    6. ' count' → logprob: -7.411843299865723
    7. 'sum' → logprob: -8.411843299865723
    8. 'len' → logprob: -8.411843299865723
    9. 'max' → logprob: -9.536843299865723
    10. '       ' → logprob: -9.661843299865723

Token 854: ' d' (ID: 272)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3492565453052521
    2. '_' → logprob: -2.4742565155029297
    3. ' _' → logprob: -2.9742565155029297
    4. ' +' → logprob: -3.3492565155029297
    5. '   ' → logprob: -3.9742565155029297
    6. ' ' → logprob: -4.22425651550293
    7. '  ' → logprob: -4.34925651550293
    8. '_counts' → logprob: -4.34925651550293
    9. '_count' → logprob: -4.47425651550293
    10. '    ' → logprob: -4.72425651550293

Token 855: ''occ' (ID: 158932)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.7425313591957092
    2. '_occ' → logprob: -0.9925313591957092
    3. 'count' → logprob: -2.9925312995910645
    4. 'occur' → logprob: -3.4925312995910645
    5. '_oc' → logprob: -4.4925312995910645
    6. ' occurrences' → logprob: -4.6175312995910645
    7. 's' → logprob: -4.7425312995910645
    8. ''occ' → logprob: -4.8675312995910645
    9. '(count' → logprob: -4.9925312995910645
    10. '_count' → logprob: -4.9925312995910645

Token 856: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.009189391508698463
    2. 'ur' → logprob: -4.884189605712891
    3. 'urr' → logprob: -7.759189605712891
    4. '```' → logprob: -8.25918960571289
    5. 'r' → logprob: -8.38418960571289
    6. '   ' → logprob: -8.50918960571289
    7. '#' → logprob: -9.75918960571289
    8. 'rr' → logprob: -10.00918960571289
    9. 'curr' → logprob: -10.13418960571289
    10. 'urrence' → logprob: -10.25918960571289

Token 857: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04298355057835579
    2. '    
' → logprob: -3.9179835319519043
    3. '
' → logprob: -4.667983531951904
    4. ')' → logprob: -5.167983531951904
    5. 'def' → logprob: -6.292983531951904
    6. '    ' → logprob: -6.417983531951904
    7. 'import' → logprob: -6.917983531951904
    8. 'from' → logprob: -7.417983531951904
    9. ',' → logprob: -8.167984008789062
    10. '\n' → logprob: -8.167984008789062

Token 858: ' ce' (ID: 2357)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.0178769826889038
    2. ' start' → logprob: -1.2678769826889038
    3. ' c' → logprob: -1.6428769826889038
    4. ' the' → logprob: -3.3928771018981934
    5. ' ' → logprob: -3.7678771018981934
    6. 'the' → logprob: -3.7678771018981934
    7. ' that' → logprob: -3.8928771018981934
    8. 'c' → logprob: -4.017877101898193
    9. 'chars' → logprob: -4.142877101898193
    10. ' chars' → logprob: -4.642877101898193

Token 859: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5850978493690491
    2. 'character' → logprob: -1.5850977897644043
    3. ' character' → logprob: -2.3350977897644043
    4. ' caractère' → logprob: -3.2100977897644043
    5. 'char' → logprob: -3.3350977897644043
    6. 'interval' → logprob: -3.5850977897644043
    7. ' caract' → logprob: -4.210097789764404
    8. ' interval' → logprob: -5.460097789764404
    9. ' unique' → logprob: -5.460097789764404
    10. 'c' → logprob: -5.585097789764404

Token 860: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024915698915719986
    2. '    
' → logprob: -4.02491569519043
    3. ')' → logprob: -6.39991569519043
    4. '
' → logprob: -7.02491569519043
    5. '    ' → logprob: -7.27491569519043
    6. 'import' → logprob: -7.64991569519043
    7. '#' → logprob: -7.77491569519043
    8. 'counts' → logprob: -7.77491569519043
    9. 'def' → logprob: -7.89991569519043
    10. 'from' → logprob: -8.27491569519043

Token 861: 'ex' (ID: 490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33796775341033936
    2. 'count' → logprob: -1.8379677534103394
    3. 'interval' → logprob: -3.212967872619629
    4. 'end' → logprob: -4.087967872619629
    5. 'c' → logprob: -4.212967872619629
    6. 'start' → logprob: -4.212967872619629
    7. '1' → logprob: -5.212967872619629
    8. '])' → logprob: -5.462967872619629
    9. '))' → logprob: -5.712967872619629
    10. '   ' → logprob: -5.712967872619629

Token 862: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3539762496948242
    2. ' c' → logprob: -1.7289762496948242
    3. 's' → logprob: -2.103976249694824
    4. ' s' → logprob: -2.228976249694824
    5. 'c' → logprob: -2.478976249694824
    6. '(s' → logprob: -2.728976249694824
    7. '=' → logprob: -3.853976249694824
    8. ' '' → logprob: -4.103976249694824
    9. ' =' → logprob: -4.228976249694824
    10. ' of' → logprob: -4.478976249694824

Token 863: ' "' (ID: 392)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.35901087522506714
    2. ''' → logprob: -1.734010934829712
    3. 'a' → logprob: -3.359010934829712
    4. 'count' → logprob: -3.609010934829712
    5. 's' → logprob: -4.234010696411133
    6. ''s' → logprob: -4.234010696411133
    7. '"' → logprob: -4.984010696411133
    8. '"a' → logprob: -5.109010696411133
    9. 'c' → logprob: -5.484010696411133
    10. '   ' → logprob: -5.984010696411133

Token 864: 'z' (ID: 89)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.37582188844680786
    2. 'c' → logprob: -2.125821828842163
    3. ''a' → logprob: -2.125821828842163
    4. 's' → logprob: -3.750821828842163
    5. ''' → logprob: -3.875821828842163
    6. 'count' → logprob: -4.375822067260742
    7. 'aaa' → logprob: -5.250822067260742
    8. 'start' → logprob: -5.500822067260742
    9. ''s' → logprob: -5.625822067260742
    10. 'aaaa' → logprob: -6.750822067260742

Token 865: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.47268596291542053
    2. ')")' → logprob: -1.3476859331130981
    3. ')' → logprob: -2.8476860523223877
    4. ')")
' → logprob: -4.347685813903809
    5. ']' → logprob: -4.472685813903809
    6. ')"' → logprob: -4.972685813903809
    7. ')])' → logprob: -5.222685813903809
    8. '"' → logprob: -5.472685813903809
    9. ' ")' → logprob: -6.222685813903809
    10. ')]' → logprob: -6.222685813903809

Token 866: ' multiple' (ID: 7598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030922740697860718
    2. '   ' → logprob: -7.253092288970947
    3. ' )' → logprob: -7.378092288970947
    4. '")' → logprob: -8.003091812133789
    5. ')")' → logprob: -8.503091812133789
    6. ')+' → logprob: -8.878091812133789
    7. ']' → logprob: -9.128091812133789
    8. ')
' → logprob: -9.128091812133789
    9. ')`' → logprob: -9.253091812133789
    10. '+' → logprob: -9.253091812133789

Token 867: ' fois' (ID: 14697)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.932127058506012
    2. '")' → logprob: -1.0571269989013672
    3. ' )' → logprob: -2.057126998901367
    4. ' ")' → logprob: -3.557126998901367
    5. '   ' → logprob: -3.807126998901367
    6. 's' → logprob: -4.557126998901367
    7. '):
' → logprob: -4.807126998901367
    8. '"' → logprob: -5.182126998901367
    9. '):' → logprob: -5.432126998901367
    10. ' occurrences' → logprob: -5.557126998901367

Token 868: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033468522131443024
    2. '   ' → logprob: -4.158468723297119
    3. '")' → logprob: -4.283468723297119
    4. ')")' → logprob: -6.908468723297119
    5. ')
' → logprob: -7.658468723297119
    6. ' )' → logprob: -7.783468723297119
    7. '       ' → logprob: -7.908468723297119
    8. 'def' → logprob: -8.033468246459961
    9. ')"' → logprob: -8.533468246459961
    10. ')")
' → logprob: -9.283468246459961

Token 869: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0048741307109594345
    2. '    
' → logprob: -5.754874229431152
    3. '    ' → logprob: -7.379874229431152
    4. ')' → logprob: -8.004874229431152
    5. '
' → logprob: -8.504874229431152
    6. 'from' → logprob: -8.879874229431152
    7. 'import' → logprob: -8.879874229431152
    8. 'def' → logprob: -9.754874229431152
    9. ' from' → logprob: -10.129874229431152
    10. ' 
' → logprob: -11.004874229431152

Token 870: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04303230345249176
    2. '    
' → logprob: -3.41803240776062
    3. '
' → logprob: -5.168032169342041
    4. 'import' → logprob: -6.543032169342041
    5. 'from' → logprob: -7.043032169342041
    6. '```' → logprob: -7.418032169342041
    7. '    ' → logprob: -9.0430326461792
    8. 'counts' → logprob: -9.2930326461792
    9. '#' (adapté à ' #') → logprob: -9.4180326461792
    10. '    
    
' → logprob: -9.6680326461792

Token 871: ' Et' (ID: 10007)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002077932469546795
    2. '    
' → logprob: -6.627078056335449
    3. '    ' → logprob: -8.25207805633545
    4. ')' → logprob: -8.50207805633545
    5. 'def' → logprob: -9.25207805633545
    6. '
' → logprob: -9.37707805633545
    7. 'import' → logprob: -10.37707805633545
    8. 'from' → logprob: -11.12707805633545
    9. '       ' → logprob: -11.62707805633545
    10. '#' → logprob: -11.75207805633545

Token 872: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17177550494670868
    2. '#' → logprob: -2.6717755794525146
    3. ' return' → logprob: -3.1717755794525146
    4. 'return' → logprob: -3.9217755794525146
    5. 'def' → logprob: -4.4217753410339355
    6. ' #' → logprob: -4.7967753410339355
    7. 'from' → logprob: -6.4217753410339355
    8. ' from' → logprob: -7.1717753410339355
    9. ' intervals' → logprob: -7.1717753410339355
    10. ' def' → logprob: -7.2967753410339355

Token 873: ' doit' (ID: 21822)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.5763720273971558
    2. 'def' → logprob: -1.5763720273971558
    3. ' return' → logprob: -1.8263720273971558
    4. '   ' → logprob: -2.3263721466064453
    5. ' #' → logprob: -2.4513721466064453
    6. '#' → logprob: -2.8263721466064453
    7. ' continue' → logprob: -2.9513721466064453
    8. ' doit' → logprob: -3.3263721466064453
    9. ' peux' → logprob: -3.8263721466064453
    10. 'return' → logprob: -4.576372146606445

Token 874: ' répart' (ID: 147636)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.537774920463562
    2. '   ' → logprob: -1.662774920463562
    3. ' trouver' → logprob: -2.2877750396728516
    4. ')' → logprob: -2.2877750396728516
    5. ' return' → logprob: -2.6627750396728516
    6. 'from' → logprob: -3.2877750396728516
    7. 'return' → logprob: -3.4127750396728516
    8. 'import' → logprob: -3.4127750396728516
    9. ' continuer' → logprob: -3.6627750396728516
    10. ' find' → logprob: -4.037775039672852

Token 875: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.00015979631280060858
    2. 'er' → logprob: -9.750160217285156
    3. 'i' → logprob: -10.125160217285156
    4. 'ire' → logprob: -11.000160217285156
    5. 'ie' → logprob: -12.125160217285156
    6. 'ier' → logprob: -12.250160217285156
    7. '   ' → logprob: -12.375160217285156
    8. 'e' → logprob: -12.750160217285156
    9. 'tir' → logprob: -12.750160217285156
    10. '```' → logprob: -13.125160217285156

Token 876: ' les' (ID: 1341)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8366541266441345
    2. '   ' → logprob: -1.8366541862487793
    3. ' )' → logprob: -1.8366541862487793
    4. '_' → logprob: -3.0866541862487793
    5. ' ' → logprob: -3.3366541862487793
    6. ' the' → logprob: -3.8366541862487793
    7. ' des' → logprob: -4.336654186248779
    8. 'ions' → logprob: -4.461654186248779
    9. 'ments' → logprob: -4.711654186248779
    10. ',' → logprob: -4.836654186248779

Token 877: ' caractères' (ID: 183106)
  Prédit: 'characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'characters' → logprob: -0.8020066022872925
    2. ' caractères' → logprob: -1.4270066022872925
    3. 'chars' → logprob: -2.177006721496582
    4. ' characters' → logprob: -2.177006721496582
    5. 'car' → logprob: -3.302006721496582
    6. ' caracteres' → logprob: -3.677006721496582
    7. ' chars' → logprob: -5.302006721496582
    8. 'letters' → logprob: -6.052006721496582
    9. ' rest' → logprob: -6.177006721496582
    10. 'interval' → logprob: -6.177006721496582

Token 878: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09628471732139587
    2. ')' → logprob: -3.4712846279144287
    3. ' )' → logprob: -4.096284866333008
    4. ',' → logprob: -5.096284866333008
    5. ' ,' → logprob: -5.346284866333008
    6. 's' → logprob: -5.721284866333008
    7. ' =' → logprob: -5.846284866333008
    8. ' ]' → logprob: -5.971284866333008
    9. ']' → logprob: -6.096284866333008
    10. '    
' → logprob: -6.221284866333008

Token 879: ' minim' (ID: 23874)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.006277028471231461
    2. ' minim' → logprob: -6.131277084350586
    3. ' couvrir' → logprob: -6.131277084350586
    4. ' minimize' → logprob: -7.506277084350586
    5. 'cover' → logprob: -8.131277084350586
    6. ' min' → logprob: -8.756277084350586
    7. 'import' → logprob: -9.006277084350586
    8. 'c' → logprob: -9.256277084350586
    9. '#' → logprob: -9.381277084350586
    10. 's' → logprob: -9.881277084350586

Token 880: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.33245205879211426
    2. 'ize' → logprob: -1.8324520587921143
    3. 'izer' → logprob: -2.2074520587921143
    4. 'er' → logprob: -5.457451820373535
    5. 'um' → logprob: -5.707451820373535
    6. 'is' → logprob: -6.207451820373535
    7. 'al' → logprob: -7.082451820373535
    8. '#' → logprob: -7.832451820373535
    9. 'e' → logprob: -8.207451820373535
    10. 'ze' → logprob: -8.582451820373535

Token 881: ' la' (ID: 557)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.845609426498413
    2. 'the' → logprob: -1.845609426498413
    3. '   ' → logprob: -1.970609426498413
    4. ')' → logprob: -2.095609426498413
    5. ' la' → logprob: -2.345609426498413
    6. '```' → logprob: -3.095609426498413
    7. 'tokens' → logprob: -3.095609426498413
    8. 'import' → logprob: -3.220609426498413
    9. 'len' → logprob: -3.220609426498413
    10. ' ' → logprob: -3.595609426498413

Token 882: ' somme' (ID: 64484)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.07895632833242416
    2. 'length' → logprob: -2.953956365585327
    3. ' total' → logprob: -4.578956127166748
    4. ' longueur' → logprob: -5.078956127166748
    5. '_length' → logprob: -5.703956127166748
    6. ' cost' → logprob: -7.203956127166748
    7. ' len' → logprob: -7.453956127166748
    8. ' return' → logprob: -7.453956127166748
    9. 'len' → logprob: -8.078956604003906
    10. 'cost' → logprob: -8.203956604003906

Token 883: ' totale' (ID: 52898)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0071485526859760284
    2. ')' → logprob: -5.882148742675781
    3. '    
' → logprob: -7.007148742675781
    4. ' dp' → logprob: -7.382148742675781
    5. '    ' → logprob: -7.632148742675781
    6. '
' → logprob: -7.757148742675781
    7. 'dp' → logprob: -7.757148742675781
    8. 'import' → logprob: -8.007148742675781
    9. ',' → logprob: -8.507148742675781
    10. '.' → logprob: -8.882148742675781

Token 884: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035798266530036926
    2. ')' → logprob: -3.9107983112335205
    3. '
' → logprob: -5.910798072814941
    4. ',' → logprob: -6.285798072814941
    5. 'import' → logprob: -6.535798072814941
    6. '```' → logprob: -6.535798072814941
    7. 'def' → logprob: -6.660798072814941
    8. ']' → logprob: -7.285798072814941
    9. 'dp' → logprob: -7.285798072814941
    10. '    ' → logprob: -7.535798072814941

Token 885: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002499675378203392
    2. ')' → logprob: -7.002499580383301
    3. 'def' → logprob: -7.377499580383301
    4. 'import' → logprob: -8.3774995803833
    5. '    ' → logprob: -8.7524995803833
    6. '    
' → logprob: -9.1274995803833
    7. '
' → logprob: -9.6274995803833
    8. 'from' → logprob: -10.1274995803833
    9. '_' → logprob: -10.5024995803833
    10. ' )' → logprob: -10.5024995803833

Token 886: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014235435053706169
    2. ')' → logprob: -5.514235496520996
    3. '\n' → logprob: -5.764235496520996
    4. '\' → logprob: -6.889235496520996
    5. '    
' → logprob: -7.014235496520996
    6. '
' → logprob: -7.014235496520996
    7. '    ' → logprob: -7.139235496520996
    8. 'def' → logprob: -7.389235496520996
    9. ':' → logprob: -7.389235496520996
    10. 'n' → logprob: -7.639235496520996

Token 887: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016952134668827057
    2. 'n' → logprob: -4.641952037811279
    3. 'import' → logprob: -6.266952037811279
    4. 'dp' → logprob: -6.266952037811279
    5. ')' → logprob: -7.266952037811279
    6. ' n' → logprob: -7.766952037811279
    7. 'chars' → logprob: -7.766952037811279
    8. 'def' → logprob: -7.891952037811279
    9. '    
' → logprob: -7.891952037811279
    10. '```' → logprob: -8.141952514648438

Token 888: ' Rem' (ID: 6890)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.933575451374054
    2. '   ' → logprob: -1.8085753917694092
    3. 'dp' → logprob: -2.183575391769409
    4. 'chars' → logprob: -2.308575391769409
    5. '#' → logprob: -2.808575391769409
    6. 'counts' → logprob: -3.058575391769409
    7. 'freq' → logprob: -3.308575391769409
    8. 'all' → logprob: -3.683575391769409
    9. 'from' → logprob: -3.808575391769409
    10. 'import' → logprob: -4.433575630187988

Token 889: 'arque' (ID: 167524)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.22788406908512115
    2. 'arque' → logprob: -2.60288405418396
    3. 'def' → logprob: -2.85288405418396
    4. 'ar' → logprob: -3.35288405418396
    5. 'onter' → logprob: -3.97788405418396
    6. 'inder' → logprob: -5.727884292602539
    7. 'pl' → logprob: -5.852884292602539
    8. 'aining' → logprob: -6.227884292602539
    9. 'er' → logprob: -6.477884292602539
    10. 'ark' → logprob: -6.477884292602539

Token 890: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4730589985847473
    2. ':' → logprob: -1.8480589389801025
    3. 'def' → logprob: -2.5980589389801025
    4. '   ' → logprob: -2.8480589389801025
    5. '=' → logprob: -3.7230589389801025
    6. ' def' → logprob: -4.348059177398682
    7. ' :' → logprob: -4.598059177398682
    8. '#' → logprob: -4.973059177398682
    9. '[' → logprob: -5.223059177398682
    10. '    ' → logprob: -6.098059177398682

Token 891: ' On' (ID: 2160)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.476889729499817
    2. 'from' → logprob: -1.601889729499817
    3. '#' → logprob: -1.726889729499817
    4. 'dp' → logprob: -1.851889729499817
    5. ' dp' → logprob: -2.2268896102905273
    6. 'def' → logprob: -3.4768896102905273
    7. 'import' → logprob: -3.7268896102905273
    8. ' n' → logprob: -3.8518896102905273
    9. ' #' → logprob: -4.351889610290527
    10. ' def' → logprob: -4.476889610290527

Token 892: ' peut' (ID: 9216)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.0714484453201294
    2. 'def' → logprob: -1.1964484453201294
    3. ' #' → logprob: -2.19644832611084
    4. '#' → logprob: -2.57144832611084
    5. ' continue' → logprob: -2.94644832611084
    6. ' =' → logprob: -4.07144832611084
    7. ' need' → logprob: -4.32144832611084
    8. ' can' → logprob: -4.57144832611084
    9. 's' → logprob: -4.69644832611084
    10. ' n' → logprob: -4.94644832611084

Token 893: ' choisir' (ID: 47004)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.5735124349594116
    2. 'penser' → logprob: -1.1985124349594116
    3. ' continuer' → logprob: -2.698512554168701
    4. 'faire' → logprob: -4.198512554168701
    5. '#' → logprob: -4.573512554168701
    6. ' penser' → logprob: -5.198512554168701
    7. 'import' → logprob: -5.198512554168701
    8. 'util' → logprob: -5.573512554168701
    9. 'from' → logprob: -5.948512554168701
    10. 'consider' → logprob: -6.448512554168701

Token 894: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.2749687433242798
    2. 'def' → logprob: -1.3999687433242798
    3. ' de' → logprob: -1.8999687433242798
    4. 'import' → logprob: -2.2749686241149902
    5. 'de' → logprob: -2.7749686241149902
    6. '   ' → logprob: -3.1499686241149902
    7. 'd' → logprob: -3.3999686241149902
    8. '#' → logprob: -4.39996862411499
    9. 'une' → logprob: -4.52496862411499
    10. 'contin' → logprob: -5.02496862411499

Token 895: ' partition' (ID: 31512)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.7680980563163757
    2. 'split' → logprob: -1.3930981159210205
    3. ' continuer' → logprob: -1.8930981159210205
    4. ' split' → logprob: -3.1430981159210205
    5. 'partition' → logprob: -4.268097877502441
    6. 'sé' → logprob: -4.768097877502441
    7. ' continue' → logprob: -5.018097877502441
    8. '#' → logprob: -5.393097877502441
    9. ' sé' → logprob: -5.393097877502441
    10. 'continue' → logprob: -5.393097877502441

Token 896: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.022100480273365974
    2. 'er' → logprob: -4.022100448608398
    3. '   ' → logprob: -6.022100448608398
    4. 'ners' → logprob: -7.397100448608398
    5. '=' → logprob: -9.147100448608398
    6. ' =' → logprob: -9.272100448608398
    7. '       ' → logprob: -9.522100448608398
    8. ' ' → logprob: -9.522100448608398
    9. 'n' → logprob: -9.522100448608398
    10. 'nner' → logprob: -9.522100448608398

Token 897: ' la' (ID: 557)
  Prédit: '(chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(chars' → logprob: -0.9627115726470947
    2. '_' → logprob: -2.3377115726470947
    3. '   ' → logprob: -2.4627115726470947
    4. ',' → logprob: -2.8377115726470947
    5. ' =' → logprob: -2.8377115726470947
    6. ')' → logprob: -2.8377115726470947
    7. '_chars' → logprob: -3.2127115726470947
    8. 'def' → logprob: -3.4627115726470947
    9. ' des' → logprob: -3.4627115726470947
    10. ' (' → logprob: -4.212711334228516

Token 898: ' liste' (ID: 31719)
  Prédit: ' letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' letters' → logprob: -0.3082709312438965
    2. 'letters' → logprob: -1.4332709312438965
    3. ' digits' → logprob: -4.6832709312438965
    4. ' lettres' → logprob: -4.9332709312438965
    5. 'digits' → logprob: -5.8082709312438965
    6. 'chars' → logprob: -6.3082709312438965
    7. ' chars' → logprob: -6.6832709312438965
    8. ' characters' → logprob: -7.1832709312438965
    9. ' intervals' → logprob: -7.9332709312438965
    10. ' sorted' → logprob: -7.9332709312438965

Token 899: ' tri' (ID: 12665)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11302546411752701
    2. ')' → logprob: -2.988025426864624
    3. '_letters' → logprob: -4.363025665283203
    4. ' ' → logprob: -5.238025665283203
    5. '[' → logprob: -5.363025665283203
    6. ']' → logprob: -5.363025665283203
    7. ',' → logprob: -5.488025665283203
    8. ' )' → logprob: -5.613025665283203
    9. '_chars' → logprob: -5.738025665283203
    10. ' _' → logprob: -5.738025665283203

Token 900: 'ée' (ID: 2894)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.31634166836738586
    2. '   ' → logprob: -1.8163416385650635
    3. ' letters' → logprob: -2.5663416385650635
    4. '_letters' → logprob: -4.691341876983643
    5. 'orted' → logprob: -5.316341876983643
    6. ' ' → logprob: -5.566341876983643
    7. 'sorted' → logprob: -5.566341876983643
    8. 'ters' → logprob: -6.316341876983643
    9. '```' → logprob: -6.566341876983643
    10. ' lettres' → logprob: -7.316341876983643

Token 901: ' des' (ID: 731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2824203968048096
    2. ']' → logprob: -1.6574203968048096
    3. '_' → logprob: -2.0324203968048096
    4. '   ' → logprob: -2.4074203968048096
    5. ' ]' → logprob: -2.9074203968048096
    6. ',' → logprob: -3.1574203968048096
    7. 'letters' → logprob: -3.5324203968048096
    8. ' )' → logprob: -3.7824203968048096
    9. '_chars' → logprob: -3.7824203968048096
    10. '(chars' → logprob: -3.9074203968048096

Token 902: ' lettres' (ID: 101234)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.005275261588394642
    2. ' letters' → logprob: -5.630275249481201
    3. 'characters' → logprob: -7.005275249481201
    4. 'chars' → logprob: -7.505275249481201
    5. 'lett' → logprob: -9.00527572631836
    6. 'digits' → logprob: -11.00527572631836
    7. ' lettres' → logprob: -11.13027572631836
    8. ' characters' → logprob: -11.13027572631836
    9. 'keys' → logprob: -11.63027572631836
    10. '_letters' → logprob: -12.00527572631836

Token 903: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2458609938621521
    2. ')' → logprob: -1.9958610534667969
    3. '_' → logprob: -3.245861053466797
    4. ',' → logprob: -4.745861053466797
    5. ']' → logprob: -4.995861053466797
    6. ' )' → logprob: -5.370861053466797
    7. '[' → logprob: -5.995861053466797
    8. '  ' → logprob: -5.995861053466797
    9. ' letters' → logprob: -5.995861053466797
    10. '_letters' → logprob: -5.995861053466797

Token 904: ' sous' (ID: 14487)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.7935506105422974
    2. 'plus' → logprob: -2.293550491333008
    3. ' plusieurs' → logprob: -2.668550491333008
    4. ' segments' → logprob: -2.668550491333008
    5. 'sub' → logprob: -2.793550491333008
    6. 's' → logprob: -2.918550491333008
    7. ' sous' → logprob: -2.918550491333008
    8. 'n' → logprob: -3.793550491333008
    9. 'm' → logprob: -4.293550491333008
    10. '```' → logprob: -4.668550491333008

Token 905: ' interv' (ID: 37413)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6995762586593628
    2. 'list' → logprob: -1.5745762586593628
    3. 'sets' → logprob: -1.9495762586593628
    4. '-' → logprob: -3.1995763778686523
    5. 'lists' → logprob: -3.1995763778686523
    6. 'inter' → logprob: -3.8245763778686523
    7. 'arrays' → logprob: -4.574576377868652
    8. 'ranges' → logprob: -4.699576377868652
    9. ' interv' → logprob: -5.199576377868652
    10. 'ense' → logprob: -5.449576377868652

Token 906: 'alles' (ID: 28825)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.14887142181396484
    2. 'alles' → logprob: -2.773871421813965
    3. 'al' → logprob: -3.273871421813965
    4. '```' → logprob: -3.898871421813965
    5. 'ales' → logprob: -4.523871421813965
    6. 'alls' → logprob: -6.648871421813965
    7. 'vals' → logprob: -7.523871421813965
    8. '[' → logprob: -7.773871421813965
    9. '#' → logprob: -7.898871421813965
    10. ']' → logprob: -8.273871421813965

Token 907: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007558821700513363
    2. ')' → logprob: -5.507558822631836
    3. 'def' → logprob: -6.507558822631836
    4. ',' → logprob: -7.507558822631836
    5. '_' → logprob: -8.507558822631836
    6. '    ' → logprob: -8.632558822631836
    7. ' )' → logprob: -8.882558822631836
    8. '\t' → logprob: -9.132558822631836
    9. ':' → logprob: -9.382558822631836
    10. ']' → logprob: -9.507558822631836

Token 908: ' minim' (ID: 23874)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2613251209259033
    2. ' minim' → logprob: -1.7613251209259033
    3. ' réduire' → logprob: -4.136324882507324
    4. ' éviter' → logprob: -4.761324882507324
    5. ' optimiser' → logprob: -4.761324882507324
    6. ' trouver' → logprob: -5.636324882507324
    7. ' minimize' → logprob: -5.761324882507324
    8. 'partition' → logprob: -6.011324882507324
    9. ' min' → logprob: -6.511324882507324
    10. ' le' → logprob: -6.511324882507324

Token 909: 'iser' (ID: 7466)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.9019262790679932
    2. 'iser' → logprob: -1.4019262790679932
    3. 'er' → logprob: -1.5269262790679932
    4. 'izer' → logprob: -2.901926279067993
    5. 'e' → logprob: -3.276926279067993
    6. 'ze' → logprob: -4.651926040649414
    7. 'al' → logprob: -4.651926040649414
    8. 'a' → logprob: -5.276926040649414
    9. 'es' → logprob: -6.026926040649414
    10. '#' → logprob: -6.401926040649414

Token 910: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9291589260101318
    2. 'la' → logprob: -1.5541589260101318
    3. 'le' → logprob: -2.304158926010132
    4. 'leur' → logprob: -2.804158926010132
    5. 'l' → logprob: -3.179158926010132
    6. 'len' → logprob: -3.179158926010132
    7. '1' → logprob: -3.179158926010132
    8. 'the' → logprob: -3.929158926010132
    9. '   ' → logprob: -4.054159164428711
    10. 'au' → logprob: -4.429159164428711

Token 911: ' taille' (ID: 41644)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.8049312829971313
    2. 'long' → logprob: -1.4299312829971313
    3. 'length' → logprob: -1.9299312829971313
    4. ' longueur' → logprob: -2.429931163787842
    5. 'cout' → logprob: -3.304931163787842
    6. 'cost' → logprob: -4.179931163787842
    7. ' length' → logprob: -5.304931163787842
    8. 'def' → logprob: -5.554931163787842
    9. ' coût' → logprob: -5.554931163787842
    10. 'c' → logprob: -5.929931163787842

Token 912: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012946208007633686
    2. ')' → logprob: -5.262946128845215
    3. 'def' → logprob: -5.512946128845215
    4. ']' → logprob: -7.137946128845215
    5. ',' → logprob: -7.637946128845215
    6. ' )' → logprob: -8.137946128845215
    7. '    ' → logprob: -8.137946128845215
    8. '  ' → logprob: -8.387946128845215
    9. '```' → logprob: -8.387946128845215
    10. ' ]' → logprob: -8.887946128845215

Token 913: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1458727866411209
    2. ')' → logprob: -2.3958728313446045
    3. 'def' → logprob: -3.5208728313446045
    4. ',' → logprob: -5.520872592926025
    5. '```' → logprob: -5.895872592926025
    6. ']' → logprob: -6.270872592926025
    7. ' =' → logprob: -7.270872592926025
    8. '  ' → logprob: -7.395872592926025
    9. '_' → logprob: -7.645872592926025
    10. ':' → logprob: -7.645872592926025

Token 914: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03631629794836044
    2. 'def' → logprob: -4.036316394805908
    3. ',' → logprob: -5.536316394805908
    4. ')' → logprob: -5.661316394805908
    5. 'from' → logprob: -5.661316394805908
    6. '```' → logprob: -5.786316394805908
    7. 'import' → logprob: -6.786316394805908
    8. '.' → logprob: -7.286316394805908
    9. '
' → logprob: -8.41131591796875
    10. '#' (adapté à ' #') → logprob: -8.53631591796875

Token 915: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024101192131638527
    2. 'def' → logprob: -4.149101257324219
    3. ')' → logprob: -5.274101257324219
    4. ',' → logprob: -7.899101257324219
    5. 'dp' → logprob: -7.899101257324219
    6. '```' → logprob: -8.024101257324219
    7. '_' → logprob: -8.149101257324219
    8. ' def' → logprob: -8.399101257324219
    9. ']' → logprob: -8.899101257324219
    10. '       ' → logprob: -9.149101257324219

Token 916: ' sort' (ID: 4506)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.162946105003357
    2. 'la' → logprob: -1.662946105003357
    3. ' chaque' → logprob: -1.662946105003357
    4. 'l' → logprob: -1.787946105003357
    5. 'min' → logprob: -3.6629462242126465
    6. ' l' → logprob: -4.0379462242126465
    7. 'each' → logprob: -4.4129462242126465
    8. 'compression' → logprob: -4.6629462242126465
    9. ' each' → logprob: -5.1629462242126465
    10. 'partition' → logprob: -5.1629462242126465

Token 917: 'is' (ID: 276)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.002698951167985797
    2. '_letters' → logprob: -7.12769889831543
    3. 'ted' → logprob: -7.50269889831543
    4. '()' → logprob: -7.62769889831543
    5. 'ies' → logprob: -8.12769889831543
    6. 'ie' → logprob: -8.37769889831543
    7. 'letters' → logprob: -9.37769889831543
    8. ' letters' → logprob: -9.37769889831543
    9. 'Letters' → logprob: -11.12769889831543
    10. 'ied' → logprob: -11.25269889831543

Token 918: ' compress' (ID: 34112)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11776059120893478
    2. 'def' → logprob: -2.49276065826416
    3. '_' → logprob: -4.36776065826416
    4. ')' → logprob: -5.11776065826416
    5. ' def' → logprob: -6.36776065826416
    6. '    
' → logprob: -6.61776065826416
    7. 'ation' → logprob: -6.61776065826416
    8. ',' → logprob: -7.11776065826416
    9. ']' → logprob: -7.61776065826416
    10. ' _' → logprob: -7.86776065826416

Token 919: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8597608208656311
    2. 'ed' → logprob: -0.9847608208656311
    3. 'ion' → logprob: -2.6097607612609863
    4. 'ie' → logprob: -2.9847607612609863
    5. ']' → logprob: -3.7347607612609863
    6. ')' → logprob: -3.9847607612609863
    7. 'ition' → logprob: -4.859760761260986
    8. 't' → logprob: -4.859760761260986
    9. 'ted' → logprob: -5.859760761260986
    10. '   ' → logprob: -6.109760761260986

Token 920: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02433425560593605
    2. 'def' → logprob: -4.14933443069458
    3. ':' → logprob: -6.27433443069458
    4. ')' → logprob: -6.39933443069458
    5. ' ' → logprob: -6.77433443069458
    6. '_' → logprob: -7.39933443069458
    7. '    ' → logprob: -7.52433443069458
    8. ' def' → logprob: -7.52433443069458
    9. ',' → logprob: -8.274333953857422
    10. '    
' → logprob: -8.399333953857422

Token 921: ' Pare' (ID: 62462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0697256550192833
    2. 'def' → logprob: -3.694725751876831
    3. ')' → logprob: -3.819725751876831
    4. 'dp' → logprob: -5.069725513458252
    5. ',' → logprob: -5.444725513458252
    6. ']' → logprob: -6.694725513458252
    7. '```' → logprob: -6.694725513458252
    8. 'import' → logprob: -6.819725513458252
    9. ' dp' → logprob: -6.944725513458252
    10. '_' → logprob: -7.069725513458252

Token 922: 'il' (ID: 311)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7228923439979553
    2. 'm' → logprob: -1.2228922843933105
    3. 'r' → logprob: -2.0978922843933105
    4. 'd' → logprob: -3.4728922843933105
    5. 'def' → logprob: -3.4728922843933105
    6. '#' → logprob: -4.8478922843933105
    7. '```' → logprob: -5.3478922843933105
    8. 'tion' → logprob: -5.4728922843933105
    9. ')' → logprob: -5.8478922843933105
    10. '   ' → logprob: -6.2228922843933105

Token 923: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09591957181692123
    2. ')' → logprob: -3.220919609069824
    3. 'def' → logprob: -3.845919609069824
    4. '_' → logprob: -4.845919609069824
    5. ':' → logprob: -5.220919609069824
    6. ' ' → logprob: -5.845919609069824
    7. '    ' → logprob: -5.845919609069824
    8. ']' → logprob: -6.220919609069824
    9. ' =' → logprob: -6.470919609069824
    10. ' )' → logprob: -6.845919609069824

Token 924: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.1057716608047485
    2. 'digits' → logprob: -1.3557716608047485
    3. ' digits' → logprob: -1.4807716608047485
    4. 'les' → logprob: -1.7307716608047485
    5. 'letters' → logprob: -6.230771541595459
    6. ' letters' → logprob: -6.355771541595459
    7. ' chiffres' → logprob: -7.480771541595459
    8. ' la' → logprob: -8.105772018432617
    9. 'd' → logprob: -8.355772018432617
    10. ' lettres' → logprob: -8.355772018432617

Token 925: ' chiffres' (ID: 105565)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.02124634198844433
    2. ' digits' → logprob: -3.8962464332580566
    3. 'letters' → logprob: -8.146245956420898
    4. 'ch' → logprob: -8.396245956420898
    5. 'd' → logprob: -10.021245956420898
    6. 'def' → logprob: -10.396245956420898
    7. ' chiffres' → logprob: -10.396245956420898
    8. ' letters' → logprob: -11.146245956420898
    9. 'digit' → logprob: -11.271245956420898
    10. 'dig' → logprob: -11.396245956420898

Token 926: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06976635754108429
    2. 'letters' → logprob: -3.5697662830352783
    3. 'def' → logprob: -4.194766521453857
    4. 'from' → logprob: -4.694766521453857
    5. 'import' → logprob: -5.194766521453857
    6. '#' → logprob: -5.694766521453857
    7. 'n' → logprob: -6.194766521453857
    8. '    
' → logprob: -6.319766521453857
    9. ')' → logprob: -7.569766521453857
    10. 'all' → logprob: -8.4447660446167

Token 927: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010150644229725003
    2. 'def' → logprob: -8.001014709472656
    3. 'import' → logprob: -8.126014709472656
    4. '    
' → logprob: -8.251014709472656
    5. '
' → logprob: -10.501014709472656
    6. ')' → logprob: -11.001014709472656
    7. '    ' → logprob: -11.126014709472656
    8. '```' → logprob: -11.501014709472656
    9. 'letters' → logprob: -11.626014709472656
    10. 'from' → logprob: -12.126014709472656

Token 928: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000782230228651315
    2. 'import' → logprob: -7.875782012939453
    3. 'def' → logprob: -8.625782012939453
    4. '```' → logprob: -9.000782012939453
    5. '    
' → logprob: -10.250782012939453
    6. '
' → logprob: -10.250782012939453
    7. 'n' → logprob: -11.500782012939453
    8. ',' → logprob: -12.625782012939453
    9. 'indent' → logprob: -12.750782012939453
    10. 'from' → logprob: -13.125782012939453

Token 929: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3998185992240906
    2. '   ' → logprob: -1.1498186588287354
    3. '```' → logprob: -4.649818420410156
    4. 'n' → logprob: -6.524818420410156
    5. '
' → logprob: -7.149818420410156
    6. ' def' → logprob: -7.899818420410156
    7. '    
' → logprob: -8.399818420410156
    8. ')' → logprob: -8.899818420410156
    9. 'import' → logprob: -9.149818420410156
    10. '\' → logprob: -10.274818420410156

Token 930: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19367936253547668
    2. '   ' → logprob: -1.8186793327331543
    3. 'import' → logprob: -5.443679332733154
    4. '#' → logprob: -5.443679332733154
    5. 'from' → logprob: -5.818679332733154
    6. 'letters' → logprob: -6.693679332733154
    7. 'n' → logprob: -7.318679332733154
    8. '```' → logprob: -9.068679809570312
    9. '    
' → logprob: -9.818679809570312
    10. 'return' → logprob: -9.943679809570312

Token 931: ' doit' (ID: 21822)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.050986651331186295
    2. ' def' → logprob: -3.0509867668151855
    3. '#' → logprob: -7.1759867668151855
    4. 'from' → logprob: -7.5509867668151855
    5. '   ' → logprob: -8.300986289978027
    6. ' continue' → logprob: -8.800986289978027
    7. 'continue' → logprob: -9.050986289978027
    8. 'import' → logprob: -9.300986289978027
    9. ' #' → logprob: -9.425986289978027
    10. ' faut' → logprob: -9.800986289978027

Token 932: ' donc' (ID: 14206)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5819680094718933
    2. 'contin' → logprob: -1.581968069076538
    3. '   ' → logprob: -2.581968069076538
    4. 'partition' → logprob: -3.581968069076538
    5. ' continuer' → logprob: -3.706968069076538
    6. 'impl' → logprob: -3.831968069076538
    7. '#' → logprob: -4.081967830657959
    8. 'optim' → logprob: -4.831967830657959
    9. 'min' → logprob: -4.956967830657959
    10. 'implement' → logprob: -4.956967830657959

Token 933: ' faire' (ID: 8119)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2521653473377228
    2. 'from' → logprob: -2.0021653175354004
    3. '#' → logprob: -3.2521653175354004
    4. 'import' → logprob: -3.5021653175354004
    5. 'partition' → logprob: -5.1271653175354
    6. 'dp' → logprob: -6.0021653175354
    7. 'memo' → logprob: -6.0021653175354
    8. 'contin' → logprob: -6.7521653175354
    9. '```' → logprob: -6.7521653175354
    10. 'n' → logprob: -7.1271653175354

Token 934: ' du' (ID: 1462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32005202770233154
    2. 'from' → logprob: -1.5700520277023315
    3. '   ' → logprob: -3.320052146911621
    4. 'import' → logprob: -4.445052146911621
    5. 'for' → logprob: -5.695052146911621
    6. ' from' → logprob: -5.820052146911621
    7. '```' → logprob: -5.820052146911621
    8. 'dp' → logprob: -6.070052146911621
    9. ' def' → logprob: -6.320052146911621
    10. 'n' → logprob: -6.570052146911621

Token 935: ' DP' (ID: 51992)
  Prédit: 'dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dynamic' → logprob: -0.5740590691566467
    2. 'dp' → logprob: -1.324059009552002
    3. ' dynamic' → logprob: -1.949059009552002
    4. 'd' → logprob: -4.699059009552002
    5. '```' → logprob: -4.949059009552002
    6. ' dynamique' → logprob: -6.074059009552002
    7. 'partition' → logprob: -6.199059009552002
    8. 'program' → logprob: -6.449059009552002
    9. 'dy' → logprob: -6.574059009552002
    10. ' dp' → logprob: -6.824059009552002

Token 936: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08867103606462479
    2. 'def' → logprob: -2.7136709690093994
    3. ')' → logprob: -4.7136712074279785
    4. ']' → logprob: -6.3386712074279785
    5. '```' → logprob: -6.5886712074279785
    6. ':' → logprob: -6.7136712074279785
    7. 'letters' → logprob: -6.9636712074279785
    8. '#' → logprob: -7.5886712074279785
    9. ' def' → logprob: -7.7136712074279785
    10. '
' → logprob: -7.8386712074279785

Token 937: ' partition' (ID: 31512)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.2538149356842041
    2. 'les' → logprob: -2.878814935684204
    3. 'part' → logprob: -3.253814935684204
    4. ' partition' → logprob: -3.378814935684204
    5. 'min' → logprob: -4.003814697265625
    6. 'tr' → logprob: -4.378814697265625
    7. 'la' → logprob: -4.753814697265625
    8. ' chaque' → logprob: -4.878814697265625
    9. 'i' → logprob: -5.128814697265625
    10. 'le' → logprob: -5.378814697265625

Token 938: 'ner' (ID: 1247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0320813655853271
    2. '_letters' → logprob: -1.9070813655853271
    3. '_' → logprob: -2.282081365585327
    4. '   ' → logprob: -2.532081365585327
    5. ']' → logprob: -2.532081365585327
    6. ')' → logprob: -2.907081365585327
    7. 'letters' → logprob: -3.032081365585327
    8. '_chars' → logprob: -4.157081604003906
    9. '[' → logprob: -4.282081604003906
    10. 'ation' → logprob: -4.407081604003906

Token 939: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.128135323524475
    2. 'def' → logprob: -1.128135323524475
    3. ')' → logprob: -2.5031352043151855
    4. '_letters' → logprob: -2.6281352043151855
    5. ']' → logprob: -2.7531352043151855
    6. 'letters' → logprob: -3.3781352043151855
    7. '```' → logprob: -3.7531352043151855
    8. ':' → logprob: -4.7531352043151855
    9. ' letters' → logprob: -5.0031352043151855
    10. ',' → logprob: -5.0031352043151855

Token 940: ' liste' (ID: 31719)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -1.991539716720581
    2. ' list' → logprob: -2.116539716720581
    3. ' letters' → logprob: -2.241539716720581
    4. '_' → logprob: -2.491539716720581
    5. 'sorted' → logprob: -2.491539716720581
    6. 'lists' → logprob: -2.616539716720581
    7. 'list' → logprob: -2.741539716720581
    8. 'liste' → logprob: -2.866539716720581
    9. ' liste' → logprob: -2.991539716720581
    10. 's' → logprob: -2.991539716720581

Token 941: ' de' (ID: 334)
  Prédit: '_letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_letters' → logprob: -0.4293244481086731
    2. '_' → logprob: -1.6793243885040283
    3. ']' → logprob: -3.0543243885040283
    4. 'def' → logprob: -3.5543243885040283
    5. 'letters' → logprob: -3.6793243885040283
    6. ')' → logprob: -3.6793243885040283
    7. ',' → logprob: -4.679324626922607
    8. '   ' → logprob: -5.554324626922607
    9. '_chars' → logprob: -5.929324626922607
    10. ' letters' → logprob: -6.054324626922607

Token 942: ' lettres' (ID: 101234)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.8686056733131409
    2. 'car' → logprob: -1.618605613708496
    3. 'lett' → logprob: -1.868605613708496
    4. 'letters' → logprob: -2.493605613708496
    5. 'tokens' → logprob: -3.368605613708496
    6. 'characters' → logprob: -3.368605613708496
    7. ' caractères' → logprob: -3.743605613708496
    8. 'sorted' → logprob: -4.493605613708496
    9. ' lettres' → logprob: -4.493605613708496
    10. 'l' → logprob: -4.993605613708496

Token 943: ' et' (ID: 859)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7865715622901917
    2. 'def' → logprob: -2.161571502685547
    3. '_chars' → logprob: -2.286571502685547
    4. '_letters' → logprob: -2.411571502685547
    5. '_' → logprob: -2.536571502685547
    6. '   ' → logprob: -3.036571502685547
    7. ')' → logprob: -3.411571502685547
    8. 's' → logprob: -3.661571502685547
    9. ':' → logprob: -3.911571502685547
    10. '```' → logprob: -5.661571502685547

Token 944: ' la' (ID: 557)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.6724739074707031
    2. 'ch' → logprob: -0.9224739074707031
    3. ' chiffres' → logprob: -3.297473907470703
    4. 'de' → logprob: -3.422473907470703
    5. ' digits' → logprob: -4.047473907470703
    6. ' de' → logprob: -6.047473907470703
    7. 'des' → logprob: -6.922473907470703
    8. 'les' → logprob: -7.797473907470703
    9. ' of' → logprob: -8.797473907470703
    10. 'd' → logprob: -8.797473907470703

Token 945: ' liste' (ID: 31719)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.26339951157569885
    2. ' digits' → logprob: -2.263399600982666
    3. 'ch' → logprob: -2.888399600982666
    4. 'def' → logprob: -3.888399600982666
    5. ' chiffres' → logprob: -4.638399600982666
    6. 's' → logprob: -4.888399600982666
    7. '_digits' → logprob: -5.138399600982666
    8. 'digit' → logprob: -5.388399600982666
    9. '```' → logprob: -5.638399600982666
    10. '   ' → logprob: -5.763399600982666

Token 946: ' de' (ID: 334)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6748758554458618
    2. 'de' → logprob: -2.4248757362365723
    3. 'of' → logprob: -2.7998757362365723
    4. '   ' → logprob: -2.7998757362365723
    5. ']' → logprob: -3.1748757362365723
    6. ')' → logprob: -3.1748757362365723
    7. 'def' → logprob: -3.4248757362365723
    8. 'chars' → logprob: -3.7998757362365723
    9. 'letters' → logprob: -3.9248757362365723
    10. ',' → logprob: -3.9248757362365723

Token 947: ' chiffres' (ID: 105565)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.041589200496673584
    2. ' digits' → logprob: -3.4165892601013184
    3. 'd' → logprob: -5.916589260101318
    4. 'ch' → logprob: -6.166589260101318
    5. ' chiffres' → logprob: -6.416589260101318
    6. 'chars' → logprob: -6.666589260101318
    7. ' caractères' → logprob: -10.66658878326416
    8. 'letters' → logprob: -10.66658878326416
    9. 'numbers' → logprob: -10.79158878326416
    10. '```' → logprob: -10.91658878326416

Token 948: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4643455743789673
    2. 'def' → logprob: -1.3393455743789673
    3. ':' → logprob: -3.0893454551696777
    4. '```' → logprob: -3.3393454551696777
    5. ')' → logprob: -4.964345455169678
    6. 'letters' → logprob: -5.339345455169678
    7. ']' → logprob: -5.589345455169678
    8. ',' → logprob: -5.589345455169678
    9. '`' → logprob: -6.839345455169678
    10. ' ' → logprob: -6.839345455169678

Token 949: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5219092965126038
    2. 'def' → logprob: -1.021909236907959
    3. '```' → logprob: -4.146909236907959
    4. ')' → logprob: -4.271909236907959
    5. ':' → logprob: -4.771909236907959
    6. ' def' → logprob: -5.896909236907959
    7. ']' → logprob: -6.021909236907959
    8. '):' → logprob: -6.646909236907959
    9. 'letters' → logprob: -7.896909236907959
    10. ',' → logprob: -8.146909713745117

Token 950: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12108717113733292
    2. 'def' → logprob: -2.246087074279785
    3. '```' → logprob: -5.621087074279785
    4. '
' → logprob: -6.746087074279785
    5. ' def' → logprob: -6.871087074279785
    6. ':' → logprob: -6.996087074279785
    7. '    
' → logprob: -7.371087074279785
    8. '\' → logprob: -8.496087074279785
    9. 'letters' → logprob: -9.121087074279785
    10. '    ' → logprob: -9.621087074279785

Token 951: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23032861948013306
    2. 'def' → logprob: -2.2303285598754883
    3. '```' → logprob: -2.4803285598754883
    4. '
' → logprob: -5.230328559875488
    5. 'import' → logprob: -5.355328559875488
    6. 'n' → logprob: -6.230328559875488
    7. 'letters' → logprob: -6.855328559875488
    8. '    
' → logprob: -7.230328559875488
    9. '``' → logprob: -8.605328559875488
    10. ' def' → logprob: -8.980328559875488

Token 952: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12033333629369736
    2. '   ' → logprob: -2.245333433151245
    3. 'letters' → logprob: -5.620333194732666
    4. 'n' → logprob: -6.620333194732666
    5. '
' → logprob: -7.245333194732666
    6. 'from' → logprob: -7.495333194732666
    7. 'import' → logprob: -7.495333194732666
    8. 'chars' → logprob: -8.495333671569824
    9. '#' → logprob: -8.620333671569824
    10. ' def' → logprob: -9.120333671569824

Token 953: ' réc' (ID: 36254)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10995205491781235
    2. ' def' → logprob: -2.359951972961426
    3. '
' → logprob: -4.734951972961426
    4. ' dp' → logprob: -8.359951972961426
    5. 'partition' → logprob: -8.484951972961426
    6. ' partition' → logprob: -8.484951972961426
    7. 'dp' → logprob: -9.484951972961426
    8. '   ' → logprob: -9.484951972961426
    9. '    
' → logprob: -10.609951972961426
    10. ' min' → logprob: -11.484951972961426

Token 954: 'ursive' (ID: 30543)
  Prédit: 'ursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursive' → logprob: -0.10272791981697083
    2. 'def' → logprob: -2.3527278900146484
    3. 'urs' → logprob: -6.852727890014648
    4. '   ' → logprob: -6.852727890014648
    5. 'ursion' → logprob: -8.352727890014648
    6. 'ur' → logprob: -9.602727890014648
    7. '
' → logprob: -10.227727890014648
    8. 'usive' → logprob: -11.477727890014648
    9. 'urse' → logprob: -11.602727890014648
    10. 'usr' → logprob: -11.602727890014648

Token 955: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011470993980765343
    2. '   ' → logprob: -4.636470794677734
    3. '
' → logprob: -6.886470794677734
    4. ' def' → logprob: -7.511470794677734
    5. '    
' → logprob: -10.761470794677734
    6. '(def' → logprob: -11.011470794677734
    7. '```' → logprob: -11.261470794677734
    8. '_letters' → logprob: -11.511470794677734
    9. ':' → logprob: -11.886470794677734
    10. '(' → logprob: -11.886470794677734

Token 956: ' calcul' (ID: 7559)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8475098013877869
    2. 'partition' → logprob: -1.3475098609924316
    3. 'dp' → logprob: -1.7225098609924316
    4. ' partition' → logprob: -2.9725098609924316
    5. ' def' → logprob: -3.2225098609924316
    6. ' dp' → logprob: -3.3475098609924316
    7. ' la' → logprob: -5.972509860992432
    8. 'min' → logprob: -6.597509860992432
    9. 'l' → logprob: -7.472509860992432
    10. 'memo' → logprob: -7.597509860992432

Token 957: 'er' (ID: 259)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06487060338258743
    2. 'er' → logprob: -2.939870595932007
    3. 'ate' → logprob: -4.689870834350586
    4. ' def' → logprob: -8.564870834350586
    5. '   ' → logprob: -9.689870834350586
    6. 'e' → logprob: -10.064870834350586
    7. 'al' → logprob: -10.189870834350586
    8. '
' → logprob: -10.314870834350586
    9. 'on' → logprob: -10.564870834350586
    10. 'ter' → logprob: -10.564870834350586

Token 958: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0985003411769867
    2. ' def' → logprob: -2.4735002517700195
    3. 'dp' → logprob: -5.5985002517700195
    4. ' dp' → logprob: -5.7235002517700195
    5. '   ' → logprob: -6.5985002517700195
    6. 'partition' → logprob: -7.7235002517700195
    7. ' partition' → logprob: -8.84850025177002
    8. 'lambda' → logprob: -9.34850025177002
    9. ' la' → logprob: -9.47350025177002
    10. '```' → logprob: -9.72350025177002

Token 959: ' longueur' (ID: 104613)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005596695467829704
    2. 'from' → logprob: -5.63059663772583
    3. 'dp' → logprob: -6.88059663772583
    4. ' def' → logprob: -7.63059663772583
    5. 'len' → logprob: -8.130597114562988
    6. 'import' → logprob: -10.130597114562988
    7. '```' → logprob: -10.130597114562988
    8. 'length' → logprob: -10.380597114562988
    9. 'long' → logprob: -10.880597114562988
    10. 'min' → logprob: -11.005597114562988

Token 960: ' minimale' (ID: 143217)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005265804938971996
    2. ' def' → logprob: -7.750526428222656
    3. '   ' → logprob: -9.500526428222656
    4. '
' → logprob: -11.125526428222656
    5. 'from' → logprob: -13.625526428222656
    6. '```' → logprob: -13.750526428222656
    7. '_letters' → logprob: -14.000526428222656
    8. '_def' → logprob: -14.250526428222656
    9. 'de' → logprob: -14.750526428222656
    10. 'dp' → logprob: -14.875526428222656

Token 961: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005682834889739752
    2. '   ' → logprob: -7.875568389892578
    3. '
' → logprob: -8.875568389892578
    4. ' def' → logprob: -10.250568389892578
    5. '    
' → logprob: -13.125568389892578
    6. '```' → logprob: -13.125568389892578
    7. 'letters' → logprob: -13.750568389892578
    8. 'dp' → logprob: -13.750568389892578
    9. '_letters' → logprob: -13.750568389892578
    10. '(def' → logprob: -14.250568389892578

Token 962: ' compression' (ID: 41811)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partition' → logprob: -1.0850428342819214
    2. 'compressed' → logprob: -1.2100428342819214
    3. 'dp' → logprob: -2.335042953491211
    4. 'l' → logprob: -2.460042953491211
    5. 'def' → logprob: -2.835042953491211
    6. 'letters' → logprob: -3.210042953491211
    7. 'interval' → logprob: -3.460042953491211
    8. 'la' → logprob: -4.460042953491211
    9. 'part' → logprob: -4.585042953491211
    10. 'compression' → logprob: -5.210042953491211

Token 963: ' sur' (ID: 1512)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016746070235967636
    2. '   ' → logprob: -4.3917460441589355
    3. ' def' → logprob: -6.1417460441589355
    4. '```' → logprob: -7.0167460441589355
    5. '(' → logprob: -7.7667460441589355
    6. '
' → logprob: -8.891746520996094
    7. '(s' → logprob: -8.891746520996094
    8. '(def' → logprob: -9.266746520996094
    9. '_def' → logprob: -9.516746520996094
    10. ':' → logprob: -10.016746520996094

Token 964: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5668157935142517
    2. ' les' → logprob: -2.0668158531188965
    3. 'les' → logprob: -2.9418158531188965
    4. 'chars' → logprob: -3.0668158531188965
    5. ' letters' → logprob: -3.1918158531188965
    6. 'la' → logprob: -3.5668158531188965
    7. ' chars' → logprob: -3.5668158531188965
    8. '   ' → logprob: -3.8168158531188965
    9. 'letters' → logprob: -3.8168158531188965
    10. ' une' → logprob: -3.9418158531188965

Token 965: ' sous' (ID: 14487)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.8928529024124146
    2. 'subset' → logprob: -1.5178529024124146
    3. 'list' → logprob: -1.8928529024124146
    4. 'sub' → logprob: -3.017852783203125
    5. 'chars' → logprob: -3.142852783203125
    6. 's' → logprob: -3.642852783203125
    7. 'liste' → logprob: -3.767852783203125
    8. ' subset' → logprob: -4.017852783203125
    9. ' segment' → logprob: -4.142852783203125
    10. 'lst' → logprob: -4.392852783203125

Token 966: 'ensemble' (ID: 37301)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5855940580368042
    2. 'array' → logprob: -1.4605940580368042
    3. '   ' → logprob: -2.5855941772460938
    4. 'def' → logprob: -3.3355941772460938
    5. 'interval' → logprob: -3.3355941772460938
    6. 'string' → logprob: -4.085594177246094
    7. 'sequence' → logprob: -4.335594177246094
    8. 'liste' → logprob: -4.460594177246094
    9. '_list' → logprob: -4.710594177246094
    10. 'problem' → logprob: -5.585594177246094

Token 967: ' ord' (ID: 6608)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004425490275025368
    2. '   ' → logprob: -5.504425525665283
    3. '_letters' → logprob: -9.004425048828125
    4. '(chars' → logprob: -9.379425048828125
    5. '
' → logprob: -10.379425048828125
    6. '```' → logprob: -10.879425048828125
    7. '(' → logprob: -11.254425048828125
    8. 'letters' → logprob: -11.379425048828125
    9. '_chars' → logprob: -11.504425048828125
    10. 'chars' → logprob: -11.504425048828125

Token 968: 'onné' (ID: 84630)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6790171265602112
    2. 'def' → logprob: -1.5540170669555664
    3. 'sorted' → logprob: -2.1790170669555664
    4. 'iné' → logprob: -3.4290170669555664
    5. 'orted' → logprob: -3.9290170669555664
    6. 'ed' → logprob: -4.304017066955566
    7. '_sorted' → logprob: -4.429017066955566
    8. 'ité' → logprob: -4.679017066955566
    9. '```' → logprob: -4.679017066955566
    10. 'ré' → logprob: -4.929017066955566

Token 969: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010402000043541193
    2. '
' → logprob: -9.875103950500488
    3. '   ' → logprob: -10.500103950500488
    4. ' def' → logprob: -11.500103950500488
    5. '```' → logprob: -12.125103950500488
    6. '_chars' → logprob: -13.125103950500488
    7. '_letters' → logprob: -13.125103950500488
    8. 'chars' → logprob: -13.250103950500488
    9. 'de' → logprob: -14.125103950500488
    10. '(chars' → logprob: -14.375103950500488

Token 970: ' caractères' (ID: 183106)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.014821222983300686
    2. ' chars' → logprob: -4.7648210525512695
    3. 'letters' → logprob: -6.1398210525512695
    4. 'car' → logprob: -6.2648210525512695
    5. 'characters' → logprob: -6.7648210525512695
    6. ' caractères' → logprob: -8.76482105255127
    7. 'lett' → logprob: -9.01482105255127
    8. ' letters' → logprob: -9.26482105255127
    9. ' caracteres' → logprob: -9.51482105255127
    10. '```' → logprob: -9.76482105255127

Token 971: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006920207757502794
    2. '   ' → logprob: -5.506920337677002
    3. '
' → logprob: -6.756920337677002
    4. '(chars' → logprob: -6.756920337677002
    5. '(s' → logprob: -8.381919860839844
    6. ' def' → logprob: -9.131919860839844
    7. '```' → logprob: -9.631919860839844
    8. 'chars' → logprob: -10.256919860839844
    9. '    
' → logprob: -11.506919860839844
    10. '_chars' → logprob: -11.631919860839844

Token 972: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3886345326900482
    2. 'def' → logprob: -1.1386345624923706
    3. '
' → logprob: -6.51363468170166
    4. ' def' → logprob: -8.76363468170166
    5. '    
' → logprob: -9.38863468170166
    6. '```' → logprob: -11.38863468170166
    7. '    ' → logprob: -12.26363468170166
    8. ':' → logprob: -12.76363468170166
    9. '(def' → logprob: -12.76363468170166
    10. '(' → logprob: -12.88863468170166

Token 973: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0021384824067354202
    2. '   ' → logprob: -6.252138614654541
    3. '
' → logprob: -8.877138137817383
    4. ' def' → logprob: -9.627138137817383
    5. '```' → logprob: -13.127138137817383
    6. '	def' → logprob: -13.502138137817383
    7. '    
' → logprob: -14.627138137817383
    8. 'import' → logprob: -16.252138137817383
    9. ':def' → logprob: -16.377138137817383
    10. '`' → logprob: -16.377138137817383

Token 974: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3148273229598999
    2. 'min' → logprob: -1.3148273229599
    3. ' dp' → logprob: -7.0648274421691895
    4. ' min' → logprob: -7.9398274421691895
    5. 'compressed' → logprob: -8.439826965332031
    6. 'dfs' → logprob: -9.939826965332031
    7. 'compress' → logprob: -10.064826965332031
    8. 'def' → logprob: -10.939826965332031
    9. 'minimal' → logprob: -10.939826965332031
    10. 'best' → logprob: -12.814826965332031

Token 975: '_min' (ID: 15950)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.11300875246524811
    2. '(chars' → logprob: -3.113008737564087
    3. '(start' → logprob: -3.613008737564087
    4. '(idx' → logprob: -3.988008737564087
    5. '(length' → logprob: -5.613008975982666
    6. '(pos' → logprob: -5.613008975982666
    7. '(' → logprob: -5.613008975982666
    8. '(index' → logprob: -6.238008975982666
    9. '(l' → logprob: -6.738008975982666
    10. 'def' → logprob: -7.738008975982666

Token 976: '_length' (ID: 11514)
  Prédit: '_com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.053244493901729584
    2. '_length' → logprob: -3.1782445907592773
    3. '_partition' → logprob: -5.178244590759277
    4. '_cost' → logprob: -7.053244590759277
    5. '   ' → logprob: -7.303244590759277
    6. 'compressed' → logprob: -7.553244590759277
    7. '_part' → logprob: -7.928244590759277
    8. 'def' → logprob: -7.928244590759277
    9. '_interval' → logprob: -8.678244590759277
    10. '_' → logprob: -8.678244590759277

Token 977: '(sorted' (ID: 92488)
  Prédit: '(chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(chars' → logprob: -0.007159681059420109
    2. '(i' → logprob: -5.13215970993042
    3. '(' → logprob: -7.38215970993042
    4. '(lst' → logprob: -8.507159233093262
    5. '(char' → logprob: -9.007159233093262
    6. '(idx' → logprob: -9.507159233093262
    7. '(start' → logprob: -9.757159233093262
    8. '(l' → logprob: -10.132159233093262
    9. '(s' → logprob: -10.507159233093262
    10. '(index' → logprob: -11.007159233093262

Token 978: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.04754837229847908
    2. 'chars' → logprob: -4.047548294067383
    3. '(chars' → logprob: -4.047548294067383
    4. '_letters' → logprob: -5.547548294067383
    5. '_list' → logprob: -6.672548294067383
    6. ')' → logprob: -6.672548294067383
    7. '_' → logprob: -6.797548294067383
    8. ',' → logprob: -7.672548294067383
    9. '_counts' → logprob: -7.797548294067383
    10. '_char' → logprob: -7.922548294067383

Token 979: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002099773846566677
    2. ' ,' → logprob: -9.00020980834961
    3. ',index' → logprob: -9.87520980834961
    4. '   ' → logprob: -11.37520980834961
    5. ',i' → logprob: -11.50020980834961
    6. ',start' → logprob: -12.00020980834961
    7. '):' → logprob: -13.37520980834961
    8. 'index' → logprob: -13.87520980834961
    9. '_,' → logprob: -14.62520980834961
    10. ',n' → logprob: -14.75020980834961

Token 980: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010743238963186741
    2. 'def' → logprob: -5.260743141174316
    3. ':' → logprob: -5.510743141174316
    4. '```' → logprob: -7.635743141174316
    5. '       ' → logprob: -7.885743141174316
    6. ' def' → logprob: -8.760743141174316
    7. '    ' → logprob: -9.135743141174316
    8. '):' → logprob: -9.635743141174316
    9. '    
' → logprob: -9.760743141174316
    10. ':
' → logprob: -10.135743141174316

Token 981: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.394393652677536
    2. ' n' → logprob: -1.3943936824798584
    3. 'n' (adapté à ' n') → logprob: -3.1443936824798584
    4. ' length' → logprob: -4.019393444061279
    5. ' if' → logprob: -5.394393444061279
    6. '       ' → logprob: -5.394393444061279
    7. 'length' → logprob: -5.644393444061279
    8. 'dp' → logprob: -6.269393444061279
    9. ' dp' → logprob: -7.019393444061279
    10. '    ' → logprob: -7.519393444061279

Token 982: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2522374093532562
    2. '=' → logprob: -1.5022374391555786
    3. '   ' → logprob: -8.627237319946289
    4. ')' → logprob: -9.377237319946289
    5. '=len' → logprob: -11.002237319946289
    6. '       ' → logprob: -11.502237319946289
    7. '=int' → logprob: -12.002237319946289
    8. 'def' → logprob: -12.377237319946289
    9. ' ' → logprob: -13.502237319946289
    10. '  ' → logprob: -13.752237319946289

Token 983: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.018150877207517624
    2. ' len' → logprob: -4.018150806427002
    3. '(len' → logprob: -14.39315128326416
    4. '[len' → logprob: -15.51815128326416
    5. '   ' → logprob: -16.018150329589844
    6. '=len' → logprob: -17.768150329589844
    7. '0' → logprob: -17.893150329589844
    8. '	len' → logprob: -18.643150329589844
    9. ',len' → logprob: -19.768150329589844
    10. ' ' → logprob: -19.893150329589844

Token 984: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.00017767686222214252
    2. 'sorted' → logprob: -8.875177383422852
    3. '(' → logprob: -10.250177383422852
    4. '(s' → logprob: -13.250177383422852
    5. '(
' → logprob: -15.000177383422852
    6. ' sorted' → logprob: -15.750177383422852
    7. '_sorted' → logprob: -16.37517738342285
    8. 'Sorted' → logprob: -16.87517738342285
    9. '(sort' → logprob: -17.37517738342285
    10. '(chars' → logprob: -17.87517738342285

Token 985: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -5.466968650580384e-05
    2. '(sorted' → logprob: -10.000054359436035
    3. '(chars' → logprob: -12.250054359436035
    4. '_sorted' → logprob: -13.125054359436035
    5. '(_' → logprob: -13.625054359436035
    6. '(' → logprob: -15.250054359436035
    7. 'chars' → logprob: -15.375054359436035
    8. '_' → logprob: -15.500054359436035
    9. '(s' → logprob: -15.625054359436035
    10. '_)' → logprob: -16.25005531311035

Token 986: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014241776429116726
    2. ')
' → logprob: -4.264241695404053
    3. '   ' → logprob: -10.014242172241211
    4. '       ' → logprob: -10.514242172241211
    5. ')
' → logprob: -13.014242172241211
    6. '):
' → logprob: -14.014242172241211
    7. '
' → logprob: -14.389242172241211
    8. ' )' → logprob: -14.514242172241211
    9. '```' → logprob: -14.639242172241211
    10. ')`' → logprob: -14.764242172241211

Token 987: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17664721608161926
    2. '
' → logprob: -3.301647186279297
    3. '       ' → logprob: -3.426647186279297
    4. ':' → logprob: -3.676647186279297
    5. '    
' → logprob: -3.801647186279297
    6. '```' → logprob: -4.051647186279297
    7. '\t' → logprob: -5.051647186279297
    8. 'def' → logprob: -5.426647186279297
    9. '    ' → logprob: -5.801647186279297
    10. '        
' → logprob: -6.301647186279297

Token 988: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.819220244884491
    2. '       ' → logprob: -0.819220244884491
    3. 'dp' → logprob: -2.1942203044891357
    4. ' dp' → logprob: -5.069220066070557
    5. 'def' → logprob: -7.694220066070557
    6. '```' → logprob: -9.069220542907715
    7. '	dp' → logprob: -9.194220542907715
    8. '        
' → logprob: -11.694220542907715
    9. ' def' → logprob: -11.944220542907715
    10. '   ' → logprob: -12.569220542907715

Token 989: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00021450345229823142
    2. 'memo' → logprob: -9.250214576721191
    3. 'from' → logprob: -10.125214576721191
    4. 'import' → logprob: -10.375214576721191
    5. '   ' → logprob: -10.625214576721191
    6. ' dp' → logprob: -11.625214576721191
    7. 'inf' → logprob: -11.875214576721191
    8. 'INF' → logprob: -12.500214576721191
    9. 'cost' → logprob: -13.375214576721191
    10. 'cache' → logprob: -13.875214576721191

Token 990: ' mém' (ID: 136981)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.049995727837085724
    2. 'memo' → logprob: -3.0499956607818604
    3. 'from' → logprob: -7.2999958992004395
    4. '   ' → logprob: -7.7999958992004395
    5. 'import' → logprob: -9.174995422363281
    6. 'cache' → logprob: -9.424995422363281
    7. 'INF' → logprob: -9.549995422363281
    8. 'inf' → logprob: -10.299995422363281
    9. 'cost' → logprob: -11.424995422363281
    10. 'mem' → logprob: -11.799995422363281

Token 991: 'or' (ID: 267)
  Prédit: 'oire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oire' → logprob: -0.3277988135814667
    2. 'o' → logprob: -1.452798843383789
    3. ' =' → logprob: -4.202798843383789
    4. 'or' → logprob: -4.327798843383789
    5. 'oir' → logprob: -4.827798843383789
    6. '=' → logprob: -5.577798843383789
    7. 'ory' → logprob: -6.702798843383789
    8. '   ' → logprob: -7.077798843383789
    9. 'oi' → logprob: -7.077798843383789
    10. '```' → logprob: -7.452798843383789

Token 992: 'iser' (ID: 7466)
  Prédit: 'oire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oire' → logprob: -0.03193141520023346
    2. 'o' → logprob: -4.156931400299072
    3. 'ise' → logprob: -5.531931400299072
    4. 'ization' → logprob: -5.531931400299072
    5. 'isation' → logprob: -6.281931400299072
    6. 'oir' → logprob: -6.656931400299072
    7. 'ize' → logprob: -6.656931400299072
    8. '```' → logprob: -7.156931400299072
    9. '=' → logprob: -7.656931400299072
    10. 'orie' → logprob: -8.40693187713623

Token 993: ' par' (ID: 686)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6498655080795288
    2. 'memo' → logprob: -0.8998655080795288
    3. ' memo' → logprob: -3.3998656272888184
    4. ' dp' → logprob: -3.7748656272888184
    5. 'cache' → logprob: -5.149865627288818
    6. '   ' → logprob: -5.274865627288818
    7. ' =' → logprob: -5.774865627288818
    8. 'mem' → logprob: -7.524865627288818
    9. '       ' → logprob: -9.14986515045166
    10. '=' → logprob: -9.14986515045166

Token 994: ' indice' (ID: 90848)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.6118839979171753
    2. 'i' → logprob: -1.7368839979171753
    3. 'l' → logprob: -1.7368839979171753
    4. 'index' → logprob: -1.8618839979171753
    5. 'memo' → logprob: -1.8618839979171753
    6. 'cache' → logprob: -3.361884117126465
    7. 'idx' → logprob: -3.611884117126465
    8. '@' → logprob: -4.861884117126465
    9. 'start' → logprob: -4.861884117126465
    10. '[i' → logprob: -5.111884117126465

Token 995: ' l' (ID: 305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5025900602340698
    2. ' =' → logprob: -1.2525900602340698
    3. ' dp' → logprob: -3.3775901794433594
    4. '=' → logprob: -3.3775901794433594
    5. 'memo' → logprob: -3.7525901794433594
    6. ' memo' → logprob: -5.752590179443359
    7. '   ' → logprob: -5.752590179443359
    8. 'cache' → logprob: -6.127590179443359
    9. '_dp' → logprob: -6.377590179443359
    10. '{' → logprob: -6.752590179443359

Token 996: ''' (ID: 6)
  Prédit: 'ength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ength' → logprob: -0.2723868787288666
    2. '=' → logprob: -2.2723867893218994
    3. '=[]
' → logprob: -4.0223870277404785
    4. 'ist' → logprob: -4.1473870277404785
    5. 'a' → logprob: -4.2723870277404785
    6. ' =' → logprob: -4.6473870277404785
    7. '=[]' → logprob: -4.6473870277404785
    8. 'ast' → logprob: -4.6473870277404785
    9. 'dp' → logprob: -5.5223870277404785
    10. '=[' → logprob: -5.5223870277404785

Token 997: 'opt' (ID: 3374)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.034265633672475815
    2. 'memo' → logprob: -4.409265518188477
    3. 'length' → logprob: -5.284265518188477
    4. '[' → logprob: -5.284265518188477
    5. 'cache' → logprob: -6.034265518188477
    6. ' dp' → logprob: -6.159265518188477
    7. '[i' → logprob: -7.159265518188477
    8. '@' → logprob: -7.284265518188477
    9. 'pos' → logprob: -7.534265518188477
    10. 'i' → logprob: -7.659265518188477

Token 998: 'imum' (ID: 4556)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4029228389263153
    2. 'im' → logprob: -1.6529228687286377
    3. 'imum' → logprob: -3.1529228687286377
    4. 'imized' → logprob: -3.1529228687286377
    5. 'imal' → logprob: -4.277922630310059
    6. 'imiz' → logprob: -4.402922630310059
    7. '```' → logprob: -4.652922630310059
    8. 'ion' → logprob: -5.027922630310059
    9. 'ions' → logprob: -5.777922630310059
    10. 'imize' → logprob: -6.402922630310059

Token 999: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5172739028930664
    2. 'dp' → logprob: -1.0172739028930664
    3. '=' → logprob: -3.8922739028930664
    4. 'memo' → logprob: -4.767273902893066
    5. '   ' → logprob: -5.142273902893066
    6. ' dp' → logprob: -5.267273902893066
    7. '       ' → logprob: -6.892273902893066
    8. ' memo' → logprob: -8.017273902893066
    9. '_dp' → logprob: -8.767273902893066
    10. '={}' → logprob: -8.767273902893066

Token 1000: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0461379289627075
    2. 'dp' → logprob: -1.0461379289627075
    3. '   ' → logprob: -1.6711379289627075
    4. '       ' → logprob: -2.546137809753418
    5. '=' → logprob: -4.046137809753418
    6. ' dp' → logprob: -4.921137809753418
    7. '```' → logprob: -6.296137809753418
    8. '_dp' → logprob: -6.421137809753418
    9. '_' → logprob: -6.546137809753418
    10. ',' → logprob: -8.421137809753418

Token 1001: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.09780395776033401
    2. 'dp' → logprob: -2.597804069519043
    3. ' memo' → logprob: -4.097804069519043
    4. '   ' → logprob: -6.972804069519043
    5. ' dp' → logprob: -7.097804069519043
    6. 'cache' → logprob: -8.097804069519043
    7. 'mem' → logprob: -10.472804069519043
    8. 'from' → logprob: -10.722804069519043
    9. '       ' → logprob: -12.472804069519043
    10. ' cache' → logprob: -13.472804069519043

Token 1002: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889628410339355
    2. ' =' → logprob: -2.5788962841033936
    3. '={}' → logprob: -12.203896522521973
    4. '   ' → logprob: -14.453896522521973
    5. '={' → logprob: -14.578896522521973
    6. '={}
' → logprob: -15.453896522521973
    7. '=[]' → logprob: -16.078895568847656
    8. '       ' → logprob: -16.328895568847656
    9. '=[' → logprob: -16.953895568847656
    10. '=
' → logprob: -17.328895568847656

Token 1003: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -9.949026571121067e-05
    2. '{' → logprob: -10.000099182128906
    3. '[-' → logprob: -10.750099182128906
    4. '[' → logprob: -11.000099182128906
    5. '{}
' → logprob: -11.500099182128906
    6. ' {}' → logprob: -12.750099182128906
    7. '{}

' → logprob: -13.875099182128906
    8. '[n' → logprob: -14.000099182128906
    9. '{})' → logprob: -14.750099182128906
    10. 'dict' → logprob: -15.250099182128906

Token 1004: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3730611503124237
    2. '   ' → logprob: -1.623061180114746
    3. '\t' → logprob: -3.623061180114746
    4. '    
' → logprob: -3.748061180114746
    5. '        
' → logprob: -4.498061180114746
    6. '	' → logprob: -4.623061180114746
    7. '    ' → logprob: -4.748061180114746
    8. ' 
' → logprob: -5.373061180114746
    9. '	   ' → logprob: -5.498061180114746
    10. '```' → logprob: -5.623061180114746

Token 1005: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017920348793268204
    2. '   ' → logprob: -4.39292049407959
    3. '        
' → logprob: -6.26792049407959
    4. '        ' → logprob: -6.64292049407959
    5. '    ' → logprob: -7.26792049407959
    6. '	' → logprob: -7.64292049407959
    7. '```' → logprob: -8.51792049407959
    8. '    
' → logprob: -8.64292049407959
    9. '\t' → logprob: -9.14292049407959
    10. ' ' → logprob: -9.39292049407959

Token 1006: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007227851077914238
    2. ' def' → logprob: -5.257227897644043
    3. '       ' → logprob: -6.257227897644043
    4. '   ' → logprob: -9.632227897644043
    5. '
' → logprob: -12.132227897644043
    6. '	def' → logprob: -12.632227897644043
    7. '        
' → logprob: -14.507227897644043
    8. '```' → logprob: -15.132227897644043
    9. 'for' → logprob: -15.257227897644043
    10. ' ' → logprob: -16.757226943969727

Token 1007: ' pré' (ID: 9424)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0032989128958433867
    2. ' def' → logprob: -6.253298759460449
    3. '   ' → logprob: -7.253298759460449
    4. '       ' → logprob: -7.753298759460449
    5. '
' → logprob: -8.37829875946045
    6. '        
' → logprob: -14.00329875946045
    7. '	def' → logprob: -14.62829875946045
    8. ' ' → logprob: -15.25329875946045
    9. '```' → logprob: -15.37829875946045
    10. '    
' → logprob: -15.75329875946045

Token 1008: '-cal' (ID: 84920)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.17428132891654968
    2. 'c' → logprob: -2.549281358718872
    3. 'sum' → logprob: -2.799281358718872
    4. 'computed' → logprob: -5.299281120300293
    5. 'compute' → logprob: -5.924281120300293
    6. 'd' → logprob: -5.924281120300293
    7. 'dict' → logprob: -6.549281120300293
    8. 'cis' → logprob: -6.674281120300293
    9. 'f' → logprob: -6.674281120300293
    10. 'cum' → logprob: -6.924281120300293

Token 1009: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.42207401990890503
    2. 'c' → logprob: -1.1720740795135498
    3. 'cule' → logprob: -3.79707407951355
    4. 'culated' → logprob: -4.672073841094971
    5. 'al' → logprob: -6.797073841094971
    6. '[c' → logprob: -8.547074317932129
    7. 'computed' → logprob: -8.672074317932129
    8. 'culate' → logprob: -8.672074317932129
    9. 'compute' → logprob: -9.172074317932129
    10. '[' → logprob: -9.172074317932129

Token 1010: ' occurrences' (ID: 108073)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3950660526752472
    2. 'counts' → logprob: -1.5200660228729248
    3. 'count' → logprob: -3.020066022872925
    4. 'occ' → logprob: -4.270066261291504
    5. ' counts' → logprob: -4.645066261291504
    6. 'freq' → logprob: -4.645066261291504
    7. '_counts' → logprob: -4.770066261291504
    8. 'occur' → logprob: -5.270066261291504
    9. 'sum' → logprob: -6.020066261291504
    10. 'prefix' → logprob: -6.520066261291504

Token 1011: ' cumul' (ID: 163119)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1820172369480133
    2. '       ' → logprob: -2.0570173263549805
    3. '   ' → logprob: -4.0570173263549805
    4. '=' → logprob: -4.5570173263549805
    5. '_counts' → logprob: -5.5570173263549805
    6. 'counts' → logprob: -5.6820173263549805
    7. 'count' → logprob: -6.6820173263549805
    8. '_occ' → logprob: -6.8070173263549805
    9. '_count' → logprob: -7.5570173263549805
    10. 'occ' → logprob: -7.9320173263549805

Token 1012: 'ées' (ID: 5161)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8567959666252136
    2. 'um' → logprob: -1.1067960262298584
    3. 'sum' → logprob: -2.6067960262298584
    4. ' =' → logprob: -3.2317960262298584
    5. '       ' → logprob: -3.3567960262298584
    6. '_counts' → logprob: -3.4817960262298584
    7. 'counts' → logprob: -4.356795787811279
    8. 'ums' → logprob: -4.356795787811279
    9. '_sum' → logprob: -4.856795787811279
    10. '=' → logprob: -5.106795787811279

Token 1013: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3080618381500244
    2. '   ' → logprob: -2.3080618381500244
    3. ' =' → logprob: -2.3080618381500244
    4. ' prefix' → logprob: -4.183061599731445
    5. 'prefix' → logprob: -4.683061599731445
    6. ' counts' → logprob: -4.808061599731445
    7. 'count' → logprob: -5.183061599731445
    8. 'cum' → logprob: -5.183061599731445
    9. 'counts' → logprob: -5.683061599731445
    10. 'occ' → logprob: -5.808061599731445

Token 1014: ' gagner' (ID: 64227)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20139656960964203
    2. ' i' → logprob: -1.8263965845108032
    3. 'range' → logprob: -4.701396465301514
    4. ' range' → logprob: -4.951396465301514
    5. '[i' → logprob: -6.076396465301514
    6. '   ' → logprob: -6.701396465301514
    7. '[' → logprob: -7.576396465301514
    8. 'prefix' → logprob: -8.076396942138672
    9. ' ' → logprob: -9.201396942138672
    10. ' prefix' → logprob: -9.576396942138672

Token 1015: ' du' (ID: 1462)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.9328474998474121
    2. 'time' → logprob: -1.182847499847412
    3. ' time' → logprob: -2.182847499847412
    4. 'cum' → logprob: -2.932847499847412
    5. ' temps' → logprob: -3.807847499847412
    6. '   ' → logprob: -4.557847499847412
    7. 'length' → logprob: -4.807847499847412
    8. 'indices' → logprob: -4.932847499847412
    9. 'prefix' → logprob: -5.057847499847412
    10. 'i' → logprob: -5.182847499847412

Token 1016: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.0003266447747591883
    2. 'tempo' → logprob: -9.000327110290527
    3. 'tem' → logprob: -9.625327110290527
    4. 'temp' → logprob: -10.000327110290527
    5. 'time' → logprob: -10.000327110290527
    6. ' temps' → logprob: -11.125327110290527
    7. 'ti' → logprob: -11.375327110290527
    8. '
' → logprob: -11.625327110290527
    9. '   ' → logprob: -12.500327110290527
    10. '```' → logprob: -13.125327110290527

Token 1017: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0645601898431778
    2. 'prefix' → logprob: -3.8145601749420166
    3. ' prefix' → logprob: -4.689560413360596
    4. '
' → logprob: -5.064560413360596
    5. ' counts' → logprob: -5.314560413360596
    6. 'counts' → logprob: -5.314560413360596
    7. '   ' → logprob: -5.564560413360596
    8. 'cum' → logprob: -5.564560413360596
    9. 'occ' → logprob: -6.189560413360596
    10. 'count' → logprob: -6.564560413360596

Token 1018: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00301323807798326
    2. '
' → logprob: -7.1280131340026855
    3. 'cum' → logprob: -7.5030131340026855
    4. '        
' → logprob: -8.003013610839844
    5. '   ' → logprob: -8.003013610839844
    6. 'counts' → logprob: -8.378013610839844
    7. '```' → logprob: -8.628013610839844
    8. 'occ' → logprob: -8.878013610839844
    9. 'c' → logprob: -9.128013610839844
    10. '\' → logprob: -10.003013610839844

Token 1019: ' occ' (ID: 4138)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.9484187364578247
    2. ' prefix' → logprob: -1.6984187364578247
    3. 'prefix' → logprob: -1.9484187364578247
    4. 'counts' → logprob: -2.198418617248535
    5. 'occ' (adapté à ' occ') → logprob: -2.948418617248535
    6. 'count' → logprob: -3.698418617248535
    7. 'cum' → logprob: -3.823418617248535
    8. ' occurrences' → logprob: -4.073418617248535
    9. ' count' → logprob: -4.198418617248535
    10. 'c' → logprob: -4.448418617248535

Token 1020: ' =' (ID: 314)
  Prédit: 'urrences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.4883579909801483
    2. '_counts' → logprob: -1.6133580207824707
    3. ' =' → logprob: -2.1133580207824707
    4. 's' → logprob: -2.8633580207824707
    5. 'urr' → logprob: -5.988358020782471
    6. 'r' → logprob: -6.488358020782471
    7. 'urrence' → logprob: -7.113358020782471
    8. '=' → logprob: -7.738358020782471
    9. '   ' → logprob: -7.988358020782471
    10. 'curr' → logprob: -7.988358020782471

Token 1021: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001669485354796052
    2. ' [' → logprob: -9.125166893005371
    3. '{' → logprob: -10.250166893005371
    4. '[len' → logprob: -11.250166893005371
    5. '   ' → logprob: -12.500166893005371
    6. '       ' → logprob: -12.875166893005371
    7. '[count' → logprob: -13.000166893005371
    8. '[n' → logprob: -15.250166893005371
    9. '[int' → logprob: -15.750166893005371
    10. '[counter' → logprob: -16.000167846679688

Token 1022: 'count' (ID: 5420)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. 'count' → logprob: -13.250004768371582
    3. '   ' → logprob: -13.375004768371582
    4. ' ' → logprob: -13.625004768371582
    5. '[' → logprob: -15.625004768371582
    6. '       ' → logprob: -16.7500057220459
    7. 'counter' → logprob: -17.4375057220459
    8. '(' → logprob: -17.5000057220459
    9. '۰' → logprob: -18.0000057220459
    10. '           ' → logprob: -18.1250057220459

Token 1023: '[c' (ID: 22840)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6642300486564636
    2. ']' → logprob: -1.0392301082611084
    3. 's' → logprob: -3.0392301082611084
    4. '[s' → logprob: -4.039229869842529
    5. '[c' → logprob: -4.039229869842529
    6. 'c' → logprob: -4.164229869842529
    7. '(s' → logprob: -4.414229869842529
    8. '(' → logprob: -5.164229869842529
    9. '(c' → logprob: -5.414229869842529
    10. '.get' → logprob: -6.914229869842529

Token 1024: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.746784508228302
    2. ' for' → logprob: -0.996784508228302
    3. ']+' → logprob: -2.4967844486236572
    4. 'for' → logprob: -3.6217844486236572
    5. '+' → logprob: -4.121784687042236
    6. ' +' → logprob: -4.371784687042236
    7. 'c' → logprob: -4.871784687042236
    8. '[' → logprob: -6.121784687042236
    9. '   ' → logprob: -6.496784687042236
    10. 's' → logprob: -6.621784687042236

Token 1025: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3505449891090393
    2. 'for' → logprob: -1.2255449295043945
    3. ']' → logprob: -6.6005449295043945
    4. '   ' → logprob: -7.8505449295043945
    5. ' if' → logprob: -9.225544929504395
    6. 'if' → logprob: -9.725544929504395
    7. ' ' → logprob: -9.850544929504395
    8. '+' → logprob: -10.100544929504395
    9. ']+' → logprob: -10.600544929504395
    10. '[' → logprob: -11.100544929504395

Token 1026: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07575996220111847
    2. 'sorted' → logprob: -2.9507598876953125
    3. ' c' → logprob: -4.3257598876953125
    4. ' sorted' → logprob: -5.3257598876953125
    5. 'i' → logprob: -7.4507598876953125
    6. '_' → logprob: -7.7007598876953125
    7. 'range' → logprob: -8.075759887695312
    8. 'char' → logprob: -8.200759887695312
    9. ' range' → logprob: -8.825759887695312
    10. ']' → logprob: -8.825759887695312

Token 1027: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.23749907314777374
    2. ' in' → logprob: -1.6124991178512573
    3. 'c' → logprob: -4.737499237060547
    4. ']' → logprob: -6.987499237060547
    5. ' c' → logprob: -7.112499237060547
    6. 'i' → logprob: -7.487499237060547
    7. ' ' → logprob: -7.487499237060547
    8. '_' → logprob: -8.862499237060547
    9. '...' → logprob: -10.237499237060547
    10. '_in' → logprob: -10.487499237060547

Token 1028: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.08175212889909744
    2. 'range' → logprob: -2.581752061843872
    3. 'c' → logprob: -6.331752300262451
    4. ' sorted' → logprob: -7.456752300262451
    5. ' range' → logprob: -8.331751823425293
    6. ']' → logprob: -9.581751823425293
    7. '(sorted' → logprob: -9.956751823425293
    8. ' ' → logprob: -10.581751823425293
    9. '   ' → logprob: -10.581751823425293
    10. '
' → logprob: -10.956751823425293

Token 1029: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.0007176732178777456
    2. ']' → logprob: -8.375718116760254
    3. 'range' → logprob: -8.625718116760254
    4. 'chars' → logprob: -9.625718116760254
    5. '(range' → logprob: -10.000718116760254
    6. '_]' → logprob: -10.500718116760254
    7. 'sorted' → logprob: -10.625718116760254
    8. '(chars' → logprob: -10.750718116760254
    9. '(sorted' → logprob: -10.875718116760254
    10. '(' → logprob: -10.875718116760254

Token 1030: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002058903919532895
    2. ' ]' → logprob: -6.502058982849121
    3. ']
' → logprob: -8.002058982849121
    4. '       ' → logprob: -8.752058982849121
    5. ']+' → logprob: -10.377058982849121
    6. '   ' → logprob: -10.627058982849121
    7. ' ]
' → logprob: -13.127058982849121
    8. '+]' → logprob: -13.752058982849121
    9. '           ' → logprob: -14.252058982849121
    10. ',' → logprob: -14.377058982849121

Token 1031: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.126311257481575
    2. '        
' → logprob: -2.3763113021850586
    3. '
' → logprob: -3.7513113021850586
    4. ' 
' → logprob: -7.751311302185059
    5. '    
' → logprob: -7.876311302185059
    6. '   ' → logprob: -8.251311302185059
    7. '\t' → logprob: -8.376311302185059
    8. '[' → logprob: -8.626311302185059
    9. '  
' → logprob: -9.251311302185059
    10. '        ' → logprob: -9.376311302185059

Token 1032: ' prefix' (ID: 18633)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.197066307067871
    2. ' 
' → logprob: -1.197066307067871
    3. 'prefix' (adapté à ' prefix') → logprob: -1.947066307067871
    4. '       ' → logprob: -2.322066307067871
    5. '        
' → logprob: -2.697066307067871
    6. ' prefix' → logprob: -3.072066307067871
    7. '\' → logprob: -4.322066307067871
    8. 'cum' → logprob: -5.072066307067871
    9. '```' → logprob: -5.322066307067871
    10. 'acc' → logprob: -5.697066307067871

Token 1033: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.03828854858875275
    2. '_s' → logprob: -3.5382885932922363
    3. '_occ' → logprob: -5.788288593292236
    4. '_counts' → logprob: -6.038288593292236
    5. '_' → logprob: -6.288288593292236
    6. 'sum' → logprob: -7.538288593292236
    7. ' =' → logprob: -8.163288116455078
    8. '_len' → logprob: -8.663288116455078
    9. 's' → logprob: -9.538288116455078
    10. '_count' → logprob: -10.163288116455078

Token 1034: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03811630979180336
    2. '=' → logprob: -3.288116216659546
    3. '=[' → logprob: -10.163116455078125
    4. '   ' → logprob: -10.913116455078125
    5. ' =[' → logprob: -11.788116455078125
    6. '[' → logprob: -12.163116455078125
    7. ' ' → logprob: -12.663116455078125
    8. ']' → logprob: -14.663116455078125
    9. '  ' → logprob: -14.788116455078125
    10. '    ' → logprob: -15.413116455078125

Token 1035: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.697387966094539e-05
    2. ' [' → logprob: -9.375086784362793
    3. '[p' → logprob: -14.500086784362793
    4. '[len' → logprob: -14.500086784362793
    5. '   ' → logprob: -15.250086784362793
    6. '[n' → logprob: -15.375086784362793
    7. '0' → logprob: -15.500086784362793
    8. '[in' → logprob: -16.75008773803711
    9. '[int' → logprob: -17.12508773803711
    10. '[ind' → logprob: -17.12508773803711

Token 1036: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.500001907348633
    3. '[' → logprob: -15.000001907348633
    4. '   ' → logprob: -16.250001907348633
    5. '(' → logprob: -16.750001907348633
    6. 'occ' → logprob: -17.250001907348633
    7. 'prefix' → logprob: -17.750001907348633
    8. '
' → logprob: -18.000001907348633
    9. '{' → logprob: -18.000001907348633
    10. '  ' → logprob: -18.375001907348633

Token 1037: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5916286706924438
    2. ']
' → logprob: -1.4666286706924438
    3. ',' → logprob: -1.5916286706924438
    4. ']+' → logprob: -4.716628551483154
    5. '0' → logprob: -6.591628551483154
    6. 'for' → logprob: -7.966628551483154
    7. ' for' → logprob: -8.091629028320312
    8. ',
' → logprob: -8.091629028320312
    9. ']*' → logprob: -8.091629028320312
    10. ']*(' → logprob: -9.091629028320312

Token 1038: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.3226136767771095e-05
    2. ' n' → logprob: -10.125042915344238
    3. 'len' → logprob: -13.375042915344238
    4. '(n' → logprob: -14.125042915344238
    5. '   ' → logprob: -14.375042915344238
    6. ')n' → logprob: -16.625043869018555
    7. '[n' → logprob: -17.000043869018555
    8. '{' → logprob: -17.125043869018555
    9. '\n' → logprob: -17.250043869018555
    10. '	n' → logprob: -17.375043869018555

Token 1039: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.259079363080673e-05
    2. ' +' → logprob: -11.375012397766113
    3. '+
' → logprob: -14.500012397766113
    4. '+n' → logprob: -14.750012397766113
    5. '```' → logprob: -17.00001335144043
    6. '1' → logprob: -17.37501335144043
    7. 'n' → logprob: -19.25001335144043
    8. '＋' → logprob: -19.25001335144043
    9. '
' → logprob: -19.50001335144043
    10. '+)' → logprob: -19.62501335144043

Token 1040: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '   ' → logprob: -17.5
    4. 'n' → logprob: -17.625
    5. '```' → logprob: -18.875
    6. '
' → logprob: -19.625
    7. 'def' → logprob: -20.375
    8. 'len' → logprob: -21.5
    9. '`' → logprob: -22.625
    10. '``' → logprob: -22.75

Token 1041: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.007723741699010134
    2. ')' → logprob: -4.882723808288574
    3. ')
' → logprob: -9.882723808288574
    4. '       ' → logprob: -10.257723808288574
    5. '
' → logprob: -11.007723808288574
    6. ' )
' → logprob: -12.132723808288574
    7. ']
' → logprob: -13.132723808288574
    8. '+' → logprob: -13.507723808288574
    9. '   ' → logprob: -13.507723808288574
    10. 'for' → logprob: -13.882723808288574

Token 1042: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16553370654582977
    2. 'for' → logprob: -2.4155337810516357
    3. ' for' → logprob: -2.7905337810516357
    4. '        
' → logprob: -7.165533542633057
    5. '   ' → logprob: -7.665533542633057
    6. '
' → logprob: -8.540534019470215
    7. ' 
' → logprob: -9.040534019470215
    8. '```' → logprob: -9.415534019470215
    9. '           ' → logprob: -9.915534019470215
    10. '        ' → logprob: -10.040534019470215

Token 1043: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.688212614681106e-05
    2. '       ' → logprob: -11.500017166137695
    3. ' for' → logprob: -12.250017166137695
    4. '   ' → logprob: -13.250017166137695
    5. '```' → logprob: -16.000017166137695
    6. '
' → logprob: -17.000017166137695
    7. '	for' → logprob: -17.000017166137695
    8. '           ' → logprob: -20.250017166137695
    9. 'pour' → logprob: -20.500017166137695
    10. '``' → logprob: -21.125017166137695

Token 1044: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019289902411401272
    2. ' i' → logprob: -6.251928806304932
    3. '_i' → logprob: -16.001928329467773
    4. '   ' → logprob: -16.001928329467773
    5. '	i' → logprob: -16.001928329467773
    6. ' ' → logprob: -18.626928329467773
    7. '_' → logprob: -18.876928329467773
    8. '(i' → logprob: -19.751928329467773
    9. '1' → logprob: -20.126928329467773
    10. 'I' → logprob: -20.501928329467773

Token 1045: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005320447031408548
    2. 'in' → logprob: -5.2553205490112305
    3. '1' → logprob: -9.88032054901123
    4. '	in' → logprob: -11.25532054901123
    5. '   ' → logprob: -11.88032054901123
    6. 'i' → logprob: -12.13032054901123
    7. ' i' → logprob: -12.25532054901123
    8. '_' → logprob: -14.13032054901123
    9. ' ' → logprob: -14.13032054901123
    10. 'import' → logprob: -14.63032054901123

Token 1046: ' range' (ID: 3352)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04276576638221741
    2. 'range' → logprob: -3.7927658557891846
    3. 'i' → logprob: -4.0427656173706055
    4. ' range' → logprob: -6.7927656173706055
    5. ' ' → logprob: -7.6677656173706055
    6. ' i' → logprob: -9.292765617370605
    7. '   ' → logprob: -9.292765617370605
    8. 'in' → logprob: -12.917765617370605
    9. '0' → logprob: -12.917765617370605
    10. ' in' → logprob: -14.042765617370605

Token 1047: '(n' (ID: 2406)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011841325089335442
    2. 'i' → logprob: -4.636841297149658
    3. '   ' → logprob: -6.261841297149658
    4. ' i' → logprob: -9.261841773986816
    5. 'n' → logprob: -10.636841773986816
    6. ' ' → logprob: -10.761841773986816
    7. '(i' → logprob: -11.136841773986816
    8. '(' → logprob: -11.386841773986816
    9. '       ' → logprob: -12.011841773986816
    10. '0' → logprob: -13.761841773986816

Token 1048: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3194339871406555
    2. '):
' → logprob: -1.6944339275360107
    3. '1' → logprob: -2.9444339275360107
    4. '):' → logprob: -3.9444339275360107
    5. '   ' → logprob: -4.44443416595459
    6. ' +' → logprob: -5.56943416595459
    7. ')' → logprob: -6.81943416595459
    8. '-' → logprob: -7.56943416595459
    9. '       ' → logprob: -8.81943416595459
    10. '
' → logprob: -9.19443416595459

Token 1049: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008291634730994701
    2. '   ' → logprob: -7.625829219818115
    3. 'prefix' → logprob: -8.500828742980957
    4. ' prefix' → logprob: -9.500828742980957
    5. '       ' → logprob: -9.750828742980957
    6. '               ' → logprob: -13.500828742980957
    7. '(prefix' → logprob: -13.500828742980957
    8. '```' → logprob: -13.875828742980957
    9. '	       ' → logprob: -14.875828742980957
    10. '    ' → logprob: -15.625828742980957

Token 1050: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.039690274745225906
    2. ' prefix' → logprob: -3.2896902561187744
    3. '   ' → logprob: -6.5396904945373535
    4. '       ' → logprob: -8.664690017700195
    5. '           ' → logprob: -10.664690017700195
    6. '(prefix' → logprob: -12.789690017700195
    7. '               ' → logprob: -12.914690017700195
    8. '_prefix' → logprob: -14.539690017700195
    9. '    ' → logprob: -14.914690017700195
    10. '```' → logprob: -15.539690017700195

Token 1051: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.292907877039397e-06
    2. ' _' → logprob: -13.62500286102295
    3. 'sum' → logprob: -14.50000286102295
    4. '   ' → logprob: -14.62500286102295
    5. '_' → logprob: -15.62500286102295
    6. '
' → logprob: -15.62500286102295
    7. '_s' → logprob: -16.250003814697266
    8. '_SUM' → logprob: -16.375003814697266
    9. '_prefix' → logprob: -16.625003814697266
    10. ')' → logprob: -16.625003814697266

Token 1052: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3795937522663735e-05
    2. '   ' → logprob: -11.25002384185791
    3. ' [' → logprob: -12.62502384185791
    4. '=' → logprob: -13.00002384185791
    5. ' =' → logprob: -13.87502384185791
    6. ' +=' → logprob: -14.12502384185791
    7. '[' → logprob: -14.12502384185791
    8. '+=' → logprob: -14.50002384185791
    9. 'i' → logprob: -15.00002384185791
    10. ' i' → logprob: -15.12502384185791

Token 1053: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018160592764616013
    2. ' +' → logprob: -4.018160820007324
    3. '1' → logprob: -12.018160820007324
    4. '=' → logprob: -13.643160820007324
    5. '+=' → logprob: -14.143160820007324
    6. ' +=' → logprob: -14.393160820007324
    7. ']' → logprob: -14.643160820007324
    8. '+
' → logprob: -15.268160820007324
    9. ']+' → logprob: -15.268160820007324
    10. '```' → logprob: -15.268160820007324

Token 1054: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.7755875129951164e-05
    2. ' ' → logprob: -10.25004768371582
    3. '   ' → logprob: -11.62504768371582
    4. '
' → logprob: -13.50004768371582
    5. '```' → logprob: -14.43754768371582
    6. '  ' → logprob: -15.18754768371582
    7. '=' → logprob: -15.62504768371582
    8. '`' → logprob: -16.12504768371582
    9. '    ' → logprob: -16.18754768371582
    10. ')' → logprob: -16.50004768371582

Token 1055: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4890812039375305
    2. '+=' → logprob: -1.2390811443328857
    3. ' +=' → logprob: -2.7390811443328857
    4. ']+=' → logprob: -3.8640811443328857
    5. ' =' → logprob: -4.989081382751465
    6. ']' → logprob: -5.489081382751465
    7. ']=' → logprob: -7.989081382751465
    8. '+' → logprob: -8.864081382751465
    9. ')' → logprob: -10.489081382751465
    10. ']+' → logprob: -10.864081382751465

Token 1056: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008223761687986553
    2. ' =' → logprob: -7.5008225440979
    3. '+=' → logprob: -8.250822067260742
    4. ' +=' → logprob: -12.250822067260742
    5. '=p' → logprob: -12.875822067260742
    6. '=
' → logprob: -14.750822067260742
    7. 'prefix' → logprob: -15.250822067260742
    8. '   ' → logprob: -17.000822067260742
    9. ']+=' → logprob: -17.500822067260742
    10. ']=' → logprob: -17.625822067260742

Token 1057: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0007129086880013347
    2. ' prefix' → logprob: -7.250712871551514
    3. '   ' → logprob: -12.750713348388672
    4. '(prefix' → logprob: -17.000713348388672
    5. '           ' → logprob: -17.125713348388672
    6. '       ' → logprob: -18.125713348388672
    7. ' ' → logprob: -20.250713348388672
    8. '_prefix' → logprob: -20.500713348388672
    9. '  ' → logprob: -20.750713348388672
    10. '    ' → logprob: -21.625713348388672

Token 1058: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -9.968312951968983e-06
    2. '   ' → logprob: -12.875009536743164
    3. 'sum' → logprob: -12.875009536743164
    4. '[i' → logprob: -13.250009536743164
    5. '_prefix' → logprob: -14.500009536743164
    6. 'i' → logprob: -14.750009536743164
    7. '       ' → logprob: -14.750009536743164
    8. 'prefix' → logprob: -14.875009536743164
    9. ' _' → logprob: -15.125009536743164
    10. '_SUM' → logprob: -15.500009536743164

Token 1059: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3915141355246305e-05
    2. 'prefix' → logprob: -11.25002384185791
    3. '[' → logprob: -12.62502384185791
    4. '_prefix' → logprob: -13.12502384185791
    5. 'i' → logprob: -13.25002384185791
    6. '(i' → logprob: -14.00002384185791
    7. '   ' → logprob: -14.25002384185791
    8. '```' → logprob: -14.62502384185791
    9. '[
' → logprob: -14.87502384185791
    10. '+' → logprob: -15.25002384185791

Token 1060: ']+' (ID: 15344)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759509801864624
    2. '+' → logprob: -0.8259509801864624
    3. ']+' → logprob: -11.825950622558594
    4. ']' → logprob: -13.950950622558594
    5. '   ' → logprob: -14.450950622558594
    6. ' plus' → logprob: -14.575950622558594
    7. ')+' → logprob: -14.575950622558594
    8. '           ' → logprob: -14.950950622558594
    9. ' ' → logprob: -15.200950622558594
    10. '       ' → logprob: -15.200950622558594

Token 1061: 'occ' (ID: 16533)
  Prédit: 'occ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -1.0683535037969705e-05
    2. 'oc' → logprob: -11.62501049041748
    3. ' occ' → logprob: -13.75001049041748
    4. 'occur' → logprob: -14.37501049041748
    5. '   ' → logprob: -17.500011444091797
    6. 'occup' → logprob: -17.625011444091797
    7. 'acc' → logprob: -18.375011444091797
    8. '_occ' → logprob: -19.375011444091797
    9. 'count' → logprob: -19.500011444091797
    10. 'Occ' → logprob: -20.000011444091797

Token 1062: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -12.250005722045898
    3. 'i' → logprob: -15.000005722045898
    4. ']' → logprob: -15.875005722045898
    5. '[
' → logprob: -16.0000057220459
    6. 's' → logprob: -16.0000057220459
    7. '```' → logprob: -16.1250057220459
    8. '   ' → logprob: -16.5000057220459
    9. ' [' → logprob: -16.7500057220459
    10. '[n' → logprob: -17.3750057220459

Token 1063: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3677099943161011
    2. ')' → logprob: -1.242709994316101
    3. '<|end|>' → logprob: -4.742710113525391
    4. 'def' → logprob: -5.867710113525391
    5. '<|end|>' → logprob: -6.242710113525391
    6. '       ' → logprob: -6.492710113525391
    7. ' ]' → logprob: -6.492710113525391
    8. ' )' → logprob: -7.617710113525391
    9. ')]' → logprob: -7.617710113525391
    10. '   ' → logprob: -7.617710113525391

Token 1064: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9347617030143738
    2. '        
' → logprob: -0.9347617030143738
    3. '
' → logprob: -1.9347617626190186
    4. ' 
' → logprob: -3.9347617626190186
    5. '    
' → logprob: -4.0597615242004395
    6. '  
' → logprob: -4.4347615242004395
    7. '```' → logprob: -4.4347615242004395
    8. '   ' → logprob: -5.9347615242004395
    9. '            
' → logprob: -6.6847615242004395
    10. '<|end|>' → logprob: -6.8097615242004395

Token 1065: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42898979783058167
    2. '        
' → logprob: -1.9289897680282593
    3. '   ' → logprob: -2.428989887237549
    4. '
' → logprob: -2.803989887237549
    5. '```' → logprob: -4.053989887237549
    6. 'def' → logprob: -4.178989887237549
    7. '    
' → logprob: -4.303989887237549
    8. '	def' → logprob: -5.803989887237549
    9. '		
' → logprob: -6.428989887237549
    10. '	' → logprob: -7.178989887237549

Token 1066: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6008105278015137
    2. 'def' (adapté à ' def') → logprob: -0.8508105278015137
    3. '```' → logprob: -4.100810527801514
    4. ' def' → logprob: -5.725810527801514
    5. '       ' → logprob: -5.850810527801514
    6. '   ' → logprob: -7.100810527801514
    7. '        
' → logprob: -7.225810527801514
    8. '    
' → logprob: -8.475811004638672
    9. ' 
' → logprob: -9.725811004638672
    10. '	def' → logprob: -10.975811004638672

Token 1067: ' cost' (ID: 3097)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.17602458596229553
    2. ' solve' → logprob: -2.4260246753692627
    3. ' helper' → logprob: -3.0510246753692627
    4. 'dfs' → logprob: -3.9260246753692627
    5. 'solve' → logprob: -6.176024436950684
    6. ' go' → logprob: -6.676024436950684
    7. ' rec' → logprob: -7.176024436950684
    8. ' dp' → logprob: -7.301024436950684
    9. 'helper' → logprob: -8.176024436950684
    10. 're' → logprob: -8.426024436950684

Token 1068: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4794234037399292
    2. '(start' → logprob: -0.9794234037399292
    3. '(l' → logprob: -5.729423522949219
    4. '(' → logprob: -6.604423522949219
    5. '(s' → logprob: -8.229423522949219
    6. ' (' → logprob: -8.479423522949219
    7. '(left' → logprob: -8.979423522949219
    8. '(j' → logprob: -10.604423522949219
    9. '[start' → logprob: -10.979423522949219
    10. '(u' → logprob: -11.604423522949219

Token 1069: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013206000439822674
    2. ',j' → logprob: -4.5132060050964355
    3. ',i' → logprob: -6.3882060050964355
    4. ' ,' → logprob: -7.8882060050964355
    5. ',end' → logprob: -10.388205528259277
    6. ',k' → logprob: -10.888205528259277
    7. ',n' → logprob: -11.638205528259277
    8. ',
' → logprob: -11.888205528259277
    9. ',t' → logprob: -12.138205528259277
    10. ',start' → logprob: -12.388205528259277

Token 1070: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3134104609489441
    2. '):' → logprob: -1.3134105205535889
    3. '       ' → logprob: -9.188410758972168
    4. '):
' → logprob: -11.063410758972168
    5. '           ' → logprob: -11.313410758972168
    6. ')' → logprob: -11.938410758972168
    7. ',' → logprob: -12.438410758972168
    8. '   ' → logprob: -13.313410758972168
    9. ':' → logprob: -13.563410758972168
    10. '+' → logprob: -13.563410758972168

Token 1071: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056165728718042374
    2. '(i' → logprob: -4.18116569519043
    3. '(' → logprob: -4.68116569519043
    4. ' return' → logprob: -4.93116569519043
    5. '            ' → logprob: -4.93116569519043
    6. 'return' → logprob: -5.55616569519043
    7. ' (' → logprob: -5.80616569519043
    8. '               ' → logprob: -5.80616569519043
    9. ':' → logprob: -6.93116569519043
    10. '        ' → logprob: -7.05616569519043

Token 1072: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3671613037586212
    2. '           ' → logprob: -1.6171612739562988
    3. 'if' → logprob: -2.492161273956299
    4. '               ' → logprob: -4.117161273956299
    5. ' return' → logprob: -5.867161273956299
    6. 'return' → logprob: -6.492161273956299
    7. ' ' → logprob: -6.492161273956299
    8. '            ' → logprob: -6.867161273956299
    9. '   ' → logprob: -7.492161273956299
    10. '       ' → logprob: -7.617161273956299

Token 1073: ' i' (ID: 575)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6746131181716919
    2. '           ' → logprob: -1.674613118171692
    3. ' return' → logprob: -2.4246129989624023
    4. 'if' → logprob: -2.5496129989624023
    5. ' ord' → logprob: -3.1746129989624023
    6. ' prefix' → logprob: -3.2996129989624023
    7. 'prefix' → logprob: -3.5496129989624023
    8. 'return' → logprob: -4.674612998962402
    9. '            ' → logprob: -5.049612998962402
    10. '               ' → logprob: -5.549612998962402

Token 1074: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11936990916728973
    2. ' ,' → logprob: -2.6193699836730957
    3. ' ==' → logprob: -3.9943699836730957
    4. ',j' → logprob: -4.494369983673096
    5. '==' → logprob: -5.369369983673096
    6. ' <=' → logprob: -5.994369983673096
    7. ' ' → logprob: -6.869369983673096
    8. ',
' → logprob: -7.994369983673096
    9. ' >' → logprob: -8.244369506835938
    10. '<=' → logprob: -8.494369506835938

Token 1075: ' inclus' (ID: 11891)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17704126238822937
    2. ' ,' → logprob: -2.5520412921905518
    3. ' =' → logprob: -4.052041053771973
    4. ' ==' → logprob: -4.552041053771973
    5. ':' → logprob: -4.802041053771973
    6. '   ' → logprob: -4.927041053771973
    7. ' <=' → logprob: -5.177041053771973
    8. ')' → logprob: -5.302041053771973
    9. '):' → logprob: -5.552041053771973
    10. '=' → logprob: -6.052041053771973

Token 1076: 'ifs' (ID: 14119)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8349613547325134
    2. ',' → logprob: -1.9599614143371582
    3. ':
' → logprob: -1.9599614143371582
    4. '):' → logprob: -2.834961414337158
    5. '           ' → logprob: -2.959961414337158
    6. '):
' → logprob: -2.959961414337158
    7. ')' → logprob: -3.334961414337158
    8. ' :' → logprob: -3.709961414337158
    9. ' :
' → logprob: -4.459961414337158
    10. '
' → logprob: -4.584961414337158

Token 1077: ' indices' (ID: 30378)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09042061120271683
    2. ':
' → logprob: -2.965420722961426
    3. '           ' → logprob: -4.340420722961426
    4. ' :' → logprob: -5.590420722961426
    5. ' if' → logprob: -5.590420722961426
    6. '       ' → logprob: -6.090420722961426
    7. '):' → logprob: -6.340420722961426
    8. ' =' → logprob: -6.590420722961426
    9. '):
' → logprob: -6.590420722961426
    10. '               ' → logprob: -6.965420722961426

Token 1078: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18917621672153473
    2. ':
' → logprob: -3.439176321029663
    3. '           ' → logprob: -3.439176321029663
    4. '<|end|>' → logprob: -3.564176321029663
    5. ',' → logprob: -4.189176082611084
    6. ' :' → logprob: -4.439176082611084
    7. '<|end|>' → logprob: -4.564176082611084
    8. '):' → logprob: -4.814176082611084
    9. ' if' → logprob: -4.814176082611084
    10. ')' → logprob: -5.939176082611084

Token 1079: ' characters' (ID: 9862)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9450275897979736
    2. 'sorted' → logprob: -1.1950275897979736
    3. ' sorted' → logprob: -2.0700275897979736
    4. 'i' → logprob: -2.6950275897979736
    5. 'chars' → logprob: -3.5700275897979736
    6. ' chars' → logprob: -3.6950275897979736
    7. ' la' → logprob: -4.0700273513793945
    8. 'interval' → logprob: -4.6950273513793945
    9. ' j' → logprob: -5.0700273513793945
    10. ' interval' → logprob: -5.0700273513793945

Token 1080: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5593181252479553
    2. '):' → logprob: -1.1843180656433105
    3. ')' → logprob: -3.4343180656433105
    4. '):
' → logprob: -3.6843180656433105
    5. '   ' → logprob: -4.1843180656433105
    6. ' :' → logprob: -4.3093180656433105
    7. ':
' → logprob: -4.3093180656433105
    8. '           ' → logprob: -4.6843180656433105
    9. '       ' → logprob: -5.6843180656433105
    10. ',' → logprob: -5.8093180656433105

Token 1081: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.5234261155128479
    2. 'sorted' → logprob: -0.8984261155128479
    3. ')' → logprob: -9.148426055908203
    4. ' ' → logprob: -10.273426055908203
    5. '(sorted' → logprob: -10.398426055908203
    6. '   ' → logprob: -10.648426055908203
    7. ' range' → logprob: -10.648426055908203
    8. 'range' → logprob: -11.023426055908203
    9. '_sorted' → logprob: -11.398426055908203
    10. ' la' → logprob: -11.898426055908203

Token 1082: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.000410415610531345
    2. '_' → logprob: -8.875410079956055
    3. '   ' → logprob: -9.125410079956055
    4. 'chars' → logprob: -10.125410079956055
    5. ')' → logprob: -10.625410079956055
    6. '_
' → logprob: -10.875410079956055
    7. '_sorted' → logprob: -11.375410079956055
    8. '
' → logprob: -11.500410079956055
    9. '       ' → logprob: -12.000410079956055
    10. '```' → logprob: -12.000410079956055

Token 1083: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04091908782720566
    2. ':
' → logprob: -4.290919303894043
    3. '):' → logprob: -4.415919303894043
    4. '           ' → logprob: -5.290919303894043
    5. ' :' → logprob: -5.665919303894043
    6. ')' → logprob: -6.915919303894043
    7. ',' → logprob: -7.415919303894043
    8. '):
' → logprob: -7.415919303894043
    9. '               ' → logprob: -7.665919303894043
    10. '       ' → logprob: -7.790919303894043

Token 1084: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7760337591171265
    2. '           ' → logprob: -1.4010337591171265
    3. '       ' → logprob: -2.651033878326416
    4. '   ' → logprob: -2.776033878326416
    5. ':
' → logprob: -3.276033878326416
    6. ' :' → logprob: -3.526033878326416
    7. '):' → logprob: -4.401033878326416
    8. ',' → logprob: -4.526033878326416
    9. '               ' → logprob: -4.776033878326416
    10. ' ' → logprob: -4.776033878326416

Token 1085: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3802932798862457
    2. ' if' → logprob: -1.7552932500839233
    3. ' return' → logprob: -2.505293369293213
    4. 'return' → logprob: -3.255293369293213
    5. 'if' → logprob: -3.880293369293213
    6. '               ' → logprob: -7.130293369293213
    7. '       ' → logprob: -7.380293369293213
    8. '   ' → logprob: -7.630293369293213
    9. 'length' → logprob: -9.130292892456055
    10. ' ' → logprob: -9.380292892456055

Token 1086: ' vérifier' (ID: 93671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8642150163650513
    2. ' if' → logprob: -0.9892150163650513
    3. ' return' → logprob: -1.9892150163650513
    4. 'if' → logprob: -3.6142148971557617
    5. 'return' → logprob: -3.7392148971557617
    6. '               ' → logprob: -4.364214897155762
    7. ' ' → logprob: -5.739214897155762
    8. '            ' → logprob: -7.614214897155762
    9. '       ' → logprob: -7.739214897155762
    10. '```' → logprob: -7.739214897155762

Token 1087: ' si' (ID: 1784)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.5795169472694397
    2. ' ord' → logprob: -1.204516887664795
    3. 'abs' → logprob: -2.454516887664795
    4. 'sorted' → logprob: -3.829516887664795
    5. ' abs' → logprob: -4.329516887664795
    6. 'j' → logprob: -5.329516887664795
    7. ' sorted' → logprob: -5.954516887664795
    8. ' j' → logprob: -5.954516887664795
    9. 'i' → logprob: -6.079516887664795
    10. 'if' → logprob: -6.204516887664795

Token 1088: ' chars' (ID: 47991)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6468147039413452
    2. 'ord' → logprob: -0.8968147039413452
    3. 'sorted' → logprob: -3.1468148231506348
    4. 'i' → logprob: -4.271814823150635
    5. '(ord' → logprob: -5.521814823150635
    6. ' ord' → logprob: -5.646814823150635
    7. ' j' → logprob: -6.646814823150635
    8. 'chr' → logprob: -7.521814823150635
    9. '(j' → logprob: -7.646814823150635
    10. '(sorted' → logprob: -8.271814346313477

Token 1089: ' for' (ID: 395)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.2516588568687439
    2. '[i' → logprob: -1.6266589164733887
    3. '[' → logprob: -4.501658916473389
    4. 's' → logprob: -4.876658916473389
    5. '[s' → logprob: -5.626658916473389
    6. 'sorted' → logprob: -6.626658916473389
    7. ')' → logprob: -7.876658916473389
    8. '(s' → logprob: -8.00165843963623
    9. ',' → logprob: -8.25165843963623
    10. '   ' → logprob: -8.87665843963623

Token 1090: 'ment' (ID: 508)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00800606980919838
    2. 'i' → logprob: -6.0080060958862305
    3. 'med' → logprob: -6.2580060958862305
    4. '[i' → logprob: -6.8830060958862305
    5. 'ms' → logprob: -7.6330060958862305
    6. '   ' → logprob: -8.00800609588623
    7. '(i' → logprob: -8.38300609588623
    8. 'sorted' → logprob: -8.50800609588623
    9. 'mat' → logprob: -8.50800609588623
    10. 's' → logprob: -8.75800609588623

Token 1091: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.3316967487335205
    2. ' une' → logprob: -1.4566967487335205
    3. 'con' → logprob: -1.5816967487335205
    4. 'cont' → logprob: -2.2066967487335205
    5. 'un' → logprob: -2.7066967487335205
    6. ' un' → logprob: -3.5816967487335205
    7. ' ord' → logprob: -4.081696510314941
    8. 'contin' → logprob: -4.331696510314941
    9. '_cont' → logprob: -4.581696510314941
    10. 'interval' → logprob: -4.831696510314941

Token 1092: ' plage' (ID: 78241)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.6928958892822266
    2. 'con' → logprob: -1.4428958892822266
    3. 'continuous' → logprob: -2.4428958892822266
    4. 'contin' → logprob: -2.5678958892822266
    5. 'interval' → logprob: -2.8178958892822266
    6. ' contiguous' → logprob: -4.067895889282227
    7. 'continu' → logprob: -4.692895889282227
    8. ' contin' → logprob: -5.567895889282227
    9. 'continue' → logprob: -5.567895889282227
    10. ' continuous' → logprob: -6.567895889282227

Token 1093: ' continue' (ID: 4901)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.248293399810791
    2. '   ' → logprob: -1.873293399810791
    3. ' ==' → logprob: -2.123293399810791
    4. ' >=' → logprob: -2.123293399810791
    5. ' <=' → logprob: -2.748293399810791
    6. '       ' → logprob: -2.998293399810791
    7. ' =' → logprob: -2.998293399810791
    8. '           ' → logprob: -3.873293399810791
    9. ' and' → logprob: -3.998293399810791
    10. ' ' → logprob: -4.248293399810791

Token 1094: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15744353830814362
    2. '       ' → logprob: -2.4074435234069824
    3. ' if' → logprob: -3.0324435234069824
    4. 'if' → logprob: -6.032443523406982
    5. ':' → logprob: -7.032443523406982
    6. ' =' → logprob: -7.407443523406982
    7. ',' → logprob: -7.657443523406982
    8. '
' → logprob: -7.782443523406982
    9. '               ' → logprob: -7.907443523406982
    10. '	       ' → logprob: -8.03244400024414

Token 1095: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004265608265995979
    2. '       ' → logprob: -5.504265785217285
    3. '               ' → logprob: -9.879265785217285
    4. ':' → logprob: -10.254265785217285
    5. '   ' → logprob: -10.879265785217285
    6. '```' → logprob: -10.879265785217285
    7. '          ' → logprob: -11.504265785217285
    8. ' if' → logprob: -11.504265785217285
    9. '(' → logprob: -12.004265785217285
    10. ',' → logprob: -12.129265785217285

Token 1096: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2533051073551178
    2. ' if' → logprob: -1.7533050775527954
    3. 'if' (adapté à ' if') → logprob: -3.003305196762085
    4. '       ' → logprob: -8.253305435180664
    5. ' for' → logprob: -8.628305435180664
    6. '               ' → logprob: -8.628305435180664
    7. 'for' → logprob: -9.753305435180664
    8. '            ' → logprob: -10.003305435180664
    9. 'return' → logprob: -10.503305435180664
    10. 'while' → logprob: -10.503305435180664

Token 1097: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.0034622715320438147
    2. '(ord' → logprob: -6.628462314605713
    3. 'sorted' → logprob: -7.003462314605713
    4. ' ord' → logprob: -7.253462314605713
    5. 'j' → logprob: -8.128461837768555
    6. '   ' → logprob: -8.753461837768555
    7. 'i' → logprob: -10.878461837768555
    8. 'ords' → logprob: -11.128461837768555
    9. ' ' → logprob: -11.503461837768555
    10. '(sorted' → logprob: -12.503461837768555

Token 1098: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.00016897499153856188
    2. '(s' → logprob: -9.125168800354004
    3. '(' → logprob: -10.125168800354004
    4. 'sorted' → logprob: -11.375168800354004
    5. '(chars' → logprob: -12.625168800354004
    6. '(c' → logprob: -12.875168800354004
    7. '('' → logprob: -13.750168800354004
    8. '(start' → logprob: -14.625168800354004
    9. ' (' → logprob: -14.875168800354004
    10. '((' → logprob: -15.625168800354004

Token 1099: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.00023071514442563057
    2. '(chars' → logprob: -9.12523078918457
    3. '(i' → logprob: -10.12523078918457
    4. 'chars' → logprob: -11.12523078918457
    5. '_char' → logprob: -11.25023078918457
    6. '(_' → logprob: -11.62523078918457
    7. '(sorted' → logprob: -11.62523078918457
    8. 'Chars' → logprob: -11.75023078918457
    9. '(' → logprob: -11.87523078918457
    10. '_sorted' → logprob: -12.25023078918457

Token 1100: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10039623826742172
    2. '[j' → logprob: -2.350396156311035
    3. ')' → logprob: -8.975396156311035
    4. '[' → logprob: -10.100396156311035
    5. 'i' → logprob: -11.975396156311035
    6. '[
' → logprob: -12.100396156311035
    7. '   ' → logprob: -12.475396156311035
    8. ' [' → logprob: -13.850396156311035
    9. 'j' → logprob: -14.475396156311035
    10. '
' → logprob: -14.475396156311035

Token 1101: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07174386829137802
    2. '])' → logprob: -2.696743965148926
    3. ')-' → logprob: -7.321743965148926
    4. ')==' → logprob: -8.196743965148926
    5. ']' → logprob: -8.571743965148926
    6. '[' → logprob: -8.571743965148926
    7. '])-' → logprob: -9.071743965148926
    8. '')' → logprob: -9.196743965148926
    9. ' )' → logprob: -9.821743965148926
    10. ''])' → logprob: -9.821743965148926

Token 1102: ' -' (ID: 533)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14728449285030365
    2. ' ==' → logprob: -2.522284507751465
    3. ' -' → logprob: -3.147284507751465
    4. '-' → logprob: -4.522284507751465
    5. '<=' → logprob: -6.147284507751465
    6. ' <=' → logprob: -7.522284507751465
    7. '!=' → logprob: -9.397284507751465
    8. ' !=' → logprob: -11.022284507751465
    9. '```' → logprob: -11.147284507751465
    10. '           ' → logprob: -11.272284507751465

Token 1103: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.03806374967098236
    2. ' ord' → logprob: -3.2880637645721436
    3. '(ord' → logprob: -11.163064002990723
    4. 'ordin' → logprob: -12.288064002990723
    5. 'ords' → logprob: -13.663064002990723
    6. 'orde' → logprob: -14.288064002990723
    7. 'ordre' → logprob: -14.663064002990723
    8. 'ordinal' → logprob: -15.163064002990723
    9. '_ord' → logprob: -15.788064002990723
    10. '   ' → logprob: -15.913064002990723

Token 1104: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -2.7014437364414334e-05
    2. 'sorted' → logprob: -10.87502670288086
    3. '(' → logprob: -11.87502670288086
    4. ' (' → logprob: -14.87502670288086
    5. ' sorted' → logprob: -15.00002670288086
    6. '(s' → logprob: -16.12502670288086
    7. '(
' → logprob: -16.37502670288086
    8. '('' → logprob: -17.62502670288086
    9. '[' → logprob: -17.62502670288086
    10. '.sorted' → logprob: -17.75002670288086

Token 1105: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -2.7848862373502925e-05
    2. '_sorted' → logprob: -10.625027656555176
    3. '(chars' → logprob: -13.375027656555176
    4. '(sorted' → logprob: -14.500027656555176
    5. 'sorted' → logprob: -14.750027656555176
    6. 'chars' → logprob: -15.250027656555176
    7. '_coords' → logprob: -15.500027656555176
    8. '_' → logprob: -15.625027656555176
    9. ')' → logprob: -16.250028610229492
    10. 'Chars' → logprob: -16.875028610229492

Token 1106: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.745069499127567e-05
    2. '[j' → logprob: -9.50008773803711
    3. '[' → logprob: -12.12508773803711
    4. ')' → logprob: -13.00008773803711
    5. 'i' → logprob: -13.50008773803711
    6. '[
' → logprob: -13.75008773803711
    7. '
' → logprob: -13.87508773803711
    8. '   ' → logprob: -14.25008773803711
    9. '{i' → logprob: -14.75008773803711
    10. ',i' → logprob: -16.00008773803711

Token 1107: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007491135620512068
    2. '])' → logprob: -7.875749111175537
    3. '==' → logprob: -9.625749588012695
    4. ' )' → logprob: -10.000749588012695
    5. ')==' → logprob: -10.000749588012695
    6. ')<=' → logprob: -10.125749588012695
    7. ')+' → logprob: -10.375749588012695
    8. '<=' → logprob: -10.500749588012695
    9. '）' → logprob: -10.875749588012695
    10. ']' → logprob: -10.875749588012695

Token 1108: ' !=' (ID: 1666)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5460221767425537
    2. '<=' → logprob: -1.1710221767425537
    3. '==' → logprob: -3.4210221767425537
    4. ' !=' → logprob: -3.4210221767425537
    5. ' ==' → logprob: -3.6710221767425537
    6. '!=' → logprob: -4.796022415161133
    7. '>' → logprob: -5.171022415161133
    8. ' >' → logprob: -5.171022415161133
    9. ')' → logprob: -9.421022415161133
    10. '```' → logprob: -10.171022415161133

Token 1109: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007707939948886633
    2. ' j' → logprob: -7.625770568847656
    3. '(j' → logprob: -8.250770568847656
    4. '   ' → logprob: -11.125770568847656
    5. ' (' → logprob: -12.250770568847656
    6. ' ' → logprob: -14.000770568847656
    7. '	j' → logprob: -14.250770568847656
    8. '(' → logprob: -14.875770568847656
    9. '    ' → logprob: -16.000770568847656
    10. '[j' → logprob: -16.625770568847656

Token 1110: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4321325719356537
    2. ' -' → logprob: -1.057132601737976
    3. '-i' → logprob: -5.682132720947266
    4. '   ' → logprob: -12.182132720947266
    5. ' ' → logprob: -12.932132720947266
    6. 'i' → logprob: -13.182132720947266
    7. '```' → logprob: -13.182132720947266
    8. '-j' → logprob: -13.432132720947266
    9. '[i' → logprob: -14.057132720947266
    10. '[' → logprob: -14.432132720947266

Token 1111: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.024604277219623e-05
    2. ' i' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.25004005432129
    4. ' ' → logprob: -17.12504005432129
    5. '  ' → logprob: -18.12504005432129
    6. '	i' → logprob: -18.37504005432129
    7. '```' → logprob: -19.25004005432129
    8. '    ' → logprob: -19.50004005432129
    9. '
' → logprob: -19.50004005432129
    10. '<|end|>' → logprob: -19.62504005432129

Token 1112: ':
' (ID: 734)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8680915236473083
    2. ' +' → logprob: -1.3680915832519531
    3. ':' → logprob: -1.7430915832519531
    4. '           ' → logprob: -2.243091583251953
    5. '               ' → logprob: -3.618091583251953
    6. ':
' → logprob: -4.368091583251953
    7. '       ' → logprob: -6.618091583251953
    8. ')' → logprob: -6.993091583251953
    9. ':return' → logprob: -7.493091583251953
    10. '):' → logprob: -7.743091583251953

Token 1113: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12874649465084076
    2. ':' → logprob: -2.253746509552002
    3. '           ' → logprob: -4.628746509552002
    4. ')' → logprob: -6.253746509552002
    5. ':
' → logprob: -6.628746509552002
    6. '):' → logprob: -7.378746509552002
    7. '            ' → logprob: -7.753746509552002
    8. ' :' → logprob: -8.378746032714844
    9. ' or' → logprob: -8.378746032714844
    10. '                ' → logprob: -8.753746032714844

Token 1114: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8738482594490051
    2. '           ' → logprob: -0.9988482594490051
    3. '               ' → logprob: -2.1238481998443604
    4. 'return' (adapté à ' return') → logprob: -2.3738481998443604
    5. '            ' → logprob: -7.1238484382629395
    6. '                   ' → logprob: -8.123847961425781
    7. ' ' → logprob: -8.498847961425781
    8. '                ' → logprob: -9.123847961425781
    9. '   ' → logprob: -9.373847961425781
    10. ' 
' → logprob: -9.998847961425781

Token 1115: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.005375691689550877
    2. '10' → logprob: -5.255375862121582
    3. ' float' → logprob: -9.130375862121582
    4. '100' → logprob: -10.630375862121582
    5. 'int' → logprob: -12.255375862121582
    6. 'None' → logprob: -13.005375862121582
    7. '   ' → logprob: -14.255375862121582
    8. '1' → logprob: -14.255375862121582
    9. ' ' → logprob: -15.255375862121582
    10. '999' → logprob: -15.380375862121582

Token 1116: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.030908145010471344
    2. ''in' → logprob: -3.5309081077575684
    3. ''' → logprob: -7.405908107757568
    4. 'inf' → logprob: -7.905908107757568
    5. ''il' → logprob: -10.280908584594727
    6. ''inc' → logprob: -10.530908584594727
    7. ''en' → logprob: -11.155908584594727
    8. ''ex' → logprob: -11.280908584594727
    9. ''op' → logprob: -11.780908584594727
    10. ''information' → logprob: -12.030908584594727

Token 1117: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -9.088346359931165e-07
    2. ''' → logprob: -14.500000953674316
    3. ''in' → logprob: -15.125000953674316
    4. 'in' → logprob: -16.0
    5. '-inf' → logprob: -18.5
    6. 'INF' → logprob: -18.625
    7. ' inf' → logprob: -18.75
    8. '100' → logprob: -19.25
    9. 'info' → logprob: -19.375
    10. '{' → logprob: -19.875

Token 1118: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.47709065675735474
    2. ')' → logprob: -0.9770906567573547
    3. '           ' → logprob: -5.977090835571289
    4. '')
' → logprob: -8.352090835571289
    5. '               ' → logprob: -9.477090835571289
    6. ''):
' → logprob: -9.977090835571289
    7. '       ' → logprob: -10.477090835571289
    8. ')')
' → logprob: -11.102090835571289
    9. '}' → logprob: -11.227090835571289
    10. ' ')' → logprob: -11.477090835571289

Token 1119: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5602014064788818
    2. '<|end|>' → logprob: -1.5602014064788818
    3. '       ' → logprob: -2.060201406478882
    4. ')' → logprob: -2.560201406478882
    5. '        ' → logprob: -6.560201644897461
    6. '   ' → logprob: -6.560201644897461
    7. '<|end|>' → logprob: -6.810201644897461
    8. '		' → logprob: -6.935201644897461
    9. '               ' → logprob: -7.310201644897461
    10. ' 
' → logprob: -7.310201644897461

Token 1120: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9398890137672424
    2. '           ' → logprob: -0.9398890137672424
    3. '
' → logprob: -2.1898889541625977
    4. '\n' → logprob: -3.8148889541625977
    5. '        
' → logprob: -4.064888954162598
    6. '    
' → logprob: -4.064888954162598
    7. ' 
' → logprob: -4.314888954162598
    8. ')' → logprob: -4.814888954162598
    9. '   ' → logprob: -4.939888954162598
    10. 'return' → logprob: -5.064888954162598

Token 1121: ' interval' (ID: 17116)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18506520986557007
    2. ' ' → logprob: -2.810065269470215
    3. ')' → logprob: -2.935065269470215
    4. '
' → logprob: -4.560065269470215
    5. ' return' → logprob: -4.560065269470215
    6. '0' → logprob: -4.560065269470215
    7. '       ' → logprob: -4.935065269470215
    8. '1' → logprob: -5.810065269470215
    9. ' 
' → logprob: -5.935065269470215
    10. '            ' → logprob: -6.185065269470215

Token 1122: 'le' (ID: 282)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9439796209335327
    2. 's' → logprob: -2.1939797401428223
    3. '_' → logprob: -2.4439797401428223
    4. '   ' → logprob: -2.5689797401428223
    5. ' not' → logprob: -2.9439797401428223
    6. '           ' → logprob: -3.0689797401428223
    7. ')' → logprob: -3.0689797401428223
    8. ' =' → logprob: -3.1939797401428223
    9. '_max' → logprob: -3.5689797401428223
    10. '_cost' → logprob: -3.8189797401428223

Token 1123: ' discontinu' (ID: 135891)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1124: ' interdit' (ID: 129427)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1125: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1126: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11948353052139282
    2. '       ' → logprob: -2.369483470916748
    3. ')' → logprob: -4.244483470916748
    4. '
' → logprob: -7.119483470916748
    5. '        
' → logprob: -7.369483470916748
    6. '               ' → logprob: -7.494483470916748
    7. '   ' → logprob: -7.619483470916748
    8. 'return' → logprob: -7.869483470916748
    9. '\n' → logprob: -8.369483947753906
    10. '```' → logprob: -8.369483947753906

Token 1127: ' length' (ID: 5517)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7154019474983215
    2. '           ' → logprob: -0.7154019474983215
    3. '        
' → logprob: -4.715402126312256
    4. ' 
' → logprob: -6.090402126312256
    5. '            
' → logprob: -6.465402126312256
    6. '        ' → logprob: -6.590402126312256
    7. '    
' → logprob: -6.715402126312256
    8. '
' → logprob: -6.840402126312256
    9. '   ' → logprob: -7.090402126312256
    10. '	' → logprob: -7.590402126312256

Token 1128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5234480500221252
    2. '=' → logprob: -0.8984480500221252
    3. '       ' → logprob: -9.14844799041748
    4. ' +=' → logprob: -9.77344799041748
    5. '           ' → logprob: -9.77344799041748
    6. '   ' → logprob: -10.27344799041748
    7. '        ' → logprob: -11.14844799041748
    8. '    ' → logprob: -11.27344799041748
    9. ' if' → logprob: -11.39844799041748
    10. '            ' → logprob: -12.27344799041748

Token 1129: ' j' (ID: 441)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0012986884685233235
    2. '           ' → logprob: -7.376298904418945
    3. ' ' → logprob: -7.501298904418945
    4. '0' → logprob: -10.376298904418945
    5. '   ' → logprob: -10.751298904418945
    6. 'prefix' → logprob: -10.876298904418945
    7. '               ' → logprob: -11.501298904418945
    8. '       ' → logprob: -11.626298904418945
    9. '1' → logprob: -12.001298904418945
    10. '            ' → logprob: -12.126298904418945

Token 1130: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7359545230865479
    2. ' -' → logprob: -0.7359545230865479
    3. ']' → logprob: -4.360954284667969
    4. '+' → logprob: -4.485954284667969
    5. ')' → logprob: -5.485954284667969
    6. '-i' → logprob: -5.860954284667969
    7. 'i' → logprob: -6.360954284667969
    8. '[' → logprob: -6.735954284667969
    9. '<|end|>' → logprob: -6.735954284667969
    10. '       ' → logprob: -6.860954284667969

Token 1131: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018153570592403412
    2. ' i' → logprob: -4.018153667449951
    3. ' ' → logprob: -13.643153190612793
    4. '<|end|>' → logprob: -14.018153190612793
    5. '	i' → logprob: -14.393153190612793
    6. 'j' → logprob: -16.14315414428711
    7. '<|end|>' → logprob: -16.14315414428711
    8. '_i' → logprob: -16.26815414428711
    9. '   ' → logprob: -16.26815414428711
    10. '           ' → logprob: -16.39315414428711

Token 1132: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28309667110443115
    2. ' +' → logprob: -1.4080966711044312
    3. '           ' → logprob: -6.283096790313721
    4. '               ' → logprob: -10.908096313476562
    5. '```' → logprob: -11.658096313476562
    6. '       ' → logprob: -12.158096313476562
    7. '            ' → logprob: -12.408096313476562
    8. ' if' → logprob: -12.533096313476562
    9. '>' → logprob: -12.533096313476562
    10. '          ' → logprob: -12.658096313476562

Token 1133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016158436483237892
    2. ' ' → logprob: -8.750161170959473
    3. '   ' → logprob: -13.625161170959473
    4. '           ' → logprob: -14.500161170959473
    5. '```' → logprob: -14.500161170959473
    6. '2' → logprob: -15.000161170959473
    7. '3' → logprob: -15.125161170959473
    8. '
' → logprob: -16.75016212463379
    9. '       ' → logprob: -17.25016212463379
    10. '               ' → logprob: -17.87516212463379

Token 1134: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8676432371139526
    2. ' if' → logprob: -1.1176432371139526
    3. '
' → logprob: -1.4926432371139526
    4. 'if' → logprob: -4.867643356323242
    5. ')' → logprob: -5.492643356323242
    6. ' +' → logprob: -5.492643356323242
    7. '       ' → logprob: -5.617643356323242
    8. ',' → logprob: -5.992643356323242
    9. '               ' → logprob: -6.992643356323242
    10. '            
' → logprob: -7.242643356323242

Token 1135: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0060136448591947556
    2. '               ' → logprob: -5.756013870239258
    3. '       ' → logprob: -6.256013870239258
    4. ' if' → logprob: -7.756013870239258
    5. '
' → logprob: -8.381013870239258
    6. '```' → logprob: -9.256013870239258
    7. '   ' → logprob: -10.006013870239258
    8. ')' → logprob: -10.756013870239258
    9. '            
' → logprob: -10.881013870239258
    10. '	       ' → logprob: -11.131013870239258

Token 1136: ' total' (ID: 3609)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20608194172382355
    2. '           ' → logprob: -1.8310819864273071
    3. ' if' → logprob: -3.7060818672180176
    4. '       ' → logprob: -6.956081867218018
    5. '   ' → logprob: -8.706082344055176
    6. '```' → logprob: -8.706082344055176
    7. 'return' → logprob: -9.581082344055176
    8. ' ' → logprob: -10.956082344055176
    9. 'count' → logprob: -11.456082344055176
    10. 'for' → logprob: -12.081082344055176

Token 1137: '_occ' (ID: 180107)
  Prédit: '_occ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_occ' → logprob: -0.44791504740715027
    2. '_count' → logprob: -1.0729150772094727
    3. '_counts' → logprob: -5.072915077209473
    4. '=' → logprob: -5.322915077209473
    5. ' =' → logprob: -5.947915077209473
    6. '_oc' → logprob: -6.197915077209473
    7. '_' → logprob: -6.572915077209473
    8. 'count' → logprob: -7.447915077209473
    9. '_chars' → logprob: -7.947915077209473
    10. '_freq' → logprob: -8.322915077209473

Token 1138: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.0016462645726278424
    2. 'urr' → logprob: -7.501646041870117
    3. 's' → logprob: -8.126646041870117
    4. 'urs' → logprob: -8.251646041870117
    5. 'urrence' → logprob: -8.876646041870117
    6. 'ur' → logprob: -9.626646041870117
    7. '_count' → logprob: -9.626646041870117
    8. '[' → logprob: -9.626646041870117
    9. 'urances' → logprob: -10.126646041870117
    10. '```' → logprob: -10.251646041870117

Token 1139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28203636407852173
    2. '=' → logprob: -1.407036304473877
    3. '           ' → logprob: -7.157036304473877
    4. 'prefix' → logprob: -10.407036781311035
    5. ' ' → logprob: -11.282036781311035
    6. ')' → logprob: -11.407036781311035
    7. '       ' → logprob: -11.532036781311035
    8. '   ' → logprob: -12.532036781311035
    9. ']' → logprob: -12.532036781311035
    10. '
' → logprob: -12.657036781311035

Token 1140: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.10023697465658188
    2. ' prefix' → logprob: -2.3502368927001953
    3. '           ' → logprob: -10.600236892700195
    4. '   ' → logprob: -12.475236892700195
    5. '(prefix' → logprob: -13.850236892700195
    6. '               ' → logprob: -15.850236892700195
    7. 'sum' → logprob: -15.975236892700195
    8. '
' → logprob: -16.350236892700195
    9. '       ' → logprob: -16.600236892700195
    10. ' ' → logprob: -17.100236892700195

Token 1141: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.4849443838757e-06
    2. 'sum' → logprob: -13.500004768371582
    3. '_SUM' → logprob: -13.750004768371582
    4. '_s' → logprob: -14.125004768371582
    5. 'Sum' → logprob: -15.125004768371582
    6. '[' → logprob: -15.875004768371582
    7. '```' → logprob: -16.125003814697266
    8. '_len' → logprob: -16.250003814697266
    9. '_length' → logprob: -16.250003814697266
    10. '[_' → logprob: -16.625003814697266

Token 1142: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0003850325592793524
    2. 'j' → logprob: -8.000385284423828
    3. '[i' → logprob: -10.750385284423828
    4. '[' → logprob: -10.750385284423828
    5. '```' → logprob: -12.500385284423828
    6. ' j' → logprob: -14.375385284423828
    7. '   ' → logprob: -14.750385284423828
    8. '][' → logprob: -14.875385284423828
    9. '\[' → logprob: -15.250385284423828
    10. ']' → logprob: -15.875385284423828

Token 1143: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003819332632701844
    2. ' +' → logprob: -8.125381469726562
    3. ']' → logprob: -10.250381469726562
    4. '1' → logprob: -10.500381469726562
    5. '[' → logprob: -11.375381469726562
    6. ']+' → logprob: -12.250381469726562
    7. '```' → logprob: -12.750381469726562
    8. '-' → logprob: -13.000381469726562
    9. '+
' → logprob: -14.500381469726562
    10. '   ' → logprob: -15.375381469726562

Token 1144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. '2' → logprob: -12.375012397766113
    3. '
' → logprob: -12.500012397766113
    4. ' ' → logprob: -12.500012397766113
    5. '   ' → logprob: -15.312512397766113
    6. '```' → logprob: -15.375012397766113
    7. '0' → logprob: -15.875012397766113
    8. '-' → logprob: -16.62501335144043
    9. '

' → logprob: -17.06251335144043
    10. ',' → logprob: -17.37501335144043

Token 1145: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5499469637870789
    2. '-' → logprob: -0.9249469637870789
    3. '           ' → logprob: -4.4249467849731445
    4. '       ' → logprob: -5.1749467849731445
    5. ']' → logprob: -5.4249467849731445
    6. '   ' → logprob: -6.6749467849731445
    7. '[' → logprob: -7.6749467849731445
    8. ')' → logprob: -7.6749467849731445
    9. '        ' → logprob: -7.9249467849731445
    10. '          ' → logprob: -7.9249467849731445

Token 1146: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02354523539543152
    2. '-' → logprob: -3.773545265197754
    3. '-prefix' → logprob: -8.398545265197754
    4. ' ' → logprob: -10.523545265197754
    5. '```' → logprob: -11.023545265197754
    6. '[' → logprob: -12.148545265197754
    7. '   ' → logprob: -12.273545265197754
    8. '       ' → logprob: -12.523545265197754
    9. '        ' → logprob: -12.773545265197754
    10. '-p' → logprob: -13.023545265197754

Token 1147: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0002631238894537091
    2. ' prefix' → logprob: -8.250263214111328
    3. '(prefix' → logprob: -13.250263214111328
    4. '_prefix' → logprob: -16.750263214111328
    5. 'refix' → logprob: -18.875263214111328
    6. '.prefix' → logprob: -19.375263214111328
    7. '-prefix' → logprob: -19.500263214111328
    8. 'PREFIX' → logprob: -20.000263214111328
    9. '```' → logprob: -20.500263214111328
    10. 'prompt' → logprob: -20.875263214111328

Token 1148: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.005307285115122795
    2. '[i' → logprob: -6.005307197570801
    3. '_prefix' → logprob: -6.630307197570801
    4. 'i' → logprob: -7.380307197570801
    5. '_s' → logprob: -8.2553071975708
    6. '_split' → logprob: -8.8803071975708
    7. '```' → logprob: -9.0053071975708
    8. 'prefix' → logprob: -9.5053071975708
    9. '[' → logprob: -10.1303071975708
    10. '_start' → logprob: -10.2553071975708

Token 1149: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.236549335066229e-05
    2. 'i' → logprob: -10.750021934509277
    3. '[j' → logprob: -14.375021934509277
    4. '[' → logprob: -15.500021934509277
    5. '(i' → logprob: -17.000022888183594
    6. '{i' → logprob: -17.125022888183594
    7. '
' → logprob: -18.125022888183594
    8. '```' → logprob: -18.125022888183594
    9. '[
' → logprob: -18.250022888183594
    10. ' [' → logprob: -18.875022888183594

Token 1150: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16293929517269135
    2. '<|end|>' → logprob: -2.5379393100738525
    3. '<|end|>' → logprob: -3.6629393100738525
    4. '           ' → logprob: -4.162939071655273
    5. '       ' → logprob: -4.537939071655273
    6. ')' → logprob: -4.537939071655273
    7. ' ]' → logprob: -6.287939071655273
    8. '+' → logprob: -6.787939071655273
    9. ' ' → logprob: -7.037939071655273
    10. '          ' → logprob: -7.287939071655273

Token 1151: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005360163748264313
    2. '       ' → logprob: -6.130360126495361
    3. '               ' → logprob: -6.880360126495361
    4. '   ' → logprob: -7.130360126495361
    5. '```' → logprob: -7.380360126495361
    6. ' if' → logprob: -7.755360126495361
    7. ')' → logprob: -9.38036060333252
    8. '<|end|>' → logprob: -10.00536060333252
    9. ' return' → logprob: -10.75536060333252
    10. 'if' → logprob: -10.88036060333252

Token 1152: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5038915276527405
    2. 'if' (adapté à ' if') → logprob: -1.0038914680480957
    3. ' if' → logprob: -3.7538914680480957
    4. '   ' → logprob: -5.503891468048096
    5. '       ' → logprob: -6.628891468048096
    6. '```' → logprob: -8.003891944885254
    7. '
' → logprob: -8.628891944885254
    8. 'return' → logprob: -11.253891944885254
    9. ' ' → logprob: -11.878891944885254
    10. '               ' → logprob: -12.253891944885254

Token 1153: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.25192946195602417
    2. ' length' → logprob: -1.501929521560669
    3. '	length' → logprob: -16.376930236816406
    4. ' j' → logprob: -16.751930236816406
    5. '(length' → logprob: -16.876930236816406
    6. 'i' → logprob: -17.626930236816406
    7. '           ' → logprob: -17.751930236816406
    8. '_length' → logprob: -17.751930236816406
    9. 'j' → logprob: -17.876930236816406
    10. ',length' → logprob: -18.251930236816406

Token 1154: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09220284968614578
    2. '>' → logprob: -2.71720290184021
    3. ' ==' → logprob: -3.84220290184021
    4. ' >' → logprob: -7.592202663421631
    5. '=' → logprob: -10.592203140258789
    6. ')' → logprob: -11.967203140258789
    7. '   ' → logprob: -12.342203140258789
    8. '==
' → logprob: -12.342203140258789
    9. ')==' → logprob: -12.342203140258789
    10. '[' → logprob: -12.467203140258789

Token 1155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020854694594163448
    2. ' ' → logprob: -8.500208854675293
    3. '2' → logprob: -12.500208854675293
    4. '   ' → logprob: -14.375208854675293
    5. '=' → logprob: -15.250208854675293
    6. '  ' → logprob: -15.875208854675293
    7. '>' → logprob: -16.125207901000977
    8. '```' → logprob: -16.250207901000977
    9. '
' → logprob: -16.375207901000977
    10. '0' → logprob: -17.937707901000977

Token 1156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.875001907348633
    3. '=' → logprob: -15.500001907348633
    4. '
' → logprob: -16.375001907348633
    5. '```' → logprob: -17.125001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '۱' → logprob: -18.125001907348633
    8. '2' → logprob: -18.375001907348633
    9. '>' → logprob: -18.500001907348633
    10. '１' → logprob: -19.000001907348633

Token 1157: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.36971160769462585
    2. ':' → logprob: -1.2447116374969482
    3. '               ' → logprob: -4.244711399078369
    4. '           ' → logprob: -5.244711399078369
    5. ':return' → logprob: -6.994711399078369
    6. ' and' → logprob: -8.619711875915527
    7. '       ' → logprob: -9.494711875915527
    8. ',' → logprob: -10.369711875915527
    9. '	       ' → logprob: -10.369711875915527
    10. '):
' → logprob: -10.869711875915527

Token 1158: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006971848197281361
    2. 'return' → logprob: -7.625697135925293
    3. ' return' → logprob: -8.500697135925293
    4. '           ' → logprob: -12.750697135925293
    5. '       ' → logprob: -13.250697135925293
    6. '                   ' → logprob: -15.250697135925293
    7. '```' → logprob: -15.250697135925293
    8. '
' → logprob: -15.875697135925293
    9. '{return' → logprob: -16.62569808959961
    10. '                ' → logprob: -16.62569808959961

Token 1159: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06104905903339386
    2. ' return' → logprob: -3.561048984527588
    3. '               ' → logprob: -3.811048984527588
    4. 'total' → logprob: -5.061048984527588
    5. '                   ' → logprob: -6.311048984527588
    6. ' total' → logprob: -8.061049461364746
    7. '           ' → logprob: -8.686049461364746
    8. '
' → logprob: -11.061049461364746
    9. '   ' → logprob: -11.061049461364746
    10. '                
' → logprob: -12.311049461364746

Token 1160: ' pas' (ID: 2173)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00018613664724398404
    2. '               ' → logprob: -9.0001859664917
    3. ' return' → logprob: -10.2501859664917
    4. '           ' → logprob: -10.6251859664917
    5. '                   ' → logprob: -13.1251859664917
    6. 'total' → logprob: -14.3751859664917
    7. '   ' → logprob: -15.8751859664917
    8. '#' → logprob: -16.125186920166016
    9. '```' → logprob: -16.250186920166016
    10. 'length' → logprob: -18.500186920166016

Token 1161: ' possible' (ID: 4149)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0768696069717407
    2. 'de' → logprob: -1.2018696069717407
    3. '   ' → logprob: -2.201869487762451
    4. 'def' → logprob: -2.826869487762451
    5. 's' → logprob: -2.951869487762451
    6. 'é' → logprob: -3.701869487762451
    7. '       ' → logprob: -4.201869487762451
    8. 'd' → logprob: -4.326869487762451
    9. 'e' → logprob: -4.326869487762451
    10. 'diff' → logprob: -5.201869487762451

Token 1162: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23123055696487427
    2. '           ' → logprob: -2.3562304973602295
    3. ' return' → logprob: -3.6062304973602295
    4. ':' → logprob: -3.6062304973602295
    5. ':
' → logprob: -4.231230735778809
    6. 'return' → logprob: -4.231230735778809
    7. '                   ' → logprob: -4.231230735778809
    8. '                ' → logprob: -5.731230735778809
    9. ':return' → logprob: -5.731230735778809
    10. '   ' → logprob: -6.481230735778809

Token 1163: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.6678299307823181
    2. 'compress' → logprob: -1.917829990386963
    3. ' comp' → logprob: -2.042829990386963
    4. 'faire' → logprob: -2.917829990386963
    5. ' reg' → logprob: -3.167829990386963
    6. 'ré' → logprob: -3.417829990386963
    7. 'reg' → logprob: -4.042829990386963
    8. 'r' → logprob: -4.917829990386963
    9. ' compr' → logprob: -5.042829990386963
    10. 'split' → logprob: -5.542829990386963

Token 1164: 'resser' (ID: 48872)
  Prédit: 'resser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resser' → logprob: -0.07091990858316422
    2. 'r' → logprob: -3.445919990539551
    3. 'ress' → logprob: -3.570919990539551
    4. 'rim' → logprob: -6.445919990539551
    5. 'resse' → logprob: -6.570919990539551
    6. 'rer' → logprob: -7.320919990539551
    7. 'primer' → logprob: -7.445919990539551
    8. 'ter' → logprob: -7.570919990539551
    9. 'ressor' → logprob: -7.820919990539551
    10. 'rom' → logprob: -7.820919990539551

Token 1165: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11016007512807846
    2. '           ' → logprob: -3.4851601123809814
    3. ' return' → logprob: -3.6101601123809814
    4. ':
' → logprob: -3.7351601123809814
    5. 'return' → logprob: -4.485159873962402
    6. '                   ' → logprob: -5.110159873962402
    7. ':' → logprob: -6.360159873962402
    8. ' :
' → logprob: -7.360159873962402
    9. '   ' → logprob: -7.485159873962402
    10. '       ' → logprob: -7.735159873962402

Token 1166: ' doit' (ID: 21822)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0357925184071064
    2. 'return' → logprob: -3.910792589187622
    3. '               ' → logprob: -4.535792350769043
    4. '           ' → logprob: -5.910792350769043
    5. ' length' → logprob: -6.785792350769043
    6. '                   ' → logprob: -8.785792350769043
    7. '                ' → logprob: -8.785792350769043
    8. ' ' → logprob: -8.910792350769043
    9. 'length' → logprob: -9.785792350769043
    10. '            ' → logprob: -10.285792350769043

Token 1167: ' écrire' (ID: 118651)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5940863490104675
    2. '               ' → logprob: -1.4690864086151123
    3. 'ret' → logprob: -2.2190864086151123
    4. '           ' → logprob: -2.8440864086151123
    5. '                   ' → logprob: -4.844086170196533
    6. '   ' → logprob: -5.094086170196533
    7. '                ' → logprob: -5.469086170196533
    8. 'être' → logprob: -5.719086170196533
    9. 'prendre' → logprob: -6.094086170196533
    10. '       ' → logprob: -6.344086170196533

Token 1168: ' tous' (ID: 10688)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.012892895378172398
    2. ' total' → logprob: -4.762892723083496
    3. '           ' → logprob: -5.762892723083496
    4. '               ' → logprob: -7.887892723083496
    5. 'prefix' → logprob: -8.762892723083496
    6. 'occ' → logprob: -9.137892723083496
    7. '
' → logprob: -9.387892723083496
    8. 'tokens' → logprob: -9.512892723083496
    9. '```' → logprob: -10.012892723083496
    10. '(total' → logprob: -10.137892723083496

Token 1169: ' les' (ID: 1341)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.7308060526847839
    2. ' les' → logprob: -1.3558061122894287
    3. 'les' → logprob: -1.7308061122894287
    4. '_occ' → logprob: -3.6058061122894287
    5. 'count' → logprob: -4.23080587387085
    6. 'ocs' → logprob: -5.10580587387085
    7. ' occurrences' → logprob: -5.35580587387085
    8. 'tokens' → logprob: -5.60580587387085
    9. ' ' → logprob: -5.85580587387085
    10. ' count' → logprob: -6.10580587387085

Token 1170: ' occurrences' (ID: 108073)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.6004900336265564
    2. ' caractères' → logprob: -1.1004900932312012
    3. 'car' → logprob: -2.725490093231201
    4. 'characters' → logprob: -4.350490093231201
    5. 'count' → logprob: -4.725490093231201
    6. ' caracteres' → logprob: -4.850490093231201
    7. 'chars' → logprob: -5.100490093231201
    8. ' occurrences' → logprob: -5.225490093231201
    9. ' caract' → logprob: -5.475490093231201
    10. 'c' → logprob: -6.475490093231201

Token 1171: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.42339402437210083
    2. '           ' → logprob: -1.298393964767456
    3. 'return' → logprob: -3.673393964767456
    4. ' return' → logprob: -4.173394203186035
    5. '(total' → logprob: -5.048394203186035
    6. '```' → logprob: -5.048394203186035
    7. 'total' → logprob: -5.298394203186035
    8. '
' → logprob: -5.423394203186035
    9. ' ' → logprob: -6.798394203186035
    10. ',' → logprob: -6.923394203186035

Token 1172: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0744112879037857
    2. '                   ' → logprob: -2.824411392211914
    3. ' return' → logprob: -4.824411392211914
    4. ' total' → logprob: -6.324411392211914
    5. 'return' → logprob: -7.699411392211914
    6. '           ' → logprob: -7.824411392211914
    7. ' length' → logprob: -8.199411392211914
    8. '(total' → logprob: -8.324411392211914
    9. ' (' → logprob: -8.449411392211914
    10. '                       ' → logprob: -8.574411392211914

Token 1173: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.402186781167984
    2. 'return' (adapté à ' return') → logprob: -1.1521867513656616
    3. '               ' → logprob: -5.027186870574951
    4. ' total' → logprob: -5.402186870574951
    5. 'total' → logprob: -5.777186870574951
    6. '                   ' → logprob: -6.902186870574951
    7. '           ' → logprob: -10.777186393737793
    8. '   ' → logprob: -12.402186393737793
    9. ' ' → logprob: -12.777186393737793
    10. '                       ' → logprob: -13.652186393737793

Token 1174: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0011708177626132965
    2. ' total' → logprob: -6.751170635223389
    3. '           ' → logprob: -14.501171112060547
    4. '               ' → logprob: -16.126171112060547
    5. '                   ' → logprob: -18.876171112060547
    6. '	total' → logprob: -19.376171112060547
    7. '$total' → logprob: -20.376171112060547
    8. '   ' → logprob: -21.126171112060547
    9. '
' → logprob: -21.376171112060547
    10. '(total' → logprob: -21.501171112060547

Token 1175: '_occ' (ID: 180107)
  Prédit: '_occ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_occ' → logprob: -6.539801688631997e-05
    2. '_oc' → logprob: -9.750065803527832
    3. 'occ' → logprob: -13.000065803527832
    4. '_OCC' → logprob: -13.125065803527832
    5. '_sum' → logprob: -13.875065803527832
    6. '```' → logprob: -14.375065803527832
    7. '_' → logprob: -15.250065803527832
    8. ''_' → logprob: -15.625065803527832
    9. '[_' → logprob: -15.875065803527832
    10. '[' → logprob: -16.125064849853516

Token 1176: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.0009128939709626138
    2. 'ur' → logprob: -7.250912666320801
    3. 'urr' → logprob: -8.7509126663208
    4. 'urrence' → logprob: -11.2509126663208
    5. 'curr' → logprob: -11.7509126663208
    6. 'urrencies' → logprob: -11.7509126663208
    7. 'urances' → logprob: -12.0009126663208
    8. 'r' → logprob: -12.1259126663208
    9. 'u' → logprob: -14.0009126663208
    10. '_occ' → logprob: -14.2509126663208

Token 1177: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009334942442364991
    2. 'else' → logprob: -7.250933647155762
    3. ' else' → logprob: -9.000933647155762
    4. '
' → logprob: -9.875933647155762
    5. '		' → logprob: -11.625933647155762
    6. 'return' → logprob: -11.875933647155762
    7. '	       ' → logprob: -12.000933647155762
    8. '       ' → logprob: -12.000933647155762
    9. '            
' → logprob: -12.125933647155762
    10. '               ' → logprob: -12.500933647155762

Token 1178: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.041768160182983e-05
    2. '		' → logprob: -10.500080108642578
    3. '```' → logprob: -11.375080108642578
    4. '       ' → logprob: -11.875080108642578
    5. ')' → logprob: -12.125080108642578
    6. 'return' → logprob: -12.250080108642578
    7. '            
' → logprob: -12.500080108642578
    8. '​' → logprob: -12.500080108642578
    9. 'else' → logprob: -12.625080108642578
    10. '               ' → logprob: -12.625080108642578

Token 1179: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09744900465011597
    2. 'else' (adapté à ' else') → logprob: -2.8474490642547607
    3. ' else' → logprob: -3.7224490642547607
    4. '       ' → logprob: -4.972448825836182
    5. 'return' → logprob: -6.222448825836182
    6. '               ' → logprob: -6.847448825836182
    7. ':
' → logprob: -7.972448825836182
    8. '
' → logprob: -9.47244930267334
    9. ':' → logprob: -9.59744930267334
    10. ' return' → logprob: -9.59744930267334

Token 1180: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003960855305194855
    2. '           ' → logprob: -6.128961086273193
    3. ':' → logprob: -7.128961086273193
    4. ':
' → logprob: -7.128961086273193
    5. ' return' → logprob: -9.503960609436035
    6. 'return' → logprob: -10.128960609436035
    7. ':return' → logprob: -10.878960609436035
    8. '       ' → logprob: -11.003960609436035
    9. '              ' → logprob: -12.753960609436035
    10. '	       ' → logprob: -12.878960609436035

Token 1181: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21491892635822296
    2. '           ' → logprob: -1.9649189710617065
    3. 'return' → logprob: -2.964918851852417
    4. '       ' → logprob: -6.464919090270996
    5. ' return' → logprob: -9.714919090270996
    6. '3' → logprob: -10.589919090270996
    7. '   ' → logprob: -11.339919090270996
    8. '```' → logprob: -12.589919090270996
    9. '{return' → logprob: -13.964919090270996
    10. '             ' → logprob: -14.964919090270996

Token 1182: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002346992027014494
    2. ' return' → logprob: -6.252346992492676
    3. '               ' → logprob: -8.002346992492676
    4. '3' → logprob: -9.502346992492676
    5. '           ' → logprob: -12.002346992492676
    6. '
' → logprob: -13.377346992492676
    7. '                   ' → logprob: -14.502346992492676
    8. '```' → logprob: -15.127346992492676
    9. '   ' → logprob: -15.377346992492676
    10. ' ' → logprob: -15.877346992492676

Token 1183: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -5.061676347395405e-05
    2. '3' → logprob: -10.25005054473877
    3. '               ' → logprob: -11.25005054473877
    4. ' return' → logprob: -13.12505054473877
    5. '           ' → logprob: -16.500051498413086
    6. '
' → logprob: -17.625051498413086
    7. '                   ' → logprob: -17.875051498413086
    8. ':return' → logprob: -19.500051498413086
    9. '   ' → logprob: -20.000051498413086
    10. '```' → logprob: -20.125051498413086

Token 1184: ' comp' (ID: 1050)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08245986700057983
    2. ' return' → logprob: -2.8324599266052246
    3. '=' → logprob: -5.582459926605225
    4. '   ' → logprob: -5.582459926605225
    5. '               ' → logprob: -5.582459926605225
    6. 'ret' → logprob: -6.082459926605225
    7. ' =' → logprob: -6.332459926605225
    8. '           ' → logprob: -6.832459926605225
    9. ':return' → logprob: -7.707459926605225
    10. '       ' → logprob: -7.832459926605225

Token 1185: 'resse' (ID: 15994)
  Prédit: 'resse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resse' → logprob: -0.8641005754470825
    2. 'r' → logprob: -1.4891005754470825
    3. 'lete' → logprob: -1.7391005754470825
    4. 'ress' → logprob: -2.364100456237793
    5. 'let' → logprob: -3.739100456237793
    6. 'ressed' → logprob: -3.739100456237793
    7. 'rim' → logprob: -4.614100456237793
    8. 'ute' → logprob: -4.864100456237793
    9. 'lette' → logprob: -5.614100456237793
    10. '=' → logprob: -6.364100456237793

Token 1186: ' en' (ID: 469)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.44792670011520386
    2. '3' → logprob: -1.0729267597198486
    3. 'return' → logprob: -4.8229265213012695
    4. ' ' → logprob: -5.4479265213012695
    5. ' =' → logprob: -5.8229265213012695
    6. ' return' → logprob: -6.6979265213012695
    7. '   ' → logprob: -7.4479265213012695
    8. '=' → logprob: -7.5729265213012695
    9. '           ' → logprob: -8.07292652130127
    10. '                   ' → logprob: -8.32292652130127

Token 1187: ' x' (ID: 1215)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.8908587662735954e-05
    2. ' ' → logprob: -11.000019073486328
    3. '   ' → logprob: -13.875019073486328
    4. 'length' → logprob: -14.250019073486328
    5. '               ' → logprob: -15.500019073486328
    6. '           ' → logprob: -16.125019073486328
    7. '                   ' → logprob: -16.375019073486328
    8. '```' → logprob: -16.500019073486328
    9. '
' → logprob: -17.500019073486328
    10. 'len' → logprob: -17.625019073486328

Token 1188: '-y' (ID: 18102)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0027104844339191914
    2. ''-' → logprob: -6.627710342407227
    3. ' -' → logprob: -6.752710342407227
    4. '"-' → logprob: -9.002710342407227
    5. '-
' → logprob: -10.127710342407227
    6. ' '-'' → logprob: -11.752710342407227
    7. '
' → logprob: -11.752710342407227
    8. '   ' → logprob: -12.127710342407227
    9. '-y' → logprob: -12.127710342407227
    10. ',' → logprob: -12.502710342407227

Token 1189: ' avec' (ID: 3937)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4529649019241333
    2. '               ' → logprob: -1.4529649019241333
    3. ' (' → logprob: -1.9529649019241333
    4. ' =' → logprob: -2.0779647827148438
    5. '   ' → logprob: -2.8279647827148438
    6. ')' → logprob: -3.4529647827148438
    7. ' return' → logprob: -3.5779647827148438
    8. '=' → logprob: -3.7029647827148438
    9. ' +' → logprob: -3.8279647827148438
    10. ':' → logprob: -3.9529647827148438

Token 1190: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.329167369287461e-05
    2. ' ' → logprob: -9.750093460083008
    3. '               ' → logprob: -10.875093460083008
    4. '                   ' → logprob: -11.875093460083008
    5. 'length' → logprob: -12.375093460083008
    6. 'return' → logprob: -13.500093460083008
    7. '   ' → logprob: -14.250093460083008
    8. 'len' → logprob: -14.500093460083008
    9. '```' → logprob: -14.750093460083008
    10. '                ' → logprob: -14.750093460083008

Token 1191: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.3438327843905427e-05
    2. 'length' → logprob: -11.50002384185791
    3. ' ' → logprob: -11.62502384185791
    4. '   ' → logprob: -13.87502384185791
    5. 'return' → logprob: -13.87502384185791
    6. '               ' → logprob: -14.25002384185791
    7. '```' → logprob: -14.37502384185791
    8. '                   ' → logprob: -15.00002384185791
    9. 'len' → logprob: -15.00002384185791
    10. '           ' → logprob: -15.62502384185791

Token 1192: ' caractères' (ID: 183106)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1193: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008369892835617065
    2. '           ' → logprob: -5.0083699226379395
    3. 'return' → logprob: -6.7583699226379395
    4. ' return' → logprob: -8.008369445800781
    5. '       ' → logprob: -9.383369445800781
    6. ':return' → logprob: -10.883369445800781
    7. '```' → logprob: -11.258369445800781
    8. ')' → logprob: -11.508369445800781
    9. '   ' → logprob: -12.383369445800781
    10. '.' → logprob: -12.633369445800781

Token 1194: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005463610286824405
    2. ' return' → logprob: -8.0005464553833
    3. 'return' → logprob: -9.0005464553833
    4. '                   ' → logprob: -10.3755464553833
    5. ':' → logprob: -11.5005464553833
    6. '       ' → logprob: -11.5005464553833
    7. '           ' → logprob: -11.6255464553833
    8. ':return' → logprob: -11.7505464553833
    9. '```' → logprob: -12.1255464553833
    10. '   ' → logprob: -12.3755464553833

Token 1195: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.34200647473335266
    2. '3' → logprob: -1.3420064449310303
    3. ' return' → logprob: -3.5920064449310303
    4. '               ' → logprob: -7.717006683349609
    5. ' ' → logprob: -8.09200668334961
    6. '                   ' → logprob: -11.09200668334961
    7. '```' → logprob: -11.21700668334961
    8. '   ' → logprob: -12.09200668334961
    9. '           ' → logprob: -12.34200668334961
    10. '
' → logprob: -13.71700668334961

Token 1196: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -18.5
    4. '               ' → logprob: -18.625
    5. '                   ' → logprob: -19.5
    6. '           ' → logprob: -20.5
    7. '۳' → logprob: -20.625
    8. '       ' → logprob: -22.375
    9. ' ' → logprob: -22.375
    10. '                       ' → logprob: -22.5

Token 1197: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '   ' → logprob: -20.125
    4. '۳' → logprob: -20.875
    5. '３' → logprob: -22.0
    6. '
' → logprob: -22.375
    7. '```' → logprob: -22.875
    8. '       ' → logprob: -23.5
    9. '٣' → logprob: -23.5
    10. '           ' → logprob: -23.75

Token 1198: '
        
' (ID: 20417)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1199: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8490051627159119
    2. '       ' → logprob: -0.9740051627159119
    3. 'def' → logprob: -2.9740052223205566
    4. '    
' → logprob: -3.0990052223205566
    5. '<|end|>' → logprob: -3.8490052223205566
    6. '        
' → logprob: -4.099005222320557
    7. '
' → logprob: -4.224005222320557
    8. '```' → logprob: -4.474005222320557
    9. ')' → logprob: -4.974005222320557
    10. ' ' → logprob: -5.974005222320557

Token 1200: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07448000460863113
    2. '       ' → logprob: -3.3244800567626953
    3. '        
' → logprob: -3.6994800567626953
    4. 'def' (adapté à ' def') → logprob: -4.574480056762695
    5. '    
' → logprob: -8.574480056762695
    6. '```' → logprob: -8.574480056762695
    7. '\' → logprob: -9.449480056762695
    8. ')' → logprob: -9.949480056762695
    9. ' def' → logprob: -10.074480056762695
    10. '\n' → logprob: -10.199480056762695

Token 1201: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.09019537270069122
    2. 'dp' → logprob: -3.090195417404175
    3. ' dfs' → logprob: -3.465195417404175
    4. 'solve' → logprob: -5.465195178985596
    5. 'helper' → logprob: -5.840195178985596
    6. 'go' → logprob: -7.215195178985596
    7. ' dp' → logprob: -7.590195178985596
    8. 'f' → logprob: -7.715195178985596
    9. 're' → logprob: -7.965195178985596
    10. ' helper' → logprob: -8.965195655822754

Token 1202: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0003718046355061233
    2. '(' → logprob: -8.875371932983398
    3. '(u' → logprob: -10.125371932983398
    4. '(start' → logprob: -10.125371932983398
    5. '(j' → logprob: -10.375371932983398
    6. '(idx' → logprob: -10.375371932983398
    7. '(s' → logprob: -11.125371932983398
    8. '(index' → logprob: -11.125371932983398
    9. '(pos' → logprob: -11.250371932983398
    10. '(x' → logprob: -11.250371932983398

Token 1203: '):
' (ID: 1883)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6063030958175659
    2. '       ' → logprob: -1.606303095817566
    3. '):
' → logprob: -1.606303095817566
    4. '):' → logprob: -3.8563032150268555
    5. '           ' → logprob: -4.6063032150268555
    6. '   ' → logprob: -5.1063032150268555
    7. '<|end|>' → logprob: -5.6063032150268555
    8. '[i' → logprob: -6.6063032150268555
    9. ':' → logprob: -6.6063032150268555
    10. ',' → logprob: -6.7313032150268555

Token 1204: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19358859956264496
    2. 'if' → logprob: -2.3185884952545166
    3. ' if' → logprob: -2.9435884952545166
    4. '   ' → logprob: -4.068588733673096
    5. '           ' → logprob: -5.818588733673096
    6. ':' → logprob: -6.443588733673096
    7. 'return' → logprob: -6.693588733673096
    8. '```' → logprob: -7.693588733673096
    9. ':return' → logprob: -7.818588733673096
    10. ':
' → logprob: -8.068588256835938

Token 1205: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03216531127691269
    2. ' if' → logprob: -3.657165288925171
    3. '       ' → logprob: -5.28216552734375
    4. '   ' → logprob: -7.28216552734375
    5. '	if' → logprob: -9.78216552734375
    6. '           ' → logprob: -11.15716552734375
    7. ' ' → logprob: -12.78216552734375
    8. '```' → logprob: -13.03216552734375
    9. '
' → logprob: -14.40716552734375
    10. '    ' → logprob: -14.78216552734375

Token 1206: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759429931640625
    2. 'i' → logprob: -0.8259429931640625
    3. 'n' → logprob: -13.950942993164062
    4. ' n' → logprob: -14.075942993164062
    5. '_i' → logprob: -14.325942993164062
    6. '0' → logprob: -14.700942993164062
    7. ')' → logprob: -15.075942993164062
    8. ' ' → logprob: -15.950942993164062
    9. ' =' → logprob: -16.200942993164062
    10. '(i' → logprob: -16.325942993164062

Token 1207: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6942021250724792
    2. ' ==' → logprob: -0.6942021250724792
    3. '>=' → logprob: -7.444201946258545
    4. '=' → logprob: -8.569202423095703
    5. '>' → logprob: -9.319202423095703
    6. ' >=' → logprob: -9.444202423095703
    7. ')' → logprob: -11.319202423095703
    8. 'i' → logprob: -11.444202423095703
    9. '```' → logprob: -11.819202423095703
    10. '0' → logprob: -11.944202423095703

Token 1208: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2031625360250473
    2. 'len' → logprob: -1.7031625509262085
    3. '0' → logprob: -7.328162670135498
    4. ' len' → logprob: -7.828162670135498
    5. ' n' → logprob: -8.07816219329834
    6. 'i' → logprob: -9.45316219329834
    7. '           ' → logprob: -9.57816219329834
    8. '=len' → logprob: -10.32816219329834
    9. '(len' → logprob: -10.32816219329834
    10. '<|end|>' → logprob: -10.32816219329834

Token 1209: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011222648434340954
    2. ':
' → logprob: -4.636222839355469
    3. ':return' → logprob: -6.636222839355469
    4. '       ' → logprob: -9.636222839355469
    5. '           ' → logprob: -10.636222839355469
    6. '):' → logprob: -11.011222839355469
    7. ')' → logprob: -11.386222839355469
    8. ' or' → logprob: -12.011222839355469
    9. '   ' → logprob: -12.136222839355469
    10. '<|end|>' → logprob: -12.136222839355469

Token 1210: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19298765063285828
    2. '           ' → logprob: -2.4429876804351807
    3. 'return' → logprob: -3.5679876804351807
    4. '               ' → logprob: -3.6929876804351807
    5. ' return' → logprob: -4.442987442016602
    6. ':return' → logprob: -4.692987442016602
    7. '   ' → logprob: -4.817987442016602
    8. ':
' → logprob: -6.317987442016602
    9. ':' → logprob: -6.692987442016602
    10. '	return' → logprob: -7.567987442016602

Token 1211: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02050533890724182
    2. ' return' → logprob: -4.520505428314209
    3. '           ' → logprob: -4.770505428314209
    4. '       ' → logprob: -8.02050495147705
    5. '               ' → logprob: -8.27050495147705
    6. '   ' → logprob: -8.77050495147705
    7. '0' → logprob: -9.27050495147705
    8. '
' → logprob: -9.52050495147705
    9. ' ' → logprob: -12.14550495147705
    10. '{return' → logprob: -12.14550495147705

Token 1212: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -25.250001907348633
    4. ' ' → logprob: -25.625001907348633
    5. '۰' → logprob: -25.875001907348633
    6. '```' → logprob: -26.125001907348633
    7. '00' → logprob: -26.750001907348633
    8. '
' → logprob: -27.000001907348633
    9. '000' → logprob: -27.625001907348633
    10. ' ' → logprob: -29.375001907348633

Token 1213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.625
    3. '۰' → logprob: -25.625
    4. '   ' → logprob: -27.5
    5. '```' → logprob: -27.5
    6. '00' → logprob: -28.125
    7. ' ' → logprob: -28.625
    8. '٠' → logprob: -28.75
    9. '০' → logprob: -28.875
    10. '[' → logprob: -28.875

Token 1214: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5155888795852661
    2. '           ' → logprob: -1.1405888795852661
    3. '
' → logprob: -2.7655887603759766
    4. '        
' → logprob: -5.140588760375977
    5. '    
' → logprob: -5.640588760375977
    6. '            
' → logprob: -5.765588760375977
    7. '   ' → logprob: -5.890588760375977
    8. '\n' → logprob: -6.640588760375977
    9. '<|end|>' → logprob: -7.140588760375977
    10. '```' → logprob: -7.515588760375977

Token 1215: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07980914413928986
    2. '
' → logprob: -3.0798091888427734
    3. '   ' → logprob: -4.829809188842773
    4. '        
' → logprob: -4.954809188842773
    5. '           ' → logprob: -5.329809188842773
    6. '    
' → logprob: -5.579809188842773
    7. '```' → logprob: -5.829809188842773
    8. '\n' → logprob: -6.829809188842773
    9. '  
' → logprob: -7.579809188842773
    10. '               ' → logprob: -7.954809188842773

Token 1216: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27314209938049316
    2. '       ' → logprob: -1.5231420993804932
    3. '   ' → logprob: -4.523141860961914
    4. '
' → logprob: -5.648141860961914
    5. '```' → logprob: -6.148141860961914
    6. 'res' → logprob: -6.273141860961914
    7. ' res' → logprob: -6.898141860961914
    8. '               ' → logprob: -8.148141860961914
    9. 'indent' → logprob: -8.398141860961914
    10. 'result' → logprob: -9.148141860961914

Token 1217: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10041607916355133
    2. 'i' → logprob: -2.3504161834716797
    3. '(i' → logprob: -9.10041618347168
    4. ' (' → logprob: -9.97541618347168
    5. ' memo' → logprob: -10.10041618347168
    6. 'memo' → logprob: -11.72541618347168
    7. '(' → logprob: -14.60041618347168
    8. ' ' → logprob: -14.85041618347168
    9. '	i' → logprob: -15.72541618347168
    10. ' True' → logprob: -15.72541618347168

Token 1218: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2106892168521881
    2. 'in' → logprob: -2.4606893062591553
    3. '==' → logprob: -2.8356893062591553
    4. '[i' → logprob: -3.7106893062591553
    5. ' ==' → logprob: -4.835689067840576
    6. '+' → logprob: -5.460689067840576
    7. 'i' → logprob: -5.460689067840576
    8. ' i' → logprob: -6.960689067840576
    9. ']==' → logprob: -7.085689067840576
    10. ']' → logprob: -7.210689067840576

Token 1219: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -1.4617256056226324e-05
    2. ' memo' → logprob: -11.250014305114746
    3. '
' → logprob: -14.125014305114746
    4. 'm' → logprob: -14.375014305114746
    5. '```' → logprob: -15.750014305114746
    6. 'memory' → logprob: -16.875015258789062
    7. '.memo' → logprob: -17.875015258789062
    8. '   ' → logprob: -18.750015258789062
    9. '{' → logprob: -19.375015258789062
    10. 'mem' → logprob: -19.500015258789062

Token 1220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11985602974891663
    2. ':
' → logprob: -2.244856119155884
    3. ':return' → logprob: -6.244855880737305
    4. '=' → logprob: -6.369855880737305
    5. '[' → logprob: -6.744855880737305
    6. '           ' → logprob: -7.869855880737305
    7. ' =' → logprob: -8.119855880737305
    8. '   ' → logprob: -8.369855880737305
    9. '       ' → logprob: -8.619855880737305
    10. '<|end|>' → logprob: -8.619855880737305

Token 1221: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2984476089477539
    2. '       ' → logprob: -2.048447608947754
    3. '           ' → logprob: -2.173447608947754
    4. '   ' → logprob: -4.298447608947754
    5. '```' → logprob: -7.548447608947754
    6. '                   ' → logprob: -8.048447608947754
    7. ':
' → logprob: -8.923447608947754
    8. 'return' → logprob: -9.048447608947754
    9. '{
' → logprob: -9.548447608947754
    10. ':' → logprob: -9.548447608947754

Token 1222: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0011946328449994326
    2. ' return' → logprob: -6.751194477081299
    3. '           ' → logprob: -10.751194953918457
    4. '               ' → logprob: -13.751194953918457
    5. '   ' → logprob: -13.876194953918457
    6. '
' → logprob: -15.376194953918457
    7. '       ' → logprob: -15.751194953918457
    8. '{return' → logprob: -15.751194953918457
    9. '                   ' → logprob: -15.876194953918457
    10. '	return' → logprob: -16.37619400024414

Token 1223: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.007616798859089613
    2. ' memo' → logprob: -4.882616996765137
    3. 'm' → logprob: -12.257616996765137
    4. 'memory' → logprob: -13.007616996765137
    5. '
' → logprob: -13.632616996765137
    6. '```' → logprob: -14.382616996765137
    7. '   ' → logprob: -14.507616996765137
    8. 'mem' → logprob: -15.007616996765137
    9. '    ' → logprob: -15.007616996765137
    10. 'mime' → logprob: -16.38261604309082

Token 1224: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01331422757357359
    2. '
' → logprob: -4.638314247131348
    3. '           ' → logprob: -6.263314247131348
    4. '[' → logprob: -7.513314247131348
    5. '   ' → logprob: -8.263314247131348
    6. '            
' → logprob: -9.013314247131348
    7. '       ' → logprob: -9.763314247131348
    8. ' =' → logprob: -9.888314247131348
    9. '[
' → logprob: -10.013314247131348
    10. '=' → logprob: -10.138314247131348

Token 1225: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.46118029952049255
    2. ']' → logprob: -1.086180329322815
    3. '           ' → logprob: -3.4611802101135254
    4. ']:
' → logprob: -8.711180686950684
    5. ']()
' → logprob: -9.586180686950684
    6. '       ' → logprob: -9.711180686950684
    7. ']=' → logprob: -9.711180686950684
    8. '               ' → logprob: -9.961180686950684
    9. ')]
' → logprob: -10.586180686950684
    10. ')]' → logprob: -10.711180686950684

Token 1226: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046664293855428696
    2. '   ' → logprob: -3.296664237976074
    3. '```' → logprob: -6.171664237976074
    4. '        
' → logprob: -6.296664237976074
    5. '           ' → logprob: -6.421664237976074
    6. '    
' → logprob: -6.796664237976074
    7. '<|end|>' → logprob: -7.671664237976074
    8. '	       ' → logprob: -7.921664237976074
    9. '	   ' → logprob: -8.421664237976074
    10. '<|end|>' → logprob: -9.296664237976074

Token 1227: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.01586894690990448
    2. '           ' → logprob: -4.515869140625
    3. 'ans' → logprob: -6.265869140625
    4. 'min' → logprob: -6.765869140625
    5. ' res' → logprob: -7.390869140625
    6. 'result' → logprob: -7.515869140625
    7. '   ' → logprob: -7.890869140625
    8. 'best' → logprob: -9.515869140625
    9. '```' → logprob: -10.140869140625
    10. '
' → logprob: -10.390869140625

Token 1228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994565576314926
    2. '=' → logprob: -2.6949455738067627
    3. '   ' → logprob: -13.569945335388184
    4. '<|end|>' → logprob: -13.819945335388184
    5. ',' → logprob: -14.069945335388184
    6. ' +=' → logprob: -14.194945335388184
    7. '    ' → logprob: -14.194945335388184
    8. ' =
' → logprob: -14.319945335388184
    9. ' ' → logprob: -14.444945335388184
    10. ')' → logprob: -14.694945335388184

Token 1229: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -4.3822154111694545e-05
    2. ' float' → logprob: -10.500043869018555
    3. 'prefix' → logprob: -12.250043869018555
    4. 'cost' → logprob: -12.375043869018555
    5. '   ' → logprob: -12.875043869018555
    6. '       ' → logprob: -13.000043869018555
    7. 'dp' → logprob: -14.375043869018555
    8. '           ' → logprob: -14.750043869018555
    9. 'min' → logprob: -15.125043869018555
    10. 'inf' → logprob: -15.250043869018555

Token 1230: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.339278580620885e-06
    2. ''in' → logprob: -14.125001907348633
    3. '("' → logprob: -14.875001907348633
    4. 'inf' → logprob: -15.000001907348633
    5. '(in' → logprob: -15.250001907348633
    6. '_inf' → logprob: -15.250001907348633
    7. '('+' → logprob: -16.125001907348633
    8. ''s' → logprob: -16.250001907348633
    9. '(' → logprob: -16.750001907348633
    10. '('-' → logprob: -17.500001907348633

Token 1231: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0002458430244587362
    2. ''' → logprob: -8.375246047973633
    3. ''in' → logprob: -11.250246047973633
    4. 'info' → logprob: -14.375246047973633
    5. '('' → logprob: -14.500246047973633
    6. 'in' → logprob: -15.125246047973633
    7. ''s' → logprob: -15.250246047973633
    8. '100' → logprob: -16.250246047973633
    9. 'pos' → logprob: -16.625246047973633
    10. 'INF' → logprob: -16.625246047973633

Token 1232: '')
' (ID: 2515)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6967681050300598
    2. ')
' → logprob: -0.9467681050300598
    3. ')' → logprob: -2.196768045425415
    4. '')
' → logprob: -6.321768283843994
    5. '')' → logprob: -7.821768283843994
    6. '               ' → logprob: -8.821767807006836
    7. '       ' → logprob: -9.821767807006836
    8. '   ' → logprob: -9.946767807006836
    9. ',' → logprob: -10.446767807006836
    10. ')
' → logprob: -10.821767807006836

Token 1233: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03282364457845688
    2. '       ' → logprob: -3.9078235626220703
    3. '   ' → logprob: -5.78282356262207
    4. '	       ' → logprob: -5.90782356262207
    5. '	' → logprob: -6.65782356262207
    6. '<|end|>' → logprob: -6.90782356262207
    7. '		' → logprob: -7.28282356262207
    8. '    
' → logprob: -7.40782356262207
    9. '
' → logprob: -7.65782356262207
    10. '	   ' → logprob: -8.28282356262207

Token 1234: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19531367719173431
    2. 'for' (adapté à ' for') → logprob: -1.9453136920928955
    3. ' for' → logprob: -3.4453136920928955
    4. '       ' → logprob: -6.570313453674316
    5. '   ' → logprob: -6.945313453674316
    6. '	for' → logprob: -10.195313453674316
    7. '	       ' → logprob: -10.195313453674316
    8. '               ' → logprob: -10.320313453674316
    9. '	   ' → logprob: -10.945313453674316
    10. '\t' → logprob: -11.070313453674316

Token 1235: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000462366413557902
    2. ' j' → logprob: -7.750462532043457
    3. '   ' → logprob: -11.000462532043457
    4. 'end' → logprob: -11.125462532043457
    5. '	j' → logprob: -16.37546157836914
    6. 'next' → logprob: -16.75046157836914
    7. '       ' → logprob: -18.25046157836914
    8. '$j' → logprob: -18.50046157836914
    9. ' ' → logprob: -18.75046157836914
    10. '(j' → logprob: -18.75046157836914

Token 1236: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005291392095386982
    2. 'in' → logprob: -5.25529146194458
    3. '	in' → logprob: -10.630290985107422
    4. ' ' → logprob: -11.380290985107422
    5. 'i' → logprob: -12.130290985107422
    6. ' i' → logprob: -13.005290985107422
    7. '=i' → logprob: -13.380290985107422
    8. '=' → logprob: -13.380290985107422
    9. ')' → logprob: -13.505290985107422
    10. '	' → logprob: -13.880290985107422

Token 1237: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3133584260940552
    2. ' range' → logprob: -1.3133584260940552
    3. 'i' → logprob: -9.313358306884766
    4. ' i' → logprob: -12.313358306884766
    5. '(range' → logprob: -13.688358306884766
    6. '   ' → logprob: -15.188358306884766
    7. '	range' → logprob: -15.563358306884766
    8. '[i' → logprob: -16.188358306884766
    9. '(i' → logprob: -16.438358306884766
    10. 'in' → logprob: -16.438358306884766

Token 1238: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000929091009311378
    2. '(i' → logprob: -7.37592887878418
    3. ' i' → logprob: -8.25092887878418
    4. '{i' → logprob: -11.37592887878418
    5. ',i' → logprob: -11.62592887878418
    6. '[i' → logprob: -11.75092887878418
    7. ',' → logprob: -11.75092887878418
    8. 'j' → logprob: -12.75092887878418
    9. ')i' → logprob: -13.87592887878418
    10. '=i' → logprob: -14.87592887878418

Token 1239: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3239165246486664
    2. ',i' → logprob: -1.5739165544509888
    3. ',j' → logprob: -2.698916435241699
    4. ' ,' → logprob: -6.448916435241699
    5. ',len' → logprob: -8.0739164352417
    6. ',n' → logprob: -8.4489164352417
    7. ',t' → logprob: -11.0739164352417
    8. 'i' → logprob: -11.1989164352417
    9. ',to' → logprob: -12.1989164352417
    10. ',length' → logprob: -12.6989164352417

Token 1240: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2841442823410034
    2. '):' → logprob: -1.4091442823410034
    3. '+' → logprob: -5.909144401550293
    4. '       ' → logprob: -9.284144401550293
    5. ')' → logprob: -10.409144401550293
    6. '           ' → logprob: -10.534144401550293
    7. '):
' → logprob: -10.659144401550293
    8. ':' → logprob: -10.909144401550293
    9. '   ' → logprob: -11.284144401550293
    10. '{' → logprob: -11.659144401550293

Token 1241: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008051026379689574
    2. ' if' → logprob: -7.625804901123047
    3. '<|end|>' → logprob: -8.750804901123047
    4. '           ' → logprob: -10.250804901123047
    5. '	           ' → logprob: -10.250804901123047
    6. '                
' → logprob: -11.250804901123047
    7. 'if' → logprob: -11.625804901123047
    8. '		       ' → logprob: -11.625804901123047
    9. '                   ' → logprob: -11.875804901123047
    10. '<|end|>' → logprob: -12.250804901123047

Token 1242: ' c' (ID: 274)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3289514482021332
    2. '               ' → logprob: -2.203951358795166
    3. 'if' → logprob: -2.578951358795166
    4. 'cost' → logprob: -2.953951358795166
    5. ' cost' → logprob: -3.328951358795166
    6. 't' → logprob: -6.578951358795166
    7. 'token' → logprob: -6.828951358795166
    8. ' c' → logprob: -7.078951358795166
    9. 'c' (adapté à ' c') → logprob: -7.328951358795166
    10. '           ' → logprob: -7.578951358795166

Token 1243: ' =' (ID: 314)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.011619959026575089
    2. 'o' → logprob: -5.386620044708252
    3. '   ' → logprob: -6.386620044708252
    4. 'cost' → logprob: -7.011620044708252
    5. 'os' → logprob: -7.511620044708252
    6. ' ost' → logprob: -7.636620044708252
    7. 'c' → logprob: -7.761620044708252
    8. '       ' → logprob: -8.011619567871094
    9. '_cost' → logprob: -8.136619567871094
    10. '_' → logprob: -8.511619567871094

Token 1244: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.034963466227054596
    2. ' cost' → logprob: -3.409963369369507
    3. 'dp' → logprob: -6.909963607788086
    4. '               ' → logprob: -8.909963607788086
    5. ' dp' → logprob: -9.409963607788086
    6. 'dfs' → logprob: -10.534963607788086
    7. '           ' → logprob: -10.909963607788086
    8. '(cost' → logprob: -11.034963607788086
    9. '                   ' → logprob: -11.159963607788086
    10. '   ' → logprob: -12.909963607788086

Token 1245: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0012671363074332476
    2. '(' → logprob: -7.126266956329346
    3. '(sorted' → logprob: -8.251267433166504
    4. '(j' → logprob: -8.626267433166504
    5. '(
' → logprob: -11.376267433166504
    6. '[i' → logprob: -12.001267433166504
    7. ' (' → logprob: -13.626267433166504
    8. '(chars' → logprob: -13.876267433166504
    9. '(s' → logprob: -14.376267433166504
    10. '```' → logprob: -14.876267433166504

Token 1246: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.03805985301733017
    2. ',' → logprob: -3.288059949874878
    3. ' ,' → logprob: -11.538060188293457
    4. 'j' → logprob: -12.038060188293457
    5. ',
' → logprob: -13.413060188293457
    6. ',x' → logprob: -16.03805923461914
    7. ',y' → logprob: -16.28805923461914
    8. ',c' → logprob: -16.41305923461914
    9. ',int' → logprob: -16.41305923461914
    10. ',n' → logprob: -16.53805923461914

Token 1247: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05252229794859886
    2. ')' → logprob: -3.0525221824645996
    3. '               ' → logprob: -5.5525221824646
    4. ')
' → logprob: -10.052522659301758
    5. '                   ' → logprob: -12.427522659301758
    6. ')`
' → logprob: -13.677522659301758
    7. '           ' → logprob: -14.427522659301758
    8. ' )
' → logprob: -15.927522659301758
    9. '):
' → logprob: -16.677522659301758
    10. ')

' → logprob: -16.677522659301758

Token 1248: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.0722858102526516e-05
    2. ' if' → logprob: -11.500041007995605
    3. '	           ' → logprob: -11.875041007995605
    4. '		       ' → logprob: -12.375041007995605
    5. '                   ' → logprob: -12.625041007995605
    6. '           ' → logprob: -12.875041007995605
    7. '<|end|>' → logprob: -12.875041007995605
    8. '                
' → logprob: -13.125041007995605
    9. ',' → logprob: -13.375041007995605
    10. 'if' → logprob: -13.625041007995605

Token 1249: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10609350353479385
    2. 'res' → logprob: -2.356093406677246
    3. '               ' → logprob: -5.356093406677246
    4. ' if' → logprob: -7.106093406677246
    5. '                   ' → logprob: -8.231093406677246
    6. ' res' → logprob: -9.981093406677246
    7. '           ' → logprob: -11.231093406677246
    8. '                       ' → logprob: -13.606093406677246
    9. '```' → logprob: -13.731093406677246
    10. '                ' → logprob: -14.231093406677246

Token 1250: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07928147166967392
    2. ' c' → logprob: -2.5792815685272217
    3. '               ' → logprob: -8.4542818069458
    4. '                   ' → logprob: -8.8292818069458
    5. '                ' → logprob: -11.8292818069458
    6. '                       ' → logprob: -12.0792818069458
    7. '   ' → logprob: -12.2042818069458
    8. '                           ' → logprob: -13.2042818069458
    9. '                               ' → logprob: -13.3292818069458
    10. '                 ' → logprob: -13.7042818069458

Token 1251: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.47437772154808044
    2. '<=' → logprob: -0.9743777513504028
    3. ')<=' → logprob: -9.474377632141113
    4. ' !=' → logprob: -10.099377632141113
    5. ' ==' → logprob: -10.099377632141113
    6. '==' → logprob: -10.224377632141113
    7. '+' → logprob: -10.474377632141113
    8. '!=' → logprob: -10.974377632141113
    9. ']<=' → logprob: -11.599377632141113
    10. '≤' → logprob: -11.849377632141113

Token 1252: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -6.706686690449715e-05
    2. '   ' → logprob: -10.750066757202148
    3. 'inf' → logprob: -10.750066757202148
    4. ' float' → logprob: -11.750066757202148
    5. '3' → logprob: -12.250066757202148
    6. '```' → logprob: -12.250066757202148
    7. '
' → logprob: -13.500066757202148
    8. '	float' → logprob: -13.500066757202148
    9. '=float' → logprob: -13.625066757202148
    10. '1' → logprob: -15.000066757202148

Token 1253: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -9.007317567011341e-05
    2. ''in' → logprob: -9.375089645385742
    3. ''il' → logprob: -13.500089645385742
    4. ''s' → logprob: -13.625089645385742
    5. ''' → logprob: -14.000089645385742
    6. '("' → logprob: -14.375089645385742
    7. '('+' → logprob: -15.625089645385742
    8. 'inf' → logprob: -15.750089645385742
    9. '_inf' → logprob: -16.375089645385742
    10. '(in' → logprob: -16.375089645385742

Token 1254: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -6.8497312895488e-05
    2. ''in' → logprob: -9.750068664550781
    3. ''' → logprob: -11.500068664550781
    4. '('' → logprob: -17.37506866455078
    5. 'in' → logprob: -18.00006866455078
    6. '
' → logprob: -19.00006866455078
    7. ''s' → logprob: -19.12506866455078
    8. ' inf' → logprob: -19.25006866455078
    9. '-inf' → logprob: -20.12506866455078
    10. '3' → logprob: -20.37506866455078

Token 1255: ''):
' (ID: 26539)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01671488583087921
    2. ''):
' → logprob: -5.141715049743652
    3. ')' → logprob: -5.516715049743652
    4. '):' → logprob: -5.891715049743652
    5. '               ' → logprob: -6.141715049743652
    6. '                   ' → logprob: -6.391715049743652
    7. ':
' → logprob: -9.766715049743652
    8. '):
' → logprob: -10.891715049743652
    9. ')
' → logprob: -11.766715049743652
    10. '')' → logprob: -11.766715049743652

Token 1256: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003377926768735051
    2. '               ' → logprob: -6.628377914428711
    3. ':' → logprob: -7.378377914428711
    4. ':
' → logprob: -7.503377914428711
    5. '                       ' → logprob: -8.128377914428711
    6. ' and' → logprob: -9.128377914428711
    7. '<|end|>' → logprob: -9.128377914428711
    8. '                           ' → logprob: -9.378377914428711
    9. '<|end|>' → logprob: -10.253377914428711
    10. '                  ' → logprob: -10.253377914428711

Token 1257: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15263092517852783
    2. '               ' → logprob: -2.7776308059692383
    3. ' continue' → logprob: -2.7776308059692383
    4. 'continue' → logprob: -4.902630805969238
    5. '                       ' → logprob: -5.152630805969238
    6. ' break' → logprob: -6.402630805969238
    7. '                               ' → logprob: -7.027630805969238
    8. 'break' (adapté à ' break') → logprob: -7.402630805969238
    9. '                           ' → logprob: -8.527630805969238
    10. ' ' → logprob: -8.777630805969238

Token 1258: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015340241370722651
    2. '                   ' → logprob: -6.8765339851379395
    3. '
' → logprob: -8.626534461975098
    4. '           ' → logprob: -9.626534461975098
    5. '<|end|>' → logprob: -9.751534461975098
    6. '                
' → logprob: -9.876534461975098
    7. '                ' → logprob: -10.001534461975098
    8. ')' → logprob: -10.626534461975098
    9. '                       ' → logprob: -10.751534461975098
    10. '              ' → logprob: -11.376534461975098

Token 1259: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16101770102977753
    2. '
' → logprob: -1.911017656326294
    3. '                
' → logprob: -7.411017894744873
    4. '                   ' → logprob: -10.161017417907715
    5. '           ' → logprob: -10.536017417907715
    6. '              ' → logprob: -10.661017417907715
    7. '    
' → logprob: -10.786017417907715
    8. '                ' → logprob: -11.161017417907715
    9. '  
' → logprob: -11.661017417907715
    10. 'res' → logprob: -11.911017417907715

Token 1260: ' pas' (ID: 2173)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.035821616649627686
    2. '                   ' → logprob: -4.285821437835693
    3. ' continue' → logprob: -4.410821437835693
    4. ' res' → logprob: -5.035821437835693
    5. '                ' → logprob: -6.535821437835693
    6. 'continue' → logprob: -8.035821914672852
    7. '
' → logprob: -8.410821914672852
    8. '                       ' → logprob: -9.035821914672852
    9. '           ' → logprob: -9.035821914672852
    10. '                 ' → logprob: -9.285821914672852

Token 1261: ' continuity' (ID: 84966)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.8627090454101562
    2. 'possible' → logprob: -1.7377090454101562
    3. '               ' → logprob: -1.9877090454101562
    4. 'continue' → logprob: -2.6127090454101562
    5. 'continu' → logprob: -2.9877090454101562
    6. ' possible' → logprob: -3.3627090454101562
    7. 'cont' → logprob: -3.9877090454101562
    8. '                   ' → logprob: -4.112709045410156
    9. ' contiguous' → logprob: -4.737709045410156
    10. ')' → logprob: -5.112709045410156

Token 1262: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010366239439463243
    2. '                
' → logprob: -9.250103950500488
    3. '
' → logprob: -13.250103950500488
    4. '                   ' → logprob: -13.500103950500488
    5. '           ' → logprob: -13.750103950500488
    6. 's' → logprob: -14.625103950500488
    7. '                    
' → logprob: -14.875103950500488
    8. '\n' → logprob: -15.250103950500488
    9. ' ' → logprob: -15.875103950500488
    10. '                ' → logprob: -15.875103950500488

Token 1263: ' pas' (ID: 2173)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024535629898309708
    2. '                   ' → logprob: -4.149535655975342
    3. '                ' → logprob: -5.524535655975342
    4. ' continue' → logprob: -5.774535655975342
    5. '                       ' → logprob: -8.399535179138184
    6. '           ' → logprob: -8.774535179138184
    7. '                
' → logprob: -9.024535179138184
    8. '                    ' → logprob: -9.149535179138184
    9. ' ' → logprob: -9.149535179138184
    10. 'continue' → logprob: -9.274535179138184

Token 1264: ' besoin' (ID: 27703)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.5323368906974792
    2. ' possible' → logprob: -1.907336950302124
    3. '               ' → logprob: -2.407336950302124
    4. 'contin' → logprob: -3.532336950302124
    5. 'de' → logprob: -3.782336950302124
    6. 'continu' → logprob: -3.907336950302124
    7. ' valid' → logprob: -4.157336711883545
    8. 'valid' → logprob: -4.157336711883545
    9. 'allowed' → logprob: -4.657336711883545
    10. ' de' → logprob: -4.782336711883545

Token 1265: ' d' (ID: 272)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04128462076187134
    2. ' de' → logprob: -4.416284561157227
    3. '                   ' → logprob: -4.416284561157227
    4. '                ' → logprob: -4.666284561157227
    5. '                       ' → logprob: -6.416284561157227
    6. ' of' → logprob: -6.791284561157227
    7. ' d' → logprob: -7.166284561157227
    8. 'de' → logprob: -7.291284561157227
    9. ' à' → logprob: -7.916284561157227
    10. ' to' → logprob: -8.166284561157227

Token 1266: ''ess' (ID: 94961)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.01276449766010046
    2. 'continue' → logprob: -4.5127644538879395
    3. 'cont' → logprob: -7.2627644538879395
    4. ' continuer' → logprob: -7.3877644538879395
    5. 'continu' → logprob: -8.137764930725098
    6. 'consider' → logprob: -10.637764930725098
    7. 'expl' → logprob: -11.512764930725098
    8. 'pro' → logprob: -11.637764930725098
    9. 'continued' → logprob: -11.762764930725098
    10. 'chercher' → logprob: -11.762764930725098

Token 1267: 'ayer' (ID: 1630)
  Prédit: 'ayer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ayer' → logprob: -2.2246291337069124e-05
    2. 'ay' → logprob: -11.000021934509277
    3. 'a' → logprob: -12.500021934509277
    4. 's' → logprob: -14.750021934509277
    5. 'uyer' → logprob: -15.250021934509277
    6. 'AYER' → logprob: -15.375021934509277
    7. 'aye' → logprob: -15.750021934509277
    8. 'er' → logprob: -16.250022888183594
    9. 'yer' → logprob: -16.250022888183594
    10. 'ayers' → logprob: -16.375022888183594

Token 1268: ' plus' (ID: 2932)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001305950863752514
    2. '                ' → logprob: -10.000130653381348
    3. '                   ' → logprob: -10.625130653381348
    4. '                
' → logprob: -11.375130653381348
    5. '           ' → logprob: -12.125130653381348
    6. ' continue' → logprob: -12.375130653381348
    7. '<|end|>' → logprob: -12.375130653381348
    8. '	           ' → logprob: -12.500130653381348
    9. '<|end|>' → logprob: -12.625130653381348
    10. '		       ' → logprob: -12.625130653381348

Token 1269: ' loin' (ID: 40875)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005456457729451358
    2. ' j' → logprob: -8.750545501708984
    3. '                   ' → logprob: -8.875545501708984
    4. ')' → logprob: -9.875545501708984
    5. '           ' → logprob: -10.000545501708984
    6. '                ' → logprob: -10.625545501708984
    7. '                
' → logprob: -10.875545501708984
    8. 's' → logprob: -11.125545501708984
    9. ',' → logprob: -11.500545501708984
    10. '	           ' → logprob: -11.875545501708984

Token 1270: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00017588881019037217
    2. '<|end|>' → logprob: -10.000175476074219
    3. '           ' → logprob: -10.250175476074219
    4. '                   ' → logprob: -10.500175476074219
    5. '                
' → logprob: -11.375175476074219
    6. '              ' → logprob: -11.500175476074219
    7. ')' → logprob: -11.500175476074219
    8. '                ' → logprob: -11.750175476074219
    9. '
' → logprob: -12.125175476074219
    10. ',' → logprob: -12.250175476074219

Token 1271: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.417976379045285e-05
    2. '                   ' → logprob: -10.625043869018555
    3. '           ' → logprob: -12.125043869018555
    4. '                
' → logprob: -12.750043869018555
    5. '<|end|>' → logprob: -12.875043869018555
    6. '	           ' → logprob: -13.625043869018555
    7. '       ' → logprob: -13.875043869018555
    8. '
' → logprob: -14.000043869018555
    9. '                       ' → logprob: -14.125043869018555
    10. '              ' → logprob: -14.250043869018555

Token 1272: ' res' (ID: 694)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05232229083776474
    2. 'res' (adapté à ' res') → logprob: -3.4273223876953125
    3. '                   ' → logprob: -4.1773223876953125
    4. ' res' → logprob: -6.8023223876953125
    5. 'if' → logprob: -7.3023223876953125
    6. ' if' → logprob: -7.6773223876953125
    7. 'temp' → logprob: -8.802322387695312
    8. '                       ' → logprob: -8.927322387695312
    9. 'new' → logprob: -8.927322387695312
    10. '   ' → logprob: -9.927322387695312

Token 1273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693503499031067
    2. ' =' → logprob: -2.1269350051879883
    3. '           ' → logprob: -12.376935005187988
    4. '   ' → logprob: -13.626935005187988
    5. '=min' → logprob: -14.626935005187988
    6. '            ' → logprob: -15.251935005187988
    7. '       ' → logprob: -15.376935005187988
    8. '    ' → logprob: -15.501935005187988
    9. '	' → logprob: -16.501935958862305
    10. '               ' → logprob: -16.751935958862305

Token 1274: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1002068892121315
    2. ' min' → logprob: -2.3502068519592285
    3. '	min' → logprob: -15.600207328796387
    4. '=min' → logprob: -17.85020637512207
    5. '(min' → logprob: -18.47520637512207
    6. '_min' → logprob: -18.60020637512207
    7. ',min' → logprob: -18.97520637512207
    8. '   ' → logprob: -18.97520637512207
    9. '[min' → logprob: -19.22520637512207
    10. '               ' → logprob: -19.60020637512207

Token 1275: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0007858026656322181
    2. '(' → logprob: -7.250785827636719
    3. '(
' → logprob: -9.500785827636719
    4. ' (' → logprob: -13.875785827636719
    5. 'res' → logprob: -16.12578582763672
    6. '               ' → logprob: -17.87578582763672
    7. '           ' → logprob: -18.25078582763672
    8. '   ' → logprob: -18.25078582763672
    9. '(

' → logprob: -18.25078582763672
    10. ' res' → logprob: -18.37578582763672

Token 1276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1234072744846344
    2. ',res' → logprob: -2.8734073638916016
    3. '(res' → logprob: -2.9984073638916016
    4. 'res' → logprob: -4.748407363891602
    5. ' ,' → logprob: -7.373407363891602
    6. ',
' → logprob: -8.498407363891602
    7. ',c' → logprob: -9.248407363891602
    8. ' res' → logprob: -10.623407363891602
    9. '(
' → logprob: -10.748407363891602
    10. '           ' → logprob: -11.248407363891602

Token 1277: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.762099027633667
    2. 'dfs' → logprob: -0.762099027633667
    3. ' c' → logprob: -3.387099027633667
    4. ' dfs' → logprob: -3.637099027633667
    5. 'cost' → logprob: -5.887099266052246
    6. '               ' → logprob: -7.137099266052246
    7. '   ' → logprob: -7.262099266052246
    8. 'dp' → logprob: -7.512099266052246
    9. '           ' → logprob: -8.137099266052246
    10. '                   ' → logprob: -8.262099266052246

Token 1278: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10027621686458588
    2. '+' → logprob: -2.350276231765747
    3. '+
' → logprob: -10.600275993347168
    4. ')+' → logprob: -10.725275993347168
    5. ' +
' → logprob: -11.225275993347168
    6. ')' → logprob: -12.850275993347168
    7. '           ' → logprob: -13.725275993347168
    8. '+j' → logprob: -13.725275993347168
    9. '+b' → logprob: -14.350275993347168
    10. '+c' → logprob: -14.600275993347168

Token 1279: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.023248042911291122
    2. ' dfs' → logprob: -3.7732479572296143
    3. 'dp' → logprob: -13.523247718811035
    4. 'df' → logprob: -14.773247718811035
    5. 'd' → logprob: -15.523247718811035
    6. '   ' → logprob: -15.898247718811035
    7. 'DFS' → logprob: -15.898247718811035
    8. '           ' → logprob: -16.27324867248535
    9. '
' → logprob: -17.14824867248535
    10. '```' → logprob: -17.14824867248535

Token 1280: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -1.5048530030981055e-06
    2. ' (' → logprob: -13.875001907348633
    3. '(' → logprob: -15.375001907348633
    4. 'j' → logprob: -15.500001907348633
    5. '[j' → logprob: -17.875001907348633
    6. '(
' → logprob: -17.875001907348633
    7. ')' → logprob: -19.375001907348633
    8. '(next' → logprob: -19.375001907348633
    9. '(i' → logprob: -19.500001907348633
    10. '   ' → logprob: -19.500001907348633

Token 1281: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013272607466205955
    2. ' +' → logprob: -6.626327037811279
    3. '+
' → logprob: -14.501327514648438
    4. '+j' → logprob: -15.126327514648438
    5. ')+' → logprob: -15.876327514648438
    6. ')' → logprob: -16.251327514648438
    7. '＋' → logprob: -16.376327514648438
    8. '+)' → logprob: -16.376327514648438
    9. '()+' → logprob: -16.501327514648438
    10. '+i' → logprob: -17.126327514648438

Token 1282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -15.75
    3. '```' → logprob: -17.75
    4. ' ' → logprob: -18.375
    5. ')' → logprob: -18.75
    6. '   ' → logprob: -18.875
    7. '``' → logprob: -20.25
    8. ')
' → logprob: -21.125
    9. '0' → logprob: -21.5
    10. '`' → logprob: -21.625

Token 1283: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008006958523765206
    2. '))
' → logprob: -7.500800609588623
    3. ')' → logprob: -8.750801086425781
    4. '()))' → logprob: -9.375801086425781
    5. '()' → logprob: -13.875801086425781
    6. '       ' → logprob: -14.000801086425781
    7. ')))' → logprob: -14.125801086425781
    8. '())' → logprob: -14.375801086425781
    9. ')
' → logprob: -14.875801086425781
    10. '()))
' → logprob: -15.000801086425781

Token 1284: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003212414914742112
    2. '       ' → logprob: -6.8782124519348145
    3. ')' → logprob: -7.0032124519348145
    4. '<|end|>' → logprob: -8.003211975097656
    5. '          ' → logprob: -8.128211975097656
    6. '   ' → logprob: -8.503211975097656
    7. '               ' → logprob: -9.128211975097656
    8. '
' → logprob: -10.253211975097656
    9. '            
' → logprob: -10.503211975097656
    10. '		' → logprob: -10.503211975097656

Token 1285: ' memo' (ID: 46393)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07998567074537277
    2. '       ' → logprob: -2.7049856185913086
    3. '   ' → logprob: -4.704985618591309
    4. 'return' → logprob: -7.704985618591309
    5. ' return' → logprob: -8.329985618591309
    6. '               ' → logprob: -9.079985618591309
    7. ')' → logprob: -10.579985618591309
    8. '
' → logprob: -10.829985618591309
    9. ' ' → logprob: -11.079985618591309
    10. '        
' → logprob: -11.454985618591309

Token 1286: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.020624807104468346
    2. '[' → logprob: -3.895624876022339
    3. '[
' → logprob: -9.645625114440918
    4. '```' → logprob: -12.270625114440918
    5. '\[' → logprob: -12.395625114440918
    6. '[I' → logprob: -13.270625114440918
    7. '[...]' → logprob: -13.520625114440918
    8. '   ' → logprob: -13.895625114440918
    9. '[j' → logprob: -14.145625114440918
    10. '[s' → logprob: -14.270625114440918

Token 1287: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007790116942487657
    2. ']=' → logprob: -7.500779151916504
    3. '])' → logprob: -8.750779151916504
    4. ')' → logprob: -10.250779151916504
    5. ']+=' → logprob: -11.375779151916504
    6. '[i' → logprob: -11.750779151916504
    7. '=' → logprob: -12.375779151916504
    8. '[' → logprob: -12.750779151916504
    9. ' ]' → logprob: -13.375779151916504
    10. ']
' → logprob: -13.750779151916504

Token 1288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0006267757853493094
    2. ' =' → logprob: -7.375626564025879
    3. '=
' → logprob: -16.000627517700195
    4. '   ' → logprob: -17.500627517700195
    5. '=}' → logprob: -17.500627517700195
    6. ')=' → logprob: -18.250627517700195
    7. '=True' → logprob: -18.250627517700195
    8. ')' → logprob: -18.625627517700195
    9. ']=' → logprob: -19.000627517700195
    10. '＝' → logprob: -19.250627517700195

Token 1289: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -5.512236498361744e-07
    2. ' res' → logprob: -14.500000953674316
    3. '(res' → logprob: -23.375
    4. '_res' → logprob: -24.125
    5. 'rest' → logprob: -24.375
    6. '$res' → logprob: -24.375
    7. '	res' → logprob: -24.75
    8. 'return' → logprob: -25.75
    9. 're' → logprob: -26.25
    10. 'rem' → logprob: -26.5

Token 1290: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004662234336137772
    2. '       ' → logprob: -5.754662036895752
    3. '
' → logprob: -7.504662036895752
    4. '   ' → logprob: -8.25466251373291
    5. '	       ' → logprob: -8.62966251373291
    6. '		' → logprob: -9.37966251373291
    7. 'return' → logprob: -9.37966251373291
    8. '	return' → logprob: -9.87966251373291
    9. '<|end|>' → logprob: -10.00466251373291
    10. '	   ' → logprob: -10.12966251373291

Token 1291: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.793465256690979
    2. '       ' → logprob: -1.168465256690979
    3. '   ' → logprob: -1.793465256690979
    4. '
' → logprob: -3.4184651374816895
    5. '	return' → logprob: -3.7934651374816895
    6. 'return' → logprob: -5.0434651374816895
    7. '    
' → logprob: -6.1684651374816895
    8. ' return' → logprob: -6.2934651374816895
    9. '	' → logprob: -6.6684651374816895
    10. '	   ' → logprob: -6.9184651374816895

Token 1292: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02125486731529236
    2. ' return' → logprob: -4.396255016326904
    3. '           ' → logprob: -4.771255016326904
    4. '   ' → logprob: -8.646254539489746
    5. '       ' → logprob: -10.146254539489746
    6. '	return' → logprob: -11.271254539489746
    7. '
' → logprob: -13.271254539489746
    8. ':return' → logprob: -13.646254539489746
    9. '{return' → logprob: -13.646254539489746
    10. 'eturn' → logprob: -13.896254539489746

Token 1293: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0206720617134124e-05
    2. ' res' → logprob: -11.50001049041748
    3. '(res' → logprob: -20.625009536743164
    4. '$res' → logprob: -22.125009536743164
    5. '_res' → logprob: -22.125009536743164
    6. '	res' → logprob: -22.500009536743164
    7. '
' → logprob: -23.000009536743164
    8. 'rest' → logprob: -23.375009536743164
    9. 're' → logprob: -23.625009536743164
    10. 'rem' → logprob: -23.750009536743164

Token 1294: '
        
' (ID: 20417)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06803226470947266
    2. '       ' → logprob: -3.5680322647094727
    3. '    
' → logprob: -3.6930322647094727
    4. '
' → logprob: -4.568032264709473
    5. '        
' → logprob: -6.818032264709473
    6. '\n' → logprob: -8.068032264709473
    7. '	return' → logprob: -8.318032264709473
    8. ')' → logprob: -8.693032264709473
    9. '  
' → logprob: -9.068032264709473
    10. '	
' → logprob: -9.318032264709473

Token 1295: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013945228420197964
    2. '	return' → logprob: -7.876394748687744
    3. ' return' → logprob: -8.501394271850586
    4. 'return' → logprob: -8.501394271850586
    5. '```' → logprob: -8.626394271850586
    6. '<|end|>' → logprob: -8.751394271850586
    7. '<|end|>' → logprob: -9.501394271850586
    8. '    
' → logprob: -9.626394271850586
    9. ')' → logprob: -9.876394271850586
    10. '       ' → logprob: -11.126394271850586

Token 1296: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0033996712882071733
    2. '   ' → logprob: -6.003399848937988
    3. ' return' → logprob: -7.003399848937988
    4. '       ' → logprob: -11.878399848937988
    5. '	return' → logprob: -12.128399848937988
    6. 'result' → logprob: -13.628399848937988
    7. '
' → logprob: -14.503399848937988
    8. '```' → logprob: -15.128399848937988
    9. '  ' → logprob: -16.003398895263672
    10. '{return' → logprob: -16.128398895263672

Token 1297: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.002808798337355256
    2. ' dfs' → logprob: -5.877808570861816
    3. 'df' → logprob: -13.377808570861816
    4. 'dp' → logprob: -13.377808570861816
    5. 'd' → logprob: -14.877808570861816
    6. '   ' → logprob: -15.252808570861816
    7. 'DFS' → logprob: -16.627809524536133
    8. '(d' → logprob: -16.877809524536133
    9. '0' → logprob: -17.377809524536133
    10. 'lambda' → logprob: -18.002809524536133

Token 1298: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010211553424596786
    2. '(n' → logprob: -4.76021146774292
    3. '0' → logprob: -6.63521146774292
    4. '(len' → logprob: -8.260211944580078
    5. '<|end|>' → logprob: -11.760211944580078
    6. ' ' → logprob: -12.385211944580078
    7. '(
' → logprob: -12.885211944580078
    8. '(i' → logprob: -13.510211944580078
    9. '(next' → logprob: -13.760211944580078
    10. ' (' → logprob: -13.885211944580078

Token 1299: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005261152982711792
    2. 'n' → logprob: -5.255260944366455
    3. 'len' → logprob: -10.630261421203613
    4. ' ' → logprob: -13.380261421203613
    5. ' n' → logprob: -14.380261421203613
    6. ')' → logprob: -14.380261421203613
    7. '   ' → logprob: -15.755261421203613
    8. ')n' → logprob: -16.255260467529297
    9. '1' → logprob: -16.630260467529297
    10. '(n' → logprob: -16.755260467529297

Token 1300: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010068230039905757
    2. '   ' → logprob: -9.250101089477539
    3. '+' → logprob: -13.750101089477539
    4. '}' → logprob: -13.875101089477539
    5. ' )' → logprob: -14.375101089477539
    6. ')
' → logprob: -14.625101089477539
    7. '())' → logprob: -15.000101089477539
    8. ')return' → logprob: -15.375101089477539
    9. '<|end|>' → logprob: -15.500101089477539
    10. '+)' → logprob: -16.00010108947754

Token 1301: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01441123429685831
    2. 'letters' → logprob: -5.139411449432373
    3. '    
' → logprob: -5.764411449432373
    4. '```' → logprob: -6.139411449432373
    5. '<|end|>' → logprob: -6.639411449432373
    6. ')' → logprob: -7.389411449432373
    7. '_letters' → logprob: -7.639411449432373
    8. 'return' → logprob: -8.889410972595215
    9. '...' → logprob: -9.014410972595215
    10. '
' → logprob: -9.264410972595215

Token 1302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014565435703843832
    2. '    
' → logprob: -7.0014567375183105
    3. 'return' → logprob: -8.126456260681152
    4. 'letters' → logprob: -9.376456260681152
    5. 'result' → logprob: -9.876456260681152
    6. '<|end|>' → logprob: -10.251456260681152
    7. '
' → logprob: -10.876456260681152
    8. '```' → logprob: -11.251456260681152
    9. '_letters' → logprob: -11.501456260681152
    10. 'def' → logprob: -12.126456260681152

Token 1303: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7950392365455627
    2. 'return' → logprob: -0.9200392365455627
    3. 'letters' → logprob: -2.170039176940918
    4. 'result' → logprob: -4.170039176940918
    5. 'letter' → logprob: -4.795039176940918
    6. 'total' → logprob: -5.045039176940918
    7. 'compressed' → logprob: -6.170039176940918
    8. 'length' → logprob: -6.795039176940918
    9. '```' → logprob: -7.045039176940918
    10. '#' (adapté à ' #') → logprob: -7.670039176940918

Token 1304: ' Calcul' (ID: 57243)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3534557819366455
    2. 'result' → logprob: -2.2284557819366455
    3. 'letters' → logprob: -2.3534557819366455
    4. '   ' → logprob: -2.9784557819366455
    5. '#' → logprob: -3.8534557819366455
    6. 'letter' → logprob: -4.228455543518066
    7. 'compressed' → logprob: -5.853455543518066
    8. 'min' → logprob: -6.103455543518066
    9. 'length' → logprob: -6.978455543518066
    10. 'total' → logprob: -7.103455543518066

Token 1305: ' minimal' (ID: 19957)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.12472698837518692
    2. 'result' → logprob: -3.2497270107269287
    3. 'letter' → logprob: -3.2497270107269287
    4. 'min' → logprob: -3.9997270107269287
    5. '   ' → logprob: -4.74972677230835
    6. 'compressed' → logprob: -5.74972677230835
    7. '_letters' → logprob: -6.24972677230835
    8. '#' → logprob: -6.37472677230835
    9. 'length' → logprob: -6.99972677230835
    10. 'lett' → logprob: -7.37472677230835

Token 1306: ' sépar' (ID: 97160)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.10942240804433823
    2. '_letters' → logprob: -3.609422445297241
    3. '   ' → logprob: -3.734422445297241
    4. 'result' → logprob: -3.859422445297241
    5. '=' → logprob: -4.859422206878662
    6. 'letter' → logprob: -5.234422206878662
    7. 'min' → logprob: -5.359422206878662
    8. ' =' → logprob: -5.359422206878662
    9. 'length' → logprob: -6.484422206878662
    10. 'lett' → logprob: -6.609422206878662

Token 1307: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.506495475769043
    2. 'ée' → logprob: -1.006495475769043
    3. 'é' → logprob: -3.506495475769043
    4. '   ' → logprob: -7.756495475769043
    5. 'ate' → logprob: -8.006495475769043
    6. 'e' → logprob: -8.006495475769043
    7. 'ment' → logprob: -8.256495475769043
    8. '_' → logprob: -9.256495475769043
    9. 'és' → logprob: -9.756495475769043
    10. '
' → logprob: -9.881495475769043

Token 1308: ' pour' (ID: 1930)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.38673606514930725
    2. 'pour' → logprob: -2.0117361545562744
    3. 'letters' → logprob: -2.8867361545562744
    4. 'for' → logprob: -3.2617361545562744
    5. 'lett' → logprob: -3.3867361545562744
    6. '_letters' → logprob: -3.6367361545562744
    7. '_des' → logprob: -4.136735916137695
    8. '_' → logprob: -5.386735916137695
    9. '   ' → logprob: -5.511735916137695
    10. '#' → logprob: -6.011735916137695

Token 1309: ' les' (ID: 1341)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.013452201150357723
    2. 'les' → logprob: -5.013452053070068
    3. 'lett' → logprob: -5.013452053070068
    4. 'let' → logprob: -10.263452529907227
    5. 'le' → logprob: -11.888452529907227
    6. ' letters' → logprob: -12.013452529907227
    7. 'letter' → logprob: -12.263452529907227
    8. ' lettres' → logprob: -12.513452529907227
    9. '   ' → logprob: -13.013452529907227
    10. 'la' → logprob: -13.638452529907227

Token 1310: ' lettres' (ID: 101234)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.07003946602344513
    2. 'lett' → logprob: -2.6950395107269287
    3. 'digits' → logprob: -9.695039749145508
    4. 'let' → logprob: -10.820039749145508
    5. 'le' → logprob: -11.945039749145508
    6. ' lettres' → logprob: -12.695039749145508
    7. 'l' → logprob: -13.195039749145508
    8. ' letters' → logprob: -13.320039749145508
    9. '_letters' → logprob: -13.445039749145508
    10. '#' → logprob: -13.570039749145508

Token 1311: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5367063283920288
    2. 'letters' → logprob: -1.0367063283920288
    3. 'length' → logprob: -3.5367064476013184
    4. 'and' → logprob: -4.661706447601318
    5. 'result' → logprob: -5.036706447601318
    6. '=' → logprob: -5.786706447601318
    7. 'min' → logprob: -5.786706447601318
    8. ',' → logprob: -6.161706447601318
    9. ' =' → logprob: -6.536706447601318
    10. 'letter' → logprob: -6.661706447601318

Token 1312: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.45050492882728577
    2. 'digits' → logprob: -1.0755048990249634
    3. ' les' → logprob: -4.200504779815674
    4. ' digits' → logprob: -5.825504779815674
    5. 'ch' → logprob: -5.950504779815674
    6. 'for' → logprob: -8.450505256652832
    7. 'pour' → logprob: -8.575505256652832
    8. 'digit' → logprob: -8.825505256652832
    9. ' chiffres' → logprob: -8.825505256652832
    10. '   ' → logprob: -9.325505256652832

Token 1313: ' chiffres' (ID: 105565)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.007824399508535862
    2. 'ch' → logprob: -4.882824420928955
    3. 'd' → logprob: -8.507823944091797
    4. 'digit' → logprob: -12.257823944091797
    5. ' chiffres' → logprob: -12.632823944091797
    6. 'dig' → logprob: -12.882823944091797
    7. ' digits' → logprob: -12.882823944091797
    8. '   ' → logprob: -14.257823944091797
    9. '#' → logprob: -14.257823944091797
    10. '```' → logprob: -14.757823944091797

Token 1314: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21611592173576355
    2. 'letters' → logprob: -2.216115951538086
    3. 'result' → logprob: -3.091115951538086
    4. 'return' → logprob: -4.091115951538086
    5. 'letter' → logprob: -4.466115951538086
    6. 'min' → logprob: -4.591115951538086
    7. 'res' → logprob: -7.591115951538086
    8. 'length' → logprob: -7.716115951538086
    9. 'answer' → logprob: -9.091115951538086
    10. 'compressed' → logprob: -9.091115951538086

Token 1315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10651153326034546
    2. 'result' → logprob: -3.1065115928649902
    3. 'letters' → logprob: -3.7315115928649902
    4. 'letter' → logprob: -3.8565115928649902
    5. 'return' → logprob: -4.73151159286499
    6. 'min' → logprob: -6.73151159286499
    7. '```' → logprob: -7.98151159286499
    8. 'res' → logprob: -8.356511116027832
    9. 'answer' → logprob: -8.481511116027832
    10. '    
' → logprob: -9.481511116027832

Token 1316: ' min' (ID: 1349)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.3768845498561859
    2. 'letters' → logprob: -1.3768845796585083
    3. '   ' → logprob: -3.5018844604492188
    4. 'min' (adapté à ' min') → logprob: -4.501884460449219
    5. 'result' → logprob: -4.626884460449219
    6. 'return' → logprob: -4.876884460449219
    7. 'compressed' → logprob: -6.626884460449219
    8. 'res' → logprob: -6.751884460449219
    9. 'answer' → logprob: -9.251884460449219
    10. 'minimal' → logprob: -9.376884460449219

Token 1317: '_letters' (ID: 175934)
  Prédit: '_letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letters' → logprob: -0.5210018157958984
    2. '_length' → logprob: -1.0210018157958984
    3. '_com' → logprob: -4.021001815795898
    4. '_len' → logprob: -4.146001815795898
    5. '_' → logprob: -4.646001815795898
    6. '_letter' → logprob: -6.146001815795898
    7. '_le' → logprob: -9.146001815795898
    8. '_lengths' → logprob: -9.396001815795898
    9. 'compressed' → logprob: -9.896001815795898
    10. '_comp' → logprob: -10.146001815795898

Token 1318: ' =' (ID: 314)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0002354832977289334
    2. '_len' → logprob: -9.000235557556152
    3. '_' → logprob: -9.875235557556152
    4. '=' → logprob: -10.000235557556152
    5. ' =' → logprob: -11.500235557556152
    6. '_letters' → logprob: -13.250235557556152
    7. '_cost' → logprob: -13.500235557556152
    8. '_min' → logprob: -14.750235557556152
    9. '_lengths' → logprob: -14.750235557556152
    10. 'length' → logprob: -15.125235557556152

Token 1319: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014166207052767277
    2. ' dp' → logprob: -4.264166355133057
    3. '   ' → logprob: -13.139165878295898
    4. 'min' → logprob: -14.264165878295898
    5. ' min' → logprob: -17.1391658782959
    6. '(dp' → logprob: -17.1391658782959
    7. '	dp' → logprob: -17.5141658782959
    8. 'df' → logprob: -19.6391658782959
    9. ' ' → logprob: -19.6391658782959
    10. 'd' → logprob: -19.7641658782959

Token 1320: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -2.463036435074173e-05
    2. 'min' → logprob: -10.625024795532227
    3. '_letters' → logprob: -15.750024795532227
    4. '(min' → logprob: -17.500024795532227
    5. 'in' → logprob: -17.500024795532227
    6. 'letters' → logprob: -18.125024795532227
    7. '```' → logprob: -18.250024795532227
    8. '=' → logprob: -19.000024795532227
    9. 'Min' → logprob: -19.000024795532227
    10. '_max' → logprob: -19.625024795532227

Token 1321: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0058348230086266994
    2. 'length' → logprob: -5.255835056304932
    3. 'ength' → logprob: -7.630835056304932
    4. '_letters' → logprob: -9.130834579467773
    5. 'letters' → logprob: -12.505834579467773
    6. '_len' → logprob: -14.130834579467773
    7. '_lengths' → logprob: -14.505834579467773
    8. 'Length' → logprob: -14.630834579467773
    9. '_letter' → logprob: -14.880834579467773
    10. 'th' → logprob: -15.130834579467773

Token 1322: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6240566083070007e-06
    2. ' (' → logprob: -14.500001907348633
    3. 'letters' → logprob: -14.625001907348633
    4. '(sorted' → logprob: -14.875001907348633
    5. '(letter' → logprob: -16.000001907348633
    6. '((' → logprob: -16.750001907348633
    7. '(let' → logprob: -18.125001907348633
    8. ')' → logprob: -18.125001907348633
    9. '```' → logprob: -18.375001907348633
    10. '   ' → logprob: -18.500001907348633

Token 1323: 'letters' (ID: 38724)
  Prédit: 'letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -5.264322317088954e-05
    2. ' letters' → logprob: -10.375052452087402
    3. 'letter' → logprob: -10.875052452087402
    4. '   ' → logprob: -13.375052452087402
    5. ')' → logprob: -14.000052452087402
    6. 'let' → logprob: -17.25005340576172
    7. '_letters' → logprob: -17.87505340576172
    8. 'lett' → logprob: -18.00005340576172
    9. 'Letters' → logprob: -18.00005340576172
    10. '```' → logprob: -18.12505340576172

Token 1324: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031657278537750244
    2. ')
' → logprob: -3.5316572189331055
    3. '   ' → logprob: -6.2816572189331055
    4. ')+' → logprob: -10.531657218933105
    5. 'min' → logprob: -13.281657218933105
    6. '+' → logprob: -13.281657218933105
    7. ' +' → logprob: -13.906657218933105
    8. ')
' → logprob: -14.156657218933105
    9. ' )' → logprob: -14.406657218933105
    10. '),' → logprob: -14.656657218933105

Token 1325: ' if' (ID: 538)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01166648417711258
    2. '
' → logprob: -4.636666297912598
    3. '   ' → logprob: -6.511666297912598
    4. ' min' → logprob: -7.886666297912598
    5. '```' → logprob: -11.136666297912598
    6. '_min' → logprob: -11.511666297912598
    7. '	min' → logprob: -12.136666297912598
    8. '    
' → logprob: -12.386666297912598
    9. ',min' → logprob: -13.136666297912598
    10. '.min' → logprob: -13.136666297912598

Token 1326: ' letters' (ID: 18151)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.0045136697590351105
    2. ' letters' → logprob: -5.504513740539551
    3. 'len' → logprob: -7.754513740539551
    4. ' len' → logprob: -12.37951374053955
    5. '   ' → logprob: -13.12951374053955
    6. ' ' → logprob: -16.754512786865234
    7. '  ' → logprob: -17.379512786865234
    8. '_letters' → logprob: -18.004512786865234
    9. 'Letters' → logprob: -18.254512786865234
    10. '       ' → logprob: -18.504512786865234

Token 1327: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2267225682735443
    2. ' else' → logprob: -1.6017225980758667
    3. '!=' → logprob: -7.101722717285156
    4. '>' → logprob: -8.601722717285156
    5. '   ' → logprob: -9.101722717285156
    6. ')' → logprob: -9.476722717285156
    7. ':' → logprob: -11.226722717285156
    8. '!' → logprob: -11.476722717285156
    9. '[]' → logprob: -11.476722717285156
    10. '_else' → logprob: -11.726722717285156

Token 1328: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010008628305513412
    2. ' ' → logprob: -9.250100135803223
    3. 'float' → logprob: -12.625100135803223
    4. '   ' → logprob: -14.500100135803223
    5. ' float' → logprob: -16.375099182128906
    6. 'len' → logprob: -17.500099182128906
    7. '  ' → logprob: -17.500099182128906
    8. '    ' → logprob: -18.750099182128906
    9. '1' → logprob: -19.250099182128906
    10. '     ' → logprob: -19.437599182128906

Token 1329: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.735893965815194e-05
    2. 'float' → logprob: -11.000017166137695
    3. ' ' → logprob: -15.000017166137695
    4. 'len' → logprob: -15.250017166137695
    5. '1' → logprob: -19.000017166137695
    6. 'min' → logprob: -19.250017166137695
    7. '   ' → logprob: -19.312517166137695
    8. '```' → logprob: -19.312517166137695
    9. '00' → logprob: -19.375017166137695
    10. '"' → logprob: -19.375017166137695

Token 1330: '
' (ID: 198)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.05038583651185036
    2. '
' → logprob: -3.3003859519958496
    3. '   ' → logprob: -4.42538595199585
    4. ' min' → logprob: -8.300385475158691
    5. '    
' → logprob: -11.175385475158691
    6. '	min' → logprob: -11.550385475158691
    7. '```' → logprob: -11.925385475158691
    8. '[min' → logprob: -12.300385475158691
    9. '_min' → logprob: -12.550385475158691
    10. ',min' → logprob: -13.050385475158691

Token 1331: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00022547018306795508
    2. '   ' → logprob: -8.750225067138672
    3. ' min' → logprob: -9.750225067138672
    4. '
' → logprob: -11.750225067138672
    5. '```' → logprob: -14.625225067138672
    6. '	min' → logprob: -15.375225067138672
    7. '_min' → logprob: -16.125225067138672
    8. '.min' → logprob: -18.250225067138672
    9. '    
' → logprob: -18.500225067138672
    10. '(min' → logprob: -18.625225067138672

Token 1332: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: 0.0
    2. ' min' → logprob: -16.75
    3. 'digits' → logprob: -17.0
    4. '   ' → logprob: -19.0
    5. 'digit' → logprob: -21.125
    6. 'max' → logprob: -21.75
    7. '
' → logprob: -21.75
    8. '```' → logprob: -22.375
    9. '	min' → logprob: -22.5
    10. '#' → logprob: -23.875

Token 1333: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.00012558852904476225
    2. 'digits' → logprob: -9.000125885009766
    3. '_numbers' → logprob: -14.125125885009766
    4. '_' → logprob: -14.500125885009766
    5. '_digit' → logprob: -15.000125885009766
    6. 'Digits' → logprob: -16.125125885009766
    7. '```' → logprob: -16.750125885009766
    8. '_chars' → logprob: -16.875125885009766
    9. '_code' → logprob: -17.000125885009766
    10. '_ch' → logprob: -17.375125885009766

Token 1334: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759395360946655
    2. '=' → logprob: -0.8259395360946655
    3. '   ' → logprob: -16.325939178466797
    4. ' ' → logprob: -17.325939178466797
    5. ')' → logprob: -18.700939178466797
    6. '＝' → logprob: -18.825939178466797
    7. '=min' → logprob: -19.200939178466797
    8. ' +=' → logprob: -19.450939178466797
    9. '+=' → logprob: -20.325939178466797
    10. '=
' → logprob: -20.325939178466797

Token 1335: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00012356207298580557
    2. ' dp' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.250123977661133
    4. '0' → logprob: -17.750123977661133
    5. '	dp' → logprob: -20.000123977661133
    6. '(dp' → logprob: -20.250123977661133
    7. ' ' → logprob: -20.375123977661133
    8. '  ' → logprob: -21.000123977661133
    9. 'df' → logprob: -21.125123977661133
    10. 'dc' → logprob: -21.625123977661133

Token 1336: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.001535812160000205
    2. '_length' → logprob: -7.126535892486572
    3. '_len' → logprob: -7.251535892486572
    4. 'min' → logprob: -10.751535415649414
    5. 'length' → logprob: -16.501535415649414
    6. '_MIN' → logprob: -16.876535415649414
    7. 'len' → logprob: -17.001535415649414
    8. '_less' → logprob: -17.126535415649414
    9. '_l' → logprob: -17.251535415649414
    10. 'Min' → logprob: -17.376535415649414

Token 1337: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -4.203409844194539e-05
    2. 'length' → logprob: -10.125041961669922
    3. '_min' → logprob: -13.875041961669922
    4. 'ength' → logprob: -14.625041961669922
    5. '_len' → logprob: -15.625041961669922
    6. 'min' → logprob: -16.375041961669922
    7. '_lengths' → logprob: -16.375041961669922
    8. '_digits' → logprob: -17.125041961669922
    9. '_LENGTH' → logprob: -17.375041961669922
    10. 'Length' → logprob: -17.375041961669922

Token 1338: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.0564331205387134e-05
    2. 'digits' → logprob: -12.37501049041748
    3. '   ' → logprob: -12.50001049041748
    4. ' (' → logprob: -13.12501049041748
    5. '(
' → logprob: -16.375011444091797
    6. ' digits' → logprob: -16.375011444091797
    7. ' ' → logprob: -16.500011444091797
    8. 'digit' → logprob: -16.625011444091797
    9. '_digits' → logprob: -17.000011444091797
    10. '(' → logprob: -17.125011444091797

Token 1339: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.00024144348572008312
    2. 'digits' → logprob: -8.50024127960205
    3. 'ig' → logprob: -10.50024127960205
    4. 'igts' → logprob: -12.25024127960205
    5. 'igit' → logprob: -13.12524127960205
    6. 'its' → logprob: -13.87524127960205
    7. 'g' → logprob: -14.37524127960205
    8. 'd' → logprob: -14.37524127960205
    9. ' digits' → logprob: -15.62524127960205
    10. 'i' → logprob: -15.87524127960205

Token 1340: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.543733904138207e-05
    2. '   ' → logprob: -10.00009536743164
    3. 'if' → logprob: -11.12509536743164
    4. ' if' → logprob: -11.37509536743164
    5. '(s' → logprob: -12.50009536743164
    6. ')+' → logprob: -12.62509536743164
    7. ' )' → logprob: -12.75009536743164
    8. '())' → logprob: -12.87509536743164
    9. '()' → logprob: -13.00009536743164
    10. '(' → logprob: -13.25009536743164

Token 1341: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9221101403236389
    2. ' =' → logprob: -1.0471100807189941
    3. 'return' → logprob: -2.547110080718994
    4. ' +' → logprob: -2.672110080718994
    5. '=' → logprob: -3.422110080718994
    6. ')' → logprob: -4.047110080718994
    7. '+' → logprob: -4.047110080718994
    8. ' return' → logprob: -4.797110080718994
    9. ' if' → logprob: -5.297110080718994
    10. ' ' → logprob: -5.797110080718994

Token 1342: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.02332257851958275
    2. ' digits' → logprob: -3.773322582244873
    3. 'count' → logprob: -9.523322105407715
    4. 'digit' → logprob: -12.773322105407715
    5. ' count' → logprob: -14.398322105407715
    6. 'd' → logprob: -15.023322105407715
    7. ' ' → logprob: -16.77332305908203
    8. 'counts' → logprob: -17.14832305908203
    9. 'dig' → logprob: -17.39832305908203
    10. '   ' → logprob: -17.64832305908203

Token 1343: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0486217737197876
    2. ' else' → logprob: -3.048621654510498
    3. '   ' → logprob: -10.923622131347656
    4. 'not' → logprob: -12.048622131347656
    5. ':' → logprob: -12.548622131347656
    6. ' ' → logprob: -13.548622131347656
    7. '>' → logprob: -13.673622131347656
    8. ')' → logprob: -13.798622131347656
    9. '!=' → logprob: -14.298622131347656
    10. '_else' → logprob: -14.673622131347656

Token 1344: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007114782347343862
    2. ' ' → logprob: -7.250711441040039
    3. '   ' → logprob: -13.375711441040039
    4. '  ' → logprob: -18.12571144104004
    5. '    ' → logprob: -19.68821144104004
    6. '(' → logprob: -19.68821144104004
    7. '۰' → logprob: -19.81321144104004
    8. 'def' → logprob: -20.25071144104004
    9. '```' → logprob: -20.50071144104004
    10. '=' → logprob: -20.50071144104004

Token 1345: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.375021934509277
    4. '  ' → logprob: -20.12502098083496
    5. '```' → logprob: -21.25002098083496
    6. '    ' → logprob: -21.50002098083496
    7. '۰' → logprob: -21.62502098083496
    8. '       ' → logprob: -21.87502098083496
    9. '(' → logprob: -22.25002098083496
    10. '00' → logprob: -22.50002098083496

Token 1346: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02409164048731327
    2. '
' → logprob: -4.774091720581055
    3. 'return' → logprob: -4.899091720581055
    4. '    
' → logprob: -5.024091720581055
    5. ' return' → logprob: -6.649091720581055
    6. ' 
' → logprob: -12.024091720581055
    7. '```' → logprob: -12.274091720581055
    8. '	return' → logprob: -12.524091720581055
    9. '   
' → logprob: -12.524091720581055
    10. '  
' → logprob: -12.649091720581055

Token 1347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4788183271884918
    2. 'return' → logprob: -0.9788182973861694
    3. '
' → logprob: -5.478818416595459
    4. ' return' → logprob: -8.3538179397583
    5. '```' → logprob: -8.4788179397583
    6. 'result' → logprob: -9.6038179397583
    7. '    
' → logprob: -10.2288179397583
    8. 'total' → logprob: -12.7288179397583
    9. 'min' → logprob: -13.3538179397583
    10. '	return' → logprob: -13.6038179397583

Token 1348: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00013047587708570063
    2. '   ' → logprob: -9.250130653381348
    3. ' return' → logprob: -10.500130653381348
    4. 'result' → logprob: -12.625130653381348
    5. '#' (adapté à ' #') → logprob: -12.750130653381348
    6. '
' → logprob: -15.375130653381348
    7. '```' → logprob: -15.500130653381348
    8. 'total' → logprob: -16.00012969970703
    9. '	return' → logprob: -17.25012969970703
    10. '    
' → logprob: -17.62512969970703

Token 1349: ' La' (ID: 3038)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0006810996565036476
    2. 'result' → logprob: -7.875680923461914
    3. '   ' → logprob: -8.875680923461914
    4. '#' → logprob: -8.875680923461914
    5. ' return' → logprob: -11.125680923461914
    6. 'total' → logprob: -12.250680923461914
    7. 'ret' → logprob: -14.625680923461914
    8. '```' → logprob: -14.625680923461914
    9. 'res' → logprob: -15.125680923461914
    10. 'min' → logprob: -15.625680923461914

Token 1350: ' chaine' (ID: 192094)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0077819605357944965
    2. ' return' → logprob: -5.257781982421875
    3. 'result' → logprob: -6.507781982421875
    4. '#' → logprob: -7.382781982421875
    5. 'min' → logprob: -8.007781982421875
    6. ' #' → logprob: -10.257781982421875
    7. 'answer' → logprob: -10.882781982421875
    8. '   ' → logprob: -11.632781982421875
    9. 'ret' → logprob: -11.882781982421875
    10. '
' → logprob: -12.507781982421875

Token 1351: ' compress' (ID: 34112)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5731837153434753
    2. '=' → logprob: -1.9481837749481201
    3. 'final' → logprob: -2.19818377494812
    4. 'compressed' → logprob: -2.44818377494812
    5. 'result' → logprob: -3.07318377494812
    6. 'compress' → logprob: -4.698183536529541
    7. 'length' → logprob: -4.948183536529541
    8. 's' → logprob: -5.198183536529541
    9. '_result' → logprob: -5.323183536529541
    10. '_length' → logprob: -5.448183536529541

Token 1352: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.07335219532251358
    2. 'ee' → logprob: -2.698352098464966
    3. 'e' → logprob: -5.948352336883545
    4. '   ' → logprob: -7.573352336883545
    5. 'ed' → logprob: -8.823351860046387
    6. 'é' → logprob: -9.323351860046387
    7. '#' → logprob: -11.323351860046387
    8. 'rée' → logprob: -11.323351860046387
    9. 'd' → logprob: -12.573351860046387
    10. ')' → logprob: -12.823351860046387

Token 1353: ' finale' (ID: 37759)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.5453215837478638
    2. '=' → logprob: -1.7953215837478638
    3. ' =' → logprob: -2.045321464538574
    4. 'length' → logprob: -2.420321464538574
    5. '_len' → logprob: -3.920321464538574
    6. '   ' → logprob: -4.795321464538574
    7. 'len' → logprob: -5.545321464538574
    8. 'return' → logprob: -6.545321464538574
    9. 'final' → logprob: -7.045321464538574
    10. 'compressed' → logprob: -7.670321464538574

Token 1354: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7922927737236023
    2. 'return' → logprob: -0.7922927737236023
    3. ' return' → logprob: -2.542292833328247
    4. 'length' → logprob: -4.792292594909668
    5. ' =' → logprob: -5.417292594909668
    6. '_length' → logprob: -6.792292594909668
    7. '=' → logprob: -7.292292594909668
    8. ' length' → logprob: -7.417292594909668
    9. '_return' → logprob: -8.542292594909668
    10. 'result' → logprob: -9.292292594909668

Token 1355: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.024188576266169548
    2. ' min' → logprob: -3.77418851852417
    3. '   ' → logprob: -7.02418851852417
    4. 'return' → logprob: -10.149188995361328
    5. ' return' → logprob: -12.649188995361328
    6. '	min' → logprob: -12.774188995361328
    7. 'len' → logprob: -12.774188995361328
    8. '=min' → logprob: -13.524188995361328
    9. '(min' → logprob: -14.024188995361328
    10. '=' → logprob: -14.149188995361328

Token 1356: ' concat' (ID: 73950)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.02642696723341942
    2. ' min' → logprob: -4.026426792144775
    3. 'sum' → logprob: -5.401426792144775
    4. ' somme' → logprob: -6.776426792144775
    5. '   ' → logprob: -6.901426792144775
    6. 'length' → logprob: -7.401426792144775
    7. ' sum' → logprob: -8.151427268981934
    8. 'long' → logprob: -8.401427268981934
    9. 'minimum' → logprob: -8.901427268981934
    10. ' longueur' → logprob: -9.526427268981934

Token 1357: 'én' (ID: 3289)
  Prédit: 'én'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.15770596265792847
    2. 'en' → logprob: -2.4077060222625732
    3. 'ée' → logprob: -4.157705783843994
    4. '+' → logprob: -4.532705783843994
    5. 'née' → logprob: -4.782705783843994
    6. 'e' → logprob: -6.157705783843994
    7. '   ' → logprob: -6.282705783843994
    8. '#' → logprob: -6.532705783843994
    9. 'ee' → logprob: -6.657705783843994
    10. 'ened' → logprob: -6.907705783843994

Token 1358: 'ation' (ID: 387)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.4981369972229004
    2. 'ee' → logprob: -0.9981369972229004
    3. 'e' → logprob: -4.3731369972229
    4. 'ation' → logprob: -4.7481369972229
    5. 'é' → logprob: -6.1231369972229
    6. 'ed' → logprob: -8.873136520385742
    7. '   ' → logprob: -10.498136520385742
    8. '```' → logprob: -10.748136520385742
    9. 'née' → logprob: -10.748136520385742
    10. '
' → logprob: -10.873136520385742

Token 1359: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4459540843963623
    2. 'min' → logprob: -1.9459540843963623
    3. ' +' → logprob: -2.5709540843963623
    4. '+' → logprob: -2.5709540843963623
    5. '(min' → logprob: -3.3209540843963623
    6. ' des' → logprob: -4.820954322814941
    7. ' of' → logprob: -5.070954322814941
    8. ' min' → logprob: -5.820954322814941
    9. 'des' → logprob: -6.570954322814941
    10. ' de' → logprob: -6.570954322814941

Token 1360: ' compress' (ID: 34112)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.11757101118564606
    2. ' min' → logprob: -2.6175711154937744
    3. 'de' → logprob: -4.367570877075195
    4. 'lett' → logprob: -5.117570877075195
    5. ' deux' → logprob: -5.242570877075195
    6. ' parts' → logprob: -5.367570877075195
    7. ' lettres' → logprob: -5.992570877075195
    8. 'parts' → logprob: -6.867570877075195
    9. 'letters' → logprob: -7.242570877075195
    10. ' résultats' → logprob: -7.617570877075195

Token 1361: 'ions' (ID: 756)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.10076383501291275
    2. 'ée' → logprob: -2.6007637977600098
    3. 'ées' → logprob: -4.35076379776001
    4. 'é' → logprob: -5.97576379776001
    5. 'és' → logprob: -6.22576379776001
    6. 'ion' → logprob: -6.35076379776001
    7. 'éd' → logprob: -6.97576379776001
    8. '   ' → logprob: -7.97576379776001
    9. 'ee' → logprob: -8.100764274597168
    10. 'e' → logprob: -8.350764274597168

Token 1362: ' lettres' (ID: 101234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049692559987306595
    2. 'final' → logprob: -3.9246926307678223
    3. 'des' → logprob: -4.799692630767822
    4. ' +' → logprob: -5.299692630767822
    5. ' des' → logprob: -5.674692630767822
    6. '+' → logprob: -5.799692630767822
    7. 'min' → logprob: -6.424692630767822
    8. 'length' → logprob: -6.674692630767822
    9. 'de' → logprob: -7.424692630767822
    10. ' finale' → logprob: -7.424692630767822

Token 1363: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5929355025291443
    2. '+' → logprob: -0.8429355025291443
    3. '   ' → logprob: -4.092935562133789
    4. ' plus' → logprob: -9.467935562133789
    5. 'et' → logprob: -10.467935562133789
    6. 'plus' → logprob: -10.967935562133789
    7. ' et' → logprob: -11.467935562133789
    8. '```' → logprob: -12.592935562133789
    9. 'and' → logprob: -12.717935562133789
    10. '    ' → logprob: -12.717935562133789

Token 1364: ' compression' (ID: 41811)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.018317684531211853
    2. 'min' → logprob: -4.143317699432373
    3. ' digits' → logprob: -6.143317699432373
    4. '_digits' → logprob: -9.893317222595215
    5. ' min' → logprob: -10.393317222595215
    6. 'ch' → logprob: -10.518317222595215
    7. ' chiffres' → logprob: -11.643317222595215
    8. '   ' → logprob: -12.143317222595215
    9. 'dig' → logprob: -13.018317222595215
    10. 'Digits' → logprob: -13.268317222595215

Token 1365: ' chiffres' (ID: 105565)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.6272289752960205
    2. ' +' → logprob: -1.7522289752960205
    3. 'ch' → logprob: -2.0022289752960205
    4. '+' → logprob: -2.5022289752960205
    5. '_digits' → logprob: -3.2522289752960205
    6. '   ' → logprob: -3.6272289752960205
    7. ' digits' → logprob: -5.377228736877441
    8. '_ch' → logprob: -6.002228736877441
    9. 's' → logprob: -7.252228736877441
    10. ' chiffres' → logprob: -7.752228736877441

Token 1366: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49365490674972534
    2. 'return' → logprob: -0.9936549067497253
    3. ' return' → logprob: -3.99365496635437
    4. '    
' → logprob: -8.24365520477295
    5. ' +' → logprob: -8.36865520477295
    6. '
' → logprob: -8.49365520477295
    7. '+' → logprob: -8.86865520477295
    8. '  ' → logprob: -10.86865520477295
    9. 'result' → logprob: -11.24365520477295
    10. '    ' → logprob: -11.36865520477295

Token 1367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013233344070613384
    2. 'return' → logprob: -6.751323223114014
    3. 'min' → logprob: -9.751323699951172
    4. ' return' → logprob: -11.001323699951172
    5. '```' → logprob: -11.001323699951172
    6. '+' → logprob: -11.126323699951172
    7. '    
' → logprob: -11.626323699951172
    8. ' +' → logprob: -11.751323699951172
    9. '
' → logprob: -11.751323699951172
    10. 'result' → logprob: -12.251323699951172

Token 1368: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004939493257552385
    2. 'min' → logprob: -5.379939556121826
    3. '#' (adapté à ' #') → logprob: -9.004939079284668
    4. 'return' → logprob: -9.379939079284668
    5. 'plus' → logprob: -10.379939079284668
    6. ' plus' → logprob: -11.004939079284668
    7. '+' → logprob: -11.504939079284668
    8. '    ' → logprob: -11.504939079284668
    9. ' min' → logprob: -11.754939079284668
    10. 'len' → logprob: -11.754939079284668

Token 1369: ' le' (ID: 505)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3196130692958832
    2. '   ' → logprob: -1.4446130990982056
    3. ' return' → logprob: -3.319612979888916
    4. 'min' → logprob: -6.569612979888916
    5. ' min' → logprob: -9.694613456726074
    6. 'result' → logprob: -9.944613456726074
    7. '```' → logprob: -11.194613456726074
    8. '
' → logprob: -11.444613456726074
    9. 'ret' → logprob: -12.194613456726074
    10. ' retour' → logprob: -12.694613456726074

Token 1370: ' problème' (ID: 35630)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8419356942176819
    2. ' #' → logprob: -1.841935634613037
    3. '+' → logprob: -2.091935634613037
    4. ' total' → logprob: -2.591935634613037
    5. 'return' → logprob: -3.216935634613037
    6. 'total' → logprob: -3.591935634613037
    7. ' return' → logprob: -3.591935634613037
    8. ' plus' → logprob: -3.841935634613037
    9. ''' → logprob: -4.466935634613037
    10. 'min' → logprob: -4.466935634613037

Token 1371: ' montre' (ID: 56262)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.919840395450592
    2. '   ' → logprob: -1.0448403358459473
    3. 'n' → logprob: -2.9198403358459473
    4. ' return' → logprob: -3.2948403358459473
    5. ' est' → logprob: -3.7948403358459473
    6. '#' → logprob: -4.044840335845947
    7. 'est' → logprob: -4.294840335845947
    8. ')' → logprob: -4.419840335845947
    9. '.' → logprob: -4.544840335845947
    10. ':' → logprob: -4.919840335845947

Token 1372: ' dans' (ID: 2671)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.6694716811180115
    2. '   ' → logprob: -1.4194717407226562
    3. '#' → logprob: -2.2944717407226562
    4. 'que' → logprob: -2.7944717407226562
    5. 'that' → logprob: -4.169471740722656
    6. '```' → logprob: -4.669471740722656
    7. ''' → logprob: -5.044471740722656
    8. 'une' → logprob: -5.169471740722656
    9. ')' → logprob: -5.169471740722656
    10. ' that' → logprob: -5.169471740722656

Token 1373: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.22395624220371246
    2. 'la' → logprob: -2.098956346511841
    3. 'le' → logprob: -3.098956346511841
    4. 'les' → logprob: -4.098956108093262
    5. '#' → logprob: -4.973956108093262
    6. 'len' → logprob: -5.848956108093262
    7. 'ex' → logprob: -5.973956108093262
    8. 'une' → logprob: -6.973956108093262
    9. 'un' → logprob: -7.848956108093262
    10. 'c' → logprob: -8.223956108093262

Token 1374: ''ex' (ID: 23472)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1650029420852661
    2. 'ex' → logprob: -1.4150029420852661
    3. 'en' → logprob: -1.6650029420852661
    4. ''ex' → logprob: -2.4150028228759766
    5. 'én' → logprob: -3.0400028228759766
    6. 'code' → logprob: -3.9150028228759766
    7. 'e' → logprob: -4.165002822875977
    8. ''en' → logprob: -4.165002822875977
    9. ''' → logprob: -4.790002822875977
    10. 'suite' → logprob: -4.915002822875977

Token 1375: 'emple' (ID: 55259)
  Prédit: 'emple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emple' → logprob: -0.1241157278418541
    2. 'ample' → logprob: -2.2491157054901123
    3. 'trait' → logprob: -5.499115943908691
    4. 'm' → logprob: -6.374115943908691
    5. 'cerpt' → logprob: -6.374115943908691
    6. 'em' → logprob: -7.124115943908691
    7. 'e' → logprob: -7.124115943908691
    8. 'planation' → logprob: -7.374115943908691
    9. 'amples' → logprob: -7.874115943908691
    10. 'pression' → logprob: -8.624115943908691

Token 1376: ' qu' (ID: 474)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06147468090057373
    2. 'return' → logprob: -2.9364748001098633
    3. ' return' → logprob: -5.061474800109863
    4. '    
' → logprob: -8.686474800109863
    5. '
' → logprob: -10.436474800109863
    6. ',' → logprob: -12.311474800109863
    7. 'result' → logprob: -12.561474800109863
    8. '    ' → logprob: -12.561474800109863
    9. '#' → logprob: -12.686474800109863
    10. '	return' → logprob: -12.686474800109863

Token 1377: ''une' (ID: 13337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.5797085762023926
    2. '   ' → logprob: -1.7047085762023926
    3. 'u' → logprob: -1.7047085762023926
    4. ''il' → logprob: -1.8297085762023926
    5. 'e' → logprob: -1.9547085762023926
    6. ''on' → logprob: -2.7047085762023926
    7. '#' → logprob: -4.329708576202393
    8. ''est' → logprob: -5.204708576202393
    9. ''un' → logprob: -5.329708576202393
    10. 'a' → logprob: -5.704708576202393

Token 1378: ' ré' (ID: 3146)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6356906890869141
    2. '#' → logprob: -1.385690689086914
    3. '-' → logprob: -2.885690689086914
    4. 'chaine' → logprob: -3.135690689086914
    5. '   ' → logprob: -4.135690689086914
    6. ' #' → logprob: -4.260690689086914
    7. 'lett' → logprob: -4.385690689086914
    8. ')' → logprob: -4.510690689086914
    9. 'return' → logprob: -4.885690689086914
    10. 'plus' → logprob: -5.385690689086914

Token 1379: 'organisation' (ID: 49904)
  Prédit: 'ponse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponse' → logprob: -0.416273295879364
    2. 'organisation' → logprob: -2.041273355484009
    3. 'arr' → logprob: -2.541273355484009
    4. 's' → logprob: -2.916273355484009
    5. 'solution' → logprob: -3.916273355484009
    6. 'partition' → logprob: -4.04127311706543
    7. 'é' → logprob: -4.54127311706543
    8. 'sum' → logprob: -4.91627311706543
    9. 'ord' → logprob: -5.29127311706543
    10. 'duction' → logprob: -5.54127311706543

Token 1380: ' put' (ID: 3006)
  Prédit: ' complète'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' complète' → logprob: -0.667425274848938
    2. ' des' → logprob: -1.917425274848938
    3. 'des' → logprob: -2.2924251556396484
    4. 'possible' → logprob: -3.1674251556396484
    5. ' possible' → logprob: -3.5424251556396484
    6. ' est' → logprob: -3.7924251556396484
    7. '   ' → logprob: -3.9174251556396484
    8. ' complet' → logprob: -4.042425155639648
    9. ' =' → logprob: -4.167425155639648
    10. '_possible' → logprob: -4.292425155639648

Token 1381: ' toute' (ID: 16825)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.5072237253189087
    2. 's' → logprob: -1.6322237253189087
    3. '#' → logprob: -1.7572237253189087
    4. 'erm' → logprob: -1.8822237253189087
    5. 'u' → logprob: -3.007223606109619
    6. 'possible' → logprob: -3.132223606109619
    7. 'er' → logprob: -3.632223606109619
    8. 'r' → logprob: -3.882223606109619
    9. '
' → logprob: -4.007223606109619
    10. 'poss' → logprob: -4.507223606109619

Token 1382: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.056003212928772
    2. '```' → logprob: -1.931003212928772
    3. ')' → logprob: -2.6810030937194824
    4. 'r' → logprob: -3.0560030937194824
    5. '#' → logprob: -3.4310030937194824
    6. '+' → logprob: -3.5560030937194824
    7. 'prise' → logprob: -3.5560030937194824
    8. 'faire' → logprob: -3.6810030937194824
    9. 'ré' → logprob: -3.9310030937194824
    10. 'def' → logprob: -4.056003093719482

Token 1383: ' rendre' (ID: 44629)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.130941241979599
    2. 'cha' → logprob: -3.130941152572632
    3. 'string' → logprob: -3.380941152572632
    4. 'long' → logprob: -3.630941152572632
    5. 'tail' → logprob: -4.505941390991211
    6. 's' → logprob: -5.505941390991211
    7. 'suite' → logprob: -7.255941390991211
    8. 'str' → logprob: -7.880941390991211
    9. 'chain' → logprob: -7.880941390991211
    10. ' chaîne' → logprob: -8.255941390991211

Token 1384: ' cont' (ID: 836)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49279865622520447
    2. 'return' → logprob: -0.9927986860275269
    3. ' return' → logprob: -3.9927985668182373
    4. '    
' → logprob: -9.492798805236816
    5. '
' → logprob: -11.242798805236816
    6. '	return' → logprob: -12.742798805236816
    7. '    ' → logprob: -12.867798805236816
    8. '  ' → logprob: -13.867798805236816
    9. '_return' → logprob: -14.117798805236816
    10. '       ' → logprob: -14.492798805236816

Token 1385: 'igu' (ID: 12143)
  Prédit: 'inue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.2907484769821167
    2. 'enue' → logprob: -1.5407484769821167
    3. 'rol' → logprob: -4.540748596191406
    4. 'in' → logprob: -4.540748596191406
    5. 'role' → logprob: -5.040748596191406
    6. 'ent' → logprob: -5.665748596191406
    7. 'inu' → logprob: -5.790748596191406
    8. 'enu' → logprob: -6.540748596191406
    9. 'rolle' → logprob: -8.040748596191406
    10. 'INUE' → logprob: -8.540748596191406

Token 1386: 'ë' (ID: 1730)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.022458627820014954
    2. 'es' → logprob: -3.897458553314209
    3. 's' → logprob: -6.897458553314209
    4. 'é' → logprob: -8.022459030151367
    5. 'ée' → logprob: -8.147459030151367
    6. '```' → logprob: -8.897459030151367
    7. 'és' → logprob: -10.022459030151367
    8. 'ous' → logprob: -10.647459030151367
    9. 'us' → logprob: -11.522459030151367
    10. ''e' → logprob: -11.772459030151367

Token 1387: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3136760890483856
    2. 'return' → logprob: -1.313676118850708
    3. ' return' → logprob: -8.688675880432129
    4. '    
' → logprob: -8.688675880432129
    5. '
' → logprob: -9.563675880432129
    6. '```' → logprob: -12.188675880432129
    7. '	return' → logprob: -14.188675880432129
    8. '    ' → logprob: -15.313675880432129
    9. 'result' → logprob: -15.563675880432129
    10. '#' → logprob: -15.688675880432129

Token 1388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39526939392089844
    2. 'return' → logprob: -1.1452693939208984
    3. '
' → logprob: -5.145269393920898
    4. '    
' → logprob: -6.770269393920898
    5. 'result' → logprob: -7.145269393920898
    6. ' return' → logprob: -7.645269393920898
    7. '```' → logprob: -9.395269393920898
    8. 'total' → logprob: -11.145269393920898
    9. 'min' → logprob: -12.395269393920898
    10. '	return' → logprob: -12.770269393920898

Token 1389: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47505316138267517
    2. 'return' → logprob: -0.9750531911849976
    3. '
' → logprob: -7.475053310394287
    4. '    
' → logprob: -8.225052833557129
    5. ' return' → logprob: -8.975052833557129
    6. '```' → logprob: -11.850052833557129
    7. 'result' → logprob: -12.850052833557129
    8. '	return' → logprob: -13.600052833557129
    9. '  
' → logprob: -14.850052833557129
    10. '    ' → logprob: -14.975052833557129

Token 1390: ' Le' (ID: 2018)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10079692304134369
    2. '   ' → logprob: -2.350796937942505
    3. ' return' → logprob: -7.600796699523926
    4. '```' → logprob: -10.100796699523926
    5. '
' → logprob: -10.475796699523926
    6. '    
' → logprob: -11.100796699523926
    7. 'result' → logprob: -12.475796699523926
    8. '	return' → logprob: -14.100796699523926
    9. '  ' → logprob: -15.475796699523926
    10. '  
' → logprob: -15.600796699523926

Token 1391: ' nombre' (ID: 9733)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07868938148021698
    2. 'result' → logprob: -3.4536893367767334
    3. ' return' → logprob: -3.8286893367767334
    4. 'min' → logprob: -4.7036895751953125
    5. '#' → logprob: -4.8286895751953125
    6. '
' → logprob: -6.8286895751953125
    7. 'res' → logprob: -6.8286895751953125
    8. 'total' → logprob: -7.2036895751953125
    9. 'final' → logprob: -7.2036895751953125
    10. ' result' → logprob: -8.328689575195312

Token 1392: ' total' (ID: 3609)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.8266105651855469
    2. 'final' → logprob: -1.4516105651855469
    3. '_final' → logprob: -2.326610565185547
    4. 'total' → logprob: -2.451610565185547
    5. '_min' → logprob: -2.451610565185547
    6. ' =' → logprob: -3.951610565185547
    7. '_com' → logprob: -4.576610565185547
    8. '=' → logprob: -4.701610565185547
    9. 'min' → logprob: -5.326610565185547
    10. 'minimal' → logprob: -5.451610565185547

Token 1393: ' minimal' (ID: 19957)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020091453567147255
    2. '+=' → logprob: -4.645091533660889
    3. ' =' → logprob: -5.145091533660889
    4. '_total' → logprob: -6.395091533660889
    5. ' +=' → logprob: -7.145091533660889
    6. 'total' → logprob: -7.270091533660889
    7. '_com' → logprob: -7.895091533660889
    8. 'final' → logprob: -8.27009105682373
    9. '+' → logprob: -9.02009105682373
    10. '_final' → logprob: -9.27009105682373

Token 1394: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4268767833709717
    2. ' =' → logprob: -1.3018767833709717
    3. 'return' → logprob: -2.9268767833709717
    4. '   ' → logprob: -3.9268767833709717
    5. ' return' → logprob: -6.301877021789551
    6. ')' → logprob: -9.92687702178955
    7. 'min' → logprob: -10.05187702178955
    8. '
' → logprob: -10.17687702178955
    9. ' est' → logprob: -10.17687702178955
    10. 'result' → logprob: -10.67687702178955

Token 1395: ' alors' (ID: 17971)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01120520755648613
    2. ' min' → logprob: -4.511205196380615
    3. '   ' → logprob: -8.761205673217773
    4. 'return' → logprob: -15.136205673217773
    5. '  ' → logprob: -15.761205673217773
    6. '	min' → logprob: -15.886205673217773
    7. '    ' → logprob: -17.261205673217773
    8. ' ' → logprob: -17.511205673217773
    9. ' return' → logprob: -17.636205673217773
    10. '(min' → logprob: -17.761205673217773

Token 1396: ' somme' (ID: 64484)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.009210538119077682
    2. ' min' → logprob: -4.759210586547852
    3. '   ' → logprob: -7.509210586547852
    4. 'return' → logprob: -10.009210586547852
    5. ' return' → logprob: -12.884210586547852
    6. ' ' → logprob: -16.00921058654785
    7. '  ' → logprob: -16.13421058654785
    8. '```' → logprob: -17.13421058654785
    9. '	min' → logprob: -17.38421058654785
    10. '(min' → logprob: -17.88421058654785

Token 1397: ' des' (ID: 731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48384544253349304
    2. ' =' → logprob: -1.6088454723358154
    3. '   ' → logprob: -2.3588454723358154
    4. '(min' → logprob: -3.2338454723358154
    5. 'min' → logprob: -3.4838454723358154
    6. '(' → logprob: -4.858845233917236
    7. ':' → logprob: -5.358845233917236
    8. '+' → logprob: -6.358845233917236
    9. '(
' → logprob: -6.858845233917236
    10. '=min' → logprob: -7.108845233917236

Token 1398: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0003449984942562878
    2. ' min' → logprob: -8.000345230102539
    3. '(min' → logprob: -13.250345230102539
    4. '[min' → logprob: -13.250345230102539
    5. '   ' → logprob: -13.625345230102539
    6. 'len' → logprob: -14.125345230102539
    7. 'minimum' → logprob: -14.375345230102539
    8. 'minimal' → logprob: -14.375345230102539
    9. 'de' → logprob: -14.625345230102539
    10. 'length' → logprob: -14.875345230102539

Token 1399: ' des' (ID: 731)
  Prédit: '_letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_letters' → logprob: -0.010680977255105972
    2. '_' → logprob: -4.63568115234375
    3. '_lengths' → logprob: -8.13568115234375
    4. '_com' → logprob: -8.51068115234375
    5. '(min' → logprob: -8.88568115234375
    6. 'min' → logprob: -9.63568115234375
    7. '_codes' → logprob: -10.13568115234375
    8. '_length' → logprob: -10.38568115234375
    9. '_chars' → logprob: -10.63568115234375
    10. '(com' → logprob: -11.13568115234375

Token 1400: ' ' (ID: 220)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0027352094184607267
    2. 'lett' → logprob: -6.627735137939453
    3. 'let' → logprob: -8.127735137939453
    4. '_letters' → logprob: -8.377735137939453
    5. 'length' → logprob: -8.877735137939453
    6. 'letters' → logprob: -9.002735137939453
    7. '(min' → logprob: -9.002735137939453
    8. '```' → logprob: -9.252735137939453
    9. '[min' → logprob: -9.627735137939453
    10. 'de' → logprob: -9.877735137939453

Token 1401: '2' (ID: 17)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.37387728691101074
    2. 'de' → logprob: -2.1238772869110107
    3. '_letters' → logprob: -2.6238772869110107
    4. 'lett' → logprob: -3.6238772869110107
    5. '[min' → logprob: -3.8738772869110107
    6. '_lengths' → logprob: -4.37387752532959
    7. 'length' → logprob: -4.62387752532959
    8. 'let' → logprob: -4.87387752532959
    9. '(min' → logprob: -5.12387752532959
    10. 'letters' → logprob: -5.49887752532959

Token 1402: ' groupes' (ID: 72206)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5870606899261475
    2. '   ' → logprob: -0.8370606899261475
    3. '
' → logprob: -5.212060928344727
    4. ' return' → logprob: -5.587060928344727
    5. '    
' → logprob: -6.337060928344727
    6. '	return' → logprob: -10.462060928344727
    7. '```' → logprob: -10.712060928344727
    8. '
' → logprob: -11.337060928344727
    9. '  
' → logprob: -11.587060928344727
    10. '   
' → logprob: -12.087060928344727

Token 1403: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04001067578792572
    2. 'return' → logprob: -3.290010690689087
    3. '
' → logprob: -6.915010452270508
    4. '    
' → logprob: -7.415010452270508
    5. ' return' → logprob: -7.915010452270508
    6. '```' → logprob: -12.915010452270508
    7. '	return' → logprob: -13.415010452270508
    8. 'total' → logprob: -14.665010452270508
    9. '       ' → logprob: -14.665010452270508
    10. '        
' → logprob: -14.790010452270508

Token 1404: '    
' (ID: 1944)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5761926770210266
    2. '   ' → logprob: -0.8261926770210266
    3. '```' → logprob: -9.326192855834961
    4. ' return' → logprob: -9.576192855834961
    5. '    
' → logprob: -9.826192855834961
    6. '
' → logprob: -10.201192855834961
    7. '	return' → logprob: -12.701192855834961
    8. '``' → logprob: -16.07619285583496
    9. '{return' → logprob: -16.20119285583496
    10. '       ' → logprob: -16.82619285583496

Token 1405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6933369636535645
    2. 'return' → logprob: -0.6933369636535645
    3. ' return' → logprob: -8.943336486816406
    4. '```' → logprob: -9.943336486816406
    5. '    
' → logprob: -12.443336486816406
    6. '
' → logprob: -12.568336486816406
    7. '	return' → logprob: -13.318336486816406
    8. '{return' → logprob: -14.068336486816406
    9. '_return' → logprob: -15.068336486816406
    10. ':return' → logprob: -15.443336486816406

Token 1406: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01817663200199604
    2. '   ' → logprob: -4.018176555633545
    3. ' return' → logprob: -11.018177032470703
    4. '```' → logprob: -11.518177032470703
    5. '    
' → logprob: -16.143177032470703
    6. '
' → logprob: -16.143177032470703
    7. 'result' → logprob: -16.268177032470703
    8. '	return' → logprob: -16.268177032470703
    9. '{return' → logprob: -18.518177032470703
    10. '`' → logprob: -18.643177032470703

Token 1407: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.941850526549388e-06
    2. ' min' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.50000762939453
    4. '(min' → logprob: -17.62500762939453
    5. 'max' → logprob: -20.50000762939453
    6. '[min' → logprob: -21.37500762939453
    7. '	min' → logprob: -22.00000762939453
    8. '_min' → logprob: -22.87500762939453
    9. '  ' → logprob: -23.87500762939453
    10. ' ' → logprob: -24.25000762939453

Token 1408: '_letters' (ID: 175934)
  Prédit: '_letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letters' → logprob: -5.512236498361744e-07
    2. '_digits' → logprob: -15.125000953674316
    3. 'letters' → logprob: -15.875000953674316
    4. '_' → logprob: -17.375
    5. '```' → logprob: -17.375
    6. 'Letters' → logprob: -17.75
    7. '(min' → logprob: -18.125
    8. '\' → logprob: -18.5
    9. '(' → logprob: -18.5
    10. 'min' → logprob: -19.125

Token 1409: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16026364266872406
    2. '+' → logprob: -1.9102636575698853
    3. '   ' → logprob: -10.410264015197754
    4. '_' → logprob: -11.910264015197754
    5. '```' → logprob: -14.410264015197754
    6. '()+' → logprob: -14.535264015197754
    7. ' +
' → logprob: -15.160264015197754
    8. ' plus' → logprob: -15.410264015197754
    9. '+
' → logprob: -15.785264015197754
    10. '    ' → logprob: -15.910264015197754

Token 1410: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -5.836499985889532e-05
    2. ' min' → logprob: -9.7500581741333
    3. '_min' → logprob: -17.625059127807617
    4. '   ' → logprob: -18.125059127807617
    5. '(min' → logprob: -18.750059127807617
    6. 'max' → logprob: -19.750059127807617
    7. '	min' → logprob: -19.875059127807617
    8. ' ' → logprob: -20.250059127807617
    9. '  ' → logprob: -21.125059127807617
    10. '    ' → logprob: -21.875059127807617

Token 1411: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -7.941850526549388e-06
    2. 'digits' → logprob: -12.000007629394531
    3. '_' → logprob: -14.000007629394531
    4. '_letters' → logprob: -16.00000762939453
    5. '_digit' → logprob: -16.25000762939453
    6. '```' → logprob: -16.37500762939453
    7. 'Digits' → logprob: -16.37500762939453
    8. '_numbers' → logprob: -16.62500762939453
    9. '_chars' → logprob: -16.62500762939453
    10. ' _' → logprob: -16.87500762939453

Token 1412: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1413: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1414: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6256015300750732
    2. '<|end|>' → logprob: -0.8756015300750732
    3. '```' → logprob: -3.3756015300750732
    4. '<|end|>' → logprob: -5.125601768493652
    5. ')' → logprob: -5.500601768493652
    6. '
' → logprob: -6.625601768493652
    7. 'def' → logprob: -7.000601768493652
    8. '[' → logprob: -8.000601768493652
    9. ' ' → logprob: -8.375601768493652
    10. '(' → logprob: -8.375601768493652

Token 1415: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.39505815505981445
    2. 'n' → logprob: -2.5200581550598145
    3. '(s' → logprob: -3.0200581550598145
    4. 'input' → logprob: -3.0200581550598145
    5. '()' → logprob: -3.3950581550598145
    6. '<|end|>' → logprob: -3.8950581550598145
    7. '#' → logprob: -4.0200581550598145
    8. '(input' → logprob: -4.3950581550598145
    9. '(' → logprob: -4.5200581550598145
    10. 'def' → logprob: -4.6450581550598145

Token 1416: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.26277220249176025
    2. 'import' → logprob: -2.1377720832824707
    3. 's' → logprob: -3.1377720832824707
    4. 'l' → logprob: -3.8877720832824707
    5. 'entrée' → logprob: -4.012772083282471
    6. ' input' → logprob: -5.012772083282471
    7. 'la' → logprob: -5.262772083282471
    8. 'stdin' → logprob: -5.387772083282471
    9. 'chaine' → logprob: -5.762772083282471
    10. '```' → logprob: -5.887772083282471

Token 1417: ''entrée' (ID: 115820)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6970323324203491
    2. 'input' → logprob: -1.4470323324203491
    3. 's' → logprob: -2.4470324516296387
    4. '\' → logprob: -3.4470324516296387
    5. '_input' → logprob: -3.5720324516296387
    6. 'import' → logprob: -3.6970324516296387
    7. ' input' → logprob: -3.9470324516296387
    8. '#' → logprob: -4.322032451629639
    9. '```' → logprob: -4.322032451629639
    10. ''' → logprob: -5.197032451629639

Token 1418: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3628624975681305
    2. 's' → logprob: -1.237862467765808
    3. 'input' → logprob: -5.362862586975098
    4. '```' → logprob: -5.987862586975098
    5. 'string' → logprob: -6.112862586975098
    6. 'import' → logprob: -6.737862586975098
    7. '(s' → logprob: -6.737862586975098
    8. '(n' → logprob: -7.487862586975098
    9. '\n' → logprob: -7.737862586975098
    10. '
' → logprob: -7.737862586975098

Token 1419: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0034850817173719406
    2. 'n' → logprob: -5.753485202789307
    3. 'import' → logprob: -8.378484725952148
    4. '```' → logprob: -9.628484725952148
    5. 'input' → logprob: -11.753484725952148
    6. 'string' → logprob: -13.378484725952148
    7. ' s' → logprob: -13.503484725952148
    8. 'if' → logprob: -15.378484725952148
    9. 't' → logprob: -15.753484725952148
    10. '
' → logprob: -16.37848472595215

Token 1420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408220171928406
    2. ' =' → logprob: -0.9740822315216064
    3. 's' → logprob: -13.224081993103027
    4. '_' → logprob: -13.724081993103027
    5. '=input' → logprob: -14.099081993103027
    6. ',' → logprob: -14.599081993103027
    7. ' ' → logprob: -15.349081993103027
    8. ' =
' → logprob: -15.974081993103027
    9. ')' → logprob: -16.099082946777344
    10. '_=' → logprob: -16.224082946777344

Token 1421: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019287518225610256
    2. ' input' → logprob: -6.251928806304932
    3. '=input' → logprob: -16.001928329467773
    4. '(input' → logprob: -17.376928329467773
    5. '	input' → logprob: -17.751928329467773
    6. '<input' → logprob: -19.376928329467773
    7. '"' → logprob: -19.876928329467773
    8. ' ' → logprob: -20.251928329467773
    9. ',input' → logprob: -20.501928329467773
    10. '.input' → logprob: -21.626928329467773

Token 1422: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008885184302926064
    2. '().' → logprob: -4.758885383605957
    3. '(' → logprob: -8.883885383605957
    4. '.strip' → logprob: -9.758885383605957
    5. '()
' → logprob: -10.133885383605957
    6. '())' → logprob: -10.883885383605957
    7. ' ()' → logprob: -12.508885383605957
    8. ')' → logprob: -13.133885383605957
    9. 'strip' → logprob: -13.258885383605957
    10. '#' → logprob: -13.883885383605957

Token 1423: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -9.615255839889869e-05
    2. 'rstrip' → logprob: -9.250096321105957
    3. ' strip' → logprob: -17.87509536743164
    4. 'read' → logprob: -18.62509536743164
    5. '_strip' → logprob: -19.25009536743164
    6. '(strip' → logprob: -20.75009536743164
    7. 'Strip' → logprob: -21.37509536743164
    8. '-strip' → logprob: -22.37509536743164
    9. 'str' → logprob: -22.62509536743164
    10. '.strip' → logprob: -23.25009536743164

Token 1424: '()

' (ID: 5874)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.7491250875755213e-05
    2. '
' → logprob: -10.875027656555176
    3. 'result' → logprob: -12.500027656555176
    4. '```' → logprob: -12.750027656555176
    5. '#' → logprob: -14.125027656555176
    6. ' print' → logprob: -14.250027656555176
    7. '`
' → logprob: -16.12502670288086
    8. '``' → logprob: -16.12502670288086
    9. '#print' → logprob: -16.87502670288086
    10. '#
' → logprob: -17.75002670288086

Token 1425: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. 'result' → logprob: -15.0
    3. ' print' → logprob: -16.875
    4. '
' → logprob: -18.75
    5. '```' → logprob: -18.75
    6. '#' → logprob: -19.75
    7. '#print' → logprob: -20.75
    8. 'answer' → logprob: -21.25
    9. '	print' → logprob: -22.125
    10. 'pr' → logprob: -22.25

Token 1426: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.842555426876061e-06
    2. 'result' → logprob: -12.250004768371582
    3. ' print' → logprob: -19.1250057220459
    4. '```' → logprob: -19.1250057220459
    5. 'length' → logprob: -20.3750057220459
    6. '#' → logprob: -21.5000057220459
    7. '
' → logprob: -21.7500057220459
    8. '#print' → logprob: -22.1250057220459
    9. 'answer' → logprob: -22.5000057220459
    10. 'res' → logprob: -22.5000057220459

Token 1427: ' et' (ID: 859)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006721298210322857
    2. 'result' → logprob: -5.006721496582031
    3. ' print' → logprob: -13.256721496582031
    4. '#' → logprob: -14.131721496582031
    5. '(print' → logprob: -14.131721496582031
    6. '```' → logprob: -14.131721496582031
    7. '(result' → logprob: -14.256721496582031
    8. 'length' → logprob: -14.756721496582031
    9. 'output' → logprob: -14.881721496582031
    10. 'res' → logprob: -15.881721496582031

Token 1428: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '
' → logprob: -18.0
    3. ' print' → logprob: -18.0
    4. '```' → logprob: -18.875
    5. 'result' → logprob: -21.875
    6. '#print' → logprob: -23.75
    7. '``' → logprob: -24.125
    8. '#' → logprob: -24.25
    9. '	print' → logprob: -24.625
    10. 'pr' → logprob: -25.25

Token 1429: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.10241388529539108
    2. 'print' → logprob: -2.3524138927459717
    3. 'er' → logprob: -6.852413654327393
    4. 'e' → logprob: -6.852413654327393
    5. '#' → logprob: -10.22741413116455
    6. 'ation' → logprob: -11.10241413116455
    7. ' print' → logprob: -11.47741413116455
    8. '#print' → logprob: -11.60241413116455
    9. '   ' → logprob: -12.22741413116455
    10. 'ge' → logprob: -12.35241413116455

Token 1430: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.319370302458992e-06
    2. '```' → logprob: -12.250005722045898
    3. 'result' → logprob: -14.750005722045898
    4. '
' → logprob: -16.6250057220459
    5. ' print' → logprob: -16.7500057220459
    6. '``' → logprob: -17.2500057220459
    7. '(print' → logprob: -19.1250057220459
    8. 'answer' → logprob: -22.5000057220459
    9. '`
' → logprob: -22.7500057220459
    10. '	print' → logprob: -22.7500057220459

Token 1431: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003372502396814525
    2. 'result' → logprob: -8.000337600708008
    3. 'min' → logprob: -13.375337600708008
    4. ' print' → logprob: -16.000337600708008
    5. 'rés' → logprob: -16.625337600708008
    6. ' résultat' → logprob: -17.750337600708008
    7. 'resultado' → logprob: -18.875337600708008
    8. 'res' → logprob: -19.500337600708008
    9. '(print' → logprob: -20.375337600708008
    10. 'output' → logprob: -20.750337600708008

Token 1432: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.822646693966817e-06
    2. '```' → logprob: -12.000007629394531
    3. '
' → logprob: -13.625007629394531
    4. ' print' → logprob: -15.625007629394531
    5. '``' → logprob: -16.00000762939453
    6. 'result' → logprob: -16.37500762939453
    7. '#print' → logprob: -20.62500762939453
    8. '`
' → logprob: -21.00000762939453
    9. '    
' → logprob: -21.62500762939453
    10. '  
' → logprob: -21.75000762939453

Token 1433: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.5
    3. ' print' → logprob: -21.875
    4. 'result' → logprob: -23.0
    5. '
' → logprob: -23.5
    6. '``' → logprob: -24.0
    7. 'println' → logprob: -26.25
    8. '	print' → logprob: -26.625
    9. 'printf' → logprob: -27.625
    10. '#print' → logprob: -27.75

Token 1434: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -3.292907877039397e-06
    2. 'min' → logprob: -12.75000286102295
    3. '(' → logprob: -15.00000286102295
    4. ' min' → logprob: -19.500003814697266
    5. ',min' → logprob: -21.625003814697266
    6. '=min' → logprob: -21.750003814697266
    7. '[min' → logprob: -22.000003814697266
    8. '(max' → logprob: -22.500003814697266
    9. '	min' → logprob: -22.625003814697266
    10. '_min' → logprob: -23.250003814697266

Token 1435: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -1.9361264946837764e-07
    2. 'compressed' → logprob: -17.375
    3. '_letters' → logprob: -17.625
    4. '(com' → logprob: -18.0
    5. 'Compressed' → logprob: -19.25
    6. '(min' → logprob: -19.625
    7. 's' → logprob: -19.875
    8. '_COM' → logprob: -20.125
    9. '_Com' → logprob: -20.25
    10. 'min' → logprob: -20.25

Token 1436: 'pressed' (ID: 26974)
  Prédit: 'pressed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressed' → logprob: -8.458980300929397e-05
    2. 'pr' → logprob: -10.75008487701416
    3. '_pressed' → logprob: -11.00008487701416
    4. 'ressed' → logprob: -11.12508487701416
    5. 'pres' → logprob: -11.50008487701416
    6. 'p' → logprob: -11.50008487701416
    7. 'press' → logprob: -11.87508487701416
    8. '```' → logprob: -13.12508487701416
    9. 'prim' → logprob: -15.00008487701416
    10. '_' → logprob: -15.12508487701416

Token 1437: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -3.531315314830863e-06
    2. 'ed' → logprob: -13.750003814697266
    3. '_len' → logprob: -13.875003814697266
    4. 'length' → logprob: -14.250003814697266
    5. 'ted' → logprob: -14.625003814697266
    6. 'd' → logprob: -16.250003814697266
    7. 't' → logprob: -16.625003814697266
    8. '_' → logprob: -17.250003814697266
    9. '_LENGTH' → logprob: -17.500003814697266
    10. '_lengths' → logprob: -17.500003814697266

Token 1438: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.250004768371582
    3. 's' → logprob: -15.500004768371582
    4. ')' → logprob: -16.2500057220459
    5. ' (' → logprob: -17.1250057220459
    6. ')(' → logprob: -17.5000057220459
    7. '(f' → logprob: -18.5000057220459
    8. '(
' → logprob: -19.7500057220459
    9. ')s' → logprob: -19.8750057220459
    10. '(string' → logprob: -20.3750057220459

Token 1439: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3871675729751587
    2. '))' → logprob: -1.1371675729751587
    3. '())' → logprob: -8.137167930603027
    4. ')))' → logprob: -13.512167930603027
    5. '()' → logprob: -14.262167930603027
    6. '()))' → logprob: -14.262167930603027
    7. '])' → logprob: -15.262167930603027
    8. ')")' → logprob: -15.387167930603027
    9. ' )' → logprob: -15.512167930603027
    10. '})' → logprob: -15.762167930603027


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1437
Tokens correctement prédits (1ère position, stricte): 398
Tokens correctement prédits (1ère position, avec adaptation): 428
Tokens correctement prédits (top 10): 897
Précision stricte (1ère position): 27.70%
Précision adaptée (1ère position): 29.78%
Précision (top 10): 62.42%
================================================================================
