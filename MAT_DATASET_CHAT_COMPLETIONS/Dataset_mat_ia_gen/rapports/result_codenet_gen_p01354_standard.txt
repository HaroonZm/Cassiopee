================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
m,n=map(int,input().split())
p=[list(map(float,input().split())) for _ in range(m)]
dp=[-1]*(1<<n)
def dfs(mask):
    if dp[mask]>=0: return dp[mask]
    if mask==(1<<n)-1: return 1.0
    res=0.0
    for i in range(m):
        pos=0
        while pos<n and (mask&(1<<pos)): pos+=1
        q=p[i][pos]
        win=dfs(mask|(1<<pos))*q
        lose=dfs(mask)* (1-q)
        res=max(res,win+lose)
    dp[mask]=res
    return res
print(dfs(0))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'm' (ID: 76)
  → Token d'amorce (pas de prédiction)

Token 1: ',n' (ID: 18103)
  → Token d'amorce (pas de prédiction)

Token 2: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 3: 'map' (ID: 3726)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2321767956018448
    2. ' ' → logprob: -2.1071767807006836
    3. '10' → logprob: -2.9821767807006836
    4. '5' → logprob: -4.232176780700684
    5. 'map' → logprob: -4.482176780700684
    6. '1' → logprob: -5.357176780700684
    7. ' map' → logprob: -6.357176780700684
    8. '2' → logprob: -6.732176780700684
    9. 'input' → logprob: -7.732176780700684
    10. '4' → logprob: -8.482176780700684

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032584001310169697
    2. '(lambda' → logprob: -6.003258228302002
    3. '(int' → logprob: -7.628258228302002
    4. '(str' → logprob: -8.62825870513916
    5. '```' → logprob: -9.75325870513916
    6. '(
' → logprob: -11.37825870513916
    7. '(input' → logprob: -12.75325870513916
    8. '[int' → logprob: -12.75325870513916
    9. ' (' → logprob: -12.75325870513916
    10. '\(' → logprob: -13.00325870513916

Token 5: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.27178287506103516
    2. 'input' → logprob: -1.6467828750610352
    3. ',input' → logprob: -3.521782875061035
    4. ')' → logprob: -4.271782875061035
    5. ' input' → logprob: -7.146782875061035
    6. ',' → logprob: -7.646782875061035
    7. '=input' → logprob: -8.396782875061035
    8. '(' → logprob: -9.646782875061035
    9. '[input' → logprob: -9.771782875061035
    10. '`)' → logprob: -9.896782875061035

Token 6: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8800333142280579
    2. '()' → logprob: -1.255033254623413
    3. '(' → logprob: -1.880033254623413
    4. ')' → logprob: -2.005033254623413
    5. '().' → logprob: -6.505033493041992
    6. '());' → logprob: -6.630033493041992
    7. '()">' → logprob: -6.755033493041992
    8. '`()' → logprob: -7.005033493041992
    9. '();)' → logprob: -7.380033493041992
    10. '(()' → logprob: -7.380033493041992

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00014478032244369388
    2. 'strip' → logprob: -9.125144958496094
    3. ')' → logprob: -11.000144958496094
    4. ' split' → logprob: -11.625144958496094
    5. '(split' → logprob: -12.000144958496094
    6. 'rstrip' → logprob: -12.625144958496094
    7. 'spl' → logprob: -15.375144958496094
    8. 'read' → logprob: -15.750144958496094
    9. 'plit' → logprob: -16.125144958496094
    10. '```' → logprob: -16.625144958496094

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43009182810783386
    2. '())' → logprob: -1.1800918579101562
    3. '))' → logprob: -3.4300918579101562
    4. '(' → logprob: -5.680091857910156
    5. '()' → logprob: -5.680091857910156
    6. '()))' → logprob: -5.930091857910156
    7. '('' → logprob: -8.930091857910156
    8. '`)' → logprob: -9.180091857910156
    9. '')' → logprob: -10.930091857910156
    10. ' ())' → logprob: -10.930091857910156

Token 9: 'p' (ID: 79)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6883808374404907
    2. ' ' → logprob: -1.9383808374404907
    3. 'a' → logprob: -2.063380718231201
    4. 'if' → logprob: -2.313380718231201
    5. ',' → logprob: -2.563380718231201
    6. ''' → logprob: -2.563380718231201
    7. '`' → logprob: -3.313380718231201
    8. '\n' → logprob: -3.438380718231201
    9. '#' → logprob: -3.563380718231201
    10. 's' → logprob: -3.688380718231201

Token 10: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5909682512283325
    2. 'r' → logprob: -1.5909682512283325
    3. '=' → logprob: -1.9659682512283325
    4. ',' → logprob: -3.590968132019043
    5. ' =' → logprob: -4.090968132019043
    6. 'u' → logprob: -4.465968132019043
    7. '[i' → logprob: -4.715968132019043
    8. '[:]' → logprob: -5.090968132019043
    9. ',r' → logprob: -5.340968132019043
    10. 'e' → logprob: -5.590968132019043

Token 11: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.030848853290081024
    2. '0' → logprob: -3.530848741531372
    3. 'list' → logprob: -7.655848979949951
    4. 'i' → logprob: -8.155848503112793
    5. '[]' → logprob: -9.030848503112793
    6. 'map' → logprob: -9.655848503112793
    7. ']' → logprob: -10.405848503112793
    8. '[int' → logprob: -10.655848503112793
    9. '(int' → logprob: -10.780848503112793
    10. ' int' → logprob: -10.905848503112793

Token 12: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0015942457830533385
    2. '(' → logprob: -6.501594066619873
    3. '(int' → logprob: -9.376594543457031
    4. '(input' → logprob: -12.251594543457031
    5. '(range' → logprob: -14.376594543457031
    6. '(eval' → logprob: -14.376594543457031
    7. '()' → logprob: -15.001594543457031
    8. 'map' → logprob: -15.376594543457031
    9. '(
' → logprob: -15.626594543457031
    10. ' map' → logprob: -16.00159454345703

Token 13: '(float' (ID: 17830)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008233297849074006
    2. '(' → logprob: -7.125823497772217
    3. 'int' → logprob: -12.250823020935059
    4. '<int' → logprob: -12.375823020935059
    5. '[int' → logprob: -12.625823020935059
    6. '=int' → logprob: -13.375823020935059
    7. '(str' → logprob: -13.500823020935059
    8. '(
' → logprob: -14.000823020935059
    9. ',int' → logprob: -14.125823020935059
    10. ')' → logprob: -14.625823020935059

Token 14: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.011656345799565315
    2. ',' → logprob: -4.761656284332275
    3. '(input' → logprob: -5.886656284332275
    4. ',float' → logprob: -9.511656761169434
    5. ',int' → logprob: -9.636656761169434
    6. 'input' → logprob: -10.261656761169434
    7. '(' → logprob: -10.636656761169434
    8. ',x' → logprob: -11.011656761169434
    9. ' ,' → logprob: -11.511656761169434
    10. '<|end|>' → logprob: -11.636656761169434

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00016420685278717428
    2. '()' → logprob: -9.000164031982422
    3. '()))' → logprob: -10.375164031982422
    4. '())' → logprob: -13.000164031982422
    5. '()));' → logprob: -13.125164031982422
    6. ' ().' → logprob: -13.375164031982422
    7. '())))' → logprob: -13.875164031982422
    8. '(' → logprob: -14.375164031982422
    9. '.' → logprob: -15.000164031982422
    10. ')' → logprob: -15.125164031982422

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.9153885558771435e-06
    2. 'strip' → logprob: -12.250005722045898
    3. 'rstrip' → logprob: -14.250005722045898
    4. 'spl' → logprob: -15.625005722045898
    5. ' split' → logprob: -15.875005722045898
    6. 's' → logprob: -16.1250057220459
    7. '(split' → logprob: -16.6250057220459
    8. 'plit' → logprob: -18.0000057220459
    9. 'replace' → logprob: -19.7500057220459
    10. ')' → logprob: -20.2500057220459

Token 17: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.010682746767997742
    2. '())' → logprob: -4.760682582855225
    3. '))' → logprob: -7.135682582855225
    4. '()' → logprob: -7.510682582855225
    5. '(' → logprob: -8.260683059692383
    6. '())))' → logprob: -8.260683059692383
    7. '('' → logprob: -8.885683059692383
    8. '()));' → logprob: -11.010683059692383
    9. '()))
' → logprob: -11.135683059692383
    10. '(','' → logprob: -11.760683059692383

Token 18: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35038042068481445
    2. '(' → logprob: -2.2253804206848145
    3. ')]' → logprob: -2.4753804206848145
    4. 'for' → logprob: -3.6003804206848145
    5. '(p' → logprob: -3.9753804206848145
    6. ']' → logprob: -3.9753804206848145
    7. '(n' → logprob: -4.4753804206848145
    8. '()]' → logprob: -4.9753804206848145
    9. '())' → logprob: -5.1003804206848145
    10. '()' → logprob: -5.4753804206848145

Token 19: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01719166897237301
    2. '_' → logprob: -4.7671918869018555
    3. ' _' → logprob: -4.8921918869018555
    4. 'range' → logprob: -7.6421918869018555
    5. ' i' → logprob: -8.517191886901855
    6. '_range' → logprob: -8.642191886901855
    7. ' ' → logprob: -9.517191886901855
    8. '(range' → logprob: -9.517191886901855
    9. '	range' → logprob: -11.142191886901855
    10. ' in' → logprob: -12.142191886901855

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003389449091628194
    2. 'in' → logprob: -6.253389358520508
    3. 'range' → logprob: -6.878389358520508
    4. ' range' → logprob: -8.003389358520508
    5. ' ' → logprob: -9.503389358520508
    6. '<|end|>' → logprob: -12.128389358520508
    7. ')' → logprob: -12.753389358520508
    8. '  ' → logprob: -13.253389358520508
    9. '_' → logprob: -13.378389358520508
    10. '(' → logprob: -13.503389358520508

Token 21: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.5597102396423e-05
    2. ' range' → logprob: -10.250035285949707
    3. '(range' → logprob: -16.125036239624023
    4. '	range' → logprob: -18.500036239624023
    5. 'rang' → logprob: -19.625036239624023
    6. '```' → logprob: -19.625036239624023
    7. 'r' → logprob: -19.625036239624023
    8. ' ' → logprob: -19.875036239624023
    9. '  ' → logprob: -19.875036239624023
    10. 'ran' → logprob: -20.125036239624023

Token 22: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.007243829779326916
    2. '(' → logprob: -5.507243633270264
    3. '(m' → logprob: -5.757243633270264
    4. '(
' → logprob: -16.007244110107422
    5. '(s' → logprob: -16.132244110107422
    6. '(len' → logprob: -16.132244110107422
    7. '(

' → logprob: -16.882244110107422
    8. '(int' → logprob: -17.007244110107422
    9. ' (' → logprob: -17.257244110107422
    10. '(M' → logprob: -17.632244110107422

Token 23: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.317247167928144e-05
    2. ')' → logprob: -9.625093460083008
    3. ']' → logprob: -11.375093460083008
    4. ')])' → logprob: -11.500093460083008
    5. '])]' → logprob: -13.500093460083008
    6. ' )' → logprob: -13.875093460083008
    7. '')]' → logprob: -13.875093460083008
    8. ')],' → logprob: -14.750093460083008
    9. '])' → logprob: -14.750093460083008
    10. '))' → logprob: -15.250093460083008

Token 24: 'dp' (ID: 19037)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7937225699424744
    2. 'r' → logprob: -2.043722629547119
    3. 's' → logprob: -2.418722629547119
    4. 'x' → logprob: -2.543722629547119
    5. 'a' → logprob: -3.043722629547119
    6. 'c' → logprob: -3.168722629547119
    7. 'for' → logprob: -3.168722629547119
    8. 'k' → logprob: -3.293722629547119
    9. 'i' → logprob: -3.793722629547119
    10. '#' → logprob: -4.543722629547119

Token 25: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5455986261367798
    2. '[' → logprob: -1.0455986261367798
    3. ' =' → logprob: -2.7955985069274902
    4. '=[' → logprob: -5.92059850692749
    5. ' ' → logprob: -6.17059850692749
    6. '_' → logprob: -6.42059850692749
    7. ' =[' → logprob: -7.29559850692749
    8. '.' → logprob: -8.170598983764648
    9. '=[[' → logprob: -8.920598983764648
    10. '=[]' → logprob: -9.045598983764648

Token 26: '-' (ID: 12)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07206913828849792
    2. '0' → logprob: -2.6970691680908203
    3. '[p' → logprob: -6.69706916809082
    4. 'float' → logprob: -7.94706916809082
    5. ' [' → logprob: -8.82206916809082
    6. '[-' → logprob: -8.82206916809082
    7. '[m' → logprob: -9.19706916809082
    8. 'p' → logprob: -10.44706916809082
    9. '[i' → logprob: -10.94706916809082
    10. '[[' → logprob: -11.07206916809082

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33468785881996155
    2. 'float' → logprob: -1.9596878290176392
    3. '10' → logprob: -2.0846879482269287
    4. '100' → logprob: -4.20968770980835
    5. '101' → logprob: -6.83468770980835
    6. '0' → logprob: -7.08468770980835
    7. '2' → logprob: -7.33468770980835
    8. '500' → logprob: -8.084688186645508
    9. '200' → logprob: -8.084688186645508
    10. '999' → logprob: -8.334688186645508

Token 28: ']*(' (ID: 92627)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.22427435219287872
    2. ']' → logprob: -1.9742743968963623
    3. ']*' → logprob: -3.4742743968963623
    4. ']*(' → logprob: -4.099274158477783
    5. '.' → logprob: -4.349274158477783
    6. '.]' → logprob: -6.974274158477783
    7. ' ]' → logprob: -8.224274635314941
    8. ' for' → logprob: -8.724274635314941
    9. ']+' → logprob: -9.724274635314941
    10. 'for' → logprob: -10.224274635314941

Token 29: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09117675572633743
    2. ' n' → logprob: -2.466176748275757
    3. 'm' → logprob: -6.591176986694336
    4. '100' → logprob: -7.966176986694336
    5. '101' → logprob: -8.091176986694336
    6. '(n' → logprob: -9.466176986694336
    7. '501' → logprob: -10.091176986694336
    8. ' m' → logprob: -10.341176986694336
    9. ' ' → logprob: -11.466176986694336
    10. '10' → logprob: -11.716176986694336

Token 30: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -2.8802491215174086e-05
    2. '<<(' → logprob: -11.000028610229492
    3. ' <<' → logprob: -11.375028610229492
    4. '<' → logprob: -15.125028610229492
    5. '<<<' → logprob: -16.750028610229492
    6. '<<"' → logprob: -17.000028610229492
    7. '()<<' → logprob: -17.625028610229492
    8. ')<<' → logprob: -17.750028610229492
    9. '<n' → logprob: -17.750028610229492
    10. '>>' → logprob: -18.000028610229492

Token 31: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002584816189482808
    2. 'm' → logprob: -6.002584934234619
    3. ' n' → logprob: -9.377584457397461
    4. ')n' → logprob: -10.752584457397461
    5. ')' → logprob: -14.377584457397461
    6. '<|end|>' → logprob: -14.377584457397461
    7. '(n' → logprob: -14.752584457397461
    8. '<n' → logprob: -14.877584457397461
    9. '	n' → logprob: -14.877584457397461
    10. '_n' → logprob: -14.877584457397461

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. ' )' → logprob: -12.000008583068848
    3. '))' → logprob: -13.375008583068848
    4. '`)' → logprob: -15.375008583068848
    5. '')' → logprob: -16.125009536743164
    6. '```' → logprob: -16.375009536743164
    7. ')`' → logprob: -16.375009536743164
    8. ')
' → logprob: -16.750009536743164
    9. ')n' → logprob: -16.875009536743164
    10. '),' → logprob: -17.000009536743164

Token 33: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23184187710285187
    2. 'def' → logprob: -2.106841802597046
    3. '0' → logprob: -4.106842041015625
    4. ']' → logprob: -4.356842041015625
    5. '=' → logprob: -4.606842041015625
    6. ')
' → logprob: -4.731842041015625
    7. '(' → logprob: -5.356842041015625
    8. '```' → logprob: -5.481842041015625
    9. '\' → logprob: -5.606842041015625
    10. '`' → logprob: -5.731842041015625

Token 34: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.0574042983353138
    2. ' dp' → logprob: -3.4324042797088623
    3. ' f' → logprob: -4.307404518127441
    4. ' solve' → logprob: -4.682404518127441
    5. 'dfs' → logprob: -7.807404518127441
    6. 'f' → logprob: -9.432404518127441
    7. 'solve' → logprob: -9.932404518127441
    8. 'dp' → logprob: -9.932404518127441
    9. ' tsp' → logprob: -10.057404518127441
    10. ' d' → logprob: -10.307404518127441

Token 35: '(mask' (ID: 80748)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17146353423595428
    2. '(i' → logprob: -1.9214634895324707
    3. '(x' → logprob: -5.546463489532471
    4. ' (' → logprob: -6.296463489532471
    5. '(n' → logprob: -7.296463489532471
    6. '(idx' → logprob: -7.296463489532471
    7. '(u' → logprob: -7.421463489532471
    8. '(a' → logprob: -7.921463489532471
    9. '(k' → logprob: -7.921463489532471
    10. '(s' → logprob: -8.046463966369629

Token 36: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008916379883885384
    2. ',k' → logprob: -5.63391637802124
    3. ',i' → logprob: -5.88391637802124
    4. ' ,' → logprob: -7.25891637802124
    5. '):' → logprob: -7.50891637802124
    6. ',b' → logprob: -8.008916854858398
    7. ',n' → logprob: -8.508916854858398
    8. ',j' → logprob: -8.883916854858398
    9. ',int' → logprob: -9.383916854858398
    10. ',c' → logprob: -9.633916854858398

Token 37: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19359704852104187
    2. '   ' → logprob: -2.4435970783233643
    3. ' if' → logprob: -3.3185970783233643
    4. ' :' → logprob: -3.4435970783233643
    5. ' ' → logprob: -4.818596839904785
    6. '):' → logprob: -5.568596839904785
    7. '<|end|>' → logprob: -6.068596839904785
    8. ')' → logprob: -6.193596839904785
    9. 'if' → logprob: -6.818596839904785
    10. ':return' → logprob: -7.193596839904785

Token 38: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.27112525701522827
    2. ' if' → logprob: -1.771125316619873
    3. 'i' → logprob: -3.396125316619873
    4. '   ' → logprob: -3.896125316619873
    5. 'for' → logprob: -5.021125316619873
    6. ' for' → logprob: -6.146125316619873
    7. ' ' → logprob: -6.146125316619873
    8. '    ' → logprob: -7.271125316619873
    9. ')' → logprob: -7.896125316619873
    10. '0' → logprob: -8.021124839782715

Token 39: ' dp' (ID: 21546)
  Prédit: ' mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.38692164421081543
    2. 'mask' → logprob: -1.1369216442108154
    3. '(mask' → logprob: -10.511921882629395
    4. '	mask' → logprob: -11.386921882629395
    5. '   ' → logprob: -12.261921882629395
    6. ' ' → logprob: -13.261921882629395
    7. ' dp' → logprob: -13.261921882629395
    8. 'dp' → logprob: -13.886921882629395
    9. '_mask' → logprob: -14.011921882629395
    10. 'm' → logprob: -14.636921882629395

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.465036105713807e-06
    2. ' [' → logprob: -13.250007629394531
    3. '[m' → logprob: -13.625007629394531
    4. '\[' → logprob: -14.125007629394531
    5. '[mem' → logprob: -14.250007629394531
    6. '[int' → logprob: -14.875007629394531
    7. '```' → logprob: -15.000007629394531
    8. 'mask' → logprob: -15.000007629394531
    9. '   ' → logprob: -15.125007629394531
    10. '[len' → logprob: -15.250007629394531

Token 41: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.0087516784551553e-05
    2. '(mask' → logprob: -12.00001049041748
    3. ' mask' → logprob: -13.50001049041748
    4. '	mask' → logprob: -14.25001049041748
    5. 'm' → logprob: -14.37501049041748
    6. '0' → logprob: -14.50001049041748
    7. '_mask' → logprob: -15.62501049041748
    8. '[' → logprob: -16.000009536743164
    9. 'masked' → logprob: -16.125009536743164
    10. 'mas' → logprob: -16.500009536743164

Token 42: ']>=' (ID: 185954)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5190237164497375
    2. ']!=' → logprob: -1.0190236568450928
    3. ']==' → logprob: -3.1440236568450928
    4. ' ]' → logprob: -7.644023895263672
    5. ']>=' → logprob: -8.519023895263672
    6. '!=' → logprob: -9.769023895263672
    7. '==' → logprob: -10.519023895263672
    8. ']>' → logprob: -11.144023895263672
    9. '!=-' → logprob: -11.519023895263672
    10. ' ' → logprob: -11.519023895263672

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.35706390615087e-05
    2. ' ' → logprob: -10.375033378601074
    3. '-' → logprob: -13.500033378601074
    4. '1' → logprob: -14.375033378601074
    5. '۰' → logprob: -16.93753433227539
    6. ' -' → logprob: -17.00003433227539
    7. 'n' → logprob: -17.75003433227539
    8. '   ' → logprob: -17.87503433227539
    9. 'm' → logprob: -18.18753433227539
    10. '  ' → logprob: -18.43753433227539

Token 44: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004968205001205206
    2. ':return' → logprob: -5.379968166351318
    3. ':
' → logprob: -8.254968643188477
    4. ' :' → logprob: -9.629968643188477
    5. '   ' → logprob: -11.004968643188477
    6. ' or' → logprob: -13.254968643188477
    7. ' and' → logprob: -13.629968643188477
    8. '):' → logprob: -14.004968643188477
    9. ':
' → logprob: -14.754968643188477
    10. ':def' → logprob: -15.129968643188477

Token 45: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08378342539072037
    2. '   ' → logprob: -2.5837833881378174
    3. ' return' → logprob: -5.8337836265563965
    4. 'return' → logprob: -7.2087836265563965
    5. '    ' → logprob: -7.7087836265563965
    6. '	return' → logprob: -8.583783149719238
    7. '
' → logprob: -8.958783149719238
    8. ' ' → logprob: -9.208783149719238
    9. '    
' → logprob: -9.833783149719238
    10. '<|end|>' → logprob: -10.083783149719238

Token 46: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.31358960270881653
    2. ' dp' → logprob: -1.3135895729064941
    3. '0' → logprob: -9.063590049743652
    4. ' ' → logprob: -9.438590049743652
    5. '	dp' → logprob: -10.188590049743652
    6. '1' → logprob: -10.438590049743652
    7. 'd' → logprob: -10.813590049743652
    8. ' ' → logprob: -11.813590049743652
    9. '   ' → logprob: -11.938590049743652
    10. '  ' → logprob: -12.813590049743652

Token 47: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.9153885558771435e-06
    2. '[m' → logprob: -12.625005722045898
    3. 'mask' → logprob: -14.125005722045898
    4. ' [' → logprob: -14.375005722045898
    5. '```' → logprob: -15.125005722045898
    6. '   ' → logprob: -15.250005722045898
    7. '[mem' → logprob: -15.750005722045898
    8. ')[' → logprob: -15.750005722045898
    9. ')' → logprob: -16.0000057220459
    10. '(mask' → logprob: -16.5000057220459

Token 48: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -8.180258191714529e-06
    2. ' mask' → logprob: -12.500008583068848
    3. '[' → logprob: -12.875008583068848
    4. '(mask' → logprob: -13.875008583068848
    5. '_mask' → logprob: -14.875008583068848
    6. '	mask' → logprob: -15.000008583068848
    7. 'm' → logprob: -16.25000762939453
    8. 'mas' → logprob: -17.00000762939453
    9. 'masked' → logprob: -17.37500762939453
    10. '-mask' → logprob: -17.75000762939453

Token 49: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012728718109428883
    2. ')' → logprob: -4.887728691101074
    3. ']
' → logprob: -5.512728691101074
    4. '])' → logprob: -7.137728691101074
    5. ')]' → logprob: -9.262728691101074
    6. ']
' → logprob: -9.387728691101074
    7. ')
' → logprob: -10.012728691101074
    8. ']

' → logprob: -10.262728691101074
    9. '])
' → logprob: -12.137728691101074
    10. '']' → logprob: -13.012728691101074

Token 50: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2645946145057678
    2. 'if' → logprob: -2.389594554901123
    3. '   ' → logprob: -2.764594554901123
    4. ' i' → logprob: -3.389594554901123
    5. 'i' → logprob: -4.139594554901123
    6. 'idx' → logprob: -5.389594554901123
    7. ' idx' → logprob: -5.514594554901123
    8. ' res' → logprob: -5.764594554901123
    9. '    
' → logprob: -5.889594554901123
    10. '
' → logprob: -6.014594554901123

Token 51: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22923040390014648
    2. 'k' → logprob: -3.3542304039001465
    3. '   ' → logprob: -3.4792304039001465
    4. 'dp' → logprob: -3.4792304039001465
    5. ' i' → logprob: -3.9792304039001465
    6. 'res' → logprob: -4.1042304039001465
    7. 'r' → logprob: -4.1042304039001465
    8. ' res' → logprob: -4.7292304039001465
    9. 'x' → logprob: -4.9792304039001465
    10. 'pos' → logprob: -5.3542304039001465

Token 52: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.003950644284486771
    2. ' mask' → logprob: -5.628950595855713
    3. 'bin' → logprob: -8.003951072692871
    4. '(mask' → logprob: -12.378951072692871
    5. 'm' → logprob: -12.503951072692871
    6. ' bin' → logprob: -12.753951072692871
    7. '	mask' → logprob: -13.253951072692871
    8. '   ' → logprob: -13.753951072692871
    9. 'bit' → logprob: -14.128951072692871
    10. 'mas' → logprob: -14.628951072692871

Token 53: '==(' (ID: 103038)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.007896317169070244
    2. '==(' → logprob: -4.882896423339844
    3. ' ==' → logprob: -9.507896423339844
    4. ']==' → logprob: -9.632896423339844
    5. ')==' → logprob: -10.132896423339844
    6. '=' → logprob: -10.257896423339844
    7. '+' → logprob: -10.757896423339844
    8. '>=' → logprob: -10.882896423339844
    9. '==
' → logprob: -11.507896423339844
    10. '()==' → logprob: -11.632896423339844

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02630993351340294
    2. '(' → logprob: -3.6513099670410156
    3. ' (' → logprob: -11.776309967041016
    4. ' ' → logprob: -13.401309967041016
    5. '   ' → logprob: -15.526309967041016
    6. ')' → logprob: -16.276309967041016
    7. '{' → logprob: -17.026309967041016
    8. '```' → logprob: -17.401309967041016
    9. '[' → logprob: -18.026309967041016
    10. '((' → logprob: -18.151309967041016

Token 55: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.00017064384883269668
    2. ' <<' → logprob: -9.250170707702637
    3. '1' → logprob: -9.750170707702637
    4. '   ' → logprob: -12.375170707702637
    5. ')<<' → logprob: -12.500170707702637
    6. ')' → logprob: -12.500170707702637
    7. '<' → logprob: -13.250170707702637
    8. '<<(' → logprob: -14.000170707702637
    9. ' ' → logprob: -15.125170707702637
    10. '()<<' → logprob: -15.250170707702637

Token 56: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1756367712223437e-05
    2. ' n' → logprob: -11.500011444091797
    3. ')n' → logprob: -14.375011444091797
    4. 'm' → logprob: -15.375011444091797
    5. '<n' → logprob: -15.625011444091797
    6. '_n' → logprob: -15.875011444091797
    7. '<|end|>' → logprob: -16.000011444091797
    8. '	n' → logprob: -16.500011444091797
    9. '   ' → logprob: -16.750011444091797
    10. '```' → logprob: -16.875011444091797

Token 57: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.16101282835006714
    2. ')' → logprob: -1.911012887954712
    3. ' )' → logprob: -7.161012649536133
    4. '):' → logprob: -12.536012649536133
    5. '1' → logprob: -12.786012649536133
    6. '   ' → logprob: -14.036012649536133
    7. ')-(' → logprob: -14.036012649536133
    8. '')' → logprob: -14.536012649536133
    9. ').-' → logprob: -14.786012649536133
    10. '):
' → logprob: -14.786012649536133

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. '<|end|>' → logprob: -12.750009536743164
    3. ' ' → logprob: -13.125009536743164
    4. '```' → logprob: -14.125009536743164
    5. '<|end|>' → logprob: -14.500009536743164
    6. '

' → logprob: -15.062509536743164
    7. '۱' → logprob: -15.437509536743164
    8. '   ' → logprob: -15.562509536743164
    9. ')' → logprob: -15.625009536743164
    10. '১' → logprob: -15.687509536743164

Token 59: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006457181880250573
    2. ':return' → logprob: -7.750645637512207
    3. ':
' → logprob: -8.625645637512207
    4. ' :' → logprob: -11.000645637512207
    5. '):' → logprob: -11.000645637512207
    6. ':def' → logprob: -14.250645637512207
    7. ':
' → logprob: -14.375645637512207
    8. '   ' → logprob: -15.375645637512207
    9. '>:' → logprob: -15.875645637512207
    10. ')' → logprob: -16.000646591186523

Token 60: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48910486698150635
    2. 'return' → logprob: -1.4891048669815063
    3. '   ' → logprob: -1.8641048669815063
    4. '0' → logprob: -5.239104747772217
    5. ' ' → logprob: -7.489104747772217
    6. '1' → logprob: -8.364105224609375
    7. '    ' → logprob: -10.739105224609375
    8. '  ' → logprob: -10.864105224609375
    9. '	return' → logprob: -11.239105224609375
    10. ':return' → logprob: -11.364105224609375

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1605958491563797
    2. '1' → logprob: -1.9105958938598633
    3. ' ' → logprob: -7.910595893859863
    4. '   ' → logprob: -12.910595893859863
    5. 'dp' → logprob: -14.535595893859863
    6. 'float' → logprob: -14.910595893859863
    7. '  ' → logprob: -15.285595893859863
    8. '(' → logprob: -16.098094940185547
    9. '
' → logprob: -16.348094940185547
    10. '    ' → logprob: -16.410594940185547

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22549863159656525
    2. '0' → logprob: -1.6004986763000488
    3. ' ' → logprob: -9.47549819946289
    4. '   ' → logprob: -12.47549819946289
    5. 'float' → logprob: -13.47549819946289
    6. '(' → logprob: -14.10049819946289
    7. 'dp' → logprob: -14.28799819946289
    8. '  ' → logprob: -14.85049819946289
    9. 'return' → logprob: -15.41299819946289
    10. '```' → logprob: -15.53799819946289

Token 63: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7262986898422241
    2. ' res' → logprob: -0.9762986898422241
    3. '
' → logprob: -2.8512988090515137
    4. 'res' → logprob: -3.9762988090515137
    5. '0' → logprob: -4.351298809051514
    6. '    
' → logprob: -4.476298809051514
    7. ' dp' → logprob: -4.726298809051514
    8. ' ans' → logprob: -4.976298809051514
    9. 'prob' → logprob: -5.101298809051514
    10. 'dp' → logprob: -5.726298809051514

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001725511101540178
    2. ' ' → logprob: -9.00017261505127
    3. '000' → logprob: -10.37517261505127
    4. '   ' → logprob: -12.37517261505127
    5. '00' → logprob: -12.62517261505127
    6. '.' → logprob: -12.75017261505127
    7. '
' → logprob: -13.62517261505127
    8. '  ' → logprob: -13.87517261505127
    9. '    
' → logprob: -14.12517261505127
    10. '```' → logprob: -14.12517261505127

Token 65: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5628122687339783
    2. '
' → logprob: -1.187812328338623
    3. ' res' → logprob: -3.062812328338623
    4. '    
' → logprob: -3.187812328338623
    5. ' dp' → logprob: -4.937812328338623
    6. ' ans' → logprob: -5.312812328338623
    7. 'res' → logprob: -5.812812328338623
    8. 'dp' → logprob: -5.937812328338623
    9. 'prob' → logprob: -6.062812328338623
    10. ' p' → logprob: -6.562812328338623

Token 66: '   ' (ID: 271)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5809885859489441
    2. '   ' → logprob: -1.4559886455535889
    3. 'res' → logprob: -1.9559886455535889
    4. '
' → logprob: -3.955988645553589
    5. 'dp' → logprob: -4.33098840713501
    6. ' dp' → logprob: -4.58098840713501
    7. ' ans' → logprob: -5.20598840713501
    8. 'r' → logprob: -5.70598840713501
    9. 'ans' → logprob: -5.95598840713501
    10. 'prob' → logprob: -6.33098840713501

Token 67: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.13014835119247437
    2. ' res' → logprob: -3.255148410797119
    3. 'r' → logprob: -3.630148410797119
    4. '   ' → logprob: -3.755148410797119
    5. 'ret' → logprob: -4.505148410797119
    6. 'ans' → logprob: -4.755148410797119
    7. 'dp' → logprob: -5.755148410797119
    8. 'prob' → logprob: -6.380148410797119
    9. 'u' → logprob: -6.505148410797119
    10. 'max' → logprob: -6.755148410797119

Token 68: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05489898845553398
    2. ' =' → logprob: -2.929898977279663
    3. '=float' → logprob: -11.429899215698242
    4. ' ' → logprob: -14.054899215698242
    5. '=max' → logprob: -14.054899215698242
    6. '=int' → logprob: -14.554899215698242
    7. '=-' → logprob: -14.804899215698242
    8. '=None' → logprob: -15.054899215698242
    9. ' ' → logprob: -15.179899215698242
    10. '=res' → logprob: -15.304899215698242

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.522638169466518e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -14.750024795532227
    4. '-' → logprob: -15.125024795532227
    5. 'float' → logprob: -16.375024795532227
    6. '  ' → logprob: -16.875024795532227
    7. '```' → logprob: -17.625024795532227
    8. '1' → logprob: -18.250024795532227
    9. ' ' → logprob: -18.625024795532227
    10. '[' → logprob: -18.687524795532227

Token 70: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2946266233921051
    2. '
' → logprob: -1.7946265935897827
    3. '    
' → logprob: -2.7946267127990723
    4. ' for' → logprob: -5.044626712799072
    5. '```' → logprob: -5.419626712799072
    6. '   
' → logprob: -6.169626712799072
    7. '  
' → logprob: -6.419626712799072
    8. ' i' → logprob: -6.544626712799072
    9. '0' → logprob: -6.669626712799072
    10. ',' → logprob: -6.669626712799072

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24918748438358307
    2. '<|end|>' → logprob: -2.374187469482422
    3. ' ' → logprob: -3.499187469482422
    4. '1' → logprob: -4.249187469482422
    5. '```' → logprob: -4.249187469482422
    6. '
' → logprob: -4.374187469482422
    7. '6' → logprob: -4.749187469482422
    8. '000' → logprob: -4.874187469482422
    9. '9' → logprob: -5.124187469482422
    10. '*' → logprob: -5.249187469482422

Token 72: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5725363492965698
    2. 'i' → logprob: -2.1975364685058594
    3. ' for' → logprob: -2.4475364685058594
    4. '
' → logprob: -2.4475364685058594
    5. ' i' → logprob: -2.5725364685058594
    6. '    
' → logprob: -3.4475364685058594
    7. 'for' → logprob: -4.072536468505859
    8. ' 
' → logprob: -4.822536468505859
    9. '  
' → logprob: -6.447536468505859
    10. 'idx' → logprob: -6.447536468505859

Token 73: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22408105432987213
    2. ' i' → logprob: -2.349081039428711
    3. '   ' → logprob: -2.349081039428711
    4. 'for' → logprob: -5.349081039428711
    5. ' for' → logprob: -5.849081039428711
    6. 'k' → logprob: -6.974081039428711
    7. 'x' → logprob: -8.349081039428711
    8. '    
' → logprob: -8.474081039428711
    9. 'a' → logprob: -8.849081039428711
    10. 't' → logprob: -9.349081039428711

Token 74: ' for' (ID: 395)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.043333712965250015
    2. 'for' (adapté à ' for') → logprob: -4.293333530426025
    3. 'x' → logprob: -4.418333530426025
    4. 'k' → logprob: -5.043333530426025
    5. '   ' → logprob: -5.668333530426025
    6. 'idx' → logprob: -5.668333530426025
    7. 't' → logprob: -7.418333530426025
    8. 'u' → logprob: -7.543333530426025
    9. 'cnt' → logprob: -7.793333530426025
    10. 'j' → logprob: -7.793333530426025

Token 75: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12542012333869934
    2. ' j' → logprob: -2.375420093536377
    3. 'i' → logprob: -4.125420093536377
    4. 'j' → logprob: -4.750420093536377
    5. ' k' → logprob: -10.875420570373535
    6. '	i' → logprob: -11.250420570373535
    7. ' ' → logprob: -11.250420570373535
    8. '```' → logprob: -12.000420570373535
    9. 'k' → logprob: -12.062920570373535
    10. '   ' → logprob: -12.500420570373535

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01441288087517023
    2. 'in' → logprob: -4.264412879943848
    3. ' ' → logprob: -8.764412879943848
    4. '<|end|>' → logprob: -10.139412879943848
    5. 'range' → logprob: -10.639412879943848
    6. ' range' → logprob: -11.264412879943848
    7. '	in' → logprob: -12.139412879943848
    8. 's' → logprob: -12.264412879943848
    9. 'n' → logprob: -13.389412879943848
    10. '  ' → logprob: -14.139412879943848

Token 77: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25194448232650757
    2. 'range' → logprob: -1.5019445419311523
    3. '	range' → logprob: -11.501944541931152
    4. '(range' → logprob: -12.876944541931152
    5. '<|end|>' → logprob: -13.626944541931152
    6. ' xrange' → logprob: -14.501944541931152
    7. '_range' → logprob: -14.501944541931152
    8. '.range' → logprob: -15.376944541931152
    9. 'rang' → logprob: -16.626943588256836
    10. ' ' → logprob: -17.376943588256836

Token 78: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006747855222783983
    2. '(' → logprob: -7.375674724578857
    3. ' n' → logprob: -11.000675201416016
    4. '(m' → logprob: -11.125675201416016
    5. 'n' → logprob: -11.625675201416016
    6. '(len' → logprob: -12.875675201416016
    7. '	n' → logprob: -13.375675201416016
    8. ',n' → logprob: -13.875675201416016
    9. '<|end|>' → logprob: -13.875675201416016
    10. '(
' → logprob: -14.750675201416016

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42985910177230835
    2. '):
' → logprob: -1.0548591613769531
    3. '):
' → logprob: -7.304859161376953
    4. ')' → logprob: -7.804859161376953
    5. '   ' → logprob: -10.679859161376953
    6. '):

' → logprob: -11.179859161376953
    7. ',n' → logprob: -11.554859161376953
    8. ':' → logprob: -11.929859161376953
    9. '       ' → logprob: -12.179859161376953
    10. '+' → logprob: -12.429859161376953

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26828891038894653
    2. '<|end|>' → logprob: -2.3932888507843018
    3. ' if' → logprob: -2.5182888507843018
    4. ' ' → logprob: -3.0182888507843018
    5. '    ' → logprob: -5.393289089202881
    6. '   ' → logprob: -6.143289089202881
    7. 'if' → logprob: -6.768289089202881
    8. ' for' → logprob: -6.768289089202881
    9. ',' → logprob: -6.768289089202881
    10. '        ' → logprob: -6.893289089202881

Token 81: ' pos' (ID: 1253)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7837733030319214
    2. 'if' → logprob: -0.9087733030319214
    3. '       ' → logprob: -3.033773422241211
    4. ' for' → logprob: -3.283773422241211
    5. 'for' → logprob: -3.283773422241211
    6. 'next' → logprob: -5.533773422241211
    7. '<|end|>' → logprob: -6.033773422241211
    8. '    ' → logprob: -6.283773422241211
    9. ' next' → logprob: -6.408773422241211
    10. '        ' → logprob: -7.033773422241211

Token 82: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5586665272712708
    2. ' =' → logprob: -0.9336665272712708
    3. '   ' → logprob: -4.183666706085205
    4. '=n' → logprob: -6.183666706085205
    5. 'r' → logprob: -6.433666706085205
    6. 's' → logprob: -6.558666706085205
    7. '=len' → logprob: -6.558666706085205
    8. '=(' → logprob: -6.683666706085205
    9. '=int' → logprob: -6.808666706085205
    10. ' ' → logprob: -6.808666706085205

Token 83: '0' (ID: 15)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.3714171350002289
    2. '0' → logprob: -1.4964171648025513
    3. 'mask' → logprob: -2.6214170455932617
    4. '(bin' → logprob: -5.621417045593262
    5. '(mask' → logprob: -5.746417045593262
    6. ' bin' → logprob: -6.371417045593262
    7. '(' → logprob: -6.621417045593262
    8. '-' → logprob: -6.871417045593262
    9. ' ' → logprob: -7.746417045593262
    10. 'i' → logprob: -8.246417045593262

Token 84: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030914735049009323
    2. '       ' → logprob: -3.905914783477783
    3. 'while' → logprob: -5.030914783477783
    4. 'for' → logprob: -7.030914783477783
    5. ' while' → logprob: -7.155914783477783
    6. '<|end|>' → logprob: -7.280914783477783
    7. ' for' → logprob: -8.405914306640625
    8. 'if' → logprob: -8.530914306640625
    9. ' ' → logprob: -8.655914306640625
    10. '   ' → logprob: -9.030914306640625

Token 85: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6768931150436401
    2. 'while' → logprob: -1.3018931150436401
    3. '       ' → logprob: -1.6768931150436401
    4. 'for' → logprob: -3.9268932342529297
    5. ' while' → logprob: -4.67689323425293
    6. ' for' → logprob: -7.17689323425293
    7. 'if' → logprob: -7.80189323425293
    8. '   ' → logprob: -7.80189323425293
    9. '           ' → logprob: -8.05189323425293
    10. '        
' → logprob: -8.05189323425293

Token 86: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.695885419845581
    2. 'while' (adapté à ' while') → logprob: -0.695885419845581
    3. '       ' → logprob: -6.69588565826416
    4. ' while' → logprob: -7.82088565826416
    5. 'if' → logprob: -7.94588565826416
    6. ' for' → logprob: -8.94588565826416
    7. 'bit' → logprob: -9.19588565826416
    8. 'cnt' → logprob: -9.19588565826416
    9. 'count' → logprob: -9.44588565826416
    10. 'b' → logprob: -9.82088565826416

Token 87: ' pos' (ID: 1253)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.3036135733127594
    2. 'mask' → logprob: -1.428613543510437
    3. '(pos' → logprob: -5.053613662719727
    4. 'pos' → logprob: -5.178613662719727
    5. '((' → logprob: -5.178613662719727
    6. '(' → logprob: -5.553613662719727
    7. ' mask' → logprob: -7.803613662719727
    8. '(((' → logprob: -9.053613662719727
    9. ' (' → logprob: -9.553613662719727
    10. '(dp' → logprob: -10.803613662719727

Token 88: '<n' (ID: 33872)
  Prédit: '<n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.10809096693992615
    2. '<' → logprob: -2.483090877532959
    3. ' <' → logprob: -4.983090877532959
    4. '<(' → logprob: -4.983090877532959
    5. '<len' → logprob: -6.733090877532959
    6. '<m' → logprob: -7.108090877532959
    7. '&' → logprob: -7.233090877532959
    8. '<|end|>' → logprob: -7.483090877532959
    9. ' &' → logprob: -7.733090877532959
    10. '&lt' → logprob: -8.858091354370117

Token 89: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47411417961120605
    2. 'and' → logprob: -0.974114179611206
    3. ':' → logprob: -11.099114418029785
    4. ' ' → logprob: -11.224114418029785
    5. '<|end|>' → logprob: -12.849114418029785
    6. '   ' → logprob: -13.974114418029785
    7. ':
' → logprob: -13.974114418029785
    8. '	and' → logprob: -14.349114418029785
    9. '           ' → logprob: -14.599114418029785
    10. '>' → logprob: -14.599114418029785

Token 90: ' (' (ID: 350)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.05742838606238365
    2. 'mask' → logprob: -3.3074283599853516
    3. '((' → logprob: -4.557428359985352
    4. ' mask' → logprob: -5.432428359985352
    5. ' (' → logprob: -5.807428359985352
    6. '(' → logprob: -7.932428359985352
    7. 'not' → logprob: -8.432428359985352
    8. '(((' → logprob: -8.557428359985352
    9. ' ((' → logprob: -9.057428359985352
    10. ' not' → logprob: -9.057428359985352

Token 91: 'mask' (ID: 22527)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.3262189030647278
    2. 'mask' → logprob: -1.326218843460083
    3. ' mask' → logprob: -4.576219081878662
    4. ' (' → logprob: -6.576219081878662
    5. '((' → logprob: -7.576219081878662
    6. 'not' → logprob: -8.076218605041504
    7. '(' → logprob: -8.951218605041504
    8. ' not' → logprob: -9.701218605041504
    9. '	mask' → logprob: -10.451218605041504
    10. '(not' → logprob: -10.888718605041504

Token 92: '&(' (ID: 135979)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.9026077389717102
    2. '>>' → logprob: -1.1526076793670654
    3. '&' → logprob: -1.4026076793670654
    4. '&(' → logprob: -3.5276076793670654
    5. '>>&' → logprob: -6.4026079177856445
    6. '&gt' → logprob: -7.7776079177856445
    7. '>>(' → logprob: -7.9026079177856445
    8. '&amp' → logprob: -8.527607917785645
    9. '&r' → logprob: -8.777607917785645
    10. '&p' → logprob: -8.777607917785645

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028660334646701813
    2. '(' → logprob: -8.250287055969238
    3. ' ' → logprob: -10.625287055969238
    4. ' (' → logprob: -14.250287055969238
    5. '```' → logprob: -16.000286102294922
    6. ')' → logprob: -16.625286102294922
    7. '

' → logprob: -16.875286102294922
    8. '   ' → logprob: -17.000286102294922
    9. '<' → logprob: -17.375286102294922
    10. 'pos' → logprob: -17.750286102294922

Token 94: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.00033784625702537596
    2. ' <<' → logprob: -8.375337600708008
    3. '<' → logprob: -9.500337600708008
    4. '<<(' → logprob: -11.375337600708008
    5. ')<<' → logprob: -12.500337600708008
    6. '&lt' → logprob: -12.500337600708008
    7. '

' → logprob: -13.000337600708008
    8. ' ' → logprob: -13.125337600708008
    9. '<n' → logprob: -13.625337600708008
    10. '>>' → logprob: -13.625337600708008

Token 95: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.4987974029500037e-05
    2. ' pos' → logprob: -10.625024795532227
    3. '	pos' → logprob: -15.250024795532227
    4. 'p' → logprob: -15.750024795532227
    5. '
' → logprob: -16.500024795532227
    6. '   ' → logprob: -16.750024795532227
    7. 'position' → logprob: -17.000024795532227
    8. 'i' → logprob: -17.250024795532227
    9. ')' → logprob: -17.250024795532227
    10. '[pos' → logprob: -18.125024795532227

Token 96: ')):' (ID: 92037)
  Prédit: ')):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.08863699436187744
    2. '))' → logprob: -2.713636875152588
    3. ')):
' → logprob: -4.088636875152588
    4. ' ))' → logprob: -7.088636875152588
    5. ')):
' → logprob: -8.088637351989746
    6. ')' → logprob: -8.088637351989746
    7. ' ' → logprob: -9.838637351989746
    8. '       ' → logprob: -10.213637351989746
    9. ')==' → logprob: -10.338637351989746
    10. '   ' → logprob: -10.338637351989746

Token 97: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.47573089599609375
    2. 'pos' → logprob: -0.9757308959960938
    3. '
' → logprob: -7.100730895996094
    4. '           ' → logprob: -7.600730895996094
    5. '       ' → logprob: -9.225730895996094
    6. '	pos' → logprob: -9.225730895996094
    7. '   ' → logprob: -9.350730895996094
    8. ',pos' → logprob: -10.975730895996094
    9. ' ' → logprob: -11.100730895996094
    10. '_pos' → logprob: -13.100730895996094

Token 98: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004648945759981871
    2. ' +=' → logprob: -5.6296491622924805
    3. '+' → logprob: -7.0046491622924805
    4. ']+=' → logprob: -9.00464916229248
    5. '1' → logprob: -12.12964916229248
    6. '+='' → logprob: -13.12964916229248
    7. '+=(' → logprob: -13.37964916229248
    8. '
' → logprob: -13.50464916229248
    9. '<|end|>' → logprob: -13.62964916229248
    10. '+="' → logprob: -13.75464916229248

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.625017166137695
    4. '
' → logprob: -18.000017166137695
    5. '  ' → logprob: -18.062517166137695
    6. '```' → logprob: -18.187517166137695
    7. '<|end|>' → logprob: -18.687517166137695
    8. '۱' → logprob: -18.875017166137695
    9. '１' → logprob: -19.187517166137695
    10. '+' → logprob: -19.625017166137695

Token 100: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10091277956962585
    2. '
' → logprob: -2.8509128093719482
    3. '<|end|>' → logprob: -3.3509128093719482
    4. '<|end|>' → logprob: -6.850912570953369
    5. '   ' → logprob: -7.975912570953369
    6. '        
' → logprob: -8.350913047790527
    7. ',' → logprob: -8.350913047790527
    8. ')' → logprob: -8.350913047790527
    9. ' ' → logprob: -8.725913047790527
    10. '
' → logprob: -9.225913047790527

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07837177067995071
    2. '
' → logprob: -2.82837176322937
    3. '<|end|>' → logprob: -4.828372001647949
    4. '   ' → logprob: -5.578372001647949
    5. ' ' → logprob: -6.953372001647949
    6. 'res' → logprob: -7.453372001647949
    7. '        
' → logprob: -7.828372001647949
    8. ')' → logprob: -8.20337200164795
    9. '<|end|>' → logprob: -8.32837200164795
    10. ' if' → logprob: -8.45337200164795

Token 102: ' q' (ID: 2335)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.35221895575523376
    2. 'for' → logprob: -2.1022188663482666
    3. 'if' → logprob: -2.2272188663482666
    4. '       ' → logprob: -3.1022188663482666
    5. ' res' → logprob: -5.102219104766846
    6. 'dp' → logprob: -5.727219104766846
    7. ' for' → logprob: -5.852219104766846
    8. ' if' → logprob: -5.977219104766846
    9. 'break' → logprob: -6.102219104766846
    10. 'prob' → logprob: -6.477219104766846

Token 103: '=p' (ID: 48137)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6139094233512878
    2. '[pos' → logprob: -1.3639094829559326
    3. 'u' → logprob: -1.8639094829559326
    4. ' =' → logprob: -3.8639094829559326
    5. '[u' → logprob: -4.6139092445373535
    6. '[' → logprob: -5.3639092445373535
    7. 'pos' → logprob: -5.9889092445373535
    8. '=p' → logprob: -6.6139092445373535
    9. '[p' → logprob: -6.6139092445373535
    10. '[i' → logprob: -6.7389092445373535

Token 104: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004571934696286917
    2. '[' → logprob: -6.004571914672852
    3. '[pos' → logprob: -6.254571914672852
    4. '[q' → logprob: -8.879571914672852
    5. '[m' → logprob: -10.629571914672852
    6. '[s' → logprob: -13.129571914672852
    7. '[ip' → logprob: -13.879571914672852
    8. '[I' → logprob: -14.254571914672852
    9. '[j' → logprob: -14.254571914672852
    10. '[p' → logprob: -14.629571914672852

Token 105: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0076998453587293625
    2. '[pos' → logprob: -4.882699966430664
    3. '[' → logprob: -10.257699966430664
    4. ' ][' → logprob: -10.257699966430664
    5. ']' → logprob: -11.132699966430664
    6. 'pos' → logprob: -13.382699966430664
    7. '   ' → logprob: -13.882699966430664
    8. '"][' → logprob: -14.007699966430664
    9. ''][' → logprob: -14.132699966430664
    10. '       ' → logprob: -14.132699966430664

Token 106: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.5776860184123507e-06
    2. ' pos' → logprob: -12.87500286102295
    3. '[pos' → logprob: -19.125001907348633
    4. 'q' → logprob: -19.500001907348633
    5. '	pos' → logprob: -19.750001907348633
    6. 'p' → logprob: -19.875001907348633
    7. '(pos' → logprob: -20.500001907348633
    8. '   ' → logprob: -20.750001907348633
    9. '_pos' → logprob: -20.875001907348633
    10. 'position' → logprob: -21.000001907348633

Token 107: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2822530269622803
    2. ']
' → logprob: -1.6572530269622803
    3. ']*' → logprob: -2.9072530269622803
    4. ']
' → logprob: -8.28225326538086
    5. ']*(' → logprob: -8.53225326538086
    6. ' ]' → logprob: -9.90725326538086
    7. ']

' → logprob: -10.15725326538086
    8. '   ' → logprob: -10.65725326538086
    9. '])*' → logprob: -11.15725326538086
    10. '])' → logprob: -11.65725326538086

Token 108: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6046191453933716
    2. '*' → logprob: -1.8546191453933716
    3. '       ' → logprob: -2.354619026184082
    4. '   ' → logprob: -2.354619026184082
    5. 'res' → logprob: -2.479619026184082
    6. ' *' → logprob: -5.604619026184082
    7. '<|end|>' → logprob: -5.854619026184082
    8. ' for' → logprob: -6.229619026184082
    9. '```' → logprob: -6.229619026184082
    10. '+' → logprob: -6.354619026184082

Token 109: ' win' (ID: 4449)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18029853701591492
    2. 'res' → logprob: -2.4302985668182373
    3. '       ' → logprob: -2.8052985668182373
    4. ' for' → logprob: -5.180298328399658
    5. 'next' → logprob: -5.430298328399658
    6. '   ' → logprob: -6.055298328399658
    7. 'dp' → logprob: -7.180298328399658
    8. 'rest' → logprob: -7.305298328399658
    9. 'prob' → logprob: -7.555298328399658
    10. 'temp' → logprob: -7.680298328399658

Token 110: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5063927173614502
    2. 's' → logprob: -1.1313927173614502
    3. ' =' → logprob: -3.25639271736145
    4. '*' → logprob: -4.256392478942871
    5. '=res' → logprob: -5.006392478942871
    6. '_prob' → logprob: -5.381392478942871
    7. '=s' → logprob: -6.381392478942871
    8. '*=' → logprob: -6.381392478942871
    9. '=q' → logprob: -6.881392478942871
    10. '=(' → logprob: -7.256392478942871

Token 111: 'dfs' (ID: 60837)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5437158942222595
    2. 'dfs' → logprob: -1.2937159538269043
    3. '1' → logprob: -3.1687159538269043
    4. '0' → logprob: -3.1687159538269043
    5. ' dfs' → logprob: -3.6687159538269043
    6. ' q' → logprob: -4.043715953826904
    7. '(' → logprob: -4.543715953826904
    8. 'p' → logprob: -5.793715953826904
    9. ' ' → logprob: -6.918715953826904
    10. 'max' → logprob: -7.293715953826904

Token 112: '(mask' (ID: 80748)
  Prédit: '(mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -3.500108141452074e-05
    2. '(' → logprob: -10.625035285949707
    3. 'mask' → logprob: -12.375035285949707
    4. ' mask' → logprob: -12.750035285949707
    5. '((' → logprob: -13.250035285949707
    6. ' (' → logprob: -13.750035285949707
    7. '	mask' → logprob: -14.500035285949707
    8. '```' → logprob: -16.62503433227539
    9. '(
' → logprob: -17.12503433227539
    10. '   ' → logprob: -17.37503433227539

Token 113: '|(' (ID: 153684)
  Prédit: '|('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|(' → logprob: -0.3158440887928009
    2. '|' → logprob: -1.3158440589904785
    3. ' |' → logprob: -6.0658440589904785
    4. '(' → logprob: -8.440844535827637
    5. '│' → logprob: -11.190844535827637
    6. '^(' → logprob: -11.565844535827637
    7. ')|(' → logprob: -12.065844535827637
    8. '```' → logprob: -12.565844535827637
    9. ')' → logprob: -13.190844535827637
    10. '|(
' → logprob: -13.315844535827637

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002978048287332058
    2. '(' → logprob: -8.125297546386719
    3. ' ' → logprob: -13.500297546386719
    4. ' (' → logprob: -15.875297546386719
    5. '```' → logprob: -16.37529754638672
    6. '   ' → logprob: -17.25029754638672
    7. '
' → logprob: -18.25029754638672
    8. '``' → logprob: -18.62529754638672
    9. '(pos' → logprob: -18.75029754638672
    10. 'pos' → logprob: -18.87529754638672

Token 115: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.002672684146091342
    2. '1' → logprob: -6.0026726722717285
    3. '(' → logprob: -9.502673149108887
    4. '<' → logprob: -9.752673149108887
    5. '```' → logprob: -10.377673149108887
    6. ' <<' → logprob: -11.877673149108887
    7. '()<<' → logprob: -12.252673149108887
    8. '<<(' → logprob: -12.502673149108887
    9. '|' → logprob: -12.752673149108887
    10. ']<<' → logprob: -13.002673149108887

Token 116: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -4.842555426876061e-06
    2. ' pos' → logprob: -12.250004768371582
    3. '(pos' → logprob: -20.8750057220459
    4. '	pos' → logprob: -21.8750057220459
    5. '[pos' → logprob: -22.3750057220459
    6. '   ' → logprob: -23.1250057220459
    7. ' ' → logprob: -23.7500057220459
    8. '_pos' → logprob: -24.1250057220459
    9. ',pos' → logprob: -24.8750057220459
    10. '
' → logprob: -25.0000057220459

Token 117: '))*' (ID: 81502)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003305784775875509
    2. '))*' → logprob: -8.750330924987793
    3. '))
' → logprob: -9.125330924987793
    4. ')' → logprob: -10.000330924987793
    5. ')))' → logprob: -11.750330924987793
    6. ' ))' → logprob: -12.500330924987793
    7. '))+' → logprob: -12.875330924987793
    8. '))

' → logprob: -14.000330924987793
    9. ' ' → logprob: -14.250330924987793
    10. '))
' → logprob: -14.375330924987793

Token 118: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0007080250070430338
    2. ' q' → logprob: -8.125707626342773
    3. '(' → logprob: -8.250707626342773
    4. 'p' → logprob: -9.000707626342773
    5. '   ' → logprob: -11.125707626342773
    6. ' ' → logprob: -13.125707626342773
    7. '(q' → logprob: -13.125707626342773
    8. '       ' → logprob: -13.250707626342773
    9. '     ' → logprob: -13.375707626342773
    10. '           ' → logprob: -13.750707626342773

Token 119: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14652925729751587
    2. '       ' → logprob: -2.771529197692871
    3. '
' → logprob: -3.021529197692871
    4. ' +' → logprob: -4.271529197692871
    5. '+(' → logprob: -5.021529197692871
    6. '+
' → logprob: -6.646529197692871
    7. '*' → logprob: -7.021529197692871
    8. ')+(' → logprob: -7.021529197692871
    9. '*(' → logprob: -7.896529197692871
    10. '   ' → logprob: -7.896529197692871

Token 120: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2166120409965515
    2. ' +' → logprob: -2.7166121006011963
    3. '       ' → logprob: -2.8416121006011963
    4. 'res' → logprob: -3.5916121006011963
    5. '```' → logprob: -3.7166121006011963
    6. '   ' → logprob: -4.216611862182617
    7. '+
' → logprob: -6.841611862182617
    8. ' res' → logprob: -6.966611862182617
    9. '
' → logprob: -7.466611862182617
    10. '``' → logprob: -7.716611862182617

Token 121: ' lose' (ID: 12577)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.004326976370066404
    2. ' res' → logprob: -6.004326820373535
    3. 'lose' (adapté à ' lose') → logprob: -6.629326820373535
    4. '       ' → logprob: -8.629326820373535
    5. 'loss' → logprob: -8.879326820373535
    6. 'dp' → logprob: -9.254326820373535
    7. ' lose' → logprob: -9.879326820373535
    8. '   ' → logprob: -10.754326820373535
    9. '+' → logprob: -11.254326820373535
    10. '
' → logprob: -11.629326820373535

Token 122: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.202796071767807
    2. '=(' → logprob: -1.7027961015701294
    3. '+=(' → logprob: -7.57779598236084
    4. '+=' → logprob: -7.95279598236084
    5. ' =' → logprob: -8.95279598236084
    6. '=p' → logprob: -9.07779598236084
    7. ' =(' → logprob: -9.32779598236084
    8. '=res' → logprob: -9.57779598236084
    9. '=((' → logprob: -10.82779598236084
    10. '=q' → logprob: -10.95279598236084

Token 123: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.03189031034708023
    2. '(' → logprob: -3.531890392303467
    3. ' dfs' → logprob: -6.406890392303467
    4. 'dp' → logprob: -8.156889915466309
    5. ' (' → logprob: -9.906889915466309
    6. '1' → logprob: -10.031889915466309
    7. '(d' → logprob: -10.031889915466309
    8. 'df' → logprob: -10.281889915466309
    9. '0' → logprob: -11.656889915466309
    10. 'win' → logprob: -12.656889915466309

Token 124: '(mask' (ID: 80748)
  Prédit: '(mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -3.833878508885391e-05
    2. ' (' → logprob: -10.375038146972656
    3. '(' → logprob: -12.250038146972656
    4. '((' → logprob: -13.000038146972656
    5. 'mask' → logprob: -18.000038146972656
    6. '(
' → logprob: -18.500038146972656
    7. ' mask' → logprob: -20.000038146972656
    8. '	mask' → logprob: -20.000038146972656
    9. '(lock' → logprob: -20.250038146972656
    10. ' ((' → logprob: -20.375038146972656

Token 125: ')*' (ID: 11043)
  Prédit: '|('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|(' → logprob: -0.004650253336876631
    2. '|' → logprob: -5.379650115966797
    3. ' |' → logprob: -11.004650115966797
    4. '|(
' → logprob: -11.879650115966797
    5. '^(' → logprob: -13.129650115966797
    6. ')|(' → logprob: -13.379650115966797
    7. '((' → logprob: -14.004650115966797
    8. '(|' → logprob: -14.129650115966797
    9. '(' → logprob: -14.879650115966797
    10. '(mask' → logprob: -15.129650115966797

Token 126: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002187376143410802
    2. ' (' → logprob: -6.127187252044678
    3. '   ' → logprob: -14.252187728881836
    4. '       ' → logprob: -14.502187728881836
    5. ' ' → logprob: -15.127187728881836
    6. '(p' → logprob: -15.252187728881836
    7. '     ' → logprob: -15.752187728881836
    8. '((' → logprob: -16.502187728881836
    9. '    ' → logprob: -16.877187728881836
    10. 'p' → logprob: -16.877187728881836

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12785156071186066
    2. '(' → logprob: -2.1278514862060547
    3. ' ' → logprob: -7.252851486206055
    4. ' (' → logprob: -8.752851486206055
    5. '   ' → logprob: -10.252851486206055
    6. '       ' → logprob: -12.252851486206055
    7. '     ' → logprob: -12.752851486206055
    8. '           ' → logprob: -13.002851486206055
    9. '
' → logprob: -13.252851486206055
    10. '         ' → logprob: -13.627851486206055

Token 128: '-q' (ID: 62760)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04491766169667244
    2. ' -' → logprob: -3.919917583465576
    3. '-q' → logprob: -4.169917583465576
    4. '[' → logprob: -5.544917583465576
    5. '-p' → logprob: -5.544917583465576
    6. '-pos' → logprob: -7.669917583465576
    7. '-[' → logprob: -9.419918060302734
    8. '[q' → logprob: -9.794918060302734
    9. '[-' → logprob: -10.044918060302734
    10. '[i' → logprob: -10.294918060302734

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20149987936019897
    2. ')
' → logprob: -1.7014999389648438
    3. ')
' → logprob: -9.576499938964844
    4. ')

' → logprob: -12.201499938964844
    5. ')`
' → logprob: -12.451499938964844
    6. '       ' → logprob: -13.076499938964844
    7. ')return' → logprob: -13.451499938964844
    8. ')`' → logprob: -13.951499938964844
    9. ' )
' → logprob: -14.076499938964844
    10. ' )' → logprob: -14.076499938964844

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00160627078730613
    2. 'res' → logprob: -6.751606464385986
    3. ' res' → logprob: -8.626605987548828
    4. '   ' → logprob: -9.126605987548828
    5. ')' → logprob: -10.126605987548828
    6. '+' → logprob: -10.376605987548828
    7. '```' → logprob: -10.751605987548828
    8. '
' → logprob: -11.376605987548828
    9. ' +' → logprob: -11.376605987548828
    10. ',' → logprob: -11.626605987548828

Token 131: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.007638686802238226
    2. '       ' → logprob: -5.007638454437256
    3. ' res' → logprob: -7.132638454437256
    4. '   ' → logprob: -9.007638931274414
    5. '
' → logprob: -14.007638931274414
    6. 'dp' → logprob: -15.132638931274414
    7. '	res' → logprob: -15.507638931274414
    8. '      ' → logprob: -16.007638931274414
    9. ' ' → logprob: -16.257638931274414
    10. '     ' → logprob: -16.757638931274414

Token 132: '=max' (ID: 102952)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00043579499470070004
    2. ' +=' → logprob: -7.875435829162598
    3. ']+=' → logprob: -10.500435829162598
    4. '+=(' → logprob: -10.875435829162598
    5. '+' → logprob: -11.750435829162598
    6. '=' → logprob: -14.500435829162598
    7. '+='' → logprob: -14.750435829162598
    8. '+="' → logprob: -15.125435829162598
    9. '```' → logprob: -16.12543487548828
    10. 'max' → logprob: -17.75043487548828

Token 133: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00015240935317706317
    2. 'res' → logprob: -9.250152587890625
    3. '(' → logprob: -10.125152587890625
    4. '(win' → logprob: -11.125152587890625
    5. ' (' → logprob: -14.375152587890625
    6. 'win' → logprob: -14.875152587890625
    7. ',res' → logprob: -15.250152587890625
    8. ' res' → logprob: -16.000152587890625
    9. '```' → logprob: -16.625152587890625
    10. '(
' → logprob: -17.500152587890625

Token 134: ',' (ID: 11)
  Prédit: ',res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',res' → logprob: -0.3160460591316223
    2. ',' → logprob: -1.3160459995269775
    3. '(res' → logprob: -6.191046237945557
    4. ' ,' → logprob: -7.691046237945557
    5. '(win' → logprob: -8.566045761108398
    6. '(' → logprob: -10.691045761108398
    7. 'res' → logprob: -10.816045761108398
    8. ',max' → logprob: -10.816045761108398
    9. 'win' → logprob: -11.566045761108398
    10. ',(' → logprob: -12.316045761108398

Token 135: 'win' (ID: 11668)
  Prédit: 'win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.007651703432202339
    2. ' win' → logprob: -4.8826518058776855
    3. '   ' → logprob: -10.507651329040527
    4. '(win' → logprob: -12.507651329040527
    5. '	win' → logprob: -12.632651329040527
    6. ' ' → logprob: -13.132651329040527
    7. 'res' → logprob: -13.632651329040527
    8. '  ' → logprob: -13.757651329040527
    9. '    ' → logprob: -13.882651329040527
    10. '       ' → logprob: -14.007651329040527

Token 136: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06210896372795105
    2. ' +' → logprob: -3.4371089935302734
    3. ')' → logprob: -3.6871089935302734
    4. '+)' → logprob: -5.937108993530273
    5. ' )' → logprob: -8.687108993530273
    6. '+
' → logprob: -9.062108993530273
    7. ')+' → logprob: -9.687108993530273
    8. '   ' → logprob: -12.062108993530273
    9. ',' → logprob: -12.187108993530273
    10. ')
' → logprob: -12.187108993530273

Token 137: 'lose' (ID: 6719)
  Prédit: 'lose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.0028147439006716013
    2. ' lose' → logprob: -5.877814769744873
    3. '   ' → logprob: -13.127814292907715
    4. 'leave' → logprob: -13.127814292907715
    5. 'loss' → logprob: -13.502814292907715
    6. 'los' → logprob: -13.627814292907715
    7. ' ' → logprob: -14.002814292907715
    8. ' ' → logprob: -15.252814292907715
    9. ')' → logprob: -15.377814292907715
    10. '
' → logprob: -15.502814292907715

Token 138: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6826412677764893
    2. '   ' → logprob: -1.1826412677764893
    3. ')' → logprob: -1.6826412677764893
    4. ')return' → logprob: -6.55764102935791
    5. 'return' → logprob: -7.43264102935791
    6. ')
' → logprob: -8.43264102935791
    7. '
' → logprob: -9.18264102935791
    8. ' )
' → logprob: -11.55764102935791
    9. ')\' → logprob: -12.55764102935791
    10. ' ' → logprob: -12.80764102935791

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3850286602973938
    2. ' dp' → logprob: -1.260028600692749
    3. 'dp' → logprob: -3.635028600692749
    4. '
' → logprob: -5.260028839111328
    5. '	dp' → logprob: -5.635028839111328
    6. '(dp' → logprob: -8.135028839111328
    7. ' return' → logprob: -9.135028839111328
    8. ' 
' → logprob: -9.135028839111328
    9. ' ' → logprob: -9.635028839111328
    10. '```' → logprob: -10.010028839111328

Token 140: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.7136985063552856
    2. ' dp' → logprob: -0.9636985063552856
    3. '   ' → logprob: -2.088698387145996
    4. 'return' → logprob: -5.838698387145996
    5. ' return' → logprob: -6.588698387145996
    6. ' ' → logprob: -8.588698387145996
    7. '	dp' → logprob: -8.713698387145996
    8. '
' → logprob: -9.713698387145996
    9. '(dp' → logprob: -9.713698387145996
    10. '```' → logprob: -10.463698387145996

Token 141: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. '[m' → logprob: -13.750001907348633
    3. '\[' → logprob: -14.750001907348633
    4. '[mem' → logprob: -15.375001907348633
    5. '```' → logprob: -15.875001907348633
    6. ' [' → logprob: -16.500001907348633
    7. '=' → logprob: -16.875001907348633
    8. '[token' → logprob: -17.500001907348633
    9. '[
' → logprob: -17.625001907348633
    10. '=[' → logprob: -17.875001907348633

Token 142: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -7.896309739408025e-07
    2. ' mask' → logprob: -14.375000953674316
    3. '(mask' → logprob: -16.125
    4. '	mask' → logprob: -17.875
    5. ')' → logprob: -18.375
    6. '[' → logprob: -18.625
    7. '_mask' → logprob: -18.875
    8. 'm' → logprob: -19.875
    9. '
' → logprob: -19.875
    10. ']' → logprob: -20.0

Token 143: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.04494205117225647
    2. ']' → logprob: -3.7949421405792236
    3. '=' → logprob: -3.9199421405792236
    4. ')=' → logprob: -6.5449419021606445
    5. ']+=' → logprob: -9.919941902160645
    6. ')' → logprob: -10.044941902160645
    7. ']=-' → logprob: -10.294941902160645
    8. ']=(' → logprob: -10.669941902160645
    9. ' =' → logprob: -11.294941902160645
    10. ' ]' → logprob: -11.544941902160645

Token 144: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -7.941850526549388e-06
    2. ' res' → logprob: -11.750007629394531
    3. 're' → logprob: -22.62500762939453
    4. '(res' → logprob: -23.12500762939453
    5. '	res' → logprob: -23.50000762939453
    6. '$res' → logprob: -23.75000762939453
    7. '_res' → logprob: -25.37500762939453
    8. '
' → logprob: -25.75000762939453
    9. ',res' → logprob: -26.00000762939453
    10. 'ress' → logprob: -26.12500762939453

Token 145: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011213334277272224
    2. ' return' → logprob: -4.761213302612305
    3. 'return' → logprob: -6.011213302612305
    4. '	return' → logprob: -8.886213302612305
    5. ':return' → logprob: -12.511213302612305
    6. '   ' → logprob: -13.761213302612305
    7. ')return' → logprob: -15.261213302612305
    8. '
' → logprob: -15.761213302612305
    9. '    
' → logprob: -16.011213302612305
    10. '  ' → logprob: -16.011213302612305

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9585689306259155
    2. ' return' → logprob: -0.9585689306259155
    3. 'return' → logprob: -1.4585689306259155
    4. '	return' → logprob: -7.583569049835205
    5. ':return' → logprob: -10.458568572998047
    6. ')return' → logprob: -12.458568572998047
    7. '_return' → logprob: -13.333568572998047
    8. '{return' → logprob: -14.083568572998047
    9. '@return' → logprob: -14.083568572998047
    10. 'eturn' → logprob: -14.333568572998047

Token 147: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006752429064363241
    2. ' return' → logprob: -5.0067524909973145
    3. '   ' → logprob: -10.256752014160156
    4. '	return' → logprob: -13.256752014160156
    5. ':return' → logprob: -15.631752014160156
    6. '_return' → logprob: -17.381752014160156
    7. ')return' → logprob: -18.131752014160156
    8. '{return' → logprob: -18.256752014160156
    9. '```' → logprob: -18.631752014160156
    10. 'eturn' → logprob: -18.631752014160156

Token 148: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.10544038563966751
    2. 'dp' → logprob: -2.355440378189087
    3. ' res' → logprob: -5.355440616607666
    4. ' dp' → logprob: -7.605440616607666
    5. '   ' → logprob: -18.355440139770508
    6. '	res' → logprob: -19.105440139770508
    7. '(dp' → logprob: -19.605440139770508
    8. '	dp' → logprob: -19.980440139770508
    9. ' ' → logprob: -20.355440139770508
    10. '(res' → logprob: -20.730440139770508

Token 149: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1917029619216919
    2. '(d' → logprob: -1.941702961921692
    3. '(dp' → logprob: -3.8167028427124023
    4. '(max' → logprob: -5.316702842712402
    5. '()' → logprob: -5.941702842712402
    6. '(round' → logprob: -7.066702842712402
    7. '(df' → logprob: -8.441702842712402
    8. '(print' → logprob: -8.691702842712402
    9. '(sum' → logprob: -10.191702842712402
    10. '(
' → logprob: -10.191702842712402

Token 152: 'fs' (ID: 6469)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07935766130685806
    2. 'fs' → logprob: -2.579357624053955
    3. 'ps' → logprob: -7.704357624053955
    4. 'f' → logprob: -11.829358100891113
    5. '(fs' → logprob: -12.329358100891113
    6. 'pf' → logprob: -13.704358100891113
    7. '[' → logprob: -14.079358100891113
    8. '
' → logprob: -14.204358100891113
    9. 'P' → logprob: -14.829358100891113
    10. 'fsp' → logprob: -14.829358100891113

Token 153: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1279553291387856e-05
    2. '0' → logprob: -11.625011444091797
    3. ' (' → logprob: -13.500011444091797
    4. '(
' → logprob: -14.875011444091797
    5. '((' → logprob: -15.250011444091797
    6. ')' → logprob: -15.375011444091797
    7. '(

' → logprob: -17.000011444091797
    8. ')(' → logprob: -18.000011444091797
    9. '()' → logprob: -18.750011444091797
    10. ' ' → logprob: -20.000011444091797

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '(' → logprob: -18.625
    4. ')' → logprob: -20.0
    5. '   ' → logprob: -20.75
    6. '۰' → logprob: -21.3125
    7. '000' → logprob: -21.375
    8. '00' → logprob: -21.375
    9. '```' → logprob: -21.5625
    10. '
' → logprob: -21.625

Token 155: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4740857779979706
    2. ')' → logprob: -0.974085807800293
    3. ')
' → logprob: -11.974085807800293
    4. ' )' → logprob: -13.974085807800293
    5. ')))' → logprob: -14.349085807800293
    6. '))
' → logprob: -14.474085807800293
    7. ' ))' → logprob: -15.599085807800293
    8. '})' → logprob: -16.974084854125977
    9. ')`' → logprob: -16.974084854125977
    10. ')**' → logprob: -17.099084854125977


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 153
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 79
Tokens correctement prédits (top 10): 131
Précision stricte (1ère position): 48.37%
Précision adaptée (1ère position): 51.63%
Précision (top 10): 85.62%
================================================================================
