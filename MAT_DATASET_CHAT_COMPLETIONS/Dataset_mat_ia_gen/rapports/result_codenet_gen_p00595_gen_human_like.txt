================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:16:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

import sys

for line in sys.stdin:
    if line.strip():
        x, y = map(int, line.split())
        print(gcd(x, y))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' gcd' (ID: 106918)
  → Token d'amorce (pas de prédiction)

Token 2: '(a' (ID: 6271)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00874741468578577
    2. ',b' → logprob: -5.133747577667236
    3. ')' → logprob: -6.258747577667236
    4. '):' → logprob: -8.133747100830078
    5. ',a' → logprob: -8.133747100830078
    6. ',)' → logprob: -9.008747100830078
    7. ' ,' → logprob: -10.008747100830078
    8. ',g' → logprob: -10.508747100830078
    9. ',
' → logprob: -11.383747100830078
    10. ',c' → logprob: -11.508747100830078

Token 4: ' b' (ID: 287)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0069187879562378
    2. ',b' → logprob: -1.1319187879562378
    3. 'b' → logprob: -1.7569187879562378
    4. ' b' → logprob: -2.5069189071655273
    5. ' ,' → logprob: -2.8819189071655273
    6. ' ' → logprob: -6.381918907165527
    7. ')b' → logprob: -8.881918907165527
    8. ')' → logprob: -9.006918907165527
    9. '```' → logprob: -10.006918907165527
    10. '>b' → logprob: -11.006918907165527

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019109532237052917
    2. ')' → logprob: -4.019109725952148
    3. ':' → logprob: -7.644109725952148
    4. '):
' → logprob: -8.269109725952148
    5. '```' → logprob: -9.269109725952148
    6. ',' → logprob: -10.519109725952148
    7. ''):' → logprob: -10.644109725952148
    8. '**' → logprob: -11.519109725952148
    9. '<|end|>' → logprob: -11.894109725952148
    10. ')**' → logprob: -12.144109725952148

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04887450486421585
    2. '   ' → logprob: -3.923874616622925
    3. '```' → logprob: -4.423874378204346
    4. ':
' → logprob: -5.923874378204346
    5. '`:' → logprob: -6.048874378204346
    6. '':' → logprob: -6.298874378204346
    7. '":' → logprob: -6.423874378204346
    8. '():' → logprob: -6.423874378204346
    9. '\' → logprob: -7.048874378204346
    10. '    
' → logprob: -7.048874378204346

Token 7: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5872713923454285
    2. 'i' → logprob: -1.5872714519500732
    3. '```' → logprob: -1.7122714519500732
    4. ' if' → logprob: -3.4622714519500732
    5. ' i' → logprob: -4.712271213531494
    6. 'if' → logprob: -4.962271213531494
    7. '``' → logprob: -5.837271213531494
    8. '    ' → logprob: -6.212271213531494
    9. ' ' → logprob: -6.212271213531494
    10. '`' → logprob: -6.337271213531494

Token 8: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7222545146942139
    2. ' a' → logprob: -0.7222545146942139
    3. ' b' → logprob: -4.347254753112793
    4. ' not' → logprob: -4.847254753112793
    5. 'a' → logprob: -4.972254753112793
    6. '  ' → logprob: -7.722254753112793
    7. 'b' → logprob: -8.097254753112793
    8. ' (' → logprob: -8.972254753112793
    9. 'not' → logprob: -10.722254753112793
    10. 's' → logprob: -11.347254753112793

Token 9: ':
' (ID: 734)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.10665298998355865
    2. ' >' → logprob: -2.6066529750823975
    3. '>' → logprob: -4.356653213500977
    4. ':' → logprob: -5.606653213500977
    5. ' ' → logprob: -5.606653213500977
    6. '!=' → logprob: -6.356653213500977
    7. '```' → logprob: -6.481653213500977
    8. '   ' → logprob: -6.606653213500977
    9. ' ==' → logprob: -7.606653213500977
    10. ' :' → logprob: -7.731653213500977

Token 10: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026195326820015907
    2. '    ' → logprob: -4.026195526123047
    3. '   ' → logprob: -6.276195526123047
    4. '=' → logprob: -6.401195526123047
    5. '     ' → logprob: -6.776195526123047
    6. 'return' → logprob: -7.901195526123047
    7. '        ' → logprob: -7.901195526123047
    8. ' =' → logprob: -8.026195526123047
    9. ' ' → logprob: -8.151195526123047
    10. '`' → logprob: -8.151195526123047

Token 11: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.4327356219291687
    2. ' a' → logprob: -1.0577356815338135
    3. '       ' → logprob: -6.682735443115234
    4. '```' → logprob: -6.682735443115234
    5. '           ' → logprob: -6.932735443115234
    6. '   ' → logprob: -8.807735443115234
    7. '    ' → logprob: -8.807735443115234
    8. '        ' → logprob: -9.807735443115234
    9. '``' → logprob: -10.307735443115234
    10. '`' → logprob: -10.682735443115234

Token 12: ',' (ID: 11)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.5815044641494751
    2. ',' → logprob: -1.206504464149475
    3. ' %' → logprob: -2.5815043449401855
    4. ' ,' → logprob: -3.7065043449401855
    5. '%' → logprob: -3.8315043449401855
    6. '=' → logprob: -4.7065043449401855
    7. ' =' → logprob: -5.2065043449401855
    8. '%=' → logprob: -5.7065043449401855
    9. ' %,' → logprob: -7.0815043449401855
    10. ' ' → logprob: -7.5815043449401855

Token 13: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14392170310020447
    2. ' b' → logprob: -2.0189216136932373
    3. '<|end|>' → logprob: -6.768921852111816
    4. ' ' → logprob: -9.518921852111816
    5. '<|end|>' → logprob: -10.893921852111816
    6. 's' → logprob: -13.143921852111816
    7. 'space' → logprob: -13.893921852111816
    8. '>b' → logprob: -15.143921852111816
    9. '    ' → logprob: -15.143921852111816
    10. '  ' → logprob: -15.393921852111816

Token 14: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04302864894270897
    2. ' =' → logprob: -3.1680285930633545
    3. ',' → logprob: -10.543028831481934
    4. '<|end|>' → logprob: -13.793028831481934
    5. '   ' → logprob: -13.918028831481934
    6. '=
' → logprob: -14.793028831481934
    7. ' ' → logprob: -16.043027877807617
    8. '=

' → logprob: -16.168027877807617
    9. '```' → logprob: -16.793027877807617
    10. '=}' → logprob: -16.793027877807617

Token 15: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0788913294672966
    2. 'b' → logprob: -2.5788912773132324
    3. '```' → logprob: -15.07889175415039
    4. ' ' → logprob: -15.57889175415039
    5. '(b' → logprob: -15.70389175415039
    6. 'a' → logprob: -15.95389175415039
    7. ' a' → logprob: -15.95389175415039
    8. ' (' → logprob: -16.07889175415039
    9. '   ' → logprob: -16.45389175415039
    10. '    ' → logprob: -16.57889175415039

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02631540037691593
    2. ' ,' → logprob: -3.651315450668335
    3. ',a' → logprob: -12.401315689086914
    4. '`,' → logprob: -12.651315689086914
    5. ' ' → logprob: -13.026315689086914
    6. ',
' → logprob: -13.651315689086914
    7. 'a' → logprob: -13.651315689086914
    8. '   ' → logprob: -14.401315689086914
    9. '',' → logprob: -14.901315689086914
    10. '‌,' → logprob: -14.901315689086914

Token 17: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5759416818618774
    2. ' a' → logprob: -0.8259416818618774
    3. ' ' → logprob: -14.450942039489746
    4. '	a' → logprob: -14.575942039489746
    5. '_a' → logprob: -15.200942039489746
    6. '```' → logprob: -15.325942039489746
    7. '<|end|>' → logprob: -15.825942039489746
    8. '   ' → logprob: -15.950942039489746
    9. '    ' → logprob: -16.57594108581543
    10. '>a' → logprob: -16.82594108581543

Token 18: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2519850432872772
    2. ' %' → logprob: -1.5019850730895996
    3. '%b' → logprob: -10.126984596252441
    4. '%i' → logprob: -12.126984596252441
    5. '%c' → logprob: -12.876984596252441
    6. ' ' → logprob: -13.126984596252441
    7. '`' → logprob: -13.376984596252441
    8. '```' → logprob: -13.626984596252441
    9. '%s' → logprob: -14.001984596252441
    10. ' ' → logprob: -14.751984596252441

Token 19: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007099286303855479
    2. ' b' → logprob: -7.2507100105285645
    3. ' ' → logprob: -19.625709533691406
    4. '   ' → logprob: -21.375709533691406
    5. '	b' → logprob: -21.500709533691406
    6. '  ' → logprob: -22.500709533691406
    7. '>b' → logprob: -22.625709533691406
    8. '<|end|>' → logprob: -23.000709533691406
    9. ')b' → logprob: -23.000709533691406
    10. '>' → logprob: -23.375709533691406

Token 20: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11977797746658325
    2. ' return' → logprob: -2.8697779178619385
    3. '       ' → logprob: -3.7447779178619385
    4. 'return' → logprob: -4.494778156280518
    5. '    
' → logprob: -4.744778156280518
    6. ' 
' → logprob: -4.994778156280518
    7. '  
' → logprob: -6.744778156280518
    8. '```' → logprob: -6.744778156280518
    9. '\n' → logprob: -7.244778156280518
    10. '    ' → logprob: -7.369778156280518

Token 22: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3876168727874756
    2. ' return' → logprob: -1.3876168727874756
    3. '   ' → logprob: -2.6376168727874756
    4. '```' → logprob: -9.887617111206055
    5. ':return' → logprob: -10.262617111206055
    6. '	return' → logprob: -11.137617111206055
    7. 'Return' → logprob: -11.637617111206055
    8. '_return' → logprob: -12.262617111206055
    9. ' ' → logprob: -12.762617111206055
    10. '       ' → logprob: -13.262617111206055

Token 23: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2819637358188629
    2. 'a' → logprob: -1.4069637060165405
    3. ' ' → logprob: -7.40696382522583
    4. 'space' → logprob: -9.031963348388672
    5. ' ' → logprob: -9.656963348388672
    6. ' space' → logprob: -11.781963348388672
    7. 's' → logprob: -12.906963348388672
    8. '	a' → logprob: -13.281963348388672
    9. '_a' → logprob: -13.656963348388672
    10. ' `' → logprob: -13.906963348388672

Token 24: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40993329882621765
    2. '
' → logprob: -2.03493332862854
    3. '<|end|>' → logprob: -2.15993332862854
    4. '\n' → logprob: -3.90993332862854
    5. ')' → logprob: -4.034933090209961
    6. '

' → logprob: -4.159933090209961
    7. '#' → logprob: -4.534933090209961
    8. '(
' → logprob: -4.784933090209961
    9. '```' → logprob: -5.409933090209961
    10. 'def' → logprob: -5.784933090209961

Token 25: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5086222887039185
    2. '
' → logprob: -1.8836222887039185
    3. '\n' → logprob: -2.633622169494629
    4. '```' → logprob: -3.133622169494629
    5. '#' → logprob: -3.633622169494629
    6. '<|end|>' → logprob: -3.758622169494629
    7. '

' → logprob: -4.008622169494629
    8. 'def' → logprob: -4.383622169494629
    9. ')' → logprob: -4.633622169494629
    10. '\' → logprob: -4.883622169494629

Token 26: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.027643896639347076
    2. ' ' → logprob: -3.652643918991089
    3. ' os' → logprob: -7.65264368057251
    4. ' sys' → logprob: -7.77764368057251
    5. ' space' → logprob: -7.90264368057251
    6. '_' → logprob: -10.527644157409668
    7. ' functools' → logprob: -10.902644157409668
    8. ' numpy' → logprob: -11.902644157409668
    9. ' ' → logprob: -12.527644157409668
    10. '  ' → logprob: -12.777644157409668

Token 27: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4971134066581726
    2. '\n' → logprob: -1.4971134662628174
    3. '.' → logprob: -2.8721134662628174
    4. 'newline' → logprob: -3.3721134662628174
    5. '
' → logprob: -3.8721134662628174
    6. '\' → logprob: -4.872113227844238
    7. '```' → logprob: -4.872113227844238
    8. 'print' → logprob: -5.122113227844238
    9. '

' → logprob: -5.122113227844238
    10. '<|end|>' → logprob: -5.372113227844238

Token 28: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11415692418813705
    2. 'print' → logprob: -2.73915696144104
    3. 'def' → logprob: -3.86415696144104
    4. 'n' → logprob: -4.989156723022461
    5. 'if' → logprob: -5.239156723022461
    6. 'input' → logprob: -5.364156723022461
    7. 'data' → logprob: -5.489156723022461
    8. 'num' → logprob: -7.864156723022461
    9. 'argv' → logprob: -8.364156723022461
    10. 'sys' → logprob: -8.989156723022461

Token 29: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010073727928102016
    2. ' line' → logprob: -5.135073661804199
    3. ' i' → logprob: -5.510073661804199
    4. ' arg' → logprob: -10.3850736618042
    5. ' sys' → logprob: -11.5100736618042
    6. '  ' → logprob: -11.7600736618042
    7. ' space' → logprob: -12.0100736618042
    8. ' _' → logprob: -12.0100736618042
    9. ' argv' → logprob: -12.0100736618042
    10. ' filename' → logprob: -12.1350736618042

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003909438382834196
    2. 'in' → logprob: -5.628909587860107
    3. ' ' → logprob: -8.12890911102295
    4. '	in' → logprob: -12.50390911102295
    5. '  ' → logprob: -12.62890911102295
    6. '```' → logprob: -13.50390911102295
    7. '<|end|>' → logprob: -13.87890911102295
    8. 'line' → logprob: -14.37890911102295
    9. 's' → logprob: -14.50390911102295
    10. '_in' → logprob: -15.31640911102295

Token 31: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4740964472293854
    2. 'sys' → logprob: -0.974096417427063
    3. '	sys' → logprob: -11.599096298217773
    4. '=sys' → logprob: -11.724096298217773
    5. '(sys' → logprob: -13.349096298217773
    6. 'stdin' → logprob: -15.974096298217773
    7. 's' → logprob: -16.099096298217773
    8. ' iter' → logprob: -16.474096298217773
    9. 'iter' → logprob: -16.474096298217773
    10. 'Sys' → logprob: -16.724096298217773

Token 32: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0001911432045744732
    2. 'stdin' → logprob: -8.750190734863281
    3. '.' → logprob: -11.000190734863281
    4. '.argv' → logprob: -11.875190734863281
    5. '.stdout' → logprob: -12.750190734863281
    6. '(stdin' → logprob: -13.625190734863281
    7. '.readline' → logprob: -13.625190734863281
    8. '.readlines' → logprob: -13.625190734863281
    9. '```' → logprob: -14.500190734863281
    10. ' .' → logprob: -14.500190734863281

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010325061157345772
    2. '.readline' → logprob: -4.760324954986572
    3. ' in' → logprob: -6.885324954986572
    4. '.strip' → logprob: -8.26032543182373
    5. '.readlines' → logprob: -8.63532543182373
    6. ':
' → logprob: -9.38532543182373
    7. ' :' → logprob: -9.63532543182373
    8. '.' → logprob: -10.88532543182373
    9. '<|end|>' → logprob: -11.13532543182373
    10. '.rstrip' → logprob: -11.63532543182373

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007983008399605751
    2. '    
' → logprob: -5.257983207702637
    3. ' readline' → logprob: -7.257983207702637
    4. '.strip' → logprob: -7.382983207702637
    5. ' line' → logprob: -7.382983207702637
    6. ':' → logprob: -8.507983207702637
    7. ' if' → logprob: -9.632983207702637
    8. ' input' → logprob: -9.882983207702637
    9. 'input' → logprob: -10.007983207702637
    10. 'line' → logprob: -10.007983207702637

Token 35: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.136899471282959
    2. ' line' → logprob: -1.261899471282959
    3. ' numbers' → logprob: -1.386899471282959
    4. ' n' → logprob: -2.636899471282959
    5. ' a' → logprob: -4.386899471282959
    6. ' values' → logprob: -4.511899471282959
    7. ' nums' → logprob: -4.511899471282959
    8. ' num' → logprob: -4.636899471282959
    9. ' data' → logprob: -4.636899471282959
    10. 'n' → logprob: -5.136899471282959

Token 36: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.024317968636751175
    2. ' not' → logprob: -3.774317979812622
    3. ' ' → logprob: -7.149317741394043
    4. 'line' → logprob: -8.274317741394043
    5. ' len' → logprob: -10.649317741394043
    6. 'not' → logprob: -12.399317741394043
    7. '	line' → logprob: -13.524317741394043
    8. ' '' → logprob: -14.524317741394043
    9. '=line' → logprob: -14.524317741394043
    10. '#line' → logprob: -15.649317741394043

Token 37: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.12798552215099335
    2. '.' → logprob: -2.1279854774475098
    3. '.startswith' → logprob: -7.00298547744751
    4. '.rstrip' → logprob: -9.127985954284668
    5. ' .' → logprob: -10.252985954284668
    6. '.endswith' → logprob: -13.627985954284668
    7. 'strip' → logprob: -14.127985954284668
    8. '.chomp' → logprob: -14.627985954284668
    9. '.split' → logprob: -14.752985954284668
    10. '.trim' → logprob: -14.752985954284668

Token 38: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2546534240245819
    2. ' ==' → logprob: -2.3796534538269043
    3. '()' → logprob: -2.5046534538269043
    4. '()==' → logprob: -3.6296534538269043
    5. '==' → logprob: -4.379653453826904
    6. ':' → logprob: -4.504653453826904
    7. ' ():' → logprob: -9.004652976989746
    8. ' ()' → logprob: -9.754652976989746
    9. '():
' → logprob: -9.879652976989746
    10. ' !=' → logprob: -10.129652976989746

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008367527276277542
    2. '   ' → logprob: -5.883367538452148
    3. '    ' → logprob: -6.633367538452148
    4. ' a' → logprob: -7.133367538452148
    5. ' =' → logprob: -7.258367538452148
    6. ' ' → logprob: -7.633367538452148
    7. ',' → logprob: -7.758367538452148
    8. 'a' → logprob: -7.883367538452148
    9. '        
' → logprob: -8.758367538452148
    10. ' x' → logprob: -8.883367538452148

Token 40: ' x' (ID: 1215)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.7230296730995178
    2. ' a' → logprob: -1.348029613494873
    3. ' parts' → logprob: -2.348029613494873
    4. 'a' → logprob: -2.973029613494873
    5. ' n' → logprob: -3.098029613494873
    6. ' nums' → logprob: -3.848029613494873
    7. 'n' → logprob: -4.598029613494873
    8. 'numbers' → logprob: -4.848029613494873
    9. ' values' → logprob: -5.473029613494873
    10. '       ' → logprob: -5.598029613494873

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001488792710006237
    2. ' ,' → logprob: -6.62648868560791
    3. ' =' → logprob: -9.12648868560791
    4. '=' → logprob: -10.75148868560791
    5. 's' → logprob: -11.25148868560791
    6. ',s' → logprob: -12.12648868560791
    7. ' ' → logprob: -12.62648868560791
    8. ',x' → logprob: -13.25148868560791
    9. ',y' → logprob: -13.25148868560791
    10. ',int' → logprob: -14.00148868560791

Token 42: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.14297080039978027
    2. ' y' → logprob: -2.0179708003997803
    3. '<|end|>' → logprob: -8.26797103881836
    4. ' ' → logprob: -11.01797103881836
    5. '<|end|>' → logprob: -11.14297103881836
    6. '    ' → logprob: -12.89297103881836
    7. '	y' → logprob: -13.39297103881836
    8. 'space' → logprob: -14.14297103881836
    9. '  ' → logprob: -14.26797103881836
    10. ' =' → logprob: -14.76797103881836

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196846812963486
    2. '=' → logprob: -2.8119685649871826
    3. ',' → logprob: -15.436968803405762
    4. ' ' → logprob: -15.561968803405762
    5. '<|end|>' → logprob: -16.061967849731445
    6. ')' → logprob: -16.436967849731445
    7. '=line' → logprob: -16.811967849731445
    8. ' =)' → logprob: -16.936967849731445
    9. ' =
' → logprob: -17.311967849731445
    10. '=int' → logprob: -17.936967849731445

Token 44: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.012585342861711979
    2. 'map' → logprob: -4.637585163116455
    3. ' line' → logprob: -5.887585163116455
    4. ' ' → logprob: -10.887585639953613
    5. 'line' → logprob: -11.012585639953613
    6. ' ' → logprob: -12.137585639953613
    7. ' [' → logprob: -12.387585639953613
    8. '	map' → logprob: -12.887585639953613
    9. '[' → logprob: -13.262585639953613
    10. '   ' → logprob: -14.637585639953613

Token 45: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0027534032706171274
    2. '(' → logprob: -6.127753257751465
    3. '(str' → logprob: -7.627753257751465
    4. 'int' → logprob: -9.627753257751465
    5. '(lambda' → logprob: -12.252753257751465
    6. '<|end|>' → logprob: -12.627753257751465
    7. '<int' → logprob: -13.002753257751465
    8. '=int' → logprob: -13.627753257751465
    9. ' int' → logprob: -14.127753257751465
    10. '(
' → logprob: -14.127753257751465

Token 46: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0009530289680697024
    2. ',line' → logprob: -7.500953197479248
    3. ')' → logprob: -8.37595272064209
    4. ' line' → logprob: -9.37595272064209
    5. ',' → logprob: -10.12595272064209
    6. '(' → logprob: -10.75095272064209
    7. 'line' → logprob: -11.50095272064209
    8. '=line' → logprob: -12.25095272064209
    9. '[line' → logprob: -12.37595272064209
    10. '	line' → logprob: -13.37595272064209

Token 47: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.10021152347326279
    2. 'line' → logprob: -2.3502116203308105
    3. '(line' → logprob: -13.475211143493652
    4. '	line' → logprob: -13.475211143493652
    5. '[line' → logprob: -13.725211143493652
    6. '#line' → logprob: -15.100211143493652
    7. '=line' → logprob: -15.475211143493652
    8. ')' → logprob: -15.475211143493652
    9. ' ' → logprob: -16.22521209716797
    10. '   ' → logprob: -16.60021209716797

Token 48: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.00041982904076576233
    2. '.split' → logprob: -8.375419616699219
    3. '.' → logprob: -8.625419616699219
    4. ' .' → logprob: -12.250419616699219
    5. '().' → logprob: -12.750419616699219
    6. '.rstrip' → logprob: -13.750419616699219
    7. ').' → logprob: -14.875419616699219
    8. 'strip' → logprob: -15.250419616699219
    9. '(strip' → logprob: -15.750419616699219
    10. '.readline' → logprob: -16.25041961669922

Token 49: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.026680273935198784
    2. '('' → logprob: -3.9016802310943604
    3. '()' → logprob: -6.0266804695129395
    4. '(','' → logprob: -6.0266804695129395
    5. ')' → logprob: -7.4016804695129395
    6. '()))' → logprob: -7.6516804695129395
    7. '(' → logprob: -9.776679992675781
    8. '())
' → logprob: -9.901679992675781
    9. ' ())' → logprob: -10.526679992675781
    10. '(',' → logprob: -10.776679992675781

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13526779413223267
    2. 'print' → logprob: -3.010267734527588
    3. '        
' → logprob: -3.135267734527588
    4. '
' → logprob: -4.260267734527588
    5. '<|end|>' → logprob: -4.885267734527588
    6. ' print' → logprob: -5.885267734527588
    7. '   ' → logprob: -6.260267734527588
    8. '  
' → logprob: -6.385267734527588
    9. ',' → logprob: -6.760267734527588
    10. '    
' → logprob: -7.010267734527588

Token 51: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.023530561476945877
    2. ' print' → logprob: -4.39853048324585
    3. '       ' → logprob: -4.52353048324585
    4. 'g' → logprob: -10.648530960083008
    5. '```' → logprob: -10.648530960083008
    6. '   ' → logprob: -11.148530960083008
    7. 'result' → logprob: -11.273530960083008
    8. ' gcd' → logprob: -11.523530960083008
    9. '        ' → logprob: -11.648530960083008
    10. '        
' → logprob: -11.898530960083008

Token 52: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.011053833179175854
    2. '(' → logprob: -4.511054039001465
    3. '(f' → logprob: -12.386054039001465
    4. '(x' → logprob: -14.511054039001465
    5. '("' → logprob: -15.386054039001465
    6. 'g' → logprob: -15.511054039001465
    7. '('' → logprob: -15.511054039001465
    8. '(math' → logprob: -15.636054039001465
    9. '(max' → logprob: -16.13605308532715
    10. ' (' → logprob: -16.13605308532715

Token 53: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: 0.0
    2. 'cdn' → logprob: -16.875
    3. 'c' → logprob: -18.25
    4. 'CD' → logprob: -19.625
    5. '_cd' → logprob: -19.625
    6. '	cd' → logprob: -20.125
    7. 'cdf' → logprob: -21.125
    8. 'cdr' → logprob: -21.875
    9. '(cd' → logprob: -22.125
    10. ' cd' → logprob: -22.125

Token 54: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4741211235523224
    2. '(' → logprob: -0.97412109375
    3. '(
' → logprob: -10.09912109375
    4. ' (' → logprob: -13.59912109375
    5. ')' → logprob: -13.59912109375
    6. '(

' → logprob: -15.47412109375
    7. '(X' → logprob: -16.34912109375
    8. '(y' → logprob: -16.59912109375
    9. ')(' → logprob: -17.34912109375
    10. '(a' → logprob: -17.34912109375

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010948538547381759
    2. ',y' → logprob: -6.876094818115234
    3. ' ,' → logprob: -9.751094818115234
    4. ',
' → logprob: -13.126094818115234
    5. 'y' → logprob: -13.876094818115234
    6. '`,' → logprob: -15.751094818115234
    7. ' ' → logprob: -16.126094818115234
    8. '   ' → logprob: -16.251094818115234
    9. '),' → logprob: -16.251094818115234
    10. ',x' → logprob: -16.251094818115234

Token 56: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1002068892121315
    2. ' y' → logprob: -2.3502068519592285
    3. '    ' → logprob: -16.35020637512207
    4. ' ' → logprob: -16.35020637512207
    5. '	y' → logprob: -16.97520637512207
    6. '   ' → logprob: -17.47520637512207
    7. 'x' → logprob: -17.60020637512207
    8. ')y' → logprob: -18.22520637512207
    9. '  ' → logprob: -18.72520637512207
    10. ' ' → logprob: -19.10020637512207

Token 57: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5759491920471191
    2. ')' → logprob: -0.8259491920471191
    3. ')))' → logprob: -12.075948715209961
    4. '))
' → logprob: -12.825948715209961
    5. ')
' → logprob: -14.200948715209961
    6. ' )' → logprob: -15.200948715209961
    7. ' ))' → logprob: -15.450948715209961
    8. ')}' → logprob: -16.57594871520996
    9. '   ' → logprob: -16.95094871520996
    10. ')`' → logprob: -16.95094871520996


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 55
Tokens correctement prédits (1ère position, stricte): 25
Tokens correctement prédits (1ère position, avec adaptation): 28
Tokens correctement prédits (top 10): 49
Précision stricte (1ère position): 45.45%
Précision adaptée (1ère position): 50.91%
Précision (top 10): 89.09%
================================================================================
