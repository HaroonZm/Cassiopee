================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    import sys
    max_sum = 36  # max sum with digits 0..9 * 4 = 36
    dp = [[0]* (max_sum+1) for _ in range(5)]
    dp[0][0] = 1
    for i in range(1,5):
        for s in range(max_sum+1):
            for digit in range(10):
                if s - digit >= 0:
                    dp[i][s] += dp[i-1][s - digit]
    for line in sys.stdin:
        n = int(line.strip())
        print(dp[4][n] if n <= max_sum else 0)
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.49122923612594604
    2. '\n' → logprob: -1.2412292957305908
    3. '   ' → logprob: -2.741229295730591
    4. '    
' → logprob: -4.491229057312012
    5. ' 
' → logprob: -5.241229057312012
    6. '    ' → logprob: -5.366229057312012
    7. '```' → logprob: -5.616229057312012
    8. '(' → logprob: -5.991229057312012
    9. ''' → logprob: -6.616229057312012
    10. ' \' → logprob: -7.366229057312012

Token 4: ' import' (ID: 1588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9260192513465881
    2. '    ' → logprob: -1.9260191917419434
    3. ' ' → logprob: -2.1760191917419434
    4. 'print' → logprob: -2.1760191917419434
    5. ' pass' → logprob: -2.8010191917419434
    6. 'pass' → logprob: -3.0510191917419434
    7. '\' → logprob: -3.4260191917419434
    8. 'return' → logprob: -3.5510191917419434
    9. '\n' → logprob: -4.926019191741943
    10. '```' → logprob: -4.926019191741943

Token 5: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.05003143101930618
    2. ' sys' → logprob: -3.3000314235687256
    3. ' ' → logprob: -5.175031661987305
    4. ' math' → logprob: -5.425031661987305
    5. ' numpy' → logprob: -7.300031661987305
    6. ' json' → logprob: -7.550031661987305
    7. ' random' → logprob: -8.925031661987305
    8. ' tensorflow' → logprob: -9.050031661987305
    9. ' pandas' → logprob: -9.675031661987305
    10. ' space' → logprob: -10.050031661987305

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.985052227973938
    2. 'newline' → logprob: -1.735052227973938
    3. '\n' → logprob: -2.1100521087646484
    4. '   ' → logprob: -2.6100521087646484
    5. '<|end|>' → logprob: -3.1100521087646484
    6. '.readline' → logprob: -3.1100521087646484
    7. 'import' → logprob: -3.3600521087646484
    8. '\' → logprob: -3.4850521087646484
    9. 'print' → logprob: -3.8600521087646484
    10. '<|end|>' → logprob: -4.485052108764648

Token 7: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6748591661453247
    2. 'newline' → logprob: -2.299859046936035
    3. '   ' → logprob: -2.424859046936035
    4. '\n' → logprob: -2.674859046936035
    5. '.readline' → logprob: -3.174859046936035
    6. 'import' → logprob: -3.924859046936035
    7. '    
' → logprob: -4.049859046936035
    8. '[' → logprob: -4.174859046936035
    9. '
' → logprob: -4.299859046936035
    10. '<|end|>' → logprob: -4.299859046936035

Token 8: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2897624373435974
    2. '.' → logprob: -2.289762496948242
    3. ' ' → logprob: -3.414762496948242
    4. '    ' → logprob: -3.539762496948242
    5. '[' → logprob: -3.539762496948242
    6. 'print' → logprob: -4.414762496948242
    7. 'import' → logprob: -5.039762496948242
    8. '\' → logprob: -5.414762496948242
    9. '\n' → logprob: -5.414762496948242
    10. '  ' → logprob: -5.414762496948242

Token 9: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2650327682495117
    2. '_size' → logprob: -1.8900327682495117
    3. '_val' → logprob: -3.2650327682495117
    4. '_len' → logprob: -4.140032768249512
    5. '_value' → logprob: -4.890032768249512
    6. '_length' → logprob: -5.015032768249512
    7. '_space' → logprob: -5.640032768249512
    8. '_count' → logprob: -6.015032768249512
    9. ' _' → logprob: -6.265032768249512
    10. '_line' → logprob: -7.140032768249512

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6514307260513306
    2. '_' → logprob: -0.7764307260513306
    3. '=' → logprob: -4.151430606842041
    4. ' ' → logprob: -6.526430606842041
    5. ' _' → logprob: -7.276430606842041
    6. '_=' → logprob: -7.901430606842041
    7. ',' → logprob: -9.1514310836792
    8. '(' → logprob: -9.1514310836792
    9. '   ' → logprob: -10.1514310836792
    10. '_max' → logprob: -10.5264310836792

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1863066554069519
    2. '0' → logprob: -1.8113067150115967
    3. ' None' → logprob: -5.561306476593018
    4. ' float' → logprob: -6.436306476593018
    5. ' -' → logprob: -7.686306476593018
    6. 'None' → logprob: -8.061306953430176
    7. 'float' → logprob: -8.811306953430176
    8. '-' → logprob: -9.311306953430176
    9. '   ' → logprob: -10.686306953430176
    10. ' int' → logprob: -11.061306953430176

Token 12: '36' (ID: 2636)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02184462547302246
    2. ' ' → logprob: -4.396844863891602
    3. '-' → logprob: -4.896844863891602
    4. 'float' → logprob: -7.646844863891602
    5. 'int' → logprob: -8.021844863891602
    6. ' -' → logprob: -8.146844863891602
    7. 'None' → logprob: -8.521844863891602
    8. ' float' → logprob: -9.271844863891602
    9. ' None' → logprob: -9.396844863891602
    10. '   ' → logprob: -9.396844863891602

Token 13: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.237072229385376
    2. '\' → logprob: -1.737072229385376
    3. '_' → logprob: -2.487072229385376
    4. '\n' → logprob: -2.487072229385376
    5. '*' → logprob: -2.612072229385376
    6. '+' → logprob: -2.737072229385376
    7. '```' → logprob: -3.487072229385376
    8. '   ' → logprob: -3.612072229385376
    9. ')' → logprob: -3.612072229385376
    10. '.' → logprob: -3.612072229385376

Token 14: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.321338415145874
    2. '\' → logprob: -1.446338415145874
    3. '\n' → logprob: -1.446338415145874
    4. '   ' → logprob: -3.071338415145874
    5. '_' → logprob: -3.196338415145874
    6. '*' → logprob: -3.446338415145874
    7. '.' → logprob: -3.696338415145874
    8. ',' → logprob: -3.946338415145874
    9. ' ' → logprob: -4.196338653564453
    10. '    
' → logprob: -4.571338653564453

Token 15: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.051823828369379044
    2. 'def' → logprob: -4.926823616027832
    3. '_' → logprob: -5.176823616027832
    4. '  ' → logprob: -5.301823616027832
    5. 'max' → logprob: -5.676823616027832
    6. ' max' → logprob: -5.801823616027832
    7. ' number' → logprob: -5.926823616027832
    8. '36' → logprob: -6.176823616027832
    9. ' possible' → logprob: -6.176823616027832
    10. 'possible' → logprob: -6.176823616027832

Token 16: ' sum' (ID: 4215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.26154768466949463
    2. ' _' → logprob: -2.761547565460205
    3. ' ' → logprob: -2.761547565460205
    4. '<|end|>' → logprob: -4.011547565460205
    5. '_tokens' → logprob: -4.636547565460205
    6. '\' → logprob: -4.886547565460205
    7. '<|end|>' → logprob: -4.886547565460205
    8. ')' → logprob: -5.011547565460205
    9. '_token' → logprob: -5.261547565460205
    10. '_sum' → logprob: -5.261547565460205

Token 17: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1446853131055832
    2. '
' → logprob: -3.1446852684020996
    3. '\' → logprob: -4.1446852684021
    4. '\n' → logprob: -4.2696852684021
    5. ' ' → logprob: -4.5196852684021
    6. ')' → logprob: -4.5196852684021
    7. '    ' → logprob: -5.5196852684021
    8. ':' → logprob: -5.6446852684021
    9. '    
' → logprob: -5.7696852684021
    10. 'def' → logprob: -5.8946852684021

Token 18: ' digits' (ID: 37806)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.7237522602081299
    2. ' ' → logprob: -1.0987522602081299
    3. ' six' → logprob: -3.34875226020813
    4. 'two' → logprob: -3.47375226020813
    5. '6' → logprob: -3.59875226020813
    6. ' four' → logprob: -4.098752021789551
    7. '2' → logprob: -4.598752021789551
    8. ' digits' → logprob: -4.848752021789551
    9. ' a' → logprob: -4.973752021789551
    10. '4' → logprob: -5.098752021789551

Token 19: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7675960063934326
    2. ' =' → logprob: -2.3925960063934326
    3. ' ' → logprob: -2.3925960063934326
    4. '[' → logprob: -2.6425960063934326
    5. '=' → logprob: -3.1425960063934326
    6. '0' → logprob: -3.2675960063934326
    7. '\' → logprob: -3.3925960063934326
    8. 's' → logprob: -4.017596244812012
    9. ':' → logprob: -4.142596244812012
    10. ')' → logprob: -4.392596244812012

Token 20: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0215697288513184
    2. '=' → logprob: -1.5215697288513184
    3. '0' → logprob: -2.2715697288513184
    4. ' from' → logprob: -2.3965697288513184
    5. 'from' → logprob: -3.1465697288513184
    6. ' in' → logprob: -3.3965697288513184
    7. '_' → logprob: -3.5215697288513184
    8. ' =' → logprob: -3.6465697288513184
    9. '[' → logprob: -3.7715697288513184
    10. '9' → logprob: -4.396569728851318

Token 21: '..' (ID: 485)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5407915711402893
    2. ' to' → logprob: -1.0407915115356445
    3. 'to' → logprob: -3.2907915115356445
    4. ' through' → logprob: -3.9157915115356445
    5. ' ' → logprob: -5.6657915115356445
    6. ' -' → logprob: -6.2907915115356445
    7. '..' → logprob: -7.4157915115356445
    8. '–' → logprob: -7.7907915115356445
    9. 'through' → logprob: -7.9157915115356445
    10. ',' → logprob: -8.665791511535645

Token 22: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.1006825789809227
    2. ' ' → logprob: -2.350682497024536
    3. '4' → logprob: -9.475682258605957
    4. 'to' → logprob: -9.725682258605957
    5. '1' → logprob: -9.975682258605957
    6. ' to' → logprob: -9.975682258605957
    7. '3' → logprob: -10.600682258605957
    8. '0' → logprob: -10.600682258605957
    9. '...' → logprob: -10.725682258605957
    10. ',' → logprob: -10.975682258605957

Token 23: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0409626960754395
    2. '
' → logprob: -1.2909626960754395
    3. '```' → logprob: -2.6659626960754395
    4. '0' → logprob: -2.7909626960754395
    5. '\n' → logprob: -3.0409626960754395
    6. ',' → logprob: -3.1659626960754395
    7. ' ' → logprob: -3.2909626960754395
    8. '\' → logprob: -4.0409626960754395
    9. '    
' → logprob: -4.6659626960754395
    10. '9' → logprob: -4.9159626960754395

Token 24: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.12729164958000183
    2. '3' → logprob: -3.627291679382324
    3. '4' → logprob: -3.752291679382324
    4. ' ' → logprob: -4.002291679382324
    5. '*' → logprob: -4.127291679382324
    6. '10' → logprob: -4.877291679382324
    7. '6' → logprob: -5.252291679382324
    8. '0' → logprob: -5.877291679382324
    9. '2' → logprob: -6.127291679382324
    10. '36' → logprob: -6.127291679382324

Token 25: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0003289096348453313
    2. ' ' → logprob: -8.25032901763916
    3. '9' → logprob: -10.87532901763916
    4. '8' → logprob: -11.37532901763916
    5. '5' → logprob: -11.37532901763916
    6. '6' → logprob: -11.62532901763916
    7. '```' → logprob: -12.00032901763916
    8. '3' → logprob: -13.00032901763916
    9. '2' → logprob: -13.12532901763916
    10. '10' → logprob: -13.62532901763916

Token 26: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8593713045120239
    2. '
' → logprob: -1.359371304512024
    3. '    
' → logprob: -1.859371304512024
    4. ' 
' → logprob: -3.3593711853027344
    5. '```' → logprob: -3.4843711853027344
    6. '  
' → logprob: -4.234371185302734
    7. '   
' → logprob: -4.234371185302734
    8. '\n' → logprob: -4.234371185302734
    9. '    ' → logprob: -4.609371185302734
    10. '<|end|>' → logprob: -4.734371185302734

Token 27: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1257074773311615
    2. '36' → logprob: -2.3757073879241943
    3. '9' → logprob: -5.000707626342773
    4. '3' → logprob: -5.500707626342773
    5. '  ' → logprob: -5.625707626342773
    6. '4' → logprob: -6.000707626342773
    7. '10' → logprob: -6.250707626342773
    8. '   ' → logprob: -6.625707626342773
    9. '40' → logprob: -6.875707626342773
    10. '1' → logprob: -6.875707626342773

Token 28: '36' (ID: 2636)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6732445955276489
    2. '36' → logprob: -0.9232445955276489
    3. '3' → logprob: -2.5482444763183594
    4. '9' → logprob: -4.798244476318359
    5. '  ' → logprob: -5.548244476318359
    6. '   ' → logprob: -6.923244476318359
    7. '4' → logprob: -8.17324447631836
    8. '```' → logprob: -8.67324447631836
    9. '39' → logprob: -9.29824447631836
    10. '35' → logprob: -9.73574447631836

Token 29: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6265798807144165
    2. '   ' → logprob: -1.2515798807144165
    3. '    
' → logprob: -2.251579761505127
    4. ' 
' → logprob: -3.376579761505127
    5. '   
' → logprob: -5.126579761505127
    6. '```' → logprob: -5.126579761505127
    7. '  
' → logprob: -5.501579761505127
    8. ' ' → logprob: -5.626579761505127
    9. '\n' → logprob: -5.751579761505127
    10. 'n' → logprob: -5.751579761505127

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6035890579223633
    2. '
' → logprob: -1.1035890579223633
    3. '    
' → logprob: -2.7285890579223633
    4. '\n' → logprob: -3.7285890579223633
    5. ' 
' → logprob: -4.728589057922363
    6. '  
' → logprob: -5.103589057922363
    7. '   
' → logprob: -5.353589057922363
    8. ' ' → logprob: -5.978589057922363
    9. '' → logprob: -6.603589057922363
    10. '```' → logprob: -6.603589057922363

Token 31: ' dp' (ID: 21546)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1405140459537506
    2. '   ' → logprob: -2.5155141353607178
    3. '\n' → logprob: -4.640513896942139
    4. '4' → logprob: -4.765513896942139
    5. '```' → logprob: -4.890513896942139
    6. 'n' → logprob: -5.390513896942139
    7. '    
' → logprob: -5.640513896942139
    8. ' ' → logprob: -6.015513896942139
    9. '
' → logprob: -6.390513896942139
    10. '0' → logprob: -6.640513896942139

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008643409237265587
    2. '=' → logprob: -5.008643627166748
    3. '[' → logprob: -6.633643627166748
    4. ' ' → logprob: -7.508643627166748
    5. '_' → logprob: -10.25864315032959
    6. ' =[' → logprob: -11.25864315032959
    7. '=[' → logprob: -12.63364315032959
    8. '  ' → logprob: -12.63364315032959
    9. ',' → logprob: -13.75864315032959
    10. '   ' → logprob: -13.88364315032959

Token 33: ' [[' (ID: 9237)
  Prédit: ' [['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.5353620052337646
    2. ' [' → logprob: -1.0353620052337646
    3. ' [{}' → logprob: -3.9103620052337646
    4. '[[' → logprob: -4.160362243652344
    5. ' [[[' → logprob: -4.160362243652344
    6. '[' → logprob: -4.910362243652344
    7. ' {}' → logprob: -8.035362243652344
    8. ' [{' → logprob: -8.410362243652344
    9. '[{' → logprob: -9.160362243652344
    10. ' [[]' → logprob: -9.535362243652344

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007738177664577961
    2. '-' → logprob: -5.63273811340332
    3. 'False' → logprob: -5.63273811340332
    4. '[' → logprob: -8.50773811340332
    5. ' ' → logprob: -8.88273811340332
    6. 'float' → logprob: -9.00773811340332
    7. ' False' → logprob: -11.38273811340332
    8. ' [' → logprob: -11.50773811340332
    9. '(' → logprob: -11.75773811340332
    10. ' -' → logprob: -11.75773811340332

Token 35: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11229322105646133
    2. ']' → logprob: -2.362293243408203
    3. ' ]' → logprob: -4.862293243408203
    4. ']*' → logprob: -6.112293243408203
    5. 'for' → logprob: -6.487293243408203
    6. ']*(' → logprob: -7.862293243408203
    7. ' ' → logprob: -9.112293243408203
    8. '   ' → logprob: -10.737293243408203
    9. '    ' → logprob: -12.362293243408203
    10. ')' → logprob: -12.487293243408203

Token 36: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3479878008365631
    2. '(max' → logprob: -1.4729877710342407
    3. '37' → logprob: -2.8479878902435303
    4. ' (' → logprob: -5.222987651824951
    5. '(m' → logprob: -7.597987651824951
    6. ' ' → logprob: -8.22298812866211
    7. 'max' → logprob: -8.84798812866211
    8. '41' → logprob: -10.47298812866211
    9. '(min' → logprob: -10.59798812866211
    10. '(n' → logprob: -10.72298812866211

Token 37: 'max' (ID: 3228)
  Prédit: '37'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '37' → logprob: -0.6501324772834778
    2. 'max' → logprob: -0.7751324772834778
    3. ' max' → logprob: -4.775132656097412
    4. '(max' → logprob: -5.150132656097412
    5. ' ' → logprob: -6.650132656097412
    6. '(' → logprob: -7.275132656097412
    7. '38' → logprob: -8.650132179260254
    8. '4' → logprob: -9.150132179260254
    9. '41' → logprob: -9.275132179260254
    10. ' (' → logprob: -9.525132179260254

Token 38: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00015753143816255033
    2. '_s' → logprob: -9.125157356262207
    3. '_' → logprob: -10.625157356262207
    4. '+' → logprob: -11.500157356262207
    5. ' _' → logprob: -11.625157356262207
    6. 'sum' → logprob: -13.250157356262207
    7. '_max' → logprob: -13.500157356262207
    8. '_plus' → logprob: -15.250157356262207
    9. '_value' → logprob: -15.750157356262207
    10. ' ' → logprob: -16.000158309936523

Token 39: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16022585332393646
    2. ' +' → logprob: -1.9102258682250977
    3. ' ' → logprob: -14.160225868225098
    4. '```' → logprob: -15.535225868225098
    5. '1' → logprob: -15.785225868225098
    6. ')' → logprob: -16.16022491455078
    7. '＋' → logprob: -16.28522491455078
    8. '+
' → logprob: -16.41022491455078
    9. ' +
' → logprob: -16.66022491455078
    10. '4' → logprob: -17.03522491455078

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007213685312308371
    2. ' ' → logprob: -7.250721454620361
    3. '2' → logprob: -12.375720977783203
    4. '   ' → logprob: -13.625720977783203
    5. '```' → logprob: -13.625720977783203
    6. '7' → logprob: -14.750720977783203
    7. '41' → logprob: -14.750720977783203
    8. '5' → logprob: -14.938220977783203
    9. '10' → logprob: -15.313220977783203
    10. ')' → logprob: -15.375720977783203

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012788071762770414
    2. ' )' → logprob: -7.251278877258301
    3. ' for' → logprob: -8.1262788772583
    4. ')]' → logprob: -8.6262788772583
    5. ']' → logprob: -10.1262788772583
    6. '   ' → logprob: -10.5012788772583
    7. 'for' → logprob: -11.1262788772583
    8. ' ' → logprob: -12.6262788772583
    9. ' ]' → logprob: -13.3762788772583
    10. '),' → logprob: -13.8762788772583

Token 42: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011332036927342415
    2. 'for' → logprob: -4.511332035064697
    3. '   ' → logprob: -8.386332511901855
    4. ' ' → logprob: -10.886332511901855
    5. '    ' → logprob: -11.011332511901855
    6. ')' → logprob: -12.011332511901855
    7. ']' → logprob: -12.261332511901855
    8. '	for' → logprob: -12.886332511901855
    9. '  ' → logprob: -13.261332511901855
    10. '[' → logprob: -13.761332511901855

Token 43: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.632943332195282
    2. ' _' → logprob: -1.2579433917999268
    3. '_' → logprob: -1.7579433917999268
    4. ' ' → logprob: -5.132943153381348
    5. '_range' → logprob: -5.882943153381348
    6. '<|end|>' → logprob: -6.632943153381348
    7. 'range' → logprob: -7.007943153381348
    8. ' i' → logprob: -7.257943153381348
    9. '<|end|>' → logprob: -8.257943153381348
    10. '(range' → logprob: -8.632943153381348

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0023701780010014772
    2. 'in' → logprob: -6.377370357513428
    3. ' ' → logprob: -7.627370357513428
    4. 'range' → logprob: -9.50236988067627
    5. ' _' → logprob: -9.75236988067627
    6. '  ' → logprob: -11.37736988067627
    7. ' range' → logprob: -11.50236988067627
    8. '_' → logprob: -12.00236988067627
    9. ')' → logprob: -12.37736988067627
    10. 's' → logprob: -12.50236988067627

Token 45: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5232727527618408
    2. 'range' → logprob: -0.8982727527618408
    3. ' ' → logprob: -9.273272514343262
    4. '[' → logprob: -10.648272514343262
    5. '_' → logprob: -11.398272514343262
    6. '	range' → logprob: -11.898272514343262
    7. '_range' → logprob: -12.648272514343262
    8. '  ' → logprob: -13.023272514343262
    9. '```' → logprob: -13.523272514343262
    10. '(range' → logprob: -13.523272514343262

Token 46: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012088033836334944
    2. ' (' → logprob: -7.126208782196045
    3. '4' → logprob: -8.001209259033203
    4. ' ' → logprob: -10.251209259033203
    5. '   ' → logprob: -11.001209259033203
    6. '5' → logprob: -12.126209259033203
    7. ')' → logprob: -13.251209259033203
    8. '8' → logprob: -13.376209259033203
    9. '    ' → logprob: -13.376209259033203
    10. '9' → logprob: -13.501209259033203

Token 47: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.3507801294326782
    2. '5' → logprob: -1.2257801294326782
    3. ' ' → logprob: -6.850780010223389
    4. '10' → logprob: -7.475780010223389
    5. '9' → logprob: -8.725780487060547
    6. '16' → logprob: -8.725780487060547
    7. '100' → logprob: -9.600780487060547
    8. '8' → logprob: -9.600780487060547
    9. '7' → logprob: -10.163280487060547
    10. '6' → logprob: -10.600780487060547

Token 48: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.468279752880335e-05
    2. ']' → logprob: -10.500064849853516
    3. ')' → logprob: -10.750064849853516
    4. '   ' → logprob: -11.625064849853516
    5. '])]' → logprob: -13.250064849853516
    6. ')])' → logprob: -13.375064849853516
    7. ' )' → logprob: -14.000064849853516
    8. ')][' → logprob: -14.125064849853516
    9. ' ]' → logprob: -14.625064849853516
    10. ')],' → logprob: -15.125064849853516

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2879384160041809
    2. 'dp' → logprob: -1.4129383563995361
    3. ' dp' → logprob: -6.037938594818115
    4. '
' → logprob: -6.412938594818115
    5. '    
' → logprob: -7.037938594818115
    6. '	dp' → logprob: -7.662938594818115
    7. '```' → logprob: -8.037938117980957
    8. 'for' → logprob: -8.537938117980957
    9. ' for' → logprob: -8.537938117980957
    10. '(dp' → logprob: -8.662938117980957

Token 50: ' dp' (ID: 21546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31985846161842346
    2. 'dp' (adapté à ' dp') → logprob: -1.319858431816101
    3. 'for' → logprob: -6.069858551025391
    4. ' for' → logprob: -6.694858551025391
    5. ' dp' → logprob: -7.069858551025391
    6. '    
' → logprob: -7.194858551025391
    7. ' ' → logprob: -8.56985855102539
    8. '	dp' → logprob: -8.56985855102539
    9. '```' → logprob: -8.81985855102539
    10. '\' → logprob: -8.81985855102539

Token 51: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010330478107789531
    2. '\[' → logprob: -9.750102996826172
    3. '<|end|>' → logprob: -10.750102996826172
    4. '```' → logprob: -12.000102996826172
    5. '[
' → logprob: -12.125102996826172
    6. '[-' → logprob: -12.375102996826172
    7. '[user' → logprob: -13.500102996826172
    8. ']' → logprob: -13.750102996826172
    9. '[end' → logprob: -14.250102996826172
    10. '[len' → logprob: -14.625102996826172

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '1' → logprob: -15.875000953674316
    4. '4' → logprob: -16.0
    5. '3' → logprob: -17.375
    6. '۰' → logprob: -17.75
    7. '[' → logprob: -17.75
    8. '```' → logprob: -18.5
    9. '<|end|>' → logprob: -18.75
    10. ')' → logprob: -19.125

Token 53: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10495784133672714
    2. '[' → logprob: -2.3549578189849854
    3. ']' → logprob: -5.3549580574035645
    4. ' ][' → logprob: -11.729957580566406
    5. '0' → logprob: -12.854957580566406
    6. ' [' → logprob: -13.854957580566406
    7. '"][' → logprob: -14.229957580566406
    8. '```' → logprob: -14.229957580566406
    9. '\[' → logprob: -14.979957580566406
    10. '   ' → logprob: -15.104957580566406

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -18.250001907348633
    4. '   ' → logprob: -20.250001907348633
    5. '０' → logprob: -20.375001907348633
    6. '000' → logprob: -20.562501907348633
    7. '00' → logprob: -20.750001907348633
    8. '٠' → logprob: -20.750001907348633
    9. '०' → logprob: -20.875001907348633
    10. '  ' → logprob: -20.937501907348633

Token 55: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002895571291446686
    2. ' ]' → logprob: -5.877895355224609
    3. ']=' → logprob: -9.62789535522461
    4. '=' → logprob: -11.25289535522461
    5. ']+=' → logprob: -11.62789535522461
    6. ' =' → logprob: -12.87789535522461
    7. '`]' → logprob: -15.75289535522461
    8. ']==' → logprob: -16.37789535522461
    9. ')' → logprob: -16.75289535522461
    10. '']' → logprob: -17.50289535522461

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014521211385727
    2. '=' → logprob: -1.7014521360397339
    3. ' +=' → logprob: -10.451452255249023
    4. ' ' → logprob: -12.076452255249023
    5. '+=' → logprob: -13.701452255249023
    6. ' |=' → logprob: -13.951452255249023
    7. ' ' → logprob: -14.076452255249023
    8. '<|end|>' → logprob: -14.076452255249023
    9. '=True' → logprob: -15.201452255249023
    10. ' =)' → logprob: -16.201452255249023

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.625001907348633
    4. '۱' → logprob: -19.250001907348633
    5. '```' → logprob: -19.500001907348633
    6. '  ' → logprob: -19.625001907348633
    7. '0' → logprob: -19.750001907348633
    8. '১' → logprob: -19.937501907348633
    9. ' ' → logprob: -20.000001907348633
    10. '１' → logprob: -20.187501907348633

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '۱' → logprob: -20.75
    4. '১' → logprob: -21.375
    5. '１' → logprob: -21.625
    6. '   ' → logprob: -21.875
    7. '१' → logprob: -22.0
    8. '```' → logprob: -22.25
    9. '{' → logprob: -22.8125
    10. '  ' → logprob: -22.875

Token 59: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47787418961524963
    2. '
' → logprob: -1.2278741598129272
    3. '<|end|>' → logprob: -3.477874279022217
    4. '    
' → logprob: -3.727874279022217
    5. '\n' → logprob: -4.102874279022217
    6. '' → logprob: -5.227874279022217
    7. '\' → logprob: -6.102874279022217
    8. '  
' → logprob: -6.352874279022217
    9. 'newline' → logprob: -6.352874279022217
    10. ' 
' → logprob: -7.227874279022217

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5115741491317749
    2. '\' → logprob: -2.2615742683410645
    3. '\n' → logprob: -2.3865742683410645
    4. ' 
' → logprob: -2.6365742683410645
    5. ' for' → logprob: -3.1365742683410645
    6. ' \' → logprob: -3.7615742683410645
    7. '```' → logprob: -4.2615742683410645
    8. '
' → logprob: -4.5115742683410645
    9. ' ' → logprob: -4.6365742683410645
    10. '    
' → logprob: -4.8865742683410645

Token 61: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1071975901722908
    2. '\n' → logprob: -2.6071975231170654
    3. ' for' → logprob: -4.6071977615356445
    4. '
' → logprob: -4.9821977615356445
    5. '\' → logprob: -5.8571977615356445
    6. '<|end|>' → logprob: -5.8571977615356445
    7. '    
' → logprob: -6.8571977615356445
    8. ' ' → logprob: -7.2321977615356445
    9. '\t' → logprob: -7.4821977615356445
    10. '    ' → logprob: -7.6071977615356445

Token 62: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.26980623602867126
    2. ' _' → logprob: -1.8948062658309937
    3. ' d' → logprob: -2.769806146621704
    4. ' ' → logprob: -4.144806385040283
    5. '_' → logprob: -5.269806385040283
    6. ' digit' → logprob: -6.519806385040283
    7. ' s' → logprob: -7.894806385040283
    8. 'i' → logprob: -8.269805908203125
    9. 'd' → logprob: -9.769805908203125
    10. ' n' → logprob: -10.019805908203125

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01120060682296753
    2. 'in' → logprob: -4.511200428009033
    3. ' ' → logprob: -9.011200904846191
    4. '	in' → logprob: -11.136200904846191
    5. '  ' → logprob: -12.511200904846191
    6. ' i' → logprob: -12.511200904846191
    7. '<|end|>' → logprob: -13.511200904846191
    8. '+' → logprob: -13.511200904846191
    9. '1' → logprob: -13.886200904846191
    10. ',' → logprob: -14.511200904846191

Token 64: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018221233040094376
    2. 'range' → logprob: -4.018221378326416
    3. ' ' → logprob: -9.643220901489258
    4. '	range' → logprob: -13.268220901489258
    5. '   ' → logprob: -13.393220901489258
    6. '  ' → logprob: -13.518220901489258
    7. ' xrange' → logprob: -14.768220901489258
    8. ' ' → logprob: -14.893220901489258
    9. '[' → logprob: -14.893220901489258
    10. '(range' → logprob: -15.768220901489258

Token 65: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3663626305060461e-05
    2. '1' → logprob: -11.75001335144043
    3. '4' → logprob: -12.75001335144043
    4. ' (' → logprob: -13.12501335144043
    5. ' ' → logprob: -14.37501335144043
    6. '(
' → logprob: -15.87501335144043
    7. '<|end|>' → logprob: -16.37501335144043
    8. '```' → logprob: -17.87501335144043
    9. '   ' → logprob: -18.00001335144043
    10. '5' → logprob: -18.25001335144043

Token 66: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0836937427520752
    2. '1' → logprob: -2.583693742752075
    3. ' ' → logprob: -5.458693504333496
    4. '5' → logprob: -8.333693504333496
    5. '10' → logprob: -8.333693504333496
    6. '0' → logprob: -10.333693504333496
    7. '9' → logprob: -11.333693504333496
    8. '   ' → logprob: -12.458693504333496
    9. ')' → logprob: -13.083693504333496
    10. ' )' → logprob: -14.896193504333496

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5222670435905457
    2. ' ,' → logprob: -1.0222671031951904
    3. ' ' → logprob: -3.2722671031951904
    4. '4' → logprob: -5.147266864776611
    5. '5' → logprob: -6.522266864776611
    6. '6' → logprob: -7.772266864776611
    7. ')' → logprob: -7.897266864776611
    8. ' )' → logprob: -8.27226734161377
    9. '10' → logprob: -8.64726734161377
    10. '7' → logprob: -8.64726734161377

Token 68: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.12693126499652863
    2. ' ' → logprob: -2.1269311904907227
    3. '10' → logprob: -13.876931190490723
    4. '```' → logprob: -14.126931190490723
    5. '    ' → logprob: -14.876931190490723
    6. '   ' → logprob: -15.251931190490723
    7. '  ' → logprob: -15.251931190490723
    8. ')' → logprob: -15.376931190490723
    9. '4' → logprob: -15.876931190490723
    10. ' five' → logprob: -15.939431190490723

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002690840628929436
    2. ':' → logprob: -8.875268936157227
    3. '):
' → logprob: -9.000268936157227
    4. ')' → logprob: -12.250268936157227
    5. ' ):' → logprob: -14.375268936157227
    6. '):
' → logprob: -16.375268936157227
    7. '}:' → logprob: -16.375268936157227
    8. '+' → logprob: -16.500268936157227
    9. '>:' → logprob: -16.625268936157227
    10. '   ' → logprob: -16.625268936157227

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0053605143912136555
    2. '<|end|>' → logprob: -6.1303606033325195
    3. '   ' → logprob: -6.2553606033325195
    4. ' for' → logprob: -8.00536060333252
    5. ':' → logprob: -8.13036060333252
    6. '    ' → logprob: -8.50536060333252
    7. ' ' → logprob: -9.13036060333252
    8. ',' → logprob: -9.50536060333252
    9. '     ' → logprob: -10.25536060333252
    10. ':
' → logprob: -10.25536060333252

Token 71: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005578318145126104
    2. 'for' (adapté à ' for') → logprob: -5.255578517913818
    3. '   ' → logprob: -8.13057804107666
    4. '       ' → logprob: -10.00557804107666
    5. '    ' → logprob: -13.00557804107666
    6. '	for' → logprob: -13.25557804107666
    7. ' ' → logprob: -14.13057804107666
    8. '  ' → logprob: -16.255578994750977
    9. ' ' → logprob: -16.380578994750977
    10. '     ' → logprob: -18.005578994750977

Token 72: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.015979239717125893
    2. 's' → logprob: -4.515979290008545
    3. ' sum' → logprob: -5.765979290008545
    4. ' j' → logprob: -6.890979290008545
    5. 'sum' → logprob: -8.765978813171387
    6. 'j' → logprob: -9.515978813171387
    7. ' suma' → logprob: -9.640978813171387
    8. ' digit' → logprob: -9.765978813171387
    9. ' ' → logprob: -9.890978813171387
    10. '   ' → logprob: -9.890978813171387

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006148627726361156
    2. 'in' → logprob: -7.500614643096924
    3. ' ' → logprob: -9.875615119934082
    4. '<|end|>' → logprob: -13.000615119934082
    5. ' =' → logprob: -13.625615119934082
    6. 'n' → logprob: -13.875615119934082
    7. ' i' → logprob: -13.875615119934082
    8. '+' → logprob: -14.125615119934082
    9. '=' → logprob: -14.250615119934082
    10. '	in' → logprob: -14.500615119934082

Token 74: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0009145628428086638
    2. 'range' → logprob: -7.000914573669434
    3. ' ' → logprob: -13.375914573669434
    4. '	range' → logprob: -14.125914573669434
    5. '(range' → logprob: -14.625914573669434
    6. ' xrange' → logprob: -15.500914573669434
    7. '_range' → logprob: -17.750913619995117
    8. '0' → logprob: -17.750913619995117
    9. ' ran' → logprob: -18.125913619995117
    10. ' r' → logprob: -18.375913619995117

Token 75: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.04861053079366684
    2. '(' → logprob: -3.0486104488372803
    3. ' (' → logprob: -11.42361068725586
    4. '(min' → logprob: -11.92361068725586
    5. '(m' → logprob: -12.92361068725586
    6. '((' → logprob: -13.92361068725586
    7. '(
' → logprob: -14.79861068725586
    8. '(s' → logprob: -14.79861068725586
    9. ' max' → logprob: -15.29861068725586
    10. 'max' → logprob: -15.42361068725586

Token 76: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0001182052365038544
    2. '_s' → logprob: -9.875118255615234
    3. '_' → logprob: -10.000118255615234
    4. '+' → logprob: -11.875118255615234
    5. ')' → logprob: -12.250118255615234
    6. '(' → logprob: -12.875118255615234
    7. 'sum' → logprob: -13.125118255615234
    8. '(sum' → logprob: -13.250118255615234
    9. '_max' → logprob: -14.875118255615234
    10. '_SUM' → logprob: -15.000118255615234

Token 77: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05489503592252731
    2. ' +' → logprob: -2.9298949241638184
    3. ' -' → logprob: -11.554895401000977
    4. '-' → logprob: -13.179895401000977
    5. '()+' → logprob: -14.429895401000977
    6. '   ' → logprob: -15.179895401000977
    7. ' ' → logprob: -16.054895401000977
    8. '+
' → logprob: -16.304895401000977
    9. ')+' → logprob: -16.429895401000977
    10. '＋' → logprob: -17.054895401000977

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.955703818472102e-05
    2. ' ' → logprob: -9.750059127807617
    3. ')' → logprob: -14.687559127807617
    4. '```' → logprob: -16.187559127807617
    5. '-' → logprob: -16.687559127807617
    6. '   ' → logprob: -16.750059127807617
    7. '2' → logprob: -17.062559127807617
    8. '<|end|>' → logprob: -17.125059127807617
    9. ',' → logprob: -17.500059127807617
    10. '=' → logprob: -17.625059127807617

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011138836853206158
    2. '+' → logprob: -4.636138916015625
    3. '):
' → logprob: -6.761138916015625
    4. ' ):' → logprob: -9.136138916015625
    5. ':' → logprob: -9.261138916015625
    6. '   ' → logprob: -11.761138916015625
    7. ' +' → logprob: -12.011138916015625
    8. ')' → logprob: -12.636138916015625
    9. '+:' → logprob: -13.636138916015625
    10. '):
' → logprob: -14.136138916015625

Token 80: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012911896919831634
    2. ' for' → logprob: -7.126291275024414
    3. '<|end|>' → logprob: -8.251291275024414
    4. '       ' → logprob: -9.626291275024414
    5. '	       ' → logprob: -10.126291275024414
    6. '        ' → logprob: -10.501291275024414
    7. ',' → logprob: -11.251291275024414
    8. '          ' → logprob: -11.251291275024414
    9. '            ' → logprob: -11.251291275024414
    10. '<|end|>' → logprob: -11.751291275024414

Token 81: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16614976525306702
    2. 'for' (adapté à ' for') → logprob: -1.9161497354507446
    3. '               ' → logprob: -5.166149616241455
    4. '           ' → logprob: -8.666150093078613
    5. ' dp' → logprob: -11.541150093078613
    6. '	for' → logprob: -11.916150093078613
    7. 'dp' → logprob: -12.416150093078613
    8. '   ' → logprob: -13.166150093078613
    9. '             ' → logprob: -13.541150093078613
    10. '```' → logprob: -13.916150093078613

Token 82: ' digit' (ID: 19181)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.023246407508850098
    2. 'd' → logprob: -3.8982462882995605
    3. ' digit' → logprob: -6.0232462882995605
    4. 'digit' → logprob: -8.648246765136719
    5. '	d' → logprob: -10.273246765136719
    6. '   ' → logprob: -11.148246765136719
    7. '```' → logprob: -11.398246765136719
    8. ' ' → logprob: -11.398246765136719
    9. ' dig' → logprob: -11.898246765136719
    10. ' k' → logprob: -12.023246765136719

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015516405692324042
    2. 'in' → logprob: -6.501551628112793
    3. ' ' → logprob: -10.251551628112793
    4. '<|end|>' → logprob: -12.251551628112793
    5. '	in' → logprob: -12.501551628112793
    6. 's' → logprob: -13.251551628112793
    7. ' ' → logprob: -14.126551628112793
    8. '_' → logprob: -15.126551628112793
    9. '<|end|>' → logprob: -15.126551628112793
    10. 'space' → logprob: -15.251551628112793

Token 84: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00020461321400944144
    2. 'range' → logprob: -8.750205039978027
    3. ' ' → logprob: -10.000205039978027
    4. '0' → logprob: -15.125205039978027
    5. '	range' → logprob: -15.250205039978027
    6. ' xrange' → logprob: -16.25020408630371
    7. '(range' → logprob: -16.62520408630371
    8. '   ' → logprob: -17.75020408630371
    9. '10' → logprob: -18.00020408630371
    10. '[' → logprob: -18.37520408630371

Token 85: '(' (ID: 7)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03864987939596176
    2. '(' → logprob: -3.288649797439575
    3. '0' → logprob: -7.413650035858154
    4. ' ' → logprob: -12.538649559020996
    5. '{' → logprob: -13.663649559020996
    6. ':' → logprob: -16.163650512695312
    7. '=' → logprob: -16.288650512695312
    8. '1' → logprob: -16.288650512695312
    9. '[' → logprob: -16.413650512695312
    10. '```' → logprob: -16.663650512695312

Token 86: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.000297685619443655
    2. '0' → logprob: -8.125297546386719
    3. '1' → logprob: -13.750297546386719
    4. ' ' → logprob: -14.750297546386719
    5. ')' → logprob: -15.750297546386719
    6. '9' → logprob: -18.12529754638672
    7. '{' → logprob: -18.62529754638672
    8. '```' → logprob: -19.25029754638672
    9. '۱۰' → logprob: -19.37529754638672
    10. '100' → logprob: -19.62529754638672

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0392611026763916
    2. '):
' → logprob: -3.4142611026763916
    3. ':' → logprob: -5.7892608642578125
    4. '+' → logprob: -6.7892608642578125
    5. ' ):' → logprob: -6.7892608642578125
    6. ')' → logprob: -9.164260864257812
    7. ' ):
' → logprob: -9.914260864257812
    8. '):
' → logprob: -10.289260864257812
    9. '           ' → logprob: -10.289260864257812
    10. '       ' → logprob: -10.914260864257812

Token 88: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15519219636917114
    2. '<|end|>' → logprob: -2.0301921367645264
    3. '           ' → logprob: -5.7801923751831055
    4. ':' → logprob: -6.2801923751831055
    5. ' ' → logprob: -6.6551923751831055
    6. '<|end|>' → logprob: -6.9051923751831055
    7. ' if' → logprob: -7.2801923751831055
    8. '       ' → logprob: -7.4051923751831055
    9. '                               ' → logprob: -7.4051923751831055
    10. '            ' → logprob: -7.5301923751831055

Token 89: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45284101366996765
    2. '                   ' → logprob: -1.32784104347229
    3. ' ' → logprob: -2.95284104347229
    4. '               ' → logprob: -4.202840805053711
    5. '                       ' → logprob: -4.202840805053711
    6. 'if' (adapté à ' if') → logprob: -4.952840805053711
    7. ' 
' → logprob: -6.077840805053711
    8. '                    ' → logprob: -6.577840805053711
    9. '<|end|>' → logprob: -6.577840805053711
    10. '                ' → logprob: -6.702840805053711

Token 90: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03385799750685692
    2. 's' → logprob: -3.408858060836792
    3. ' digit' → logprob: -8.658858299255371
    4. ' ' → logprob: -10.908858299255371
    5. 'digit' → logprob: -11.658858299255371
    6. '                   ' → logprob: -12.658858299255371
    7. '   ' → logprob: -13.658858299255371
    8. '(s' → logprob: -13.908858299255371
    9. '    ' → logprob: -14.033858299255371
    10. '	s' → logprob: -14.158858299255371

Token 91: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5157877206802368
    2. ' -' → logprob: -1.7657877206802368
    3. ' >=' → logprob: -1.8907877206802368
    4. '>=' → logprob: -2.5157876014709473
    5. '+' → logprob: -9.765788078308105
    6. ' ' → logprob: -10.140788078308105
    7. '-digit' → logprob: -11.015788078308105
    8. ']>=' → logprob: -11.140788078308105
    9. ')>=' → logprob: -11.640788078308105
    10. '<|end|>' → logprob: -12.015788078308105

Token 92: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.10022047162055969
    2. ' digit' → logprob: -2.3502204418182373
    3. 'd' → logprob: -12.100220680236816
    4. '-digit' → logprob: -12.350220680236816
    5. '_digit' → logprob: -12.975220680236816
    6. ' ' → logprob: -14.350220680236816
    7. 'digits' → logprob: -15.225220680236816
    8. '   ' → logprob: -15.350220680236816
    9. '	d' → logprob: -15.350220680236816
    10. 'Digit' → logprob: -16.4752197265625

Token 93: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.22553126513957977
    2. '>=' → logprob: -1.6005312204360962
    3. ']>=' → logprob: -9.600531578063965
    4. ' ' → logprob: -10.600531578063965
    5. ')>=' → logprob: -10.725531578063965
    6. ')' → logprob: -13.475531578063965
    7. '>' → logprob: -14.225531578063965
    8. '[' → logprob: -14.600531578063965
    9. '0' → logprob: -14.850531578063965
    10. '	' → logprob: -15.350531578063965

Token 94: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014163747429847717
    2. ' ' → logprob: -4.264163970947266
    3. '۰' → logprob: -16.514163970947266
    4. '   ' → logprob: -16.889163970947266
    5. ' ' → logprob: -17.139163970947266
    6. '  ' → logprob: -17.514163970947266
    7. '           ' → logprob: -17.764163970947266
    8. '```' → logprob: -18.014163970947266
    9. '00' → logprob: -18.389163970947266
    10. '０' → logprob: -18.639163970947266

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '۰' → logprob: -18.125011444091797
    4. '   ' → logprob: -19.625011444091797
    5. '０' → logprob: -19.750011444091797
    6. '  ' → logprob: -20.250011444091797
    7. '000' → logprob: -20.375011444091797
    8. '00' → logprob: -20.500011444091797
    9. '```' → logprob: -20.625011444091797
    10. '০' → logprob: -21.000011444091797

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6049247980117798
    2. ':
' → logprob: -0.8549247980117798
    3. ' and' → logprob: -3.9799246788024902
    4. '                   ' → logprob: -4.85492467880249
    5. '               ' → logprob: -6.97992467880249
    6. '                       ' → logprob: -7.35492467880249
    7. 'and' → logprob: -8.479925155639648
    8. ':

' → logprob: -9.354925155639648
    9. '<|end|>' → logprob: -9.854925155639648
    10. '):
' → logprob: -10.354925155639648

Token 97: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0010260201524943113
    2. '                       ' → logprob: -7.626026153564453
    3. '<|end|>' → logprob: -9.001026153564453
    4. ':' → logprob: -9.126026153564453
    5. '                    
' → logprob: -9.251026153564453
    6. '               ' → logprob: -9.751026153564453
    7. '                    ' → logprob: -10.751026153564453
    8. '                           ' → logprob: -10.751026153564453
    9. '                  ' → logprob: -11.001026153564453
    10. ',' → logprob: -11.376026153564453

Token 98: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3921702206134796
    2. 'dp' (adapté à ' dp') → logprob: -1.1421701908111572
    3. '                       ' → logprob: -5.267170429229736
    4. '	dp' → logprob: -10.142169952392578
    5. '                   ' → logprob: -10.267169952392578
    6. '(dp' → logprob: -10.767169952392578
    7. '                    ' → logprob: -11.517169952392578
    8. ' ' → logprob: -12.017169952392578
    9. '                        ' → logprob: -12.767169952392578
    10. '_dp' → logprob: -12.892169952392578

Token 99: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.875001907348633
    3. '[I' → logprob: -14.250001907348633
    4. ' [' → logprob: -15.875001907348633
    5. '```' → logprob: -17.000001907348633
    6. 'i' → logprob: -17.500001907348633
    7. '[s' → logprob: -17.750001907348633
    8. '][' → logprob: -18.125001907348633
    9. '[int' → logprob: -18.500001907348633
    10. '[ii' → logprob: -18.625001907348633

Token 100: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00013893934374209493
    2. '-' → logprob: -9.625139236450195
    3. '[s' → logprob: -10.375139236450195
    4. ']' → logprob: -10.625139236450195
    5. ' ][' → logprob: -11.625139236450195
    6. '[' → logprob: -12.375139236450195
    7. 's' → logprob: -13.750139236450195
    8. '"][' → logprob: -13.875139236450195
    9. '[i' → logprob: -14.500139236450195
    10. '   ' → logprob: -14.625139236450195

Token 101: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.7697225252486533e-06
    2. ' s' → logprob: -13.000003814697266
    3. ']' → logprob: -14.750003814697266
    4. '[s' → logprob: -14.875003814697266
    5. '(s' → logprob: -15.750003814697266
    6. '-' → logprob: -16.000003814697266
    7. '][' → logprob: -16.625003814697266
    8. '   ' → logprob: -16.750003814697266
    9. '_s' → logprob: -16.750003814697266
    10. '`s' → logprob: -16.750003814697266

Token 102: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001831565605243668
    2. ']+=' → logprob: -8.62518310546875
    3. ' ]' → logprob: -12.87518310546875
    4. '[' → logprob: -14.12518310546875
    5. ']]' → logprob: -16.12518310546875
    6. '"]' → logprob: -16.50018310546875
    7. ']+' → logprob: -16.75018310546875
    8. '`]' → logprob: -16.87518310546875
    9. '   ' → logprob: -17.37518310546875
    10. 's' → logprob: -17.50018310546875

Token 103: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1022481694817543
    2. ' +=' → logprob: -2.602248191833496
    3. ']+=' → logprob: -3.852248191833496
    4. ']' → logprob: -6.727248191833496
    5. '[' → logprob: -7.477248191833496
    6. '+' → logprob: -10.227248191833496
    7. '=' → logprob: -10.352248191833496
    8. '```' → logprob: -10.977248191833496
    9. '+=(' → logprob: -13.352248191833496
    10. '>' → logprob: -14.102248191833496

Token 104: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005530327325686812
    2. ' dp' → logprob: -7.500553131103516
    3. '	dp' → logprob: -17.375553131103516
    4. '(dp' → logprob: -19.000553131103516
    5. '           ' → logprob: -19.625553131103516
    6. '   ' → logprob: -19.750553131103516
    7. '                   ' → logprob: -20.000553131103516
    8. '               ' → logprob: -20.125553131103516
    9. '_dp' → logprob: -20.875553131103516
    10. 'df' → logprob: -21.375553131103516

Token 105: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.127333340875339e-06
    2. 'i' → logprob: -12.625003814697266
    3. '```' → logprob: -14.250003814697266
    4. '{i' → logprob: -17.125003814697266
    5. '[' → logprob: -17.625003814697266
    6. '\[' → logprob: -17.625003814697266
    7. '(i' → logprob: -17.750003814697266
    8. '[I' → logprob: -18.125003814697266
    9. '   ' → logprob: -19.000003814697266
    10. '`' → logprob: -19.750003814697266

Token 106: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020783171930816025
    2. ' -' → logprob: -8.875207901000977
    3. '[i' → logprob: -10.250207901000977
    4. '[' → logprob: -10.625207901000977
    5. '1' → logprob: -12.625207901000977
    6. '[-' → logprob: -13.750207901000977
    7. 'i' → logprob: -13.750207901000977
    8. '```' → logprob: -14.125207901000977
    9. 's' → logprob: -14.250207901000977
    10. '   ' → logprob: -14.375207901000977

Token 107: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4981488585472107
    2. '1' → logprob: -0.9981488585472107
    3. '][' → logprob: -4.3731489181518555
    4. '[' → logprob: -4.9981489181518555
    5. ' ' → logprob: -6.4981489181518555
    6. ']' → logprob: -7.3731489181518555
    7. '[s' → logprob: -7.3731489181518555
    8. '-' → logprob: -7.7481489181518555
    9. '```' → logprob: -7.9981489181518555
    10. '   ' → logprob: -8.248148918151855

Token 108: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003500050224829465
    2. '[s' → logprob: -8.250349998474121
    3. ']' → logprob: -9.750349998474121
    4. '[' → logprob: -11.000349998474121
    5. ' ][' → logprob: -11.875349998474121
    6. '"][' → logprob: -12.250349998474121
    7. 's' → logprob: -13.875349998474121
    8. ''][' → logprob: -14.625349998474121
    9. ' ' → logprob: -16.000350952148438
    10. '<|end|>' → logprob: -16.250350952148438

Token 109: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00021319588995538652
    2. ' s' → logprob: -8.500213623046875
    3. '(s' → logprob: -12.000213623046875
    4. '{s' → logprob: -13.125213623046875
    5. '[s' → logprob: -13.750213623046875
    6. '   ' → logprob: -15.625213623046875
    7. '	s' → logprob: -16.000213623046875
    8. '`s' → logprob: -16.750213623046875
    9. ' ' → logprob: -16.750213623046875
    10. '<s' → logprob: -17.000213623046875

Token 110: ' -' (ID: 533)
  Prédit: '-digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-digit' → logprob: -0.6842272877693176
    2. '-' → logprob: -1.1842272281646729
    3. ' -' → logprob: -1.6842272281646729
    4. '-d' → logprob: -5.559227466583252
    5. '-token' → logprob: -9.559226989746094
    6. '-dose' → logprob: -11.934226989746094
    7. '-D' → logprob: -12.684226989746094
    8. '-disc' → logprob: -13.309226989746094
    9. '-num' → logprob: -13.559226989746094
    10. '-step' → logprob: -13.559226989746094

Token 111: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.0019298245897516608
    2. ' digit' → logprob: -6.251929759979248
    3. '                   ' → logprob: -15.126930236816406
    4. '-digit' → logprob: -15.126930236816406
    5. '_digit' → logprob: -15.376930236816406
    6. ' ' → logprob: -16.001930236816406
    7. '   ' → logprob: -16.376930236816406
    8. 'd' → logprob: -16.501930236816406
    9. '               ' → logprob: -16.626930236816406
    10. '           ' → logprob: -17.376930236816406

Token 112: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.6100132496794686e-05
    2. ' ]' → logprob: -10.375056266784668
    3. ']
' → logprob: -10.750056266784668
    4. ']

' → logprob: -13.625056266784668
    5. '               ' → logprob: -14.625056266784668
    6. ')]' → logprob: -15.250056266784668
    7. ')' → logprob: -15.375056266784668
    8. ']]' → logprob: -15.625056266784668
    9. '[' → logprob: -15.875056266784668
    10. '       ' → logprob: -16.00005531311035

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05780751258134842
    2. '
' → logprob: -3.682807445526123
    3. '<|end|>' → logprob: -3.682807445526123
    4. '    
' → logprob: -5.932807445526123
    5. '<|end|>' → logprob: -7.432807445526123
    6. 'def' → logprob: -7.557807445526123
    7. '	return' → logprob: -7.807807445526123
    8. 'return' → logprob: -8.182807922363281
    9. ' return' → logprob: -8.307807922363281
    10. '\n' → logprob: -8.432807922363281

Token 114: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1183204650878906
    2. 'def' → logprob: -1.6183204650878906
    3. '
' → logprob: -1.9933204650878906
    4. '<|end|>' → logprob: -1.9933204650878906
    5. 'for' (adapté à ' for') → logprob: -2.7433204650878906
    6. 'return' → logprob: -3.4933204650878906
    7. ' ' → logprob: -3.6183204650878906
    8. 'print' → logprob: -3.7433204650878906
    9. ' for' → logprob: -3.9933204650878906
    10. ')' → logprob: -5.118320465087891

Token 115: ' line' (ID: 2543)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.10965821892023087
    2. ' i' → logprob: -2.7346582412719727
    3. ' sum' → logprob: -4.234658241271973
    4. 's' → logprob: -4.734658241271973
    5. ' x' → logprob: -6.109658241271973
    6. ' total' → logprob: -6.234658241271973
    7. ' half' → logprob: -6.484658241271973
    8. ' first' → logprob: -7.109658241271973
    9. ' digit' → logprob: -7.109658241271973
    10. 'i' → logprob: -7.172158241271973

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010021083056926727
    2. 'in' → logprob: -4.635021209716797
    3. ' ' → logprob: -9.760021209716797
    4. '(' → logprob: -9.885021209716797
    5. 's' → logprob: -10.010021209716797
    6. '()' → logprob: -10.760021209716797
    7. '_' → logprob: -10.760021209716797
    8. '_in' → logprob: -11.010021209716797
    9. '  ' → logprob: -11.385021209716797
    10. '   ' → logprob: -11.635021209716797

Token 117: ' sys' (ID: 12228)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21446593105793
    2. 'range' → logprob: -1.8394659757614136
    3. ' range' → logprob: -4.089466094970703
    4. ' dp' → logprob: -4.089466094970703
    5. 'sys' → logprob: -8.214466094970703
    6. '(dp' → logprob: -8.339466094970703
    7. ' sys' → logprob: -10.464466094970703
    8. 'print' → logprob: -11.089466094970703
    9. '[' → logprob: -11.339466094970703
    10. '(range' → logprob: -11.464466094970703

Token 118: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.024003656581044197
    2. '.stdout' → logprob: -3.774003744125366
    3. 'stdin' → logprob: -7.399003505706787
    4. '.argv' → logprob: -9.149003982543945
    5. '.stderr' → logprob: -11.524003982543945
    6. '.' → logprob: -11.649003982543945
    7. '(stdin' → logprob: -11.774003982543945
    8. 'stdout' → logprob: -11.899003982543945
    9. ' stdin' → logprob: -12.774003982543945
    10. '.std' → logprob: -13.774003982543945

Token 119: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.2031298577785492
    2. ':' → logprob: -1.8281298875808716
    3. '.readlines' → logprob: -4.328129768371582
    4. 'in' → logprob: -5.578129768371582
    5. ' in' → logprob: -5.703129768371582
    6. '.' → logprob: -6.703129768371582
    7. ':
' → logprob: -7.578129768371582
    8. '   ' → logprob: -8.328129768371582
    9. ' readline' → logprob: -8.578129768371582
    10. 'line' → logprob: -9.078129768371582

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001184276770800352
    2. '        
' → logprob: -7.501184463500977
    3. '<|end|>' → logprob: -8.376184463500977
    4. '   ' → logprob: -9.126184463500977
    5. '    
' → logprob: -10.001184463500977
    6. ' ' → logprob: -10.001184463500977
    7. '```' → logprob: -10.501184463500977
    8. ' line' → logprob: -10.626184463500977
    9. ',' → logprob: -10.626184463500977
    10. ' s' → logprob: -11.001184463500977

Token 121: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.3504004180431366
    2. '       ' → logprob: -1.975400447845459
    3. ' n' → logprob: -2.350400447845459
    4. 's' → logprob: -3.100400447845459
    5. ' s' → logprob: -5.100400447845459
    6. 'sum' → logprob: -6.100400447845459
    7. 'line' → logprob: -6.350400447845459
    8. 'num' → logprob: -6.475400447845459
    9. '   ' → logprob: -6.725400447845459
    10. ' line' → logprob: -7.225400447845459

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2521371841430664
    2. '=' → logprob: -1.5021371841430664
    3. '=int' → logprob: -8.502137184143066
    4. ' ' → logprob: -13.627137184143066
    5. '=line' → logprob: -13.627137184143066
    6. '   ' → logprob: -14.502137184143066
    7. 'um' → logprob: -15.002137184143066
    8. 'int' → logprob: -15.252137184143066
    9. '=n' → logprob: -15.377137184143066
    10. ',' → logprob: -15.502137184143066

Token 123: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006822054740041494
    2. ' int' → logprob: -5.381822109222412
    3. 'line' → logprob: -6.131822109222412
    4. ' line' → logprob: -11.256821632385254
    5. '   ' → logprob: -11.381821632385254
    6. 'len' → logprob: -14.506821632385254
    7. ' ' → logprob: -14.631821632385254
    8. '  ' → logprob: -15.006821632385254
    9. 'n' → logprob: -15.131821632385254
    10. '(int' → logprob: -15.506821632385254

Token 124: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.008615042082965374
    2. '(' → logprob: -4.758615016937256
    3. ' (' → logprob: -15.383615493774414
    4. '(
' → logprob: -15.758615493774414
    5. '[line' → logprob: -17.008615493774414
    6. '#line' → logprob: -17.133615493774414
    7. '(Line' → logprob: -17.383615493774414
    8. '(lines' → logprob: -17.383615493774414
    9. '(n' → logprob: -17.508615493774414
    10. 'line' → logprob: -17.758615493774414

Token 125: '.strip' (ID: 40613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6351722478866577
    2. '.strip' → logprob: -0.7601722478866577
    3. '.rstrip' → logprob: -6.135172367095947
    4. '())' → logprob: -8.760171890258789
    5. '.readline' → logprob: -9.010171890258789
    6. ' )' → logprob: -10.385171890258789
    7. ')
' → logprob: -10.760171890258789
    8. '().' → logprob: -11.135171890258789
    9. ')>' → logprob: -11.260171890258789
    10. 'rstrip' → logprob: -11.885171890258789

Token 126: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00351953343488276
    2. '()' → logprob: -5.753519535064697
    3. ')' → logprob: -8.003519058227539
    4. '())
' → logprob: -12.378519058227539
    5. '()))' → logprob: -14.003519058227539
    6. ' ())' → logprob: -14.003519058227539
    7. '();)' → logprob: -14.378519058227539
    8. '(' → logprob: -14.378519058227539
    9. '()]' → logprob: -15.503519058227539
    10. '()
' → logprob: -16.37851905822754

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033200893085449934
    2. '   ' → logprob: -8.50033187866211
    3. '<|end|>' → logprob: -9.62533187866211
    4. ' if' → logprob: -10.75033187866211
    5. '        
' → logprob: -11.12533187866211
    6. 'if' → logprob: -11.75033187866211
    7. '<|end|>' → logprob: -12.75033187866211
    8. ',' → logprob: -12.87533187866211
    9. ' ' → logprob: -13.37533187866211
    10. '
' → logprob: -13.50033187866211

Token 128: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.318638414144516
    2. 'half' → logprob: -2.568638324737549
    3. 'left' → logprob: -3.443638324737549
    4. 's' → logprob: -3.943638324737549
    5. 'result' → logprob: -4.068638324737549
    6. 'a' → logprob: -4.193638324737549
    7. '       ' → logprob: -4.443638324737549
    8. 'total' → logprob: -4.443638324737549
    9. 'res' → logprob: -4.568638324737549
    10. 'n' → logprob: -4.693638324737549

Token 129: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.008778009563684464
    2. 'dp' → logprob: -5.508778095245361
    3. '(' → logprob: -5.883778095245361
    4. '(sum' → logprob: -6.883778095245361
    5. '((' → logprob: -7.508778095245361
    6. ' dp' → logprob: -9.258777618408203
    7. 'sum' → logprob: -9.633777618408203
    8. '(pow' → logprob: -10.383777618408203
    9. ' (' → logprob: -10.508777618408203
    10. '(s' → logprob: -10.883777618408203

Token 130: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.8802491215174086e-05
    2. '4' → logprob: -10.750028610229492
    3. '[n' → logprob: -12.625028610229492
    4. '[-' → logprob: -13.500028610229492
    5. '   ' → logprob: -13.875028610229492
    6. '
' → logprob: -15.250028610229492
    7. ')' → logprob: -15.250028610229492
    8. '[len' → logprob: -15.375028610229492
    9. '[min' → logprob: -15.750028610229492
    10. ' ' → logprob: -15.750028610229492

Token 131: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.515961285913363e-05
    2. '2' → logprob: -10.375064849853516
    3. 'n' → logprob: -10.625064849853516
    4. '[' → logprob: -12.500064849853516
    5. ' ' → logprob: -12.750064849853516
    6. '   ' → logprob: -14.375064849853516
    7. '[n' → logprob: -14.375064849853516
    8. 'len' → logprob: -15.000064849853516
    9. 'min' → logprob: -15.125064849853516
    10. '1' → logprob: -15.500064849853516

Token 132: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00010151672904612496
    2. '[n' → logprob: -9.500101089477539
    3. ']' → logprob: -11.000101089477539
    4. ' ][' → logprob: -12.375101089477539
    5. '   ' → logprob: -13.125101089477539
    6. '])' → logprob: -13.875101089477539
    7. '[' → logprob: -14.125101089477539
    8. 'n' → logprob: -14.875101089477539
    9. '"][' → logprob: -15.625101089477539
    10. ']
' → logprob: -15.625101089477539

Token 133: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.5577775128767826e-06
    2. ' n' → logprob: -12.500005722045898
    3. '9' → logprob: -13.500005722045898
    4. '36' → logprob: -16.2500057220459
    5. 'min' → logprob: -16.2500057220459
    6. '   ' → logprob: -16.6250057220459
    7. ')n' → logprob: -16.8750057220459
    8. '	n' → logprob: -17.0000057220459
    9. '(n' → logprob: -17.3750057220459
    10. '[n' → logprob: -17.6250057220459

Token 134: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00022129806166049093
    2. ' ])' → logprob: -9.000221252441406
    3. ']' → logprob: -9.500221252441406
    4. ')' → logprob: -11.000221252441406
    5. '])
' → logprob: -12.875221252441406
    6. ''])' → logprob: -13.750221252441406
    7. ')])' → logprob: -14.250221252441406
    8. ')]' → logprob: -14.625221252441406
    9. ']])' → logprob: -14.875221252441406
    10. '"])' → logprob: -15.250221252441406

Token 135: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.000763510703109e-05
    2. '))' → logprob: -10.875040054321289
    3. ' )' → logprob: -11.125040054321289
    4. '])' → logprob: -13.125040054321289
    5. '`)' → logprob: -13.375040054321289
    6. ')`' → logprob: -14.500040054321289
    7. ')
' → logprob: -14.750040054321289
    8. '})' → logprob: -15.125040054321289
    9. '**' → logprob: -15.500040054321289
    10. '   ' → logprob: -15.750040054321289

Token 136: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01037874910980463
    2. 'n' → logprob: -4.760378837585449
    3. ' ' → logprob: -6.385378837585449
    4. ' n' → logprob: -9.51037883758545
    5. '   ' → logprob: -13.63537883758545
    6. '(n' → logprob: -14.63537883758545
    7. '<=' → logprob: -15.76037883758545
    8. '  ' → logprob: -15.88537883758545
    9. '36' → logprob: -16.010377883911133
    10. '	n' → logprob: -16.135377883911133

Token 137: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.1602315455675125
    2. ' <=' → logprob: -1.910231590270996
    3. '>=' → logprob: -11.910231590270996
    4. ' >=' → logprob: -14.785231590270996
    5. '<' → logprob: -15.535231590270996
    6. ')<=' → logprob: -16.53523063659668
    7. ' ' → logprob: -16.78523063659668
    8. ']<=' → logprob: -17.28523063659668
    9. '0' → logprob: -17.91023063659668
    10. '≤' → logprob: -18.91023063659668

Token 138: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1370028406381607
    2. '36' → logprob: -2.137002944946289
    3. ' max' → logprob: -4.637002944946289
    4. ' ' → logprob: -8.012002944946289
    5. '	max' → logprob: -12.762002944946289
    6. '   ' → logprob: -13.137002944946289
    7. '35' → logprob: -15.387002944946289
    8. '  ' → logprob: -15.387002944946289
    9. '34' → logprob: -15.762002944946289
    10. '(max' → logprob: -15.887002944946289

Token 139: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.3856492842023727e-06
    2. 'sum' → logprob: -13.875000953674316
    3. '_' → logprob: -15.500000953674316
    4. '_s' → logprob: -16.500001907348633
    5. ')' → logprob: -18.250001907348633
    6. '   ' → logprob: -19.000001907348633
    7. '_dp' → logprob: -19.000001907348633
    8. '_max' → logprob: -19.125001907348633
    9. ' sum' → logprob: -19.625001907348633
    10. 'Sum' → logprob: -20.000001907348633

Token 140: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12693126499652863
    2. 'else' → logprob: -2.1269311904907227
    3. 'and' → logprob: -13.501931190490723
    4. ')' → logprob: -14.376931190490723
    5. '	else' → logprob: -14.626931190490723
    6. ' and' → logprob: -14.751931190490723
    7. ' ' → logprob: -15.751931190490723
    8. '   ' → logprob: -16.12693214416504
    9. '```' → logprob: -17.00193214416504
    10. ' )' → logprob: -17.25193214416504

Token 141: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01108566578477621
    2. ' ' → logprob: -4.511085510253906
    3. '   ' → logprob: -10.886085510253906
    4. ')' → logprob: -11.636085510253906
    5. '"' → logprob: -12.761085510253906
    6. ''' → logprob: -13.386085510253906
    7. '(' → logprob: -13.886085510253906
    8. '    ' → logprob: -14.136085510253906
    9. '  ' → logprob: -14.323585510253906
    10. '00' → logprob: -14.886085510253906

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018149138486478478
    2. ' ' → logprob: -8.625181198120117
    3. '   ' → logprob: -14.375181198120117
    4. ''' → logprob: -14.625181198120117
    5. '"' → logprob: -14.750181198120117
    6. '00' → logprob: -15.625181198120117
    7. ')' → logprob: -15.875181198120117
    8. '000' → logprob: -16.937681198120117
    9. '`' → logprob: -17.250181198120117
    10. '(' → logprob: -17.437681198120117

Token 143: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. '   ' → logprob: -13.625005722045898
    3. ')
' → logprob: -13.625005722045898
    4. ' )' → logprob: -13.750005722045898
    5. '))' → logprob: -14.000005722045898
    6. '`)' → logprob: -14.875005722045898
    7. ')`' → logprob: -15.500005722045898
    8. ')}' → logprob: -15.625005722045898
    9. '})' → logprob: -16.2500057220459
    10. ')}}' → logprob: -16.6250057220459

Token 144: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2014477401971817
    2. '__' → logprob: -1.7014477252960205
    3. 'name' → logprob: -11.701447486877441
    4. ' ' → logprob: -11.951447486877441
    5. '_' → logprob: -12.076447486877441
    6. ''' → logprob: -12.326447486877441
    7. '_name' → logprob: -12.826447486877441
    8. ' ' → logprob: -13.326447486877441
    9. '/__' → logprob: -14.201447486877441
    10. 'Name' → logprob: -14.326447486877441

Token 146: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6562401652336121
    2. ' __' → logprob: -1.1562402248382568
    3. '__' → logprob: -1.9062402248382568
    4. '==' → logprob: -4.281239986419678
    5. '.__' → logprob: -5.781239986419678
    6. '.' → logprob: -8.156240463256836
    7. ' .' → logprob: -8.406240463256836
    8. ' =="' → logprob: -9.031240463256836
    9. '=="' → logprob: -9.531240463256836
    10. '__.__' → logprob: -10.406240463256836

Token 147: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001628956088097766
    2. '==' → logprob: -8.750163078308105
    3. ' ==' → logprob: -12.500163078308105
    4. '__.__' → logprob: -15.500163078308105
    5. '_' → logprob: -15.875163078308105
    6. '___' → logprob: -16.37516212463379
    7. '=="' → logprob: -16.87516212463379
    8. ' __' → logprob: -17.12516212463379
    9. '____' → logprob: -17.37516212463379
    10. '__

' → logprob: -17.87516212463379

Token 148: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7932538986206055
    2. '==' → logprob: -0.9182538986206055
    3. '__' → logprob: -1.9182538986206055
    4. '=="' → logprob: -6.9182538986206055
    5. '_' → logprob: -8.168253898620605
    6. '=' → logprob: -9.418253898620605
    7. '=='' → logprob: -9.793253898620605
    8. '.' → logprob: -9.918253898620605
    9. '.__' → logprob: -10.418253898620605
    10. '"' → logprob: -11.293253898620605

Token 149: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014176792465150356
    2. ''' → logprob: -4.264176845550537
    3. ' "__' → logprob: -11.389176368713379
    4. '__' → logprob: -13.514176368713379
    5. ' '__' → logprob: -15.264176368713379
    6. '"user' → logprob: -15.889176368713379
    7. '"name' → logprob: -16.264177322387695
    8. '"class' → logprob: -17.514177322387695
    9. ''"' → logprob: -17.889177322387695
    10. '"value' → logprob: -18.014177322387695

Token 150: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06610371172428131
    2. '__' → logprob: -3.31610369682312
    3. 'name' → logprob: -3.69110369682312
    4. '"' → logprob: -5.941103935241699
    5. ''' → logprob: -9.9411039352417
    6. '```' → logprob: -11.4411039352417
    7. '"name' → logprob: -11.4411039352417
    8. 'built' → logprob: -12.1911039352417
    9. '_main' → logprob: -12.6911039352417
    10. ' "__' → logprob: -12.8161039352417

Token 151: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07899807393550873
    2. '__' → logprob: -2.57899808883667
    3. '__':
' → logprob: -9.703997611999512
    4. '__.' → logprob: -10.078997611999512
    5. '__.__' → logprob: -12.953997611999512
    6. '__:' → logprob: -13.828997611999512
    7. '__["' → logprob: -13.953997611999512
    8. '__
' → logprob: -15.078997611999512
    9. '__
' → logprob: -15.703997611999512
    10. '.' → logprob: -15.703997611999512

Token 152: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0015466450713574886
    2. 'main' → logprob: -7.376546859741211
    3. '	main' → logprob: -7.751546859741211
    4. '   ' → logprob: -7.751546859741211
    5. ' ' → logprob: -11.001546859741211
    6. ' ' → logprob: -11.251546859741211
    7. ' 
' → logprob: -11.376546859741211
    8. '    
' → logprob: -12.376546859741211
    9. '<|end|>' → logprob: -12.626546859741211
    10. '_main' → logprob: -12.751546859741211

Token 153: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0004890497075393796
    2. ' main' → logprob: -7.625489234924316
    3. '   ' → logprob: -14.500489234924316
    4. '	main' → logprob: -14.625489234924316
    5. ' ' → logprob: -17.25048828125
    6. '  ' → logprob: -17.87548828125
    7. 'import' → logprob: -18.12548828125
    8. '(main' → logprob: -19.50048828125
    9. '.main' → logprob: -20.00048828125
    10. 'ma' → logprob: -20.12548828125

Token 154: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002672684146091342
    2. '(' → logprob: -6.1276726722717285
    3. '()
' → logprob: -9.002673149108887
    4. ':' → logprob: -9.002673149108887
    5. '():' → logprob: -9.252673149108887
    6. '<|end|>' → logprob: -10.127673149108887
    7. '();' → logprob: -10.627673149108887
    8. '```' → logprob: -10.877673149108887
    9. '
' → logprob: -11.252673149108887
    10. '()\' → logprob: -11.252673149108887


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 152
Tokens correctement prédits (1ère position, stricte): 83
Tokens correctement prédits (1ère position, avec adaptation): 85
Tokens correctement prédits (top 10): 134
Précision stricte (1ère position): 54.61%
Précision adaptée (1ère position): 55.92%
Précision (top 10): 88.16%
================================================================================
