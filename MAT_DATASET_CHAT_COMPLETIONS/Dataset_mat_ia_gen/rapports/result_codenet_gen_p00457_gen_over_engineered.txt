================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:29:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Tuple, Dict, Optional


class Color:
    RED = 1
    BLUE = 2
    YELLOW = 3

    _names = {
        RED: "RED",
        BLUE: "BLUE",
        YELLOW: "YELLOW",
    }

    @classmethod
    def all(cls) -> List[int]:
        return [cls.RED, cls.BLUE, cls.YELLOW]

    @classmethod
    def name(cls, c: int) -> str:
        return cls._names.get(c, "UNKNOWN")


class CharacterSequence(ABC):
    """
    Abstract base class representing a sequence of characters with colors.
    """

    @abstractmethod
    def length(self) -> int:
        pass

    @abstractmethod
    def get_color(self, idx: int) -> int:
        pass

    @abstractmethod
    def set_color(self, idx: int, color: int) -> None:
        pass

    @abstractmethod
    def clone(self) -> 'CharacterSequence':
        pass


class LinearCharacterSequence(CharacterSequence):
    """
    Concrete character sequence modeled as a linear list.
    """

    def __init__(self, colors: List[int]):
        self._colors: List[int] = colors[:]

    def length(self) -> int:
        return len(self._colors)

    def get_color(self, idx: int) -> int:
        return self._colors[idx]

    def set_color(self, idx: int, color: int) -> None:
        self._colors[idx] = color

    def clone(self) -> 'LinearCharacterSequence':
        return LinearCharacterSequence(self._colors)

    def __repr__(self):
        return "LinearCharacterSequence(" + ",".join(Color.name(c) for c in self._colors) + ")"


class EliminationStrategy(ABC):
    """
    Abstract base class for elimination logic.
    """

    @abstractmethod
    def eliminate(self, sequence: CharacterSequence) -> CharacterSequence:
        """
        Returns a new sequence with all eliminations applied until no more eliminations are possible.
        """
        pass


class ChainEliminationStrategy(EliminationStrategy):
    """
    Implements the chain elimination rule:
    - Remove sequences of 4 or more consecutive characters of the same color.
    - Repeat until no more eliminations are possible.
    """

    def eliminate(self, sequence: CharacterSequence) -> CharacterSequence:
        current_sequence = sequence.clone()
        while True:
            groups = self._find_groups(current_sequence)
            removable_indices = set()
            for start, end, color, length in groups:
                if length >= 4:
                    removable_indices.update(range(start, end))
            if not removable_indices:
                break
            current_sequence = self._remove_indices(current_sequence, sorted(removable_indices))
        return current_sequence

    def _find_groups(self, sequence: CharacterSequence) -> List[Tuple[int, int, int, int]]:
        groups = []
        n = sequence.length()
        if n == 0:
            return groups
        start = 0
        current_color = sequence.get_color(0)
        for i in range(1, n):
            if sequence.get_color(i) != current_color:
                groups.append((start, i, current_color, i - start))
                start = i
                current_color = sequence.get_color(i)
        groups.append((start, n, current_color, n - start))
        return groups

    def _remove_indices(self, sequence: CharacterSequence, indices: List[int]) -> CharacterSequence:
        # Remove characters at specified indices and return new sequence
        new_colors = []
        remove_set = set(indices)
        for i in range(sequence.length()):
            if i not in remove_set:
                new_colors.append(sequence.get_color(i))
        return LinearCharacterSequence(new_colors)


class Move:
    """
    Represents a single move of changing one character's color.
    """

    def __init__(self, position: int, new_color: int):
        self.position = position
        self.new_color = new_color

    def __repr__(self):
        return f"Move(pos={self.position}, new_color={Color.name(self.new_color)})"


class GameSolver:
    """
    Encapsulates the problem-solving logic with possible extensibility.
    """

    def __init__(self, sequence: CharacterSequence, elimination_strategy: EliminationStrategy):
        self.sequence = sequence
        self.elimination_strategy = elimination_strategy
        self.n = sequence.length()

    def minimal_remaining(self) -> int:
        """
        Try all possible single-character color changes (not to the same color),
        apply eliminations and return the minimal size remaining.
        """
        original_colors = [self.sequence.get_color(i) for i in range(self.n)]
        min_remaining = self.n  # worst case: no elimination
        for pos in range(self.n):
            original_color = original_colors[pos]
            for color in Color.all():
                if color == original_color:
                    continue  # no change
                modified_sequence = self.sequence.clone()
                modified_sequence.set_color(pos, color)
                eliminated_sequence = self.elimination_strategy.eliminate(modified_sequence)
                remaining = eliminated_sequence.length()
                if remaining < min_remaining:
                    min_remaining = remaining
        return min_remaining


class InputReader:
    """
    Handles input reading, supports multiple data sets.
    """

    def __init__(self):
        pass

    def read_dataset(self) -> Optional[Tuple[int, List[int]]]:
        try:
            line = input()
            if line == "":
                return None
            n = int(line)
            if n == 0:
                return None
            colors = []
            for _ in range(n):
                col = int(input())
                colors.append(col)
            return n, colors
        except EOFError:
            return None


class OutputWriter:
    """
    Handles output formatting and writing.
    """

    @staticmethod
    def write_result(min_remaining: int) -> None:
        print(min_remaining)


def main():
    reader = InputReader()
    writer = OutputWriter()
    elimination_strategy = ChainEliminationStrategy()

    while True:
        data = reader.read_dataset()
        if data is None:
            break
        n, colors = data
        sequence = LinearCharacterSequence(colors)
        solver = GameSolver(sequence, elimination_strategy)
        result = solver.minimal_remaining()
        writer.write_result(result)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.1604270040988922
    2. 'ABC' → logprob: -1.9104269742965698
    3. ' A' → logprob: -9.53542709350586
    4. 'AB' → logprob: -9.53542709350586
    5. 'A' → logprob: -11.03542709350586
    6. 'ABCDE' → logprob: -11.16042709350586
    7. 'abc' → logprob: -11.28542709350586
    8. 'abstract' → logprob: -12.41042709350586
    9. ' ' → logprob: -13.16042709350586
    10. '_AB' → logprob: -13.41042709350586

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28183513879776
    2. ',' → logprob: -1.4068350791931152
    3. 'import' → logprob: -8.156835556030273
    4. '```' → logprob: -9.406835556030273
    5. ' ,' → logprob: -9.906835556030273
    6. '' → logprob: -10.156835556030273
    7. ' ' → logprob: -10.281835556030273
    8. ',
' → logprob: -10.281835556030273
    9. ':' → logprob: -10.406835556030273
    10. ' .' → logprob: -10.781835556030273

Token 5: ' abstract' (ID: 13004)
  Prédit: ' abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abstract' → logprob: -0.5464798808097839
    2. 'abstract' → logprob: -0.9214798808097839
    3. 'Abstract' → logprob: -3.7964799404144287
    4. ' ' → logprob: -8.671480178833008
    5. ' Abstract' → logprob: -9.046480178833008
    6. '.abstract' → logprob: -9.296480178833008
    7. ' A' → logprob: -9.921480178833008
    8. '```' → logprob: -10.546480178833008
    9. ' ABC' → logprob: -10.796480178833008
    10. ' ABSTRACT' → logprob: -11.296480178833008

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00020449401927180588
    2. 'm' → logprob: -8.625204086303711
    3. 'meth' → logprob: -11.375204086303711
    4. '_method' → logprob: -12.375204086303711
    5. 'classmethod' → logprob: -12.625204086303711
    6. 'met' → logprob: -13.500204086303711
    7. 'me' → logprob: -13.500204086303711
    8. ' method' → logprob: -13.875204086303711
    9. 'meta' → logprob: -14.125204086303711
    10. '_' → logprob: -15.125204086303711

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48189130425453186
    2. '```' → logprob: -1.4818912744522095
    3. 'class' → logprob: -2.356891393661499
    4. '

' → logprob: -4.23189115524292
    5. '<|end|>' → logprob: -4.35689115524292
    6. '' → logprob: -4.60689115524292
    7. '\n' → logprob: -4.85689115524292
    8. ' class' → logprob: -5.98189115524292
    9. '
' → logprob: -6.10689115524292
    10. '\' → logprob: -6.10689115524292

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08355175703763962
    2. '

' → logprob: -3.4585516452789307
    3. 'class' → logprob: -3.8335516452789307
    4. '
' → logprob: -4.83355188369751
    5. '```' → logprob: -4.83355188369751
    6. '' → logprob: -5.08355188369751
    7. '\n' → logprob: -6.20855188369751
    8. ' 

' → logprob: -7.45855188369751
    9. ' 
' → logprob: -7.45855188369751
    10. '``' → logprob: -8.208551406860352

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.02580157481133938
    2. ' collections' → logprob: -4.025801658630371
    3. ' dat' → logprob: -5.525801658630371
    4. 'typing' → logprob: -6.525801658630371
    5. ' io' → logprob: -7.650801658630371
    6. ' abc' → logprob: -8.025801658630371
    7. ' os' → logprob: -8.275801658630371
    8. ' sys' → logprob: -8.400801658630371
    9. 'collections' → logprob: -8.650801658630371
    10. ' math' → logprob: -8.775801658630371

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5059148073196411
    2. 'import' → logprob: -1.2559148073196411
    3. '.' → logprob: -2.2559146881103516
    4. '.import' → logprob: -6.005914688110352
    5. '<|end|>' → logprob: -6.755914688110352
    6. ' ' → logprob: -7.005914688110352
    7. '```' → logprob: -7.380914688110352
    8. '[' → logprob: -7.505914688110352
    9. ' .' → logprob: -8.130914688110352
    10. '.space' → logprob: -8.505914688110352

Token 11: ' List' (ID: 2655)
  Prédit: 'Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Any' → logprob: -0.2519029676914215
    2. ' Any' → logprob: -1.7519029378890991
    3. 'List' → logprob: -4.376903057098389
    4. ' List' → logprob: -4.876903057098389
    5. 'Union' → logprob: -5.001903057098389
    6. 'Callable' → logprob: -5.251903057098389
    7. ' Union' → logprob: -5.376903057098389
    8. 'Protocol' → logprob: -5.626903057098389
    9. ' Callable' → logprob: -5.626903057098389
    10. ' Protocol' → logprob: -6.001903057098389

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4726979434490204
    2. '
' → logprob: -1.2226979732513428
    3. '```' → logprob: -2.8476979732513428
    4. 'class' → logprob: -3.9726979732513428
    5. '``' → logprob: -6.347697734832764
    6. '\n' → logprob: -6.722697734832764
    7. '<|end|>' → logprob: -6.972697734832764
    8. '


' → logprob: -7.597697734832764
    9. ' class' → logprob: -8.222698211669922
    10. '
' → logprob: -8.472698211669922

Token 13: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -1.4103957414627075
    2. ' Union' → logprob: -1.5353957414627075
    3. ' Any' → logprob: -1.7853957414627075
    4. ' Callable' → logprob: -2.035395622253418
    5. 'Any' → logprob: -2.410395622253418
    6. 'Optional' → logprob: -2.535395622253418
    7. 'Union' → logprob: -4.160395622253418
    8. ' Tuple' → logprob: -4.160395622253418
    9. 'Callable' → logprob: -4.535395622253418
    10. 'Tuple' → logprob: -4.785395622253418

Token 14: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7514566779136658
    2. 'class' → logprob: -0.8764566779136658
    3. '
' → logprob: -2.5014567375183105
    4. '```' → logprob: -3.6264567375183105
    5. '\n' → logprob: -6.1264567375183105
    6. '``' → logprob: -7.8764567375183105
    7. ' class' → logprob: -8.001456260681152
    8. '


' → logprob: -8.001456260681152
    9. '<class' → logprob: -9.251456260681152
    10. '
' → logprob: -9.751456260681152

Token 15: ' Dict' (ID: 55179)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.8578318357467651
    2. ' Callable' → logprob: -2.1078319549560547
    3. 'Union' → logprob: -2.3578319549560547
    4. 'Any' → logprob: -2.3578319549560547
    5. ' Optional' → logprob: -2.6078319549560547
    6. ' Any' → logprob: -2.8578319549560547
    7. 'Optional' → logprob: -2.9828319549560547
    8. 'Callable' → logprob: -3.1078319549560547
    9. ' Dict' → logprob: -4.607831954956055
    10. 'Dict' → logprob: -4.732831954956055

Token 16: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5296867489814758
    2. '
' → logprob: -1.279686689376831
    3. 'class' → logprob: -2.029686689376831
    4. '```' → logprob: -6.77968692779541
    5. '


' → logprob: -8.40468692779541
    6. ' class' → logprob: -9.15468692779541
    7. '
' → logprob: -9.52968692779541
    8. '\n' → logprob: -9.65468692779541
    9. '``' → logprob: -10.52968692779541
    10. '<class' → logprob: -10.90468692779541

Token 17: ' Optional' (ID: 19351)
  Prédit: 'Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Any' → logprob: -0.8047667741775513
    2. ' Union' → logprob: -1.6797667741775513
    3. ' Any' → logprob: -1.8047667741775513
    4. 'Union' → logprob: -2.4297666549682617
    5. ' Optional' → logprob: -3.1797666549682617
    6. 'Optional' → logprob: -3.1797666549682617
    7. ' Callable' → logprob: -3.8047666549682617
    8. 'Callable' → logprob: -5.054766654968262
    9. 'Iterable' → logprob: -7.179766654968262
    10. 'Set' → logprob: -7.429766654968262

Token 18: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7871813774108887
    2. '

' → logprob: -1.1621813774108887
    3. '
' → logprob: -1.5371813774108887
    4. '```' → logprob: -4.287181377410889
    5. '\n' → logprob: -6.287181377410889
    6. ' class' → logprob: -7.787181377410889
    7. '


' → logprob: -8.037181854248047
    8. '``' → logprob: -8.162181854248047
    9. '
' → logprob: -8.412181854248047
    10. '<class' → logprob: -9.412181854248047

Token 19: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0015115276910364628
    2. 'c' → logprob: -6.501511573791504
    3. 'clas' → logprob: -13.001511573791504
    4. 'cla' → logprob: -13.126511573791504
    5. '
' → logprob: -13.126511573791504
    6. '@' → logprob: -14.126511573791504
    7. ' class' → logprob: -14.251511573791504
    8. '@class' → logprob: -14.876511573791504
    9. 'cl' → logprob: -14.876511573791504
    10. '```' → logprob: -15.126511573791504

Token 20: ' Color' (ID: 6822)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5017862915992737
    2. ' Abstract' → logprob: -1.501786231994629
    3. ' Base' → logprob: -3.126786231994629
    4. ' My' → logprob: -3.626786231994629
    5. ' ABC' → logprob: -4.126786231994629
    6. ' Shape' → logprob: -4.251786231994629
    7. ' Serializer' → logprob: -4.251786231994629
    8. ' Basic' → logprob: -4.626786231994629
    9. ' Space' → logprob: -5.251786231994629
    10. ' Task' → logprob: -5.251786231994629

Token 21: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04341339319944382
    2. ':' → logprob: -3.1684134006500244
    3. '(Abstract' → logprob: -8.293413162231445
    4. '(Enum' → logprob: -9.543413162231445
    5. '():' → logprob: -9.668413162231445
    6. '):' → logprob: -12.043413162231445
    7. '(:' → logprob: -12.543413162231445
    8. ' (' → logprob: -12.793413162231445
    9. ' :' → logprob: -12.793413162231445
    10. '(Color' → logprob: -13.168413162231445

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07896833121776581
    2. ':' → logprob: -2.9539682865142822
    3. '<|end|>' → logprob: -4.328968524932861
    4. ' ' → logprob: -5.328968524932861
    5. '  ' → logprob: -6.828968524932861
    6. '    ' → logprob: -7.453968524932861
    7. '(Enum' → logprob: -7.453968524932861
    8. '(' → logprob: -7.578968524932861
    9. '<|end|>' → logprob: -7.578968524932861
    10. '(object' → logprob: -7.828968524932861

Token 23: ' RED' (ID: 45309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10983862727880478
    2. '    ' → logprob: -2.9848387241363525
    3. ' ' → logprob: -3.4848387241363525
    4. 'class' → logprob: -4.859838485717773
    5. 'def' → logprob: -5.609838485717773
    6. ' def' → logprob: -5.734838485717773
    7. ' pass' → logprob: -5.859838485717773
    8. '  ' → logprob: -6.734838485717773
    9. '```' → logprob: -7.109838485717773
    10. '(' → logprob: -7.609838485717773

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20229868590831757
    2. '=' → logprob: -1.702298641204834
    3. ':' → logprob: -7.202298641204834
    4. ',' → logprob: -9.327299118041992
    5. '   ' → logprob: -10.077299118041992
    6. ' ' → logprob: -13.077299118041992
    7. '.' → logprob: -13.202299118041992
    8. ')' → logprob: -13.202299118041992
    9. '  ' → logprob: -13.452299118041992
    10. '(' → logprob: -14.202299118041992

Token 25: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5167878270149231
    2. ' '' → logprob: -1.3917877674102783
    3. '"' → logprob: -2.5167877674102783
    4. ' "' → logprob: -2.6417877674102783
    5. ' ' → logprob: -6.141788005828857
    6. '1' → logprob: -7.641788005828857
    7. '0' → logprob: -8.1417875289917
    8. '   ' → logprob: -10.7667875289917
    9. '  ' → logprob: -11.7667875289917
    10. ' ' → logprob: -12.1417875289917

Token 26: '1' (ID: 16)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47735223174095154
    2. ''' → logprob: -0.9773522615432739
    3. '0' → logprob: -6.852352142333984
    4. ''"' → logprob: -7.227352142333984
    5. '1' → logprob: -7.352352142333984
    6. ' ' → logprob: -8.227352142333984
    7. ''#' → logprob: -8.727352142333984
    8. ' "' → logprob: -8.852352142333984
    9. '"#' → logprob: -9.852352142333984
    10. ' '' → logprob: -9.852352142333984

Token 27: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.256804883480072
    2. '   ' → logprob: -2.131804943084717
    3. '    
' → logprob: -3.381804943084717
    4. '<|end|>' → logprob: -3.381804943084717
    5. '0' → logprob: -4.506804943084717
    6. ',' → logprob: -4.756804943084717
    7. ' ' → logprob: -5.506804943084717
    8. '  ' → logprob: -5.506804943084717
    9. '  
' → logprob: -6.006804943084717
    10. ')' → logprob: -6.131804943084717

Token 29: ' BLUE' (ID: 110151)
  Prédit: ' BLUE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' BLUE' → logprob: -0.956344723701477
    2. 'GREEN' → logprob: -1.456344723701477
    3. ' GREEN' → logprob: -1.456344723701477
    4. 'BLUE' (adapté à ' BLUE') → logprob: -1.956344723701477
    5. ' ' → logprob: -5.4563446044921875
    6. '   ' → logprob: -6.2063446044921875
    7. 'REEN' → logprob: -8.206344604492188
    8. 'Y' → logprob: -8.581344604492188
    9. 'OR' → logprob: -8.581344604492188
    10. '.GREEN' → logprob: -8.956344604492188

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026316901668906212
    2. '=' → logprob: -3.6513168811798096
    3. '   ' → logprob: -12.02631664276123
    4. ' ' → logprob: -12.15131664276123
    5. ',' → logprob: -13.15131664276123
    6. '<|end|>' → logprob: -13.52631664276123
    7. '  ' → logprob: -14.02631664276123
    8. ' =
' → logprob: -14.77631664276123
    9. '1' → logprob: -15.40131664276123
    10. '_' → logprob: -15.77631664276123

Token 31: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04300010949373245
    2. '2' → logprob: -3.1680002212524414
    3. '0' → logprob: -14.793000221252441
    4. ' ' → logprob: -15.168000221252441
    5. '  ' → logprob: -15.418000221252441
    6. '   ' → logprob: -17.042999267578125
    7. '=' → logprob: -18.292999267578125
    8. '    ' → logprob: -18.355499267578125
    9. '```' → logprob: -18.355499267578125
    10. '２' → logprob: -18.480499267578125

Token 32: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03805365785956383
    2. ' ' → logprob: -3.2880537509918213
    3. '  ' → logprob: -12.038053512573242
    4. '   ' → logprob: -12.413053512573242
    5. '0' → logprob: -13.663053512573242
    6. '=' → logprob: -14.913053512573242
    7. '```' → logprob: -15.663053512573242
    8. '    ' → logprob: -16.288053512573242
    9. ' =' → logprob: -16.350553512573242
    10. '２' → logprob: -16.538053512573242

Token 33: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14592666923999786
    2. '
' → logprob: -2.1459267139434814
    3. '<|end|>' → logprob: -4.145926475524902
    4. '    
' → logprob: -6.895926475524902
    5. 'class' → logprob: -7.020926475524902
    6. ' ' → logprob: -8.020926475524902
    7. '  ' → logprob: -8.270926475524902
    8. '<|end|>' → logprob: -8.645926475524902
    9. '```' → logprob: -9.020926475524902
    10. '    ' → logprob: -10.145926475524902

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002173339482396841
    2. '
' → logprob: -7.00217342376709
    3. 'class' → logprob: -7.37717342376709
    4. '    
' → logprob: -8.50217342376709
    5. ' ' → logprob: -8.75217342376709
    6. '  ' → logprob: -9.25217342376709
    7. '<|end|>' → logprob: -9.62717342376709
    8. 'GREEN' → logprob: -10.37717342376709
    9. '```' → logprob: -10.75217342376709
    10. ' class' → logprob: -11.00217342376709

Token 35: ' Y' (ID: 865)
  Prédit: 'GREEN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'GREEN' → logprob: -0.3133139908313751
    2. ' GREEN' → logprob: -1.3133139610290527
    3. '.GREEN' → logprob: -10.938314437866211
    4. '_GREEN' → logprob: -11.188314437866211
    5. ' green' → logprob: -11.438314437866211
    6. 'Green' → logprob: -12.813314437866211
    7. '   ' → logprob: -13.063314437866211
    8. 'green' → logprob: -13.438314437866211
    9. ' ' → logprob: -13.563314437866211
    10. ' Green' → logprob: -14.313314437866211

Token 36: 'ELLOW' (ID: 75072)
  Prédit: 'ELLOW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ELLOW' → logprob: -0.013698216527700424
    2. 'E' → logprob: -4.513698101043701
    3. 'EL' → logprob: -6.013698101043701
    4. 'ELL' → logprob: -8.88869857788086
    5. 'ellow' → logprob: -9.76369857788086
    6. 'ES' → logprob: -13.76369857788086
    7. '   ' → logprob: -14.01369857788086
    8. '  ' → logprob: -14.63869857788086
    9. '_' → logprob: -14.63869857788086
    10. 'A' → logprob: -14.88869857788086

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020828247070312
    2. '=' → logprob: -2.350208282470703
    3. ' ' → logprob: -14.475208282470703
    4. '   ' → logprob: -14.600208282470703
    5. '3' → logprob: -15.725208282470703
    6. ',' → logprob: -15.850208282470703
    7. '  ' → logprob: -15.975208282470703
    8. ':' → logprob: -16.350208282470703
    9. '<|end|>' → logprob: -16.475208282470703
    10. ' =
' → logprob: -16.975208282470703

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.575940728187561
    2. '3' → logprob: -0.825940728187561
    3. ' ' → logprob: -14.45094108581543
    4. '   ' → logprob: -14.82594108581543
    5. '4' → logprob: -15.45094108581543
    6. '  ' → logprob: -15.82594108581543
    7. '```' → logprob: -17.32594108581543
    8. '۳' → logprob: -17.95094108581543
    9. '0' → logprob: -18.07594108581543
    10. '    ' → logprob: -18.45094108581543

Token 39: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0031781906727701426
    2. ' ' → logprob: -5.753178119659424
    3. '  ' → logprob: -15.628178596496582
    4. '   ' → logprob: -15.628178596496582
    5. '4' → logprob: -16.940677642822266
    6. '1' → logprob: -17.253177642822266
    7. '۳' → logprob: -17.753177642822266
    8. '３' → logprob: -18.065677642822266
    9. '```' → logprob: -18.128177642822266
    10. ' ' → logprob: -18.565677642822266

Token 40: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19894978404045105
    2. '

' → logprob: -1.8239498138427734
    3. '<|end|>' → logprob: -4.698949813842773
    4. 'class' → logprob: -5.073949813842773
    5. '```' → logprob: -6.823949813842773
    6. '   ' → logprob: -7.698949813842773
    7. '


' → logprob: -8.073949813842773
    8. ' class' → logprob: -8.198949813842773
    9. '<|end|>' → logprob: -8.198949813842773
    10. '\n' → logprob: -8.448949813842773

Token 41: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1842622309923172
    2. 'class' → logprob: -2.309262275695801
    3. '

' → logprob: -2.684262275695801
    4. '```' → logprob: -8.0592622756958
    5. ' class' → logprob: -9.3092622756958
    6. '


' → logprob: -9.3092622756958
    7. '
' → logprob: -10.0592622756958
    8. '' → logprob: -10.1842622756958
    9. '<|end|>' → logprob: -10.6842622756958
    10. ':' → logprob: -10.9342622756958

Token 42: ' _' (ID: 1175)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33051353693008423
    2. '@' → logprob: -1.3305134773254395
    3. '   ' → logprob: -4.4555134773254395
    4. ' def' → logprob: -6.3305134773254395
    5. ' ' → logprob: -7.0805134773254395
    6. '  ' → logprob: -7.0805134773254395
    7. '```' → logprob: -7.3305134773254395
    8. '    ' → logprob: -8.330513954162598
    9. ':' → logprob: -8.455513954162598
    10. ' @' → logprob: -9.080513954162598

Token 43: 'names' (ID: 23354)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.7989539504051208
    2. 'names' → logprob: -1.5489540100097656
    3. 'values' → logprob: -2.0489540100097656
    4. 'value' → logprob: -2.5489540100097656
    5. '_names' → logprob: -3.1739540100097656
    6. 'colors' → logprob: -3.6739540100097656
    7. 'color' → logprob: -3.9239540100097656
    8. '_values' → logprob: -5.173954010009766
    9. '_color' → logprob: -5.298954010009766
    10. 'N' → logprob: -5.298954010009766

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10024365782737732
    2. '=' → logprob: -2.35024356842041
    3. ':' → logprob: -10.35024356842041
    4. '_' → logprob: -13.97524356842041
    5. ' ' → logprob: -14.10024356842041
    6. ')' → logprob: -14.47524356842041
    7. '[' → logprob: -14.72524356842041
    8. '={}' → logprob: -14.72524356842041
    9. '  ' → logprob: -14.97524356842041
    10. '   ' → logprob: -15.22524356842041

Token 45: ' {
' (ID: 405)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.02397223562002182
    2. '{
' → logprob: -3.773972272872925
    3. ' {' → logprob: -7.273972034454346
    4. ' {
' → logprob: -11.273972511291504
    5. '["' → logprob: -11.648972511291504
    6. '['' → logprob: -11.898972511291504
    7. '{"' → logprob: -13.273972511291504
    8. '   ' → logprob: -14.023972511291504
    9. '{}' → logprob: -14.398972511291504
    10. '[' → logprob: -14.398972511291504

Token 46: '       ' (ID: 309)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7144189476966858
    2. '       ' → logprob: -0.8394189476966858
    3. '   ' → logprob: -2.714418888092041
    4. 'Color' → logprob: -4.839418888092041
    5. 'RED' → logprob: -5.714418888092041
    6. 'Red' → logprob: -7.214418888092041
    7. ' ' → logprob: -8.4644193649292
    8. 'COLOR' → logprob: -10.4644193649292
    9. ' RED' → logprob: -10.4644193649292
    10. '           ' → logprob: -10.9644193649292

Token 47: ' RED' (ID: 45309)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1050126850605011
    2. 'RED' (adapté à ' RED') → logprob: -3.1050126552581787
    3. '   ' → logprob: -3.6050126552581787
    4. 'Color' → logprob: -3.8550126552581787
    5. '       ' → logprob: -5.605012893676758
    6. 'Red' → logprob: -5.980012893676758
    7. ' ' → logprob: -9.355012893676758
    8. '           ' → logprob: -9.480012893676758
    9. 'COLOR' → logprob: -10.480012893676758
    10. ' RED' → logprob: -10.605012893676758

Token 48: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9385402993066236e-05
    2. ' :' → logprob: -10.875019073486328
    3. ',' → logprob: -15.625019073486328
    4. '   ' → logprob: -16.375019073486328
    5. ':red' → logprob: -16.750019073486328
    6. '=' → logprob: -17.625019073486328
    7. '：' → logprob: -18.500019073486328
    8. ':name' → logprob: -18.875019073486328
    9. ':return' → logprob: -19.000019073486328
    10. ':
' → logprob: -19.125019073486328

Token 49: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.716553807258606
    2. '"' → logprob: -1.091553807258606
    3. ' "' → logprob: -2.2165536880493164
    4. ' '' → logprob: -2.7165536880493164
    5. '   ' → logprob: -7.966553688049316
    6. '       ' → logprob: -8.216553688049316
    7. ' ' → logprob: -9.341553688049316
    8. ''s' → logprob: -10.966553688049316
    9. '    ' → logprob: -11.341553688049316
    10. ''"' → logprob: -11.341553688049316

Token 50: 'RED' (ID: 9935)
  Prédit: 'Red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Red' → logprob: -0.06316226720809937
    2. 'red' → logprob: -2.813162326812744
    3. 'RED' → logprob: -6.938162326812744
    4. ' Red' → logprob: -9.063161849975586
    5. ' red' → logprob: -9.688161849975586
    6. '"' → logprob: -11.188161849975586
    7. '_red' → logprob: -11.438161849975586
    8. '红' → logprob: -11.938161849975586
    9. 'R' → logprob: -12.438161849975586
    10. 'r' → logprob: -13.438161849975586

Token 51: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.20395146310329437
    2. '",' → logprob: -1.7039514780044556
    3. '"' → logprob: -6.453951358795166
    4. '",
' → logprob: -6.953951358795166
    5. '"
' → logprob: -13.078951835632324
    6. '",

' → logprob: -13.078951835632324
    7. ' ",
' → logprob: -14.328951835632324
    8. '   ' → logprob: -15.078951835632324
    9. '"}' → logprob: -16.078950881958008
    10. '',
' → logprob: -16.203950881958008

Token 52: '       ' (ID: 309)
  Prédit: 'BLUE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BLUE' → logprob: -0.7892550826072693
    2. '       ' → logprob: -1.039255142211914
    3. ' BLUE' → logprob: -1.664255142211914
    4. '   ' → logprob: -6.914255142211914
    5. ' ' → logprob: -7.539255142211914
    6. '_BLUE' → logprob: -8.289255142211914
    7. ' blue' → logprob: -8.414255142211914
    8. '     ' → logprob: -9.164255142211914
    9. '           ' → logprob: -9.289255142211914
    10. ' Blue' → logprob: -9.414255142211914

Token 53: ' BLUE' (ID: 110151)
  Prédit: 'BLUE'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BLUE' (adapté à ' BLUE') → logprob: -0.1270540952682495
    2. ' BLUE' → logprob: -2.127054214477539
    3. '   ' → logprob: -9.127054214477539
    4. ' ' → logprob: -12.002054214477539
    5. '       ' → logprob: -12.252054214477539
    6. 'BL' → logprob: -13.252054214477539
    7. '.BLUE' → logprob: -13.252054214477539
    8. '_BLUE' → logprob: -13.377054214477539
    9. ' blue' → logprob: -15.502054214477539
    10. '```' → logprob: -15.502054214477539

Token 54: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.957014556974173e-05
    2. ' :' → logprob: -9.625069618225098
    3. ',' → logprob: -13.500069618225098
    4. '   ' → logprob: -13.625069618225098
    5. '<|end|>' → logprob: -15.125069618225098
    6. '):' → logprob: -15.375069618225098
    7. ':
' → logprob: -16.25006866455078
    8. '       ' → logprob: -16.87506866455078
    9. ')' → logprob: -17.00006866455078
    10. ' ' → logprob: -17.12506866455078

Token 55: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.5761034488677979
    2. '"' → logprob: -0.8261034488677979
    3. ' ' → logprob: -9.201103210449219
    4. ''' → logprob: -9.951103210449219
    5. ' ' → logprob: -11.951103210449219
    6. '"B' → logprob: -12.326103210449219
    7. ' '' → logprob: -12.701103210449219
    8. 'BLUE' → logprob: -15.076103210449219
    9. ' BLUE' → logprob: -15.326103210449219
    10. '  ' → logprob: -15.576103210449219

Token 56: 'BLUE' (ID: 134698)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20216527581214905
    2. 'BLUE' → logprob: -1.7021652460098267
    3. ' BLUE' → logprob: -7.952165126800537
    4. ''' → logprob: -8.702165603637695
    5. ' "' → logprob: -8.827165603637695
    6. ' ' → logprob: -10.077165603637695
    7. '"B' → logprob: -10.577165603637695
    8. '.BLUE' → logprob: -12.327165603637695
    9. '_BLUE' → logprob: -12.577165603637695
    10. '   ' → logprob: -12.827165603637695

Token 57: '",
' (ID: 1150)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28517818450927734
    2. '",' → logprob: -2.0351781845092773
    3. ',
' → logprob: -2.4101781845092773
    4. '",
' → logprob: -3.7851781845092773
    5. ',"' → logprob: -6.410178184509277
    6. '   ' → logprob: -7.035178184509277
    7. ',",' → logprob: -7.035178184509277
    8. ' ,' → logprob: -7.660178184509277
    9. '       ' → logprob: -7.660178184509277
    10. '"' → logprob: -8.160178184509277

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01886506751179695
    2. 'Y' → logprob: -4.26886510848999
    3. ' Y' → logprob: -5.39386510848999
    4. '   ' → logprob: -9.018864631652832
    5. ' ' → logprob: -11.393864631652832
    6. '      ' → logprob: -12.768864631652832
    7. '```' → logprob: -13.018864631652832
    8. '     ' → logprob: -13.268864631652832
    9. '           ' → logprob: -13.393864631652832
    10. '	Y' → logprob: -13.518864631652832

Token 59: ' Y' (ID: 865)
  Prédit: ' Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.25359201431274414
    2. 'Y' (adapté à ' Y') → logprob: -1.5035920143127441
    3. '"' → logprob: -7.128592014312744
    4. '       ' → logprob: -7.878592014312744
    5. ' "' → logprob: -7.878592014312744
    6. ' ' → logprob: -10.003591537475586
    7. '   ' → logprob: -10.253591537475586
    8. '	Y' → logprob: -11.753591537475586
    9. ''' → logprob: -12.753591537475586
    10. '        ' → logprob: -12.753591537475586

Token 60: 'ELLOW' (ID: 75072)
  Prédit: 'ELLOW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ELLOW' → logprob: -0.0004154185007791966
    2. 'E' → logprob: -8.375415802001953
    3. 'EL' → logprob: -8.625415802001953
    4. 'ELL' → logprob: -13.000415802001953
    5. 'ellow' → logprob: -13.375415802001953
    6. '_' → logprob: -14.250415802001953
    7. '
' → logprob: -15.125415802001953
    8. '

' → logprob: -16.250415802001953
    9. 'ALLOW' → logprob: -16.250415802001953
    10. 'L' → logprob: -16.250415802001953

Token 61: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024025145103223622
    2. ' :' → logprob: -8.750240325927734
    3. '   ' → logprob: -9.500240325927734
    4. '}' → logprob: -13.500240325927734
    5. '}:' → logprob: -13.500240325927734
    6. '       ' → logprob: -13.750240325927734
    7. ',' → logprob: -14.375240325927734
    8. ' ' → logprob: -14.375240325927734
    9. '  ' → logprob: -14.625240325927734
    10. '):' → logprob: -14.875240325927734

Token 62: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.4743799567222595
    2. '"' → logprob: -0.9743799567222595
    3. ' ' → logprob: -8.224379539489746
    4. ' ' → logprob: -11.474379539489746
    5. ''' → logprob: -11.724379539489746
    6. '   ' → logprob: -12.349379539489746
    7. ' Y' → logprob: -12.349379539489746
    8. '       ' → logprob: -12.974379539489746
    9. '  ' → logprob: -13.474379539489746
    10. '    ' → logprob: -14.099379539489746

Token 63: 'Y' (ID: 56)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.11486336588859558
    2. 'Y' → logprob: -2.239863395690918
    3. ' Y' → logprob: -7.114863395690918
    4. ''' → logprob: -7.614863395690918
    5. ' "' → logprob: -7.739863395690918
    6. ' ' → logprob: -9.239863395690918
    7. '	Y' → logprob: -9.364863395690918
    8. '   ' → logprob: -9.989863395690918
    9. '  ' → logprob: -10.739863395690918
    10. '.YELLOW' → logprob: -11.614863395690918

Token 64: 'ELLOW' (ID: 75072)
  Prédit: 'ELLOW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ELLOW' → logprob: -0.0003160393098369241
    2. 'EL' → logprob: -8.25031566619873
    3. 'ellow' → logprob: -10.50031566619873
    4. 'E' → logprob: -11.62531566619873
    5. 'Y' → logprob: -11.62531566619873
    6. 'ELL' → logprob: -13.12531566619873
    7. '
' → logprob: -13.75031566619873
    8. 'L' → logprob: -14.25031566619873
    9. '"' → logprob: -14.50031566619873
    10. 'ALLOW' → logprob: -14.62531566619873

Token 65: '",
' (ID: 1150)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.048700008541345596
    2. '   ' → logprob: -3.0487000942230225
    3. ' }' → logprob: -9.423700332641602
    4. ',' → logprob: -11.173700332641602
    5. '}
' → logprob: -11.548700332641602
    6. ',
' → logprob: -12.423700332641602
    7. '}

' → logprob: -13.673700332641602
    8. '},' → logprob: -13.923700332641602
    9. '"}' → logprob: -13.923700332641602
    10. '
' → logprob: -15.173700332641602

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10028150677680969
    2. '}' → logprob: -2.3502814769744873
    3. ' }' → logprob: -9.600281715393066
    4. '}

' → logprob: -12.850281715393066
    5. '}
' → logprob: -13.100281715393066
    6. '       ' → logprob: -13.975281715393066
    7. '```' → logprob: -14.725281715393066
    8. '
' → logprob: -14.975281715393066
    9. '   ' → logprob: -15.475281715393066
    10. ' ' → logprob: -15.600281715393066

Token 67: ' }

' (ID: 758)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00139047356788069
    2. '   ' → logprob: -6.87639045715332
    3. '}

' (adapté à ' }

') → logprob: -8.12639045715332
    4. ' }' → logprob: -10.37639045715332
    5. '}
' → logprob: -10.50139045715332
    6. '}


' → logprob: -13.00139045715332
    7. ' ' → logprob: -14.87639045715332
    8. '}`' → logprob: -15.50139045715332
    9. '}

' → logprob: -15.62639045715332
    10. '```' → logprob: -16.00139045715332

Token 68: '   ' (ID: 271)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.6743707656860352
    2. '   ' → logprob: -0.7993707656860352
    3. 'def' → logprob: -3.799370765686035
    4. '
' → logprob: -4.799370765686035
    5. '    
' → logprob: -4.799370765686035
    6. '```' → logprob: -7.424370765686035
    7. ' @' → logprob: -7.799370765686035
    8. '@property' → logprob: -8.674370765686035
    9. '@
' → logprob: -8.674370765686035
    10. ' def' → logprob: -8.799370765686035

Token 69: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.00010628487507347018
    2. 'def' → logprob: -9.250105857849121
    3. ' @' → logprob: -11.750105857849121
    4. '@property' → logprob: -13.125105857849121
    5. '@n' → logprob: -16.625106811523438
    6. '   ' → logprob: -16.750106811523438
    7. '@
' → logprob: -17.000106811523438
    8. '@index' → logprob: -17.000106811523438
    9. '@get' → logprob: -17.125106811523438
    10. ' def' → logprob: -17.625106811523438

Token 70: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -0.062086109071969986
    2. 'staticmethod' → logprob: -3.0620861053466797
    3. 'property' → logprob: -4.31208610534668
    4. 'class' → logprob: -12.93708610534668
    5. 'abstract' → logprob: -17.31208610534668
    6. 'static' → logprob: -18.06208610534668
    7. ' property' → logprob: -19.31208610534668
    8. '@property' → logprob: -19.43708610534668
    9. 'clas' → logprob: -20.68708610534668
    10. 'aclass' → logprob: -21.18708610534668

Token 71: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012330456636846066
    2. '
' → logprob: -5.262330532073975
    3. ' def' → logprob: -5.387330532073975
    4. '   ' → logprob: -6.012330532073975
    5. ' ' → logprob: -11.387330055236816
    6. '<|end|>' → logprob: -11.762330055236816
    7. '```' → logprob: -11.762330055236816
    8. '    
' → logprob: -12.387330055236816
    9. '  ' → logprob: -12.637330055236816
    10. '(' → logprob: -13.137330055236816

Token 72: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003708396339789033
    2. ' def' → logprob: -5.753708362579346
    3. '
' → logprob: -7.878708362579346
    4. '   ' → logprob: -8.878708839416504
    5. ' ' → logprob: -12.253708839416504
    6. '```' → logprob: -12.878708839416504
    7. ':def' → logprob: -13.378708839416504
    8. '(' → logprob: -14.378708839416504
    9. '	def' → logprob: -14.503708839416504
    10. '_def' → logprob: -14.753708839416504

Token 73: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00044556602369993925
    2. '
' → logprob: -8.000445365905762
    3. ' def' → logprob: -9.125445365905762
    4. 'get' → logprob: -14.250445365905762
    5. 'name' → logprob: -15.500445365905762
    6. '
' → logprob: -15.500445365905762
    7. ' ' → logprob: -16.875446319580078
    8. '```' → logprob: -16.875446319580078
    9. '	def' → logprob: -17.750446319580078
    10. 'classmethod' → logprob: -17.750446319580078

Token 74: ' all' (ID: 722)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.027252456173300743
    2. ' name' → logprob: -3.652252435684204
    3. 'to' → logprob: -7.152252674102783
    4. ' to' → logprob: -9.777252197265625
    5. 'names' → logprob: -9.902252197265625
    6. 'get' → logprob: -11.027252197265625
    7. '_name' → logprob: -11.152252197265625
    8. 'nameof' → logprob: -11.402252197265625
    9. 'def' → logprob: -12.152252197265625
    10. 'value' → logprob: -12.777252197265625

Token 75: '(cls' (ID: 46446)
  Prédit: '_names'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_names' → logprob: -0.3440221846103668
    2. '_colors' → logprob: -1.7190221548080444
    3. '(cls' → logprob: -2.219022274017334
    4. '_values' → logprob: -7.219022274017334
    5. '_choices' → logprob: -7.344022274017334
    6. '_keys' → logprob: -7.594022274017334
    7. '_s' → logprob: -8.344021797180176
    8. '_' → logprob: -8.469021797180176
    9. 's' → logprob: -8.719021797180176
    10. '_codes' → logprob: -9.594021797180176

Token 76: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03490820527076721
    2. '(cls' → logprob: -3.4099082946777344
    3. 'cls' → logprob: -8.659908294677734
    4. '):
' → logprob: -8.659908294677734
    5. '):' → logprob: -8.659908294677734
    6. '()' → logprob: -8.784908294677734
    7. '_names' → logprob: -9.034908294677734
    8. ')(' → logprob: -9.034908294677734
    9. 's' → logprob: -9.659908294677734
    10. '_colors' → logprob: -9.784908294677734

Token 77: ' ->' (ID: 2747)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.004176221787929535
    2. '():' → logprob: -5.504176139831543
    3. '(' → logprob: -10.004176139831543
    4. ':' → logprob: -10.629176139831543
    5. ' (' → logprob: -11.504176139831543
    6. '()' → logprob: -12.004176139831543
    7. 'cls' → logprob: -12.504176139831543
    8. '   ' → logprob: -12.629176139831543
    9. '():
' → logprob: -13.629176139831543
    10. '):' → logprob: -13.754176139831543

Token 78: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.11301354318857193
    2. ' List' → logprob: -2.238013505935669
    3. 'list' → logprob: -8.86301326751709
    4. ' list' → logprob: -10.36301326751709
    5. 'Dict' → logprob: -12.36301326751709
    6. '[List' → logprob: -12.36301326751709
    7. ' ' → logprob: -13.23801326751709
    8. 'Tuple' → logprob: -13.23801326751709
    9. '	List' → logprob: -13.36301326751709
    10. 'int' → logprob: -13.86301326751709

Token 79: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00013393278641160578
    2. '[str' → logprob: -9.000133514404297
    3. '[' → logprob: -11.625133514404297
    4. 'int' → logprob: -13.625133514404297
    5. '<int' → logprob: -15.500133514404297
    6. '[Int' → logprob: -16.250133514404297
    7. '["' → logprob: -16.625133514404297
    8. '['' → logprob: -17.250133514404297
    9. '[class' → logprob: -18.000133514404297
    10. '(int' → logprob: -19.125133514404297

Token 80: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0033058011904358864
    2. ']:
' → logprob: -5.753305912017822
    3. '):' → logprob: -9.753305435180664
    4. ']' → logprob: -10.378305435180664
    5. ']:
' → logprob: -10.628305435180664
    6. ':' → logprob: -11.753305435180664
    7. '"]:' → logprob: -12.753305435180664
    8. '>:' → logprob: -13.753305435180664
    9. '):
' → logprob: -13.753305435180664
    10. '']:' → logprob: -14.253305435180664

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007040912751108408
    2. 'return' → logprob: -7.500704288482666
    3. ' return' → logprob: -8.875703811645508
    4. '   ' → logprob: -11.750703811645508
    5. '[' → logprob: -13.375703811645508
    6. '```' → logprob: -14.625703811645508
    7. '[]' → logprob: -14.875703811645508
    8. ':return' → logprob: -15.500703811645508
    9. '
' → logprob: -16.125703811645508
    10. '[
' → logprob: -16.375703811645508

Token 82: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.49270087480545044
    2. '       ' → logprob: -0.9927008748054504
    3. ' return' → logprob: -3.9927008152008057
    4. '   ' → logprob: -13.992700576782227
    5. '	return' → logprob: -15.367700576782227
    6. '```' → logprob: -15.867700576782227
    7. '      ' → logprob: -16.242700576782227
    8. 'eturn' → logprob: -16.242700576782227
    9. '     ' → logprob: -16.492700576782227
    10. '
' → logprob: -16.742700576782227

Token 83: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.08401505649089813
    2. '[' → logprob: -2.584015130996704
    3. ' [' → logprob: -5.834014892578125
    4. '[
' → logprob: -6.959014892578125
    5. '[class' → logprob: -7.334014892578125
    6. 'list' → logprob: -7.709014892578125
    7. ' list' → logprob: -9.709014892578125
    8. '[List' → logprob: -10.084014892578125
    9. '   ' → logprob: -11.459014892578125
    10. ' [
' → logprob: -11.834014892578125

Token 84: 'cls' (ID: 36071)
  Prédit: 'cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -3.292907877039397e-06
    2. ' cls' → logprob: -12.87500286102295
    3. '   ' → logprob: -14.87500286102295
    4. '(cls' → logprob: -15.25000286102295
    5. 'Color' → logprob: -17.625003814697266
    6. '       ' → logprob: -18.875003814697266
    7. 'Cls' → logprob: -19.250003814697266
    8. '.cls' → logprob: -19.250003814697266
    9. '```' → logprob: -19.250003814697266
    10. '           ' → logprob: -19.750003814697266

Token 85: '.RED' (ID: 72268)
  Prédit: '.RED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.RED' → logprob: -6.456358823925257e-05
    2. '.' → logprob: -10.000064849853516
    3. 'RED' → logprob: -11.375064849853516
    4. '.COLOR' → logprob: -12.500064849853516
    5. ' .' → logprob: -13.250064849853516
    6. '.RE' → logprob: -14.000064849853516
    7. '.Red' → logprob: -14.750064849853516
    8. '.BLUE' → logprob: -14.875064849853516
    9. '.READ' → logprob: -15.875064849853516
    10. '.GREEN' → logprob: -16.500064849853516

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020592445798683912
    2. ' ,' → logprob: -8.500205993652344
    3. ',
' → logprob: -13.250205993652344
    4. '   ' → logprob: -14.750205993652344
    5. 'cls' → logprob: -16.250205993652344
    6. ',class' → logprob: -16.625205993652344
    7. '(cls' → logprob: -17.000205993652344
    8. ',

' → logprob: -18.125205993652344
    9. ' cls' → logprob: -18.500205993652344
    10. ',,' → logprob: -18.875205993652344

Token 87: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.07889584451913834
    2. ' cls' → logprob: -2.5788958072662354
    3. '(cls' → logprob: -12.328895568847656
    4. '   ' → logprob: -14.078895568847656
    5. '       ' → logprob: -14.703895568847656
    6. '.cls' → logprob: -14.828895568847656
    7. '           ' → logprob: -17.203895568847656
    8. '_cls' → logprob: -17.203895568847656
    9. 'cl' → logprob: -17.453895568847656
    10. '
' → logprob: -17.453895568847656

Token 88: '.BLUE' (ID: 144649)
  Prédit: '.BLUE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.BLUE' → logprob: -0.00773179205134511
    2. ',' → logprob: -5.382731914520264
    3. '.' → logprob: -5.882731914520264
    4. '.RED' → logprob: -8.632731437683105
    5. '.BL' → logprob: -9.507731437683105
    6. 'BLUE' → logprob: -10.132731437683105
    7. ' ,' → logprob: -12.132731437683105
    8. '.Blue' → logprob: -12.132731437683105
    9. '.B' → logprob: -12.382731437683105
    10. '.YELLOW' → logprob: -12.632731437683105

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.839121826691553e-05
    2. ' ,' → logprob: -9.500078201293945
    3. ',
' → logprob: -12.875078201293945
    4. '   ' → logprob: -15.000078201293945
    5. 'cls' → logprob: -15.625078201293945
    6. ',

' → logprob: -16.125078201293945
    7. ',class' → logprob: -16.625078201293945
    8. ']' → logprob: -16.875078201293945
    9. '       ' → logprob: -17.500078201293945
    10. ' cls' → logprob: -17.875078201293945

Token 90: ' cls' (ID: 26133)
  Prédit: ' cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cls' → logprob: -0.1269347220659256
    2. 'cls' → logprob: -2.126934766769409
    3. '(cls' → logprob: -12.251935005187988
    4. '.cls' → logprob: -13.501935005187988
    5. '_cls' → logprob: -15.876935005187988
    6. ' ' → logprob: -16.126934051513672
    7. ' clazz' → logprob: -16.626934051513672
    8. '       ' → logprob: -16.876934051513672
    9. 'classmethod' → logprob: -16.876934051513672
    10. '           ' → logprob: -17.251934051513672

Token 91: '.YELLOW' (ID: 178128)
  Prédit: '.YELLOW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.YELLOW' → logprob: -0.022914063185453415
    2. 'Y' → logprob: -4.522913932800293
    3. '.Y' → logprob: -5.022913932800293
    4. ',' → logprob: -5.397913932800293
    5. ',Y' → logprob: -8.647913932800293
    6. '   ' → logprob: -8.772913932800293
    7. '       ' → logprob: -9.397913932800293
    8. '.RED' → logprob: -9.897913932800293
    9. '.' → logprob: -10.022913932800293
    10. ' ,' → logprob: -10.522913932800293

Token 92: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00032724079210311174
    2. ' ]' → logprob: -8.375327110290527
    3. '   ' → logprob: -9.375327110290527
    4. ']
' → logprob: -12.000327110290527
    5. '       ' → logprob: -12.750327110290527
    6. '()]' → logprob: -14.125327110290527
    7. ']

' → logprob: -14.250327110290527
    8. ')' → logprob: -14.625327110290527
    9. '`]' → logprob: -15.750327110290527
    10. '<|end|>' → logprob: -15.750327110290527

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10027793794870377
    2. 'class' → logprob: -3.100277900695801
    3. '
' → logprob: -3.225277900695801
    4. '<|end|>' → logprob: -4.975277900695801
    5. '```' → logprob: -6.725277900695801
    6. '    
' → logprob: -6.725277900695801
    7. '<|end|>' → logprob: -7.475277900695801
    8. ' ' → logprob: -9.1002779006958
    9. 'classmethod' → logprob: -9.2252779006958
    10. '  
' → logprob: -9.2252779006958

Token 94: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.01262960210442543
    2. '   ' → logprob: -4.387629508972168
    3. ' @' → logprob: -9.637629508972168
    4. 'class' → logprob: -10.512629508972168
    5. '@class' → logprob: -12.012629508972168
    6. 'classmethod' → logprob: -12.387629508972168
    7. '@index' → logprob: -12.637629508972168
    8. '@property' → logprob: -12.762629508972168
    9. '@end' → logprob: -13.387629508972168
    10. '@param' → logprob: -13.637629508972168

Token 95: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -0.0021568031515926123
    2. 'abstract' → logprob: -6.252156734466553
    3. 'staticmethod' → logprob: -8.502157211303711
    4. 'property' → logprob: -10.752157211303711
    5. 'class' → logprob: -12.502157211303711
    6. 'abc' → logprob: -19.00215721130371
    7. 'aclass' → logprob: -19.62715721130371
    8. ' abstract' → logprob: -19.87715721130371
    9. 'clas' → logprob: -21.00215721130371
    10. 'classname' → logprob: -21.00215721130371

Token 96: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5684637427330017
    2. '
' → logprob: -0.9434637427330017
    3. '   ' → logprob: -3.1934638023376465
    4. ' def' → logprob: -5.9434638023376465
    5. ':' → logprob: -7.9434638023376465
    6. ':def' → logprob: -8.693463325500488
    7. ' ' → logprob: -10.068463325500488
    8. '
' → logprob: -10.443463325500488
    9. '  ' → logprob: -11.068463325500488
    10. '(' → logprob: -11.318463325500488

Token 97: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2560531795024872
    2. '
' → logprob: -1.5060532093048096
    3. ' def' → logprob: -6.2560529708862305
    4. '   ' → logprob: -6.2560529708862305
    5. '(' → logprob: -9.50605297088623
    6. ':def' → logprob: -9.88105297088623
    7. ':' → logprob: -10.13105297088623
    8. '
' → logprob: -10.13105297088623
    9. ' ' → logprob: -11.50605297088623
    10. '(def' → logprob: -11.88105297088623

Token 98: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006838868372142315
    2. '
' → logprob: -5.381838798522949
    3. ' def' → logprob: -6.131838798522949
    4. '   ' → logprob: -10.25683879852295
    5. ' ' → logprob: -12.00683879852295
    6. '  ' → logprob: -14.88183879852295
    7. 'get' → logprob: -15.00683879852295
    8. '
' → logprob: -15.13183879852295
    9. 'name' → logprob: -15.13183879852295
    10. ':def' → logprob: -15.13183879852295

Token 99: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.42179906368255615
    2. ' name' → logprob: -1.2967990636825562
    3. 'def' → logprob: -3.9217991828918457
    4. 'names' → logprob: -3.9217991828918457
    5. ' def' → logprob: -4.046799182891846
    6. ' names' → logprob: -4.796799182891846
    7. '_name' → logprob: -6.546799182891846
    8. '   ' → logprob: -6.671799182891846
    9. '_names' → logprob: -7.296799182891846
    10. ' ' → logprob: -7.296799182891846

Token 100: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -10.750021934509277
    3. ' (' → logprob: -15.750021934509277
    4. 's' → logprob: -16.50002098083496
    5. '(clazz' → logprob: -16.50002098083496
    6. 'cls' → logprob: -16.87502098083496
    7. '(
' → logprob: -17.12502098083496
    8. '(cl' → logprob: -19.25002098083496
    9. '```' → logprob: -19.62502098083496
    10. '(c' → logprob: -19.87502098083496

Token 101: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.005233763717114925
    2. 'cls' → logprob: -5.8802337646484375
    3. ')(' → logprob: -6.6302337646484375
    4. ',' → logprob: -7.2552337646484375
    5. ')' → logprob: -8.130233764648438
    6. ' cls' → logprob: -10.255233764648438
    7. '(' → logprob: -10.755233764648438
    8. '   ' → logprob: -10.880233764648438
    9. ' (' → logprob: -11.380233764648438
    10. '
' → logprob: -12.255233764648438

Token 102: ' c' (ID: 274)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.14159591495990753
    2. 'value' → logprob: -2.6415958404541016
    3. ' color' → logprob: -2.8915958404541016
    4. ' value' → logprob: -5.391595840454102
    5. 'code' → logprob: -7.516595840454102
    6. 'cls' → logprob: -8.891595840454102
    7. 'c' → logprob: -11.391595840454102
    8. ' code' → logprob: -11.391595840454102
    9. 'val' → logprob: -11.641595840454102
    10. 'token' → logprob: -12.141595840454102

Token 103: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9353432655334473
    2. 'olor' → logprob: -0.9353432655334473
    3. ')' → logprob: -1.9353432655334473
    4. ':' → logprob: -2.9353432655334473
    5. '):
' → logprob: -4.310343265533447
    6. 'ol' → logprob: -6.310343265533447
    7. 'ode' → logprob: -6.810343265533447
    8. 'lass' → logprob: -7.935343265533447
    9. '):

' → logprob: -8.810342788696289
    10. 'ls' → logprob: -8.810342788696289

Token 104: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003488129877950996
    2. ' int' → logprob: -8.250349044799805
    3. ')' → logprob: -9.375349044799805
    4. '   ' → logprob: -13.250349044799805
    5. 'cls' → logprob: -15.250349044799805
    6. ':int' → logprob: -15.375349044799805
    7. ' ' → logprob: -15.625349044799805
    8. '):
' → logprob: -16.250349044799805
    9. '):' → logprob: -16.750349044799805
    10. '  ' → logprob: -17.000349044799805

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9040898880339228e-05
    2. '):' → logprob: -10.500028610229492
    3. ' )' → logprob: -14.250028610229492
    4. '):
' → logprob: -15.000028610229492
    5. ')->' → logprob: -16.125028610229492
    6. '   ' → logprob: -16.250028610229492
    7. ':' → logprob: -16.500028610229492
    8. '`)' → logprob: -17.250028610229492
    9. ')
' → logprob: -17.375028610229492
    10. '")' → logprob: -18.250028610229492

Token 106: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.8449009656906128
    2. ')' → logprob: -1.4699009656906128
    3. ' ->' → logprob: -1.7199009656906128
    4. ':' → logprob: -1.8449009656906128
    5. ')->' → logprob: -5.969901084899902
    6. '   ' → logprob: -7.719901084899902
    7. '):' → logprob: -8.719901084899902
    8. '>' → logprob: -9.469901084899902
    9. ':
' → logprob: -9.969901084899902
    10. ':return' → logprob: -11.344901084899902

Token 107: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4838707447052002
    2. ' str' → logprob: -0.9838707447052002
    3. 'Optional' → logprob: -5.108870506286621
    4. ' Optional' → logprob: -5.608870506286621
    5. ' ' → logprob: -11.358870506286621
    6. 'cls' → logprob: -11.733870506286621
    7. '   ' → logprob: -12.233870506286621
    8. '"' → logprob: -12.733870506286621
    9. '[str' → logprob: -12.733870506286621
    10. ' cls' → logprob: -13.233870506286621

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024502077139914036
    2. ':
' → logprob: -6.752449989318848
    3. '):' → logprob: -6.752449989318848
    4. ':return' → logprob: -9.627449989318848
    5. '):
' → logprob: -11.377449989318848
    6. ')' → logprob: -11.377449989318848
    7. '   ' → logprob: -11.752449989318848
    8. '       ' → logprob: -12.127449989318848
    9. ' :' → logprob: -12.377449989318848
    10. '():' → logprob: -13.627449989318848

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008776354603469372
    2. ' return' → logprob: -4.8837761878967285
    3. 'return' → logprob: -6.7587761878967285
    4. ':' → logprob: -13.008776664733887
    5. '   ' → logprob: -13.383776664733887
    6. ':return' → logprob: -13.508776664733887
    7. ' ' → logprob: -14.258776664733887
    8. '	return' → logprob: -14.508776664733887
    9. '	   ' → logprob: -14.883776664733887
    10. '      ' → logprob: -15.008776664733887

Token 110: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0010699660051614046
    2. ' return' → logprob: -7.001070022583008
    3. '       ' → logprob: -8.751070022583008
    4. '   ' → logprob: -15.501070022583008
    5. '	return' → logprob: -18.751070022583008
    6. '
' → logprob: -19.251070022583008
    7. 'try' → logprob: -20.376070022583008
    8. ' ' → logprob: -20.626070022583008
    9. 'if' → logprob: -20.876070022583008
    10. '     ' → logprob: -21.001070022583008

Token 111: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.014163747429847717
    2. ' cls' → logprob: -4.264163970947266
    3. '(cls' → logprob: -15.514163970947266
    4. 'cl' → logprob: -18.014163970947266
    5. '   ' → logprob: -18.264163970947266
    6. '.cls' → logprob: -18.889163970947266
    7. '_cls' → logprob: -19.389163970947266
    8. 'Cls' → logprob: -19.639163970947266
    9. 'c' → logprob: -20.139163970947266
    10. ' ' → logprob: -20.514163970947266

Token 112: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.5451681974809617e-05
    2. '_names' → logprob: -11.125015258789062
    3. '.' → logprob: -15.875015258789062
    4. ')._' → logprob: -16.125015258789062
    5. ' .' → logprob: -16.250015258789062
    6. '   ' → logprob: -16.750015258789062
    7. ']._' → logprob: -17.000015258789062
    8. '_n' → logprob: -17.000015258789062
    9. '_name' → logprob: -17.125015258789062
    10. '_' → logprob: -17.250015258789062

Token 113: 'names' (ID: 23354)
  Prédit: 'names'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'names' → logprob: -4.68022444692906e-05
    2. '_names' → logprob: -10.125046730041504
    3. 'name' → logprob: -12.750046730041504
    4. 'nam' → logprob: -13.000046730041504
    5. 'namen' → logprob: -14.875046730041504
    6. 'na' → logprob: -15.250046730041504
    7. '.names' → logprob: -15.375046730041504
    8. ' names' → logprob: -15.500046730041504
    9. '	names' → logprob: -15.500046730041504
    10. 'n' → logprob: -16.12504768371582

Token 114: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.02976866066455841
    2. '[c' → logprob: -3.529768705368042
    3. '.' → logprob: -11.279768943786621
    4. 'get' → logprob: -12.779768943786621
    5. '[' → logprob: -13.279768943786621
    6. '[get' → logprob: -14.654768943786621
    7. ' .' → logprob: -15.529768943786621
    8. '.c' → logprob: -15.779768943786621
    9. '[class' → logprob: -16.779767990112305
    10. '[g' → logprob: -16.779767990112305

Token 115: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0006290406454354525
    2. '(' → logprob: -7.37562894821167
    3. ' (' → logprob: -13.625629425048828
    4. '(
' → logprob: -13.750629425048828
    5. 'c' → logprob: -16.250629425048828
    6. '(

' → logprob: -16.375629425048828
    7. ')c' → logprob: -17.375629425048828
    8. '(cls' → logprob: -18.000629425048828
    9. '(code' → logprob: -18.125629425048828
    10. '(coder' → logprob: -18.375629425048828

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020960601046681404
    2. ')' → logprob: -4.145960807800293
    3. ',None' → logprob: -5.645960807800293
    4. 'None' → logprob: -7.270960807800293
    5. ' ,' → logprob: -7.770960807800293
    6. 'c' → logprob: -9.020960807800293
    7. ' None' → logprob: -9.895960807800293
    8. ',c' → logprob: -10.020960807800293
    9. '   ' → logprob: -10.770960807800293
    10. ')c' → logprob: -10.895960807800293

Token 117: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0024668595287948847
    2. '""' → logprob: -6.627466678619385
    3. '"<' → logprob: -7.877466678619385
    4. ' "' → logprob: -7.877466678619385
    5. ''' → logprob: -8.377467155456543
    6. ' "")' → logprob: -9.502467155456543
    7. '"?' → logprob: -10.502467155456543
    8. ')' → logprob: -11.377467155456543
    9. '")' → logprob: -12.002467155456543
    10. '''' → logprob: -12.377467155456543

Token 118: 'UNKNOWN' (ID: 129344)
  Prédit: 'UNKNOWN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UNKNOWN' → logprob: -0.018586505204439163
    2. 'Unknown' → logprob: -4.2685866355896
    3. '")' → logprob: -5.5185866355896
    4. '"' → logprob: -9.018586158752441
    5. '?' → logprob: -9.393586158752441
    6. 'UNK' → logprob: -9.893586158752441
    7. '_UNKNOWN' → logprob: -9.893586158752441
    8. 'None' → logprob: -10.268586158752441
    9. 'unknown' → logprob: -10.768586158752441
    10. '.UNKNOWN' → logprob: -11.518586158752441

Token 119: '")


' (ID: 57903)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -1.8789383830153383e-05
    2. ')' → logprob: -11.000019073486328
    3. ')")' → logprob: -14.125019073486328
    4. '")
' → logprob: -14.250019073486328
    5. '}")' → logprob: -15.125019073486328
    6. '"' → logprob: -15.625019073486328
    7. ' ")' → logprob: -16.750019073486328
    8. '')' → logprob: -17.750019073486328
    9. '")}' → logprob: -17.875019073486328
    10. '\")' → logprob: -18.000019073486328

Token 120: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00030400342075154185
    2. '
' → logprob: -8.125304222106934
    3. '

' → logprob: -12.125304222106934
    4. ' class' → logprob: -14.000304222106934
    5. '


' → logprob: -14.625304222106934
    6. '  
' → logprob: -15.375304222106934
    7. '```' → logprob: -15.500304222106934
    8. 'abstract' → logprob: -15.875304222106934
    9. 'from' → logprob: -16.125303268432617
    10. '@dat' → logprob: -16.375303268432617

Token 121: ' Character' (ID: 27668)
  Prédit: ' Shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Shape' → logprob: -0.007921267300844193
    2. ' Color' → logprob: -6.00792121887207
    3. ' Figure' → logprob: -6.00792121887207
    4. 'Shape' → logprob: -7.50792121887207
    5. ' Abstract' → logprob: -7.75792121887207
    6. ' Animal' → logprob: -7.88292121887207
    7. ' Player' → logprob: -8.13292121887207
    8. ' Vehicle' → logprob: -8.25792121887207
    9. ' Piece' → logprob: -8.38292121887207
    10. ' Token' → logprob: -9.00792121887207

Token 122: 'Sequence' (ID: 17333)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018852073117159307
    2. '(Abstract' → logprob: -8.625188827514648
    3. ' (' → logprob: -12.375188827514648
    4. '(
' → logprob: -12.875188827514648
    5. ':
' → logprob: -14.250188827514648
    6. ':' → logprob: -14.500188827514648
    7. ',' → logprob: -15.625188827514648
    8. '\(' → logprob: -16.00018882751465
    9. '```' → logprob: -16.00018882751465
    10. '(AST' → logprob: -16.50018882751465

Token 123: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.309382373117842e-05
    2. ' (' → logprob: -10.625033378601074
    3. '(Abstract' → logprob: -11.875033378601074
    4. '(
' → logprob: -14.250033378601074
    5. ':' → logprob: -14.375033378601074
    6. 'ABC' → logprob: -15.500033378601074
    7. ':
' → logprob: -15.875033378601074
    8. 'Abstract' → logprob: -16.875032424926758
    9. '   ' → logprob: -17.125032424926758
    10. 'abstract' → logprob: -17.500032424926758

Token 124: 'ABC' (ID: 44197)
  Prédit: ' ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.11303452402353287
    2. 'ABC' → logprob: -2.23803448677063
    3. ',' → logprob: -9.86303424835205
    4. '):
' → logprob: -10.11303424835205
    5. ' ' → logprob: -10.36303424835205
    6. ')' → logprob: -10.98803424835205
    7. '   ' → logprob: -11.23803424835205
    8. 'abc' → logprob: -11.61303424835205
    9. '
' → logprob: -11.86303424835205
    10. ' abc' → logprob: -11.98803424835205

Token 125: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014480947284027934
    2. '):
' → logprob: -6.626448154449463
    3. ')' → logprob: -9.251447677612305
    4. ':' → logprob: -11.251447677612305
    5. '):

' → logprob: -12.251447677612305
    6. ' ):' → logprob: -12.501447677612305
    7. ',' → logprob: -13.626447677612305
    8. '):
' → logprob: -13.626447677612305
    9. '[' → logprob: -14.876447677612305
    10. '[]):' → logprob: -14.876447677612305

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017439108341932297
    2. '
' → logprob: -4.642438888549805
    3. '):
' → logprob: -5.392438888549805
    4. '    
' → logprob: -6.517438888549805
    5. ':
' → logprob: -7.142438888549805
    6. ':' → logprob: -7.767438888549805
    7. '):' → logprob: -8.517438888549805
    8. '@' → logprob: -10.017438888549805
    9. ')' → logprob: -10.142438888549805
    10. ' 
' → logprob: -10.267438888549805

Token 127: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1372871845960617
    2. '@' → logprob: -2.887287139892578
    3. '
' → logprob: -3.387287139892578
    4. ' @' → logprob: -3.387287139892578
    5. '    
' → logprob: -5.762287139892578
    6. 'def' → logprob: -7.262287139892578
    7. ' def' → logprob: -7.262287139892578
    8. ' 
' → logprob: -8.387287139892578
    9. '   
' → logprob: -10.512287139892578
    10. '  
' → logprob: -10.512287139892578

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.397958368062973
    2. 'abstract' → logprob: -1.1479583978652954
    3. 'doc' → logprob: -5.772958278656006
    4. 'abc' → logprob: -6.522958278656006
    5. 'classmethod' → logprob: -6.897958278656006
    6. 'class' → logprob: -7.022958278656006
    7. 'init' → logprob: -7.147958278656006
    8. 'text' → logprob: -7.272958278656006
    9. '"""
' → logprob: -7.522958278656006
    10. '"""' → logprob: -7.772958278656006

Token 129: ' Abstract' (ID: 17413)
  Prédit: 'Abstract'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Abstract' (adapté à ' Abstract') → logprob: -0.6629495024681091
    2. 'Rep' → logprob: -1.537949562072754
    3. 'An' → logprob: -1.662949562072754
    4. 'A' → logprob: -3.662949562072754
    5. 'Base' → logprob: -4.037949562072754
    6. 'ABC' → logprob: -4.787949562072754
    7. '"""' → logprob: -4.912949562072754
    8. ' Abstract' → logprob: -5.412949562072754
    9. 'Represent' → logprob: -5.662949562072754
    10. 'abstract' → logprob: -6.162949562072754

Token 130: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.07725658267736435
    2. ' class' → logprob: -2.827256679534912
    3. '   ' → logprob: -5.327256679534912
    4. 'class' → logprob: -5.452256679534912
    5. ' Base' → logprob: -6.327256679534912
    6. 'Base' → logprob: -6.702256679534912
    7. ' sequence' → logprob: -6.702256679534912
    8. 'Sequence' → logprob: -6.702256679534912
    9. ' method' → logprob: -8.702256202697754
    10. '
' → logprob: -9.577256202697754

Token 131: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.13163913786411285
    2. ' class' → logprob: -2.131639242172241
    3. '
' → logprob: -6.006639003753662
    4. '   ' → logprob: -6.256639003753662
    5. 'method' → logprob: -8.50663948059082
    6. '    
' → logprob: -9.75663948059082
    7. 'classmethod' → logprob: -10.63163948059082
    8. ' ' → logprob: -11.88163948059082
    9. ' 
' → logprob: -12.13163948059082
    10. '  ' → logprob: -12.25663948059082

Token 132: ' representing' (ID: 25389)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6998127698898315
    2. '   ' → logprob: -0.8248127698898315
    3. ':' → logprob: -3.324812889099121
    4. '):' → logprob: -4.824812889099121
    5. '
' → logprob: -5.199812889099121
    6. '<|end|>' → logprob: -5.449812889099121
    7. '<|end|>' → logprob: -5.699812889099121
    8. ')' → logprob: -5.699812889099121
    9. 'for' → logprob: -6.324812889099121
    10. '):
' → logprob: -7.074812889099121

Token 133: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0864439606666565
    2. 'a' → logprob: -2.5864439010620117
    3. ' an' → logprob: -5.086443901062012
    4. ' sequences' → logprob: -7.961443901062012
    5. 'an' → logprob: -8.211443901062012
    6. ' ' → logprob: -8.336443901062012
    7. 'character' → logprob: -9.461443901062012
    8. 'sequence' → logprob: -9.586443901062012
    9. ' character' → logprob: -9.648943901062012
    10. ' the' → logprob: -9.773943901062012

Token 134: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.29839882254600525
    2. ' character' → logprob: -2.048398733139038
    3. 'sequence' → logprob: -2.173398733139038
    4. 'character' → logprob: -4.298398971557617
    5. ' color' → logprob: -7.298398971557617
    6. ' fixed' → logprob: -9.173398971557617
    7. 's' → logprob: -9.548398971557617
    8. '
' → logprob: -9.610898971557617
    9. 'color' → logprob: -9.735898971557617
    10. ' ' → logprob: -9.735898971557617

Token 135: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.04949846863746643
    2. '   ' → logprob: -3.0494985580444336
    3. 'of' → logprob: -7.674498558044434
    4. '    ' → logprob: -8.799498558044434
    5. ' that' → logprob: -9.674498558044434
    6. ')' → logprob: -10.049498558044434
    7. '<|end|>' → logprob: -10.299498558044434
    8. ' sequence' → logprob: -10.549498558044434
    9. '
' → logprob: -10.674498558044434
    10. '  ' → logprob: -11.049498558044434

Token 136: ' characters' (ID: 9862)
  Prédit: ' characters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' characters' → logprob: -0.6021991968154907
    2. ' colors' → logprob: -1.1021991968154907
    3. 'characters' → logprob: -2.852199077606201
    4. 'colors' → logprob: -3.227199077606201
    5. ' colored' → logprob: -4.477199077606201
    6. 'colored' → logprob: -5.727199077606201
    7. ' color' → logprob: -5.852199077606201
    8. 'color' → logprob: -6.102199077606201
    9. ' tokens' → logprob: -7.102199077606201
    10. 'tokens' → logprob: -7.789699077606201

Token 137: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8293230533599854
    2. '.' → logprob: -1.0793230533599854
    3. ' in' → logprob: -2.4543230533599854
    4. '
' → logprob: -3.5793230533599854
    5. ' with' → logprob: -3.7043230533599854
    6. ' and' → logprob: -4.329322814941406
    7. ':' → logprob: -4.454322814941406
    8. ' from' → logprob: -4.704322814941406
    9. ' for' → logprob: -4.829322814941406
    10. ',' → logprob: -5.204322814941406

Token 138: ' colors' (ID: 10803)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -1.299816370010376
    2. ' abstract' → logprob: -2.174816370010376
    3. ' an' → logprob: -2.299816370010376
    4. ' a' → logprob: -2.299816370010376
    5. ' colors' → logprob: -2.549816370010376
    6. ' fixed' → logprob: -2.674816370010376
    7. ' certain' → logprob: -3.174816370010376
    8. ' length' → logprob: -3.174816370010376
    9. 'color' → logprob: -3.549816370010376
    10. 'abstract' → logprob: -4.049816131591797

Token 139: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1741650402545929
    2. '   ' → logprob: -1.9241650104522705
    3. ':' → logprob: -5.17416524887085
    4. ' and' → logprob: -5.54916524887085
    5. '.
' → logprob: -6.67416524887085
    6. ',' → logprob: -6.92416524887085
    7. '.

' → logprob: -7.54916524887085
    8. 'and' → logprob: -7.92416524887085
    9. ' for' → logprob: -8.299164772033691
    10. ' in' → logprob: -9.299164772033691

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1953192502260208
    2. '
' → logprob: -1.8203192949295044
    3. '    
' → logprob: -4.195319175720215
    4. ')' → logprob: -8.945319175720215
    5. '

' → logprob: -9.570319175720215
    6. '```' → logprob: -9.695319175720215
    7. '    ' → logprob: -10.570319175720215
    8. ' 
' → logprob: -10.570319175720215
    9. '<|end|>' → logprob: -10.570319175720215
    10. '   
' → logprob: -11.820319175720215

Token 141: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5514470338821411
    2. '
' → logprob: -0.9264470338821411
    3. '    
' → logprob: -4.176446914672852
    4. '"""' → logprob: -5.176446914672852
    5. ')' → logprob: -5.926446914672852
    6. ' 
' → logprob: -6.551446914672852
    7. '```' → logprob: -7.051446914672852
    8. '

' → logprob: -7.426446914672852
    9. ' """' → logprob: -7.801446914672852
    10. '    ' → logprob: -9.051446914672852

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023477116599678993
    2. '@' → logprob: -3.773477077484131
    3. '    
' → logprob: -8.898477554321289
    4. '
' → logprob: -9.523477554321289
    5. ' @' → logprob: -11.273477554321289
    6. '@property' → logprob: -12.398477554321289
    7. '@index' → logprob: -13.648477554321289
    8. '@param' → logprob: -14.148477554321289
    9. 'def' → logprob: -14.273477554321289
    10. '@class' → logprob: -14.648477554321289

Token 143: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.0025038402527570724
    2. ' @' → logprob: -6.502503871917725
    3. 'def' → logprob: -7.502503871917725
    4. '   ' → logprob: -8.502503395080566
    5. '@property' → logprob: -8.502503395080566
    6. '@param' → logprob: -11.002503395080566
    7. '@index' → logprob: -11.502503395080566
    8. ' def' → logprob: -12.502503395080566
    9. '@class' → logprob: -12.627503395080566
    10. '@return' → logprob: -12.877503395080566

Token 144: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.0017119476106017828
    2. 'property' → logprob: -6.376711845397949
    3. 'staticmethod' → logprob: -12.25171184539795
    4. 'classmethod' → logprob: -12.75171184539795
    5. ' abstract' → logprob: -13.37671184539795
    6. 'ab' → logprob: -15.12671184539795
    7. 'abc' → logprob: -15.37671184539795
    8. 'abs' → logprob: -17.126712799072266
    9. '.abstract' → logprob: -18.001712799072266
    10. '

' → logprob: -19.001712799072266

Token 145: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00012737659562844783
    2. '_method' → logprob: -9.000127792358398
    3. 'classmethod' → logprob: -13.000127792358398
    4. 'staticmethod' → logprob: -14.375127792358398
    5. 'meth' → logprob: -15.000127792358398
    6. ' method' → logprob: -15.250127792358398
    7. 'def' → logprob: -15.500127792358398
    8. 'ethod' → logprob: -15.625127792358398
    9. '
' → logprob: -16.5001277923584
    10. 'm' → logprob: -18.2501277923584

Token 146: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007809023838490248
    2. 'def' → logprob: -4.882809162139893
    3. ' def' → logprob: -9.507808685302734
    4. '    
' → logprob: -9.757808685302734
    5. '   ' → logprob: -10.007808685302734
    6. '<|end|>' → logprob: -11.757808685302734
    7. '
' → logprob: -12.257808685302734
    8. '(def' → logprob: -12.882808685302734
    9. '<|end|>' → logprob: -13.257808685302734
    10. '  
' → logprob: -13.507808685302734

Token 147: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0023894449695944786
    2. 'def' → logprob: -6.377389430999756
    3. '    
' → logprob: -7.627389430999756
    4. '   ' → logprob: -9.502389907836914
    5. ' def' → logprob: -10.252389907836914
    6. '<|end|>' → logprob: -11.002389907836914
    7. '
' → logprob: -11.377389907836914
    8. '  
' → logprob: -11.502389907836914
    9. '(
' → logprob: -11.627389907836914
    10. ' 
' → logprob: -11.627389907836914

Token 148: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4770432710647583
    2. '
' → logprob: -0.9770432710647583
    3. ' def' → logprob: -5.852043151855469
    4. '   ' → logprob: -10.227043151855469
    5. 'method' → logprob: -10.477043151855469
    6. '    
' → logprob: -11.352043151855469
    7. 'classmethod' → logprob: -12.102043151855469
    8. 'property' → logprob: -13.477043151855469
    9. '
' → logprob: -13.977043151855469
    10. ' 
' → logprob: -14.352043151855469

Token 149: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.03795346990227699
    2. ' get' → logprob: -3.7879533767700195
    3. ' def' → logprob: -5.4129533767700195
    4. ' __' → logprob: -5.5379533767700195
    5. 'length' → logprob: -5.6629533767700195
    6. ' len' → logprob: -6.9129533767700195
    7. '__' → logprob: -7.6629533767700195
    8. ' append' → logprob: -7.7879533767700195
    9. ' size' → logprob: -9.03795337677002
    10. 'get' → logprob: -9.03795337677002

Token 150: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.755678961984813e-05
    2. 'self' → logprob: -9.625077247619629
    3. '(' → logprob: -11.500077247619629
    4. ' (' → logprob: -15.125077247619629
    5. '   ' → logprob: -15.500077247619629
    6. '(
' → logprob: -15.500077247619629
    7. 's' → logprob: -15.750077247619629
    8. '()' → logprob: -16.000078201293945
    9. ' self' → logprob: -16.375078201293945
    10. '
' → logprob: -16.875078201293945

Token 151: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06543319672346115
    2. 'self' → logprob: -2.8154332637786865
    3. '(self' → logprob: -5.690433025360107
    4. ' self' → logprob: -10.815433502197266
    5. '   ' → logprob: -10.940433502197266
    6. ',' → logprob: -11.190433502197266
    7. '):' → logprob: -11.565433502197266
    8. ' )' → logprob: -12.065433502197266
    9. '       ' → logprob: -12.690433502197266
    10. ':' → logprob: -12.940433502197266

Token 152: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.508884072303772
    2. ')' → logprob: -1.258884072303772
    3. '(self' → logprob: -2.5088839530944824
    4. ' ->' → logprob: -3.7588839530944824
    5. 'self' → logprob: -4.633883953094482
    6. '       ' → logprob: -8.25888442993164
    7. ')->' → logprob: -8.88388442993164
    8. '   ' → logprob: -9.75888442993164
    9. ':' → logprob: -11.75888442993164
    10. '(' → logprob: -12.75888442993164

Token 153: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4740894138813019
    2. ' int' → logprob: -0.9740893840789795
    3. '   ' → logprob: -11.849089622497559
    4. ' ' → logprob: -12.599089622497559
    5. ':int' → logprob: -14.099089622497559
    6. '	int' → logprob: -15.099089622497559
    7. '[int' → logprob: -15.099089622497559
    8. '  ' → logprob: -15.724089622497559
    9. '       ' → logprob: -16.474088668823242
    10. ' Optional' → logprob: -16.974088668823242

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005022055469453335
    2. '<|end|>' → logprob: -5.755022048950195
    3. '):' → logprob: -7.255022048950195
    4. ':
' → logprob: -7.755022048950195
    5. ')' → logprob: -8.255022048950195
    6. '():' → logprob: -8.755022048950195
    7. ':return' → logprob: -9.380022048950195
    8. '   ' → logprob: -9.505022048950195
    9. '<|end|>' → logprob: -9.880022048950195
    10. '
' → logprob: -10.630022048950195

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10207659751176834
    2. '<|end|>' → logprob: -2.852076530456543
    3. '
' → logprob: -3.477076530456543
    4. '   ' → logprob: -5.727076530456543
    5. ':' → logprob: -5.852076530456543
    6. '\n' → logprob: -6.977076530456543
    7. '    ' → logprob: -7.977076530456543
    8. '        
' → logprob: -8.977076530456543
    9. ' ' → logprob: -9.227076530456543
    10. ' 
' → logprob: -9.227076530456543

Token 156: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0086253322660923
    2. ' pass' → logprob: -5.258625507354736
    3. '...' → logprob: -6.133625507354736
    4. 'pass' (adapté à ' pass') → logprob: -6.758625507354736
    5. ' ...' → logprob: -11.008625030517578
    6. '   ' → logprob: -11.133625030517578
    7. '"""' → logprob: -11.258625030517578
    8. 'raise' → logprob: -12.633625030517578
    9. '    ' → logprob: -13.133625030517578
    10. '      ' → logprob: -13.133625030517578

Token 157: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07542097568511963
    2. '   ' → logprob: -3.32542085647583
    3. '<|end|>' → logprob: -3.57542085647583
    4. '

' → logprob: -5.32542085647583
    5. '    
' → logprob: -6.32542085647583
    6. '<|end|>' → logprob: -7.57542085647583
    7. ':' → logprob: -7.70042085647583
    8. '\n' → logprob: -7.95042085647583
    9. 'newline' → logprob: -8.200421333312988
    10. ' 
' → logprob: -8.825421333312988

Token 158: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1517910212278366
    2. '   ' → logprob: -2.1517910957336426
    3. '    
' → logprob: -4.776791095733643
    4. '<|end|>' → logprob: -5.026791095733643
    5. ' 
' → logprob: -5.151791095733643
    6. '\n' → logprob: -6.901791095733643
    7. '

' → logprob: -7.151791095733643
    8. '  
' → logprob: -7.151791095733643
    9. '<|end|>' → logprob: -8.151790618896484
    10. ':' → logprob: -8.401790618896484

Token 159: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.00017481597024016082
    2. '   ' → logprob: -8.875174522399902
    3. '@property' → logprob: -11.125174522399902
    4. ' @' → logprob: -11.625174522399902
    5. '    
' → logprob: -12.125174522399902
    6. '
' → logprob: -13.125174522399902
    7. 'def' → logprob: -13.250174522399902
    8. '@index' → logprob: -14.250174522399902
    9. '@
' → logprob: -14.500174522399902
    10. '@class' → logprob: -15.125174522399902

Token 160: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -4.11996734328568e-05
    2. 'property' → logprob: -10.750041007995605
    3. ' abstract' → logprob: -11.250041007995605
    4. 'classmethod' → logprob: -12.625041007995605
    5. 'staticmethod' → logprob: -12.750041007995605
    6. 'abc' → logprob: -14.875041007995605
    7. '.abstract' → logprob: -18.375041961669922
    8. 'optional' → logprob: -18.625041961669922
    9. 'abs' → logprob: -19.375041961669922
    10. 'Abstract' → logprob: -20.250041961669922

Token 161: 'method' (ID: 8697)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09798891097307205
    2. '   ' → logprob: -2.4729888439178467
    3. ' def' → logprob: -5.222989082336426
    4. 'method' → logprob: -6.347989082336426
    5. '	def' → logprob: -6.972989082336426
    6. '_method' → logprob: -7.722989082336426
    7. '    
' → logprob: -8.597989082336426
    8. ' ' → logprob: -9.597989082336426
    9. '
' → logprob: -9.972989082336426
    10. '_def' → logprob: -10.222989082336426

Token 162: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6071112155914307
    2. ' def' → logprob: -1.4821112155914307
    3. '
' → logprob: -1.7321112155914307
    4. '   ' → logprob: -2.9821112155914307
    5. ':def' → logprob: -8.982110977172852
    6. ':' → logprob: -9.357110977172852
    7. '	def' → logprob: -10.107110977172852
    8. '    
' → logprob: -10.732110977172852
    9. '(def' → logprob: -10.732110977172852
    10. ')' → logprob: -12.107110977172852

Token 163: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5210458040237427
    2. '   ' → logprob: -1.3960458040237427
    3. '
' → logprob: -2.271045684814453
    4. ' def' → logprob: -2.896045684814453
    5. '    
' → logprob: -10.396045684814453
    6. '	def' → logprob: -11.271045684814453
    7. ':def' → logprob: -11.771045684814453
    8. '
' → logprob: -12.146045684814453
    9. '    ' → logprob: -12.396045684814453
    10. ' 
' → logprob: -12.521045684814453

Token 164: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.018153922632336617
    2. ' def' → logprob: -4.018154144287109
    3. '
' → logprob: -13.01815414428711
    4. '   ' → logprob: -13.26815414428711
    5. ')' → logprob: -17.26815414428711
    6. 'de' → logprob: -17.76815414428711
    7. '	def' → logprob: -18.89315414428711
    8. '@' → logprob: -19.26815414428711
    9. 'from' → logprob: -19.26815414428711
    10. ':def' → logprob: -19.26815414428711

Token 165: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.11982472240924835
    2. 'get' → logprob: -2.8698246479034424
    3. ' color' → logprob: -3.8698246479034424
    4. ' char' → logprob: -4.2448248863220215
    5. 'char' → logprob: -5.2448248863220215
    6. ' def' → logprob: -5.4948248863220215
    7. ' colors' → logprob: -5.6198248863220215
    8. 'color' → logprob: -6.2448248863220215
    9. ' subse' → logprob: -6.4948248863220215
    10. ' at' → logprob: -6.6198248863220215

Token 166: '_color' (ID: 15576)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3101795017719269
    2. '_color' → logprob: -1.5601794719696045
    3. '_char' → logprob: -2.9351794719696045
    4. '_character' → logprob: -6.185179710388184
    5. 'self' → logprob: -8.185179710388184
    6. 'color' → logprob: -8.560179710388184
    7. 'char' → logprob: -8.810179710388184
    8. '_at' → logprob: -8.810179710388184
    9. '_colors' → logprob: -8.935179710388184
    10. '_sequence' → logprob: -9.185179710388184

Token 167: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015303362160921097
    2. '_at' → logprob: -6.751530170440674
    3. 's' → logprob: -8.251530647277832
    4. 'self' → logprob: -9.501530647277832
    5. 'at' → logprob: -11.751530647277832
    6. '(' → logprob: -12.501530647277832
    7. ' (' → logprob: -12.751530647277832
    8. '   ' → logprob: -13.001530647277832
    9. '_sequence' → logprob: -13.001530647277832
    10. 'es' → logprob: -14.626530647277832

Token 168: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006391934119164944
    2. 'self' → logprob: -5.506392002105713
    3. ')' → logprob: -7.006392002105713
    4. '_at' → logprob: -7.631392002105713
    5. '(' → logprob: -8.381391525268555
    6. ')(' → logprob: -8.506391525268555
    7. ' (' → logprob: -8.506391525268555
    8. '   ' → logprob: -9.006391525268555
    9. 'at' → logprob: -9.881391525268555
    10. '(index' → logprob: -10.381391525268555

Token 169: ' idx' (ID: 14016)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0055899410508573055
    2. ' index' → logprob: -5.755589962005615
    3. 'pos' → logprob: -6.755589962005615
    4. 'position' → logprob: -7.005589962005615
    5. 'idx' → logprob: -8.630589485168457
    6. 'self' → logprob: -9.005589485168457
    7. '   ' → logprob: -11.380589485168457
    8. 'i' → logprob: -11.630589485168457
    9. ' position' → logprob: -12.255589485168457
    10. ' pos' → logprob: -12.255589485168457

Token 170: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002693224814720452
    2. ')' → logprob: -8.375268936157227
    3. '   ' → logprob: -11.125268936157227
    4. 'self' → logprob: -11.375268936157227
    5. ':int' → logprob: -11.500268936157227
    6. ' :' → logprob: -14.500268936157227
    7. '):' → logprob: -14.500268936157227
    8. '(self' → logprob: -14.625268936157227
    9. ' ' → logprob: -15.250268936157227
    10. '  ' → logprob: -15.625268936157227

Token 171: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00399469630792737
    2. ' int' → logprob: -5.753994464874268
    3. ')' → logprob: -7.128994464874268
    4. '   ' → logprob: -11.628994941711426
    5. ':int' → logprob: -12.503994941711426
    6. '[int' → logprob: -13.878994941711426
    7. ' )' → logprob: -14.253994941711426
    8. ':' → logprob: -15.253994941711426
    9. '	int' → logprob: -15.878994941711426
    10. '):' → logprob: -16.00399398803711

Token 172: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2723104848410003e-05
    2. ' )' → logprob: -10.750022888183594
    3. ':' → logprob: -14.000022888183594
    4. '   ' → logprob: -15.875022888183594
    5. '):' → logprob: -16.750022888183594
    6. ' ' → logprob: -16.750022888183594
    7. '")' → logprob: -17.875022888183594
    8. '  ' → logprob: -18.375022888183594
    9. '`)' → logprob: -18.375022888183594
    10. ')->' → logprob: -18.875022888183594

Token 173: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007712150923907757
    2. ' ->' → logprob: -5.007712364196777
    3. ' )' → logprob: -7.132712364196777
    4. '->' → logprob: -8.882712364196777
    5. '   ' → logprob: -10.882712364196777
    6. ':' → logprob: -11.007712364196777
    7. ' ' → logprob: -11.132712364196777
    8. ')->' → logprob: -12.507712364196777
    9. ' ")' → logprob: -13.257712364196777
    10. '  ' → logprob: -13.382712364196777

Token 174: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20169702172279358
    2. ' int' → logprob: -1.7016969919204712
    3. 'Optional' → logprob: -8.70169734954834
    4. ' Optional' → logprob: -9.07669734954834
    5. '   ' → logprob: -13.20169734954834
    6. ' ' → logprob: -14.57669734954834
    7. ':int' → logprob: -14.82669734954834
    8. '	int' → logprob: -15.57669734954834
    9. '[int' → logprob: -15.70169734954834
    10. '  ' → logprob: -17.451696395874023

Token 175: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03237757086753845
    2. ')' → logprob: -4.03237771987915
    3. '):' → logprob: -4.90737771987915
    4. '<|end|>' → logprob: -5.15737771987915
    5. '   ' → logprob: -7.65737771987915
    6. ':
' → logprob: -8.657377243041992
    7. '<|end|>' → logprob: -9.282377243041992
    8. '       ' → logprob: -9.407377243041992
    9. ':return' → logprob: -9.782377243041992
    10. ')->' → logprob: -10.282377243041992

Token 176: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.49881041049957275
    2. ' pass' → logprob: -1.2488104104995728
    3. '       ' → logprob: -2.248810291290283
    4. '   ' → logprob: -7.998810291290283
    5. '	pass' → logprob: -10.373810768127441
    6. ' ' → logprob: -13.248810768127441
    7. '...' → logprob: -13.248810768127441
    8. '      ' → logprob: -13.748810768127441
    9. '    ' → logprob: -13.748810768127441
    10. '  ' → logprob: -13.873810768127441

Token 178: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033180462196469307
    2. '<|end|>' → logprob: -5.753317832946777
    3. '
' → logprob: -9.128317832946777
    4. '<|end|>' → logprob: -10.878317832946777
    5. '    
' → logprob: -11.628317832946777
    6. '```' → logprob: -13.003317832946777
    7. '...' → logprob: -15.253317832946777
    8. ')' → logprob: -15.378317832946777
    9. '  ' → logprob: -15.628317832946777
    10. 'class' → logprob: -15.878317832946777

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020282946527004242
    2. '
' → logprob: -4.395282745361328
    3. '<|end|>' → logprob: -4.895282745361328
    4. '    
' → logprob: -8.770282745361328
    5. '<|end|>' → logprob: -9.770282745361328
    6. '  ' → logprob: -11.270282745361328
    7. '```' → logprob: -11.895282745361328
    8. '    ' → logprob: -12.020282745361328
    9. '  
' → logprob: -12.770282745361328
    10. '\n' → logprob: -12.895282745361328

Token 180: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.12734486162662506
    2. '   ' → logprob: -2.127344846725464
    3. 'class' → logprob: -7.877345085144043
    4. ' @' → logprob: -11.377345085144043
    5. '@class' → logprob: -11.877345085144043
    6. '
' → logprob: -12.127345085144043
    7. '@property' → logprob: -12.877345085144043
    8. '@dat' → logprob: -13.252345085144043
    9. 'from' → logprob: -13.627345085144043
    10. '```' → logprob: -13.877345085144043

Token 181: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.0011580813443288207
    2. 'property' → logprob: -7.126158237457275
    3. 'abc' → logprob: -9.126157760620117
    4. 'staticmethod' → logprob: -9.126157760620117
    5. 'classmethod' → logprob: -9.251157760620117
    6. 'class' → logprob: -10.751157760620117
    7. ' abstract' → logprob: -12.001157760620117
    8. 'optional' → logprob: -12.626157760620117
    9. 'color' → logprob: -13.626157760620117
    10. 'character' → logprob: -13.751157760620117

Token 182: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.002641890896484256
    2. 'def' → logprob: -6.252641677856445
    3. '_method' → logprob: -7.252641677856445
    4. '   ' → logprob: -13.752641677856445
    5. ' def' → logprob: -13.752641677856445
    6. 'meth' → logprob: -14.127641677856445
    7. 'classmethod' → logprob: -14.502641677856445
    8. ' method' → logprob: -14.627641677856445
    9. '	method' → logprob: -15.502641677856445
    10. 'staticmethod' → logprob: -16.002641677856445

Token 183: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6388913989067078
    2. '   ' → logprob: -1.2638914585113525
    3. ' def' → logprob: -1.7638914585113525
    4. '
' → logprob: -4.013891220092773
    5. '    
' → logprob: -10.263891220092773
    6. '	def' → logprob: -10.388891220092773
    7. '  ' → logprob: -11.388891220092773
    8. ':' → logprob: -11.388891220092773
    9. ':def' → logprob: -11.388891220092773
    10. '
' → logprob: -11.763891220092773

Token 184: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11415298283100128
    2. '   ' → logprob: -2.8641529083251953
    3. ' def' → logprob: -2.9891529083251953
    4. '
' → logprob: -7.614152908325195
    5. '	def' → logprob: -11.489152908325195
    6. ':def' → logprob: -12.239152908325195
    7. '_def' → logprob: -12.614152908325195
    8. '  ' → logprob: -13.739152908325195
    9. ' ' → logprob: -13.864152908325195
    10. '    ' → logprob: -13.989152908325195

Token 185: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005237429868429899
    2. ' def' → logprob: -5.255237579345703
    3. '   ' → logprob: -13.005237579345703
    4. '
' → logprob: -13.630237579345703
    5. ' ' → logprob: -16.130237579345703
    6. 'Optional' → logprob: -16.630237579345703
    7. '```' → logprob: -17.380237579345703
    8. '  ' → logprob: -17.630237579345703
    9. 'ndef' → logprob: -17.880237579345703
    10. '	def' → logprob: -17.880237579345703

Token 186: ' set' (ID: 920)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.8681696057319641
    2. 'get' → logprob: -1.2431695461273193
    3. 'def' → logprob: -2.6181695461273193
    4. ' def' → logprob: -2.9931695461273193
    5. 'to' → logprob: -3.1181695461273193
    6. 'substring' → logprob: -3.4931695461273193
    7. ' subse' → logprob: -3.7431695461273193
    8. ' substring' → logprob: -4.243169784545898
    9. 'sub' → logprob: -4.368169784545898
    10. 'as' → logprob: -4.493169784545898

Token 187: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -3.7697225252486533e-06
    2. '_colors' → logprob: -13.375003814697266
    3. 'color' → logprob: -14.125003814697266
    4. '_' → logprob: -14.250003814697266
    5. '_col' → logprob: -14.750003814697266
    6. '_code' → logprob: -16.625003814697266
    7. '_value' → logprob: -16.750003814697266
    8. 'Color' → logprob: -17.250003814697266
    9. '_COLOR' → logprob: -17.250003814697266
    10. ' _' → logprob: -17.375003814697266

Token 188: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.1424973713001236e-05
    2. '(' → logprob: -10.500031471252441
    3. ' (' → logprob: -13.000031471252441
    4. 'self' → logprob: -13.500031471252441
    5. '   ' → logprob: -16.000030517578125
    6. '(
' → logprob: -16.750030517578125
    7. ' ' → logprob: -17.875030517578125
    8. ' self' → logprob: -17.875030517578125
    9. '```' → logprob: -18.250030517578125
    10. ',self' → logprob: -18.750030517578125

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013826959766447544
    2. '(self' → logprob: -4.388826847076416
    3. 'self' → logprob: -6.763826847076416
    4. ' ,' → logprob: -9.263827323913574
    5. ')' → logprob: -10.388827323913574
    6. ',self' → logprob: -11.013827323913574
    7. '   ' → logprob: -11.888827323913574
    8. ',
' → logprob: -12.513827323913574
    9. '(' → logprob: -12.638827323913574
    10. ' self' → logprob: -13.013827323913574

Token 190: ' idx' (ID: 14016)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05539445951581001
    2. ' self' → logprob: -2.930394411087036
    3. 'idx' → logprob: -7.930394649505615
    4. ' idx' → logprob: -9.180394172668457
    5. '   ' → logprob: -10.805394172668457
    6. ' ' → logprob: -11.555394172668457
    7. '
' → logprob: -12.055394172668457
    8. '       ' → logprob: -12.180394172668457
    9. '(self' → logprob: -13.305394172668457
    10. '  ' → logprob: -13.555394172668457

Token 191: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004869186959695071
    2. ',' → logprob: -8.125487327575684
    3. ':int' → logprob: -9.000487327575684
    4. '   ' → logprob: -10.250487327575684
    5. ' :' → logprob: -10.500487327575684
    6. ' ,' → logprob: -13.125487327575684
    7. '```' → logprob: -14.000487327575684
    8. '       ' → logprob: -14.625487327575684
    9. '  ' → logprob: -15.250487327575684
    10. '    ' → logprob: -15.375487327575684

Token 192: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0788973867893219
    2. ' int' → logprob: -2.578897476196289
    3. ':int' → logprob: -12.828897476196289
    4. '[int' → logprob: -13.453897476196289
    5. '   ' → logprob: -13.828897476196289
    6. ' ' → logprob: -13.953897476196289
    7. ',int' → logprob: -14.578897476196289
    8. '(int' → logprob: -15.078897476196289
    9. '=int' → logprob: -15.328897476196289
    10. ')' → logprob: -15.328897476196289

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3795937522663735e-05
    2. ' ,' → logprob: -11.12502384185791
    3. ')' → logprob: -11.75002384185791
    4. ',value' → logprob: -15.00002384185791
    5. '   ' → logprob: -15.12502384185791
    6. ',int' → logprob: -16.375022888183594
    7. ' ' → logprob: -16.625022888183594
    8. 'value' → logprob: -16.750022888183594
    9. 'self' → logprob: -16.875022888183594
    10. ',color' → logprob: -17.000022888183594

Token 194: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.253300279378891
    2. ' color' → logprob: -1.5033003091812134
    3. 'c' → logprob: -6.878300189971924
    4. ' c' → logprob: -8.503300666809082
    5. 'value' → logprob: -9.628300666809082
    6. '   ' → logprob: -10.628300666809082
    7. ' ' → logprob: -11.128300666809082
    8. ' value' → logprob: -11.378300666809082
    9. ' new' → logprob: -12.003300666809082
    10. 'new' → logprob: -12.503300666809082

Token 195: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017195509281009436
    2. ':int' → logprob: -8.750171661376953
    3. ')' → logprob: -11.625171661376953
    4. '):' → logprob: -12.375171661376953
    5. ' :' → logprob: -16.375171661376953
    6. '   ' → logprob: -16.750171661376953
    7. 'int' → logprob: -17.250171661376953
    8. '[int' → logprob: -17.875171661376953
    9. '_:' → logprob: -18.125171661376953
    10. ':Int' → logprob: -18.375171661376953

Token 196: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.048674799501895905
    2. ' int' → logprob: -3.0486748218536377
    3. ':' → logprob: -10.048674583435059
    4. ')' → logprob: -10.673674583435059
    5. ':int' → logprob: -10.923674583435059
    6. ' ' → logprob: -13.548674583435059
    7. '   ' → logprob: -13.923674583435059
    8. '[int' → logprob: -15.298674583435059
    9. '	int' → logprob: -15.923674583435059
    10. '  ' → logprob: -16.048675537109375

Token 197: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -14.000001907348633
    3. '):' → logprob: -14.500001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '`)' → logprob: -19.125001907348633
    6. ':' → logprob: -19.375001907348633
    7. ')->' → logprob: -19.375001907348633
    8. ' ' → logprob: -19.750001907348633
    9. '')' → logprob: -20.375001907348633
    10. '")' → logprob: -20.375001907348633

Token 198: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2009437382221222
    2. ')' → logprob: -1.8259437084197998
    3. '):' → logprob: -4.700943946838379
    4. ' ->' → logprob: -4.950943946838379
    5. '   ' → logprob: -5.950943946838379
    6. '->' → logprob: -6.575943946838379
    7. ')->' → logprob: -7.700943946838379
    8. ' :' → logprob: -8.950943946838379
    9. '       ' → logprob: -9.075943946838379
    10. ',' → logprob: -10.200943946838379

Token 199: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.011048289015889168
    2. 'None' → logprob: -4.511048316955566
    3. '   ' → logprob: -14.636048316955566
    4. ' ' → logprob: -18.38604736328125
    5. '(None' → logprob: -19.51104736328125
    6. ' ' → logprob: -19.63604736328125
    7. ' none' → logprob: -19.63604736328125
    8. '_None' → logprob: -19.76104736328125
    9. ' bool' → logprob: -20.76104736328125
    10. ' Optional' → logprob: -21.26104736328125

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004413028713315725
    2. '<|end|>' → logprob: -5.87941312789917
    3. ':
' → logprob: -6.50441312789917
    4. '   ' → logprob: -10.754412651062012
    5. ':return' → logprob: -10.754412651062012
    6. '):' → logprob: -11.004412651062012
    7. '<|end|>' → logprob: -11.254412651062012
    8. '
' → logprob: -11.504412651062012
    9. ':def' → logprob: -11.754412651062012
    10. ':void' → logprob: -12.379412651062012

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.520463228225708
    2. '<|end|>' → logprob: -1.020463228225708
    3. '   ' → logprob: -4.020462989807129
    4. ' pass' → logprob: -4.270462989807129
    5. 'pass' → logprob: -5.270462989807129
    6. '
' → logprob: -5.395462989807129
    7. ' ' → logprob: -6.895462989807129
    8. ' 
' → logprob: -7.020462989807129
    9. '<|end|>' → logprob: -7.520462989807129
    10. '    ' → logprob: -8.395462989807129

Token 202: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.3141249716281891
    2. 'pass' (adapté à ' pass') → logprob: -1.3141249418258667
    3. '       ' → logprob: -7.064125061035156
    4. '   ' → logprob: -12.439125061035156
    5. '	pass' → logprob: -12.564125061035156
    6. '
' → logprob: -17.314125061035156
    7. '    ' → logprob: -17.314125061035156
    8. ' ' → logprob: -17.564125061035156
    9. '_pass' → logprob: -17.939125061035156
    10. '  ' → logprob: -18.064125061035156

Token 203: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1219732016324997
    2. '
' → logprob: -2.8719732761383057
    3. '<|end|>' → logprob: -3.3719732761383057
    4. 'class' → logprob: -4.121973037719727
    5. '    
' → logprob: -5.746973037719727
    6. '<|end|>' → logprob: -5.996973037719727
    7. '    ' → logprob: -7.371973037719727
    8. '  ' → logprob: -8.246973037719727
    9. '

' → logprob: -8.496973037719727
    10. '@' → logprob: -8.871973037719727

Token 205: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.002964984392747283
    2. 'class' → logprob: -6.002964973449707
    3. 'def' → logprob: -8.627964973449707
    4. '@property' → logprob: -8.752964973449707
    5. '   ' → logprob: -10.252964973449707
    6. 'abstract' → logprob: -10.377964973449707
    7. ' @' → logprob: -10.752964973449707
    8. '@dat' → logprob: -11.252964973449707
    9. '@index' → logprob: -11.627964973449707
    10. '@class' → logprob: -11.752964973449707

Token 206: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.00017004783148877323
    2. 'property' → logprob: -8.87516975402832
    3. 'staticmethod' → logprob: -10.87516975402832
    4. 'classmethod' → logprob: -11.87516975402832
    5. 'abc' → logprob: -13.00016975402832
    6. 'dat' → logprob: -13.37516975402832
    7. ' abstract' → logprob: -15.25016975402832
    8. 'class' → logprob: -16.50016975402832
    9. 'optional' → logprob: -18.12516975402832
    10. '.abstract' → logprob: -18.37516975402832

Token 207: 'method' (ID: 8697)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029902756214141846
    2. 'method' → logprob: -3.654902696609497
    3. '   ' → logprob: -6.029902935028076
    4. '
' → logprob: -7.779902935028076
    5. '_method' → logprob: -8.029902458190918
    6. ' def' → logprob: -8.029902458190918
    7. '    
' → logprob: -9.654902458190918
    8. '	def' → logprob: -10.654902458190918
    9. '(def' → logprob: -11.779902458190918
    10. 'classmethod' → logprob: -12.529902458190918

Token 208: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0781242847442627
    2. '   ' → logprob: -2.9531242847442627
    3. ' def' → logprob: -4.203124046325684
    4. '
' → logprob: -4.828124046325684
    5. '	def' → logprob: -11.203124046325684
    6. '    
' → logprob: -13.078124046325684
    7. '  ' → logprob: -13.578124046325684
    8. '<|end|>' → logprob: -13.828124046325684
    9. ':def' → logprob: -13.828124046325684
    10. '<|end|>' → logprob: -14.078124046325684

Token 209: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.217501699924469
    2. '   ' → logprob: -1.7175016403198242
    3. '
' → logprob: -4.217501640319824
    4. ' def' → logprob: -6.717501640319824
    5. '	def' → logprob: -11.717501640319824
    6. '  ' → logprob: -13.092501640319824
    7. '```' → logprob: -13.842501640319824
    8. '
' → logprob: -14.217501640319824
    9. ' ' → logprob: -14.592501640319824
    10. '    
' → logprob: -14.717501640319824

Token 210: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004109034780412912
    2. ' def' → logprob: -5.504108905792236
    3. 'classmethod' → logprob: -11.254109382629395
    4. '   ' → logprob: -12.254109382629395
    5. 'from' → logprob: -12.879109382629395
    6. 'class' → logprob: -13.254109382629395
    7. '
' → logprob: -13.504109382629395
    8. 'property' → logprob: -13.629109382629395
    9. '@' → logprob: -13.754109382629395
    10. 'abstract' → logprob: -14.004109382629395

Token 211: ' clone' (ID: 28806)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.1948789358139038
    2. ' get' → logprob: -1.4448789358139038
    3. 'get' → logprob: -1.8198789358139038
    4. ' to' → logprob: -2.5698790550231934
    5. 'substring' → logprob: -3.4448790550231934
    6. 'as' → logprob: -3.5698790550231934
    7. ' subse' → logprob: -3.8198790550231934
    8. ' clone' → logprob: -3.8198790550231934
    9. 'clone' → logprob: -3.9448790550231934
    10. ' substring' → logprob: -4.069879055023193

Token 212: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.576873758807778e-05
    2. '(' → logprob: -10.375075340270996
    3. '()' → logprob: -10.375075340270996
    4. ' (' → logprob: -11.750075340270996
    5. 'self' → logprob: -12.625075340270996
    6. '(se' → logprob: -14.750075340270996
    7. ')' → logprob: -15.125075340270996
    8. '(sel' → logprob: -15.125075340270996
    9. '(s' → logprob: -15.250075340270996
    10. '(
' → logprob: -15.500075340270996

Token 213: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004722603189293295
    2. ',' → logprob: -7.750472068786621
    3. 'self' → logprob: -10.750472068786621
    4. '):' → logprob: -11.875472068786621
    5. '(self' → logprob: -12.250472068786621
    6. ' )' → logprob: -12.500472068786621
    7. '()' → logprob: -13.750472068786621
    8. '   ' → logprob: -14.125472068786621
    9. ')->' → logprob: -14.125472068786621
    10. '):
' → logprob: -14.750472068786621

Token 214: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.034729987382888794
    2. '->' → logprob: -4.159729957580566
    3. ' ->' → logprob: -4.909729957580566
    4. '(' → logprob: -5.284729957580566
    5. ')' → logprob: -5.534729957580566
    6. '()' → logprob: -6.659729957580566
    7. 'self' → logprob: -7.284729957580566
    8. ' (' → logprob: -9.409729957580566
    9. '   ' → logprob: -10.909729957580566
    10. ')->' → logprob: -10.909729957580566

Token 215: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5731996297836304
    2. ' '' → logprob: -1.1981996297836304
    3. '"' → logprob: -2.32319974899292
    4. ' "' → logprob: -3.32319974899292
    5. ''s' → logprob: -8.573199272155762
    6. ' ' → logprob: -8.823199272155762
    7. 'object' → logprob: -10.948199272155762
    8. ''S' → logprob: -10.948199272155762
    9. 'Optional' → logprob: -11.073199272155762
    10. 'Character' → logprob: -11.198199272155762

Token 216: 'Character' (ID: 14648)
  Prédit: 'Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: 0.0
    2. ' Character' → logprob: -17.875
    3. '<Character' → logprob: -18.0
    4. 'Characteristic' → logprob: -19.375
    5. 'character' → logprob: -20.25
    6. '   ' → logprob: -20.375
    7. '_character' → logprob: -20.875
    8. '(Character' → logprob: -21.0
    9. 'Color' → logprob: -22.0
    10. '.Character' → logprob: -22.25

Token 217: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: 0.0
    2. 'sequence' → logprob: -16.875
    3. ' Sequence' → logprob: -17.5
    4. 'Sequ' → logprob: -17.625
    5. '_sequence' → logprob: -18.0
    6. 'Sequences' → logprob: -19.0
    7. 'Character' → logprob: -19.375
    8. '_SEQUENCE' → logprob: -19.375
    9. ' sequence' → logprob: -19.5
    10. '.Sequence' → logprob: -20.625

Token 218: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03810529410839081
    2. '':' → logprob: -3.2881052494049072
    3. '':
' → logprob: -10.163105010986328
    4. '':
' → logprob: -11.663105010986328
    5. '':

' → logprob: -12.788105010986328
    6. '"' → logprob: -13.288105010986328
    7. ')'' → logprob: -13.413105010986328
    8. ']'' → logprob: -13.413105010986328
    9. ''>' → logprob: -13.538105010986328
    10. ' '' → logprob: -13.663105010986328

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26624274253845215
    2. ' pass' → logprob: -1.5162427425384521
    3. 'pass' → logprob: -4.516242980957031
    4. '<|end|>' → logprob: -5.766242980957031
    5. '   ' → logprob: -9.266242980957031
    6. '	pass' → logprob: -10.516242980957031
    7. '    ' → logprob: -11.391242980957031
    8. '...' → logprob: -12.391242980957031
    9. '<|end|>' → logprob: -12.766242980957031
    10. '      ' → logprob: -13.016242980957031

Token 220: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.26695188879966736
    2. '       ' → logprob: -1.7669519186019897
    3. ' pass' → logprob: -2.7669517993927
    4. '   ' → logprob: -8.016951560974121
    5. '...' → logprob: -8.391951560974121
    6. '	pass' → logprob: -10.641951560974121
    7. '      ' → logprob: -14.141951560974121
    8. '     ' → logprob: -14.266951560974121
    9. '```' → logprob: -14.891951560974121
    10. '  ' → logprob: -14.891951560974121

Token 221: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.07611142843961716
    2. '<|end|>' → logprob: -3.326111316680908
    3. '   ' → logprob: -3.576111316680908
    4. '
' → logprob: -4.826111316680908
    5. '<|end|>' → logprob: -7.451111316680908
    6. ' class' → logprob: -8.701111793518066
    7. '```' → logprob: -8.951111793518066
    8. '    
' → logprob: -8.951111793518066
    9. '

' → logprob: -9.326111793518066
    10. ')' → logprob: -9.451111793518066

Token 222: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -8.77627644513268e-06
    2. '
' → logprob: -11.750008583068848
    3. ' class' → logprob: -14.750008583068848
    4. '  
' → logprob: -16.000009536743164
    5. 'import' → logprob: -16.375009536743164
    6. '<class' → logprob: -17.000009536743164
    7. '    
' → logprob: -17.125009536743164
    8. '```' → logprob: -17.125009536743164
    9. ' 
' → logprob: -17.750009536743164
    10. '#' → logprob: -17.750009536743164

Token 223: ' Linear' (ID: 29092)
  Prédit: ' Simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Simple' → logprob: -1.121934175491333
    2. ' Colored' → logprob: -1.246934175491333
    3. ' Concrete' → logprob: -1.996934175491333
    4. 'Colored' → logprob: -2.371934175491333
    5. 'Simple' → logprob: -2.746934175491333
    6. 'Concrete' → logprob: -3.496934175491333
    7. ' List' → logprob: -4.246933937072754
    8. 'List' → logprob: -4.871933937072754
    9. ' String' → logprob: -5.121933937072754
    10. 'Color' → logprob: -5.246933937072754

Token 224: 'Character' (ID: 14648)
  Prédit: 'Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: -0.13190901279449463
    2. 'Sequence' → logprob: -2.131908893585205
    3. 'Color' → logprob: -5.756908893585205
    4. 'Colored' → logprob: -6.381908893585205
    5. 'Chain' → logprob: -9.256909370422363
    6. 'Segment' → logprob: -12.006909370422363
    7. 'Characteristic' → logprob: -13.131909370422363
    8. '<Character' → logprob: -13.381909370422363
    9. 'Char' → logprob: -13.381909370422363
    10. 'Gradient' → logprob: -14.006909370422363

Token 225: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -1.6240566083070007e-06
    2. 'Character' → logprob: -14.375001907348633
    3. ' Sequence' → logprob: -14.625001907348633
    4. 'sequence' → logprob: -15.500001907348633
    5. 'Sequ' → logprob: -15.875001907348633
    6. ' sequence' → logprob: -16.250001907348633
    7. '_sequence' → logprob: -17.250001907348633
    8. 'Chain' → logprob: -17.375001907348633
    9. 'Segment' → logprob: -17.875001907348633
    10. 'Sequences' → logprob: -17.875001907348633

Token 226: '(Character' (ID: 129018)
  Prédit: '(Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: -0.01848130114376545
    2. ':' → logprob: -4.393481254577637
    3. '(' → logprob: -5.143481254577637
    4. '):' → logprob: -9.893481254577637
    5. ':
' → logprob: -10.893481254577637
    6. '(List' → logprob: -11.268481254577637
    7. '(Char' → logprob: -12.018481254577637
    8. '():' → logprob: -12.143481254577637
    9. '<Character' → logprob: -12.268481254577637
    10. ' :' → logprob: -12.268481254577637

Token 227: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -3.128163257315464e-07
    2. 'sequence' → logprob: -16.125
    3. ' Sequence' → logprob: -16.5
    4. 'Sequ' → logprob: -17.25
    5. '_sequence' → logprob: -17.75
    6. 'Sequences' → logprob: -17.875
    7. ')' → logprob: -18.5
    8. '```' → logprob: -19.5
    9. '.Sequence' → logprob: -19.875
    10. '_SEQUENCE' → logprob: -19.875

Token 228: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025000330060720444
    2. '):
' → logprob: -6.002500057220459
    3. ':' → logprob: -11.6274995803833
    4. ' ):' → logprob: -11.8774995803833
    5. ')' → logprob: -12.8774995803833
    6. '):
' → logprob: -13.1274995803833
    7. ']:' → logprob: -13.5024995803833
    8. '   ' → logprob: -13.6274995803833
    9. '):

' → logprob: -14.6274995803833
    10. '[]):' → logprob: -14.7524995803833

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00028946425300091505
    2. 'def' → logprob: -8.625289916992188
    3. ' def' → logprob: -9.875289916992188
    4. ':' → logprob: -10.000289916992188
    5. ':
' → logprob: -11.875289916992188
    6. '    
' → logprob: -12.625289916992188
    7. '):
' → logprob: -13.750289916992188
    8. ')' → logprob: -14.125289916992188
    9. ':def' → logprob: -15.125289916992188
    10. '
' → logprob: -15.250289916992188

Token 230: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09448543190956116
    2. '   ' → logprob: -2.7194855213165283
    3. ' def' → logprob: -3.7194855213165283
    4. '_def' → logprob: -14.09448528289795
    5. '	def' → logprob: -14.21948528289795
    6. '
' → logprob: -14.96948528289795
    7. '"""' → logprob: -15.21948528289795
    8. ')' → logprob: -15.34448528289795
    9. '    
' → logprob: -15.59448528289795
    10. ' ' → logprob: -15.59448528289795

Token 231: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5664013028144836
    2. ' def' → logprob: -1.5664012432098389
    3. '"""
' → logprob: -1.9414012432098389
    4. '   ' → logprob: -3.066401243209839
    5. ' """
' → logprob: -3.441401243209839
    6. '"""' → logprob: -6.691401481628418
    7. ' """' → logprob: -9.691401481628418
    8. ')' → logprob: -10.566401481628418
    9. 'class' → logprob: -10.566401481628418
    10. ' ' → logprob: -10.566401481628418

Token 232: ' Concrete' (ID: 47600)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05493035539984703
    2. ' def' → logprob: -2.9299304485321045
    3. '"""
' → logprob: -10.804930686950684
    4. ' """
' → logprob: -11.179930686950684
    5. '"""' → logprob: -12.179930686950684
    6. 'class' → logprob: -12.304930686950684
    7. '   ' → logprob: -13.429930686950684
    8. 'A' → logprob: -14.429930686950684
    9. 'Def' → logprob: -15.054930686950684
    10. ' """' → logprob: -15.304930686950684

Token 233: ' character' (ID: 5855)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4341532588005066
    2. ' class' → logprob: -1.0591533184051514
    3. ' implementation' → logprob: -5.809153079986572
    4. '   ' → logprob: -6.684153079986572
    5. 'def' → logprob: -7.309153079986572
    6. ' def' → logprob: -8.30915355682373
    7. 'implementation' → logprob: -9.18415355682373
    8. ' sequence' → logprob: -9.93415355682373
    9. ':' → logprob: -10.05915355682373
    10. 'sequence' → logprob: -10.18415355682373

Token 234: ' sequence' (ID: 16281)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2940746545791626
    2. 'sequence' → logprob: -1.6690746545791626
    3. ' sequence' → logprob: -3.169074535369873
    4. ' class' → logprob: -3.794074535369873
    5. '_sequence' → logprob: -6.919074535369873
    6. '   ' → logprob: -7.669074535369873
    7. 'Sequence' → logprob: -8.169075012207031
    8. ' implementation' → logprob: -10.169075012207031
    9. ':' → logprob: -11.669075012207031
    10. '```' → logprob: -12.044075012207031

Token 235: ' modeled' (ID: 113888)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8476518392562866
    2. '   ' → logprob: -1.0976518392562866
    3. ':
' → logprob: -1.4726518392562866
    4. ' with' → logprob: -5.347651958465576
    5. '):' → logprob: -6.722651958465576
    6. '):
' → logprob: -6.972651958465576
    7. ' that' → logprob: -7.972651958465576
    8. ' class' → logprob: -8.597651481628418
    9. 'def' → logprob: -8.722651481628418
    10. 'with' → logprob: -8.722651481628418

Token 236: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.3626970052719116
    2. 'as' → logprob: -2.112697124481201
    3. '   ' → logprob: -2.237697124481201
    4. ' on' → logprob: -3.612697124481201
    5. 'on' → logprob: -3.737697124481201
    6. ' after' → logprob: -4.237697124481201
    7. 'after' → logprob: -4.737697124481201
    8. ':' → logprob: -7.737697124481201
    9. ',' → logprob: -7.862697124481201
    10. ')' → logprob: -8.487696647644043

Token 237: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20161886513233185
    2. 'a' → logprob: -1.7016189098358154
    3. ' an' → logprob: -9.326619148254395
    4. ' ' → logprob: -10.201619148254395
    5. ' linear' → logprob: -11.076619148254395
    6. '   ' → logprob: -11.326619148254395
    7. 'an' → logprob: -11.701619148254395
    8. ' list' → logprob: -11.701619148254395
    9. 'List' → logprob: -12.326619148254395
    10. ' characters' → logprob: -12.451619148254395

Token 238: ' linear' (ID: 23876)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.588708221912384
    2. ' linear' → logprob: -0.963708221912384
    3. 'linear' → logprob: -3.4637081623077393
    4. 'list' → logprob: -3.4637081623077393
    5. ' single' → logprob: -8.83870792388916
    6. ' sequence' → logprob: -8.96370792388916
    7. 'string' → logprob: -9.21370792388916
    8. 'single' → logprob: -9.46370792388916
    9. ' contiguous' → logprob: -9.71370792388916
    10. ' simple' → logprob: -9.83870792388916

Token 239: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.12359754741191864
    2. ' array' → logprob: -2.6235976219177246
    3. ' sequence' → logprob: -3.8735976219177246
    4. 'array' → logprob: -4.498597621917725
    5. 'list' → logprob: -4.873597621917725
    6. 'sequence' → logprob: -5.623597621917725
    7. '_list' → logprob: -8.623597145080566
    8. 'List' → logprob: -9.998597145080566
    9. '[' → logprob: -10.248597145080566
    10. 'class' → logprob: -10.248597145080566

Token 240: '.
' (ID: 558)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1957751214504242
    2. '   ' → logprob: -1.8207751512527466
    3. 'of' → logprob: -4.195775032043457
    4. '.' → logprob: -8.320775032043457
    5. '[' → logprob: -8.445775032043457
    6. '[str' → logprob: -8.695775032043457
    7. ':' → logprob: -9.945775032043457
    8. ' ' → logprob: -10.195775032043457
    9. '  ' → logprob: -10.195775032043457
    10. ',' → logprob: -10.695775032043457

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07433271408081055
    2. '
' → logprob: -2.6993327140808105
    3. '    
' → logprob: -5.5743327140808105
    4. 'def' → logprob: -7.6993327140808105
    5. ' def' → logprob: -9.949333190917969
    6. ')' → logprob: -10.074333190917969
    7. ' 
' → logprob: -11.074333190917969
    8. '    ' → logprob: -11.449333190917969
    9. '```' → logprob: -12.074333190917969
    10. '

' → logprob: -12.324333190917969

Token 242: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5440282821655273
    2. '
' → logprob: -0.9190282821655273
    3. '    
' → logprob: -4.669028282165527
    4. 'def' → logprob: -4.919028282165527
    5. ' def' → logprob: -5.794028282165527
    6. ')' → logprob: -7.919028282165527
    7. ' 
' → logprob: -8.544028282165527
    8. '    ' → logprob: -8.669028282165527
    9. '

' → logprob: -9.419028282165527
    10. '```' → logprob: -9.419028282165527

Token 243: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5549649596214294
    2. '   ' → logprob: -1.0549650192260742
    3. ' def' → logprob: -2.554965019226074
    4. ' ' → logprob: -13.554965019226074
    5. '    ' → logprob: -13.554965019226074
    6. ' _' → logprob: -13.679965019226074
    7. '    
' → logprob: -14.054965019226074
    8. '  ' → logprob: -14.179965019226074
    9. '__' → logprob: -14.554965019226074
    10. '```' → logprob: -14.554965019226074

Token 244: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00020950057660229504
    2. ' def' → logprob: -8.50020980834961
    3. '   ' → logprob: -12.25020980834961
    4. '_def' → logprob: -14.00020980834961
    5. '__' → logprob: -15.37520980834961
    6. '	def' → logprob: -17.62520980834961
    7. '_' → logprob: -17.75020980834961
    8. '
' → logprob: -17.87520980834961
    9. '_DEF' → logprob: -17.87520980834961
    10. 'class' → logprob: -18.25020980834961

Token 245: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0019317318219691515
    2. '__' → logprob: -6.751931667327881
    3. ' def' → logprob: -7.251931667327881
    4. 'def' → logprob: -9.876932144165039
    5. '_init' → logprob: -14.876932144165039
    6. ' init' → logprob: -14.876932144165039
    7. 'init' → logprob: -15.126932144165039
    8. ' ' → logprob: -16.75193214416504
    9. ' _' → logprob: -17.37693214416504
    10. '.__' → logprob: -17.50193214416504

Token 246: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'inite' → logprob: -18.5
    3. ' init' → logprob: -20.25
    4. 'ini' → logprob: -20.75
    5. 'innit' → logprob: -21.125
    6. 'def' → logprob: -22.25
    7. '_init' → logprob: -22.25
    8. '	init' → logprob: -22.375
    9. 'in' → logprob: -22.625
    10. 'import' → logprob: -23.25

Token 247: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.011117856949567795
    2. '(self' → logprob: -4.511117935180664
    3. '__' → logprob: -9.761117935180664
    4. '_(' → logprob: -11.886117935180664
    5. '__(
' → logprob: -12.761117935180664
    6. ' (' → logprob: -13.511117935180664
    7. '   ' → logprob: -14.636117935180664
    8. 'self' → logprob: -15.011117935180664
    9. '(' → logprob: -15.386117935180664
    10. ' ' → logprob: -16.636117935180664

Token 248: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010365027701482177
    2. ' self' → logprob: -6.876036643981934
    3. '
' → logprob: -13.876036643981934
    4. ',' → logprob: -14.376036643981934
    5. '   ' → logprob: -14.501036643981934
    6. '       ' → logprob: -14.501036643981934
    7. ')' → logprob: -14.626036643981934
    8. 'length' → logprob: -15.501036643981934
    9. ' ' → logprob: -15.876036643981934
    10. '(self' → logprob: -16.376035690307617

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021660826168954372
    2. 'self' → logprob: -6.627166271209717
    3. '__,' → logprob: -7.377166271209717
    4. '__(' → logprob: -9.127165794372559
    5. ' ,' → logprob: -10.252165794372559
    6. '_,' → logprob: -10.877165794372559
    7. '(self' → logprob: -11.127165794372559
    8. '   ' → logprob: -11.252165794372559
    9. '       ' → logprob: -11.627165794372559
    10. '__' → logprob: -12.502165794372559

Token 250: ' colors' (ID: 10803)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4444960653781891
    2. 'colors' → logprob: -1.4444960355758667
    3. 'self' → logprob: -3.1944961547851562
    4. 'chars' → logprob: -3.4444961547851562
    5. ' length' → logprob: -3.6944961547851562
    6. 'size' → logprob: -4.319496154785156
    7. ' colors' → logprob: -4.944496154785156
    8. 'data' → logprob: -6.444496154785156
    9. ' chars' → logprob: -6.944496154785156
    10. ' size' → logprob: -7.194496154785156

Token 251: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.44706009957008e-05
    2. '):' → logprob: -9.62508487701416
    3. '_:' → logprob: -11.12508487701416
    4. '=None' → logprob: -13.50008487701416
    5. ' :' → logprob: -14.12508487701416
    6. '=' → logprob: -14.62508487701416
    7. '   ' → logprob: -14.87508487701416
    8. '):
' → logprob: -15.37508487701416
    9. ')' → logprob: -15.75008487701416
    10. '__:' → logprob: -15.87508487701416

Token 252: ' List' (ID: 2655)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.5908583402633667
    2. 'List' → logprob: -0.8408583402633667
    3. ' Optional' → logprob: -4.340858459472656
    4. ' List' → logprob: -6.340858459472656
    5. '   ' → logprob: -10.965858459472656
    6. ' ' → logprob: -14.590858459472656
    7. '[List' → logprob: -14.840858459472656
    8. '       ' → logprob: -14.965858459472656
    9. '	List' → logprob: -14.965858459472656
    10. 'list' → logprob: -15.090858459472656

Token 253: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -5.512236498361744e-07
    2. 'int' → logprob: -15.000000953674316
    3. '[' → logprob: -16.25
    4. '<int' → logprob: -17.125
    5. '   ' → logprob: -17.875
    6. ' [' → logprob: -18.375
    7. ':int' → logprob: -18.875
    8. '[Int' → logprob: -19.875
    9. ')' → logprob: -20.25
    10. '=int' → logprob: -20.375

Token 254: ']):
' (ID: 51989)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5198028683662415
    2. ']):' → logprob: -1.2698028087615967
    3. ']):
' → logprob: -3.2698028087615967
    4. ']' → logprob: -3.2698028087615967
    5. ')' → logprob: -3.5198028087615967
    6. '):' → logprob: -4.019803047180176
    7. ']:' → logprob: -7.894803047180176
    8. '):
' → logprob: -8.394803047180176
    9. ':' → logprob: -8.519803047180176
    10. ']=' → logprob: -11.144803047180176

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.456358823925257e-05
    2. 'self' → logprob: -10.500064849853516
    3. ' self' → logprob: -10.625064849853516
    4. ':' → logprob: -11.750064849853516
    5. ',' → logprob: -12.625064849853516
    6. '   ' → logprob: -15.000064849853516
    7. '):
' → logprob: -15.250064849853516
    8. '```' → logprob: -15.250064849853516
    9. ')' → logprob: -15.625064849853516
    10. ':
' → logprob: -16.250064849853516

Token 256: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.215708926320076
    2. ' self' → logprob: -2.2157089710235596
    3. '       ' → logprob: -2.4657089710235596
    4. '   ' → logprob: -12.96570873260498
    5. '	self' → logprob: -13.46570873260498
    6. ' ' → logprob: -14.34070873260498
    7. 'super' → logprob: -14.34070873260498
    8. ' super' → logprob: -15.84070873260498
    9. '      ' → logprob: -16.465709686279297
    10. '[self' → logprob: -16.965709686279297

Token 257: '._' (ID: 2697)
  Prédit: '.colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.colors' → logprob: -0.07040596753358841
    2. '._' → logprob: -3.070405960083008
    3. '.' → logprob: -4.195405960083008
    4. '_colors' → logprob: -5.445405960083008
    5. ' .' → logprob: -6.570405960083008
    6. 'colors' → logprob: -7.445405960083008
    7. '   ' → logprob: -9.570405960083008
    8. ':' → logprob: -9.820405960083008
    9. ',' → logprob: -10.945405960083008
    10. '.color' → logprob: -11.820405960083008

Token 258: 'colors' (ID: 31731)
  Prédit: 'colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -5.919942486798391e-05
    2. '_colors' → logprob: -10.000059127807617
    3. 'sequence' → logprob: -11.750059127807617
    4. ' colors' → logprob: -12.875059127807617
    5. 'chars' → logprob: -13.500059127807617
    6. 'data' → logprob: -13.875059127807617
    7. '.colors' → logprob: -15.125059127807617
    8. 'characters' → logprob: -15.625059127807617
    9. 'positions' → logprob: -16.375059127807617
    10. 'seq' → logprob: -16.500059127807617

Token 259: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519305646419525
    2. ' =' → logprob: -1.501930594444275
    3. ':' → logprob: -14.251930236816406
    4. ')' → logprob: -15.126930236816406
    5. ' ' → logprob: -15.126930236816406
    6. '   ' → logprob: -15.626930236816406
    7. '[:]' → logprob: -16.126930236816406
    8. '  ' → logprob: -16.876930236816406
    9. '=color' → logprob: -17.376930236816406
    10. '=list' → logprob: -18.501930236816406

Token 260: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.10941493511199951
    2. ' List' → logprob: -2.609415054321289
    3. 'colors' → logprob: -3.734415054321289
    4. ' colors' → logprob: -5.109415054321289
    5. 'list' → logprob: -9.234415054321289
    6. ' list' → logprob: -10.484415054321289
    7. '[List' → logprob: -12.109415054321289
    8. ' =' → logprob: -13.484415054321289
    9. ' ' → logprob: -13.609415054321289
    10. '   ' → logprob: -14.359415054321289

Token 261: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -8.2994620242971e-06
    2. ' =' → logprob: -12.125008583068848
    3. '=int' → logprob: -13.500008583068848
    4. 'int' → logprob: -14.375008583068848
    5. '       ' → logprob: -15.375008583068848
    6. '[' → logprob: -15.500008583068848
    7. '<int' → logprob: -16.00000762939453
    8. '=' → logprob: -16.12500762939453
    9. '   ' → logprob: -16.50000762939453
    10. '[Int' → logprob: -16.87500762939453

Token 262: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.491498531133402e-06
    2. ']=' → logprob: -11.750009536743164
    3. '=' → logprob: -14.250009536743164
    4. ' ]' → logprob: -14.375009536743164
    5. ')' → logprob: -16.125009536743164
    6. '[' → logprob: -17.000009536743164
    7. ' =' → logprob: -17.375009536743164
    8. 'colors' → logprob: -17.500009536743164
    9. '']' → logprob: -17.625009536743164
    10. '>' → logprob: -17.750009536743164

Token 263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889474183320999
    2. ' =' → logprob: -2.578894853591919
    3. 'colors' → logprob: -12.82889461517334
    4. '(colors' → logprob: -13.32889461517334
    5. '=color' → logprob: -15.45389461517334
    6. '       ' → logprob: -16.453895568847656
    7. ']' → logprob: -16.828895568847656
    8. ')' → logprob: -17.078895568847656
    9. ' colors' → logprob: -17.078895568847656
    10. '[' → logprob: -17.078895568847656

Token 264: ' colors' (ID: 10803)
  Prédit: ' colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.6975771188735962
    2. 'colors' → logprob: -0.6975771188735962
    3. ' list' → logprob: -5.947576999664307
    4. 'list' → logprob: -6.322576999664307
    5. '[' → logprob: -12.697577476501465
    6. 'color' → logprob: -12.697577476501465
    7. '.colors' → logprob: -13.572577476501465
    8. '(colors' → logprob: -13.572577476501465
    9. '[]' → logprob: -14.072577476501465
    10. ' [' → logprob: -14.072577476501465

Token 265: '[:' (ID: 7808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.386147626675665e-05
    2. ']
' → logprob: -10.000073432922363
    3. ' ]' → logprob: -10.625073432922363
    4. ']

' → logprob: -12.625073432922363
    5. ')' → logprob: -15.125073432922363
    6. '])' → logprob: -16.87507438659668
    7. ']
' → logprob: -17.00007438659668
    8. ']()' → logprob: -17.00007438659668
    9. '<|end|>' → logprob: -17.00007438659668
    10. ' ' → logprob: -17.12507438659668

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08205768465995789
    2. '<|end|>' → logprob: -3.4570577144622803
    3. '
' → logprob: -3.7070577144622803
    4. '    
' → logprob: -4.332057476043701
    5. 'def' → logprob: -5.082057476043701
    6. '<|end|>' → logprob: -6.832057476043701
    7. '```' → logprob: -7.332057476043701
    8. '  
' → logprob: -7.457057476043701
    9. '       ' → logprob: -8.33205795288086
    10. '

' → logprob: -8.83205795288086

Token 268: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.7372048862162046e-05
    2. ' def' → logprob: -10.750027656555176
    3. '   ' → logprob: -12.125027656555176
    4. '
' → logprob: -14.875027656555176
    5. '@property' → logprob: -17.00002670288086
    6. '

' → logprob: -17.37502670288086
    7. '    
' → logprob: -19.62502670288086
    8. '	def' → logprob: -19.62502670288086
    9. '```' → logprob: -19.75002670288086
    10. '       ' → logprob: -20.50002670288086

Token 269: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.01416398212313652
    2. ' length' → logprob: -4.264163970947266
    3. 'len' → logprob: -15.639163970947266
    4. ' ' → logprob: -16.389163970947266
    5. 'def' → logprob: -16.389163970947266
    6. '_length' → logprob: -17.014163970947266
    7. '   ' → logprob: -17.264163970947266
    8. 'leng' → logprob: -17.389163970947266
    9. 'ength' → logprob: -18.014163970947266
    10. '	length' → logprob: -18.764163970947266

Token 270: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.313314952421933e-05
    2. '(' → logprob: -9.750062942504883
    3. '()' → logprob: -12.375062942504883
    4. 'self' → logprob: -14.750062942504883
    5. ' (' → logprob: -16.125062942504883
    6. '(
' → logprob: -17.375062942504883
    7. '   ' → logprob: -18.375062942504883
    8. '()(' → logprob: -18.375062942504883
    9. ')' → logprob: -18.875062942504883
    10. 'def' → logprob: -19.125062942504883

Token 271: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2535269856452942
    2. '(self' → logprob: -1.5035269260406494
    3. 'self' → logprob: -6.5035271644592285
    4. '()' → logprob: -10.00352668762207
    5. ' )' → logprob: -10.87852668762207
    6. '   ' → logprob: -11.75352668762207
    7. ' ' → logprob: -12.12852668762207
    8. ' self' → logprob: -12.25352668762207
    9. ')
' → logprob: -12.62852668762207
    10. '):
' → logprob: -13.00352668762207

Token 272: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09438595175743103
    2. '->' → logprob: -2.969385862350464
    3. ' ->' → logprob: -3.969385862350464
    4. ')' → logprob: -4.469386100769043
    5. 'self' → logprob: -4.844386100769043
    6. '   ' → logprob: -8.969386100769043
    7. '()' → logprob: -9.344386100769043
    8. ':' → logprob: -9.594386100769043
    9. '       ' → logprob: -9.719386100769043
    10. '(' → logprob: -9.844386100769043

Token 273: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20150505006313324
    2. ' int' → logprob: -1.7015050649642944
    3. ' len' → logprob: -9.951504707336426
    4. 'len' → logprob: -10.201504707336426
    5. 'return' → logprob: -12.826504707336426
    6. '   ' → logprob: -13.076504707336426
    7. ' return' → logprob: -13.451504707336426
    8. '       ' → logprob: -14.576504707336426
    9. ' ' → logprob: -15.076504707336426
    10. '[int' → logprob: -17.451505661010742

Token 274: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1646788865327835
    2. '       ' → logprob: -2.0396788120269775
    3. 'self' → logprob: -4.539679050445557
    4. ':' → logprob: -4.789679050445557
    5. '   ' → logprob: -6.664679050445557
    6. ':
' → logprob: -7.539679050445557
    7. ')' → logprob: -8.414678573608398
    8. '()' → logprob: -8.414678573608398
    9. '():' → logprob: -9.414678573608398
    10. '(' → logprob: -9.664678573608398

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010454319417476654
    2. 'return' → logprob: -7.251045227050781
    3. ' return' → logprob: -8.001045227050781
    4. '```' → logprob: -15.126045227050781
    5. '           ' → logprob: -17.87604522705078
    6. '	return' → logprob: -17.87604522705078
    7. '   ' → logprob: -18.62604522705078
    8. '      ' → logprob: -19.37604522705078
    9. ':return' → logprob: -19.37604522705078
    10. '	' → logprob: -19.50104522705078

Token 276: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0027362818364053965
    2. ' return' → logprob: -6.0027360916137695
    3. '       ' → logprob: -8.25273609161377
    4. '   ' → logprob: -18.877737045288086
    5. 'len' → logprob: -19.002737045288086
    6. '	return' → logprob: -19.252737045288086
    7. '```' → logprob: -19.502737045288086
    8. ' ' → logprob: -21.752737045288086
    9. '{return' → logprob: -22.127737045288086
    10. 'eturn' → logprob: -22.127737045288086

Token 277: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3868710398674011
    2. ' len' → logprob: -1.136871099472046
    3. '(len' → logprob: -17.136871337890625
    4. '   ' → logprob: -17.511871337890625
    5. '	len' → logprob: -18.136871337890625
    6. '       ' → logprob: -19.386871337890625
    7. '[len' → logprob: -20.886871337890625
    8. ' ' → logprob: -21.261871337890625
    9. '=len' → logprob: -21.636871337890625
    10. 'self' → logprob: -21.636871337890625

Token 278: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.547789674485102e-05
    2. '(' → logprob: -10.250035285949707
    3. 'self' → logprob: -16.875036239624023
    4. ' (' → logprob: -18.750036239624023
    5. ' self' → logprob: -20.500036239624023
    6. '(s' → logprob: -20.750036239624023
    7. '(this' → logprob: -21.750036239624023
    8. '(
' → logprob: -22.000036239624023
    9. 's' → logprob: -22.750036239624023
    10. '(sel' → logprob: -23.000036239624023

Token 279: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.644463479053229e-05
    2. '(self' → logprob: -10.875046730041504
    3. '.' → logprob: -11.375046730041504
    4. ' .' → logprob: -11.500046730041504
    5. 'self' → logprob: -12.625046730041504
    6. '   ' → logprob: -14.375046730041504
    7. '(' → logprob: -14.375046730041504
    8. ')' → logprob: -14.500046730041504
    9. ' ' → logprob: -16.000045776367188
    10. ' self' → logprob: -16.125045776367188

Token 280: 'colors' (ID: 31731)
  Prédit: '_colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.07889970391988754
    2. 'colors' → logprob: -2.578899621963501
    3. ' colors' → logprob: -11.828899383544922
    4. '.colors' → logprob: -13.703899383544922
    5. '_color' → logprob: -14.453899383544922
    6. ' _' → logprob: -14.953899383544922
    7. '_col' → logprob: -15.828899383544922
    8. 'Colors' → logprob: -16.328899383544922
    9. '```' → logprob: -16.328899383544922
    10. '_' → logprob: -16.453899383544922

Token 281: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ')
' → logprob: -13.12500286102295
    3. ' )' → logprob: -14.50000286102295
    4. '   ' → logprob: -15.87500286102295
    5. ')

' → logprob: -16.000003814697266
    6. '<|end|>' → logprob: -16.125003814697266
    7. ')return' → logprob: -16.750003814697266
    8. '}' → logprob: -18.000003814697266
    9. ' ' → logprob: -18.375003814697266
    10. '),' → logprob: -18.750003814697266

Token 282: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44275158643722534
    2. '   ' → logprob: -1.9427516460418701
    3. '<|end|>' → logprob: -2.06775164604187
    4. '```' → logprob: -2.81775164604187
    5. '    
' → logprob: -4.817751407623291
    6. 'def' → logprob: -5.567751407623291
    7. 'newline' → logprob: -5.817751407623291
    8. '

' → logprob: -5.942751407623291
    9. '<|end|>' → logprob: -6.192751407623291
    10. '  
' → logprob: -6.567751407623291

Token 283: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.245724504580721e-05
    2. ' def' → logprob: -9.500092506408691
    3. '   ' → logprob: -11.000092506408691
    4. '
' → logprob: -14.000092506408691
    5. '    
' → logprob: -17.000091552734375
    6. '	def' → logprob: -17.375091552734375
    7. '```' → logprob: -18.000091552734375
    8. '

' → logprob: -19.750091552734375
    9. ' ' → logprob: -19.875091552734375
    10. ' 
' → logprob: -20.125091552734375

Token 284: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.014426618814468384
    2. 'get' → logprob: -4.2644267082214355
    3. '_get' → logprob: -8.264426231384277
    4. ' def' → logprob: -12.264426231384277
    5. 'def' → logprob: -14.389426231384277
    6. '.get' → logprob: -15.639426231384277
    7. '_' → logprob: -16.639427185058594
    8. ' _' → logprob: -16.764427185058594
    9. '	get' → logprob: -17.514427185058594
    10. ' ' → logprob: -18.264427185058594

Token 285: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -2.935296834039036e-06
    2. '_' → logprob: -13.25000286102295
    3. ' _' → logprob: -14.00000286102295
    4. '_code' → logprob: -16.125003814697266
    5. '_colors' → logprob: -16.625003814697266
    6. '_col' → logprob: -17.625003814697266
    7. '_Color' → logprob: -17.625003814697266
    8. '_COLOR' → logprob: -17.875003814697266
    9. '_colour' → logprob: -18.250003814697266
    10. '_get' → logprob: -18.625003814697266

Token 286: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003361774142831564
    2. '(' → logprob: -8.000336647033691
    3. '(
' → logprob: -14.625336647033691
    4. ' (' → logprob: -15.625336647033691
    5. 'self' → logprob: -16.250335693359375
    6. '(s' → logprob: -17.875335693359375
    7. '(sel' → logprob: -18.250335693359375
    8. '   ' → logprob: -18.625335693359375
    9. '(Self' → logprob: -19.000335693359375
    10. '(idx' → logprob: -19.250335693359375

Token 287: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2989870309829712
    2. '(' → logprob: -1.4239870309829712
    3. ',' → logprob: -4.423986911773682
    4. ')' → logprob: -5.798986911773682
    5. ' (' → logprob: -6.548986911773682
    6. ')(' → logprob: -8.04898738861084
    7. 'self' → logprob: -8.04898738861084
    8. '(
' → logprob: -8.54898738861084
    9. '   ' → logprob: -8.92398738861084
    10. ' ' → logprob: -9.79898738861084

Token 288: ' idx' (ID: 14016)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.026877809315919876
    2. ' self' → logprob: -3.6518778800964355
    3. 'idx' → logprob: -7.6518778800964355
    4. ' idx' → logprob: -9.276877403259277
    5. ' ' → logprob: -12.901877403259277
    6. '(self' → logprob: -13.151877403259277
    7. '   ' → logprob: -13.401877403259277
    8. ')' → logprob: -14.276877403259277
    9. '	self' → logprob: -14.526877403259277
    10. 'int' → logprob: -14.651877403259277

Token 289: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09113246947526932
    2. '):' → logprob: -2.716132402420044
    3. ':' → logprob: -3.966132402420044
    4. '   ' → logprob: -6.716132640838623
    5. '):
' → logprob: -8.091132164001465
    6. '       ' → logprob: -8.591132164001465
    7. '(self' → logprob: -8.966132164001465
    8. 'self' → logprob: -9.216132164001465
    9. ' )' → logprob: -11.091132164001465
    10. '(' → logprob: -11.341132164001465

Token 290: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.049123767763376236
    2. ' int' → logprob: -3.049123764038086
    3. ')' → logprob: -7.549123764038086
    4. ' )' → logprob: -12.049123764038086
    5. ':int' → logprob: -12.924123764038086
    6. ' idx' → logprob: -15.049123764038086
    7. ' ' → logprob: -15.174123764038086
    8. '   ' → logprob: -15.424123764038086
    9. '[int' → logprob: -15.549123764038086
    10. 'idx' → logprob: -15.549123764038086

Token 291: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.895480277715251e-06
    2. '):' → logprob: -12.250008583068848
    3. ' )' → logprob: -12.500008583068848
    4. '   ' → logprob: -15.875008583068848
    5. ':' → logprob: -16.250009536743164
    6. '):
' → logprob: -17.125009536743164
    7. ']' → logprob: -18.750009536743164
    8. ')->' → logprob: -19.000009536743164
    9. ')
' → logprob: -19.875009536743164
    10. '       ' → logprob: -20.000009536743164

Token 292: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2031729519367218
    2. ':' → logprob: -1.9531729221343994
    3. '):' → logprob: -3.3281729221343994
    4. '   ' → logprob: -6.0781731605529785
    5. '       ' → logprob: -6.4531731605529785
    6. ']' → logprob: -6.5781731605529785
    7. ')->' → logprob: -8.32817268371582
    8. ' ->' → logprob: -8.45317268371582
    9. ']:' → logprob: -9.20317268371582
    10. '[' → logprob: -9.70317268371582

Token 293: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5760067105293274
    2. ' int' → logprob: -0.8260067105293274
    3. ' self' → logprob: -10.201006889343262
    4. 'self' → logprob: -10.576006889343262
    5. ' return' → logprob: -12.951006889343262
    6. 'return' → logprob: -13.826006889343262
    7. '[int' → logprob: -14.326006889343262
    8. '   ' → logprob: -14.826006889343262
    9. ' ' → logprob: -15.826006889343262
    10. ':int' → logprob: -16.201005935668945

Token 294: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006439079996198416
    2. ':
' → logprob: -5.381439208984375
    3. '):' → logprob: -6.506439208984375
    4. '       ' → logprob: -9.006439208984375
    5. '):
' → logprob: -9.506439208984375
    6. '   ' → logprob: -10.631439208984375
    7. '<|end|>' → logprob: -10.631439208984375
    8. ')' → logprob: -11.131439208984375
    9. '():' → logprob: -11.381439208984375
    10. '[' → logprob: -11.381439208984375

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007281593861989677
    2. ' return' → logprob: -7.750728130340576
    3. 'return' → logprob: -8.125728607177734
    4. '   ' → logprob: -13.750728607177734
    5. ' if' → logprob: -16.000728607177734
    6. '```' → logprob: -16.500728607177734
    7. '
' → logprob: -16.625728607177734
    8. '	return' → logprob: -16.625728607177734
    9. '	' → logprob: -17.375728607177734
    10. '           ' → logprob: -17.375728607177734

Token 296: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00045902872807346284
    2. '       ' → logprob: -8.000458717346191
    3. ' return' → logprob: -9.000458717346191
    4. 'if' → logprob: -15.250458717346191
    5. '   ' → logprob: -18.125459671020508
    6. '	return' → logprob: -18.375459671020508
    7. '```' → logprob: -21.625459671020508
    8. ' if' → logprob: -22.250459671020508
    9. '
' → logprob: -23.000459671020508
    10. ' ' → logprob: -23.625459671020508

Token 297: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029750484973192215
    2. ' self' → logprob: -3.5297505855560303
    3. '(self' → logprob: -19.65475082397461
    4. '       ' → logprob: -19.90475082397461
    5. '	self' → logprob: -20.15475082397461
    6. '   ' → logprob: -20.40475082397461
    7. '[self' → logprob: -22.27975082397461
    8. '_self' → logprob: -22.40475082397461
    9. ' ' → logprob: -22.65475082397461
    10. '
' → logprob: -23.15475082397461

Token 298: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.5
    3. ' .' → logprob: -16.0
    4. ']._' → logprob: -17.875
    5. '   ' → logprob: -18.25
    6. '.__' → logprob: -18.5
    7. 'self' → logprob: -18.625
    8. ')._' → logprob: -18.625
    9. '.get' → logprob: -19.0
    10. ' ' → logprob: -19.75

Token 299: 'colors' (ID: 31731)
  Prédit: 'colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.0015042672166600823
    2. '_colors' → logprob: -6.501504421234131
    3. ' colors' → logprob: -13.876503944396973
    4. '.colors' → logprob: -14.126503944396973
    5. '_color' → logprob: -17.00150489807129
    6. '(colors' → logprob: -17.00150489807129
    7. 'color' → logprob: -17.25150489807129
    8. 'get' → logprob: -18.87650489807129
    9. '/colors' → logprob: -19.37650489807129
    10. '```' → logprob: -20.12650489807129

Token 300: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.125
    3. 'idx' → logprob: -17.75
    4. ' [' → logprob: -18.5
    5. '[self' → logprob: -20.375
    6. '[
' → logprob: -20.625
    7. '```' → logprob: -20.75
    8. '[id' → logprob: -21.125
    9. '   ' → logprob: -21.125
    10. ' idx' → logprob: -21.25

Token 301: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14753364026546478
    2. ')' → logprob: -2.022533655166626
    3. '<|end|>' → logprob: -5.397533416748047
    4. ' ]' → logprob: -8.897533416748047
    5. '}' → logprob: -9.397533416748047
    6. '<|end|>' → logprob: -9.772533416748047
    7. '   ' → logprob: -10.772533416748047
    8. ' )' → logprob: -11.647533416748047
    9. '       ' → logprob: -12.647533416748047
    10. '```' → logprob: -13.397533416748047

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30657145380973816
    2. '```' → logprob: -1.5565714836120605
    3. 'def' → logprob: -3.0565714836120605
    4. ' def' → logprob: -6.3065714836120605
    5. '<|end|>' → logprob: -6.5565714836120605
    6. '
' → logprob: -6.6815714836120605
    7. '    
' → logprob: -7.3065714836120605
    8. ' 
' → logprob: -8.306571006774902
    9. ')' → logprob: -8.806571006774902
    10. ' ' → logprob: -9.306571006774902

Token 303: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.861651490908116e-05
    2. '   ' → logprob: -10.125068664550781
    3. ' def' → logprob: -10.500068664550781
    4. '```' → logprob: -14.625068664550781
    5. '    
' → logprob: -15.250068664550781
    6. '
' → logprob: -15.625068664550781
    7. ' ' → logprob: -18.75006866455078
    8. '

' → logprob: -19.00006866455078
    9. '	def' → logprob: -19.00006866455078
    10. '  
' → logprob: -19.12506866455078

Token 304: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0005581548321060836
    2. ' set' → logprob: -7.500558376312256
    3. 'def' → logprob: -12.250557899475098
    4. '_set' → logprob: -14.875557899475098
    5. ' ' → logprob: -17.375558853149414
    6. '   ' → logprob: -17.375558853149414
    7. '	set' → logprob: -17.750558853149414
    8. ' def' → logprob: -18.625558853149414
    9. '.set' → logprob: -18.750558853149414
    10. '_' → logprob: -19.375558853149414

Token 305: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.875000953674316
    3. '_colors' → logprob: -15.500000953674316
    4. ' _' → logprob: -16.375
    5. '```' → logprob: -16.875
    6. 'Color' → logprob: -17.25
    7. '_COLOR' → logprob: -17.25
    8. 'color' → logprob: -17.5
    9. '_code' → logprob: -17.625
    10. '_Color' → logprob: -18.0

Token 306: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.52919222577475e-05
    2. '(' → logprob: -9.625075340270996
    3. 'self' → logprob: -12.625075340270996
    4. ' (' → logprob: -12.875075340270996
    5. '(idx' → logprob: -13.000075340270996
    6. '   ' → logprob: -14.750075340270996
    7. '       ' → logprob: -15.625075340270996
    8. '(
' → logprob: -15.750075340270996
    9. ' self' → logprob: -16.00007438659668
    10. ' ' → logprob: -16.75007438659668

Token 307: ',' (ID: 11)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.6910892724990845
    2. '(' → logprob: -1.0660892724990845
    3. ' (' → logprob: -2.316089153289795
    4. '[idx' → logprob: -3.566089153289795
    5. '[' → logprob: -5.066089153289795
    6. ',' → logprob: -5.191089153289795
    7. ')' → logprob: -5.691089153289795
    8. '<|end|>' → logprob: -5.941089153289795
    9. '(self' → logprob: -6.066089153289795
    10. ' ' → logprob: -6.191089153289795

Token 308: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.2014141082763672
    2. ' idx' → logprob: -1.7014141082763672
    3. '	idx' → logprob: -15.076414108276367
    4. '[idx' → logprob: -15.201414108276367
    5. '(idx' → logprob: -15.701414108276367
    6. 'self' → logprob: -17.701414108276367
    7. '_idx' → logprob: -17.826414108276367
    8. 'Idx' → logprob: -18.201414108276367
    9. '.idx' → logprob: -18.451414108276367
    10. '   ' → logprob: -19.076414108276367

Token 309: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008377424674108624
    2. ' ,' → logprob: -7.250837802886963
    3. '=' → logprob: -9.625837326049805
    4. ')' → logprob: -10.125837326049805
    5. '<|end|>' → logprob: -11.875837326049805
    6. '[idx' → logprob: -13.125837326049805
    7. '[' → logprob: -13.375837326049805
    8. ']' → logprob: -13.375837326049805
    9. '```' → logprob: -13.625837326049805
    10. '),' → logprob: -13.750837326049805

Token 310: ' int' (ID: 677)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.20786210894584656
    2. 'idx' → logprob: -1.832862138748169
    3. 'int' → logprob: -3.957862138748169
    4. ' int' → logprob: -5.08286190032959
    5. ' ' → logprob: -6.20786190032959
    6. '1' → logprob: -9.33286190032959
    7. ',' → logprob: -9.58286190032959
    8. ')' → logprob: -10.33286190032959
    9. '0' → logprob: -10.45786190032959
    10. ':int' → logprob: -10.58286190032959

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ' ,' → logprob: -12.375004768371582
    3. ',value' → logprob: -16.250003814697266
    4. 'self' → logprob: -16.625003814697266
    5. '   ' → logprob: -16.875003814697266
    6. ')' → logprob: -16.875003814697266
    7. ',
' → logprob: -17.000003814697266
    8. ',int' → logprob: -17.250003814697266
    9. ',color' → logprob: -18.125003814697266
    10. '       ' → logprob: -18.250003814697266

Token 312: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.10021119564771652
    2. 'color' → logprob: -2.3502111434936523
    3. ' colors' → logprob: -13.725211143493652
    4. ' value' → logprob: -13.975211143493652
    5. 'Color' → logprob: -14.350211143493652
    6. ' self' → logprob: -14.975211143493652
    7. 'colors' → logprob: -14.975211143493652
    8. '_color' → logprob: -15.100211143493652
    9. ' ' → logprob: -15.225211143493652
    10. ' Color' → logprob: -15.475211143493652

Token 313: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18877241015434265
    2. ')' → logprob: -1.813772439956665
    3. '):' → logprob: -4.813772201538086
    4. ':int' → logprob: -7.438772201538086
    5. '   ' → logprob: -8.938772201538086
    6. '[int' → logprob: -9.313772201538086
    7. '):
' → logprob: -10.313772201538086
    8. 'int' → logprob: -11.563772201538086
    9. ' )' → logprob: -12.688772201538086
    10. ' ' → logprob: -13.188772201538086

Token 314: ' int' (ID: 677)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.06199861317873001
    2. 'color' → logprob: -2.8119986057281494
    3. ')' → logprob: -10.56199836730957
    4. 'int' → logprob: -13.31199836730957
    5. ' int' → logprob: -13.93699836730957
    6. '=color' → logprob: -14.06199836730957
    7. ' )' → logprob: -14.18699836730957
    8. '(color' → logprob: -14.68699836730957
    9. ' ' → logprob: -15.68699836730957
    10. '	color' → logprob: -16.18699836730957

Token 315: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00158853514585644
    2. '):' → logprob: -6.501588344573975
    3. '):
' → logprob: -9.376588821411133
    4. ' )' → logprob: -14.251588821411133
    5. ':' → logprob: -14.751588821411133
    6. '):
' → logprob: -15.126588821411133
    7. '   ' → logprob: -15.876588821411133
    8. ']' → logprob: -16.876588821411133
    9. ')`' → logprob: -17.376588821411133
    10. ' ' → logprob: -17.751588821411133

Token 316: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.279317706823349
    2. ' =' → logprob: -2.029317617416382
    3. '=' → logprob: -2.404317617416382
    4. ')' → logprob: -3.904317617416382
    5. '   ' → logprob: -7.654317855834961
    6. '):' → logprob: -7.904317855834961
    7. ' ->' → logprob: -7.904317855834961
    8. '->' → logprob: -8.529317855834961
    9. '       ' → logprob: -9.029317855834961
    10. ':
' → logprob: -9.154317855834961

Token 317: ' None' (ID: 4662)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.038781654089689255
    2. 'color' → logprob: -3.2887816429138184
    3. ' int' → logprob: -7.538781642913818
    4. 'int' → logprob: -8.913782119750977
    5. ' None' → logprob: -10.038782119750977
    6. 'None' → logprob: -11.163782119750977
    7. ' ' → logprob: -11.538782119750977
    8. '=color' → logprob: -12.413782119750977
    9. '[color' → logprob: -14.663782119750977
    10. '	color' → logprob: -14.913782119750977

Token 318: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5446164011955261
    2. ':
' → logprob: -1.044616460800171
    3. '       ' → logprob: -2.794616460800171
    4. '):
' → logprob: -5.044616222381592
    5. '):' → logprob: -8.29461669921875
    6. ')' → logprob: -9.29461669921875
    7. '   ' → logprob: -9.91961669921875
    8. ',' → logprob: -10.04461669921875
    9. '<|end|>' → logprob: -10.54461669921875
    10. '():
' → logprob: -11.04461669921875

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006833063904196024
    2. ' self' → logprob: -5.006833076477051
    3. 'self' → logprob: -9.13183307647705
    4. '   ' → logprob: -11.63183307647705
    5. '	self' → logprob: -15.38183307647705
    6. '           ' → logprob: -15.63183307647705
    7. '      ' → logprob: -16.381832122802734
    8. '     ' → logprob: -17.381832122802734
    9. '```' → logprob: -17.381832122802734
    10. ',' → logprob: -17.506832122802734

Token 320: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.009174861945211887
    2. ' self' → logprob: -5.009174823760986
    3. '       ' → logprob: -6.009174823760986
    4. '   ' → logprob: -15.509175300598145
    5. '	self' → logprob: -16.009174346923828
    6. ' ' → logprob: -18.509174346923828
    7. 'if' → logprob: -19.009174346923828
    8. '(self' → logprob: -19.509174346923828
    9. 'assert' → logprob: -20.884174346923828
    10. '[self' → logprob: -20.884174346923828

Token 321: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.8219583075260743e-05
    2. '.' → logprob: -10.625038146972656
    3. '.set' → logprob: -11.625038146972656
    4. '   ' → logprob: -12.875038146972656
    5. ' .' → logprob: -14.250038146972656
    6. '.__' → logprob: -14.625038146972656
    7. '_set' → logprob: -14.875038146972656
    8. '[' → logprob: -15.500038146972656
    9. ' ' → logprob: -15.750038146972656
    10. ' _' → logprob: -15.750038146972656

Token 322: 'colors' (ID: 31731)
  Prédit: 'colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.005262218415737152
    2. '_colors' → logprob: -5.25526237487793
    3. 'set' → logprob: -10.50526237487793
    4. ' colors' → logprob: -14.50526237487793
    5. '_color' → logprob: -15.75526237487793
    6. '.colors' → logprob: -15.75526237487793
    7. 'color' → logprob: -16.38026237487793
    8. '_set' → logprob: -16.88026237487793
    9. '(colors' → logprob: -18.13026237487793
    10. '/colors' → logprob: -18.13026237487793

Token 323: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -12.375004768371582
    3. 'idx' → logprob: -16.125003814697266
    4. ' [' → logprob: -18.500003814697266
    5. ' idx' → logprob: -18.875003814697266
    6. '	idx' → logprob: -19.125003814697266
    7. '[index' → logprob: -19.375003814697266
    8. '```' → logprob: -19.875003814697266
    9. '[ind' → logprob: -20.125003814697266
    10. '(idx' → logprob: -20.875003814697266

Token 324: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002714681322686374
    2. ']=' → logprob: -8.875271797180176
    3. ' ]' → logprob: -9.250271797180176
    4. '=' → logprob: -10.500271797180176
    5. ' =' → logprob: -11.875271797180176
    6. ')' → logprob: -14.000271797180176
    7. '[' → logprob: -16.50027084350586
    8. ',' → logprob: -17.62527084350586
    9. '=color' → logprob: -18.87527084350586
    10. '][' → logprob: -19.12527084350586

Token 325: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022615134716034
    2. ' =' → logprob: -1.9102261066436768
    3. '=color' → logprob: -13.160225868225098
    4. '=
' → logprob: -17.660226821899414
    5. '[' → logprob: -17.910226821899414
    6. '＝' → logprob: -18.160226821899414
    7. ' color' → logprob: -19.035226821899414
    8. 'color' → logprob: -19.410226821899414
    9. '=cut' → logprob: -19.535226821899414
    10. ')=' → logprob: -19.535226821899414

Token 326: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.02324547804892063
    2. ' color' → logprob: -3.7732455730438232
    3. '	color' → logprob: -18.898244857788086
    4. '   ' → logprob: -20.523244857788086
    5. ' ' → logprob: -20.648244857788086
    6. '=color' → logprob: -21.398244857788086
    7. 'c' → logprob: -21.523244857788086
    8. '(color' → logprob: -21.523244857788086
    9. 'Color' → logprob: -22.023244857788086
    10. '       ' → logprob: -22.398244857788086

Token 327: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014174911193549633
    2. '   ' → logprob: -4.389174938201904
    3. '
' → logprob: -6.639174938201904
    4. ' def' → logprob: -8.014174461364746
    5. '```' → logprob: -11.264174461364746
    6. '	def' → logprob: -12.014174461364746
    7. '    
' → logprob: -12.764174461364746
    8. '

' → logprob: -13.514174461364746
    9. '<|end|>' → logprob: -14.639174461364746
    10. '        
' → logprob: -14.889174461364746

Token 329: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.45848218582978e-06
    2. ' def' → logprob: -13.37500286102295
    3. '   ' → logprob: -14.00000286102295
    4. 'from' → logprob: -17.625001907348633
    5. '
' → logprob: -18.000001907348633
    6. '    
' → logprob: -18.500001907348633
    7. '	def' → logprob: -19.375001907348633
    8. '```' → logprob: -19.750001907348633
    9. '@' → logprob: -20.625001907348633
    10. '        
' → logprob: -20.875001907348633

Token 330: ' clone' (ID: 28806)
  Prédit: ' clone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clone' → logprob: -0.3871138095855713
    2. 'clone' → logprob: -1.1371138095855713
    3. 'def' → logprob: -8.637113571166992
    4. ' def' → logprob: -9.762113571166992
    5. '_clone' → logprob: -12.887113571166992
    6. '   ' → logprob: -12.887113571166992
    7. '.clone' → logprob: -13.387113571166992
    8. 'cl' → logprob: -14.137113571166992
    9. 'copy' → logprob: -16.512113571166992
    10. ' copy' → logprob: -16.637113571166992

Token 331: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.14425940811634064
    2. '(' → logprob: -2.019259452819824
    3. '()' → logprob: -6.519259452819824
    4. '(
' → logprob: -9.769259452819824
    5. ' (' → logprob: -10.269259452819824
    6. 'self' → logprob: -12.144259452819824
    7. '(

' → logprob: -13.519259452819824
    8. ' ' → logprob: -13.769259452819824
    9. ' ()' → logprob: -13.894259452819824
    10. '   ' → logprob: -14.019259452819824

Token 332: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002988517051562667
    2. '(self' → logprob: -6.502988338470459
    3. '()' → logprob: -7.377988338470459
    4. 'self' → logprob: -7.627988338470459
    5. ')(' → logprob: -9.252988815307617
    6. '(' → logprob: -9.377988815307617
    7. '())' → logprob: -9.502988815307617
    8. ',' → logprob: -10.002988815307617
    9. ' )' → logprob: -10.627988815307617
    10. ' ' → logprob: -11.127988815307617

Token 333: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.1424973713001236e-05
    2. '(' → logprob: -10.750031471252441
    3. 'self' → logprob: -11.875031471252441
    4. '()' → logprob: -12.875031471252441
    5. ')' → logprob: -16.000030517578125
    6. '(
' → logprob: -16.875030517578125
    7. '   ' → logprob: -16.875030517578125
    8. '->' → logprob: -17.125030517578125
    9. '       ' → logprob: -17.625030517578125
    10. 'def' → logprob: -17.750030517578125

Token 334: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6238322257995605
    2. ''' → logprob: -0.8738322257995605
    3. 'Linear' → logprob: -3.2488322257995605
    4. ' Linear' → logprob: -4.8738322257995605
    5. ' ' → logprob: -8.748832702636719
    6. '"' → logprob: -10.373832702636719
    7. ''s' → logprob: -10.373832702636719
    8. ''type' → logprob: -11.373832702636719
    9. '_linear' → logprob: -11.498832702636719
    10. ''class' → logprob: -11.998832702636719

Token 335: 'Linear' (ID: 32491)
  Prédit: 'Linear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Linear' → logprob: 0.0
    2. ' Linear' → logprob: -17.25
    3. 'Character' → logprob: -18.0
    4. 'Line' → logprob: -19.625
    5. '```' → logprob: -19.875
    6. 'linear' → logprob: -20.0
    7. 'Logical' → logprob: -20.625
    8. '_linear' → logprob: -21.375
    9. '.Linear' → logprob: -21.5
    10. '   ' → logprob: -21.75

Token 336: 'Character' (ID: 14648)
  Prédit: 'Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: 0.0
    2. '<Character' → logprob: -17.0
    3. 'character' → logprob: -18.25
    4. '_character' → logprob: -18.875
    5. 'Characteristic' → logprob: -19.375
    6. '```' → logprob: -19.875
    7. '(Character' → logprob: -20.25
    8. '
' → logprob: -20.875
    9. 'Color' → logprob: -21.0
    10. ' Character' → logprob: -21.125

Token 337: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -1.0683535037969705e-05
    2. 'Character' → logprob: -11.50001049041748
    3. 'sequence' → logprob: -15.00001049041748
    4. 'Sequ' → logprob: -16.625011444091797
    5. ' sequence' → logprob: -18.000011444091797
    6. '_sequence' → logprob: -18.500011444091797
    7. ' Sequence' → logprob: -19.875011444091797
    8. '```' → logprob: -20.875011444091797
    9. '_SEQUENCE' → logprob: -20.875011444091797
    10. 'Sequences' → logprob: -20.875011444091797

Token 338: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.5773478150367737
    2. '':' → logprob: -0.8273478150367737
    3. ''' → logprob: -6.702347755432129
    4. '':
' → logprob: -9.452347755432129
    5. ':
' → logprob: -10.577347755432129
    6. '):
' → logprob: -10.702347755432129
    7. ':' → logprob: -11.327347755432129
    8. '):' → logprob: -11.452347755432129
    9. '':

' → logprob: -11.702347755432129
    10. '(self' → logprob: -12.077347755432129

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014455054886639118
    2. '
' → logprob: -4.3894548416137695
    3. 'return' → logprob: -6.5144548416137695
    4. ' return' → logprob: -7.7644548416137695
    5. '
' → logprob: -11.01445484161377
    6. '        
' → logprob: -12.26445484161377
    7. ' 
' → logprob: -13.01445484161377
    8. ')' → logprob: -13.26445484161377
    9. ':
' → logprob: -13.26445484161377
    10. '    
' → logprob: -13.38945484161377

Token 340: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0001817297888919711
    2. ' return' → logprob: -9.000182151794434
    3. '       ' → logprob: -9.750182151794434
    4. '   ' → logprob: -18.125181198120117
    5. '
' → logprob: -18.750181198120117
    6. '```' → logprob: -19.250181198120117
    7. '	return' → logprob: -20.750181198120117
    8. 'Return' → logprob: -21.750181198120117
    9. '{return' → logprob: -22.875181198120117
    10. '
' → logprob: -23.875181198120117

Token 341: ' Linear' (ID: 29092)
  Prédit: 'Linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Linear' → logprob: -0.07889066636562347
    2. ' Linear' → logprob: -2.578890562057495
    3. 'type' → logprob: -14.703890800476074
    4. 'self' → logprob: -14.953890800476074
    5. ' type' → logprob: -15.453890800476074
    6. ' self' → logprob: -17.703889846801758
    7. 'Lin' → logprob: -18.578889846801758
    8. '   ' → logprob: -19.578889846801758
    9. 'Line' → logprob: -19.828889846801758
    10. ' ' → logprob: -19.953889846801758

Token 342: 'Character' (ID: 14648)
  Prédit: 'Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: -1.9361264946837764e-07
    2. 'character' → logprob: -16.625
    3. 'Color' → logprob: -16.875
    4. '_character' → logprob: -18.25
    5. '<Character' → logprob: -18.25
    6. 'Characteristic' → logprob: -19.625
    7. 'Linear' → logprob: -20.125
    8. 'Characters' → logprob: -20.5
    9. ' Character' → logprob: -21.25
    10. '(Character' → logprob: -21.5

Token 343: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -2.935296834039036e-06
    2. 'sequence' → logprob: -12.75000286102295
    3. 'quence' → logprob: -17.875003814697266
    4. 'Sequ' → logprob: -18.000003814697266
    5. '_sequence' → logprob: -18.625003814697266
    6. 'Character' → logprob: -18.750003814697266
    7. 'Sequences' → logprob: -19.250003814697266
    8. ' sequence' → logprob: -19.375003814697266
    9. ' Sequence' → logprob: -20.500003814697266
    10. '_SEQUENCE' → logprob: -20.625003814697266

Token 344: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.896309739408025e-07
    2. '([' → logprob: -14.500000953674316
    3. '(' → logprob: -16.0
    4. '(list' → logprob: -16.375
    5. ' (' → logprob: -17.0
    6. '[self' → logprob: -18.625
    7. '(copy' → logprob: -18.75
    8. 'self' → logprob: -19.25
    9. '((' → logprob: -19.75
    10. '([...' → logprob: -20.875

Token 345: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.1472419600977446e-06
    2. '_colors' → logprob: -14.250000953674316
    3. '.' → logprob: -15.125000953674316
    4. ' .' → logprob: -16.375001907348633
    5. '.__' → logprob: -17.625001907348633
    6. '.copy' → logprob: -18.000001907348633
    7. '_' → logprob: -18.250001907348633
    8. '   ' → logprob: -19.125001907348633
    9. '_copy' → logprob: -19.125001907348633
    10. '_color' → logprob: -19.250001907348633

Token 346: 'colors' (ID: 31731)
  Prédit: 'colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.31331145763397217
    2. '_colors' → logprob: -1.3133114576339722
    3. '.colors' → logprob: -10.063311576843262
    4. ' colors' → logprob: -12.188311576843262
    5. 'Colors' → logprob: -14.438311576843262
    6. '(colors' → logprob: -14.688311576843262
    7. '_color' → logprob: -15.438311576843262
    8. 'color' → logprob: -15.563311576843262
    9. 'col' → logprob: -15.688311576843262
    10. '._' → logprob: -16.063310623168945

Token 347: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031833965331315994
    2. '[:' → logprob: -3.5318338871002197
    3. '.copy' → logprob: -6.406834125518799
    4. '[:]' → logprob: -7.781834125518799
    5. ' )' → logprob: -11.65683364868164
    6. '[])' → logprob: -13.15683364868164
    7. ')
' → logprob: -13.15683364868164
    8. '   ' → logprob: -14.28183364868164
    9. '[' → logprob: -15.90683364868164
    10. '())' → logprob: -16.78183364868164

Token 348: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 349: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.25892558693885803
    2. '<|end|>' → logprob: -1.6339255571365356
    3. 'def' (adapté à ' def') → logprob: -4.258925437927246
    4. '
' → logprob: -4.633925437927246
    5. '   ' → logprob: -5.258925437927246
    6. '<|end|>' → logprob: -6.508925437927246
    7. ')' → logprob: -7.258925437927246
    8. '#' → logprob: -8.008925437927246
    9. '```' → logprob: -8.133925437927246
    10. '    
' → logprob: -8.258925437927246

Token 350: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04663220793008804
    2. ' __' → logprob: -3.6716322898864746
    3. 'to' → logprob: -5.421632289886475
    4. 'count' → logprob: -5.796632289886475
    5. 'reverse' → logprob: -5.921632289886475
    6. 'find' → logprob: -6.546632289886475
    7. 'append' → logprob: -6.671632289886475
    8. 'insert' → logprob: -7.296632289886475
    9. 'invert' → logprob: -7.296632289886475
    10. ' find' → logprob: -7.296632289886475

Token 351: 'repr' (ID: 67002)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.014011415652930737
    2. 'getitem' → logprob: -4.764011383056641
    3. 'repr' → logprob: -5.514011383056641
    4. 'str' → logprob: -7.014011383056641
    5. 'eq' → logprob: -8.01401138305664
    6. 'iter' → logprob: -9.01401138305664
    7. 'init' → logprob: -14.26401138305664
    8. 'copy' → logprob: -16.76401138305664
    9. 'contains' → logprob: -17.26401138305664
    10. ' len' → logprob: -17.26401138305664

Token 352: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.001785490894690156
    2. '__' → logprob: -6.5017852783203125
    3. '__(
' → logprob: -8.626785278320312
    4. '__('' → logprob: -9.251785278320312
    5. '__("' → logprob: -12.001785278320312
    6. '__((' → logprob: -14.126785278320312
    7. '(self' → logprob: -14.251785278320312
    8. '__(*' → logprob: -15.876785278320312
    9. '__.__' → logprob: -16.001785278320312
    10. '__[' → logprob: -16.751785278320312

Token 353: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015081972815096378
    2. ')' → logprob: -6.5015082359313965
    3. ' self' → logprob: -12.251507759094238
    4. '
' → logprob: -14.876507759094238
    5. '(self' → logprob: -15.626507759094238
    6. '	self' → logprob: -15.751507759094238
    7. ' ' → logprob: -15.876507759094238
    8. '):
' → logprob: -16.251508712768555
    9. '):' → logprob: -16.501508712768555
    10. '   ' → logprob: -16.876508712768555

Token 354: '):
' (ID: 1883)
  Prédit: '__)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__)' → logprob: -0.203582763671875
    2. '__' → logprob: -1.703582763671875
    3. '__(' → logprob: -7.203582763671875
    4. ')__' → logprob: -7.703582763671875
    5. ')' → logprob: -7.828582763671875
    6. '__('' → logprob: -8.578582763671875
    7. '__:' → logprob: -9.203582763671875
    8. '__)
' → logprob: -9.828582763671875
    9. 'self' → logprob: -10.078582763671875
    10. '__).' → logprob: -10.078582763671875

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023920638486742973
    2. 'return' → logprob: -6.127392292022705
    3. ' return' → logprob: -8.627391815185547
    4. 'self' → logprob: -10.627391815185547
    5. 'f' → logprob: -13.002391815185547
    6. '(self' → logprob: -14.627391815185547
    7. ' f' → logprob: -14.752391815185547
    8. ' self' → logprob: -16.002391815185547
    9. '{return' → logprob: -16.252391815185547
    10. '           ' → logprob: -16.502391815185547

Token 356: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1278897523880005
    2. '       ' → logprob: -2.127889633178711
    3. ' return' → logprob: -7.377889633178711
    4. 'f' → logprob: -8.002889633178711
    5. '	return' → logprob: -14.627889633178711
    6. '           ' → logprob: -14.627889633178711
    7. '   ' → logprob: -14.752889633178711
    8. '{return' → logprob: -15.502889633178711
    9. ' f' → logprob: -16.37788963317871
    10. '```' → logprob: -16.75288963317871

Token 357: ' "' (ID: 392)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.002476016292348504
    2. ' f' → logprob: -6.002476215362549
    3. '"' → logprob: -15.75247573852539
    4. ''f' → logprob: -15.75247573852539
    5. '(f' → logprob: -17.12747573852539
    6. '	f' → logprob: -17.75247573852539
    7. ''' → logprob: -18.12747573852539
    8. 'repr' → logprob: -18.75247573852539
    9. '"<' → logprob: -19.25247573852539
    10. '<f' → logprob: -19.37747573852539

Token 358: 'Linear' (ID: 32491)
  Prédit: 'Linear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Linear' → logprob: -0.10077773779630661
    2. 'f' → logprob: -2.3507776260375977
    3. '"' → logprob: -7.850777626037598
    4. '<' → logprob: -9.600777626037598
    5. ''' → logprob: -9.725777626037598
    6. '"<' → logprob: -10.850777626037598
    7. ' Linear' → logprob: -11.725777626037598
    8. ' f' → logprob: -11.975777626037598
    9. '<f' → logprob: -12.100777626037598
    10. '{' → logprob: -12.350777626037598

Token 359: 'Character' (ID: 14648)
  Prédit: 'Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: -3.128163257315464e-07
    2. '<Character' → logprob: -15.625
    3. '(Character' → logprob: -16.625
    4. 'Color' → logprob: -19.5
    5. 'Characteristic' → logprob: -20.5
    6. '(' → logprob: -21.125
    7. '_character' → logprob: -21.25
    8. 'Characters' → logprob: -21.375
    9. '"' → logprob: -21.625
    10. 'character' → logprob: -22.5

Token 360: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -1.9361264946837764e-07
    2. 'sequence' → logprob: -15.875
    3. ' Sequence' → logprob: -18.0
    4. ' sequence' → logprob: -18.0
    5. 'Sequ' → logprob: -18.0
    6. 'Seq' → logprob: -18.625
    7. '"' → logprob: -19.0
    8. '_sequence' → logprob: -19.25
    9. 'quence' → logprob: -20.125
    10. 'S' → logprob: -20.75

Token 361: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.1065895557403564
    2. '({' → logprob: -1.4815895557403564
    3. '(self' → logprob: -1.4815895557403564
    4. '(colors' → logprob: -2.1065895557403564
    5. '(f' → logprob: -3.1065895557403564
    6. '(",' → logprob: -3.4815895557403564
    7. '(' → logprob: -5.106589317321777
    8. '(["' → logprob: -5.356589317321777
    9. '"' → logprob: -5.856589317321777
    10. '([' → logprob: -6.856589317321777

Token 362: ' +' (ID: 659)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003410605015233159
    2. '[self' → logprob: -6.003410816192627
    3. 'f' → logprob: -7.378410816192627
    4. ' self' → logprob: -8.878410339355469
    5. 'repr' → logprob: -9.253410339355469
    6. '",' → logprob: -10.753410339355469
    7. ' +' → logprob: -11.503410339355469
    8. 'str' → logprob: -11.503410339355469
    9. '+self' → logprob: -11.503410339355469
    10. '+' → logprob: -11.753410339355469

Token 363: ' ","' (ID: 33200)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '",' → logprob: -0.8161976933479309
    2. 'repr' → logprob: -1.3161976337432861
    3. '",".' → logprob: -1.9411976337432861
    4. 'str' → logprob: -2.066197633743286
    5. 'self' → logprob: -4.441197872161865
    6. '"' → logprob: -6.191197872161865
    7. '[str' → logprob: -6.441197872161865
    8. '','.' → logprob: -6.941197872161865
    9. '',' → logprob: -6.941197872161865
    10. ' repr' → logprob: -7.066197872161865

Token 364: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.35158541798591614
    2. '.join' → logprob: -1.3515853881835938
    3. 'join' → logprob: -3.3515853881835938
    4. '".' → logprob: -5.976585388183594
    5. ' .' → logprob: -10.851585388183594
    6. ' join' → logprob: -12.101585388183594
    7. '"' → logprob: -12.726585388183594
    8. '''.' → logprob: -13.726585388183594
    9. '       ' → logprob: -14.101585388183594
    10. '."' → logprob: -14.851585388183594

Token 365: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0087516784551553e-05
    2. ' join' → logprob: -11.75001049041748
    3. '.' → logprob: -13.25001049041748
    4. '.join' → logprob: -15.37501049041748
    5. '".' → logprob: -16.625009536743164
    6. 'j' → logprob: -19.125009536743164
    7. 'jo' → logprob: -19.125009536743164
    8. ' .' → logprob: -20.500009536743164
    9. ''.' → logprob: -20.875009536743164
    10. '   ' → logprob: -21.500009536743164

Token 366: '(Color' (ID: 25022)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.010253680869936943
    2. '(Color' → logprob: -4.88525390625
    3. '([' → logprob: -6.26025390625
    4. '(' → logprob: -8.13525390625
    5. '[str' → logprob: -9.01025390625
    6. '(self' → logprob: -9.26025390625
    7. 'str' → logprob: -9.51025390625
    8. '(f' → logprob: -9.63525390625
    9. '(map' → logprob: -10.13525390625
    10. '[' → logprob: -11.76025390625

Token 367: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.00017600801947992295
    2. '.' → logprob: -9.250176429748535
    3. 'name' → logprob: -9.875176429748535
    4. ' .' → logprob: -11.375176429748535
    5. '   ' → logprob: -12.000176429748535
    6. ').' → logprob: -12.875176429748535
    7. '```' → logprob: -13.250176429748535
    8. ' ' → logprob: -14.000176429748535
    9. ' name' → logprob: -14.375176429748535
    10. '
' → logprob: -14.500176429748535

Token 368: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.027950329706072807
    2. '(color' → logprob: -3.7779502868652344
    3. '(self' → logprob: -5.402950286865234
    4. '(' → logprob: -9.277950286865234
    5. '(i' → logprob: -10.652950286865234
    6. '((' → logprob: -11.027950286865234
    7. '(x' → logprob: -11.152950286865234
    8. '(col' → logprob: -11.402950286865234
    9. ')' → logprob: -12.027950286865234
    10. ' (' → logprob: -12.277950286865234

Token 369: ')' (ID: 8)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.005520461592823267
    2. '(color' → logprob: -5.630520343780518
    3. '(x' → logprob: -7.130520343780518
    4. ')' → logprob: -7.255520343780518
    5. '(' → logprob: -8.380520820617676
    6. '(i' → logprob: -9.630520820617676
    7. '(col' → logprob: -10.630520820617676
    8. ' (' → logprob: -11.005520820617676
    9. 'color' → logprob: -11.130520820617676
    10. 'c' → logprob: -11.380520820617676

Token 370: ' for' (ID: 395)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.015359592624008656
    2. '(color' → logprob: -4.890359401702881
    3. '(self' → logprob: -5.140359401702881
    4. ' for' → logprob: -6.765359401702881
    5. 'for' → logprob: -8.640359878540039
    6. ' (' → logprob: -8.640359878540039
    7. '(' → logprob: -8.890359878540039
    8. '(col' → logprob: -9.640359878540039
    9. '([' → logprob: -9.890359878540039
    10. ')' → logprob: -10.515359878540039

Token 371: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20153194665908813
    2. ' c' → logprob: -1.7015318870544434
    3. ')c' → logprob: -10.076532363891602
    4. ')' → logprob: -10.326532363891602
    5. '_c' → logprob: -11.451532363891602
    6. 'self' → logprob: -11.576532363891602
    7. '_' → logprob: -12.326532363891602
    8. ' self' → logprob: -12.451532363891602
    9. 'color' → logprob: -12.701532363891602
    10. ' in' → logprob: -12.826532363891602

Token 372: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014267169870436192
    2. 'in' → logprob: -4.2642669677734375
    3. 'self' → logprob: -9.514266967773438
    4. '_in' → logprob: -11.764266967773438
    5. '  ' → logprob: -12.139266967773438
    6. ' self' → logprob: -12.764266967773438
    7. '   ' → logprob: -12.764266967773438
    8. 'c' → logprob: -13.139266967773438
    9. ' ' → logprob: -13.264266967773438
    10. '_' → logprob: -13.389266967773438

Token 373: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048588622361421585
    2. ' self' → logprob: -3.048588514328003
    3. '(self' → logprob: -14.798588752746582
    4. ' ' → logprob: -15.423588752746582
    5. '[self' → logprob: -15.548588752746582
    6. '   ' → logprob: -15.798588752746582
    7. '	self' → logprob: -16.173587799072266
    8. 'c' → logprob: -16.798587799072266
    9. '_self' → logprob: -16.923587799072266
    10. '  ' → logprob: -16.923587799072266

Token 374: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.1008713702030946e-06
    2. '.' → logprob: -14.000001907348633
    3. '_colors' → logprob: -14.375001907348633
    4. '.get' → logprob: -15.500001907348633
    5. '   ' → logprob: -16.000001907348633
    6. ' .' → logprob: -16.500001907348633
    7. '_' → logprob: -16.625001907348633
    8. ')' → logprob: -16.875001907348633
    9. '_self' → logprob: -17.625001907348633
    10. ' ' → logprob: -17.625001907348633

Token 375: 'colors' (ID: 31731)
  Prédit: '_colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.0009132515988312662
    2. 'colors' → logprob: -7.000913143157959
    3. '_color' → logprob: -14.250913619995117
    4. 'self' → logprob: -15.125913619995117
    5. '_col' → logprob: -15.500913619995117
    6. ' _' → logprob: -15.750913619995117
    7. ' colors' → logprob: -15.875913619995117
    8. 'Colors' → logprob: -15.875913619995117
    9. '._' → logprob: -16.750913619995117
    10. '.colors' → logprob: -17.000913619995117

Token 376: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000516217143740505
    2. ')+' → logprob: -8.125515937805176
    3. '   ' → logprob: -9.250515937805176
    4. '       ' → logprob: -9.625515937805176
    5. '))' → logprob: -10.750515937805176
    6. ' )' → logprob: -11.125515937805176
    7. ')")' → logprob: -11.500515937805176
    8. '")' → logprob: -12.125515937805176
    9. ')`' → logprob: -13.750515937805176
    10. ')
' → logprob: -13.875515937805176

Token 377: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002542132046073675
    2. ')")' → logprob: -7.252542018890381
    3. '")' → logprob: -7.627542018890381
    4. ')+' → logprob: -8.002542495727539
    5. '+")' → logprob: -8.002542495727539
    6. '+' → logprob: -8.252542495727539
    7. ' +' → logprob: -8.752542495727539
    8. ')`' → logprob: -9.252542495727539
    9. '   ' → logprob: -9.752542495727539
    10. '       ' → logprob: -10.377542495727539

Token 378: ' ")"' (ID: 150133)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00014060820103622973
    2. ')")' → logprob: -9.000140190124512
    3. ')' → logprob: -11.375140190124512
    4. ')"' → logprob: -12.375140190124512
    5. ' ")"' → logprob: -14.250140190124512
    6. '"' → logprob: -14.875140190124512
    7. '')' → logprob: -15.125140190124512
    8. ' ")' → logprob: -17.000141143798828
    9. '   ' → logprob: -18.375141143798828
    10. '}")' → logprob: -18.875141143798828

Token 379: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0026552050840109587
    2. '
' → logprob: -6.752655029296875
    3. '

' → logprob: -7.252655029296875
    4. '<|end|>' → logprob: -7.502655029296875
    5. ' class' → logprob: -9.502655029296875
    6. '```' → logprob: -9.877655029296875
    7. '[' → logprob: -10.502655029296875
    8. '


' → logprob: -11.127655029296875
    9. '<|end|>' → logprob: -11.252655029296875
    10. '<class' → logprob: -11.502655029296875

Token 381: ' El' (ID: 3241)
  Prédit: 'Circular'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Circular' → logprob: -0.6530614495277405
    2. 'Colored' → logprob: -3.0280613899230957
    3. 'Composite' → logprob: -3.2780613899230957
    4. 'Color' → logprob: -3.4030613899230957
    5. 'Binary' → logprob: -3.5280613899230957
    6. 'Run' → logprob: -3.5280613899230957
    7. 'C' → logprob: -3.7780613899230957
    8. ' Circular' → logprob: -3.7780613899230957
    9. 'Grid' → logprob: -4.028061389923096
    10. 'Stack' → logprob: -4.153061389923096

Token 382: 'imination' (ID: 34362)
  Prédit: 'lip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lip' → logprob: -0.7494756579399109
    2. 'l' → logprob: -1.1244757175445557
    3. 'astic' → logprob: -2.3744757175445557
    4. 'ided' → logprob: -3.3744757175445557
    5. 'ement' → logprob: -3.9994757175445557
    6. 'lis' → logprob: -4.624475479125977
    7. 'se' → logprob: -5.499475479125977
    8. 'ev' → logprob: -5.499475479125977
    9. 'las' → logprob: -5.624475479125977
    10. 'abor' → logprob: -5.749475479125977

Token 383: 'Strategy' (ID: 21488)
  Prédit: 'Character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Character' → logprob: -0.6723312735557556
    2. 'Sequence' → logprob: -1.1723313331604004
    3. 'Tree' → logprob: -2.1723313331604004
    4. 'Based' → logprob: -4.9223313331604
    5. 'Pattern' → logprob: -5.0473313331604
    6. 'Chain' → logprob: -5.0473313331604
    7. 'Color' → logprob: -5.2973313331604
    8. 'Block' → logprob: -5.4223313331604
    9. 'Stack' → logprob: -5.4223313331604
    10. 'Group' → logprob: -5.7973313331604

Token 384: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08374790847301483
    2. ':' → logprob: -2.7087478637695312
    3. '(Character' → logprob: -4.333747863769531
    4. '(Abstract' → logprob: -8.083747863769531
    5. ':
' → logprob: -8.208747863769531
    6. '<Character' → logprob: -12.333747863769531
    7. '(Color' → logprob: -12.708747863769531
    8. '():' → logprob: -13.333747863769531
    9. '(object' → logprob: -13.833747863769531
    10. '(
' → logprob: -14.208747863769531

Token 385: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -1.0921942703134846e-05
    2. ' ABC' → logprob: -11.75001049041748
    3. 'Character' → logprob: -13.00001049041748
    4. '(' → logprob: -14.87501049041748
    5. 'abc' → logprob: -15.75001049041748
    6. '):
' → logprob: -15.87501049041748
    7. 'ABCDE' → logprob: -16.750011444091797
    8. 'AB' → logprob: -17.125011444091797
    9. 'Abstract' → logprob: -17.625011444091797
    10. 'Color' → logprob: -17.625011444091797

Token 386: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5764254927635193
    2. '):' → logprob: -0.8264254927635193
    3. '):
' → logprob: -7.826425552368164
    4. ':' → logprob: -10.076425552368164
    5. '):

' → logprob: -10.951425552368164
    6. '   ' → logprob: -11.076425552368164
    7. ':
' → logprob: -12.326425552368164
    8. ')' → logprob: -13.076425552368164
    9. ',' → logprob: -13.826425552368164
    10. '```' → logprob: -13.951425552368164

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0065969484858214855
    2. ':' → logprob: -5.13159704208374
    3. '):
' → logprob: -8.381596565246582
    4. ':
' → logprob: -8.756596565246582
    5. '):' → logprob: -8.756596565246582
    6. '
' → logprob: -10.131596565246582
    7. ')' → logprob: -10.756596565246582
    8. '<|end|>' → logprob: -11.006596565246582
    9. '    
' → logprob: -11.256596565246582
    10. '(' → logprob: -11.506596565246582

Token 388: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03514682129025459
    2. '
' → logprob: -3.410146713256836
    3. '    
' → logprob: -6.535146713256836
    4. '<|end|>' → logprob: -11.285146713256836
    5. 'def' → logprob: -11.535146713256836
    6. '@' → logprob: -11.535146713256836
    7. ' 
' → logprob: -12.660146713256836
    8. '```' → logprob: -13.035146713256836
    9. '   
' → logprob: -13.160146713256836
    10. '  
' → logprob: -13.660146713256836

Token 389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027033530175685883
    2. '"""
' → logprob: -3.777033567428589
    3. '"""' → logprob: -5.65203332901001
    4. ' """
' → logprob: -8.652033805847168
    5. '    ' → logprob: -10.277033805847168
    6. '
' → logprob: -10.777033805847168
    7. 'abstract' → logprob: -11.402033805847168
    8. 'Abstract' → logprob: -11.777033805847168
    9. '"' → logprob: -12.027033805847168
    10. ' """' → logprob: -12.527033805847168

Token 390: ' Abstract' (ID: 17413)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01613512821495533
    2. '@' → logprob: -4.266135215759277
    3. '
' → logprob: -6.766135215759277
    4. '"""
' → logprob: -7.516135215759277
    5. '"""' → logprob: -8.641135215759277
    6. 'class' → logprob: -10.016135215759277
    7. '    
' → logprob: -10.141135215759277
    8. ' @' → logprob: -12.391135215759277
    9. 'def' → logprob: -12.891135215759277
    10. 'abstract' → logprob: -13.516135215759277

Token 391: ' base' (ID: 3611)
  Prédit: 'method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0573853999376297
    2. 'class' → logprob: -3.5573854446411133
    3. ' class' → logprob: -4.432385444641113
    4. '   ' → logprob: -4.557385444641113
    5. ' method' → logprob: -5.432385444641113
    6. 'classmethod' → logprob: -7.932385444641113
    7. ' base' → logprob: -10.307385444641113
    8. '
' → logprob: -10.432385444641113
    9. '    
' → logprob: -10.557385444641113
    10. '  ' → logprob: -11.182385444641113

Token 392: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0026764876674860716
    2. 'method' → logprob: -6.502676486968994
    3. ' class' → logprob: -6.752676486968994
    4. 'classmethod' → logprob: -12.627676963806152
    5. '   ' → logprob: -13.627676963806152
    6. '
' → logprob: -14.377676963806152
    7. '<class' → logprob: -14.502676963806152
    8. '    
' → logprob: -16.127676010131836
    9. ' method' → logprob: -17.002676010131836
    10. '  ' → logprob: -17.127676010131836

Token 393: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06838057190179825
    2. ' for' → logprob: -2.81838059425354
    3. 'for' → logprob: -5.318380355834961
    4. ' representing' → logprob: -6.818380355834961
    5. '<|end|>' → logprob: -8.318380355834961
    6. 'represent' → logprob: -10.068380355834961
    7. 'class' → logprob: -10.193380355834961
    8. '<|end|>' → logprob: -10.318380355834961
    9. '    
' → logprob: -11.068380355834961
    10. '
' → logprob: -12.193380355834961

Token 394: ' elimination' (ID: 77324)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.5793840289115906
    2. ' elimination' → logprob: -0.9543840289115906
    3. ' strategies' → logprob: -3.3293840885162354
    4. 'strateg' → logprob: -5.204383850097656
    5. 'the' → logprob: -5.704383850097656
    6. 'def' → logprob: -6.079383850097656
    7. ' an' → logprob: -6.454383850097656
    8. ' the' → logprob: -6.454383850097656
    9. ' different' → logprob: -6.704383850097656
    10. 'an' → logprob: -6.829383850097656

Token 395: ' logic' (ID: 18485)
  Prédit: ' strategies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strategies' → logprob: -0.5833176970481873
    2. '   ' → logprob: -1.333317756652832
    3. 'strateg' → logprob: -2.208317756652832
    4. ' methods' → logprob: -3.958317756652832
    5. 'methods' → logprob: -4.583317756652832
    6. 'method' → logprob: -4.833317756652832
    7. ' strategy' → logprob: -5.083317756652832
    8. 'strategy' → logprob: -5.083317756652832
    9. ' ' → logprob: -5.208317756652832
    10. '  ' → logprob: -5.458317756652832

Token 396: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5956510305404663
    2. '<|end|>' → logprob: -1.4706510305404663
    3. '.' → logprob: -1.7206510305404663
    4. ':' → logprob: -3.720651149749756
    5. '<|end|>' → logprob: -4.345651149749756
    6. '```' → logprob: -7.220651149749756
    7. ',' → logprob: -7.595651149749756
    8. ' in' → logprob: -8.345650672912598
    9. '
' → logprob: -8.595650672912598
    10. '  ' → logprob: -8.595650672912598

Token 397: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21529310941696167
    2. '<|end|>' → logprob: -1.8402931690216064
    3. '   ' → logprob: -3.4652931690216064
    4. '<|end|>' → logprob: -6.215292930603027
    5. '```' → logprob: -6.590292930603027
    6. '    
' → logprob: -9.215292930603027
    7. '

' → logprob: -9.590292930603027
    8. ')' → logprob: -9.840292930603027
    9. '
' → logprob: -11.465292930603027
    10. '  ' → logprob: -11.840292930603027

Token 398: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015770740807056427
    2. '   ' → logprob: -4.89077091217041
    3. '<|end|>' → logprob: -4.89077091217041
    4. '<|end|>' → logprob: -8.51577091217041
    5. '    
' → logprob: -9.01577091217041
    6. '```' → logprob: -9.01577091217041
    7. ')' → logprob: -9.76577091217041
    8. '

' → logprob: -9.89077091217041
    9. '
' → logprob: -9.89077091217041
    10. '' → logprob: -13.01577091217041

Token 399: '   ' (ID: 271)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.5851590037345886
    2. '   ' → logprob: -0.8351590037345886
    3. '
' → logprob: -4.835158824920654
    4. '    
' → logprob: -6.710158824920654
    5. ' @' → logprob: -12.835159301757812
    6. '@
' → logprob: -12.835159301757812
    7. '        
' → logprob: -12.960159301757812
    8. ' 
' → logprob: -13.585159301757812
    9. '

' → logprob: -13.835159301757812
    10. '   
' → logprob: -13.960159301757812

Token 400: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -1.1756367712223437e-05
    2. '   ' → logprob: -11.500011444091797
    3. '
' → logprob: -14.750011444091797
    4. '    
' → logprob: -14.750011444091797
    5. 'def' → logprob: -14.750011444091797
    6. ' @' → logprob: -15.375011444091797
    7. '@
' → logprob: -16.000011444091797
    8. 'from' → logprob: -19.375011444091797
    9. 'class' → logprob: -19.625011444091797
    10. '@property' → logprob: -19.875011444091797

Token 401: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -1.9361264946837764e-07
    2. ' abstract' → logprob: -15.875
    3. 'staticmethod' → logprob: -17.125
    4. 'classmethod' → logprob: -18.75
    5. 'property' → logprob: -19.875
    6. 'abc' → logprob: -19.875
    7. '.abstract' → logprob: -22.75
    8. 'ab' → logprob: -24.875
    9. 'abs' → logprob: -25.25
    10. '
' → logprob: -26.0

Token 402: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.12132825702428818
    2. 'def' → logprob: -2.371328353881836
    3. '_method' → logprob: -3.871328353881836
    4. '   ' → logprob: -9.996328353881836
    5. 'classmethod' → logprob: -11.996328353881836
    6. ' def' → logprob: -12.871328353881836
    7. 'ethod' → logprob: -13.371328353881836
    8. '    
' → logprob: -13.371328353881836
    9. '
' → logprob: -13.371328353881836
    10. 'staticmethod' → logprob: -13.496328353881836

Token 403: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07647977024316788
    2. '
' → logprob: -2.82647967338562
    3. ' def' → logprob: -4.326479911804199
    4. '   ' → logprob: -6.951479911804199
    5. '    
' → logprob: -9.5764799118042
    6. '(def' → logprob: -9.8264799118042
    7. '```' → logprob: -10.3264799118042
    8. '<|end|>' → logprob: -10.7014799118042
    9. '	def' → logprob: -11.3264799118042
    10. '<|end|>' → logprob: -11.4514799118042

Token 404: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6517274379730225
    2. 'def' → logprob: -0.7767274379730225
    3. '   ' → logprob: -4.026727676391602
    4. ' def' → logprob: -6.901727676391602
    5. '    
' → logprob: -10.276727676391602
    6. '```' → logprob: -10.901727676391602
    7. '
' → logprob: -11.151727676391602
    8. '\' → logprob: -12.276727676391602
    9. ' 
' → logprob: -12.401727676391602
    10. '	def' → logprob: -12.401727676391602

Token 405: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.729906196298543e-06
    2. ' def' → logprob: -11.750009536743164
    3. '
' → logprob: -13.500009536743164
    4. 'method' → logprob: -15.750009536743164
    5. 'staticmethod' → logprob: -16.000009536743164
    6. 'classmethod' → logprob: -16.375009536743164
    7. 'property' → logprob: -17.500009536743164
    8. 'class' → logprob: -19.625009536743164
    9. '   ' → logprob: -19.750009536743164
    10. '	def' → logprob: -19.875009536743164

Token 406: ' eliminate' (ID: 31408)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.29871851205825806
    2. 'apply' → logprob: -1.5487184524536133
    3. ' apply' → logprob: -4.298718452453613
    4. 'should' → logprob: -4.423718452453613
    5. ' eliminate' → logprob: -4.548718452453613
    6. 'find' → logprob: -5.673718452453613
    7. ' should' → logprob: -5.798718452453613
    8. 'execute' → logprob: -6.923718452453613
    9. ' find' → logprob: -7.548718452453613
    10. 'def' → logprob: -7.923718452453613

Token 407: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.541112427134067e-05
    2. 'self' → logprob: -9.750075340270996
    3. '(' → logprob: -11.125075340270996
    4. '(
' → logprob: -13.750075340270996
    5. 's' → logprob: -14.750075340270996
    6. ' (' → logprob: -16.000076293945312
    7. '(cls' → logprob: -16.125076293945312
    8. 'def' → logprob: -16.125076293945312
    9. '(se' → logprob: -16.250076293945312
    10. '(s' → logprob: -16.250076293945312

Token 408: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.34603554010391235
    2. ',' → logprob: -1.3460354804992676
    3. 'self' → logprob: -3.7210354804992676
    4. ')' → logprob: -4.971035480499268
    5. ')(' → logprob: -7.721035480499268
    6. ' (' → logprob: -8.221035957336426
    7. '(' → logprob: -9.971035957336426
    8. 'def' → logprob: -10.096035957336426
    9. ' self' → logprob: -10.096035957336426
    10. ',self' → logprob: -10.096035957336426

Token 409: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.05415372923016548
    2. ' sequence' → logprob: -3.6791536808013916
    3. 'seq' → logprob: -3.6791536808013916
    4. 'self' → logprob: -6.304153919219971
    5. ' seq' → logprob: -8.054153442382812
    6. 'character' → logprob: -10.679153442382812
    7. 'chars' → logprob: -11.179153442382812
    8. 'char' → logprob: -11.554153442382812
    9. ' self' → logprob: -11.679153442382812
    10. 'se' → logprob: -12.179153442382812

Token 410: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.657694418914616e-05
    2. ')' → logprob: -10.625056266784668
    3. 'self' → logprob: -11.250056266784668
    4. '(self' → logprob: -11.375056266784668
    5. ',' → logprob: -13.000056266784668
    6. ' :' → logprob: -13.000056266784668
    7. '       ' → logprob: -14.375056266784668
    8. '   ' → logprob: -14.625056266784668
    9. ':self' → logprob: -14.625056266784668
    10. '_sequence' → logprob: -14.750056266784668

Token 411: ' Character' (ID: 27668)
  Prédit: 'Character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: -0.01106126606464386
    2. ' Character' → logprob: -4.511061191558838
    3. 'Linear' → logprob: -11.261061668395996
    4. ''' → logprob: -14.886061668395996
    5. ')' → logprob: -16.88606071472168
    6. ' Linear' → logprob: -17.13606071472168
    7. '   ' → logprob: -17.26106071472168
    8. ' ' → logprob: -18.26106071472168
    9. 'List' → logprob: -18.38606071472168
    10. '<Character' → logprob: -18.76106071472168

Token 412: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -5.512236498361744e-07
    2. ')' → logprob: -15.375000953674316
    3. '_sequence' → logprob: -16.25
    4. 'sequence' → logprob: -16.5
    5. ' Sequence' → logprob: -17.25
    6. '_SEQUENCE' → logprob: -18.375
    7. ' sequence' → logprob: -18.625
    8. 'Sequences' → logprob: -18.875
    9. 'Sequ' → logprob: -19.25
    10. '.Sequence' → logprob: -19.5

Token 413: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014189479872584343
    2. ',' → logprob: -4.26418924331665
    3. ' )' → logprob: -11.014189720153809
    4. '   ' → logprob: -13.014189720153809
    5. ',)' → logprob: -13.264189720153809
    6. ',
' → logprob: -13.389189720153809
    7. '[' → logprob: -14.139189720153809
    8. '')' → logprob: -14.389189720153809
    9. ')->' → logprob: -14.951689720153809
    10. ' ,' → logprob: -14.951689720153809

Token 414: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007805614150129259
    2. ',' → logprob: -7.3757805824279785
    3. ' ->' → logprob: -9.00078010559082
    4. '->' → logprob: -11.00078010559082
    5. ')->' → logprob: -12.00078010559082
    6. '   ' → logprob: -12.37578010559082
    7. ' )' → logprob: -13.87578010559082
    8. '       ' → logprob: -13.87578010559082
    9. ':' → logprob: -13.87578010559082
    10. '')' → logprob: -15.75078010559082

Token 415: ' Character' (ID: 27668)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.5250172019004822
    2. 'Optional' → logprob: -1.525017261505127
    3. 'None' → logprob: -2.400017261505127
    4. 'Character' → logprob: -2.900017261505127
    5. 'Tuple' → logprob: -4.275017261505127
    6. 'List' → logprob: -4.400017261505127
    7. ' bool' → logprob: -4.650017261505127
    8. 'int' → logprob: -5.650017261505127
    9. ' Optional' → logprob: -5.775017261505127
    10. ' None' → logprob: -6.525017261505127

Token 416: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.00010640407708706334
    2. 'sequence' → logprob: -9.250106811523438
    3. '_SEQUENCE' → logprob: -12.500106811523438
    4. '_sequence' → logprob: -13.125106811523438
    5. 'int' → logprob: -13.125106811523438
    6. '[int' → logprob: -13.500106811523438
    7. ' sequence' → logprob: -14.625106811523438
    8. '.Sequence' → logprob: -15.375106811523438
    9. 'Sequences' → logprob: -16.250106811523438
    10. 'quence' → logprob: -16.375106811523438

Token 417: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04813111945986748
    2. ')' → logprob: -3.548131227493286
    3. '):' → logprob: -4.423130989074707
    4. ':
' → logprob: -6.298130989074707
    5. '   ' → logprob: -6.298130989074707
    6. ',' → logprob: -6.423130989074707
    7. '[' → logprob: -7.673130989074707
    8. '       ' → logprob: -8.423130989074707
    9. '):
' → logprob: -9.298130989074707
    10. '<|end|>' → logprob: -10.923130989074707

Token 418: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 419: ' """
' (ID: 7037)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.03559984639286995
    2. ' pass' → logprob: -3.535599946975708
    3. '       ' → logprob: -5.410599708557129
    4. '...' → logprob: -6.785599708557129
    5. '   ' → logprob: -9.035599708557129
    6. '	pass' → logprob: -9.285599708557129
    7. '<|end|>' → logprob: -11.785599708557129
    8. '"""' → logprob: -12.410599708557129
    9. 'Pass' → logprob: -13.285599708557129
    10. ' ...' → logprob: -13.660599708557129

Token 420: '       ' (ID: 309)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.864800214767456
    2. 'pass' → logprob: -0.864800214767456
    3. '       ' → logprob: -1.864800214767456
    4. '...' → logprob: -6.864800453186035
    5. '<|end|>' → logprob: -6.864800453186035
    6. '   ' → logprob: -7.489800453186035
    7. '	pass' → logprob: -9.739800453186035
    8. '
' → logprob: -10.864800453186035
    9. ')' → logprob: -11.114800453186035
    10. 'abstract' → logprob: -11.489800453186035

Token 421: ' Returns' (ID: 9609)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.5198960900306702
    2. '"""' → logprob: -1.0198960304260254
    3. ' pass' → logprob: -3.6448960304260254
    4. '"""
' → logprob: -4.394896030426025
    5. ' """' → logprob: -5.894896030426025
    6. 'Pass' → logprob: -6.269896030426025
    7. ' """
' → logprob: -6.644896030426025
    8. '       ' → logprob: -8.894896507263184
    9. '...' → logprob: -9.519896507263184
    10. '   ' → logprob: -10.019896507263184

Token 422: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.027754174545407295
    2. ' sequence' → logprob: -4.277754306793213
    3. ' the' → logprob: -4.902754306793213
    4. 'a' → logprob: -6.277754306793213
    5. ' an' → logprob: -6.652754306793213
    6. ' Optional' → logprob: -6.902754306793213
    7. 'Optional' → logprob: -7.652754306793213
    8. 'sequence' → logprob: -7.777754306793213
    9. 'A' → logprob: -8.402753829956055
    10. '       ' → logprob: -8.777753829956055

Token 423: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.7270011901855469
    2. 'new' → logprob: -0.8520011901855469
    3. ' sequence' → logprob: -3.602001190185547
    4. 'sequence' → logprob: -3.602001190185547
    5. ' Character' → logprob: -4.102001190185547
    6. 'Character' → logprob: -4.477001190185547
    7. 'modified' → logprob: -5.477001190185547
    8. ' modified' → logprob: -7.352001190185547
    9. 'processed' → logprob: -7.352001190185547
    10. 'pr' → logprob: -7.977001190185547

Token 424: ' sequence' (ID: 16281)
  Prédit: ' Character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Character' → logprob: -0.42659687995910645
    2. ' sequence' → logprob: -1.3015968799591064
    3. 'Character' → logprob: -2.6765968799591064
    4. 'sequence' → logprob: -5.301596641540527
    5. ' character' → logprob: -7.551596641540527
    6. '<|end|>' → logprob: -7.676596641540527
    7. '_character' → logprob: -8.926596641540527
    8. 'character' → logprob: -9.426596641540527
    9. '(Character' → logprob: -10.051596641540527
    10. '<Character' → logprob: -10.051596641540527

Token 425: ' with' (ID: 483)
  Prédit: ' after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' after' → logprob: -0.25840887427330017
    2. ' with' → logprob: -1.6334089040756226
    3. ' or' → logprob: -4.383409023284912
    4. ' that' → logprob: -5.258409023284912
    5. 'with' → logprob: -5.258409023284912
    6. '       ' → logprob: -5.508409023284912
    7. ' where' → logprob: -6.258409023284912
    8. ' representing' → logprob: -6.633409023284912
    9. 'after' → logprob: -7.008409023284912
    10. ' without' → logprob: -7.633409023284912

Token 426: ' all' (ID: 722)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.30417492985725403
    2. 'all' → logprob: -2.8041749000549316
    3. 'some' → logprob: -2.8041749000549316
    4. 'the' → logprob: -2.9291749000549316
    5. 'colors' → logprob: -3.5541749000549316
    6. ' the' → logprob: -4.679174900054932
    7. 'certain' → logprob: -4.679174900054932
    8. ' elimin' → logprob: -4.804174900054932
    9. ' some' → logprob: -5.554174900054932
    10. 'con' → logprob: -5.679174900054932

Token 427: ' elimin' (ID: 21529)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.47594770789146423
    2. 'eligible' → logprob: -1.6009477376937866
    3. 'possible' → logprob: -3.350947618484497
    4. ' eligible' → logprob: -3.600947618484497
    5. ' sequences' → logprob: -3.600947618484497
    6. 'app' → logprob: -4.100947856903076
    7. ' elimin' → logprob: -4.350947856903076
    8. ' instances' → logprob: -4.350947856903076
    9. ' applicable' → logprob: -4.600947856903076
    10. ' possible' → logprob: -4.850947856903076

Token 428: 'ations' (ID: 929)
  Prédit: 'ated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.007700792048126459
    2. 'inated' → logprob: -4.8827009201049805
    3. 'ations' → logprob: -10.63270092010498
    4. 'in' → logprob: -11.00770092010498
    5. 'imated' → logprob: -11.00770092010498
    6. 'ate' → logprob: -12.13270092010498
    7. '   ' → logprob: -12.13270092010498
    8. 'e' → logprob: -12.75770092010498
    9. 'ed' → logprob: -12.75770092010498
    10. 'imin' → logprob: -13.25770092010498

Token 429: ' applied' (ID: 13335)
  Prédit: ' applied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' applied' → logprob: -0.184431254863739
    2. ' performed' → logprob: -1.9344313144683838
    3. 'performed' → logprob: -4.559431076049805
    4. 'ap' → logprob: -4.809431076049805
    5. ' completed' → logprob: -6.059431076049805
    6. ' done' → logprob: -6.809431076049805
    7. '       ' → logprob: -7.559431076049805
    8. 'done' → logprob: -7.934431076049805
    9. 'completed' → logprob: -8.059431076049805
    10. '   ' → logprob: -8.559431076049805

Token 430: ' until' (ID: 4609)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04212605208158493
    2. ' and' → logprob: -3.917125940322876
    3. '       ' → logprob: -5.167126178741455
    4. '."""' → logprob: -6.042126178741455
    5. ' at' → logprob: -6.167126178741455
    6. '```' → logprob: -6.667126178741455
    7. ' after' → logprob: -6.792126178741455
    8. '   ' → logprob: -6.917126178741455
    9. '<|end|>' → logprob: -6.917126178741455
    10. ',' → logprob: -7.042126178741455

Token 431: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.12823091447353363
    2. 'no' → logprob: -2.1282308101654053
    3. ' stable' → logprob: -7.878231048583984
    4. ' none' → logprob: -8.378231048583984
    5. 'none' → logprob: -8.753231048583984
    6. 'None' → logprob: -9.003231048583984
    7. 'stable' → logprob: -9.003231048583984
    8. ' True' → logprob: -9.378231048583984
    9. 'True' → logprob: -10.253231048583984
    10. 'False' → logprob: -10.503231048583984

Token 432: ' more' (ID: 945)
  Prédit: ' more'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' more' → logprob: -0.12668921053409576
    2. 'more' → logprob: -2.6266891956329346
    3. ' further' → logprob: -3.2516891956329346
    4. ' changes' → logprob: -5.001689434051514
    5. 'changes' → logprob: -7.001689434051514
    6. '<|end|>' → logprob: -9.251688957214355
    7. '_more' → logprob: -9.251688957214355
    8. '<|end|>' → logprob: -9.876688957214355
    9. 'f' → logprob: -10.626688957214355
    10. ' sequence' → logprob: -11.376688957214355

Token 433: ' elimin' (ID: 21529)
  Prédit: ' changes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' changes' → logprob: -0.22670327126979828
    2. ' elimin' → logprob: -2.22670316696167
    3. 'changes' → logprob: -2.85170316696167
    4. 'el' → logprob: -4.22670316696167
    5. ' further' → logprob: -4.60170316696167
    6. ' more' → logprob: -4.72670316696167
    7. 'more' → logprob: -6.97670316696167
    8. ' sequences' → logprob: -7.47670316696167
    9. 's' → logprob: -7.72670316696167
    10. ' tokens' → logprob: -7.85170316696167

Token 434: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.022150633856654167
    2. 'ation' → logprob: -3.8971505165100098
    3. 'ate' → logprob: -6.52215051651001
    4. 'able' → logprob: -9.647150993347168
    5. 'atable' → logprob: -10.897150993347168
    6. 'e' → logprob: -11.272150993347168
    7. '   ' → logprob: -12.272150993347168
    8. 'ates' → logprob: -12.397150993347168
    9. '```' → logprob: -12.397150993347168
    10. '
' → logprob: -12.897150993347168

Token 435: ' are' (ID: 553)
  Prédit: ' occur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' occur' → logprob: -0.6648207902908325
    2. ' are' → logprob: -1.4148207902908325
    3. ' can' → logprob: -1.7898207902908325
    4. 'occur' → logprob: -2.664820671081543
    5. 'are' → logprob: -6.289820671081543
    6. ' happen' → logprob: -7.039820671081543
    7. '.' → logprob: -7.039820671081543
    8. '   ' → logprob: -7.164820671081543
    9. 'can' → logprob: -7.539820671081543
    10. ' possible' → logprob: -8.539820671081543

Token 436: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.6932911276817322
    2. 'possible' → logprob: -0.6932911276817322
    3. '_possible' → logprob: -9.193290710449219
    4. 'app' → logprob: -11.443290710449219
    5. '   ' → logprob: -11.443290710449219
    6. '       ' → logprob: -11.943290710449219
    7. ' ' → logprob: -12.443290710449219
    8. ' applicable' → logprob: -13.818290710449219
    9. 'occur' → logprob: -13.818290710449219
    10. ' detected' → logprob: -13.943290710449219

Token 437: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0022288828622549772
    2. '<|end|>' → logprob: -7.002228736877441
    3. '       ' → logprob: -7.377228736877441
    4. '   ' → logprob: -8.377228736877441
    5. ',' → logprob: -8.877228736877441
    6. '.
' → logprob: -9.002228736877441
    7. '<|end|>' → logprob: -9.502228736877441
    8. '."""' → logprob: -10.127228736877441
    9. '.\' → logprob: -10.877228736877441
    10. '```' → logprob: -11.127228736877441

Token 438: '       ' (ID: 309)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.365156650543213
    2. '<|end|>' → logprob: -1.615156650543213
    3. '
' → logprob: -1.740156650543213
    4. '       ' → logprob: -1.865156650543213
    5. '   ' → logprob: -2.115156650543213
    6. '\n' → logprob: -2.990156650543213
    7. '```' → logprob: -3.990156650543213
    8. '"""
' → logprob: -4.115156650543213
    9. '<|end|>' → logprob: -5.615156650543213
    10. '""' → logprob: -6.490156650543213

Token 439: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39192160964012146
    2. '"""' → logprob: -1.3919216394424438
    3. '
' → logprob: -3.2669215202331543
    4. '<|end|>' → logprob: -3.8919215202331543
    5. '\n' → logprob: -5.141921520233154
    6. '```' → logprob: -5.391921520233154
    7. '   ' → logprob: -6.141921520233154
    8. '"""
' (adapté à ' """
') → logprob: -6.391921520233154
    9. '<|end|>' → logprob: -7.016921520233154
    10. ' """' → logprob: -7.266921520233154

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008631468750536442
    2. '
' → logprob: -5.883631706237793
    3. ' pass' → logprob: -5.883631706237793
    4. '<|end|>' → logprob: -6.008631706237793
    5. 'pass' → logprob: -8.133631706237793
    6. '   ' → logprob: -9.508631706237793
    7. '        ' → logprob: -10.008631706237793
    8. '    ' → logprob: -10.383631706237793
    9. '<|end|>' → logprob: -10.758631706237793
    10. '...' → logprob: -10.758631706237793

Token 441: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.024781854823231697
    2. '       ' → logprob: -3.7747819423675537
    3. '...' → logprob: -6.524781703948975
    4. '   ' → logprob: -10.524782180786133
    5. 'while' → logprob: -10.899782180786133
    6. ' pass' → logprob: -11.399782180786133
    7. '...
' → logprob: -12.399782180786133
    8. 'raise' → logprob: -13.024782180786133
    9. 'pas' → logprob: -13.774782180786133
    10. '"""' → logprob: -13.899782180786133

Token 442: '


' (ID: 2499)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2561507225036621
    2. 'class' → logprob: -2.131150722503662
    3. '
' → logprob: -2.256150722503662
    4. '


' → logprob: -6.506150722503662
    5. '   ' → logprob: -7.506150722503662
    6. '<|end|>' → logprob: -8.00615119934082
    7. '    
' → logprob: -10.75615119934082
    8. '    

' → logprob: -10.75615119934082
    9. '<|end|>' → logprob: -10.75615119934082
    10. '
    
' → logprob: -11.25615119934082

Token 443: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0002358409110456705
    2. '
' → logprob: -8.500235557556152
    3. '

' → logprob: -10.500235557556152
    4. '<|end|>' → logprob: -13.250235557556152
    5. ' class' → logprob: -13.500235557556152
    6. '<class' → logprob: -14.250235557556152
    7. '


' → logprob: -15.250235557556152
    8. '"class' → logprob: -15.875235557556152
    9. '    
' → logprob: -16.62523651123047
    10. 'clas' → logprob: -16.87523651123047

Token 444: ' Chain' (ID: 43814)
  Prédit: 'Con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Con' → logprob: -1.6193516254425049
    2. 'Color' → logprob: -1.7443516254425049
    3. 'Triple' → logprob: -2.494351625442505
    4. 'Linear' → logprob: -2.744351625442505
    5. 'Pair' → logprob: -2.994351625442505
    6. 'Group' → logprob: -2.994351625442505
    7. 'Simple' → logprob: -3.244351625442505
    8. 'No' → logprob: -3.494351625442505
    9. 'Three' → logprob: -3.494351625442505
    10. 'Same' → logprob: -3.619351625442505

Token 445: 'El' (ID: 4422)
  Prédit: 'El'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'El' → logprob: -0.14407694339752197
    2. 'Reaction' → logprob: -2.0190768241882324
    3. 'Re' → logprob: -7.019076824188232
    4. 'Removal' → logprob: -8.14407730102539
    5. 'Reduction' → logprob: -9.76907730102539
    6. 'Explosion' → logprob: -10.64407730102539
    7. 'Collapse' → logprob: -10.89407730102539
    8. 'Break' → logprob: -11.14407730102539
    9. 'Breaker' → logprob: -11.64407730102539
    10. 'reaction' → logprob: -11.64407730102539

Token 446: 'imination' (ID: 34362)
  Prédit: 'imination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imination' → logprob: -7.362307223957032e-05
    2. 'im' → logprob: -10.125073432922363
    3. 'ement' → logprob: -11.625073432922363
    4. 'imation' → logprob: -11.875073432922363
    5. 'imin' → logprob: -12.375073432922363
    6. 'iminate' → logprob: -12.500073432922363
    7. 'e' → logprob: -13.250073432922363
    8. '```' → logprob: -13.375073432922363
    9. 'em' → logprob: -14.125073432922363
    10. 'min' → logprob: -14.500073432922363

Token 447: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.003995646256953478
    2. '(' → logprob: -5.753995418548584
    3. 'El' → logprob: -7.128995418548584
    4. 'strategy' → logprob: -12.003995895385742
    5. 'Str' → logprob: -13.628995895385742
    6. 'Step' → logprob: -13.628995895385742
    7. 'Strateg' → logprob: -13.753995895385742
    8. 'Chain' → logprob: -14.378995895385742
    9. ' strategy' → logprob: -14.753995895385742
    10. 'Sequence' → logprob: -15.128995895385742

Token 448: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.304016228066757e-05
    2. ':' → logprob: -10.250082969665527
    3. ' (' → logprob: -10.625082969665527
    4. '(Abstract' → logprob: -11.125082969665527
    5. 'El' → logprob: -12.125082969665527
    6. ' :' → logprob: -13.375082969665527
    7. '(E' → logprob: -14.250082969665527
    8. ':
' → logprob: -15.500082969665527
    9. '(
' → logprob: -15.750082969665527
    10. ' El' → logprob: -16.000083923339844

Token 449: 'El' (ID: 4422)
  Prédit: 'El'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'El' → logprob: -0.0015148617094382644
    2. ' El' → logprob: -6.501514911651611
    3. '(' → logprob: -12.126514434814453
    4. ')' → logprob: -12.501514434814453
    5. '):
' → logprob: -14.501514434814453
    6. 'Abstract' → logprob: -14.626514434814453
    7. ' ' → logprob: -14.751514434814453
    8. 'Ab' → logprob: -14.751514434814453
    9. 'Ed' → logprob: -15.376514434814453
    10. ')(' → logprob: -15.626514434814453

Token 450: 'imination' (ID: 34362)
  Prédit: 'imination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imination' → logprob: -3.292907877039397e-06
    2. 'im' → logprob: -13.12500286102295
    3. 'imation' → logprob: -14.87500286102295
    4. 'imin' → logprob: -14.87500286102295
    5. '```' → logprob: -15.87500286102295
    6. ' elimination' → logprob: -16.125003814697266
    7. 'ination' → logprob: -16.625003814697266
    8. 'imini' → logprob: -17.000003814697266
    9. '``' → logprob: -17.125003814697266
    10. 'min' → logprob: -17.375003814697266

Token 451: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -1.0280383548888494e-06
    2. ' Strategy' → logprob: -14.750000953674316
    3. 'Strateg' → logprob: -15.125000953674316
    4. 'strategy' → logprob: -15.875000953674316
    5. '_strategy' → logprob: -16.125001907348633
    6. ' strategy' → logprob: -18.250001907348633
    7. 'Strategies' → logprob: -18.500001907348633
    8. 'Str' → logprob: -18.750001907348633
    9. 'ategy' → logprob: -19.375001907348633
    10. '...' → logprob: -21.375001907348633

Token 452: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4741225242614746
    2. '):' → logprob: -0.9741225242614746
    3. '):
' → logprob: -10.349123001098633
    4. '):

' → logprob: -11.849123001098633
    5. ')' → logprob: -12.474123001098633
    6. ':' → logprob: -13.724123001098633
    7. '   ' → logprob: -14.099123001098633
    8. ':
' → logprob: -15.474123001098633
    9. ' ):' → logprob: -15.849123001098633
    10. ' ):
' → logprob: -15.974123001098633

Token 453: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4313347339630127
    2. '   ' → logprob: -1.8063347339630127
    3. ':
' → logprob: -1.8063347339630127
    4. '):
' → logprob: -4.306334495544434
    5. '):' → logprob: -4.931334495544434
    6. ')' → logprob: -7.806334495544434
    7. 'def' → logprob: -7.931334495544434
    8. ' def' → logprob: -8.806334495544434
    9. ',' → logprob: -10.181334495544434
    10. ':

' → logprob: -10.306334495544434

Token 454: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013921386562287807
    2. 'def' → logprob: -6.751392364501953
    3. ' def' → logprob: -8.626392364501953
    4. '
' → logprob: -11.126392364501953
    5. '    
' → logprob: -11.626392364501953
    6. 'CHAIN' → logprob: -12.376392364501953
    7. '"""' → logprob: -12.501392364501953
    8. '```' → logprob: -13.126392364501953
    9. ')' → logprob: -13.376392364501953
    10. '(' → logprob: -13.876392364501953

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29524990916252136
    2. 'def' → logprob: -1.4202499389648438
    3. ' def' → logprob: -4.670249938964844
    4. '"""
' → logprob: -5.420249938964844
    5. ' """
' → logprob: -9.670249938964844
    6. '"""' → logprob: -9.920249938964844
    7. '
' → logprob: -9.920249938964844
    8. '"' → logprob: -11.670249938964844
    9. 'class' → logprob: -12.420249938964844
    10. '	def' → logprob: -12.420249938964844

Token 456: ' Implements' (ID: 123308)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12794114649295807
    2. ' def' → logprob: -2.252941131591797
    3. '"""
' → logprob: -4.752941131591797
    4. '   ' → logprob: -5.877941131591797
    5. 'class' → logprob: -5.877941131591797
    6. ' """
' → logprob: -7.752941131591797
    7. '
' → logprob: -8.877941131591797
    8. 'El' → logprob: -9.627941131591797
    9. '"""' → logprob: -9.627941131591797
    10. 'Concrete' → logprob: -11.627941131591797

Token 457: ' the' (ID: 290)
  Prédit: 'El'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'El' → logprob: -0.35400620102882385
    2. ' El' → logprob: -1.6040061712265015
    3. ' elimination' → logprob: -2.604006290435791
    4. ' an' → logprob: -4.229006290435791
    5. ' the' → logprob: -5.604006290435791
    6. 'the' → logprob: -6.479006290435791
    7. 'def' → logprob: -6.604006290435791
    8. '   ' → logprob: -7.104006290435791
    9. 'el' → logprob: -7.729006290435791
    10. ' a' → logprob: -8.229005813598633

Token 458: ' chain' (ID: 13464)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.1211191788315773
    2. ' eliminate' → logprob: -2.371119260787964
    3. 'def' → logprob: -4.246119022369385
    4. ' elimination' → logprob: -5.621119022369385
    5. 'El' → logprob: -6.871119022369385
    6. ' def' → logprob: -8.371119499206543
    7. 'class' → logprob: -8.746119499206543
    8. ' el' → logprob: -8.746119499206543
    9. ' logic' → logprob: -8.871119499206543
    10. ' elim' → logprob: -9.121119499206543

Token 459: ' elimination' (ID: 77324)
  Prédit: 'El'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'El' → logprob: -0.6234067678451538
    2. 'el' → logprob: -1.6234067678451538
    3. ' elimination' → logprob: -1.7484067678451538
    4. '_el' → logprob: -3.1234068870544434
    5. '   ' → logprob: -3.6234068870544434
    6. 'def' → logprob: -4.998406887054443
    7. ' of' → logprob: -6.123406887054443
    8. 'class' → logprob: -6.123406887054443
    9. 'length' → logprob: -6.498406887054443
    10. ' ' → logprob: -6.873406887054443

Token 460: ' rule' (ID: 10652)
  Prédit: ' strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strategy' → logprob: -0.8493448495864868
    2. '   ' → logprob: -1.2243448495864868
    3. ' logic' → logprob: -1.7243448495864868
    4. 'strategy' → logprob: -2.8493447303771973
    5. 'def' → logprob: -4.474344730377197
    6. ' method' → logprob: -4.724344730377197
    7. ' of' → logprob: -4.974344730377197
    8. ' approach' → logprob: -6.099344730377197
    9. ' process' → logprob: -6.224344730377197
    10. ' ' → logprob: -6.474344730377197

Token 461: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6213802099227905
    2. '   ' → logprob: -1.4963802099227905
    3. ' where' → logprob: -2.74638032913208
    4. '.' → logprob: -2.99638032913208
    5. ' that' → logprob: -2.99638032913208
    6. ',' → logprob: -3.24638032913208
    7. ' for' → logprob: -3.87138032913208
    8. ':
' → logprob: -5.62138032913208
    9. ' of' → logprob: -5.74638032913208
    10. ' which' → logprob: -6.37138032913208

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06943832337856293
    2. '
' → logprob: -4.194438457489014
    3. 'El' → logprob: -4.444438457489014
    4. '    
' → logprob: -4.819438457489014
    5. ' A' → logprob: -5.194438457489014
    6. 'A' → logprob: -5.319438457489014
    7. '"""
' → logprob: -5.319438457489014
    8. 'If' → logprob: -5.694438457489014
    9. ' El' → logprob: -6.194438457489014
    10. 'Any' → logprob: -6.569438457489014

Token 463: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6081519722938538
    2. 'El' → logprob: -1.483151912689209
    3. '"""
' → logprob: -2.733151912689209
    4. 'If' → logprob: -3.608151912689209
    5. 'Remove' → logprob: -3.733151912689209
    6. 'Sequences' → logprob: -3.858151912689209
    7. 'Given' → logprob: -4.483151912689209
    8. 'Con' → logprob: -4.483151912689209
    9. '
' → logprob: -4.733151912689209
    10. ' El' → logprob: -4.858151912689209

Token 464: ' Remove' (ID: 18141)
  Prédit: 'El'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'El' → logprob: -0.9474378228187561
    2. 'Con' → logprob: -1.6974377632141113
    3. 'Sequences' → logprob: -2.0724377632141113
    4. 'If' → logprob: -2.6974377632141113
    5. 'def' → logprob: -2.6974377632141113
    6. 'Repeated' → logprob: -3.8224377632141113
    7. 'A' → logprob: -3.9474377632141113
    8. 'Remove' → logprob: -3.9474377632141113
    9. 'Chains' → logprob: -4.447437763214111
    10. 'Any' → logprob: -4.947437763214111

Token 465: ' sequences' (ID: 45665)
  Prédit: ' sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -1.0381091833114624
    2. ' all' → logprob: -1.1631091833114624
    3. 'all' → logprob: -1.2881091833114624
    4. ' consecutive' → logprob: -4.413109302520752
    5. ' contiguous' → logprob: -4.413109302520752
    6. ' any' → logprob: -4.538109302520752
    7. 'any' → logprob: -4.788109302520752
    8. 'con' → logprob: -5.913109302520752
    9. 'se' → logprob: -5.913109302520752
    10. 'chains' → logprob: -6.538109302520752

Token 466: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.16280274093151093
    2. 'of' → logprob: -1.9128026962280273
    3. '   ' → logprob: -6.412802696228027
    4. ' ' → logprob: -7.412802696228027
    5. '  ' → logprob: -9.037802696228027
    6. '    ' → logprob: -9.412802696228027
    7. '	of' → logprob: -9.912802696228027
    8. '       ' → logprob: -10.787802696228027
    9. '     ' → logprob: -10.912802696228027
    10. '<|end|>' → logprob: -11.537802696228027

Token 467: ' ' (ID: 220)
  Prédit: ' three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' three' → logprob: -0.8178746104240417
    2. 'three' → logprob: -0.9428746104240417
    3. '3' → logprob: -2.9428746700286865
    4. ' at' → logprob: -3.1928746700286865
    5. 'at' → logprob: -3.6928746700286865
    6. 'length' → logprob: -3.8178746700286865
    7. ' length' → logprob: -4.567874431610107
    8. ' the' → logprob: -5.067874431610107
    9. 'the' → logprob: -5.317874431610107
    10. ' ' → logprob: -5.692874431610107

Token 468: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7375500798225403
    2. 'three' → logprob: -0.7375500798225403
    3. ' three' → logprob: -3.4875500202178955
    4. 'at' → logprob: -4.862550258636475
    5. 'length' → logprob: -5.487550258636475
    6. ' at' → logprob: -7.987550258636475
    7. ' ' → logprob: -8.487549781799316
    8. 'two' → logprob: -9.237549781799316
    9. ' length' → logprob: -9.362549781799316
    10. '>=' → logprob: -9.737549781799316

Token 469: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.22894686460494995
    2. 'or' → logprob: -1.6039469242095947
    3. '<|end|>' → logprob: -5.728946685791016
    4. '+' → logprob: -8.728946685791016
    5. '	or' → logprob: -10.228946685791016
    6. '<|end|>' → logprob: -10.728946685791016
    7. ' ' → logprob: -10.728946685791016
    8. 'con' → logprob: -11.728946685791016
    9. ')' → logprob: -12.728946685791016
    10. '   ' → logprob: -12.853946685791016

Token 470: ' more' (ID: 945)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.1429036557674408
    2. ' more' → logprob: -2.0179035663604736
    3. '   ' → logprob: -8.767903327941895
    4. ' ' → logprob: -10.642903327941895
    5. '>' → logprob: -11.392903327941895
    6. 'More' → logprob: -12.142903327941895
    7. '_more' → logprob: -12.267903327941895
    8. '+' → logprob: -12.392903327941895
    9. 'greater' → logprob: -12.642903327941895
    10. '
' → logprob: -13.017903327941895

Token 471: ' consecutive' (ID: 40840)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.8069146275520325
    2. 'con' → logprob: -1.4319145679473877
    3. ' of' → logprob: -2.1819145679473877
    4. ' identical' → logprob: -2.4319145679473877
    5. 'of' → logprob: -3.0569145679473877
    6. '   ' → logprob: -4.181914806365967
    7. '<|end|>' → logprob: -4.181914806365967
    8. 'tokens' → logprob: -4.681914806365967
    9. ' consecutive' → logprob: -5.556914806365967
    10. ' contiguous' → logprob: -5.556914806365967

Token 472: ' characters' (ID: 9862)
  Prédit: ' characters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' characters' → logprob: -0.4839033782482147
    2. 'characters' → logprob: -0.9839034080505371
    3. 'tokens' → logprob: -6.358903408050537
    4. 'the' → logprob: -6.483903408050537
    5. 'chars' → logprob: -6.733903408050537
    6. 'same' → logprob: -6.733903408050537
    7. ' identical' → logprob: -6.983903408050537
    8. ' the' → logprob: -7.108903408050537
    9. '   ' → logprob: -7.733903408050537
    10. 'colored' → logprob: -7.858903408050537

Token 473: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.20095983147621155
    2. ' with' → logprob: -1.8259598016738892
    3. '   ' → logprob: -4.5759596824646
    4. 'with' → logprob: -4.8259596824646
    5. 'of' → logprob: -6.3259596824646
    6. ' having' → logprob: -8.075960159301758
    7. ' that' → logprob: -8.825960159301758
    8. ' in' → logprob: -8.825960159301758
    9. 's' → logprob: -9.200960159301758
    10. '       ' → logprob: -10.325960159301758

Token 474: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.38687798380851746
    2. ' the' → logprob: -1.1368780136108398
    3. 'same' → logprob: -12.13687801361084
    4. ' identical' → logprob: -14.38687801361084
    5. ' same' → logprob: -14.76187801361084
    6. '<|end|>' → logprob: -15.76187801361084
    7. '	the' → logprob: -15.76187801361084
    8. '   ' → logprob: -16.136877059936523
    9. 'a' → logprob: -16.636877059936523
    10. 'def' → logprob: -16.761877059936523

Token 475: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.1269369274377823
    2. ' same' → logprob: -2.126936912536621
    3. ' ' → logprob: -13.126936912536621
    4. '
' → logprob: -13.251936912536621
    5. '   ' → logprob: -13.501936912536621
    6. '```' → logprob: -13.626936912536621
    7. '.same' → logprob: -14.501936912536621
    8. '  ' → logprob: -14.751936912536621
    9. ' identical' → logprob: -14.876936912536621
    10. 'the' → logprob: -15.251936912536621

Token 476: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.07902836799621582
    2. ' color' → logprob: -2.579028367996216
    3. '   ' → logprob: -9.579028129577637
    4. '_color' → logprob: -11.329028129577637
    5. 'Color' → logprob: -11.579028129577637
    6. ')' → logprob: -11.579028129577637
    7. '	color' → logprob: -11.954028129577637
    8. ' ' → logprob: -12.204028129577637
    9. '=color' → logprob: -12.329028129577637
    10. '.color' → logprob: -12.704028129577637

Token 477: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7304366827011108
    2. '.' → logprob: -1.1054366827011108
    3. 'def' → logprob: -2.4804368019104004
    4. ' from' → logprob: -3.2304368019104004
    5. ' in' → logprob: -3.7304368019104004
    6. 'from' → logprob: -3.8554368019104004
    7. ' with' → logprob: -5.2304368019104
    8. ',' → logprob: -5.6054368019104
    9. ' that' → logprob: -6.2304368019104
    10. '.
' → logprob: -6.4804368019104

Token 478: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0816706046462059
    2. '   ' → logprob: -2.5816705226898193
    3. '

' → logprob: -6.456670761108398
    4. '    
' → logprob: -7.456670761108398
    5. 'def' → logprob: -7.831670761108398
    6. '<|end|>' → logprob: -9.706670761108398
    7. '```' → logprob: -9.831670761108398
    8. ')' → logprob: -10.206670761108398
    9. '
' → logprob: -10.831670761108398
    10. '<|end|>' → logprob: -10.956670761108398

Token 479: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6029560565948486
    2. '   ' → logprob: -0.8529560565948486
    3. '"""' → logprob: -3.9779560565948486
    4. '

' → logprob: -5.7279558181762695
    5. 'def' → logprob: -6.4779558181762695
    6. ')' → logprob: -6.4779558181762695
    7. '```' → logprob: -7.1029558181762695
    8. '"""

' → logprob: -8.60295581817627
    9. '    
' → logprob: -9.10295581817627
    10. ']' → logprob: -9.35295581817627

Token 480: ' Repeat' (ID: 75886)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6289315819740295
    2. ' def' → logprob: -0.8789315819740295
    3. '   ' → logprob: -4.003931522369385
    4. '
' → logprob: -4.378931522369385
    5. 'class' → logprob: -4.628931522369385
    6. 'Repeated' → logprob: -6.378931522369385
    7. 'If' → logprob: -6.753931522369385
    8. 'Repeat' → logprob: -6.878931522369385
    9. 'Continue' → logprob: -7.003931522369385
    10. 'from' → logprob: -7.253931522369385

Token 481: ' until' (ID: 4609)
  Prédit: ' until'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' until' → logprob: -0.712954580783844
    2. 'until' → logprob: -0.837954580783844
    3. '   ' → logprob: -3.087954521179199
    4. 'def' → logprob: -4.337954521179199
    5. ' the' → logprob: -5.087954521179199
    6. 'the' → logprob: -5.212954521179199
    7. 'while' → logprob: -6.212954521179199
    8. 'el' → logprob: -6.462954521179199
    9. '       ' → logprob: -6.962954521179199
    10. 'ly' → logprob: -7.337954521179199

Token 482: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.017030775547027588
    2. 'no' → logprob: -4.517030715942383
    3. ' True' → logprob: -5.267030715942383
    4. 'True' → logprob: -7.142030715942383
    5. ' none' → logprob: -12.017030715942383
    6. ' sequence' → logprob: -12.392030715942383
    7. ' there' → logprob: -13.892030715942383
    8. ' not' → logprob: -14.142030715942383
    9. 'none' → logprob: -14.517030715942383
    10. 'sequence' → logprob: -14.642030715942383

Token 483: ' more' (ID: 945)
  Prédit: ' more'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' more' → logprob: -0.030666273087263107
    2. ' changes' → logprob: -3.9056663513183594
    3. ' further' → logprob: -5.405666351318359
    4. 'more' → logprob: -5.530666351318359
    5. '_more' → logprob: -7.655666351318359
    6. ' sequences' → logprob: -8.28066635131836
    7. '   ' → logprob: -8.40566635131836
    8. 'changes' → logprob: -8.53066635131836
    9. '<|end|>' → logprob: -8.53066635131836
    10. ' sequence' → logprob: -9.40566635131836

Token 484: ' elimin' (ID: 21529)
  Prédit: ' elimin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elimin' → logprob: -0.19715526700019836
    2. ' changes' → logprob: -2.322155237197876
    3. 'el' → logprob: -2.822155237197876
    4. 'changes' → logprob: -4.822155475616455
    5. ' more' → logprob: -4.947155475616455
    6. ' chains' → logprob: -6.572155475616455
    7. ' elimination' → logprob: -7.072155475616455
    8. 'more' → logprob: -7.072155475616455
    9. ' sequences' → logprob: -7.072155475616455
    10. ' such' → logprob: -7.447155475616455

Token 485: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.000462366413557902
    2. 'ation' → logprob: -8.250462532043457
    3. 'inations' → logprob: -9.375462532043457
    4. 'able' → logprob: -9.875462532043457
    5. 'ate' → logprob: -11.000462532043457
    6. 'e' → logprob: -12.000462532043457
    7. 't' → logprob: -12.125462532043457
    8. 'atable' → logprob: -12.375462532043457
    9. 'ates' → logprob: -12.875462532043457
    10. 'a' → logprob: -13.000462532043457

Token 486: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.585715651512146
    2. 'are' → logprob: -0.835715651512146
    3. ' can' → logprob: -5.0857157707214355
    4. '   ' → logprob: -7.0857157707214355
    5. 'can' → logprob: -7.0857157707214355
    6. 'possible' → logprob: -7.2107157707214355
    7. ' possible' → logprob: -7.7107157707214355
    8. 'occur' → logprob: -7.8357157707214355
    9. ' occur' → logprob: -8.835715293884277
    10. '_possible' → logprob: -9.960715293884277

Token 487: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.12699288129806519
    2. ' possible' → logprob: -2.12699294090271
    3. 'found' → logprob: -10.251993179321289
    4. '_possible' → logprob: -11.001993179321289
    5. 'app' → logprob: -12.251993179321289
    6. ' found' → logprob: -13.001993179321289
    7. 'needed' → logprob: -13.626993179321289
    8. 'available' → logprob: -13.751993179321289
    9. ' detected' → logprob: -14.126993179321289
    10. 'ap' → logprob: -14.626993179321289

Token 488: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05346972122788429
    2. '.' → logprob: -3.053469657897949
    3. 'def' → logprob: -5.928469657897949
    4. '
' → logprob: -6.303469657897949
    5. '.
' → logprob: -8.55346965789795
    6. ',' → logprob: -9.67846965789795
    7. ' in' → logprob: -10.55346965789795
    8. '```' → logprob: -10.55346965789795
    9. ':' → logprob: -11.17846965789795
    10. '    
' → logprob: -11.92846965789795

Token 489: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47436293959617615
    2. '   ' → logprob: -0.9743629693984985
    3. '

' → logprob: -8.974363327026367
    4. '    
' → logprob: -9.724363327026367
    5. 'def' → logprob: -9.724363327026367
    6. ')' → logprob: -10.724363327026367
    7. '```' → logprob: -12.099363327026367
    8. '
' → logprob: -12.599363327026367
    9. '<|end|>' → logprob: -12.599363327026367
    10. '<|end|>' → logprob: -13.224363327026367

Token 490: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10326678305864334
    2. '   ' → logprob: -2.353266716003418
    3. 'def' → logprob: -6.103266716003418
    4. '

' → logprob: -7.603266716003418
    5. ')' → logprob: -8.478266716003418
    6. '    
' → logprob: -9.603266716003418
    7. '
' → logprob: -10.853266716003418
    8. '```' → logprob: -11.228266716003418
    9. ' def' → logprob: -12.353266716003418
    10. '"""' → logprob: -12.853266716003418

Token 491: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1719004064798355
    2. '   ' → logprob: -2.421900510787964
    3. ' def' → logprob: -2.671900510787964
    4. '
' → logprob: -9.671900749206543
    5. '    
' → logprob: -15.796900749206543
    6. '	def' → logprob: -16.296899795532227
    7. ' 
' → logprob: -18.171899795532227
    8. ' ' → logprob: -18.296899795532227
    9. '```' → logprob: -18.421899795532227
    10. '  ' → logprob: -18.421899795532227

Token 492: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.023293538717553e-05
    2. ' def' → logprob: -11.250030517578125
    3. 'MIN' → logprob: -11.500030517578125
    4. 'CHAIN' → logprob: -12.625030517578125
    5. '_min' → logprob: -14.500030517578125
    6. 'TH' → logprob: -14.500030517578125
    7. '_def' → logprob: -14.875030517578125
    8. '   ' → logprob: -15.125030517578125
    9. '_el' → logprob: -15.250030517578125
    10. 'class' → logprob: -15.375030517578125

Token 493: ' eliminate' (ID: 31408)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013653292320668697
    2. ' def' → logprob: -4.51365327835083
    3. 'el' → logprob: -6.01365327835083
    4. ' eliminate' → logprob: -9.138653755187988
    5. 'define' → logprob: -10.763653755187988
    6. 'class' → logprob: -12.763653755187988
    7. ' el' → logprob: -13.013653755187988
    8. 'ef' → logprob: -13.263653755187988
    9. 'override' → logprob: -13.388653755187988
    10. 'El' → logprob: -13.513653755187988

Token 494: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. 'self' → logprob: -16.250001907348633
    4. '(
' → logprob: -17.375001907348633
    5. ' (' → logprob: -18.750001907348633
    6. '   ' → logprob: -19.375001907348633
    7. '(Self' → logprob: -20.000001907348633
    8. '(s' → logprob: -20.250001907348633
    9. '(se' → logprob: -20.375001907348633
    10. '       ' → logprob: -20.625001907348633

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003520010272040963
    2. 'self' → logprob: -5.7535200119018555
    3. '   ' → logprob: -9.253520011901855
    4. ' ,' → logprob: -9.378520011901855
    5. '       ' → logprob: -9.503520011901855
    6. ')' → logprob: -9.753520011901855
    7. '(self' → logprob: -11.253520011901855
    8. ' self' → logprob: -11.753520011901855
    9. '```' → logprob: -13.253520011901855
    10. ' ' → logprob: -13.503520011901855

Token 496: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.7235586047172546
    2. 'sequence' → logprob: -0.7235586047172546
    3. 'self' → logprob: -3.5985586643218994
    4. ' self' → logprob: -5.97355842590332
    5. '       ' → logprob: -10.22355842590332
    6. '   ' → logprob: -12.09855842590332
    7. '(sequence' → logprob: -13.84855842590332
    8. ' ' → logprob: -14.47355842590332
    9. '(self' → logprob: -14.72355842590332
    10. '.sequence' → logprob: -15.22355842590332

Token 497: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31916138529777527
    2. ')' → logprob: -1.3191614151000977
    3. '       ' → logprob: -5.444161415100098
    4. '(self' → logprob: -7.444161415100098
    5. '   ' → logprob: -7.694161415100098
    6. 'self' → logprob: -7.819161415100098
    7. ',' → logprob: -9.819161415100098
    8. '):' → logprob: -10.319161415100098
    9. '):
' → logprob: -11.569161415100098
    10. '```' → logprob: -11.819161415100098

Token 498: ' Character' (ID: 27668)
  Prédit: 'Character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: -0.04871806129813194
    2. ' Character' → logprob: -3.048717975616455
    3. ''' → logprob: -9.423718452453613
    4. 'Linear' → logprob: -10.298718452453613
    5. ' '' → logprob: -11.798718452453613
    6. ')' → logprob: -12.923718452453613
    7. ' ' → logprob: -13.173718452453613
    8. ' Linear' → logprob: -13.548718452453613
    9. ' character' → logprob: -13.798718452453613
    10. '   ' → logprob: -14.298718452453613

Token 499: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -1.0280383548888494e-06
    2. 'sequence' → logprob: -14.750000953674316
    3. ' sequence' → logprob: -15.125000953674316
    4. ' Sequence' → logprob: -15.875000953674316
    5. '_sequence' → logprob: -16.250001907348633
    6. ')' → logprob: -16.625001907348633
    7. '.Sequence' → logprob: -18.125001907348633
    8. '_SEQUENCE' → logprob: -19.000001907348633
    9. '):' → logprob: -19.250001907348633
    10. ':' → logprob: -19.375001907348633

Token 500: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. '   ' → logprob: -13.75000286102295
    3. ' )' → logprob: -14.12500286102295
    4. '):' → logprob: -15.25000286102295
    5. ')->' → logprob: -15.37500286102295
    6. '       ' → logprob: -15.87500286102295
    7. ':' → logprob: -16.625001907348633
    8. '):
' → logprob: -16.625001907348633
    9. 'self' → logprob: -17.000001907348633
    10. ' ->' → logprob: -18.750001907348633

Token 501: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7961898446083069
    2. '->' → logprob: -1.421189785003662
    3. ' ->' → logprob: -1.796189785003662
    4. ':' → logprob: -2.046189785003662
    5. ':
' → logprob: -4.921189785003662
    6. '       ' → logprob: -5.671189785003662
    7. '   ' → logprob: -6.671189785003662
    8. ')->' → logprob: -8.04619026184082
    9. ':
' → logprob: -11.29619026184082
    10. 'self' → logprob: -11.79619026184082

Token 502: ' Character' (ID: 27668)
  Prédit: 'Character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: -0.4293461740016937
    2. ' Character' → logprob: -1.0543462038040161
    3. 'Linear' → logprob: -7.679346084594727
    4. ''' → logprob: -9.679346084594727
    5. ' Linear' → logprob: -9.804346084594727
    6. 'Sequence' → logprob: -10.679346084594727
    7. '   ' → logprob: -11.929346084594727
    8. ' '' → logprob: -11.929346084594727
    9. 'None' → logprob: -11.929346084594727
    10. ' None' → logprob: -12.179346084594727

Token 503: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -6.337155355140567e-05
    2. 'sequence' → logprob: -10.375062942504883
    3. ' sequence' → logprob: -11.000062942504883
    4. ':
' → logprob: -12.000062942504883
    5. ':' → logprob: -12.375062942504883
    6. '       ' → logprob: -13.500062942504883
    7. ' Sequence' → logprob: -14.000062942504883
    8. '_sequence' → logprob: -14.125062942504883
    9. '   ' → logprob: -14.625062942504883
    10. 'Sequ' → logprob: -15.000062942504883

Token 504: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23955366015434265
    2. ':
' → logprob: -1.989553689956665
    3. '       ' → logprob: -2.614553689956665
    4. '):
' → logprob: -6.364553451538086
    5. '):' → logprob: -7.114553451538086
    6. ')' → logprob: -7.989553451538086
    7. '   ' → logprob: -9.864553451538086
    8. ',' → logprob: -10.364553451538086
    9. '(self' → logprob: -10.864553451538086
    10. ':

' → logprob: -11.364553451538086

Token 505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025758943520486355
    2. 'result' → logprob: -6.502575874328613
    3. 'seq' → logprob: -7.627575874328613
    4. 'current' → logprob: -8.127575874328613
    5. 'colors' → logprob: -8.627575874328613
    6. ' seq' → logprob: -10.377575874328613
    7. '   ' → logprob: -10.752575874328613
    8. 'sequence' → logprob: -10.877575874328613
    9. ' current' → logprob: -11.502575874328613
    10. ' result' → logprob: -11.627575874328613

Token 506: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.43254536390304565
    2. 'seq' → logprob: -1.5575454235076904
    3. 'result' → logprob: -2.5575454235076904
    4. '       ' → logprob: -2.9325454235076904
    5. 'curr' → logprob: -5.932545185089111
    6. ' current' → logprob: -6.432545185089111
    7. 'changed' → logprob: -6.557545185089111
    8. 'prev' → logprob: -6.682545185089111
    9. ' seq' → logprob: -7.057545185089111
    10. 'new' → logprob: -7.307545185089111

Token 507: '_sequence' (ID: 55606)
  Prédit: '_seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -0.29879030585289
    2. ' =' → logprob: -2.048790216445923
    3. '_sequence' → logprob: -2.048790216445923
    4. '=' → logprob: -7.798790454864502
    5. 'seq' → logprob: -9.798789978027344
    6. 'sequence' → logprob: -11.173789978027344
    7. '_colors' → logprob: -11.798789978027344
    8. 'Seq' → logprob: -12.173789978027344
    9. 'Sequence' → logprob: -12.548789978027344
    10. ' sequence' → logprob: -13.173789978027344

Token 508: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931514143943787
    2. ' =' → logprob: -0.6931514143943787
    3. '   ' → logprob: -13.318151473999023
    4. ':' → logprob: -14.068151473999023
    5. '=current' → logprob: -14.818151473999023
    6. ' ' → logprob: -15.318151473999023
    7. ')' → logprob: -15.568151473999023
    8. 's' → logprob: -15.693151473999023
    9. '```' → logprob: -16.068151473999023
    10. '=
' → logprob: -16.068151473999023

Token 509: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0031777136027812958
    2. ' sequence' → logprob: -5.753177642822266
    3. '(sequence' → logprob: -18.253177642822266
    4. '   ' → logprob: -18.878177642822266
    5. '       ' → logprob: -19.753177642822266
    6. '.sequence' → logprob: -20.628177642822266
    7. 'Sequence' → logprob: -21.753177642822266
    8. 'sequ' → logprob: -21.753177642822266
    9. 's' → logprob: -22.378177642822266
    10. 'seq' → logprob: -22.503177642822266

Token 510: '.clone' (ID: 29419)
  Prédit: '.clone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.clone' → logprob: -0.007648983504623175
    2. '.' → logprob: -5.007648944854736
    3. '
' → logprob: -7.757648944854736
    4. '.cl' → logprob: -8.257649421691895
    5. ' .' → logprob: -8.507649421691895
    6. '.deepcopy' → logprob: -11.382649421691895
    7. 'while' → logprob: -11.882649421691895
    8. '       ' → logprob: -12.257649421691895
    9. 'clone' → logprob: -12.507649421691895
    10. '   ' → logprob: -12.632649421691895

Token 511: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.04217348247766495
    2. '()' → logprob: -3.292173385620117
    3. '       ' → logprob: -6.167173385620117
    4. 'while' → logprob: -6.667173385620117
    5. '()

' → logprob: -7.292173385620117
    6. '()
' → logprob: -10.542173385620117
    7. '
' → logprob: -10.542173385620117
    8. '        
' → logprob: -11.042173385620117
    9. ' while' → logprob: -13.167173385620117
    10. '()\' → logprob: -14.292173385620117

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16154666244983673
    2. 'while' → logprob: -1.9115467071533203
    3. ' while' → logprob: -6.66154670715332
    4. '        
' → logprob: -10.78654670715332
    5. 'changed' → logprob: -11.28654670715332
    6. 'done' → logprob: -13.16154670715332
    7. '	while' → logprob: -13.28654670715332
    8. '```' → logprob: -13.53654670715332
    9. '   ' → logprob: -13.78654670715332
    10. '
' → logprob: -14.03654670715332

Token 513: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.01841377094388008
    2. 'changed' → logprob: -4.018413543701172
    3. '       ' → logprob: -8.268413543701172
    4. ' while' → logprob: -12.768413543701172
    5. 'changes' → logprob: -13.393413543701172
    6. ' changed' → logprob: -13.768413543701172
    7. 'change' → logprob: -14.268413543701172
    8. 'has' → logprob: -14.393413543701172
    9. 'made' → logprob: -15.018413543701172
    10. '        
' → logprob: -16.143413543701172

Token 514: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.002477200934663415
    2. ' True' → logprob: -6.002477169036865
    3. '   ' → logprob: -13.627477645874023
    4. '(True' → logprob: -16.127477645874023
    5. '       ' → logprob: -16.502477645874023
    6. 'true' → logprob: -16.627477645874023
    7. ' ' → logprob: -18.627477645874023
    8. '           ' → logprob: -19.627477645874023
    9. '
' → logprob: -20.252477645874023
    10. 'TRUE' → logprob: -21.002477645874023

Token 515: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1269640177488327
    2. ':
' → logprob: -2.1269640922546387
    3. '           ' → logprob: -10.75196361541748
    4. ':

' → logprob: -12.25196361541748
    5. ':
' → logprob: -12.50196361541748
    6. ',' → logprob: -13.25196361541748
    7. '):
' → logprob: -13.62696361541748
    8. '       ' → logprob: -13.87696361541748
    9. ' :' → logprob: -14.12696361541748
    10. '):' → logprob: -15.12696361541748

Token 516: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026144467294216156
    2. 'removed' → logprob: -5.026144504547119
    3. 'changed' → logprob: -5.151144504547119
    4. 'colors' → logprob: -5.151144504547119
    5. 'found' → logprob: -5.651144504547119
    6. '   ' → logprob: -6.401144504547119
    7. 'prev' → logprob: -7.901144504547119
    8. 'changes' → logprob: -8.276144027709961
    9. '       ' → logprob: -8.276144027709961
    10. 'positions' → logprob: -8.276144027709961

Token 517: ' groups' (ID: 8896)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.8386843204498291
    2. '           ' → logprob: -1.463684320449829
    3. 'length' → logprob: -2.463684320449829
    4. 'indices' → logprob: -2.463684320449829
    5. 'changed' → logprob: -3.338684320449829
    6. 'colors' → logprob: -3.713684320449829
    7. 'positions' → logprob: -3.713684320449829
    8. 'n' → logprob: -4.08868408203125
    9. 'new' → logprob: -4.33868408203125
    10. 'el' → logprob: -4.58868408203125

Token 518: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0006111674592830241
    2. ':' → logprob: -8.000611305236816
    3. '       ' → logprob: -9.250611305236816
    4. ',' → logprob: -9.375611305236816
    5. '=' → logprob: -9.875611305236816
    6. '=[]' → logprob: -10.625611305236816
    7. '   ' → logprob: -12.250611305236816
    8. '           ' → logprob: -12.625611305236816
    9. '=[]
' → logprob: -12.750611305236816
    10. '        ' → logprob: -12.875611305236816

Token 519: ' self' (ID: 1051)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.5763207077980042
    2. '[]' → logprob: -0.8263207077980042
    3. 'self' → logprob: -7.951320648193359
    4. ' []
' → logprob: -10.82632064819336
    5. ' []' → logprob: -12.57632064819336
    6. '[]

' → logprob: -12.70132064819336
    7. '[' → logprob: -13.82632064819336
    8. ' self' → logprob: -14.70132064819336
    9. '[],' → logprob: -15.45132064819336
    10. '[
' → logprob: -15.70132064819336

Token 520: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.001578182796947658
    2. '.find' → logprob: -6.751578330993652
    3. '.group' → logprob: -8.001578330993652
    4. '.ident' → logprob: -11.001578330993652
    5. '_find' → logprob: -11.126578330993652
    6. '   ' → logprob: -11.501578330993652
    7. '.detect' → logprob: -11.501578330993652
    8. '.get' → logprob: -11.751578330993652
    9. '_group' → logprob: -13.001578330993652
    10. 'find' → logprob: -13.126578330993652

Token 521: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0023653015960007906
    2. 'group' → logprob: -6.5023651123046875
    3. 'get' → logprob: -7.3773651123046875
    4. 'identify' → logprob: -9.002365112304688
    5. 'detect' → logprob: -9.877365112304688
    6. 'collect' → logprob: -10.252365112304688
    7. 'extract' → logprob: -11.127365112304688
    8. ' find' → logprob: -11.877365112304688
    9. 'compute' → logprob: -13.627365112304688
    10. 'g' → logprob: -13.877365112304688

Token 522: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -1.055371642112732
    2. 'current' → logprob: -1.680371642112732
    3. '_con' → logprob: -1.680371642112732
    4. 'con' → logprob: -2.8053717613220215
    5. '_runs' → logprob: -2.8053717613220215
    6. 'groups' → logprob: -3.0553717613220215
    7. '_sequences' → logprob: -3.1803717613220215
    8. '(current' → logprob: -3.6803717613220215
    9. 'runs' → logprob: -3.6803717613220215
    10. '_current' → logprob: -4.9303717613220215

Token 523: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0007088594138622284
    2. '(' → logprob: -7.625709056854248
    3. '           ' → logprob: -9.75070858001709
    4. 'current' → logprob: -9.87570858001709
    5. ' =' → logprob: -10.25070858001709
    6. '=current' → logprob: -10.37570858001709
    7. '       ' → logprob: -10.75070858001709
    8. '=' → logprob: -12.25070858001709
    9. ' (' → logprob: -12.37570858001709
    10. '[current' → logprob: -12.87570858001709

Token 524: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -6.074907287256792e-05
    2. 'sequence' → logprob: -9.87506103515625
    3. '_' → logprob: -12.87506103515625
    4. 'Sequence' → logprob: -13.00006103515625
    5. '_color' → logprob: -13.62506103515625
    6. '(sequence' → logprob: -14.25006103515625
    7. '_sequences' → logprob: -14.87506103515625
    8. '```' → logprob: -15.00006103515625
    9. ')' → logprob: -15.25006103515625
    10. '_SEQUENCE' → logprob: -15.62506103515625

Token 525: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1232098788022995
    2. ')
' → logprob: -2.2482099533081055
    3. '(current' → logprob: -4.8732099533081055
    4. '())' → logprob: -6.9982099533081055
    5. '())
' → logprob: -7.6232099533081055
    6. ',' → logprob: -8.373209953308105
    7. ' )
' → logprob: -8.373209953308105
    8. ' )' → logprob: -8.498209953308105
    9. 'current' → logprob: -8.498209953308105
    10. '()' → logprob: -9.123209953308105

Token 526: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012136871227994561
    2. '            
' → logprob: -7.126213550567627
    3. '
' → logprob: -7.876213550567627
    4. ',' → logprob: -12.626214027404785
    5. '    
' → logprob: -12.751214027404785
    6. '           
' → logprob: -12.751214027404785
    7. '          ' → logprob: -13.001214027404785
    8. '        
' → logprob: -13.001214027404785
    9. '```' → logprob: -13.376214027404785
    10. '            ' → logprob: -13.376214027404785

Token 527: ' removable' (ID: 74952)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005690345540642738
    2. '           ' → logprob: -5.380690574645996
    3. ' if' → logprob: -7.005690574645996
    4. 'removed' → logprob: -9.630690574645996
    5. 'any' → logprob: -10.005690574645996
    6. 'changed' → logprob: -10.755690574645996
    7. 'found' → logprob: -11.255690574645996
    8. 'has' → logprob: -11.880690574645996
    9. 'el' → logprob: -12.255690574645996
    10. '   ' → logprob: -14.005690574645996

Token 528: '_indices' (ID: 43508)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02379007451236248
    2. '=' → logprob: -4.148789882659912
    3. '_indices' → logprob: -5.648789882659912
    4. 's' → logprob: -5.773789882659912
    5. '_' → logprob: -8.02379035949707
    6. '_groups' → logprob: -8.39879035949707
    7. '_indexes' → logprob: -8.77379035949707
    8. ':' → logprob: -9.52379035949707
    9. '_found' → logprob: -9.64879035949707
    10. '_positions' → logprob: -9.64879035949707

Token 529: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02680167928338051
    2. '=' → logprob: -3.776801586151123
    3. ':' → logprob: -5.651801586151123
    4. ' ' → logprob: -10.901802062988281
    5. 's' → logprob: -11.276802062988281
    6. ' :' → logprob: -12.651802062988281
    7. '=[]' → logprob: -12.901802062988281
    8. '=[]
' → logprob: -14.776802062988281
    9. ',' → logprob: -15.151802062988281
    10. '  ' → logprob: -15.151802062988281

Token 530: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.034525249153375626
    2. '[]' → logprob: -3.534525156021118
    3. '[]
' → logprob: -5.409525394439697
    4. ' set' → logprob: -9.409524917602539
    5. '[]

' → logprob: -9.409524917602539
    6. '{' → logprob: -9.784524917602539
    7. '[' → logprob: -10.034524917602539
    8. '[
' → logprob: -11.034524917602539
    9. '[]}' → logprob: -13.159524917602539
    10. '=set' → logprob: -13.159524917602539

Token 531: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.3134603798389435
    2. '()' → logprob: -1.313460350036621
    3. '()

' → logprob: -8.688460350036621
    4. '()
' → logprob: -10.438460350036621
    5. '(
' → logprob: -15.813460350036621
    6. '()


' → logprob: -16.313461303710938
    7. '()`' → logprob: -16.313461303710938
    8. '()\' → logprob: -16.313461303710938
    9. '();' → logprob: -16.438461303710938
    10. '()]' → logprob: -16.688461303710938

Token 532: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021093101531732827
    2. 'for' → logprob: -9.500210762023926
    3. ' for' → logprob: -9.875210762023926
    4. '            
' → logprob: -10.250210762023926
    5. '
' → logprob: -11.000210762023926
    6. '       ' → logprob: -11.625210762023926
    7. '               ' → logprob: -12.000210762023926
    8. '   ' → logprob: -12.875210762023926
    9. ',' → logprob: -13.125210762023926
    10. '           
' → logprob: -13.500210762023926

Token 533: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16953735053539276
    2. '           ' → logprob: -1.9195373058319092
    3. ' for' → logprob: -4.794537544250488
    4. 'start' → logprob: -7.169537544250488
    5. 'i' → logprob: -8.794537544250488
    6. '   ' → logprob: -11.169537544250488
    7. 'group' → logprob: -11.294537544250488
    8. 'last' → logprob: -11.294537544250488
    9. 'current' → logprob: -12.044537544250488
    10. 'found' → logprob: -12.419537544250488

Token 534: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.35284319519996643
    2. 'color' → logprob: -1.477843165397644
    3. 'group' → logprob: -2.7278432846069336
    4. ' color' → logprob: -6.852843284606934
    5. ' start' → logprob: -7.102843284606934
    6. 'idx' → logprob: -7.727843284606934
    7. ' group' → logprob: -7.852843284606934
    8. '(start' → logprob: -8.352843284606934
    9. 'g' → logprob: -8.977843284606934
    10. '(color' → logprob: -8.977843284606934

Token 535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08228136599063873
    2. ' in' → logprob: -2.5822813510894775
    3. 'in' → logprob: -6.082281589508057
    4. ' ,' → logprob: -7.957281589508057
    5. '<|end|>' → logprob: -8.332281112670898
    6. '<|end|>' → logprob: -8.832281112670898
    7. ',end' → logprob: -9.582281112670898
    8. '_idx' → logprob: -9.957281112670898
    9. 'and' → logprob: -10.332281112670898
    10. '=' → logprob: -10.457281112670898

Token 536: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.022135235369205475
    2. 'length' → logprob: -4.522135257720947
    3. ' end' → logprob: -4.522135257720947
    4. ' length' → logprob: -8.772134780883789
    5. '   ' → logprob: -12.522134780883789
    6. '       ' → logprob: -14.022134780883789
    7. '           ' → logprob: -14.647134780883789
    8. 'count' → logprob: -14.897134780883789
    9. ' ' → logprob: -16.64713478088379
    10. ',end' → logprob: -17.27213478088379

Token 537: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06834282726049423
    2. ',' → logprob: -2.943342924118042
    3. 'in' → logprob: -4.318342685699463
    4. ' ,' → logprob: -10.693343162536621
    5. ' ' → logprob: -12.568343162536621
    6. ')' → logprob: -12.568343162536621
    7. '   ' → logprob: -12.943343162536621
    8. ',in' → logprob: -13.318343162536621
    9. ',
' → logprob: -13.318343162536621
    10. '_in' → logprob: -13.693343162536621

Token 538: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.006719871424138546
    2. ' color' → logprob: -5.006720066070557
    3. 'col' → logprob: -13.006719589233398
    4. '       ' → logprob: -14.131719589233398
    5. 'c' → logprob: -14.256719589233398
    6. 'clr' → logprob: -15.256719589233398
    7. '   ' → logprob: -15.631719589233398
    8. '           ' → logprob: -15.756719589233398
    9. ' ' → logprob: -15.881719589233398
    10. '	color' → logprob: -17.0067195892334

Token 539: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019374389667063951
    2. 'in' → logprob: -6.251937389373779
    3. ' ' → logprob: -12.376937866210938
    4. ',' → logprob: -13.501937866210938
    5. '   ' → logprob: -14.126937866210938
    6. '	in' → logprob: -14.376937866210938
    7. '_in' → logprob: -15.001937866210938
    8. '  ' → logprob: -15.251937866210938
    9. '    ' → logprob: -15.501937866210938
    10. '
' → logprob: -15.751937866210938

Token 540: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.04502717778086662
    2. ' length' → logprob: -3.170027256011963
    3. 'count' → logprob: -6.670027256011963
    4. '_length' → logprob: -7.670027256011963
    5. '_' → logprob: -8.795026779174805
    6. '   ' → logprob: -9.920026779174805
    7. ' ' → logprob: -10.420026779174805
    8. 'size' → logprob: -10.545026779174805
    9. ' count' → logprob: -11.170026779174805
    10. ' _' → logprob: -11.920026779174805

Token 541: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005257952958345413
    2. 'in' → logprob: -5.255258083343506
    3. '_in' → logprob: -11.255257606506348
    4. ' ' → logprob: -12.505257606506348
    5. '   ' → logprob: -13.380257606506348
    6. '_' → logprob: -13.755257606506348
    7. '
' → logprob: -13.880257606506348
    8. '	in' → logprob: -13.880257606506348
    9. '    ' → logprob: -14.505257606506348
    10. ' =' → logprob: -15.005257606506348

Token 542: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.06224450841546059
    2. ' groups' → logprob: -2.812244415283203
    3. 'self' → logprob: -9.062244415283203
    4. '(groups' → logprob: -9.812244415283203
    5. '   ' → logprob: -10.562244415283203
    6. ' self' → logprob: -10.687244415283203
    7. '[(' → logprob: -11.062244415283203
    8. '[' → logprob: -11.062244415283203
    9. '.groups' → logprob: -12.187244415283203
    10. '       ' → logprob: -12.437244415283203

Token 543: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2578202486038208
    2. ':
' → logprob: -1.5078202486038208
    3. '           ' → logprob: -6.007820129394531
    4. '               ' → logprob: -6.257820129394531
    5. ',' → logprob: -7.257820129394531
    6. ' if' → logprob: -8.507820129394531
    7. '       ' → logprob: -8.507820129394531
    8. ' in' → logprob: -9.257820129394531
    9. '   ' → logprob: -9.382820129394531
    10. ' :' → logprob: -10.132820129394531

Token 544: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003265530103817582
    2. ' if' → logprob: -5.753265380859375
    3. '           ' → logprob: -9.753265380859375
    4. 'if' → logprob: -11.628265380859375
    5. '                   ' → logprob: -11.878265380859375
    6. '   ' → logprob: -12.878265380859375
    7. '```' → logprob: -13.503265380859375
    8. '<|end|>' → logprob: -13.503265380859375
    9. '	           ' → logprob: -13.628265380859375
    10. ' for' → logprob: -13.753265380859375

Token 545: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.26146939396858215
    2. '                   ' → logprob: -2.3864693641662598
    3. '               ' → logprob: -2.6364693641662598
    4. ' if' → logprob: -2.7614693641662598
    5. '		           ' → logprob: -7.01146936416626
    6. '           ' → logprob: -7.51146936416626
    7. '	               ' → logprob: -7.51146936416626
    8. '   ' → logprob: -7.51146936416626
    9. '	           ' → logprob: -7.63646936416626
    10. '	if' → logprob: -9.386469841003418

Token 546: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3868725001811981
    2. ' length' → logprob: -1.1368725299835205
    3. '               ' → logprob: -14.261872291564941
    4. '                   ' → logprob: -14.886872291564941
    5. '	length' → logprob: -15.136872291564941
    6. '(length' → logprob: -16.386873245239258
    7. '           ' → logprob: -16.511873245239258
    8. 'ength' → logprob: -17.761873245239258
    9. ' ' → logprob: -17.761873245239258
    10. 'Length' → logprob: -18.386873245239258

Token 547: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.386907160282135
    2. '>=' → logprob: -1.1369071006774902
    3. '   ' → logprob: -10.761907577514648
    4. ')>=' → logprob: -12.011907577514648
    5. ' ' → logprob: -12.261907577514648
    6. ']>=' → logprob: -12.886907577514648
    7. ' ' → logprob: -14.886907577514648
    8. '	' → logprob: -15.011907577514648
    9. '  ' → logprob: -15.636907577514648
    10. '    ' → logprob: -15.761907577514648

Token 548: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0003410647332202643
    2. ' ' → logprob: -8.000341415405273
    3. '   ' → logprob: -12.125341415405273
    4. '
' → logprob: -16.375341415405273
    5. '```' → logprob: -16.750341415405273
    6. '  ' → logprob: -17.687841415405273
    7. '' → logprob: -18.312841415405273
    8. '٤' → logprob: -18.750341415405273
    9. '۴' → logprob: -18.875341415405273
    10. '       ' → logprob: -18.937841415405273

Token 549: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -18.875
    4. '۴' → logprob: -19.5
    5. '٤' → logprob: -20.25
    6. '４' → logprob: -20.375
    7. '   ' → logprob: -20.4375
    8. '' → logprob: -20.5
    9. '৪' → logprob: -20.625
    10. '
' → logprob: -20.625

Token 550: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07992152124643326
    2. ':' → logprob: -2.5799214839935303
    3. '                   ' → logprob: -6.954921722412109
    4. '               ' → logprob: -10.20492172241211
    5. ' and' → logprob: -11.45492172241211
    6. '):
' → logprob: -11.70492172241211
    7. '           ' → logprob: -12.07992172241211
    8. '                       ' → logprob: -12.07992172241211
    9. ':
' → logprob: -12.70492172241211
    10. ',' → logprob: -12.70492172241211

Token 551: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002363040344789624
    2. ' for' → logprob: -7.002363204956055
    3. '               ' → logprob: -7.627363204956055
    4. ' removable' → logprob: -8.002363204956055
    5. 'rem' → logprob: -8.127363204956055
    6. '                       ' → logprob: -9.377363204956055
    7. ',' → logprob: -9.627363204956055
    8. 'for' → logprob: -9.627363204956055
    9. '                    
' → logprob: -9.877363204956055
    10. '                  ' → logprob: -11.127363204956055

Token 552: ' removable' (ID: 74952)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.0019637243822216988
    2. '                   ' → logprob: -6.7519636154174805
    3. 'for' → logprob: -7.5019636154174805
    4. '               ' → logprob: -8.87696361541748
    5. ' removable' → logprob: -9.25196361541748
    6. 'removed' → logprob: -13.37696361541748
    7. '   ' → logprob: -13.50196361541748
    8. '           ' → logprob: -13.62696361541748
    9. 'remove' → logprob: -14.25196361541748
    10. 'remo' → logprob: -15.50196361541748

Token 553: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0006327360169962049
    2. 'indices' → logprob: -7.7506327629089355
    3. ' =' → logprob: -10.000632286071777
    4. '
' → logprob: -10.625632286071777
    5. 'Indices' → logprob: -10.625632286071777
    6. 'for' → logprob: -11.375632286071777
    7. '=' → logprob: -11.500632286071777
    8. '   ' → logprob: -11.625632286071777
    9. 's' → logprob: -11.750632286071777
    10. '_' → logprob: -11.750632286071777

Token 554: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.0009203928639180958
    2. '.' → logprob: -7.000920295715332
    3. 'update' → logprob: -11.875920295715332
    4. '   ' → logprob: -14.125920295715332
    5. '           ' → logprob: -15.375920295715332
    6. '|' → logprob: -15.500920295715332
    7. ' |=' → logprob: -15.500920295715332
    8. ' .' → logprob: -15.750920295715332
    9. '.add' → logprob: -16.12592124938965
    10. '       ' → logprob: -16.25092124938965

Token 555: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.014164801687002182
    2. 'range' → logprob: -4.264164924621582
    3. '(set' → logprob: -14.639164924621582
    4. ' range' → logprob: -14.889164924621582
    5. '(' → logprob: -15.264164924621582
    6. '	range' → logprob: -15.639164924621582
    7. '(i' → logprob: -17.264163970947266
    8. 'set' → logprob: -18.389163970947266
    9. 'Range' → logprob: -18.514163970947266
    10. '`' → logprob: -18.514163970947266

Token 556: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.00020580526324920356
    2. 'start' → logprob: -8.500205993652344
    3. '(' → logprob: -13.250205993652344
    4. '[start' → logprob: -15.000205993652344
    5. ' start' → logprob: -15.875205993652344
    6. ' (' → logprob: -17.625205993652344
    7. '	start' → logprob: -18.625205993652344
    8. '=start' → logprob: -18.750205993652344
    9. '   ' → logprob: -19.250205993652344
    10. ')' → logprob: -19.625205993652344

Token 557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028663314878940582
    2. ',end' → logprob: -6.502866268157959
    3. ' ,' → logprob: -6.627866268157959
    4. ',
' → logprob: -10.752866744995117
    5. '+' → logprob: -11.502866744995117
    6. '   ' → logprob: -13.752866744995117
    7. ')' → logprob: -14.002866744995117
    8. '           ' → logprob: -14.002866744995117
    9. ',start' → logprob: -14.252866744995117
    10. ',

' → logprob: -14.377866744995117

Token 558: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.018150877207517624
    2. ' end' → logprob: -4.018150806427002
    3. '(end' → logprob: -14.76815128326416
    4. '   ' → logprob: -15.01815128326416
    5. 'start' → logprob: -16.268150329589844
    6. '	end' → logprob: -16.768150329589844
    7. ',end' → logprob: -17.393150329589844
    8. '=end' → logprob: -17.643150329589844
    9. ' ' → logprob: -17.893150329589844
    10. '[end' → logprob: -18.268150329589844

Token 559: '))
' (ID: 2210)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7588237524032593
    2. ' +' → logprob: -0.7588237524032593
    3. '))' → logprob: -2.758823871612549
    4. ' ))' → logprob: -8.88382339477539
    5. '))
' → logprob: -10.50882339477539
    6. ')' → logprob: -11.00882339477539
    7. ')))' → logprob: -12.38382339477539
    8. '   ' → logprob: -13.00882339477539
    9. '[' → logprob: -13.75882339477539
    10. '1' → logprob: -13.75882339477539

Token 560: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14425982534885406
    2. '
' → logprob: -2.0192599296569824
    3. '            
' → logprob: -6.644259929656982
    4. ' 
' → logprob: -8.894259452819824
    5. '        
' → logprob: -10.269259452819824
    6. '  
' → logprob: -10.644259452819824
    7. '

' → logprob: -10.894259452819824
    8. '    
' → logprob: -11.019259452819824
    9. '                    
' → logprob: -11.769259452819824
    10. '               ' → logprob: -12.019259452819824

Token 561: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006661131512373686
    2. 'if' (adapté à ' if') → logprob: -5.1316609382629395
    3. ' if' → logprob: -7.5066609382629395
    4. '            
' → logprob: -8.756661415100098
    5. '
' → logprob: -11.006661415100098
    6. '+' → logprob: -13.756661415100098
    7. 'import' → logprob: -13.881661415100098
    8. 'If' → logprob: -14.006661415100098
    9. 'new' → logprob: -14.131661415100098
    10. '          ' → logprob: -14.381661415100098

Token 562: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3132762610912323
    2. ' not' → logprob: -1.3132762908935547
    3. 'len' → logprob: -11.688276290893555
    4. '   ' → logprob: -12.688276290893555
    5. '!' → logprob: -13.938276290893555
    6. '	not' → logprob: -14.188276290893555
    7. ' len' → logprob: -14.938276290893555
    8. '(not' → logprob: -15.188276290893555
    9. '           ' → logprob: -16.063276290893555
    10. ' ' → logprob: -16.063276290893555

Token 563: ' removable' (ID: 74952)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.004079828038811684
    2. ' removable' → logprob: -5.504079818725586
    3. 'remove' → logprob: -13.879079818725586
    4. 'removed' → logprob: -14.879079818725586
    5. ' remov' → logprob: -16.879079818725586
    6. ' ' → logprob: -18.379079818725586
    7. 'res' → logprob: -18.504079818725586
    8. '
' → logprob: -18.629079818725586
    9. 'rm' → logprob: -18.629079818725586
    10. '(rem' → logprob: -18.629079818725586

Token 564: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.20620599389076233
    2. 'indices' → logprob: -1.70620596408844
    3. 'es' → logprob: -6.83120584487915
    4. 'e' → logprob: -7.58120584487915
    5. 'ues' → logprob: -7.58120584487915
    6. 'Indices' → logprob: -8.081206321716309
    7. 'ices' → logprob: -8.206206321716309
    8. 'ces' → logprob: -8.206206321716309
    9. 's' → logprob: -8.331206321716309
    10. 'ies' → logprob: -8.456206321716309

Token 565: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023320946842432022
    2. ':
' → logprob: -3.7733209133148193
    3. '           ' → logprob: -10.523321151733398
    4. '               ' → logprob: -10.523321151733398
    5. ':
' → logprob: -12.398321151733398
    6. '                   ' → logprob: -12.648321151733398
    7. '):' → logprob: -13.023321151733398
    8. '   ' → logprob: -13.148321151733398
    9. '       ' → logprob: -13.148321151733398
    10. '):
' → logprob: -13.398321151733398

Token 566: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003716854262165725
    2. '           ' → logprob: -8.000371932983398
    3. ':
' → logprob: -10.750371932983398
    4. ':' → logprob: -11.500371932983398
    5. 'break' → logprob: -13.875371932983398
    6. ' break' → logprob: -14.000371932983398
    7. '
' → logprob: -14.250371932983398
    8. '                   ' → logprob: -14.375371932983398
    9. ',' → logprob: -14.500371932983398
    10. '              ' → logprob: -15.250371932983398

Token 567: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4016976058483124
    2. ' break' → logprob: -1.9016976356506348
    3. '               ' → logprob: -2.4016976356506348
    4. '           ' → logprob: -2.4016976356506348
    5. '	break' → logprob: -9.026697158813477
    6. '   ' → logprob: -9.026697158813477
    7. 'return' → logprob: -9.151697158813477
    8. ' return' → logprob: -11.526697158813477
    9. '                   ' → logprob: -11.776697158813477
    10. '       ' → logprob: -12.651697158813477

Token 568: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6340095400810242
    2. '           ' → logprob: -0.7590095400810242
    3. '            
' → logprob: -6.88400936126709
    4. '

' → logprob: -8.75900936126709
    5. '
' → logprob: -9.50900936126709
    6. ',' → logprob: -10.13400936126709
    7. '    
' → logprob: -10.13400936126709
    8. ' 
' → logprob: -11.13400936126709
    9. '        
' → logprob: -11.25900936126709
    10. '  
' → logprob: -11.88400936126709

Token 569: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012616774067282677
    2. '
' → logprob: -4.6376166343688965
    3. '            
' → logprob: -6.1376166343688965
    4. 'new' → logprob: -8.137617111206055
    5. ' new' → logprob: -9.012617111206055
    6. '
' → logprob: -9.387617111206055
    7. '    
' → logprob: -10.637617111206055
    8. ',' → logprob: -10.887617111206055
    9. ' 
' → logprob: -11.137617111206055
    10. '        
' → logprob: -11.137617111206055

Token 570: ' current' (ID: 2208)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2883729934692383
    2. ' new' → logprob: -1.5383729934692383
    3. '           ' → logprob: -3.4133729934692383
    4. 'current' (adapté à ' current') → logprob: -6.663372993469238
    5. 'filtered' → logprob: -7.913372993469238
    6. ' current' → logprob: -8.038372993469238
    7. 'colors' → logprob: -8.288372993469238
    8. 'remaining' → logprob: -8.538372993469238
    9. 'next' → logprob: -8.913372993469238
    10. '#' → logprob: -9.538372993469238

Token 571: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -5.097437315271236e-05
    2. '._' → logprob: -10.50005054473877
    3. '_' → logprob: -11.75005054473877
    4. 'Sequence' → logprob: -11.87505054473877
    5. 'sequence' → logprob: -12.50005054473877
    6. '_sequences' → logprob: -14.00005054473877
    7. '_set' → logprob: -14.25005054473877
    8. '.set' → logprob: -14.25005054473877
    9. '.' → logprob: -15.00005054473877
    10. ' =' → logprob: -15.25005054473877

Token 572: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9650152921676636
    2. '.set' → logprob: -1.2150152921676636
    3. '._' → logprob: -1.7150152921676636
    4. '=' → logprob: -1.9650152921676636
    5. '.' → logprob: -7.590015411376953
    6. '=set' → logprob: -7.840015411376953
    7. '=_' → logprob: -8.090015411376953
    8. 'set' → logprob: -8.215015411376953
    9. '.remove' → logprob: -8.715015411376953
    10. ':' → logprob: -8.965015411376953

Token 573: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47711196541786194
    2. 'Linear' → logprob: -0.9771119356155396
    3. 'current' → logprob: -6.72711181640625
    4. ' self' → logprob: -6.72711181640625
    5. ' Linear' → logprob: -7.47711181640625
    6. '_linear' → logprob: -11.10211181640625
    7. '   ' → logprob: -11.47711181640625
    8. ' current' → logprob: -11.60211181640625
    9. 'Line' → logprob: -12.22711181640625
    10. '[self' → logprob: -12.60211181640625

Token 574: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.47053152322769165
    2. '.clone' → logprob: -1.5955314636230469
    3. '.current' → logprob: -1.9705314636230469
    4. 'current' → logprob: -4.720531463623047
    5. '.el' → logprob: -5.220531463623047
    6. '.__' → logprob: -5.345531463623047
    7. '.remove' → logprob: -5.720531463623047
    8. '.' → logprob: -6.095531463623047
    9. '.chain' → logprob: -6.220531463623047
    10. 'clone' → logprob: -6.720531463623047

Token 575: 'remove' (ID: 4942)
  Prédit: 'remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.0007856834563426673
    2. 'el' → logprob: -8.125785827636719
    3. 'create' → logprob: -8.250785827636719
    4. 'filter' → logprob: -8.750785827636719
    5. 'build' → logprob: -10.000785827636719
    6. 'clone' → logprob: -12.000785827636719
    7. '_remove' → logprob: -12.125785827636719
    8. 'apply' → logprob: -12.625785827636719
    9. 'delete' → logprob: -13.000785827636719
    10. ' remove' → logprob: -13.500785827636719

Token 576: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.24742984771728516
    2. '(current' → logprob: -2.122429847717285
    3. 'indices' → logprob: -2.497429847717285
    4. 'current' → logprob: -5.372429847717285
    5. '_chars' → logprob: -5.622429847717285
    6. '_positions' → logprob: -6.497429847717285
    7. 'positions' → logprob: -6.497429847717285
    8. 'chars' → logprob: -6.997429847717285
    9. 'characters' → logprob: -7.247429847717285
    10. '_elements' → logprob: -7.622429847717285

Token 577: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.62501335144043
    3. ' (' → logprob: -13.00001335144043
    4. 'current' → logprob: -13.37501335144043
    5. '(
' → logprob: -15.12501335144043
    6. '```' → logprob: -16.37501335144043
    7. '(indices' → logprob: -16.75001335144043
    8. ',current' → logprob: -16.87501335144043
    9. '(cur' → logprob: -17.12501335144043
    10. '(curr' → logprob: -17.37501335144043

Token 578: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.0004251931968610734
    2. 'sequence' → logprob: -8.125425338745117
    3. '_indices' → logprob: -9.125425338745117
    4. 'Sequence' → logprob: -11.750425338745117
    5. '_sequences' → logprob: -12.875425338745117
    6. '_' → logprob: -13.000425338745117
    7. 'indices' → logprob: -13.000425338745117
    8. 'quence' → logprob: -13.875425338745117
    9. '_SEQUENCE' → logprob: -14.125425338745117
    10. '
' → logprob: -14.250425338745117

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.73446003627032e-05
    2. ' ,' → logprob: -9.250097274780273
    3. ',
' → logprob: -14.875097274780273
    4. '(rem' → logprob: -15.125097274780273
    5. '           ' → logprob: -15.250097274780273
    6. '               ' → logprob: -16.750097274780273
    7. ',current' → logprob: -17.000097274780273
    8. 'rem' → logprob: -17.000097274780273
    9. '   ' → logprob: -17.375097274780273
    10. '       ' → logprob: -17.875097274780273

Token 580: ' sorted' (ID: 20099)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.22978942096233368
    2. 'sorted' → logprob: -1.60478937625885
    3. 'list' → logprob: -6.1047892570495605
    4. ' removable' → logprob: -7.2297892570495605
    5. ' sorted' → logprob: -7.7297892570495605
    6. 'removed' → logprob: -8.104789733886719
    7. '[' → logprob: -8.229789733886719
    8. ' rem' → logprob: -8.979789733886719
    9. 'remove' → logprob: -9.354789733886719
    10. ' list' → logprob: -9.979789733886719

Token 581: '(rem' (ID: 150425)
  Prédit: '(rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rem' → logprob: -0.0017707353690639138
    2. 'rem' → logprob: -6.501770973205566
    3. '(list' → logprob: -8.251770973205566
    4. 'list' → logprob: -12.001770973205566
    5. '(remove' → logprob: -14.001770973205566
    6. '(' → logprob: -14.626770973205566
    7. '```' → logprob: -17.87677001953125
    8. 'remove' → logprob: -18.12677001953125
    9. '(
' → logprob: -18.37677001953125
    10. '/rem' → logprob: -18.75177001953125

Token 582: 'ovable' (ID: 99400)
  Prédit: 'ovable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ovable' → logprob: -0.000573167169932276
    2. 'oved' → logprob: -8.37557315826416
    3. 'able' → logprob: -9.00057315826416
    4. 'ov' → logprob: -9.87557315826416
    5. 'utable' → logprob: -9.87557315826416
    6. 'unable' → logprob: -10.87557315826416
    7. 'orable' → logprob: -11.12557315826416
    8. 'ove' → logprob: -11.50057315826416
    9. 'oval' → logprob: -11.50057315826416
    10. '[' → logprob: -11.50057315826416

Token 583: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.00447616633027792
    2. 'indices' → logprob: -5.504476070404053
    3. '(indices' → logprob: -9.129476547241211
    4. 'ex' → logprob: -9.254476547241211
    5. 'Indices' → logprob: -11.004476547241211
    6. '   ' → logprob: -11.004476547241211
    7. '"indices' → logprob: -11.004476547241211
    8. '
' → logprob: -11.004476547241211
    9. 'ices' → logprob: -11.129476547241211
    10. '_indexes' → logprob: -11.254476547241211

Token 584: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.028321681544184685
    2. '()))' → logprob: -3.7783217430114746
    3. ' ))' → logprob: -5.903321743011475
    4. '))
' → logprob: -6.653321743011475
    5. ')' → logprob: -7.153321743011475
    6. '()))
' → logprob: -9.528321266174316
    7. '()' → logprob: -10.028321266174316
    8. '())' → logprob: -10.528321266174316
    9. ')))' → logprob: -10.778321266174316
    10. '),' → logprob: -11.278321266174316

Token 585: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014373396523296833
    2. '
' → logprob: -4.389373302459717
    3. 'return' → logprob: -6.389373302459717
    4. ' return' → logprob: -9.389373779296875
    5. '           ' → logprob: -10.014373779296875
    6. '   ' → logprob: -10.889373779296875
    7. '        
' → logprob: -11.514373779296875
    8. 'def' → logprob: -12.264373779296875
    9. '```' → logprob: -12.389373779296875
    10. '
' → logprob: -12.764373779296875

Token 586: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1009049117565155
    2. 'return' (adapté à ' return') → logprob: -2.350904941558838
    3. ' return' → logprob: -7.725904941558838
    4. '   ' → logprob: -9.10090446472168
    5. '
' → logprob: -9.22590446472168
    6. 'def' → logprob: -10.35090446472168
    7. '           ' → logprob: -12.22590446472168
    8. '        
' → logprob: -12.47590446472168
    9. '	return' → logprob: -13.10090446472168
    10. ' ' → logprob: -13.85090446472168

Token 587: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0031781906727701426
    2. ' current' → logprob: -5.753178119659424
    3. '(current' → logprob: -14.503178596496582
    4. '[current' → logprob: -19.878177642822266
    5. '$current' → logprob: -19.878177642822266
    6. '	current' → logprob: -20.128177642822266
    7. '.current' → logprob: -20.878177642822266
    8. '_current' → logprob: -20.878177642822266
    9. '=current' → logprob: -20.878177642822266
    10. 'Current' → logprob: -21.253177642822266

Token 588: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -3.7697225252486533e-06
    2. 'sequence' → logprob: -12.500003814697266
    3. 'Sequence' → logprob: -19.625003814697266
    4. '_sequences' → logprob: -19.750003814697266
    5. '_SEQUENCE' → logprob: -19.875003814697266
    6. ' sequence' → logprob: -20.500003814697266
    7. 's' → logprob: -21.250003814697266
    8. '_' → logprob: -21.250003814697266
    9. '_seq' → logprob: -21.750003814697266
    10. 'sequ' → logprob: -21.875003814697266

Token 589: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4759133458137512
    2. '
' → logprob: -0.9759133458137512
    3. '    
' → logprob: -6.6009135246276855
    4. '<|end|>' → logprob: -8.725913047790527
    5. 'def' → logprob: -9.475913047790527
    6. '

' → logprob: -9.850913047790527
    7. '        
' → logprob: -9.850913047790527
    8. '```' → logprob: -10.100913047790527
    9. ' def' → logprob: -10.975913047790527
    10. '  
' → logprob: -11.475913047790527

Token 590: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062321458011865616
    2. '
' → logprob: -2.937321424484253
    3. '    
' → logprob: -5.187321662902832
    4. 'def' → logprob: -7.437321662902832
    5. '  
' → logprob: -7.937321662902832
    6. ' def' → logprob: -8.687321662902832
    7. '<|end|>' → logprob: -8.812321662902832
    8. '        
' → logprob: -9.437321662902832
    9. ' ' → logprob: -9.562321662902832
    10. ' 
' → logprob: -9.687321662902832

Token 591: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07211173325777054
    2. '   ' → logprob: -2.8221118450164795
    3. ' def' → logprob: -5.0721116065979
    4. '
' → logprob: -5.5721116065979
    5. '    
' → logprob: -10.947112083435059
    6. '	def' → logprob: -13.572112083435059
    7. ' 
' → logprob: -14.572112083435059
    8. '_def' → logprob: -14.572112083435059
    9. ' ' → logprob: -14.697112083435059
    10. '

' → logprob: -15.322112083435059

Token 592: ' _' (ID: 1175)
  Prédit: '_find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_find' → logprob: -0.0002619318547658622
    2. ' _' → logprob: -8.250262260437012
    3. '_remove' → logprob: -15.750262260437012
    4. '_' → logprob: -15.750262260437012
    5. '_f' → logprob: -16.750261306762695
    6. '_parse' → logprob: -16.875261306762695
    7. '_found' → logprob: -17.000261306762695
    8. '_get' → logprob: -17.000261306762695
    9. '_Find' → logprob: -17.125261306762695
    10. '_add' → logprob: -17.375261306762695

Token 593: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -8.41866585687967e-06
    2. '_find' → logprob: -11.750008583068848
    3. 'remove' → logprob: -15.625008583068848
    4. ' find' → logprob: -16.25000762939453
    5. '.find' → logprob: -16.75000762939453
    6. '(find' → logprob: -17.00000762939453
    7. '	find' → logprob: -17.37500762939453
    8. '_' → logprob: -17.62500762939453
    9. 'def' → logprob: -18.12500762939453
    10. '`' → logprob: -18.37500762939453

Token 594: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -1.0280383548888494e-06
    2. '_sequences' → logprob: -15.500000953674316
    3. '_indices' → logprob: -15.875000953674316
    4. '_' → logprob: -16.000001907348633
    5. '_ranges' → logprob: -16.125001907348633
    6. '_group' → logprob: -16.625001907348633
    7. 'groups' → logprob: -16.625001907348633
    8. ' _' → logprob: -16.875001907348633
    9. '_clusters' → logprob: -16.875001907348633
    10. '_positions' → logprob: -17.000001907348633

Token 595: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002668192028068006
    2. '(' → logprob: -8.250267028808594
    3. '(
' → logprob: -12.375267028808594
    4. 'self' → logprob: -13.750267028808594
    5. '   ' → logprob: -15.875267028808594
    6. ' (' → logprob: -16.625267028808594
    7. '       ' → logprob: -18.625267028808594
    8. '(

' → logprob: -19.125267028808594
    9. '(Self' → logprob: -19.250267028808594
    10. 'def' → logprob: -19.500267028808594

Token 596: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.051066520740278e-05
    2. '(' → logprob: -9.750060081481934
    3. 'self' → logprob: -13.750060081481934
    4. ' (' → logprob: -14.000060081481934
    5. '(
' → logprob: -15.250060081481934
    6. ')' → logprob: -17.37506103515625
    7. 'def' → logprob: -17.62506103515625
    8. '   ' → logprob: -17.75006103515625
    9. ')(' → logprob: -17.87506103515625
    10. '       ' → logprob: -19.00006103515625

Token 597: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.024927325546741486
    2. 'self' → logprob: -4.024927139282227
    3. ' sequence' → logprob: -5.024927139282227
    4. 'seq' → logprob: -9.149927139282227
    5. '   ' → logprob: -10.274927139282227
    6. ' self' → logprob: -10.524927139282227
    7. '       ' → logprob: -11.774927139282227
    8. 'current' → logprob: -13.274927139282227
    9. ' ' → logprob: -13.649927139282227
    10. '(sequence' → logprob: -14.524927139282227

Token 598: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4418538510799408
    2. '(self' → logprob: -1.1918538808822632
    3. 'self' → logprob: -3.1918537616729736
    4. '       ' → logprob: -5.066854000091553
    5. '   ' → logprob: -5.441854000091553
    6. ',' → logprob: -6.691854000091553
    7. ' self' → logprob: -8.816853523254395
    8. '):
' → logprob: -9.066853523254395
    9. '):' → logprob: -9.316853523254395
    10. ':' → logprob: -9.566853523254395

Token 599: ' Character' (ID: 27668)
  Prédit: 'Character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: -0.00040409780922345817
    2. ' Character' → logprob: -7.875403881072998
    3. ')' → logprob: -11.375404357910156
    4. '   ' → logprob: -12.625404357910156
    5. 'Linear' → logprob: -12.750404357910156
    6. ' ' → logprob: -13.000404357910156
    7. '  ' → logprob: -13.625404357910156
    8. 'character' → logprob: -14.375404357910156
    9. 'Sequence' → logprob: -15.000404357910156
    10. 'Color' → logprob: -15.250404357910156

Token 600: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.0007201764383353293
    2. '.get' → logprob: -8.500720024108887
    3. ')' → logprob: -8.625720024108887
    4. '_sequence' → logprob: -8.875720024108887
    5. '   ' → logprob: -9.625720024108887
    6. '       ' → logprob: -10.750720024108887
    7. 'get' → logprob: -10.875720024108887
    8. 'sequence' → logprob: -11.000720024108887
    9. 'length' → logprob: -11.125720024108887
    10. 'Length' → logprob: -11.500720024108887

Token 601: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026777281891554594
    2. 'self' → logprob: -8.25026798248291
    3. '       ' → logprob: -13.00026798248291
    4. '   ' → logprob: -13.12526798248291
    5. '):
' → logprob: -14.25026798248291
    6. ')->' → logprob: -14.62526798248291
    7. ' )' → logprob: -14.75026798248291
    8. '(self' → logprob: -15.12526798248291
    9. '):' → logprob: -15.25026798248291
    10. ' self' → logprob: -16.375267028808594

Token 602: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7520394325256348
    2. ' ->' → logprob: -1.2520394325256348
    3. '->' → logprob: -1.5020394325256348
    4. '       ' → logprob: -4.127039432525635
    5. '(self' → logprob: -6.252039432525635
    6. ':' → logprob: -7.002039432525635
    7. '   ' → logprob: -7.752039432525635
    8. 'self' → logprob: -8.127038955688477
    9. ')->' → logprob: -8.502038955688477
    10. ':
' → logprob: -10.127038955688477

Token 603: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.029750952497124672
    2. ' List' → logprob: -3.5297510623931885
    3. '[List' → logprob: -15.15475082397461
    4. 'list' → logprob: -15.90475082397461
    5. '   ' → logprob: -16.27975082397461
    6. '	List' → logprob: -17.65475082397461
    7. ' ' → logprob: -17.77975082397461
    8. ' list' → logprob: -18.27975082397461
    9. '_list' → logprob: -20.27975082397461
    10. 'Tuple' → logprob: -20.40475082397461

Token 604: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '[
' → logprob: -14.125000953674316
    3. '   ' → logprob: -14.500000953674316
    4. '[int' → logprob: -16.750001907348633
    5. '       ' → logprob: -17.625001907348633
    6. '[(' → logprob: -18.000001907348633
    7. '```' → logprob: -18.875001907348633
    8. '[List' → logprob: -19.000001907348633
    9. '<Tuple' → logprob: -19.625001907348633
    10. '[...]' → logprob: -20.000001907348633

Token 605: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -1.3782830137643032e-05
    2. ' Tuple' → logprob: -11.37501335144043
    3. '   ' → logprob: -13.25001335144043
    4. '[' → logprob: -15.00001335144043
    5. '  ' → logprob: -17.00001335144043
    6. '       ' → logprob: -17.37501335144043
    7. ' ' → logprob: -17.75001335144043
    8. 'tuple' → logprob: -18.25001335144043
    9. 'Tu' → logprob: -18.37501335144043
    10. '     ' → logprob: -18.50001335144043

Token 606: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -9.627176768844947e-05
    2. 'int' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.37509536743164
    4. '(int' → logprob: -17.62509536743164
    5. ',int' → logprob: -18.00009536743164
    6. ']int' → logprob: -18.62509536743164
    7. '[
' → logprob: -18.75009536743164
    8. '<int' → logprob: -19.37509536743164
    9. '	int' → logprob: -19.37509536743164
    10. '
' → logprob: -19.87509536743164

Token 607: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008720697835087776
    2. ',int' → logprob: -4.758720874786377
    3. '[int' → logprob: -9.258720397949219
    4. 'int' → logprob: -11.633720397949219
    5. '   ' → logprob: -13.508720397949219
    6. ' ,' → logprob: -14.633720397949219
    7. ',float' → logprob: -15.383720397949219
    8. ',
' → logprob: -17.38372039794922
    9. ',bool' → logprob: -17.50872039794922
    10. ' ' → logprob: -18.13372039794922

Token 608: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.990154047845863e-05
    2. ' int' → logprob: -10.375049591064453
    3. '[int' → logprob: -11.250049591064453
    4. '   ' → logprob: -12.625049591064453
    5. ' ' → logprob: -14.750049591064453
    6. '
' → logprob: -15.125049591064453
    7. ']int' → logprob: -15.125049591064453
    8. '	int' → logprob: -15.375049591064453
    9. '```' → logprob: -15.375049591064453
    10. '<int' → logprob: -15.625049591064453

Token 609: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037436678539961576
    2. ',int' → logprob: -5.628743648529053
    3. 'int' → logprob: -9.628744125366211
    4. ' ,' → logprob: -10.128744125366211
    5. '[int' → logprob: -10.253744125366211
    6. '   ' → logprob: -13.003744125366211
    7. ',
' → logprob: -16.37874412536621
    8. ' int' → logprob: -16.50374412536621
    9. '       ' → logprob: -16.75374412536621
    10. '(int' → logprob: -17.62874412536621

Token 610: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.587483221665025e-05
    2. ' int' → logprob: -10.000065803527832
    3. '   ' → logprob: -11.500065803527832
    4. '[int' → logprob: -11.750065803527832
    5. '	int' → logprob: -14.625065803527832
    6. ' ' → logprob: -14.875065803527832
    7. '       ' → logprob: -15.250065803527832
    8. '  ' → logprob: -15.500065803527832
    9. '```' → logprob: -15.500065803527832
    10. ']int' → logprob: -15.750065803527832

Token 611: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039885283331386745
    2. ',int' → logprob: -7.875398635864258
    3. ' ,' → logprob: -11.000398635864258
    4. 'int' → logprob: -13.625398635864258
    5. '   ' → logprob: -14.375398635864258
    6. '[int' → logprob: -15.125398635864258
    7. ',
' → logprob: -17.500398635864258
    8. ',float' → logprob: -18.625398635864258
    9. ']]' → logprob: -18.875398635864258
    10. '(int' → logprob: -18.875398635864258

Token 612: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001319063303526491
    2. ' int' → logprob: -9.000131607055664
    3. '   ' → logprob: -12.125131607055664
    4. ' ' → logprob: -13.375131607055664
    5. '[int' → logprob: -14.500131607055664
    6. '
' → logprob: -15.250131607055664
    7. '  ' → logprob: -15.375131607055664
    8. '	int' → logprob: -15.750131607055664
    9. ']int' → logprob: -16.125131607055664
    10. '(int' → logprob: -16.500131607055664

Token 613: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.39219772815704346
    2. ']:' → logprob: -1.1421977281570435
    3. ']' → logprob: -6.017197608947754
    4. ']:
' → logprob: -6.017197608947754
    5. ']]:
' → logprob: -8.517197608947754
    6. ']:

' → logprob: -8.642197608947754
    7. '):
' → logprob: -10.767197608947754
    8. ' ]' → logprob: -11.767197608947754
    9. ']:


' → logprob: -12.017197608947754
    10. '):' → logprob: -12.267197608947754

Token 614: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.641841820150148e-05
    2. '```' → logprob: -11.50002670288086
    3. '        
' → logprob: -12.37502670288086
    4. ':' → logprob: -12.62502670288086
    5. '
' → logprob: -13.50002670288086
    6. '   ' → logprob: -13.87502670288086
    7. ',' → logprob: -13.87502670288086
    8. '#' → logprob: -14.50002670288086
    9. 'n' → logprob: -14.87502670288086
    10. '{' → logprob: -14.87502670288086

Token 615: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' (adapté à ' groups') → logprob: -0.2539903521537781
    2. '       ' → logprob: -1.5039904117584229
    3. 'result' → logprob: -6.753990173339844
    4. 'results' → logprob: -7.878990173339844
    5. ' groups' → logprob: -8.128990173339844
    6. 'n' → logprob: -9.503990173339844
    7. 'start' → logprob: -10.503990173339844
    8. '```' → logprob: -10.628990173339844
    9. 'length' → logprob: -10.878990173339844
    10. '   ' → logprob: -11.128990173339844

Token 616: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47466930747032166
    2. '=' → logprob: -0.974669337272644
    3. '       ' → logprob: -7.849669456481934
    4. '=[]' → logprob: -9.224669456481934
    5. '=[]
' → logprob: -9.849669456481934
    6. ':' → logprob: -11.349669456481934
    7. '   ' → logprob: -11.474669456481934
    8. '[]' → logprob: -11.724669456481934
    9. ')' → logprob: -11.974669456481934
    10. '(self' → logprob: -12.099669456481934

Token 617: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.011109715327620506
    2. '[]' → logprob: -4.511109828948975
    3. ' []
' → logprob: -10.011109352111816
    4. '[]

' → logprob: -11.011109352111816
    5. '       ' → logprob: -15.261109352111816
    6. ' []' → logprob: -16.136110305786133
    7. '   ' → logprob: -16.261110305786133
    8. '[])
' → logprob: -16.886110305786133
    9. '=[]
' → logprob: -17.636110305786133
    10. '[
' → logprob: -19.011110305786133

Token 618: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003845555940642953
    2. 'start' → logprob: -5.628845691680908
    3. 'if' → logprob: -9.00384521484375
    4. 'n' → logprob: -9.75384521484375
    5. 'idx' → logprob: -10.75384521484375
    6. 'length' → logprob: -11.25384521484375
    7. 'current' → logprob: -11.75384521484375
    8. 'i' → logprob: -11.87884521484375
    9. ' start' → logprob: -12.37884521484375
    10. ' if' → logprob: -13.00384521484375

Token 619: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.45337438583374023
    2. 'start' → logprob: -1.2033743858337402
    3. 'if' → logprob: -2.9533743858337402
    4. 'length' → logprob: -4.95337438583374
    5. '       ' → logprob: -5.45337438583374
    6. 'i' → logprob: -7.45337438583374
    7. 'seq' → logprob: -8.703374862670898
    8. 'idx' → logprob: -9.953374862670898
    9. 'current' → logprob: -10.328374862670898
    10. ' n' → logprob: -12.828374862670898

Token 620: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2530308663845062
    2. '=' → logprob: -1.5030308961868286
    3. '       ' → logprob: -6.878030776977539
    4. ',' → logprob: -10.503030776977539
    5. '   ' → logprob: -10.878030776977539
    6. '=len' → logprob: -10.878030776977539
    7. ')' → logprob: -13.878030776977539
    8. ' ' → logprob: -14.128030776977539
    9. '=int' → logprob: -14.378030776977539
    10. '        ' → logprob: -15.003030776977539

Token 621: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.006715728435665369
    2. ' sequence' → logprob: -5.006715774536133
    3. '(sequence' → logprob: -15.631715774536133
    4. '       ' → logprob: -15.881715774536133
    5. '   ' → logprob: -16.881715774536133
    6. 'length' → logprob: -17.506715774536133
    7. '.sequence' → logprob: -18.381715774536133
    8. '0' → logprob: -18.631715774536133
    9. 'len' → logprob: -18.756715774536133
    10. 'current' → logprob: -18.756715774536133

Token 622: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.048885174095630646
    2. '().' → logprob: -3.0488851070404053
    3. 'length' → logprob: -8.673885345458984
    4. '.' → logprob: -9.798885345458984
    5. '()' → logprob: -10.048885345458984
    6. '.LENGTH' → logprob: -11.548885345458984
    7. '   ' → logprob: -11.798885345458984
    8. ' length' → logprob: -12.923885345458984
    9. '       ' → logprob: -13.173885345458984
    10. ' .' → logprob: -13.548885345458984

Token 623: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009426692849956453
    2. '
' → logprob: -7.250942707061768
    3. ',' → logprob: -8.87594223022461
    4. 'if' → logprob: -10.75094223022461
    5. 'i' → logprob: -11.50094223022461
    6. 'prev' → logprob: -11.75094223022461
    7. 'idx' → logprob: -11.87594223022461
    8. '        
' → logprob: -12.00094223022461
    9. ' =' → logprob: -12.25094223022461
    10. 'current' → logprob: -12.25094223022461

Token 624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023129817098379135
    2. 'i' → logprob: -4.148129940032959
    3. ' i' → logprob: -5.273129940032959
    4. '```' → logprob: -6.773129940032959
    5. 'start' → logprob: -7.523129940032959
    6. 'if' → logprob: -9.0231294631958
    7. 'idx' → logprob: -9.7731294631958
    8. 'current' → logprob: -11.1481294631958
    9. 'prev' → logprob: -11.1481294631958
    10. ' if' → logprob: -11.2731294631958

Token 625: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.017870359122753143
    2. 'start' → logprob: -4.2678704261779785
    3. 'i' → logprob: -5.7678704261779785
    4. '       ' → logprob: -7.5178704261779785
    5. ' if' → logprob: -10.51786994934082
    6. '        
' → logprob: -13.64286994934082
    7. '```' → logprob: -14.14286994934082
    8. ' i' → logprob: -15.01786994934082
    9. 'current' → logprob: -15.01786994934082
    10. 'prev' → logprob: -15.14286994934082

Token 626: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01416738796979189
    2. ' n' → logprob: -4.264167308807373
    3. '0' → logprob: -13.014167785644531
    4. '	n' → logprob: -14.389167785644531
    5. '   ' → logprob: -14.639167785644531
    6. '=' → logprob: -15.764167785644531
    7. '
' → logprob: -15.889167785644531
    8. ' ' → logprob: -16.26416778564453
    9. '_n' → logprob: -16.51416778564453
    10. 'not' → logprob: -17.13916778564453

Token 627: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07889694720506668
    2. ' ==' → logprob: -2.578896999359131
    3. '=' → logprob: -13.078896522521973
    4. '0' → logprob: -13.828896522521973
    5. '==
' → logprob: -13.828896522521973
    6. '===' → logprob: -13.953896522521973
    7. ')==' → logprob: -13.953896522521973
    8. '()==' → logprob: -14.578896522521973
    9. ']==' → logprob: -15.203896522521973
    10. '>' → logprob: -15.953896522521973

Token 628: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001801801408873871
    2. ' ' → logprob: -8.6251802444458
    3. '۰' → logprob: -15.5001802444458
    4. '   ' → logprob: -16.250179290771484
    5. '```' → logprob: -17.125179290771484
    6. '  ' → logprob: -17.687679290771484
    7. ' ' → logprob: -17.875179290771484
    8. '    ' → logprob: -18.062679290771484
    9. 'n' → logprob: -18.187679290771484
    10. '=' → logprob: -18.187679290771484

Token 629: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. '۰' → logprob: -16.250001907348633
    4. '```' → logprob: -17.375001907348633
    5. '1' → logprob: -17.625001907348633
    6. '=' → logprob: -17.625001907348633
    7. 'n' → logprob: -18.812501907348633
    8. '   ' → logprob: -18.937501907348633
    9. '０' → logprob: -19.000001907348633
    10. '00' → logprob: -19.500001907348633

Token 630: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25197163224220276
    2. ':' → logprob: -1.5019716024398804
    3. '       ' → logprob: -10.876971244812012
    4. ':return' → logprob: -11.251971244812012
    5. ' or' → logprob: -12.876971244812012
    6. '           ' → logprob: -13.001971244812012
    7. '):
' → logprob: -13.376971244812012
    8. ' :
' → logprob: -14.001971244812012
    9. ':
' → logprob: -14.126971244812012
    10. '   ' → logprob: -14.126971244812012

Token 631: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027165452484041452
    2. 'return' → logprob: -6.877716541290283
    3. ' return' → logprob: -7.377716541290283
    4. '   ' → logprob: -8.002717018127441
    5. 'i' → logprob: -8.752717018127441
    6. '       ' → logprob: -9.002717018127441
    7. '0' → logprob: -9.252717018127441
    8. '
' → logprob: -9.377717018127441
    9. ' i' → logprob: -9.502717018127441
    10. '```' → logprob: -9.627717018127441

Token 632: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04351165518164635
    2. '           ' → logprob: -3.5435116291046143
    3. ' return' → logprob: -4.293511867523193
    4. '
' → logprob: -12.043511390686035
    5. '       ' → logprob: -13.918511390686035
    6. '```' → logprob: -14.043511390686035
    7. '0' → logprob: -14.293511390686035
    8. '	return' → logprob: -14.418511390686035
    9. ':return' → logprob: -14.668511390686035
    10. '   ' → logprob: -15.168511390686035

Token 633: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.001599725685082376
    2. '[]' → logprob: -6.5015997886657715
    3. ' groups' → logprob: -9.251599311828613
    4. ' []' → logprob: -14.126599311828613
    5. '[]
' → logprob: -14.501599311828613
    6. '.groups' → logprob: -17.12660026550293
    7. '[]

' → logprob: -17.12660026550293
    8. '(groups' → logprob: -17.25160026550293
    9. 'group' → logprob: -18.00160026550293
    10. '[]}' → logprob: -18.12660026550293

Token 634: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060034312307834625
    2. '
' → logprob: -2.9350342750549316
    3. '        
' → logprob: -5.560034275054932
    4. 'i' → logprob: -7.810034275054932
    5. 'current' → logprob: -8.43503475189209
    6. 'start' → logprob: -8.43503475189209
    7. '   ' → logprob: -9.06003475189209
    8. ',' → logprob: -9.68503475189209
    9. '    
' → logprob: -9.68503475189209
    10. '```' → logprob: -9.68503475189209

Token 635: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003907538019120693
    2. '   ' → logprob: -6.628907680511475
    3. 'i' → logprob: -6.753907680511475
    4. 'start' → logprob: -7.003907680511475
    5. '```' → logprob: -8.503907203674316
    6. ' i' → logprob: -9.253907203674316
    7. '        
' → logprob: -9.378907203674316
    8. 'current' → logprob: -9.878907203674316
    9. '
' → logprob: -10.003907203674316
    10. '    
' → logprob: -12.253907203674316

Token 636: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.03032829985022545
    2. '       ' → logprob: -3.5303282737731934
    3. ' start' → logprob: -8.280328750610352
    4. 'current' → logprob: -8.655328750610352
    5. 'i' → logprob: -9.280328750610352
    6. '```' → logprob: -10.530328750610352
    7. 'prev' → logprob: -10.655328750610352
    8. 'last' → logprob: -13.155328750610352
    9. '        
' → logprob: -13.280328750610352
    10. '   ' → logprob: -13.905328750610352

Token 637: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761544108390808
    2. ' =' → logprob: -0.8261544108390808
    3. ',' → logprob: -8.451154708862305
    4. '       ' → logprob: -15.076154708862305
    5. '   ' → logprob: -15.326154708862305
    6. '=index' → logprob: -15.326154708862305
    7. '=
' → logprob: -15.826154708862305
    8. 'idx' → logprob: -16.701154708862305
    9. '```' → logprob: -16.826154708862305
    10. ' ' → logprob: -16.826154708862305

Token 638: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014013137842994183
    2. ' ' → logprob: -8.875140190124512
    3. '=' → logprob: -16.750139236450195
    4. '       ' → logprob: -16.750139236450195
    5. '   ' → logprob: -17.250139236450195
    6. '[' → logprob: -19.375139236450195
    7. '```' → logprob: -19.375139236450195
    8. '1' → logprob: -19.500139236450195
    9. '۰' → logprob: -19.750139236450195
    10. 'index' → logprob: -19.875139236450195

Token 639: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -19.375001907348633
    4. '   ' → logprob: -19.625001907348633
    5. '=' → logprob: -20.000001907348633
    6. '۰' → logprob: -20.625001907348633
    7. '1' → logprob: -21.125001907348633
    8. 'idx' → logprob: -21.375001907348633
    9. '00' → logprob: -21.375001907348633
    10. 'index' → logprob: -21.750001907348633

Token 640: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003713738638907671
    2. 'for' → logprob: -6.878713607788086
    3. 'end' → logprob: -7.128713607788086
    4. ',' → logprob: -7.378713607788086
    5. ' for' → logprob: -7.628713607788086
    6. 'color' → logprob: -8.253713607788086
    7. 'current' → logprob: -8.378713607788086
    8. '
' → logprob: -9.503713607788086
    9. 'n' → logprob: -9.628713607788086
    10. '1' → logprob: -11.128713607788086

Token 641: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006892018136568367
    2. 'for' → logprob: -7.8756890296936035
    3. 'current' → logprob: -8.750689506530762
    4. 'color' → logprob: -9.500689506530762
    5. 'end' → logprob: -10.125689506530762
    6. ' for' → logprob: -11.250689506530762
    7. '   ' → logprob: -11.625689506530762
    8. ',' → logprob: -12.250689506530762
    9. 'n' → logprob: -12.875689506530762
    10. 'prev' → logprob: -13.750689506530762

Token 642: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.03510596230626106
    2. 'for' → logprob: -4.285106182098389
    3. 'prev' → logprob: -4.535106182098389
    4. '       ' → logprob: -5.160106182098389
    5. 'curr' → logprob: -6.410106182098389
    6. 'color' → logprob: -7.035106182098389
    7. 'while' → logprob: -7.285106182098389
    8. 'start' → logprob: -7.785106182098389
    9. 'last' → logprob: -7.910106182098389
    10. ' current' → logprob: -9.53510570526123

Token 643: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.07022629678249359
    2. 'color' → logprob: -2.6952261924743652
    3. '=' → logprob: -8.945226669311523
    4. ' =' → logprob: -9.445226669311523
    5. '=color' → logprob: -10.445226669311523
    6. 'Color' → logprob: -10.820226669311523
    7. ' color' → logprob: -11.445226669311523
    8. '```' → logprob: -11.820226669311523
    9. '   ' → logprob: -12.195226669311523
    10. '       ' → logprob: -13.070226669311523

Token 644: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868728280067444
    2. '=' → logprob: -1.1368727684020996
    3. '       ' → logprob: -13.761873245239258
    4. '   ' → logprob: -14.636873245239258
    5. ' ' → logprob: -16.261873245239258
    6. ',' → logprob: -16.386873245239258
    7. '=color' → logprob: -17.386873245239258
    8. '        ' → logprob: -17.761873245239258
    9. ':' → logprob: -17.761873245239258
    10. '    ' → logprob: -18.011873245239258

Token 645: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0019316127290949225
    2. ' sequence' → logprob: -6.251931667327881
    3. '       ' → logprob: -13.501931190490723
    4. '   ' → logprob: -14.001931190490723
    5. '(sequence' → logprob: -14.376931190490723
    6. ' ' → logprob: -17.00193214416504
    7. '0' → logprob: -17.37693214416504
    8. 'self' → logprob: -17.50193214416504
    9. '`' → logprob: -17.62693214416504
    10. '           ' → logprob: -17.62693214416504

Token 646: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00016611411410849541
    2. '.' → logprob: -9.000165939331055
    3. 'get' → logprob: -10.750165939331055
    4. ' .' → logprob: -11.875165939331055
    5. '   ' → logprob: -12.375165939331055
    6. '().' → logprob: -12.500165939331055
    7. ').' → logprob: -12.875165939331055
    8. ',' → logprob: -14.250165939331055
    9. ')' → logprob: -14.250165939331055
    10. '       ' → logprob: -14.375165939331055

Token 647: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -5.9153885558771435e-06
    2. 'color' → logprob: -12.500005722045898
    3. '```' → logprob: -14.125005722045898
    4. 'Color' → logprob: -14.625005722045898
    5. ' _' → logprob: -15.875005722045898
    6. '_Color' → logprob: -16.1250057220459
    7. '_' → logprob: -16.2500057220459
    8. '_COLOR' → logprob: -16.2500057220459
    9. '`' → logprob: -16.8750057220459
    10. ' ' → logprob: -17.0000057220459

Token 648: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2522220313549042
    2. '(start' → logprob: -1.5022220611572266
    3. '0' → logprob: -8.252222061157227
    4. 'start' → logprob: -10.752222061157227
    5. ' (' → logprob: -12.252222061157227
    6. '(
' → logprob: -13.127222061157227
    7. ' ' → logprob: -13.877222061157227
    8. '```' → logprob: -14.002222061157227
    9. ',start' → logprob: -14.502222061157227
    10. '   ' → logprob: -14.502222061157227

Token 649: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21626104414463043
    2. '(' → logprob: -2.091261148452759
    3. 'start' → logprob: -2.966261148452759
    4. '(start' → logprob: -3.966261148452759
    5. ')' → logprob: -8.21626091003418
    6. ' ' → logprob: -8.71626091003418
    7. ' start' → logprob: -10.21626091003418
    8. ')(' → logprob: -11.84126091003418
    9. '[start' → logprob: -11.84126091003418
    10. ',start' → logprob: -12.34126091003418

Token 650: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16025449335575104
    2. ')
' → logprob: -1.9102544784545898
    3. ' )' → logprob: -11.53525447845459
    4. '       ' → logprob: -11.78525447845459
    5. ' )
' → logprob: -12.16025447845459
    6. '   ' → logprob: -12.16025447845459
    7. ')
' → logprob: -13.53525447845459
    8. ')

' → logprob: -14.28525447845459
    9. ')`
' → logprob: -16.035255432128906
    10. ' ' → logprob: -16.160255432128906

Token 651: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027167774736881256
    2. ' for' → logprob: -4.152167797088623
    3. 'for' → logprob: -4.527167797088623
    4. '```' → logprob: -9.027167320251465
    5. '
' → logprob: -10.152167320251465
    6. '        
' → logprob: -10.652167320251465
    7. '   ' → logprob: -10.902167320251465
    8. '1' → logprob: -11.152167320251465
    9. '[' → logprob: -11.527167320251465
    10. ',' → logprob: -12.152167320251465

Token 652: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009867232292890549
    2. ' for' → logprob: -7.500986576080322
    3. '       ' → logprob: -7.750986576080322
    4. '```' → logprob: -12.75098705291748
    5. 'end' → logprob: -15.37598705291748
    6. '	for' → logprob: -16.375986099243164
    7. '   ' → logprob: -16.875986099243164
    8. 'i' → logprob: -17.375986099243164
    9. '
' → logprob: -17.500986099243164
    10. '``' → logprob: -18.000986099243164

Token 653: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013091410510241985
    2. 'idx' → logprob: -4.513091564178467
    3. ' i' → logprob: -6.263091564178467
    4. ' idx' → logprob: -9.013091087341309
    5. '   ' → logprob: -11.263091087341309
    6. ' ' → logprob: -14.138091087341309
    7. 'index' → logprob: -15.263091087341309
    8. '1' → logprob: -15.513091087341309
    9. '  ' → logprob: -15.763091087341309
    10. '       ' → logprob: -16.138092041015625

Token 654: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001960512949153781
    2. 'in' → logprob: -6.251960277557373
    3. '1' → logprob: -11.001960754394531
    4. '	in' → logprob: -11.876960754394531
    5. ' ' → logprob: -12.251960754394531
    6. '   ' → logprob: -13.626960754394531
    7. '    ' → logprob: -14.626960754394531
    8. ',' → logprob: -14.876960754394531
    9. '_in' → logprob: -15.251960754394531
    10. '        ' → logprob: -15.501960754394531

Token 655: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0052354102954268456
    2. ' range' → logprob: -5.255235195159912
    3. '1' → logprob: -13.88023567199707
    4. ' ' → logprob: -14.75523567199707
    5. '   ' → logprob: -15.38023567199707
    6. '[' → logprob: -17.13023567199707
    7. '	range' → logprob: -17.63023567199707
    8. '  ' → logprob: -18.25523567199707
    9. '(range' → logprob: -18.50523567199707
    10. '```' → logprob: -19.50523567199707

Token 656: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03808968514204025
    2. '1' → logprob: -3.2880897521972656
    3. '   ' → logprob: -10.163089752197266
    4. ' ' → logprob: -12.163089752197266
    5. '
' → logprob: -13.538089752197266
    6. ' (' → logprob: -13.663089752197266
    7. '`' → logprob: -14.788089752197266
    8. '```' → logprob: -15.038089752197266
    9. '[' → logprob: -15.413089752197266
    10. '    ' → logprob: -15.413089752197266

Token 657: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. 'start' → logprob: -15.625000953674316
    4. '   ' → logprob: -17.5
    5. 'n' → logprob: -19.5
    6. '
' → logprob: -20.25
    7. '```' → logprob: -20.25
    8. '(' → logprob: -21.125
    9. '0' → logprob: -21.375
    10. '    ' → logprob: -22.125

Token 658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010628211311995983
    2. ',n' → logprob: -6.876062870025635
    3. ' ,' → logprob: -10.501062393188477
    4. 'n' → logprob: -13.126062393188477
    5. '   ' → logprob: -15.251062393188477
    6. ',
' → logprob: -16.001062393188477
    7. '       ' → logprob: -16.501062393188477
    8. ' n' → logprob: -17.751062393188477
    9. ',len' → logprob: -19.376062393188477
    10. '1' → logprob: -19.501062393188477

Token 659: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000158842682139948
    2. ' n' → logprob: -8.75015926361084
    3. '       ' → logprob: -15.37515926361084
    4. '   ' → logprob: -16.875158309936523
    5. '	n' → logprob: -17.500158309936523
    6. ')n' → logprob: -18.875158309936523
    7. '           ' → logprob: -19.250158309936523
    8. '_n' → logprob: -19.875158309936523
    9. '
' → logprob: -20.125158309936523
    10. ')' → logprob: -20.750158309936523

Token 660: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005303720012307167
    2. '):' → logprob: -5.255303859710693
    3. '       ' → logprob: -10.880303382873535
    4. '   ' → logprob: -11.380303382873535
    5. ',' → logprob: -11.505303382873535
    6. '):
' → logprob: -11.630303382873535
    7. ' ):
' → logprob: -11.755303382873535
    8. ':
' → logprob: -12.130303382873535
    9. ':' → logprob: -12.255303382873535
    10. '):

' → logprob: -14.255303382873535

Token 661: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01979721710085869
    2. ' if' → logprob: -4.019797325134277
    3. 'if' → logprob: -6.894797325134277
    4. '```' → logprob: -8.519797325134277
    5. ',' → logprob: -8.644797325134277
    6. '<|end|>' → logprob: -9.894797325134277
    7. ':' → logprob: -10.144797325134277
    8. '       ' → logprob: -10.394797325134277
    9. '<|end|>' → logprob: -10.394797325134277
    10. '	       ' → logprob: -10.519797325134277

Token 662: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02676790952682495
    2. ' if' → logprob: -4.276767730712891
    3. '           ' → logprob: -4.526767730712891
    4. 'color' → logprob: -6.401767730712891
    5. 'current' → logprob: -11.02676773071289
    6. '```' → logprob: -11.15176773071289
    7. 'c' → logprob: -11.40176773071289
    8. ' color' → logprob: -12.65176773071289
    9. '               ' → logprob: -12.65176773071289
    10. 'curr' → logprob: -13.90176773071289

Token 663: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.014175849966704845
    2. ' sequence' → logprob: -4.264175891876221
    3. 'current' → logprob: -12.014175415039062
    4. '   ' → logprob: -12.639175415039062
    5. '(sequence' → logprob: -13.264175415039062
    6. ' current' → logprob: -13.764175415039062
    7. ' ' → logprob: -15.639175415039062
    8. '       ' → logprob: -17.139175415039062
    9. '.sequence' → logprob: -17.389175415039062
    10. 'space' → logprob: -17.514175415039062

Token 664: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -2.5107177862082608e-05
    2. '.' → logprob: -10.625024795532227
    3. 'get' → logprob: -14.625024795532227
    4. ').' → logprob: -16.250024795532227
    5. '   ' → logprob: -16.625024795532227
    6. ' .' → logprob: -17.125024795532227
    7. '       ' → logprob: -18.125024795532227
    8. '].' → logprob: -18.125024795532227
    9. '[get' → logprob: -19.000024795532227
    10. '_get' → logprob: -19.375024795532227

Token 665: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -2.935296834039036e-06
    2. 'color' → logprob: -13.25000286102295
    3. '```' → logprob: -14.50000286102295
    4. '_' → logprob: -15.12500286102295
    5. ' _' → logprob: -16.250003814697266
    6. '_code' → logprob: -16.625003814697266
    7. '"_' → logprob: -17.500003814697266
    8. ')_' → logprob: -17.625003814697266
    9. ''_' → logprob: -17.625003814697266
    10. '\' → logprob: -18.125003814697266

Token 666: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -11.875007629394531
    3. ' (' → logprob: -14.500007629394531
    4. '```' → logprob: -17.00000762939453
    5. 'i' → logprob: -18.00000762939453
    6. '   ' → logprob: -18.37500762939453
    7. ')' → logprob: -18.37500762939453
    8. '(
' → logprob: -18.75000762939453
    9. '()' → logprob: -18.75000762939453
    10. '(I' → logprob: -19.25000762939453

Token 667: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016807749634608626
    2. ' )' → logprob: -6.501680850982666
    3. ')!=' → logprob: -9.251680374145508
    4. '()' → logprob: -9.876680374145508
    5. '())' → logprob: -10.751680374145508
    6. ')==' → logprob: -12.626680374145508
    7. ' !=' → logprob: -13.001680374145508
    8. '   ' → logprob: -14.126680374145508
    9. '!=' → logprob: -14.501680374145508
    10. '()!=' → logprob: -14.626680374145508

Token 668: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7226702570915222
    2. '!=' → logprob: -0.7226702570915222
    3. '()!=' → logprob: -4.347670078277588
    4. '==' → logprob: -4.472670078277588
    5. '()' → logprob: -5.847670078277588
    6. ' ==' → logprob: -6.472670078277588
    7. ')' → logprob: -8.972670555114746
    8. '()==' → logprob: -9.347670555114746
    9. ')!=' → logprob: -9.722670555114746
    10. '```' → logprob: -10.722670555114746

Token 669: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0019301822176203132
    2. ' current' → logprob: -6.251930236816406
    3. 'sequence' → logprob: -14.251930236816406
    4. '=current' → logprob: -15.126930236816406
    5. '	current' → logprob: -15.501930236816406
    6. '$current' → logprob: -16.126930236816406
    7. '   ' → logprob: -16.251930236816406
    8. '[current' → logprob: -16.376930236816406
    9. ' ' → logprob: -16.751930236816406
    10. '(current' → logprob: -16.876930236816406

Token 670: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -4.739826181321405e-05
    2. 'color' → logprob: -10.00004768371582
    3. 'Color' → logprob: -13.62504768371582
    4. '_sequence' → logprob: -15.87504768371582
    5. ' color' → logprob: -16.25004768371582
    6. '_colors' → logprob: -16.75004768371582
    7. '_' → logprob: -16.75004768371582
    8. '_COLOR' → logprob: -16.87504768371582
    9. 'olor' → logprob: -17.00004768371582
    10. '_code' → logprob: -17.12504768371582

Token 671: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18473178148269653
    2. ':' → logprob: -1.9347317218780518
    3. '               ' → logprob: -4.059731960296631
    4. ' or' → logprob: -5.434731960296631
    5. '):
' → logprob: -6.434731960296631
    6. '           ' → logprob: -7.809731960296631
    7. ' and' → logprob: -8.809731483459473
    8. ')' → logprob: -9.059731483459473
    9. 'and' → logprob: -9.559731483459473
    10. ':

' → logprob: -9.809731483459473

Token 672: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04930296540260315
    2. ' or' → logprob: -3.5493030548095703
    3. ':
' → logprob: -4.42430305480957
    4. ':' → logprob: -5.54930305480957
    5. '```' → logprob: -6.67430305480957
    6. ' and' → logprob: -7.17430305480957
    7. '           ' → logprob: -7.54930305480957
    8. 'or' → logprob: -8.54930305480957
    9. '[start' → logprob: -8.92430305480957
    10. '                
' → logprob: -9.42430305480957

Token 673: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' (adapté à ' groups') → logprob: -0.40547364950180054
    2. ' groups' → logprob: -1.1554737091064453
    3. '           ' → logprob: -4.780473709106445
    4. 'end' → logprob: -5.280473709106445
    5. ' end' → logprob: -6.280473709106445
    6. '                   ' → logprob: -6.405473709106445
    7. '   ' → logprob: -7.280473709106445
    8. '               ' → logprob: -8.030473709106445
    9. 'length' → logprob: -8.530473709106445
    10. ' length' → logprob: -9.405473709106445

Token 674: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.901345038088039e-05
    2. '.' → logprob: -10.125099182128906
    3. ',' → logprob: -10.625099182128906
    4. 'append' → logprob: -11.000099182128906
    5. '           ' → logprob: -11.750099182128906
    6. '               ' → logprob: -12.125099182128906
    7. '.extend' → logprob: -13.250099182128906
    8. '                   ' → logprob: -13.875099182128906
    9. 'Append' → logprob: -14.375099182128906
    10. '=' → logprob: -15.250099182128906

Token 675: '((' (ID: 2054)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.5773314237594604
    2. '(' → logprob: -1.0773314237594604
    3. '((' → logprob: -2.32733154296875
    4. ' (' → logprob: -8.20233154296875
    5. '   ' → logprob: -8.32733154296875
    6. '(current' → logprob: -12.07733154296875
    7. '(
' → logprob: -12.32733154296875
    8. '(end' → logprob: -13.07733154296875
    9. '(Start' → logprob: -13.20233154296875
    10. '(begin' → logprob: -13.32733154296875

Token 676: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -8.061054359131958e-06
    2. ' start' → logprob: -11.750007629394531
    3. '(start' → logprob: -16.50000762939453
    4. '[start' → logprob: -20.25000762939453
    5. '0' → logprob: -21.62500762939453
    6. '   ' → logprob: -21.75000762939453
    7. '	start' → logprob: -22.25000762939453
    8. ')' → logprob: -23.37500762939453
    9. ',start' → logprob: -23.37500762939453
    10. ' ' → logprob: -23.87500762939453

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.478889215737581e-05
    2. ' ,' → logprob: -10.500054359436035
    3. ',i' → logprob: -10.750054359436035
    4. ',
' → logprob: -12.375054359436035
    5. ',start' → logprob: -14.250054359436035
    6. ',int' → logprob: -15.625054359436035
    7. ',index' → logprob: -15.875054359436035
    8. '           ' → logprob: -16.25005531311035
    9. '0' → logprob: -16.25005531311035
    10. '       ' → logprob: -16.62505531311035

Token 678: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.306760805164231e-05
    2. ' i' → logprob: -11.25001335144043
    3. '	i' → logprob: -20.87501335144043
    4. '   ' → logprob: -21.00001335144043
    5. '           ' → logprob: -21.12501335144043
    6. '               ' → logprob: -21.37501335144043
    7. ')i' → logprob: -21.62501335144043
    8. '       ' → logprob: -21.87501335144043
    9. '
' → logprob: -22.37501335144043
    10. 'start' → logprob: -22.50001335144043

Token 679: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008727441541850567
    2. ',start' → logprob: -5.633727550506592
    3. ',current' → logprob: -5.883727550506592
    4. 'start' → logprob: -6.508727550506592
    5. ',i' → logprob: -7.633727550506592
    6. '0' → logprob: -8.508727073669434
    7. 'current' → logprob: -10.008727073669434
    8. ' ,' → logprob: -10.508727073669434
    9. ',int' → logprob: -10.883727073669434
    10. 'i' → logprob: -11.133727073669434

Token 680: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0015028368216007948
    2. ' current' → logprob: -6.501502990722656
    3. 'color' → logprob: -15.751502990722656
    4. '$current' → logprob: -16.126502990722656
    5. '```' → logprob: -16.376502990722656
    6. '	current' → logprob: -17.001502990722656
    7. '[current' → logprob: -17.126502990722656
    8. '(current' → logprob: -17.501502990722656
    9. 'Current' → logprob: -18.626502990722656
    10. '
' → logprob: -18.626502990722656

Token 681: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.0010082771768793464
    2. 'color' → logprob: -7.0010085105896
    3. 'Color' → logprob: -9.376008033752441
    4. 'start' → logprob: -12.626008033752441
    5. ')' → logprob: -12.751008033752441
    6. '_' → logprob: -14.001008033752441
    7. 'i' → logprob: -14.001008033752441
    8. '_COLOR' → logprob: -14.376008033752441
    9. ' color' → logprob: -14.626008033752441
    10. 'olor' → logprob: -14.751008033752441

Token 682: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010160816833376884
    2. ',len' → logprob: -4.63516092300415
    3. ' ,' → logprob: -8.135160446166992
    4. ',i' → logprob: -9.385160446166992
    5. 'len' → logprob: -11.510160446166992
    6. ',int' → logprob: -12.010160446166992
    7. ',length' → logprob: -12.010160446166992
    8. ',
' → logprob: -14.510160446166992
    9. '               ' → logprob: -14.760160446166992
    10. ')' → logprob: -14.885160446166992

Token 683: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003357006062287837
    2. ' i' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.500335693359375
    4. '	i' → logprob: -17.625335693359375
    5. '(i' → logprob: -18.375335693359375
    6. '
' → logprob: -18.875335693359375
    7. '```' → logprob: -19.125335693359375
    8. '  ' → logprob: -19.250335693359375
    9. ' ' → logprob: -19.375335693359375
    10. '{i' → logprob: -19.625335693359375

Token 684: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5788878202438354
    2. ' -' → logprob: -0.8288878202438354
    3. '-start' → logprob: -5.828887939453125
    4. ' ' → logprob: -13.453887939453125
    5. '-token' → logprob: -15.578887939453125
    6. '-s' → logprob: -15.828887939453125
    7. '-stop' → logprob: -15.828887939453125
    8. '   ' → logprob: -15.828887939453125
    9. '-run' → logprob: -15.953887939453125
    10. '-sub' → logprob: -16.578887939453125

Token 685: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.676292231422849e-05
    2. ' start' → logprob: -11.000017166137695
    3. '[start' → logprob: -21.125017166137695
    4. '(start' → logprob: -21.875017166137695
    5. '=start' → logprob: -22.125017166137695
    6. '   ' → logprob: -22.750017166137695
    7. ':start' → logprob: -22.875017166137695
    8. '
' → logprob: -22.875017166137695
    9. ' ' → logprob: -23.125017166137695
    10. '	start' → logprob: -23.375017166137695

Token 686: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009079890325665474
    2. ')' → logprob: -4.759079933166504
    3. '))
' → logprob: -7.759079933166504
    4. ' ))' → logprob: -10.384079933166504
    5. ')
' → logprob: -13.384079933166504
    6. '))

' → logprob: -13.509079933166504
    7. ' )' → logprob: -13.509079933166504
    8. ')))' → logprob: -14.134079933166504
    9. '))
' → logprob: -14.634079933166504
    10. '),' → logprob: -14.634079933166504

Token 687: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.751746746478602e-05
    2. '
' → logprob: -10.75004768371582
    3. 'start' → logprob: -11.37504768371582
    4. '```' → logprob: -12.00004768371582
    5. '           ' → logprob: -13.12504768371582
    6. '                
' → logprob: -13.37504768371582
    7. ',' → logprob: -13.75004768371582
    8. '[start' → logprob: -14.00004768371582
    9. '<|end|>' → logprob: -14.00004768371582
    10. '                   ' → logprob: -14.50004768371582

Token 688: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.0004624855937436223
    2. '               ' → logprob: -7.750462532043457
    3. ' start' → logprob: -10.375462532043457
    4. '           ' → logprob: -15.500462532043457
    5. '                   ' → logprob: -16.00046157836914
    6. '[start' → logprob: -16.37546157836914
    7. '       ' → logprob: -16.62546157836914
    8. '(start' → logprob: -17.12546157836914
    9. '	start' → logprob: -17.50046157836914
    10. '_start' → logprob: -18.12546157836914

Token 689: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.623244553338736e-05
    2. ' =' → logprob: -9.625065803527832
    3. '<|end|>' → logprob: -17.25006675720215
    4. '=i' → logprob: -18.37506675720215
    5. '=}' → logprob: -18.87506675720215
    6. '=
' → logprob: -19.00006675720215
    7. ')' → logprob: -20.50006675720215
    8. '＝' → logprob: -20.62506675720215
    9. '_=' → logprob: -21.00006675720215
    10. ',' → logprob: -21.25006675720215

Token 690: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.1008713702030946e-06
    2. ' i' → logprob: -13.125001907348633
    3. '	i' → logprob: -21.250001907348633
    4. '           ' → logprob: -22.000001907348633
    5. '       ' → logprob: -22.250001907348633
    6. ')i' → logprob: -22.375001907348633
    7. '   ' → logprob: -22.625001907348633
    8. '                   ' → logprob: -22.625001907348633
    9. '               ' → logprob: -22.750001907348633
    10. '0' → logprob: -22.875001907348633

Token 691: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 692: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03236580267548561
    2. '       ' → logprob: -4.532365798950195
    3. '           ' → logprob: -4.907365798950195
    4. '<|end|>' → logprob: -4.907365798950195
    5. 'current' → logprob: -6.407365798950195
    6. ')' → logprob: -6.532365798950195
    7. '[' → logprob: -6.907365798950195
    8. '```' → logprob: -7.532365798950195
    9. '[current' → logprob: -8.032365798950195
    10. ' current' → logprob: -8.157365798950195

Token 693: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -5.2762428822461516e-05
    2. ' current' → logprob: -10.000052452087402
    3. '               ' → logprob: -12.000052452087402
    4. '           ' → logprob: -13.875052452087402
    5. '   ' → logprob: -16.50005340576172
    6. '       ' → logprob: -17.25005340576172
    7. '                   ' → logprob: -17.50005340576172
    8. '	current' → logprob: -17.62505340576172
    9. '(current' → logprob: -17.75005340576172
    10. '[current' → logprob: -18.12505340576172

Token 694: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.0008158236742019653
    2. 'color' → logprob: -7.1258158683776855
    3. 'Color' → logprob: -11.625815391540527
    4. 'olor' → logprob: -14.875815391540527
    5. '_' → logprob: -15.000815391540527
    6. 'get' → logprob: -15.375815391540527
    7. '_colors' → logprob: -15.625815391540527
    8. '=' → logprob: -16.000816345214844
    9. '_sequence' → logprob: -16.125816345214844
    10. '_COLOR' → logprob: -16.125816345214844

Token 695: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014165864326059818
    2. ' =' → logprob: -4.264165878295898
    3. '<|end|>' → logprob: -13.389165878295898
    4. 'sequence' → logprob: -14.514165878295898
    5. '=
' → logprob: -16.3891658782959
    6. ')' → logprob: -16.6391658782959
    7. ' ' → logprob: -17.2641658782959
    8. ' sequence' → logprob: -17.3891658782959
    9. '   ' → logprob: -17.3891658782959
    10. '=color' → logprob: -17.7641658782959

Token 696: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -5.836499985889532e-05
    2. ' sequence' → logprob: -9.7500581741333
    3. '(sequence' → logprob: -18.250059127807617
    4. '   ' → logprob: -20.125059127807617
    5. 'Sequence' → logprob: -21.000059127807617
    6. 'sequ' → logprob: -21.625059127807617
    7. '.sequence' → logprob: -21.750059127807617
    8. '       ' → logprob: -21.875059127807617
    9. 'seq' → logprob: -22.250059127807617
    10. 'se' → logprob: -22.625059127807617

Token 697: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -1.9385402993066236e-05
    2. 'get' → logprob: -11.000019073486328
    3. '(i' → logprob: -13.875019073486328
    4. 'sequence' → logprob: -14.125019073486328
    5. '.' → logprob: -14.375019073486328
    6. '[i' → logprob: -15.375019073486328
    7. '```' → logprob: -17.375019073486328
    8. '   ' → logprob: -18.000019073486328
    9. 's' → logprob: -18.250019073486328
    10. '(get' → logprob: -18.250019073486328

Token 698: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.0003944496565964073
    2. 'color' → logprob: -7.875394344329834
    3. 'Color' → logprob: -11.375394821166992
    4. 'olor' → logprob: -13.500394821166992
    5. 'COLOR' → logprob: -15.125394821166992
    6. '_code' → logprob: -15.375394821166992
    7. '(i' → logprob: -15.875394821166992
    8. '_COLOR' → logprob: -16.250394821166992
    9. '```' → logprob: -16.500394821166992
    10. ' color' → logprob: -16.500394821166992

Token 699: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -17.0
    3. 'i' → logprob: -17.125
    4. '(
' → logprob: -19.375
    5. '```' → logprob: -19.625
    6. ' (' → logprob: -20.0
    7. '   ' → logprob: -21.0
    8. '[i' → logprob: -21.0
    9. 's' → logprob: -21.25
    10. ')' → logprob: -21.875

Token 700: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.3226136767771095e-05
    2. ')
' → logprob: -10.375042915344238
    3. ' )' → logprob: -12.000042915344238
    4. '<|end|>' → logprob: -12.375042915344238
    5. '       ' → logprob: -14.875042915344238
    6. '           ' → logprob: -15.000042915344238
    7. '   ' → logprob: -15.250042915344238
    8. '))' → logprob: -15.500042915344238
    9. ')return' → logprob: -16.375043869018555
    10. '),' → logprob: -16.500043869018555

Token 701: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005973544903099537
    2. 'groups' → logprob: -8.12559700012207
    3. '
' → logprob: -9.00059700012207
    4. '```' → logprob: -9.37559700012207
    5. ')' → logprob: -10.62559700012207
    6. '           ' → logprob: -11.00059700012207
    7. '[' → logprob: -11.25059700012207
    8. ' groups' → logprob: -11.50059700012207
    9. ')
' → logprob: -11.87559700012207
    10. 'return' → logprob: -12.37559700012207

Token 702: ' groups' (ID: 8896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4800061881542206
    2. 'groups' (adapté à ' groups') → logprob: -0.980006217956543
    3. ' groups' → logprob: -5.230006217956543
    4. '```' → logprob: -7.980006217956543
    5. '
' → logprob: -8.730006217956543
    6. '.groups' → logprob: -11.355006217956543
    7. '   ' → logprob: -11.480006217956543
    8. '(groups' → logprob: -11.605006217956543
    9. '#' → logprob: -11.980006217956543
    10. '``' → logprob: -12.730006217956543

Token 703: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.541112427134067e-05
    2. '.' → logprob: -9.500075340270996
    3. '.app' → logprob: -15.125075340270996
    4. 'append' → logprob: -16.625076293945312
    5. '.ap' → logprob: -16.625076293945312
    6. ' .' → logprob: -17.375076293945312
    7. '.Append' → logprob: -18.250076293945312
    8. '.extend' → logprob: -18.375076293945312
    9. ').' → logprob: -18.750076293945312
    10. '​.' → logprob: -19.750076293945312

Token 704: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0009295677882619202
    2. '(start' → logprob: -7.000929355621338
    3. '(' → logprob: -11.000929832458496
    4. '(
' → logprob: -13.500929832458496
    5. ' (' → logprob: -18.00092887878418
    6. '(Start' → logprob: -18.62592887878418
    7. '   ' → logprob: -18.87592887878418
    8. '(end' → logprob: -20.12592887878418
    9. ' ' → logprob: -20.25092887878418
    10. ' ((' → logprob: -20.62592887878418

Token 705: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -4.320199877838604e-07
    2. ' start' → logprob: -15.0
    3. '   ' → logprob: -21.125
    4. '(start' → logprob: -21.375
    5. '0' → logprob: -22.625
    6. '[start' → logprob: -23.375
    7. '  ' → logprob: -24.125
    8. '       ' → logprob: -24.375
    9. ' ' → logprob: -24.375
    10. '	start' → logprob: -24.5

Token 706: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001382241171086207
    2. ',n' → logprob: -9.125138282775879
    3. ',len' → logprob: -11.125138282775879
    4. ' ,' → logprob: -11.375138282775879
    5. '       ' → logprob: -13.625138282775879
    6. 'n' → logprob: -14.125138282775879
    7. ',
' → logprob: -14.250138282775879
    8. ',length' → logprob: -15.625138282775879
    9. 'len' → logprob: -16.875137329101562
    10. '   ' → logprob: -17.500137329101562

Token 707: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00024965754710137844
    2. 'sequence' → logprob: -8.500249862670898
    3. ' n' → logprob: -10.375249862670898
    4. 'len' → logprob: -11.500249862670898
    5. '   ' → logprob: -12.875249862670898
    6. '       ' → logprob: -13.875249862670898
    7. ' sequence' → logprob: -14.375249862670898
    8. '	n' → logprob: -15.875249862670898
    9. 'seq' → logprob: -16.2502498626709
    10. '_n' → logprob: -16.5002498626709

Token 708: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0100624169572257e-05
    2. ' ,' → logprob: -11.500020027160645
    3. ',n' → logprob: -11.625020027160645
    4. 'n' → logprob: -15.250020027160645
    5. '       ' → logprob: -15.375020027160645
    6. ',
' → logprob: -15.375020027160645
    7. ')' → logprob: -15.750020027160645
    8. '   ' → logprob: -16.37502098083496
    9. '),' → logprob: -16.87502098083496
    10. '```' → logprob: -17.00002098083496

Token 709: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.001502717612311244
    2. ' current' → logprob: -6.501502513885498
    3. '       ' → logprob: -15.626502990722656
    4. '           ' → logprob: -16.501502990722656
    5. '   ' → logprob: -16.501502990722656
    6. '$current' → logprob: -17.001502990722656
    7. '(current' → logprob: -17.501502990722656
    8. '	current' → logprob: -18.001502990722656
    9. '[current' → logprob: -18.376502990722656
    10. ' ' → logprob: -18.376502990722656

Token 710: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.0008172504603862762
    2. 'color' → logprob: -7.12581729888916
    3. 'Color' → logprob: -11.37581729888916
    4. 'olor' → logprob: -15.50081729888916
    5. ' color' → logprob: -15.62581729888916
    6. ')' → logprob: -15.87581729888916
    7. 'start' → logprob: -16.125816345214844
    8. 'COLOR' → logprob: -16.250816345214844
    9. '_code' → logprob: -16.375816345214844
    10. '_COLOR' → logprob: -16.375816345214844

Token 711: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028290803311392665
    2. ' ,' → logprob: -8.750283241271973
    3. ',n' → logprob: -9.000283241271973
    4. 'n' → logprob: -14.000283241271973
    5. ',
' → logprob: -15.875283241271973
    6. ' n' → logprob: -17.375282287597656
    7. ',len' → logprob: -17.875282287597656
    8. '   ' → logprob: -18.500282287597656
    9. '(n' → logprob: -18.750282287597656
    10. '),' → logprob: -19.125282287597656

Token 712: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007104054093360901
    2. ' n' → logprob: -7.250710487365723
    3. '   ' → logprob: -14.750710487365723
    4. '	n' → logprob: -16.500709533691406
    5. ' ' → logprob: -17.750709533691406
    6. '_n' → logprob: -18.125709533691406
    7. ' ' → logprob: -18.625709533691406
    8. '`' → logprob: -19.125709533691406
    9. '  ' → logprob: -19.125709533691406
    10. '    ' → logprob: -19.250709533691406

Token 713: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2519436180591583
    2. '-' → logprob: -1.501943588256836
    3. '-start' → logprob: -11.501943588256836
    4. ' ' → logprob: -12.376943588256836
    5. ' ' → logprob: -15.751943588256836
    6. '   ' → logprob: -16.251943588256836
    7. '[start' → logprob: -18.626943588256836
    8. ' -
' → logprob: -18.751943588256836
    9. '  ' → logprob: -18.876943588256836
    10. ')' → logprob: -19.126943588256836

Token 714: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -7.493430894101039e-05
    2. ' start' → logprob: -9.500075340270996
    3. ' ' → logprob: -20.12507438659668
    4. '[start' → logprob: -20.75007438659668
    5. ')' → logprob: -20.87507438659668
    6. '   ' → logprob: -21.25007438659668
    7. 'Start' → logprob: -22.25007438659668
    8. '(start' → logprob: -22.62507438659668
    9. '_start' → logprob: -22.87507438659668
    10. 'last' → logprob: -23.12507438659668

Token 715: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012295155320316553
    2. '))' → logprob: -6.751229286193848
    3. ')
' → logprob: -9.751229286193848
    4. ' )' → logprob: -14.626229286193848
    5. '))
' → logprob: -14.876229286193848
    6. ')`' → logprob: -15.876229286193848
    7. ')")' → logprob: -16.751230239868164
    8. '       ' → logprob: -17.126230239868164
    9. ')}' → logprob: -17.751230239868164
    10. ')**' → logprob: -18.001230239868164

Token 716: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00029506313148885965
    2. '   ' → logprob: -8.50029468536377
    3. 'return' → logprob: -10.00029468536377
    4. ' return' → logprob: -10.87529468536377
    5. '	' → logprob: -11.50029468536377
    6. '
' → logprob: -11.62529468536377
    7. '           ' → logprob: -12.87529468536377
    8. '	return' → logprob: -13.12529468536377
    9. '<|end|>' → logprob: -13.87529468536377
    10. '```' → logprob: -14.25029468536377

Token 717: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015309321461245418
    2. 'return' (adapté à ' return') → logprob: -7.12653112411499
    3. '	return' → logprob: -8.126530647277832
    4. '	' → logprob: -8.251530647277832
    5. ' return' → logprob: -9.251530647277832
    6. '<|end|>' → logprob: -10.376530647277832
    7. '   ' → logprob: -10.376530647277832
    8. '	   ' → logprob: -13.126530647277832
    9. '
' → logprob: -13.251530647277832
    10. '```' → logprob: -13.751530647277832

Token 718: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.0009115827269852161
    2. ' groups' → logprob: -7.000911712646484
    3. '(groups' → logprob: -16.375911712646484
    4. '.groups' → logprob: -17.500911712646484
    5. 'roups' → logprob: -18.750911712646484
    6. 'group' → logprob: -18.750911712646484
    7. '[' → logprob: -19.125911712646484
    8. '   ' → logprob: -19.250911712646484
    9. 'Groups' → logprob: -20.625911712646484
    10. 'chains' → logprob: -20.625911712646484

Token 719: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003592590568587184
    2. '
' → logprob: -5.753592491149902
    3. 'def' → logprob: -8.628592491149902
    4. '<|end|>' → logprob: -8.753592491149902
    5. '    
' → logprob: -9.878592491149902
    6. ' def' → logprob: -11.628592491149902
    7. '<|end|>' → logprob: -11.753592491149902
    8. ' ' → logprob: -13.503592491149902
    9. '```' → logprob: -13.753592491149902
    10. 'from' → logprob: -13.878592491149902

Token 720: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051626283675432205
    2. 'def' → logprob: -3.051626205444336
    3. ' def' → logprob: -6.176626205444336
    4. '
' → logprob: -7.051626205444336
    5. '    
' → logprob: -9.801626205444336
    6. '<|end|>' → logprob: -11.301626205444336
    7. '	def' → logprob: -12.426626205444336
    8. ')' → logprob: -12.426626205444336
    9. '

' → logprob: -12.801626205444336
    10. '<|end|>' → logprob: -12.926626205444336

Token 721: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.049152713268995285
    2. '   ' → logprob: -3.0491526126861572
    3. ' def' → logprob: -8.174152374267578
    4. '
' → logprob: -8.174152374267578
    5. '    
' → logprob: -14.424152374267578
    6. '

' → logprob: -14.674152374267578
    7. '	def' → logprob: -14.674152374267578
    8. '_def' → logprob: -17.174152374267578
    9. ' ' → logprob: -17.549152374267578
    10. '```' → logprob: -17.549152374267578

Token 722: ' _' (ID: 1175)
  Prédit: '_remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.0013302408624440432
    2. ' _' → logprob: -6.751330375671387
    3. '_find' → logprob: -9.751330375671387
    4. '_add' → logprob: -10.626330375671387
    5. '_rem' → logprob: -11.001330375671387
    6. '_replace' → logprob: -11.626330375671387
    7. '_get' → logprob: -11.876330375671387
    8. '_' → logprob: -12.001330375671387
    9. '_removed' → logprob: -12.501330375671387
    10. '_create' → logprob: -12.626330375671387

Token 723: 'remove' (ID: 4942)
  Prédit: 'remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -1.318681188422488e-05
    2. '_remove' → logprob: -11.25001335144043
    3. ' remove' → logprob: -16.37501335144043
    4. 'find' → logprob: -18.00001335144043
    5. '	remove' → logprob: -19.12501335144043
    6. '(remove' → logprob: -20.25001335144043
    7. 'def' → logprob: -20.87501335144043
    8. '.remove' → logprob: -20.87501335144043
    9. 'reduce' → logprob: -22.25001335144043
    10. '_' → logprob: -22.87501335144043

Token 724: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -4.203409844194539e-05
    2. '_' → logprob: -10.500041961669922
    3. '_indexes' → logprob: -13.000041961669922
    4. '_ids' → logprob: -13.125041961669922
    5. ' _' → logprob: -13.250041961669922
    6. '(self' → logprob: -13.875041961669922
    7. 'Indices' → logprob: -14.000041961669922
    8. '_ranges' → logprob: -14.000041961669922
    9. 'indices' → logprob: -14.125041961669922
    10. 'self' → logprob: -14.375041961669922

Token 725: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004390134708955884
    2. '(' → logprob: -7.750439167022705
    3. '(
' → logprob: -11.750438690185547
    4. 'self' → logprob: -15.250438690185547
    5. ' (' → logprob: -16.375438690185547
    6. '(s' → logprob: -17.000438690185547
    7. '   ' → logprob: -17.500438690185547
    8. '(Self' → logprob: -18.500438690185547
    9. '(

' → logprob: -19.125438690185547
    10. '(se' → logprob: -19.375438690185547

Token 726: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008784741163253784
    2. '(' → logprob: -4.758784770965576
    3. '(
' → logprob: -9.008784294128418
    4. ' (' → logprob: -10.758784294128418
    5. 'self' → logprob: -10.883784294128418
    6. ',' → logprob: -12.758784294128418
    7. '(s' → logprob: -12.883784294128418
    8. ' self' → logprob: -14.883784294128418
    9. '(current' → logprob: -14.883784294128418
    10. '(se' → logprob: -15.133784294128418

Token 727: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.20156507194042206
    2. ' sequence' → logprob: -1.7015650272369385
    3. 'current' → logprob: -9.45156478881836
    4. ' current' → logprob: -10.45156478881836
    5. '   ' → logprob: -10.70156478881836
    6. 'self' → logprob: -11.57656478881836
    7. '       ' → logprob: -11.82656478881836
    8. '(sequence' → logprob: -13.32656478881836
    9. ' ' → logprob: -13.70156478881836
    10. 'seq' → logprob: -14.57656478881836

Token 728: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006682366947643459
    2. '(self' → logprob: -8.0006685256958
    3. ':' → logprob: -8.6256685256958
    4. '       ' → logprob: -9.7506685256958
    5. 'self' → logprob: -10.2506685256958
    6. ' ,' → logprob: -10.7506685256958
    7. '   ' → logprob: -11.5006685256958
    8. ')' → logprob: -11.7506685256958
    9. '(sequence' → logprob: -12.1256685256958
    10. ',
' → logprob: -12.5006685256958

Token 729: ' Character' (ID: 27668)
  Prédit: 'Character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: -0.00026753442944027483
    2. ' Character' → logprob: -8.37526798248291
    3. 'Linear' → logprob: -10.25026798248291
    4. 'Sequence' → logprob: -14.37526798248291
    5. 'character' → logprob: -14.75026798248291
    6. '<Character' → logprob: -16.125267028808594
    7. '(Character' → logprob: -16.125267028808594
    8. '   ' → logprob: -16.250267028808594
    9. 'Characteristic' → logprob: -16.625267028808594
    10. ' ' → logprob: -16.750267028808594

Token 730: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -5.836499985889532e-05
    2. 'Character' → logprob: -9.8750581741333
    3. 'sequence' → logprob: -12.6250581741333
    4. '_sequence' → logprob: -13.2500581741333
    5. '[int' → logprob: -14.5000581741333
    6. ' sequence' → logprob: -14.7500581741333
    7. '.Sequence' → logprob: -15.2500581741333
    8. 'Sequences' → logprob: -15.2500581741333
    9. 'int' → logprob: -15.8750581741333
    10. '_SEQUENCE' → logprob: -16.625059127807617

Token 731: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022320532298181206
    2. ' ,' → logprob: -8.500223159790039
    3. 'self' → logprob: -11.625223159790039
    4. ')' → logprob: -11.875223159790039
    5. '       ' → logprob: -13.250223159790039
    6. '   ' → logprob: -13.625223159790039
    7. ' sequence' → logprob: -15.375223159790039
    8. ' self' → logprob: -15.500223159790039
    9. ',
' → logprob: -15.625223159790039
    10. ':' → logprob: -16.00022315979004

Token 732: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.008664324879646301
    2. ' indices' → logprob: -4.758664131164551
    3. 'remove' → logprob: -10.63366413116455
    4. '   ' → logprob: -11.75866413116455
    5. 'indexes' → logprob: -11.75866413116455
    6. '(indices' → logprob: -13.13366413116455
    7. ' ' → logprob: -13.25866413116455
    8. 'idx' → logprob: -13.25866413116455
    9. 'to' → logprob: -13.50866413116455
    10. 'inds' → logprob: -13.88366413116455

Token 733: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010943770175799727
    2. ')' → logprob: -7.376094341278076
    3. '):' → logprob: -8.001094818115234
    4. '   ' → logprob: -9.501094818115234
    5. '):
' → logprob: -10.001094818115234
    6. '_:' → logprob: -12.501094818115234
    7. '       ' → logprob: -12.626094818115234
    8. ' :' → logprob: -12.876094818115234
    9. '```' → logprob: -14.251094818115234
    10. ',' → logprob: -14.876094818115234

Token 734: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -5.438573680294212e-06
    2. ' List' → logprob: -12.250005722045898
    3. 'list' → logprob: -14.750005722045898
    4. '[List' → logprob: -15.125005722045898
    5. '	List' → logprob: -19.1250057220459
    6. '_list' → logprob: -19.7500057220459
    7. 'int' → logprob: -20.7500057220459
    8. ')' → logprob: -20.7500057220459
    9. '_List' → logprob: -21.1250057220459
    10. '   ' → logprob: -21.2500057220459

Token 735: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.8624639324116288e-06
    2. 'int' → logprob: -13.250001907348633
    3. ')' → logprob: -17.500001907348633
    4. '[' → logprob: -17.875001907348633
    5. '[
' → logprob: -18.750001907348633
    6. '   ' → logprob: -19.125001907348633
    7. '):
' → logprob: -19.500001907348633
    8. '<int' → logprob: -19.500001907348633
    9. '[Int' → logprob: -19.750001907348633
    10. '```' → logprob: -20.125001907348633

Token 736: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027325618430040777
    2. '])' → logprob: -8.375273704528809
    3. '):
' → logprob: -10.750273704528809
    4. ' )' → logprob: -11.000273704528809
    5. '   ' → logprob: -13.125273704528809
    6. '`)' → logprob: -13.625273704528809
    7. '）' → logprob: -14.250273704528809
    8. '):' → logprob: -15.250273704528809
    9. ']' → logprob: -15.875273704528809
    10. ']):
' → logprob: -17.000272750854492

Token 737: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08118006587028503
    2. ':
' → logprob: -2.5811800956726074
    3. '->' → logprob: -6.831180095672607
    4. '   ' → logprob: -7.831180095672607
    5. '       ' → logprob: -7.956180095672607
    6. ')' → logprob: -8.20617961883545
    7. ' ->' → logprob: -9.20617961883545
    8. ')->' → logprob: -10.70617961883545
    9. '):
' → logprob: -10.83117961883545
    10. '):' → logprob: -11.58117961883545

Token 738: ' Character' (ID: 27668)
  Prédit: 'Linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Linear' → logprob: -0.12718364596366882
    2. 'Character' → logprob: -2.127183675765991
    3. ' Linear' → logprob: -8.75218391418457
    4. ''' → logprob: -9.50218391418457
    5. ' Character' → logprob: -10.87718391418457
    6. 'linear' → logprob: -13.87718391418457
    7. 'Line' → logprob: -14.75218391418457
    8. 'List' → logprob: -15.00218391418457
    9. 'character' → logprob: -15.12718391418457
    10. '   ' → logprob: -15.12718391418457

Token 739: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -6.56364209135063e-05
    2. 'Linear' → logprob: -10.125065803527832
    3. 'sequence' → logprob: -10.625065803527832
    4. 'Character' → logprob: -14.875065803527832
    5. 'Sequ' → logprob: -15.250065803527832
    6. '_sequence' → logprob: -15.500065803527832
    7. ' sequence' → logprob: -16.250064849853516
    8. '`' → logprob: -16.250064849853516
    9. 'Sequences' → logprob: -16.875064849853516
    10. 'Sequential' → logprob: -17.125064849853516

Token 740: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15856695175170898
    2. ':' → logprob: -2.158566951751709
    3. '       ' → logprob: -3.533566951751709
    4. '):
' → logprob: -6.908566951751709
    5. '   ' → logprob: -7.158566951751709
    6. '):' → logprob: -10.658567428588867
    7. ' :
' → logprob: -10.658567428588867
    8. ')' → logprob: -10.783567428588867
    9. ',' → logprob: -10.908567428588867
    10. '():
' → logprob: -11.033567428588867

Token 741: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2435113787651062
    2. 'colors' → logprob: -1.743511438369751
    3. 'new' → logprob: -3.368511438369751
    4. ' new' → logprob: -5.618511199951172
    5. ' colors' → logprob: -6.618511199951172
    6. 'current' → logprob: -6.743511199951172
    7. 'result' → logprob: -7.868511199951172
    8. ' current' → logprob: -9.993511199951172
    9. 'indices' → logprob: -10.118511199951172
    10. 'inds' → logprob: -10.118511199951172

Token 742: ' #' (ID: 1069)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.30605190992355347
    2. 'new' → logprob: -1.5560519695281982
    3. 'result' → logprob: -3.5560519695281982
    4. '       ' → logprob: -4.056051731109619
    5. 'remaining' → logprob: -5.931051731109619
    6. 'filtered' → logprob: -6.181051731109619
    7. 'current' → logprob: -6.806051731109619
    8. ' new' → logprob: -7.556051731109619
    9. ' colors' → logprob: -8.306052207946777
    10. '```' → logprob: -10.181052207946777

Token 743: ' Remove' (ID: 18141)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.14073382318019867
    2. 'colors' → logprob: -2.1407337188720703
    3. 'filtered' → logprob: -5.14073371887207
    4. 'remaining' → logprob: -5.14073371887207
    5. 'result' → logprob: -7.01573371887207
    6. '       ' → logprob: -7.01573371887207
    7. 'current' → logprob: -9.76573371887207
    8. '   ' → logprob: -10.64073371887207
    9. 'removed' → logprob: -10.64073371887207
    10. 'keep' → logprob: -10.89073371887207

Token 744: ' characters' (ID: 9862)
  Prédit: 'Linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Linear' → logprob: -0.30606675148010254
    2. 'colors' → logprob: -1.6810667514801025
    3. ' Linear' → logprob: -2.9310667514801025
    4. 'idx' → logprob: -4.556066513061523
    5. 'indices' → logprob: -5.056066513061523
    6. 'sequence' → logprob: -6.181066513061523
    7. ' colors' → logprob: -6.931066513061523
    8. 'chars' → logprob: -7.056066513061523
    9. 'color' → logprob: -7.556066513061523
    10. ' idx' → logprob: -7.931066513061523

Token 745: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24930128455162048
    2. '=' → logprob: -2.3743011951446533
    3. ' =' → logprob: -3.6243011951446533
    4. 'colors' → logprob: -3.7493011951446533
    5. 'idx' → logprob: -3.8743011951446533
    6. 'sequence' → logprob: -4.624301433563232
    7. 'from' → logprob: -4.999301433563232
    8. 'in' → logprob: -5.624301433563232
    9. 'with' → logprob: -5.999301433563232
    10. 'at' → logprob: -6.124301433563232

Token 746: ' specified' (ID: 10185)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.48467013239860535
    2. '[i' → logprob: -1.6096701622009277
    3. 'idx' → logprob: -2.4846701622009277
    4. 'i' → logprob: -2.9846701622009277
    5. ' indices' → logprob: -4.484670162200928
    6. '[' → logprob: -4.609670162200928
    7. '[idx' → logprob: -4.734670162200928
    8. 'index' → logprob: -5.234670162200928
    9. ' idx' → logprob: -5.484670162200928
    10. ' [' → logprob: -5.609670162200928

Token 747: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.011649180203676224
    2. ' indices' → logprob: -4.511649131774902
    3. 'idx' → logprob: -7.511649131774902
    4. ' idx' → logprob: -11.136649131774902
    5. '[i' → logprob: -11.261649131774902
    6. 'i' → logprob: -11.511649131774902
    7. 'positions' → logprob: -12.136649131774902
    8. 'index' → logprob: -12.886649131774902
    9. '[' → logprob: -13.261649131774902
    10. ' i' → logprob: -13.511649131774902

Token 748: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.258857399225235
    2. 'colors' → logprob: -1.5088573694229126
    3. ' colors' → logprob: -6.008857250213623
    4. '(colors' → logprob: -6.383857250213623
    5. ',' → logprob: -7.008857250213623
    6. 'new' → logprob: -7.758857250213623
    7. '
' → logprob: -8.258857727050781
    8. '```' → logprob: -8.383857727050781
    9. 'indices' → logprob: -8.883857727050781
    10. ':' → logprob: -9.133857727050781

Token 749: ' return' (ID: 622)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6451579332351685
    2. 'colors' → logprob: -1.2701579332351685
    3. 'keep' → logprob: -2.270157814025879
    4. 'return' → logprob: -3.020157814025879
    5. ' new' → logprob: -4.645157814025879
    6. 'create' → logprob: -4.895157814025879
    7. 'result' → logprob: -5.020157814025879
    8. 'retain' → logprob: -5.270157814025879
    9. '       ' → logprob: -5.395157814025879
    10. ' keep' → logprob: -6.020157814025879

Token 750: ' new' (ID: 620)
  Prédit: 'Linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Linear' → logprob: -0.0025860045570880175
    2. ' Linear' → logprob: -6.0025858879089355
    3. '       ' → logprob: -9.127586364746094
    4. '   ' → logprob: -14.127586364746094
    5. 'self' → logprob: -14.752586364746094
    6. 'Line' → logprob: -15.002586364746094
    7. '.Linear' → logprob: -16.752586364746094
    8. '           ' → logprob: -16.877586364746094
    9. ' ' → logprob: -17.252586364746094
    10. 'type' → logprob: -17.502586364746094

Token 751: ' sequence' (ID: 16281)
  Prédit: 'Linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Linear' → logprob: -0.015117389149963856
    2. ' Linear' → logprob: -4.265117168426514
    3. 'sequence' → logprob: -7.015117168426514
    4. ' sequence' → logprob: -9.890117645263672
    5. 'Sequence' → logprob: -12.765117645263672
    6. '_linear' → logprob: -15.015117645263672
    7. '       ' → logprob: -15.515117645263672
    8. '.Linear' → logprob: -15.765117645263672
    9. 'type' → logprob: -15.890117645263672
    10. '   ' → logprob: -15.890117645263672

Token 752: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037140962667763233
    2. '
' → logprob: -5.753714084625244
    3. 'colors' → logprob: -8.503714561462402
    4. ',' → logprob: -9.753714561462402
    5. '(colors' → logprob: -10.003714561462402
    6. 'Linear' → logprob: -10.253714561462402
    7. '```' → logprob: -10.378714561462402
    8. 'return' → logprob: -10.503714561462402
    9. ':' → logprob: -11.003714561462402
    10. 'with' → logprob: -11.253714561462402

Token 753: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016654232749715447
    2. 'Linear' → logprob: -7.1266655921936035
    3. 'colors' → logprob: -7.6266655921936035
    4. 'with' → logprob: -9.876665115356445
    5. '(' → logprob: -10.001665115356445
    6. '   ' → logprob: -10.126665115356445
    7. ' =' → logprob: -10.376665115356445
    8. '
' → logprob: -10.501665115356445
    9. 'return' → logprob: -10.626665115356445
    10. '(colors' → logprob: -10.751665115356445

Token 754: ' new' (ID: 620)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.4774857759475708
    2. 'new' (adapté à ' new') → logprob: -1.1024857759475708
    3. '       ' → logprob: -4.227485656738281
    4. 'Linear' → logprob: -4.352485656738281
    5. 'filtered' → logprob: -4.602485656738281
    6. ' Linear' → logprob: -5.602485656738281
    7. 'result' → logprob: -5.852485656738281
    8. 'remaining' → logprob: -6.102485656738281
    9. ' new' → logprob: -7.227485656738281
    10. ' colors' → logprob: -7.977485656738281

Token 755: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.20326167345046997
    2. 'colors' → logprob: -1.7032616138458252
    3. '_sequence' → logprob: -6.828261852264404
    4. 'Linear' → logprob: -8.328261375427246
    5. ' Linear' → logprob: -8.828261375427246
    6. '_linear' → logprob: -8.953261375427246
    7. 'sequence' → logprob: -9.578261375427246
    8. ' colors' → logprob: -10.078261375427246
    9. 'Colors' → logprob: -10.078261375427246
    10. '_seq' → logprob: -10.203261375427246

Token 756: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759516358375549
    2. '=' → logprob: -0.8259516358375549
    3. '=[' → logprob: -12.32595157623291
    4. '   ' → logprob: -12.95095157623291
    5. '       ' → logprob: -13.70095157623291
    6. '[' → logprob: -13.70095157623291
    7. ':' → logprob: -13.82595157623291
    8. '=[]' → logprob: -14.20095157623291
    9. ' [' → logprob: -15.20095157623291
    10. '=[]
' → logprob: -15.32595157623291

Token 757: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03373203054070473
    2. '[color' → logprob: -4.033731937408447
    3. '[
' → logprob: -5.158731937408447
    4. '[c' → logprob: -5.658731937408447
    5. '[i' → logprob: -6.658731937408447
    6. '[current' → logprob: -6.783731937408447
    7. '[self' → logprob: -7.033731937408447
    8. '[line' → logprob: -7.658731937408447
    9. '[s' → logprob: -8.033732414245605
    10. '[col' → logprob: -8.533732414245605

Token 758: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005234848940744996
    2. 'for' → logprob: -8.500523567199707
    3. ' for' → logprob: -9.375523567199707
    4. 'idx' → logprob: -9.625523567199707
    5. 'i' → logprob: -9.875523567199707
    6. 'j' → logprob: -10.000523567199707
    7. 'current' → logprob: -10.750523567199707
    8. 'prev' → logprob: -11.125523567199707
    9. 'color' → logprob: -11.500523567199707
    10. '   ' → logprob: -12.125523567199707

Token 759: ' remove' (ID: 6234)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7267096042633057
    2. 'j' → logprob: -1.6017096042633057
    3. 'remove' (adapté à ' remove') → logprob: -1.8517096042633057
    4. '       ' → logprob: -2.3517096042633057
    5. 'i' → logprob: -3.7267096042633057
    6. 'for' → logprob: -4.101709365844727
    7. 'current' → logprob: -4.976709365844727
    8. 'rem' → logprob: -5.601709365844727
    9. 'prev' → logprob: -5.851709365844727
    10. 'seq' → logprob: -6.226709365844727

Token 760: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.13845257461071014
    2. 'd' → logprob: -2.1384525299072266
    3. 'set' → logprob: -5.138452529907227
    4. '_idx' → logprob: -5.263452529907227
    5. '_indices' → logprob: -9.013452529907227
    6. '_ptr' → logprob: -9.888452529907227
    7. '_index' → logprob: -10.138452529907227
    8. 'Set' → logprob: -10.263452529907227
    9. '=set' → logprob: -10.388452529907227
    10. '_next' → logprob: -10.513452529907227

Token 761: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16050997376441956
    2. ' =' → logprob: -1.9105099439620972
    3. '=set' → logprob: -8.160510063171387
    4. 'set' → logprob: -18.16050910949707
    5. '=
' → logprob: -18.91050910949707
    6. '={' → logprob: -19.53550910949707
    7. ':' → logprob: -19.91050910949707
    8. ' ' → logprob: -20.16050910949707
    9. '```' → logprob: -20.28550910949707
    10. 's' → logprob: -20.41050910949707

Token 762: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -7.493430894101039e-05
    2. ' set' → logprob: -9.500075340270996
    3. '	set' → logprob: -19.00007438659668
    4. '=set' → logprob: -19.62507438659668
    5. '{' → logprob: -20.25007438659668
    6. '   ' → logprob: -21.12507438659668
    7. '(set' → logprob: -21.37507438659668
    8. ')set' → logprob: -24.25007438659668
    9. '```' → logprob: -24.62507438659668
    10. ' ' → logprob: -24.75007438659668

Token 763: '(indices' (ID: 161036)
  Prédit: '(indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indices' → logprob: -1.1756367712223437e-05
    2. 'indices' → logprob: -11.375011444091797
    3. '"indices' → logprob: -15.500011444091797
    4. '(ids' → logprob: -17.250011444091797
    5. '(' → logprob: -18.250011444091797
    6. '(index' → logprob: -18.750011444091797
    7. '(ind' → logprob: -19.125011444091797
    8. '.indices' → logprob: -19.375011444091797
    9. '(
' → logprob: -19.375011444091797
    10. '(i' → logprob: -19.500011444091797

Token 764: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519572377204895
    2. ')
' → logprob: -1.5019571781158447
    3. '       ' → logprob: -11.376956939697266
    4. ')
' → logprob: -11.501956939697266
    5. '   ' → logprob: -12.251956939697266
    6. ')

' → logprob: -14.001956939697266
    7. ' )' → logprob: -14.876956939697266
    8. ' )
' → logprob: -14.876956939697266
    9. ' ' → logprob: -16.501956939697266
    10. '	' → logprob: -17.626956939697266

Token 765: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010457913391292095
    2. 'for' → logprob: -5.260457992553711
    3. ' for' → logprob: -5.260457992553711
    4. '   ' → logprob: -11.135457992553711
    5. '
' → logprob: -14.260457992553711
    6. '```' → logprob: -14.385457992553711
    7. '	for' → logprob: -14.510457992553711
    8. ' ' → logprob: -14.760457992553711
    9. '           ' → logprob: -15.135457992553711
    10. ',' → logprob: -15.510457992553711

Token 766: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0086322957649827
    2. '       ' → logprob: -5.008632183074951
    3. ' for' → logprob: -6.258632183074951
    4. '	for' → logprob: -14.63363265991211
    5. 'n' → logprob: -14.88363265991211
    6. '   ' → logprob: -15.75863265991211
    7. '
' → logprob: -16.38363265991211
    8. '```' → logprob: -16.63363265991211
    9. '        
' → logprob: -17.88363265991211
    10. '``' → logprob: -18.38363265991211

Token 767: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.7729658540920354e-05
    2. 'idx' → logprob: -10.500027656555176
    3. ' i' → logprob: -16.000028610229492
    4. ' idx' → logprob: -22.000028610229492
    5. '	i' → logprob: -22.125028610229492
    6. '_i' → logprob: -23.625028610229492
    7. 'index' → logprob: -23.625028610229492
    8. '   ' → logprob: -24.625028610229492
    9. '(i' → logprob: -25.250028610229492
    10. 'ix' → logprob: -25.375028610229492

Token 768: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10629568994045258
    2. 'in' → logprob: -2.356295585632324
    3. ',' → logprob: -5.106295585632324
    4. ' ,' → logprob: -12.231295585632324
    5. '       ' → logprob: -13.231295585632324
    6. ' ' → logprob: -13.606295585632324
    7. '   ' → logprob: -13.606295585632324
    8. '0' → logprob: -14.606295585632324
    9. '    ' → logprob: -14.856295585632324
    10. 'i' → logprob: -14.856295585632324

Token 769: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.7697225252486533e-06
    2. ' range' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.375003814697266
    4. '	range' → logprob: -19.625003814697266
    5. '
' → logprob: -20.125003814697266
    6. '_range' → logprob: -20.375003814697266
    7. '(range' → logprob: -21.000003814697266
    8. 'Range' → logprob: -21.500003814697266
    9. '#' → logprob: -22.000003814697266
    10. '0' → logprob: -22.250003814697266

Token 770: '(sequence' (ID: 129991)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0005019200034439564
    2. '(sequence' → logprob: -8.00050163269043
    3. ' sequence' → logprob: -8.75050163269043
    4. '0' → logprob: -12.25050163269043
    5. 'len' → logprob: -13.00050163269043
    6. '   ' → logprob: -15.00050163269043
    7. 'length' → logprob: -15.00050163269043
    8. ' ' → logprob: -15.50050163269043
    9. '(' → logprob: -16.25050163269043
    10. '.sequence' → logprob: -17.62550163269043

Token 771: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.00010318557906430215
    2. '.' → logprob: -9.875102996826172
    3. 'length' → logprob: -10.125102996826172
    4. ' .' → logprob: -11.500102996826172
    5. '(length' → logprob: -14.625102996826172
    6. '   ' → logprob: -14.750102996826172
    7. ' length' → logprob: -15.500102996826172
    8. '().' → logprob: -16.125102996826172
    9. '.LENGTH' → logprob: -16.375102996826172
    10. '(' → logprob: -16.500102996826172

Token 772: '()):
' (ID: 83536)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1617645025253296
    2. '()):
' → logprob: -2.036764621734619
    3. '):' → logprob: -4.286764621734619
    4. '()' → logprob: -5.411764621734619
    5. '():
' → logprob: -7.411764621734619
    6. '       ' → logprob: -10.411764144897461
    7. '   ' → logprob: -10.786764144897461
    8. '):
' → logprob: -11.286764144897461
    9. '():' → logprob: -11.536764144897461
    10. ' ):
' → logprob: -11.661764144897461

Token 773: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007649103179574013
    2. 'if' → logprob: -5.132648944854736
    3. ' if' → logprob: -6.382648944854736
    4. '   ' → logprob: -11.007649421691895
    5. '```' → logprob: -11.632649421691895
    6. '       ' → logprob: -14.632649421691895
    7. '            ' → logprob: -14.757649421691895
    8. ' ' → logprob: -15.007649421691895
    9. '	       ' → logprob: -15.007649421691895
    10. '          ' → logprob: -15.132649421691895

Token 774: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03598170354962349
    2. '           ' → logprob: -4.03598165512085
    3. ' if' → logprob: -4.03598165512085
    4. '               ' → logprob: -13.035982131958008
    5. '   ' → logprob: -14.035982131958008
    6. 'not' → logprob: -14.285982131958008
    7. '```' → logprob: -14.410982131958008
    8. '	if' → logprob: -15.035982131958008
    9. '          ' → logprob: -15.660982131958008
    10. '       ' → logprob: -15.785982131958008

Token 775: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.7385154428193346e-05
    2. '           ' → logprob: -10.87503719329834
    3. ' i' → logprob: -11.00003719329834
    4. '   ' → logprob: -13.62503719329834
    5. '               ' → logprob: -15.37503719329834
    6. '       ' → logprob: -16.375038146972656
    7. ' ' → logprob: -17.000038146972656
    8. '     ' → logprob: -17.000038146972656
    9. '         ' → logprob: -17.250038146972656
    10. 'not' → logprob: -17.375038146972656

Token 776: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04858771339058876
    2. 'not' → logprob: -3.0485877990722656
    3. '	not' → logprob: -15.423587799072266
    4. ' in' → logprob: -16.798587799072266
    5. ')' → logprob: -16.923587799072266
    6. 'in' → logprob: -17.548587799072266
    7. ':not' → logprob: -18.673587799072266
    8. ' no' → logprob: -18.923587799072266
    9. ' ' → logprob: -19.173587799072266
    10. ' ' → logprob: -19.548587799072266

Token 777: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1609233170747757
    2. ' in' → logprob: -1.9109233617782593
    3. 'remove' → logprob: -7.285923480987549
    4. ' remove' → logprob: -11.28592300415039
    5. '(remove' → logprob: -14.16092300415039
    6. 'to' → logprob: -15.78592300415039
    7. '
' → logprob: -16.41092300415039
    8. ')' → logprob: -16.66092300415039
    9. ' ' → logprob: -16.66092300415039
    10. '```' → logprob: -17.16092300415039

Token 778: ' remove' (ID: 6234)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -5.836499985889532e-05
    2. ' remove' → logprob: -9.7500581741333
    3. '	remove' → logprob: -17.125059127807617
    4. '(remove' → logprob: -17.375059127807617
    5. '   ' → logprob: -19.375059127807617
    6. '
' → logprob: -19.500059127807617
    7. ' ' → logprob: -20.500059127807617
    8. '.remove' → logprob: -21.250059127807617
    9. '```' → logprob: -22.250059127807617
    10. '_remove' → logprob: -22.750059127807617

Token 779: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -2.816093228830141e-06
    2. '_remove' → logprob: -13.87500286102295
    3. 'set' → logprob: -14.37500286102295
    4. '_' → logprob: -14.75000286102295
    5. 'et' → logprob: -15.87500286102295
    6. '   ' → logprob: -15.87500286102295
    7. '_indices' → logprob: -16.250001907348633
    8. 's' → logprob: -16.250001907348633
    9. 'indices' → logprob: -16.625001907348633
    10. 'remove' → logprob: -16.625001907348633

Token 780: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06266021728515625
    2. ':' → logprob: -2.9376602172851562
    3. '               ' → logprob: -5.312660217285156
    4. '):
' → logprob: -6.562660217285156
    5. '           ' → logprob: -6.937660217285156
    6. ',' → logprob: -8.937660217285156
    7. 'new' → logprob: -9.187660217285156
    8. ' new' → logprob: -9.687660217285156
    9. ':new' → logprob: -10.062660217285156
    10. ' and' → logprob: -10.437660217285156

Token 781: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005403677001595497
    2. 'new' → logprob: -5.755403518676758
    3. ' new' → logprob: -6.130403518676758
    4. ':
' → logprob: -10.755403518676758
    5. ',' → logprob: -11.255403518676758
    6. ':' → logprob: -12.755403518676758
    7. '           ' → logprob: -12.880403518676758
    8. '```' → logprob: -12.880403518676758
    9. ',new' → logprob: -13.505403518676758
    10. '):
' → logprob: -14.505403518676758

Token 782: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.008616226725280285
    2. ' new' → logprob: -4.7586164474487305
    3. '               ' → logprob: -13.63361644744873
    4. '                   ' → logprob: -15.00861644744873
    5. '   ' → logprob: -16.758615493774414
    6. '           ' → logprob: -16.758615493774414
    7. '	new' → logprob: -17.008615493774414
    8. '_new' → logprob: -17.133615493774414
    9. ' ' → logprob: -18.383615493774414
    10. '                       ' → logprob: -19.508615493774414

Token 783: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -9.849109119386412e-06
    2. 'colors' → logprob: -11.875009536743164
    3. 'new' → logprob: -13.000009536743164
    4. '```' → logprob: -15.000009536743164
    5. '_' → logprob: -16.375009536743164
    6. '
' → logprob: -17.500009536743164
    7. '_
' → logprob: -18.125009536743164
    8. '_color' → logprob: -18.500009536743164
    9. 'Colors' → logprob: -18.500009536743164
    10. '_new' → logprob: -18.625009536743164

Token 784: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005079957190901041
    2. '.' → logprob: -7.750507831573486
    3. 'append' → logprob: -9.500508308410645
    4. ' .' → logprob: -14.000508308410645
    5. ').' → logprob: -14.875508308410645
    6. '.extend' → logprob: -14.875508308410645
    7. '=' → logprob: -15.000508308410645
    8. '           ' → logprob: -15.500508308410645
    9. '               ' → logprob: -16.000507354736328
    10. ' append' → logprob: -16.375507354736328

Token 785: '(sequence' (ID: 129991)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.1602369248867035
    2. '(sequence' → logprob: -1.9102369546890259
    3. ' sequence' → logprob: -11.285237312316895
    4. '(
' → logprob: -15.785237312316895
    5. '   ' → logprob: -16.535236358642578
    6. '(' → logprob: -17.160236358642578
    7. '
' → logprob: -19.535236358642578
    8. '       ' → logprob: -19.785236358642578
    9. '.sequence' → logprob: -19.910236358642578
    10. 'sequ' → logprob: -20.035236358642578

Token 786: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -1.6405310816480778e-05
    2. 'get' → logprob: -11.750016212463379
    3. '.' → logprob: -12.000016212463379
    4. ').' → logprob: -14.125016212463379
    5. ' .' → logprob: -14.250016212463379
    6. '._' → logprob: -14.375016212463379
    7. '[i' → logprob: -16.250017166137695
    8. '().' → logprob: -16.625017166137695
    9. '```' → logprob: -16.625017166137695
    10. ')' → logprob: -17.000017166137695

Token 787: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -2.641841820150148e-05
    2. 'color' → logprob: -10.62502670288086
    3. 'Color' → logprob: -14.50002670288086
    4. '(i' → logprob: -15.37502670288086
    5. 'olor' → logprob: -15.62502670288086
    6. '_COLOR' → logprob: -15.75002670288086
    7. '```' → logprob: -15.87502670288086
    8. 'i' → logprob: -16.12502670288086
    9. '_colour' → logprob: -16.12502670288086
    10. '_Color' → logprob: -16.25002670288086

Token 788: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.75
    3. ' (' → logprob: -16.5
    4. ')' → logprob: -18.5
    5. 'i' → logprob: -18.875
    6. '(
' → logprob: -20.5
    7. '   ' → logprob: -20.5
    8. ')(' → logprob: -21.25
    9. '(ii' → logprob: -21.25
    10. '```' → logprob: -21.375

Token 789: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3870912492275238
    2. '))' → logprob: -1.1370912790298462
    3. ')
' → logprob: -9.137091636657715
    4. '))
' → logprob: -9.137091636657715
    5. ' )' → logprob: -12.637091636657715
    6. ' ))' → logprob: -14.012091636657715
    7. ')))' → logprob: -15.137091636657715
    8. '       ' → logprob: -15.262091636657715
    9. ')`' → logprob: -16.5120906829834
    10. '           ' → logprob: -16.7620906829834

Token 790: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007792579010128975
    2. '
' → logprob: -4.8827924728393555
    3. 'return' → logprob: -8.882792472839355
    4. ' return' → logprob: -10.757792472839355
    5. '```' → logprob: -11.257792472839355
    6. '        
' → logprob: -12.382792472839355
    7. '
' → logprob: -12.757792472839355
    8. '<|end|>' → logprob: -13.757792472839355
    9. ')
' → logprob: -14.257792472839355
    10. ')' → logprob: -14.257792472839355

Token 791: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014591218903660774
    2. '       ' → logprob: -4.264591217041016
    3. ' return' → logprob: -7.764591217041016
    4. '	return' → logprob: -13.014591217041016
    5. '
' → logprob: -14.889591217041016
    6. '```' → logprob: -15.139591217041016
    7. '	' → logprob: -15.389591217041016
    8. ')return' → logprob: -16.764591217041016
    9. '   ' → logprob: -17.764591217041016
    10. '        
' → logprob: -18.014591217041016

Token 792: ' Linear' (ID: 29092)
  Prédit: 'Linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Linear' → logprob: -3.7697225252486533e-06
    2. ' Linear' → logprob: -12.500003814697266
    3. '       ' → logprob: -18.500003814697266
    4. 'Line' → logprob: -20.000003814697266
    5. '   ' → logprob: -20.125003814697266
    6. 'Lin' → logprob: -20.875003814697266
    7. 'linear' → logprob: -21.250003814697266
    8. '           ' → logprob: -22.500003814697266
    9. '.Linear' → logprob: -23.375003814697266
    10. '  ' → logprob: -24.250003814697266

Token 793: 'Character' (ID: 14648)
  Prédit: 'Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: 0.0
    2. '<Character' → logprob: -17.375
    3. 'character' → logprob: -17.375
    4. '_character' → logprob: -18.75
    5. 'Characteristic' → logprob: -19.0
    6. '(Character' → logprob: -19.25
    7. 'Linear' → logprob: -20.5
    8. ' Character' → logprob: -20.625
    9. 'Characters' → logprob: -20.875
    10. '_CHARACTER' → logprob: -21.875

Token 794: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -1.0206720617134124e-05
    2. 'sequence' → logprob: -11.50001049041748
    3. '_sequence' → logprob: -17.250009536743164
    4. ' sequence' → logprob: -17.375009536743164
    5. 'quence' → logprob: -19.000009536743164
    6. 'Sequ' → logprob: -19.250009536743164
    7. 'Character' → logprob: -19.500009536743164
    8. ' Sequence' → logprob: -20.000009536743164
    9. 'Sequences' → logprob: -20.250009536743164
    10. '_SEQUENCE' → logprob: -20.875009536743164

Token 795: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -3.128163257315464e-07
    2. 'new' → logprob: -15.625
    3. '(' → logprob: -16.375
    4. '```' → logprob: -20.75
    5. '[new' → logprob: -20.75
    6. ' new' → logprob: -21.125
    7. ' (' → logprob: -21.125
    8. ')new' → logprob: -21.875
    9. '(list' → logprob: -22.375
    10. '((' → logprob: -22.75

Token 796: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -1.1472419600977446e-06
    2. 'colors' → logprob: -13.750000953674316
    3. 'Colors' → logprob: -19.125001907348633
    4. '_col' → logprob: -20.125001907348633
    5. '```' → logprob: -20.625001907348633
    6. '_color' → logprob: -20.875001907348633
    7. 'new' → logprob: -21.375001907348633
    8. '.colors' → logprob: -22.000001907348633
    9. '_
' → logprob: -22.250001907348633
    10. '_codes' → logprob: -22.375001907348633

Token 797: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.41866585687967e-06
    2. ')
' → logprob: -11.750008583068848
    3. '<|end|>' → logprob: -15.375008583068848
    4. ' )' → logprob: -16.00000762939453
    5. '   ' → logprob: -17.00000762939453
    6. '       ' → logprob: -17.50000762939453
    7. ')return' → logprob: -18.00000762939453
    8. ')

' → logprob: -18.37500762939453
    9. '),' → logprob: -18.50000762939453
    10. '")' → logprob: -18.75000762939453

Token 798: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0080055957660079
    2. 'def' → logprob: -5.008005619049072
    3. '#' → logprob: -6.883005619049072
    4. 'from' → logprob: -9.258005142211914
    5. '```' → logprob: -9.758005142211914
    6. 'import' → logprob: -10.008005142211914
    7. '<|end|>' → logprob: -10.133005142211914
    8. 'if' → logprob: -12.008005142211914
    9. 'color' → logprob: -12.133005142211914
    10. '[' → logprob: -12.258005142211914

Token 799: ' Move' (ID: 25485)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -1.0344406366348267
    2. 'Group' → logprob: -1.9094406366348267
    3. 'Combo' → logprob: -2.034440517425537
    4. 'Adjacent' → logprob: -3.159440517425537
    5. 'Score' → logprob: -3.909440517425537
    6. 'Bubble' → logprob: -4.034440517425537
    7. 'Multi' → logprob: -4.034440517425537
    8. 'Composite' → logprob: -4.409440517425537
    9. 'Pair' → logprob: -4.534440517425537
    10. 'Two' → logprob: -4.534440517425537

Token 800: ':
' (ID: 734)
  Prédit: 'El'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'El' → logprob: -0.10633673518896103
    2. 'Strategy' → logprob: -2.981336832046509
    3. 'Sequence' → logprob: -4.10633659362793
    4. 'Evaluator' → logprob: -4.73133659362793
    5. 'Generator' → logprob: -5.48133659362793
    6. 'Validator' → logprob: -5.98133659362793
    7. 'Chain' → logprob: -6.10633659362793
    8. 'Removal' → logprob: -6.48133659362793
    9. 'To' → logprob: -6.60633659362793
    10. 'Down' → logprob: -6.85633659362793

Token 801: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028006548061966896
    2. ':' → logprob: -4.528006553649902
    3. 'class' → logprob: -5.153006553649902
    4. '(' → logprob: -5.403006553649902
    5. '<|end|>' → logprob: -5.653006553649902
    6. ':
' → logprob: -7.278006553649902
    7. '@dat' → logprob: -7.778006553649902
    8. 'from' → logprob: -7.903006553649902
    9. '(Abstract' → logprob: -8.028006553649902
    10. '(object' → logprob: -8.403006553649902

Token 802: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6577919125556946
    2. 'def' → logprob: -1.4077918529510498
    3. 'class' → logprob: -1.9077918529510498
    4. '(' → logprob: -3.03279185295105
    5. ':' → logprob: -4.157792091369629
    6. '__' → logprob: -4.907792091369629
    7. '@dat' → logprob: -5.282792091369629
    8. 'from' → logprob: -5.657792091369629
    9. ' def' → logprob: -6.157792091369629
    10. '<|end|>' → logprob: -6.282792091369629

Token 803: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11126118898391724
    2. '   ' → logprob: -2.7362611293792725
    3. 'class' → logprob: -3.4862611293792725
    4. ' def' → logprob: -5.236261367797852
    5. 'int' → logprob: -6.611261367797852
    6. 'from' → logprob: -6.861261367797852
    7. '"""
' → logprob: -7.486261367797852
    8. '@dat' → logprob: -7.486261367797852
    9. '__' → logprob: -7.736261367797852
    10. '"""' → logprob: -8.111261367797852

Token 804: ' Represents' (ID: 84592)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.22305132448673248
    2. 'def' → logprob: -1.7230513095855713
    3. 'from' → logprob: -3.9730513095855713
    4. ' def' → logprob: -7.47305154800415
    5. '   ' → logprob: -7.59805154800415
    6. '__' → logprob: -7.72305154800415
    7. '"""' → logprob: -7.97305154800415
    8. '"""
' → logprob: -8.098051071166992
    9. '@dat' → logprob: -8.848051071166992
    10. 'classmethod' → logprob: -9.723051071166992

Token 805: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00669440720230341
    2. ' a' → logprob: -5.506694316864014
    3. 'an' → logprob: -6.131694316864014
    4. ' an' → logprob: -8.381694793701172
    5. 'the' → logprob: -8.881694793701172
    6. 'class' → logprob: -10.506694793701172
    7. '<|end|>' → logprob: -10.756694793701172
    8. '   ' → logprob: -12.131694793701172
    9. '"a' → logprob: -13.006694793701172
    10. '"' → logprob: -13.131694793701172

Token 806: ' single' (ID: 4590)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.06360244005918503
    2. 'single' → logprob: -3.0636024475097656
    3. ' move' → logprob: -5.188602447509766
    4. 'possible' → logprob: -5.563602447509766
    5. 'placement' → logprob: -5.938602447509766
    6. 'potential' → logprob: -7.313602447509766
    7. 'color' → logprob: -7.688602447509766
    8. 'player' → logprob: -7.938602447509766
    9. 'play' → logprob: -8.188602447509766
    10. 'swap' → logprob: -8.438602447509766

Token 807: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.36310410499572754
    2. ' move' → logprob: -1.2381041049957275
    3. 'character' → logprob: -4.613103866577148
    4. 'placement' → logprob: -5.988103866577148
    5. ' character' → logprob: -7.488103866577148
    6. 'insert' → logprob: -8.613103866577148
    7. '   ' → logprob: -8.613103866577148
    8. ' insertion' → logprob: -8.738103866577148
    9. 'Move' → logprob: -8.863103866577148
    10. 'color' → logprob: -8.988103866577148

Token 808: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 809: ' changing' (ID: 13784)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9925183057785034
    2. 'placing' → logprob: -1.2425183057785034
    3. 'in' → logprob: -1.3675183057785034
    4. 'the' → logprob: -3.617518424987793
    5. 'Character' → logprob: -3.867518424987793
    6. 'Linear' → logprob: -4.867518424987793
    7. 'character' → logprob: -4.867518424987793
    8. 'int' → logprob: -5.117518424987793
    9. 'adding' → logprob: -5.617518424987793
    10. ' inserting' → logprob: -5.742518424987793

Token 810: ' one' (ID: 1001)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6423911452293396
    2. 'a' → logprob: -0.8923911452293396
    3. ' the' → logprob: -3.6423912048339844
    4. ' a' → logprob: -4.392391204833984
    5. 'color' → logprob: -4.392391204833984
    6. 'an' → logprob: -5.267391204833984
    7. 'index' → logprob: -5.517391204833984
    8. ' an' → logprob: -6.892391204833984
    9. 'position' → logprob: -6.892391204833984
    10. 'character' → logprob: -6.892391204833984

Token 811: ' character' (ID: 5855)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.12812291085720062
    2. 'color' → logprob: -2.1281228065490723
    3. ' character' → logprob: -7.253122806549072
    4. 'index' → logprob: -8.37812328338623
    5. ' color' → logprob: -9.37812328338623
    6. 'position' → logprob: -9.62812328338623
    7. 'char' → logprob: -10.00312328338623
    8. 'Character' → logprob: -10.75312328338623
    9. 'token' → logprob: -11.75312328338623
    10. 'colored' → logprob: -11.87812328338623

Token 812: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.0009444572497159243
    2. '   ' → logprob: -8.000944137573242
    3. ''' → logprob: -8.250944137573242
    4. 'from' → logprob: -8.875944137573242
    5. 'color' → logprob: -9.375944137573242
    6. '_color' → logprob: -10.375944137573242
    7. ' color' → logprob: -10.750944137573242
    8. ' at' → logprob: -11.625944137573242
    9. ',' → logprob: -11.750944137573242
    10. ' in' → logprob: -11.750944137573242

Token 813: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.11284637451171875
    2. ' color' → logprob: -2.2378463745117188
    3. '_color' → logprob: -12.612846374511719
    4. '```' → logprob: -12.612846374511719
    5. ' ' → logprob: -13.112846374511719
    6. '	color' → logprob: -13.237846374511719
    7. '.color' → logprob: -13.487846374511719
    8. 'index' → logprob: -13.737846374511719
    9. 'position' → logprob: -13.862846374511719
    10. '=color' → logprob: -13.925346374511719

Token 814: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8305579423904419
    2. ' at' → logprob: -2.2055578231811523
    3. '   ' → logprob: -2.3305578231811523
    4. ' in' → logprob: -2.5805578231811523
    5. 'from' → logprob: -2.7055578231811523
    6. ':' → logprob: -3.0805578231811523
    7. '(' → logprob: -3.0805578231811523
    8. ',' → logprob: -3.2055578231811523
    9. ' from' → logprob: -3.8305578231811523
    10. ' to' → logprob: -4.205557823181152

Token 815: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004507020115852356
    2. 'class' → logprob: -5.879507064819336
    3. '   ' → logprob: -6.754507064819336
    4. '```' → logprob: -8.379507064819336
    5. '

' → logprob: -8.879507064819336
    6. '    
' → logprob: -9.254507064819336
    7. '"""
' → logprob: -10.254507064819336
    8. 'from' → logprob: -11.254507064819336
    9. '(
' → logprob: -12.754507064819336
    10. '  
' → logprob: -12.754507064819336

Token 816: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0030759908258914948
    2. 'class' → logprob: -6.503076076507568
    3. '

' → logprob: -6.878076076507568
    4. '```' → logprob: -8.12807559967041
    5. '   ' → logprob: -8.50307559967041
    6. '    
' → logprob: -10.87807559967041
    7. '
' → logprob: -12.12807559967041
    8. 'from' → logprob: -12.50307559967041
    9. '  
' → logprob: -12.62807559967041
    10. '(' → logprob: -13.12807559967041

Token 817: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.9396502375602722
    2. '
' → logprob: -1.189650297164917
    3. 'def' → logprob: -1.689650297164917
    4. '   ' → logprob: -2.189650297164917
    5. '```' → logprob: -5.189650058746338
    6. ' def' → logprob: -6.314650058746338
    7. '    
' → logprob: -7.689650058746338
    8. 'from' → logprob: -8.689650535583496
    9. '@dat' → logprob: -8.939650535583496
    10. '__' → logprob: -9.064650535583496

Token 818: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0024859998375177383
    2. '__' → logprob: -6.002486228942871
    3. ' def' → logprob: -11.502486228942871
    4. 'from' → logprob: -15.252486228942871
    5. 'class' → logprob: -17.002485275268555
    6. '```' → logprob: -17.502485275268555
    7. '_def' → logprob: -18.377485275268555
    8. '   ' → logprob: -18.627485275268555
    9. '	def' → logprob: -18.627485275268555
    10. '
' → logprob: -19.002485275268555

Token 819: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0012149984249845147
    2. ' __' → logprob: -7.376214981079102
    3. 'init' → logprob: -7.876214981079102
    4. 'def' → logprob: -9.126214981079102
    5. '```' → logprob: -9.376214981079102
    6. '_init' → logprob: -11.876214981079102
    7. '`' → logprob: -13.001214981079102
    8. '.__' → logprob: -13.751214981079102
    9. 'classmethod' → logprob: -14.126214981079102
    10. '**' → logprob: -14.126214981079102

Token 820: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.723973582556937e-05
    2. 'class' → logprob: -11.000017166137695
    3. 'initi' → logprob: -15.750017166137695
    4. 'def' → logprob: -17.000017166137695
    5. 'ini' → logprob: -17.125017166137695
    6. 'nit' → logprob: -17.250017166137695
    7. 'code' → logprob: -17.375017166137695
    8. 'name' → logprob: -17.500017166137695
    9. 'repr' → logprob: -17.500017166137695
    10. 'new' → logprob: -17.750017166137695

Token 821: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00014442270912695676
    2. '(self' → logprob: -9.125144004821777
    3. '__(
' → logprob: -10.500144004821777
    4. '__' → logprob: -11.875144004821777
    5. 'self' → logprob: -14.375144004821777
    6. '_(' → logprob: -15.875144004821777
    7. '   ' → logprob: -16.000144958496094
    8. '__((' → logprob: -17.000144958496094
    9. '```' → logprob: -18.375144958496094
    10. '(' → logprob: -18.875144958496094

Token 822: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.7432603272027336e-06
    2. ' self' → logprob: -13.875001907348633
    3. 'idx' → logprob: -15.125001907348633
    4. ')' → logprob: -15.500001907348633
    5. '(self' → logprob: -15.750001907348633
    6. 'index' → logprob: -16.875001907348633
    7. '0' → logprob: -17.125001907348633
    8. '
' → logprob: -18.500001907348633
    9. '	self' → logprob: -18.500001907348633
    10. ',' → logprob: -18.750001907348633

Token 823: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007193643134087324
    2. ',' → logprob: -5.257193565368652
    3. '(self' → logprob: -6.507193565368652
    4. ' self' → logprob: -8.382193565368652
    5. '__(' → logprob: -8.507193565368652
    6. ' (' → logprob: -11.132193565368652
    7. '__,' → logprob: -11.382193565368652
    8. '   ' → logprob: -12.757193565368652
    9. ',self' → logprob: -13.382193565368652
    10. '_,' → logprob: -14.132193565368652

Token 824: ' position' (ID: 4010)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.13316912949085236
    2. 'index' → logprob: -2.133169174194336
    3. ' idx' → logprob: -5.758169174194336
    4. 'position' → logprob: -6.008169174194336
    5. 'pos' → logprob: -8.008169174194336
    6. ' index' → logprob: -8.258169174194336
    7. ' position' → logprob: -11.508169174194336
    8. '   ' → logprob: -13.133169174194336
    9. 'self' → logprob: -13.758169174194336
    10. ' ' → logprob: -15.383169174194336

Token 825: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22931839525699615
    2. ':' → logprob: -1.604318380355835
    3. '=' → logprob: -6.104318618774414
    4. ' ,' → logprob: -6.729318618774414
    5. ':int' → logprob: -7.854318618774414
    6. '=None' → logprob: -10.729318618774414
    7. ' :' → logprob: -10.979318618774414
    8. ')' → logprob: -11.354318618774414
    9. '<|end|>' → logprob: -11.604318618774414
    10. '<|end|>' → logprob: -12.229318618774414

Token 826: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00020377879263833165
    2. ' int' → logprob: -8.500204086303711
    3. '[int' → logprob: -15.750204086303711
    4. ':int' → logprob: -16.62520408630371
    5. '0' → logprob: -17.75020408630371
    6. '   ' → logprob: -18.00020408630371
    7. '	int' → logprob: -18.50020408630371
    8. ')' → logprob: -19.12520408630371
    9. '=int' → logprob: -19.62520408630371
    10. '<int' → logprob: -19.75020408630371

Token 827: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7729658540920354e-05
    2. ' ,' → logprob: -10.500027656555176
    3. '‌,' → logprob: -16.625028610229492
    4. ',
' → logprob: -17.000028610229492
    5. '<|end|>' → logprob: -17.000028610229492
    6. ')' → logprob: -17.375028610229492
    7. ',color' → logprob: -17.875028610229492
    8. '):' → logprob: -18.500028610229492
    9. '=' → logprob: -18.625028610229492
    10. '‍,' → logprob: -19.000028610229492

Token 828: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.12888693809509277
    2. 'color' → logprob: -2.6288869380950928
    3. ' new' → logprob: -3.1288869380950928
    4. ' color' → logprob: -6.128887176513672
    5. 'from' → logprob: -6.253887176513672
    6. 'old' → logprob: -7.378887176513672
    7. 'original' → logprob: -8.628887176513672
    8. ' old' → logprob: -10.378887176513672
    9. ' from' → logprob: -10.503887176513672
    10. '   ' → logprob: -11.253887176513672

Token 829: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.0019407729851081967
    2. 'color' → logprob: -6.251940727233887
    3. 'Color' → logprob: -11.876940727233887
    4. ' color' → logprob: -12.251940727233887
    5. '```' → logprob: -16.001941680908203
    6. '_COLOR' → logprob: -16.126941680908203
    7. '   ' → logprob: -16.376941680908203
    8. ')' → logprob: -17.001941680908203
    9. '_code' → logprob: -17.126941680908203
    10. ':' → logprob: -17.251941680908203

Token 830: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001899511698866263
    2. '):' → logprob: -9.125189781188965
    3. ':int' → logprob: -9.750189781188965
    4. ',' → logprob: -11.250189781188965
    5. ' :' → logprob: -11.750189781188965
    6. ')' → logprob: -13.625189781188965
    7. ' ):' → logprob: -15.125189781188965
    8. '):
' → logprob: -15.500189781188965
    9. '   ' → logprob: -16.62519073486328
    10. '_:' → logprob: -17.00019073486328

Token 831: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00020389800192788243
    2. ' int' → logprob: -8.500204086303711
    3. ')' → logprob: -15.750204086303711
    4. '   ' → logprob: -15.750204086303711
    5. ' ' → logprob: -16.87520408630371
    6. ':int' → logprob: -17.00020408630371
    7. 'Color' → logprob: -17.75020408630371
    8. '[int' → logprob: -18.12520408630371
    9. '  ' → logprob: -18.25020408630371
    10. '	int' → logprob: -18.37520408630371

Token 832: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07987067103385925
    2. '):
' → logprob: -2.5798707008361816
    3. ')' → logprob: -6.954870700836182
    4. '):
' → logprob: -10.704870223999023
    5. ',' → logprob: -12.829870223999023
    6. ':' → logprob: -14.454870223999023
    7. '   ' → logprob: -14.579870223999023
    8. '):

' → logprob: -15.329870223999023
    9. ' ):' → logprob: -16.579870223999023
    10. ')**' → logprob: -17.204870223999023

Token 833: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008895344100892544
    2. 'self' → logprob: -4.758895397186279
    3. ' self' → logprob: -8.383894920349121
    4. '<|end|>' → logprob: -11.008894920349121
    5. ':' → logprob: -11.383894920349121
    6. '   ' → logprob: -11.633894920349121
    7. ')' → logprob: -12.258894920349121
    8. '(self' → logprob: -12.883894920349121
    9. '):
' → logprob: -13.133894920349121
    10. ',' → logprob: -13.258894920349121

Token 834: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.630610641877865e-06
    2. '       ' → logprob: -12.000006675720215
    3. ' self' → logprob: -15.000006675720215
    4. '   ' → logprob: -21.1250057220459
    5. '	self' → logprob: -22.5000057220459
    6. '           ' → logprob: -24.0000057220459
    7. '(self' → logprob: -24.2500057220459
    8. '        ' → logprob: -26.0000057220459
    9. '     ' → logprob: -26.1250057220459
    10. '
' → logprob: -26.1250057220459

Token 835: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.00019591135787777603
    2. '.' → logprob: -8.625195503234863
    3. 'position' → logprob: -11.125195503234863
    4. ' .' → logprob: -14.375195503234863
    5. '._' → logprob: -14.625195503234863
    6. '   ' → logprob: -15.625195503234863
    7. '_position' → logprob: -16.25019645690918
    8. '[position' → logprob: -16.25019645690918
    9. '	position' → logprob: -16.37519645690918
    10. '       ' → logprob: -16.87519645690918

Token 836: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2273825854063034
    2. ' =' → logprob: -1.6023825407028198
    3. ',' → logprob: -6.477382659912109
    4. ':' → logprob: -8.60238265991211
    5. '<|end|>' → logprob: -8.72738265991211
    6. ')' → logprob: -9.60238265991211
    7. ' ' → logprob: -12.85238265991211
    8. '   ' → logprob: -13.10238265991211
    9. '=self' → logprob: -13.10238265991211
    10. ' ,' → logprob: -13.22738265991211

Token 837: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.01416350994259119
    2. ' position' → logprob: -4.264163494110107
    3. '	position' → logprob: -17.389163970947266
    4. '[position' → logprob: -19.514163970947266
    5. '(position' → logprob: -19.889163970947266
    6. '   ' → logprob: -20.139163970947266
    7. '       ' → logprob: -20.139163970947266
    8. ' ' → logprob: -20.514163970947266
    9. '.position' → logprob: -21.014163970947266
    10. 'new' → logprob: -21.764163970947266

Token 838: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 839: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08464353531599045
    2. '       ' → logprob: -2.584643602371216
    3. ',' → logprob: -5.459643363952637
    4. ' self' → logprob: -7.084643363952637
    5. '
' → logprob: -7.459643363952637
    6. 'new' → logprob: -10.459643363952637
    7. ',
' → logprob: -10.959643363952637
    8. ',self' → logprob: -11.334643363952637
    9. '(self' → logprob: -12.459643363952637
    10. '   ' → logprob: -12.959643363952637

Token 840: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0004589094896800816
    2. ' self' → logprob: -7.750458717346191
    3. 'new' → logprob: -10.875458717346191
    4. '       ' → logprob: -11.625458717346191
    5. '
' → logprob: -15.375458717346191
    6. '   ' → logprob: -16.625459671020508
    7. '	self' → logprob: -16.875459671020508
    8. ' new' → logprob: -17.500459671020508
    9. 'color' → logprob: -18.750459671020508
    10. '(self' → logprob: -19.500459671020508

Token 841: '.new' (ID: 8564)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09198018163442612
    2. '.new' → logprob: -2.466980218887329
    3. 'new' → logprob: -6.71697998046875
    4. ' .' → logprob: -6.96697998046875
    5. '._' → logprob: -8.21697998046875
    6. '.
' → logprob: -8.59197998046875
    7. '.position' → logprob: -9.34197998046875
    8. '.space' → logprob: -9.34197998046875
    9. '.color' → logprob: -9.59197998046875
    10. ' new' → logprob: -10.09197998046875

Token 842: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -2.9875325708417222e-05
    2. '_' → logprob: -10.750029563903809
    3. '_code' → logprob: -12.750029563903809
    4. ' _' → logprob: -13.375029563903809
    5. '_position' → logprob: -13.875029563903809
    6. '```' → logprob: -14.250029563903809
    7. 'color' → logprob: -14.875029563903809
    8. 'Color' → logprob: -14.875029563903809
    9. '_colour' → logprob: -15.250029563903809
    10. '_name' → logprob: -15.875029563903809

Token 843: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011237505823373795
    2. ' =' → logprob: -4.886237621307373
    3. '<|end|>' → logprob: -5.636237621307373
    4. ')' → logprob: -10.011237144470215
    5. '_' → logprob: -12.261237144470215
    6. '<|end|>' → logprob: -12.761237144470215
    7. '   ' → logprob: -13.261237144470215
    8. ',' → logprob: -13.886237144470215
    9. '```' → logprob: -14.386237144470215
    10. '=
' → logprob: -14.511237144470215

Token 844: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00861468818038702
    2. ' new' → logprob: -4.758614540100098
    3. 'color' → logprob: -16.633615493774414
    4. '(new' → logprob: -19.258615493774414
    5. '	new' → logprob: -19.758615493774414
    6. '_new' → logprob: -19.758615493774414
    7. '[new' → logprob: -20.133615493774414
    8. ')new' → logprob: -21.133615493774414
    9. '.new' → logprob: -21.383615493774414
    10. ' color' → logprob: -21.508615493774414

Token 845: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.0019606323912739754
    2. 'color' → logprob: -6.251960754394531
    3. 'Color' → logprob: -10.626960754394531
    4. '_' → logprob: -12.251960754394531
    5. '_code' → logprob: -13.251960754394531
    6. ' color' → logprob: -14.626960754394531
    7. '_COLOR' → logprob: -15.251960754394531
    8. 'olor' → logprob: -16.00196075439453
    9. ')' → logprob: -16.12696075439453
    10. '_c' → logprob: -16.37696075439453

Token 846: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43808144330978394
    2. '<|end|>' → logprob: -1.0630815029144287
    3. '

' → logprob: -5.31308126449585
    4. '   ' → logprob: -5.68808126449585
    5. '<|end|>' → logprob: -7.06308126449585
    6. 'def' → logprob: -9.063081741333008
    7. '```' → logprob: -11.063081741333008
    8. ' ' → logprob: -11.938081741333008
    9. '    
' → logprob: -12.438081741333008
    10. '
' → logprob: -12.438081741333008

Token 847: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7734590768814087
    2. '
' → logprob: -1.0234590768814087
    3. '<|end|>' → logprob: -1.7734590768814087
    4. 'def' → logprob: -4.898458957672119
    5. '<|end|>' → logprob: -7.273458957672119
    6. 'class' → logprob: -7.398458957672119
    7. '```' → logprob: -7.898458957672119
    8. ' def' → logprob: -9.148459434509277
    9. ' ' → logprob: -9.523459434509277
    10. '       ' → logprob: -10.398459434509277

Token 848: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.500108141452074e-05
    2. ' def' → logprob: -10.375035285949707
    3. '   ' → logprob: -12.500035285949707
    4. '
' → logprob: -17.00003433227539
    5. '	def' → logprob: -17.87503433227539
    6. '    
' → logprob: -19.12503433227539
    7. '```' → logprob: -19.12503433227539
    8. '<|end|>' → logprob: -19.25003433227539
    9. 'class' → logprob: -20.50003433227539
    10. '        
' → logprob: -21.37503433227539

Token 849: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011921664699912071
    2. ' __' → logprob: -4.8869218826293945
    3. '_repr' → logprob: -5.7619218826293945
    4. 'def' → logprob: -7.0119218826293945
    5. 'repr' → logprob: -8.761921882629395
    6. '.__' → logprob: -9.886921882629395
    7. '___' → logprob: -10.386921882629395
    8. ' def' → logprob: -11.136921882629395
    9. '=' → logprob: -13.636921882629395
    10. '____' → logprob: -13.886921882629395

Token 850: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.023245826363563538
    2. 'eq' → logprob: -3.7732458114624023
    3. 'str' → logprob: -15.023245811462402
    4. 'init' → logprob: -18.52324676513672
    5. 'hash' → logprob: -20.39824676513672
    6. ' repr' → logprob: -20.52324676513672
    7. 'rep' → logprob: -21.64824676513672
    8. 'lt' → logprob: -22.27324676513672
    9. '_repr' → logprob: -22.39824676513672
    10. ' eq' → logprob: -24.64824676513672

Token 851: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -4.274932143744081e-05
    2. '(self' → logprob: -10.375042915344238
    3. '__(
' → logprob: -12.125042915344238
    4. '__' → logprob: -12.500042915344238
    5. '__('' → logprob: -13.125042915344238
    6. '__("' → logprob: -15.125042915344238
    7. '__((' → logprob: -16.000041961669922
    8. '__[' → logprob: -18.375041961669922
    9. '(' → logprob: -18.625041961669922
    10. '```' → logprob: -18.875041961669922

Token 852: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0014662963803857565
    2. '(self' → logprob: -6.876466274261475
    3. ' self' → logprob: -7.876466274261475
    4. ')' → logprob: -9.876466751098633
    5. '__(' → logprob: -14.501466751098633
    6. ')(' → logprob: -14.501466751098633
    7. 'Self' → logprob: -14.751466751098633
    8. 'f' → logprob: -15.126466751098633
    9. '	self' → logprob: -15.376466751098633
    10. '_self' → logprob: -15.626466751098633

Token 853: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07128552347421646
    2. '(self' → logprob: -3.1962854862213135
    3. 'self' → logprob: -4.446285724639893
    4. '__' → logprob: -4.571285724639893
    5. ')(' → logprob: -6.446285724639893
    6. ')' → logprob: -6.821285724639893
    7. '__('' → logprob: -6.821285724639893
    8. '__)' → logprob: -7.821285724639893
    9. ')(__' → logprob: -7.946285724639893
    10. '):
' → logprob: -8.071285247802734

Token 854: '       ' (ID: 309)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12498530000448227
    2. '       ' → logprob: -2.3749852180480957
    3. ' f' → logprob: -3.8749852180480957
    4. '   ' → logprob: -5.624985218048096
    5. '"' → logprob: -9.749985694885254
    6. '           ' → logprob: -10.499985694885254
    7. 'return' → logprob: -10.874985694885254
    8. 'Move' → logprob: -13.374985694885254
    9. ' return' → logprob: -13.499985694885254
    10. '     ' → logprob: -13.624985694885254

Token 855: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0010251892963424325
    2. 'return' (adapté à ' return') → logprob: -7.501025199890137
    3. ' f' → logprob: -7.751025199890137
    4. '   ' → logprob: -10.251025199890137
    5. '       ' → logprob: -12.626025199890137
    6. ' return' → logprob: -13.126025199890137
    7. '"' → logprob: -14.126025199890137
    8. ' ' → logprob: -15.501025199890137
    9. '
' → logprob: -16.62602424621582
    10. '           ' → logprob: -17.12602424621582

Token 856: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0485910028219223
    2. ' f' → logprob: -3.048590898513794
    3. '"' → logprob: -12.923590660095215
    4. ' ' → logprob: -14.548590660095215
    5. '   ' → logprob: -15.423590660095215
    6. 'F' → logprob: -15.548590660095215
    7. '	f' → logprob: -15.923590660095215
    8. ''f' → logprob: -16.04859161376953
    9. '(f' → logprob: -16.17359161376953
    10. ''' → logprob: -16.92359161376953

Token 857: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.17661502957344055
    2. 'f' → logprob: -1.9266149997711182
    3. 'Move' → logprob: -4.426615238189697
    4. ''M' → logprob: -5.801615238189697
    5. ''' → logprob: -7.426615238189697
    6. '"M' → logprob: -8.176614761352539
    7. '(f' → logprob: -9.176614761352539
    8. ' f' → logprob: -9.301614761352539
    9. '"<' → logprob: -9.551614761352539
    10. '("' → logprob: -10.176614761352539

Token 858: 'Move' (ID: 12707)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6068291664123535
    2. 'f' → logprob: -1.4818291664123535
    3. 'Move' → logprob: -1.4818291664123535
    4. ''' → logprob: -8.731828689575195
    5. ''M' → logprob: -8.981828689575195
    6. ' f' → logprob: -9.731828689575195
    7. '"{' → logprob: -10.606828689575195
    8. '"<' → logprob: -10.731828689575195
    9. 'Change' → logprob: -10.856828689575195
    10. ' Move' → logprob: -11.606828689575195

Token 859: '(pos' (ID: 24566)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.014316407963633537
    2. '(position' → logprob: -4.264316558837891
    3. '(pos' → logprob: -9.01431655883789
    4. '(' → logprob: -10.63931655883789
    5. '(Position' → logprob: -12.38931655883789
    6. '(self' → logprob: -13.26431655883789
    7. '(({' → logprob: -14.13931655883789
    8. '(p' → logprob: -14.63931655883789
    9. '(f' → logprob: -16.76431655883789
    10. '([{' → logprob: -17.13931655883789

Token 860: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.28268423676490784
    2. 'ition' → logprob: -1.4076842069625854
    3. '=self' → logprob: -7.407684326171875
    4. '=' → logprob: -7.532684326171875
    5. 'ision' → logprob: -9.657684326171875
    6. '{' → logprob: -9.657684326171875
    7. 'ITION' → logprob: -10.032684326171875
    8. 'i' → logprob: -10.157684326171875
    9. 'ession' → logprob: -10.282684326171875
    10. 'otion' → logprob: -10.657684326171875

Token 861: 'self' (ID: 1156)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.014163628220558167
    2. 'self' → logprob: -4.264163494110107
    3. ' self' → logprob: -16.264163970947266
    4. '{
' → logprob: -18.014163970947266
    5. '{x' → logprob: -19.514163970947266
    6. '{return' → logprob: -19.514163970947266
    7. '{s' → logprob: -19.639163970947266
    8. '(self' → logprob: -19.639163970947266
    9. ' {' → logprob: -19.764163970947266
    10. '       ' → logprob: -20.139163970947266

Token 862: '.position' (ID: 13130)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.10186441987752914
    2. 'self' → logprob: -2.3518643379211426
    3. ',' → logprob: -6.601864337921143
    4. ' self' → logprob: -9.3518648147583
    5. ',self' → logprob: -9.6018648147583
    6. ' {' → logprob: -10.7268648147583
    7. '.position' → logprob: -10.7268648147583
    8. '}' → logprob: -10.8518648147583
    9. 'position' → logprob: -11.2268648147583
    10. '},' → logprob: -11.6018648147583

Token 863: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6405310816480778e-05
    2. ',new' → logprob: -11.750016212463379
    3. ',color' → logprob: -12.000016212463379
    4. ',
' → logprob: -13.750016212463379
    5. ' ,' → logprob: -14.125016212463379
    6. ',",' → logprob: -15.125016212463379
    7. ',value' → logprob: -16.625017166137695
    8. ',n' → logprob: -17.500017166137695
    9. 'new' → logprob: -17.500017166137695
    10. '",' → logprob: -17.500017166137695

Token 864: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.07592803239822388
    2. 'color' → logprob: -2.950927972793579
    3. ' new' → logprob: -3.950927972793579
    4. ' color' → logprob: -6.450928211212158
    5. 'col' → logprob: -12.325927734375
    6. '"' → logprob: -13.450927734375
    7. '   ' → logprob: -14.075927734375
    8. '       ' → logprob: -14.700927734375
    9. ' ' → logprob: -14.700927734375
    10. 'clr' → logprob: -15.450927734375

Token 865: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -7.584239938296378e-06
    2. 'color' → logprob: -11.875007629394531
    3. 'Color' → logprob: -14.625007629394531
    4. '_' → logprob: -17.12500762939453
    5. '_COLOR' → logprob: -17.62500762939453
    6. '```' → logprob: -17.75000762939453
    7. ' color' → logprob: -18.62500762939453
    8. '_code' → logprob: -19.37500762939453
    9. '_Color' → logprob: -19.37500762939453
    10. '_col' → logprob: -19.50000762939453

Token 866: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.005234594456851482
    2. '=' → logprob: -5.255234718322754
    3. '{' → logprob: -14.880234718322754
    4. '="' → logprob: -16.130233764648438
    5. '=
' → logprob: -16.255233764648438
    6. '=}' → logprob: -17.130233764648438
    7. '={
' → logprob: -17.255233764648438
    8. '={{' → logprob: -17.880233764648438
    9. '={"' → logprob: -18.130233764648438
    10. '=${' → logprob: -18.130233764648438

Token 867: 'Color' (ID: 2324)
  Prédit: 'Color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -9.372294698550832e-06
    2. ' Color' → logprob: -11.875009536743164
    3. '{' → logprob: -13.125009536743164
    4. '}' → logprob: -15.375009536743164
    5. '	Color' → logprob: -16.625009536743164
    6. '}{' → logprob: -17.250009536743164
    7. 'self' → logprob: -18.625009536743164
    8. '_Color' → logprob: -18.875009536743164
    9. '<Color' → logprob: -18.875009536743164
    10. ''{' → logprob: -19.125009536743164

Token 868: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.002608237089589238
    2. '.' → logprob: -6.002608299255371
    3. 'name' → logprob: -9.627608299255371
    4. '(' → logprob: -10.627608299255371
    5. '(name' → logprob: -10.752608299255371
    6. '_name' → logprob: -11.752608299255371
    7. ')' → logprob: -12.002608299255371
    8. 'Name' → logprob: -14.002608299255371
    9. '._' → logprob: -14.002608299255371
    10. ').' → logprob: -14.127608299255371

Token 869: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006769126281142235
    2. '(' → logprob: -5.006769180297852
    3. 'self' → logprob: -10.381769180297852
    4. ' (' → logprob: -10.881769180297852
    5. '(
' → logprob: -13.006769180297852
    6. '}(' → logprob: -14.881769180297852
    7. ')(' → logprob: -14.881769180297852
    8. '(new' → logprob: -15.256769180297852
    9. '}' → logprob: -15.506769180297852
    10. '((' → logprob: -16.00676918029785

Token 870: '.new' (ID: 8564)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05682288855314255
    2. '(' → logprob: -2.9318227767944336
    3. 'self' → logprob: -6.806822776794434
    4. '(
' → logprob: -7.306822776794434
    5. ')' → logprob: -9.681822776794434
    6. ' (' → logprob: -10.556822776794434
    7. '[self' → logprob: -10.931822776794434
    8. ')(' → logprob: -11.431822776794434
    9. '(new' → logprob: -11.556822776794434
    10. ' self' → logprob: -11.681822776794434

Token 871: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.16783803701400757
    2. '.new' → logprob: -2.1678380966186523
    3. 'new' → logprob: -3.7928380966186523
    4. '.color' → logprob: -5.167838096618652
    5. 'Color' → logprob: -5.292838096618652
    6. '(new' → logprob: -6.167838096618652
    7. 'color' → logprob: -6.667838096618652
    8. 'self' → logprob: -7.417838096618652
    9. '(self' → logprob: -7.417838096618652
    10. '.position' → logprob: -7.917838096618652

Token 872: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006824108422733843
    2. '())' → logprob: -8.125682830810547
    3. ')}' → logprob: -8.375682830810547
    4. '})' → logprob: -9.250682830810547
    5. '))' → logprob: -11.125682830810547
    6. '}))' → logprob: -11.375682830810547
    7. '()' → logprob: -11.625682830810547
    8. 'self' → logprob: -11.875682830810547
    9. '(' → logprob: -12.000682830810547
    10. '(self' → logprob: -12.250682830810547

Token 873: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.4894840121269226
    2. ')' → logprob: -0.9894840121269226
    3. ')}' → logprob: -4.489483833312988
    4. '))' → logprob: -5.864483833312988
    5. ')"' → logprob: -7.114483833312988
    6. ')")' → logprob: -8.614483833312988
    7. '}")' → logprob: -9.989483833312988
    8. '}' → logprob: -10.239483833312988
    9. '())' → logprob: -10.614483833312988
    10. '()' → logprob: -10.864483833312988

Token 874: '"


' (ID: 36470)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 875: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.9146995327901095e-05
    2. '
' → logprob: -12.000019073486328
    3. 'def' → logprob: -12.000019073486328
    4. ' class' → logprob: -12.375019073486328
    5. '

' → logprob: -13.375019073486328
    6. '<class' → logprob: -15.375019073486328
    7. '```' → logprob: -15.750019073486328
    8. '"class' → logprob: -16.125019073486328
    9. '<|end|>' → logprob: -16.250019073486328
    10. 'from' → logprob: -16.250019073486328

Token 876: ' Game' (ID: 7022)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.9029964804649353
    2. 'Move' → logprob: -1.65299654006958
    3. 'Game' → logprob: -1.90299654006958
    4. 'Puzzle' → logprob: -1.90299654006958
    5. 'Solution' → logprob: -3.02799654006958
    6. 'Sequence' → logprob: -3.65299654006958
    7. 'Search' → logprob: -4.40299654006958
    8. 'Color' → logprob: -5.90299654006958
    9. 'State' → logprob: -5.90299654006958
    10. 'Board' → logprob: -6.40299654006958

Token 877: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021464545279741287
    2. ':
' → logprob: -6.877146244049072
    3. '(Game' → logprob: -8.00214672088623
    4. 'State' → logprob: -8.62714672088623
    5. '(' → logprob: -8.87714672088623
    6. '():' → logprob: -9.12714672088623
    7. '(object' → logprob: -9.12714672088623
    8. '<|end|>' → logprob: -9.37714672088623
    9. 'Gameplay' → logprob: -10.75214672088623
    10. '):' → logprob: -11.00214672088623

Token 878: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01611214317381382
    2. '(' → logprob: -4.891112327575684
    3. ':
' → logprob: -4.891112327575684
    4. '(Abstract' → logprob: -7.766112327575684
    5. '<|end|>' → logprob: -8.266112327575684
    6. '):' → logprob: -10.141112327575684
    7. '(object' → logprob: -10.141112327575684
    8. '(Game' → logprob: -10.266112327575684
    9. '():' → logprob: -10.516112327575684
    10. ':def' → logprob: -11.141112327575684

Token 879: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024608144303783774
    2. '    
' → logprob: -9.375246047973633
    3. '
' → logprob: -10.000246047973633
    4. 'def' → logprob: -10.375246047973633
    5. '<|end|>' → logprob: -10.625246047973633
    6. 'class' → logprob: -10.750246047973633
    7. ':' → logprob: -11.375246047973633
    8. ':
' → logprob: -11.750246047973633
    9. ' def' → logprob: -12.375246047973633
    10. '```' → logprob: -12.625246047973633

Token 880: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014430378563702106
    2. 'def' → logprob: -4.764430522918701
    3. ' def' → logprob: -5.639430522918701
    4. '
' → logprob: -6.389430522918701
    5. 'class' → logprob: -8.139430046081543
    6. '    
' → logprob: -8.889430046081543
    7. '```' → logprob: -9.889430046081543
    8. '"""
' (adapté à ' """
') → logprob: -10.389430046081543
    9. ' ' → logprob: -11.764430046081543
    10. '	def' → logprob: -12.014430046081543

Token 881: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01211425382643938
    2. '"""
' → logprob: -4.51211404800415
    3. 'class' → logprob: -6.88711404800415
    4. '"""' → logprob: -11.012114524841309
    5. ' """
' → logprob: -11.637114524841309
    6. 'def' → logprob: -11.762114524841309
    7. '```' → logprob: -11.887114524841309
    8. '"
' → logprob: -13.637114524841309
    9. '
' → logprob: -14.137114524841309
    10. '``' → logprob: -14.387114524841309

Token 882: ' Enc' (ID: 26858)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3490573465824127
    2. '
' → logprob: -2.34905743598938
    3. 'def' → logprob: -2.59905743598938
    4. 'class' → logprob: -2.97405743598938
    5. '"""
' → logprob: -3.47405743598938
    6. ':
' → logprob: -4.224057197570801
    7. 'Concrete' → logprob: -4.474057197570801
    8. ' def' → logprob: -5.974057197570801
    9. 'Abstract' → logprob: -6.099057197570801
    10. 'The' → logprob: -6.224057197570801

Token 883: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.013404562138020992
    2. 'lass' → logprob: -5.388404369354248
    3. 'oded' → logprob: -5.388404369354248
    4. 'odes' → logprob: -6.388404369354248
    5. 'ont' → logprob: -7.013404369354248
    6. 'ode' → logprob: -7.638404369354248
    7. 'apsulation' → logprob: -7.888404369354248
    8. 'lasses' → logprob: -8.138404846191406
    9. 'ounter' → logprob: -9.138404846191406
    10. 'l' → logprob: -9.513404846191406

Token 884: 'ulates' (ID: 52494)
  Prédit: 'ulates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulates' → logprob: -0.004728211089968681
    2. 'ulating' → logprob: -5.629728317260742
    3. 'class' → logprob: -7.129728317260742
    4. 'ates' → logprob: -8.879728317260742
    5. '
' → logprob: -10.504728317260742
    6. 'lates' → logprob: -10.879728317260742
    7. 'ules' → logprob: -10.879728317260742
    8. 'ulate' → logprob: -10.879728317260742
    9. '   ' → logprob: -11.129728317260742
    10. 'u' → logprob: -11.129728317260742

Token 885: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5649235844612122
    2. ' the' → logprob: -0.9399235844612122
    3. 'def' → logprob: -3.5649235248565674
    4. '   ' → logprob: -4.8149237632751465
    5. 'class' → logprob: -6.6899237632751465
    6. ' logic' → logprob: -7.3149237632751465
    7. '...' → logprob: -7.4399237632751465
    8. ' def' → logprob: -8.189923286437988
    9. 'game' → logprob: -8.314923286437988
    10. '```' → logprob: -8.689923286437988

Token 886: ' problem' (ID: 4792)
  Prédit: 'logic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'logic' → logprob: -1.3608067035675049
    2. 'def' → logprob: -1.4858067035675049
    3. 'code' → logprob: -1.9858067035675049
    4. 'game' → logprob: -2.110806703567505
    5. 'search' → logprob: -2.610806703567505
    6. 'state' → logprob: -3.110806703567505
    7. 'problem' → logprob: -3.485806703567505
    8. 'strategy' → logprob: -3.610806703567505
    9. 'current' → logprob: -3.985806703567505
    10. 'sequence' → logprob: -4.610806465148926

Token 887: '-solving' (ID: 122400)
  Prédit: '-solving'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-solving' → logprob: -0.0389367900788784
    2. '<|end|>' → logprob: -4.163936614990234
    3. ' solving' → logprob: -5.538936614990234
    4. '   ' → logprob: -5.538936614990234
    5. 'context' → logprob: -5.663936614990234
    6. ' logic' → logprob: -6.413936614990234
    7. '<|end|>' → logprob: -6.413936614990234
    8. 'class' → logprob: -6.788936614990234
    9. ' context' → logprob: -7.038936614990234
    10. ' solution' → logprob: -7.288936614990234

Token 888: ' logic' (ID: 18485)
  Prédit: ' logic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' logic' → logprob: -0.02539650723338127
    2. ' process' → logprob: -4.150396347045898
    3. 'class' → logprob: -6.025396347045898
    4. 'process' → logprob: -6.150396347045898
    5. ' approach' → logprob: -6.275396347045898
    6. 'logic' → logprob: -6.650396347045898
    7. ' strategy' → logprob: -7.650396347045898
    8. ' functionality' → logprob: -8.150396347045898
    9. 'strategy' → logprob: -8.775396347045898
    10. 'appro' → logprob: -8.900396347045898

Token 889: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2124738097190857
    2. '<|end|>' → logprob: -2.4624738693237305
    3. ' for' → logprob: -3.4624738693237305
    4. ':' → logprob: -3.4624738693237305
    5. '<|end|>' → logprob: -4.4624738693237305
    6. ':
' → logprob: -4.5874738693237305
    7. '
' → logprob: -4.9624738693237305
    8. ',' → logprob: -5.4624738693237305
    9. '.' → logprob: -5.8374738693237305
    10. ' with' → logprob: -6.3374738693237305

Token 890: ' possible' (ID: 4149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37952086329460144
    2. 'the' → logprob: -2.129520893096924
    3. 'methods' → logprob: -2.379520893096924
    4. 'a' → logprob: -3.379520893096924
    5. 'max' → logprob: -4.379520893096924
    6. 'initial' → logprob: -4.754520893096924
    7. '__' → logprob: -4.754520893096924
    8. 'moves' → logprob: -5.129520893096924
    9. 'sequence' → logprob: -5.254520893096924
    10. 'depth' → logprob: -5.379520893096924

Token 891: ' extens' (ID: 34241)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5571265816688538
    2. 'moves' → logprob: -2.057126522064209
    3. ' def' → logprob: -2.307126522064209
    4. ' methods' → logprob: -2.432126522064209
    5. 'methods' → logprob: -3.182126522064209
    6. ' moves' → logprob: -3.807126522064209
    7. ' strategies' → logprob: -4.682126522064209
    8. 'the' → logprob: -4.807126522064209
    9. ' the' → logprob: -4.932126522064209
    10. 'max' → logprob: -5.307126522064209

Token 892: 'ibility' (ID: 4295)
  Prédit: 'ions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.027824079617857933
    2. 'ion' → logprob: -3.6528241634368896
    3. 'ed' → logprob: -7.0278239250183105
    4. 'ensions' → logprob: -8.027824401855469
    5. 'e' → logprob: -9.402824401855469
    6. 'ended' → logprob: -9.527824401855469
    7. 'eded' → logprob: -10.277824401855469
    8. '   ' → logprob: -10.652824401855469
    9. '```' → logprob: -11.277824401855469
    10. 'ends' → logprob: -11.402824401855469

Token 893: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.168082132935524
    2. ':
' → logprob: -2.5430822372436523
    3. '.' → logprob: -3.4180822372436523
    4. '   ' → logprob: -4.168082237243652
    5. '
' → logprob: -4.918082237243652
    6. ' for' → logprob: -5.293082237243652
    7. ',' → logprob: -5.543082237243652
    8. '<|end|>' → logprob: -5.793082237243652
    9. '<|end|>' → logprob: -6.418082237243652
    10. '.
' → logprob: -6.543082237243652

Token 894: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003644376527518034
    2. '   ' → logprob: -6.1286444664001465
    3. '

' → logprob: -7.1286444664001465
    4. '```' → logprob: -8.003643989562988
    5. '<|end|>' → logprob: -8.878643989562988
    6. '    
' → logprob: -9.128643989562988
    7. 'class' → logprob: -10.503643989562988
    8. '<|end|>' → logprob: -11.003643989562988
    9. '
' → logprob: -11.628643989562988
    10. 'def' → logprob: -12.128643989562988

Token 895: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0035074150655418634
    2. '   ' → logprob: -6.878507614135742
    3. '

' → logprob: -6.878507614135742
    4. '```' → logprob: -6.878507614135742
    5. '<|end|>' → logprob: -8.128507614135742
    6. '    
' → logprob: -9.878507614135742
    7. 'class' → logprob: -10.753507614135742
    8. '<|end|>' → logprob: -11.253507614135742
    9. '``' → logprob: -11.378507614135742
    10. '
' → logprob: -11.753507614135742

Token 896: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05553780496120453
    2. 'def' → logprob: -2.930537700653076
    3. ' def' → logprob: -7.680537700653076
    4. '    
' → logprob: -9.055538177490234
    5. '
' → logprob: -10.430538177490234
    6. 'class' → logprob: -10.805538177490234
    7. '```' → logprob: -10.930538177490234
    8. '   ' → logprob: -13.305538177490234
    9. 'from' → logprob: -13.430538177490234
    10. '__' → logprob: -13.680538177490234

Token 897: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.1928003813372925e-05
    2. ' def' → logprob: -10.000051498413086
    3. '   ' → logprob: -12.000051498413086
    4. 'class' → logprob: -15.625051498413086
    5. '_def' → logprob: -16.625051498413086
    6. 'DEFAULT' → logprob: -17.625051498413086
    7. '__' → logprob: -17.625051498413086
    8. '
' → logprob: -17.750051498413086
    9. 'MAX' → logprob: -17.875051498413086
    10. '	def' → logprob: -18.000051498413086

Token 898: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.030895430594682693
    2. 'def' → logprob: -4.530895233154297
    3. 'init' → logprob: -4.655895233154297
    4. ' __' → logprob: -4.780895233154297
    5. ' def' → logprob: -7.155895233154297
    6. '_init' → logprob: -7.155895233154297
    7. '___' → logprob: -9.780895233154297
    8. '```' → logprob: -10.405895233154297
    9. '...' → logprob: -10.655895233154297
    10. '**' → logprob: -10.655895233154297

Token 899: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -19.0
    3. '(init' → logprob: -21.75
    4. '_init' → logprob: -21.875
    5. '```' → logprob: -22.25
    6. '
' → logprob: -22.625
    7. '	init' → logprob: -23.125
    8. '...' → logprob: -23.25
    9. 'initi' → logprob: -23.375
    10. 'int' → logprob: -23.375

Token 900: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5767901539802551
    2. '(self' → logprob: -0.8267901539802551
    3. '__(
' → logprob: -7.9517903327941895
    4. 'self' → logprob: -8.451789855957031
    5. '   ' → logprob: -9.076789855957031
    6. '__' → logprob: -9.451789855957031
    7. '
' → logprob: -10.451789855957031
    8. '(' → logprob: -10.451789855957031
    9. '_(' → logprob: -11.576789855957031
    10. 'def' → logprob: -12.076789855957031

Token 901: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.153795766294934e-06
    2. '       ' → logprob: -12.875005722045898
    3. ' self' → logprob: -13.250005722045898
    4. '   ' → logprob: -14.375005722045898
    5. '
' → logprob: -14.625005722045898
    6. ')' → logprob: -15.125005722045898
    7. 'sequence' → logprob: -15.375005722045898
    8. '(self' → logprob: -16.6250057220459
    9. ',' → logprob: -16.7500057220459
    10. '0' → logprob: -16.7500057220459

Token 902: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011206261813640594
    2. 'self' → logprob: -4.511206150054932
    3. '   ' → logprob: -9.01120662689209
    4. '       ' → logprob: -11.88620662689209
    5. '(self' → logprob: -11.88620662689209
    6. '
' → logprob: -12.01120662689209
    7. ',
' → logprob: -12.01120662689209
    8. '__,' → logprob: -12.38620662689209
    9. '_,' → logprob: -13.76120662689209
    10. ' ,' → logprob: -13.76120662689209

Token 903: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.11354490369558334
    2. 'initial' → logprob: -2.2385449409484863
    3. 'self' → logprob: -8.113544464111328
    4. ' sequence' → logprob: -8.363544464111328
    5. ' initial' → logprob: -9.738544464111328
    6. 'original' → logprob: -9.863544464111328
    7. 'starting' → logprob: -10.113544464111328
    8. 'start' → logprob: -10.988544464111328
    9. '   ' → logprob: -11.613544464111328
    10. 'strategy' → logprob: -12.988544464111328

Token 904: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004125575942452997
    2. ',' → logprob: -7.875412464141846
    3. '):
' → logprob: -11.500412940979004
    4. '):' → logprob: -11.500412940979004
    5. '_:' → logprob: -11.750412940979004
    6. '   ' → logprob: -13.375412940979004
    7. ')' → logprob: -13.875412940979004
    8. '       ' → logprob: -14.375412940979004
    9. ' :' → logprob: -14.500412940979004
    10. '```' → logprob: -14.750412940979004

Token 905: ' Character' (ID: 27668)
  Prédit: 'Character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: -0.578449010848999
    2. 'Linear' → logprob: -0.828449010848999
    3. ' Linear' → logprob: -6.453449249267578
    4. ' Character' → logprob: -7.078449249267578
    5. ')' → logprob: -10.328449249267578
    6. 'List' → logprob: -10.953449249267578
    7. 'Sequence' → logprob: -11.078449249267578
    8. '   ' → logprob: -11.453449249267578
    9. 'Color' → logprob: -13.203449249267578
    10. ' ' → logprob: -13.578449249267578

Token 906: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -9.088346359931165e-07
    2. '_sequence' → logprob: -14.250000953674316
    3. 'sequence' → logprob: -16.25
    4. '.Sequence' → logprob: -16.625
    5. ')' → logprob: -17.375
    6. ' sequence' → logprob: -17.5
    7. ' Sequence' → logprob: -17.625
    8. '   ' → logprob: -18.125
    9. '[' → logprob: -18.625
    10. '_SEQUENCE' → logprob: -18.625

Token 907: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043233491480350494
    2. '):
' → logprob: -3.4182333946228027
    3. '):' → logprob: -4.668233394622803
    4. ')' → logprob: -9.918233871459961
    5. '   ' → logprob: -10.043233871459961
    6. '       ' → logprob: -10.668233871459961
    7. ' ,' → logprob: -10.918233871459961
    8. '):
' → logprob: -11.418233871459961
    9. ',
' → logprob: -12.668233871459961
    10. ':' → logprob: -13.293233871459961

Token 908: ' elimination' (ID: 77324)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.10907389223575592
    2. 'strategy' → logprob: -2.4840738773345947
    3. ' elimination' → logprob: -4.109074115753174
    4. ' strategy' → logprob: -5.734074115753174
    5. 'elim' → logprob: -9.234073638916016
    6. 'chain' → logprob: -9.734073638916016
    7. 'max' → logprob: -10.109073638916016
    8. ' el' → logprob: -10.984073638916016
    9. 'strateg' → logprob: -11.234073638916016
    10. '   ' → logprob: -11.609073638916016

Token 909: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -5.228561349213123e-05
    2. 'strategy' → logprob: -10.125052452087402
    3. 'Strategy' → logprob: -11.375052452087402
    4. '_str' → logprob: -14.875052452087402
    5. ' strategy' → logprob: -16.500051498413086
    6. 'strateg' → logprob: -16.875051498413086
    7. 's' → logprob: -17.000051498413086
    8. '_method' → logprob: -17.250051498413086
    9. '_rule' → logprob: -17.750051498413086
    10. '_threshold' → logprob: -17.875051498413086

Token 910: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006160548073239625
    2. '):
' → logprob: -7.875616073608398
    3. '):' → logprob: -8.375616073608398
    4. ')' → logprob: -13.000616073608398
    5. ' :' → logprob: -13.000616073608398
    6. ',' → logprob: -15.000616073608398
    7. '_:' → logprob: -15.750616073608398
    8. '=' → logprob: -16.1256160736084
    9. '):

' → logprob: -16.7506160736084
    10. ' ):' → logprob: -16.7506160736084

Token 911: ' El' (ID: 3241)
  Prédit: 'El'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'El' → logprob: -0.001202254556119442
    2. ' El' → logprob: -7.25120210647583
    3. 'Chain' → logprob: -7.62620210647583
    4. ' Chain' → logprob: -12.501202583312988
    5. ' ' → logprob: -15.126202583312988
    6. ' chain' → logprob: -15.751202583312988
    7. '   ' → logprob: -15.876202583312988
    8. 'Ch' → logprob: -16.376201629638672
    9. ')' → logprob: -16.501201629638672
    10. '
' → logprob: -16.876201629638672

Token 912: 'imination' (ID: 34362)
  Prédit: 'imination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imination' → logprob: -2.2723104848410003e-05
    2. 'im' → logprob: -11.000022888183594
    3. 'imation' → logprob: -12.250022888183594
    4. 'imini' → logprob: -14.875022888183594
    5. 'imin' → logprob: -15.250022888183594
    6. 'imi' → logprob: -16.125022888183594
    7. 'em' → logprob: -16.500022888183594
    8. 'min' → logprob: -16.875022888183594
    9. ' elimination' → logprob: -16.875022888183594
    10. 'imina' → logprob: -17.000022888183594

Token 913: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -1.664371848164592e-05
    2. '_strategy' → logprob: -12.125016212463379
    3. '):
' → logprob: -12.500016212463379
    4. ')' → logprob: -12.750016212463379
    5. 'strategy' → logprob: -13.500016212463379
    6. '):' → logprob: -13.750016212463379
    7. ' Strategy' → logprob: -14.375016212463379
    8. ',' → logprob: -15.125016212463379
    9. 'Strateg' → logprob: -15.875016212463379
    10. ':' → logprob: -16.000017166137695

Token 914: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.024175427854061127
    2. '):' → logprob: -3.7741754055023193
    3. ',' → logprob: -7.649175643920898
    4. ')' → logprob: -7.899175643920898
    5. '   ' → logprob: -9.774175643920898
    6. '):
' → logprob: -10.774175643920898
    7. ' ):
' → logprob: -13.524175643920898
    8. '):

' → logprob: -13.774175643920898
    9. ':' → logprob: -14.649175643920898
    10. '       ' → logprob: -15.024175643920898

Token 915: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07617869973182678
    2. 'self' → logprob: -2.701178789138794
    3. '   ' → logprob: -5.326178550720215
    4. ' self' → logprob: -6.826178550720215
    5. 'def' → logprob: -8.576178550720215
    6. ',' → logprob: -10.576178550720215
    7. '
' → logprob: -10.701178550720215
    8. '```' → logprob: -11.826178550720215
    9. ')' → logprob: -12.076178550720215
    10. '):
' → logprob: -12.201178550720215

Token 916: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03283575549721718
    2. '       ' → logprob: -3.5328357219696045
    3. ' self' → logprob: -5.782835960388184
    4. '	self' → logprob: -15.157835960388184
    5. '   ' → logprob: -15.532835960388184
    6. '(self' → logprob: -16.407835006713867
    7. '```' → logprob: -16.907835006713867
    8. ' ' → logprob: -17.407835006713867
    9. '﻿' → logprob: -18.532835006713867
    10. '[self' → logprob: -18.907835006713867

Token 917: '.sequence' (ID: 97641)
  Prédit: '.sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sequence' → logprob: -0.31452691555023193
    2. '._' → logprob: -1.314526915550232
    3. 'sequence' → logprob: -6.9395270347595215
    4. '_sequence' → logprob: -8.189526557922363
    5. '   ' → logprob: -11.064526557922363
    6. ' sequence' → logprob: -13.814526557922363
    7. '(sequence' → logprob: -15.189526557922363
    8. 'Sequence' → logprob: -15.564526557922363
    9. '.initial' → logprob: -15.689526557922363
    10. '.original' → logprob: -15.939526557922363

Token 918: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3149566352367401
    2. '=' → logprob: -1.3149566650390625
    3. ':' → logprob: -6.5649566650390625
    4. '   ' → logprob: -8.189956665039062
    5. '       ' → logprob: -12.939956665039062
    6. ' ' → logprob: -14.064956665039062
    7. ' :' → logprob: -14.189956665039062
    8. ',' → logprob: -14.189956665039062
    9. '_sequence' → logprob: -14.689956665039062
    10. '    ' → logprob: -14.814956665039062

Token 919: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.000553151941858232
    2. ' sequence' → logprob: -7.500553131103516
    3. '       ' → logprob: -16.000553131103516
    4. '   ' → logprob: -17.250553131103516
    5. '(sequence' → logprob: -17.875553131103516
    6. 'sequ' → logprob: -20.125553131103516
    7. '     ' → logprob: -20.250553131103516
    8. '
' → logprob: -20.500553131103516
    9. '.sequence' → logprob: -20.625553131103516
    10. '    ' → logprob: -21.500553131103516

Token 920: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000603668624535203
    2. '
' → logprob: -7.625603675842285
    3. '<|end|>' → logprob: -9.500603675842285
    4. '   ' → logprob: -10.875603675842285
    5. 'self' → logprob: -11.250603675842285
    6. ',' → logprob: -12.250603675842285
    7. ' self' → logprob: -13.375603675842285
    8. ',
' → logprob: -14.000603675842285
    9. '<|end|>' → logprob: -14.875603675842285
    10. '           ' → logprob: -15.375603675842285

Token 921: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.47495681833243e-05
    2. 'self' → logprob: -10.875024795532227
    3. ' self' → logprob: -13.125024795532227
    4. '
' → logprob: -13.625024795532227
    5. '   ' → logprob: -13.750024795532227
    6. '<|end|>' → logprob: -14.250024795532227
    7. ',' → logprob: -14.375024795532227
    8. '```' → logprob: -15.875024795532227
    9. '(self' → logprob: -16.875024795532227
    10. '           ' → logprob: -17.375024795532227

Token 922: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003751506097614765
    2. ' self' → logprob: -5.753751277923584
    3. '       ' → logprob: -7.503751277923584
    4. '
' → logprob: -10.878751754760742
    5. '   ' → logprob: -12.878751754760742
    6. '        
' → logprob: -15.503751754760742
    7. '	self' → logprob: -15.878751754760742
    8. 'el' → logprob: -16.378751754760742
    9. 'import' → logprob: -16.378751754760742
    10. '(self' → logprob: -16.378751754760742

Token 923: '.el' (ID: 28187)
  Prédit: '.el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.el' → logprob: -0.008147019892930984
    2. 'el' → logprob: -4.883147239685059
    3. '.' → logprob: -8.383147239685059
    4. '.strategy' → logprob: -9.633147239685059
    5. ' .' → logprob: -9.758147239685059
    6. 'strategy' → logprob: -10.508147239685059
    7. ' elimination' → logprob: -10.633147239685059
    8. '.e' → logprob: -10.758147239685059
    9. '_el' → logprob: -11.008147239685059
    10. '._' → logprob: -11.008147239685059

Token 924: 'imination' (ID: 34362)
  Prédit: 'imination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imination' → logprob: -0.0004983438993804157
    2. 'imation' → logprob: -8.12549877166748
    3. 'im' → logprob: -8.62549877166748
    4. 'em' → logprob: -11.87549877166748
    5. 'ination' → logprob: -13.00049877166748
    6. 'min' → logprob: -13.00049877166748
    7. 'imini' → logprob: -13.62549877166748
    8. 'imi' → logprob: -13.62549877166748
    9. 'ev' → logprob: -13.87549877166748
    10. 'imin' → logprob: -14.00049877166748

Token 925: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -6.704273118884885e-07
    2. 'strategy' → logprob: -14.250000953674316
    3. '_str' → logprob: -18.75
    4. '_' → logprob: -18.875
    5. 'Strategy' → logprob: -19.625
    6. ' strategy' → logprob: -20.25
    7. '_method' → logprob: -20.625
    8. '=' → logprob: -20.875
    9. 'strateg' → logprob: -21.125
    10. '_sequence' → logprob: -21.5

Token 926: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25198349356651306
    2. ' =' → logprob: -1.5019835233688354
    3. ':' → logprob: -10.251983642578125
    4. '   ' → logprob: -11.251983642578125
    5. '<|end|>' → logprob: -13.376983642578125
    6. ' ' → logprob: -13.876983642578125
    7. '=self' → logprob: -14.376983642578125
    8. '    ' → logprob: -14.626983642578125
    9. ')' → logprob: -14.751983642578125
    10. ',' → logprob: -15.126983642578125

Token 927: ' elimination' (ID: 77324)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.005242533516138792
    2. ' elimination' → logprob: -5.255242347717285
    3. 'elim' → logprob: -11.880242347717285
    4. ' el' → logprob: -14.005242347717285
    5. '	el' → logprob: -15.505242347717285
    6. 'El' → logprob: -15.880242347717285
    7. '_el' → logprob: -16.0052433013916
    8. '   ' → logprob: -16.0052433013916
    9. '(el' → logprob: -16.1302433013916
    10. 'elit' → logprob: -16.7552433013916

Token 928: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -1.6166903151315637e-05
    2. 'strategy' → logprob: -11.125016212463379
    3. 'Strategy' → logprob: -13.500016212463379
    4. 'strateg' → logprob: -17.875015258789062
    5. ' strategy' → logprob: -18.250015258789062
    6. '
' → logprob: -19.375015258789062
    7. '   ' → logprob: -19.625015258789062
    8. '_' → logprob: -19.750015258789062
    9. '_str' → logprob: -19.875015258789062
    10. 'strategie' → logprob: -20.500015258789062

Token 929: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7050188183784485
    2. '<|end|>' → logprob: -0.7050188183784485
    3. '   ' → logprob: -4.955018997192383
    4. '<|end|>' → logprob: -5.580018997192383
    5. '

' → logprob: -7.705018997192383
    6. ',' → logprob: -8.830018997192383
    7. '    
' → logprob: -8.830018997192383
    8. 'def' → logprob: -10.205018997192383
    9. '       ' → logprob: -10.455018997192383
    10. '```' → logprob: -10.455018997192383

Token 930: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11826968193054199
    2. '
' → logprob: -2.993269681930542
    3. '<|end|>' → logprob: -3.118269681930542
    4. 'def' → logprob: -4.243269920349121
    5. ' def' → logprob: -6.618269920349121
    6. '<|end|>' → logprob: -7.493269920349121
    7. '```' → logprob: -7.618269920349121
    8. '    
' → logprob: -8.618269920349121
    9. '       ' → logprob: -8.993269920349121
    10. '

' → logprob: -10.868269920349121

Token 931: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05750683695077896
    2. 'self' (adapté à ' self') → logprob: -3.432506799697876
    3. '   ' → logprob: -3.932506799697876
    4. ' def' → logprob: -6.432507038116455
    5. '       ' → logprob: -6.932507038116455
    6. '<|end|>' → logprob: -7.557507038116455
    7. ' self' → logprob: -7.682507038116455
    8. '
' → logprob: -7.932507038116455
    9. '```' → logprob: -11.057506561279297
    10. 'pass' → logprob: -11.557506561279297

Token 932: '.n' (ID: 1835)
  Prédit: '.best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.best' → logprob: -0.10208520293235779
    2. '.max' → logprob: -3.3520851135253906
    3. '._' → logprob: -3.6020851135253906
    4. '.moves' → logprob: -4.102085113525391
    5. '.initial' → logprob: -5.477085113525391
    6. '.history' → logprob: -5.977085113525391
    7. '.min' → logprob: -6.102085113525391
    8. '.vis' → logprob: -6.477085113525391
    9. 'best' → logprob: -6.602085113525391
    10. '.current' → logprob: -6.727085113525391

Token 933: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14312537014484406
    2. '=' → logprob: -2.393125295639038
    3. '   ' → logprob: -3.268125295639038
    4. '       ' → logprob: -5.643125534057617
    5. 'um' → logprob: -8.893125534057617
    6. '=self' → logprob: -9.393125534057617
    7. '    ' → logprob: -10.518125534057617
    8. '      ' → logprob: -10.643125534057617
    9. '_moves' → logprob: -11.018125534057617
    10. '     ' → logprob: -11.268125534057617

Token 934: ' sequence' (ID: 16281)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5783329010009766
    2. 'sequence' → logprob: -0.8283329010009766
    3. ' sequence' → logprob: -6.703332901000977
    4. ' self' → logprob: -6.953332901000977
    5. 'len' → logprob: -8.578332901000977
    6. '   ' → logprob: -11.328332901000977
    7. '       ' → logprob: -12.203332901000977
    8. ' len' → logprob: -13.953332901000977
    9. 'length' → logprob: -14.078332901000977
    10. '(sequence' → logprob: -15.203332901000977

Token 935: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.023345986381173134
    2. '().' → logprob: -3.773345947265625
    3. 'length' → logprob: -9.398345947265625
    4. '.' → logprob: -11.648345947265625
    5. '()' → logprob: -12.398345947265625
    6. '(length' → logprob: -13.648345947265625
    7. '.l' → logprob: -13.773345947265625
    8. '   ' → logprob: -14.648345947265625
    9. ' .' → logprob: -14.773345947265625
    10. '.LENGTH' → logprob: -14.773345947265625

Token 936: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 937: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13532069325447083
    2. '
' → logprob: -2.1353206634521484
    3. '```' → logprob: -5.010320663452148
    4. 'def' → logprob: -7.135320663452148
    5. '<|end|>' → logprob: -7.760320663452148
    6. '    
' → logprob: -8.010320663452148
    7. ' def' → logprob: -9.885320663452148
    8. '

' → logprob: -10.510320663452148
    9. '<|end|>' → logprob: -11.010320663452148
    10. '``' → logprob: -11.885320663452148

Token 938: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009507640497758985
    2. ' def' → logprob: -7.250950813293457
    3. '   ' → logprob: -8.375950813293457
    4. '
' → logprob: -11.500950813293457
    5. '```' → logprob: -16.25094985961914
    6. '	def' → logprob: -16.37594985961914
    7. 'from' → logprob: -17.25094985961914
    8. '    
' → logprob: -17.50094985961914
    9. 'import' → logprob: -18.37594985961914
    10. 'class' → logprob: -18.75094985961914

Token 939: ' minimal' (ID: 19957)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.3559599816799164
    2. 'find' → logprob: -1.8559600114822388
    3. 'can' → logprob: -3.730959892272949
    4. 'possible' → logprob: -3.730959892272949
    5. ' solve' → logprob: -4.230959892272949
    6. ' find' → logprob: -4.230959892272949
    7. 'minimal' → logprob: -4.230959892272949
    8. 'min' → logprob: -4.230959892272949
    9. ' minimal' → logprob: -4.355959892272949
    10. 'best' → logprob: -4.605959892272949

Token 940: '_remaining' (ID: 102167)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.0002868417650461197
    2. '_changes' → logprob: -8.875287055969238
    3. 'moves' → logprob: -9.125287055969238
    4. '_steps' → logprob: -10.375287055969238
    5. '_move' → logprob: -12.375287055969238
    6. 'Moves' → logprob: -13.750287055969238
    7. ' moves' → logprob: -15.250287055969238
    8. '_number' → logprob: -15.250287055969238
    9. '_' → logprob: -15.875287055969238
    10. '_mov' → logprob: -16.000286102294922

Token 941: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08301879465579987
    2. '_moves' → logprob: -2.5830187797546387
    3. '_tokens' → logprob: -7.083018779754639
    4. '_char' → logprob: -7.458018779754639
    5. 'self' → logprob: -7.458018779754639
    6. '_chars' → logprob: -7.583018779754639
    7. '_length' → logprob: -7.708018779754639
    8. '_count' → logprob: -8.083019256591797
    9. '_self' → logprob: -8.708019256591797
    10. '(' → logprob: -9.083019256591797

Token 942: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012976066500414163
    2. 'self' → logprob: -9.250129699707031
    3. ')' → logprob: -11.250129699707031
    4. '(' → logprob: -11.625129699707031
    5. '   ' → logprob: -12.125129699707031
    6. ' (' → logprob: -13.625129699707031
    7. '       ' → logprob: -14.000129699707031
    8. '()' → logprob: -14.000129699707031
    9. '_count' → logprob: -14.375129699707031
    10. '_(' → logprob: -15.000129699707031

Token 943: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000169332604855299
    2. '(' → logprob: -9.25016975402832
    3. '       ' → logprob: -10.12516975402832
    4. 'self' → logprob: -11.12516975402832
    5. '   ' → logprob: -11.25016975402832
    6. '(
' → logprob: -12.75016975402832
    7. ' (' → logprob: -13.37516975402832
    8. 'def' → logprob: -14.25016975402832
    9. ' self' → logprob: -15.87516975402832
    10. '
' → logprob: -17.25016975402832

Token 944: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0059433747082948685
    2. ' int' → logprob: -5.130943298339844
    3. '   ' → logprob: -12.255943298339844
    4. '(int' → logprob: -12.255943298339844
    5. 'Tuple' → logprob: -13.005943298339844
    6. 'Optional' → logprob: -13.630943298339844
    7. '[int' → logprob: -14.130943298339844
    8. 'List' → logprob: -15.130943298339844
    9. 'Character' → logprob: -15.255943298339844
    10. '	int' → logprob: -15.255943298339844

Token 945: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3963319659233093
    2. ':
' → logprob: -1.646332025527954
    3. '       ' → logprob: -2.021332025527954
    4. '   ' → logprob: -6.396331787109375
    5. '(self' → logprob: -9.021331787109375
    6. '):
' → logprob: -9.771331787109375
    7. 'def' → logprob: -10.396331787109375
    8. ',' → logprob: -10.771331787109375
    9. 'self' → logprob: -11.021331787109375
    10. '():
' → logprob: -11.521331787109375

Token 946: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.3458322731312364e-06
    2. '```' → logprob: -12.500007629394531
    3. 'current' → logprob: -13.250007629394531
    4. '   ' → logprob: -14.250007629394531
    5. ' current' → logprob: -15.125007629394531
    6. '#' → logprob: -15.125007629394531
    7. 'result' → logprob: -15.375007629394531
    8. '
' → logprob: -16.50000762939453
    9. '      ' → logprob: -16.75000762939453
    10. '        
' → logprob: -16.87500762939453

Token 947: ' """
' (ID: 7037)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.17248675227165222
    2. 'visited' → logprob: -2.4224867820739746
    3. '       ' → logprob: -3.1724867820739746
    4. 'best' → logprob: -4.172486782073975
    5. 'def' → logprob: -4.672486782073975
    6. 'import' → logprob: -5.922486782073975
    7. 'self' → logprob: -9.547486305236816
    8. 'initial' → logprob: -9.547486305236816
    9. '#' → logprob: -9.672486305236816
    10. 'min' → logprob: -9.797486305236816

Token 948: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3426506817340851
    2. 'visited' → logprob: -1.3426506519317627
    3. 'from' → logprob: -3.7176506519317627
    4. 'seen' → logprob: -6.467650890350342
    5. 'best' → logprob: -6.717650890350342
    6. 'def' → logprob: -7.342650890350342
    7. 'self' → logprob: -7.717650890350342
    8. 'max' → logprob: -8.342650413513184
    9. '#' → logprob: -9.092650413513184
    10. 'sequence' → logprob: -9.092650413513184

Token 949: ' Try' (ID: 14720)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.388692706823349
    2. 'from' → logprob: -1.8886927366256714
    3. 'def' → logprob: -2.013692617416382
    4. '"""
' → logprob: -4.013692855834961
    5. '#' → logprob: -4.388692855834961
    6. 'initial' → logprob: -6.138692855834961
    7. 'best' → logprob: -6.263692855834961
    8. '       ' → logprob: -7.013692855834961
    9. '"""' → logprob: -7.763692855834961
    10. 'seen' → logprob: -7.888692855834961

Token 950: ' all' (ID: 722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.540649950504303
    2. 'all' → logprob: -2.165649890899658
    3. ':
' → logprob: -2.290649890899658
    4. ':' → logprob: -2.540649890899658
    5. '       ' → logprob: -2.540649890899658
    6. ' all' → logprob: -3.415649890899658
    7. 'def' → logprob: -5.665649890899658
    8. 'to' → logprob: -5.790649890899658
    9. ' to' → logprob: -6.415649890899658
    10. 'ing' → logprob: -7.415649890899658

Token 951: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.4892202317714691
    2. ' possible' → logprob: -1.8642202615737915
    3. '       ' → logprob: -1.9892202615737915
    4. 'moves' → logprob: -2.739220142364502
    5. ' moves' → logprob: -4.739220142364502
    6. '   ' → logprob: -4.739220142364502
    7. 'positions' → logprob: -5.739220142364502
    8. 'poss' → logprob: -5.989220142364502
    9. 'from' → logprob: -6.114220142364502
    10. ' possibilities' → logprob: -6.239220142364502

Token 952: ' single' (ID: 4590)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.25633910298347473
    2. ' moves' → logprob: -1.6313390731811523
    3. ' sequences' → logprob: -4.881339073181152
    4. 'self' → logprob: -5.131339073181152
    5. 'single' → logprob: -5.256339073181152
    6. 'positions' → logprob: -5.381339073181152
    7. ' single' → logprob: -6.131339073181152
    8. 'se' → logprob: -6.881339073181152
    9. 'changes' → logprob: -7.756339073181152
    10. '   ' → logprob: -7.756339073181152

Token 953: '-character' (ID: 190344)
  Prédit: ' moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.12550361454486847
    2. 'moves' → logprob: -2.2505035400390625
    3. ' changes' → logprob: -5.6255035400390625
    4. '   ' → logprob: -5.6255035400390625
    5. 'changes' → logprob: -6.2505035400390625
    6. 'character' → logprob: -6.6255035400390625
    7. '-character' → logprob: -7.8755035400390625
    8. 'move' → logprob: -7.8755035400390625
    9. '_moves' → logprob: -8.000503540039062
    10. ' character' → logprob: -8.250503540039062

Token 954: ' color' (ID: 3089)
  Prédit: ' moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.8235530853271484
    2. ' changes' → logprob: -1.3235530853271484
    3. 'color' → logprob: -2.1985530853271484
    4. ' color' → logprob: -2.5735530853271484
    5. 'changes' → logprob: -2.8235530853271484
    6. 'moves' → logprob: -3.6985530853271484
    7. ' replacements' → logprob: -4.323553085327148
    8. ' recol' → logprob: -5.573553085327148
    9. '   ' → logprob: -6.198553085327148
    10. ' modifications' → logprob: -6.448553085327148

Token 955: ' changes' (ID: 6629)
  Prédit: ' changes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' changes' → logprob: -0.009806736372411251
    2. 'changes' → logprob: -4.8848066329956055
    3. ' replacements' → logprob: -6.3848066329956055
    4. '   ' → logprob: -8.384806632995605
    5. ' modifications' → logprob: -9.384806632995605
    6. ' substitutions' → logprob: -9.634806632995605
    7. '_changes' → logprob: -9.759806632995605
    8. 's' → logprob: -10.634806632995605
    9. ' change' → logprob: -11.009806632995605
    10. ' replacement' → logprob: -12.259806632995605

Token 956: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014573716558516026
    2. ' and' → logprob: -5.264573574066162
    3. ',' → logprob: -5.514573574066162
    4. ' to' → logprob: -6.139573574066162
    5. '(self' → logprob: -6.764573574066162
    6. 'and' → logprob: -7.264573574066162
    7. '.' → logprob: -8.13957405090332
    8. ' that' → logprob: -8.51457405090332
    9. ' at' → logprob: -8.76457405090332
    10. '(' → logprob: -8.76457405090332

Token 957: 'not' (ID: 2878)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2698570489883423
    2. '),' → logprob: -1.5198570489883423
    3. 'excluding' → logprob: -5.769856929779053
    4. 'except' → logprob: -6.019856929779053
    5. 'and' → logprob: -6.144856929779053
    6. 'self' → logprob: -6.519856929779053
    7. ' and' → logprob: -6.894856929779053
    8. '):
' → logprob: -7.019856929779053
    9. ' )' → logprob: -7.019856929779053
    10. '   ' → logprob: -7.144856929779053

Token 958: ' to' (ID: 316)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.35665959119796753
    2. ' equal' → logprob: -1.3566596508026123
    3. 'the' → logprob: -4.356659412384033
    4. ' the' → logprob: -4.856659412384033
    5. 'matching' → logprob: -4.981659412384033
    6. 'same' → logprob: -5.481659412384033
    7. ' counting' → logprob: -5.481659412384033
    8. ' matching' → logprob: -5.731659412384033
    9. 'None' → logprob: -6.856659412384033
    10. '```' → logprob: -7.356659412384033

Token 959: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.1422172635793686
    2. ' the' → logprob: -2.3922171592712402
    3. 'self' → logprob: -3.6422171592712402
    4. 'be' → logprob: -4.76721715927124
    5. 'original' → logprob: -6.14221715927124
    6. ' be' → logprob: -6.26721715927124
    7. 'current' → logprob: -7.51721715927124
    8. 'same' → logprob: -7.64221715927124
    9. ' original' → logprob: -8.142217636108398
    10. ' self' → logprob: -8.142217636108398

Token 960: ' same' (ID: 2684)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.1718384474515915
    2. 'same' → logprob: -2.0468385219573975
    3. ' current' → logprob: -4.421838283538818
    4. 'original' → logprob: -4.421838283538818
    5. 'self' → logprob: -6.046838283538818
    6. 'color' → logprob: -7.046838283538818
    7. 'sequence' → logprob: -7.421838283538818
    8. ' same' → logprob: -7.796838283538818
    9. ' original' → logprob: -8.796838760375977
    10. 'existing' → logprob: -9.421838760375977

Token 961: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.02327284961938858
    2. ' color' → logprob: -3.773272752761841
    3. ')' → logprob: -11.273272514343262
    4. ' ' → logprob: -12.648272514343262
    5. '```' → logprob: -12.773272514343262
    6. '   ' → logprob: -13.023272514343262
    7. ' as' → logprob: -13.273272514343262
    8. 'value' → logprob: -13.648272514343262
    9. 'as' → logprob: -13.773272514343262
    10. '_color' → logprob: -14.148272514343262

Token 962: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07108458131551743
    2. '),' → logprob: -3.196084499359131
    3. ')
' → logprob: -3.821084499359131
    4. '),
' → logprob: -5.821084499359131
    5. '):
' → logprob: -6.571084499359131
    6. ').' → logprob: -7.696084499359131
    7. ' )' → logprob: -8.446084976196289
    8. '):' → logprob: -8.946084976196289
    9. ' as' → logprob: -9.071084976196289
    10. ').
' → logprob: -9.071084976196289

Token 963: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0060012019239366055
    2. ' and' → logprob: -5.256000995635986
    3. 'and' → logprob: -7.506000995635986
    4. 'result' → logprob: -10.006001472473145
    5. ' then' → logprob: -10.131001472473145
    6. ' to' → logprob: -10.506001472473145
    7. ' result' → logprob: -10.881001472473145
    8. '   ' → logprob: -11.256001472473145
    9. ' return' → logprob: -11.381001472473145
    10. 'return' → logprob: -11.381001472473145

Token 964: ' apply' (ID: 6096)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10721642524003983
    2. '#' → logprob: -3.2322163581848145
    3. 'and' → logprob: -3.2322163581848145
    4. 'result' → logprob: -4.7322163581848145
    5. 'visited' → logprob: -5.6072163581848145
    6. ' and' → logprob: -5.8572163581848145
    7. '"""
' → logprob: -5.8572163581848145
    8. 'to' → logprob: -6.6072163581848145
    9. '"""' → logprob: -7.2322163581848145
    10. '   ' → logprob: -7.8572163581848145

Token 965: ' elimin' (ID: 21529)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1136666536331177
    2. 'el' → logprob: -1.4886666536331177
    3. 'the' → logprob: -1.8636666536331177
    4. ' the' → logprob: -1.8636666536331177
    5. ' self' → logprob: -2.363666534423828
    6. ' elimination' → logprob: -3.363666534423828
    7. '       ' → logprob: -5.863666534423828
    8. '   ' → logprob: -7.113666534423828
    9. ' elimin' → logprob: -7.113666534423828
    10. '           ' → logprob: -7.488666534423828

Token 966: 'ations' (ID: 929)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.014380796812474728
    2. 'ate' → logprob: -4.889380931854248
    3. 'ination' → logprob: -5.264380931854248
    4. 'ations' → logprob: -6.514380931854248
    5. 'inate' → logprob: -9.88938045501709
    6. 'imination' → logprob: -10.76438045501709
    7. 'inations' → logprob: -11.13938045501709
    8. 'iation' → logprob: -12.13938045501709
    9. 'ition' → logprob: -13.76438045501709
    10. 'nation' → logprob: -14.13938045501709

Token 967: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07336282730102539
    2. '       ' → logprob: -2.6983628273010254
    3. ',
' → logprob: -6.073362827301025
    4. ' and' → logprob: -7.448362827301025
    5. 'and' → logprob: -7.823362827301025
    6. ' at' → logprob: -9.448362350463867
    7. ' to' → logprob: -10.573362350463867
    8. ',and' → logprob: -12.198362350463867
    9. 'to' → logprob: -12.448362350463867
    10. '           ' → logprob: -12.948362350463867

Token 968: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.052342090755701065
    2. ' return' → logprob: -3.052342176437378
    3. 'find' → logprob: -6.677341938018799
    4. '       ' → logprob: -7.177341938018799
    5. 'calculate' → logprob: -7.677341938018799
    6. ' find' → logprob: -7.927341938018799
    7. 'count' → logprob: -7.927341938018799
    8. 'compute' → logprob: -8.302342414855957
    9. 'keep' → logprob: -9.302342414855957
    10. 'det' → logprob: -10.052342414855957

Token 969: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.16615208983421326
    2. 'the' → logprob: -1.9161521196365356
    3. '       ' → logprob: -5.416152000427246
    4. 'self' → logprob: -7.416152000427246
    5. ' self' → logprob: -7.916152000427246
    6. 'min' → logprob: -8.291152000427246
    7. ' min' → logprob: -9.416152000427246
    8. '           ' → logprob: -9.541152000427246
    9. ' minimal' → logprob: -10.541152000427246
    10. 'minimal' → logprob: -10.791152000427246

Token 970: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.08399958908557892
    2. ' minimal' → logprob: -2.8339996337890625
    3. 'minimum' → logprob: -4.0839996337890625
    4. 'min' → logprob: -5.3339996337890625
    5. ' minimum' → logprob: -9.583999633789062
    6. '   ' → logprob: -10.833999633789062
    7. 'length' → logprob: -11.583999633789062
    8. 'self' → logprob: -11.833999633789062
    9. 'float' → logprob: -12.333999633789062
    10. ' min' → logprob: -12.333999633789062

Token 971: ' size' (ID: 2349)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.5536316633224487
    2. ' remaining' → logprob: -1.0536316633224487
    3. '_remaining' → logprob: -3.3036317825317383
    4. ' number' → logprob: -3.8036317825317383
    5. 'possible' → logprob: -5.303631782531738
    6. 'number' → logprob: -5.553631782531738
    7. 'result' → logprob: -6.053631782531738
    8. ' possible' → logprob: -6.428631782531738
    9. '   ' → logprob: -6.678631782531738
    10. 'return' → logprob: -7.053631782531738

Token 972: ' remaining' (ID: 15448)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3153819739818573
    2. ' after' → logprob: -1.5653820037841797
    3. ' possible' → logprob: -3.5653820037841797
    4. ' of' → logprob: -3.6903820037841797
    5. 'possible' → logprob: -5.19038200378418
    6. 'after' → logprob: -7.06538200378418
    7. '()' → logprob: -7.94038200378418
    8. 'of' → logprob: -7.94038200378418
    9. ' remaining' → logprob: -8.44038200378418
    10. 'remaining' → logprob: -8.81538200378418

Token 973: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6256440877914429
    2. ' after' → logprob: -0.8756440877914429
    3. 'after' → logprob: -3.7506442070007324
    4. '(self' → logprob: -4.750644207000732
    5. '
' → logprob: -5.125644207000732
    6. 'self' → logprob: -5.625644207000732
    7. '.' → logprob: -6.375644207000732
    8. '.
' → logprob: -6.375644207000732
    9. '()
' → logprob: -7.250644207000732
    10. '()' → logprob: -7.500644207000732

Token 974: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012590997852385044
    2. '
' → logprob: -4.3875908851623535
    3. '        
' → logprob: -9.887591361999512
    4. '```' → logprob: -11.387591361999512
    5. '   ' → logprob: -11.637591361999512
    6. '    
' → logprob: -13.512591361999512
    7. ',' → logprob: -13.512591361999512
    8. '
' → logprob: -13.887591361999512
    9. '           ' → logprob: -14.012591361999512
    10. ':' → logprob: -14.762591361999512

Token 975: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00026646157493814826
    2. '
' → logprob: -8.750266075134277
    3. 'result' → logprob: -9.500266075134277
    4. '```' → logprob: -11.000266075134277
    5. 'min' → logprob: -11.875266075134277
    6. 'minimal' → logprob: -12.875266075134277
    7. 'current' → logprob: -13.625266075134277
    8. '        
' → logprob: -13.750266075134277
    9. ' minimal' → logprob: -14.250266075134277
    10. '   ' → logprob: -14.250266075134277

Token 976: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.416665640543215e-05
    2. 'min' → logprob: -10.50003433227539
    3. 'result' → logprob: -12.62503433227539
    4. '
' → logprob: -13.25003433227539
    5. '   ' → logprob: -14.25003433227539
    6. 'minimal' → logprob: -15.12503433227539
    7. 'results' → logprob: -15.50003433227539
    8. 'minimum' → logprob: -15.87503433227539
    9. 'best' → logprob: -16.25003433227539
    10. '```' → logprob: -16.50003433227539

Token 977: ' original' (ID: 4756)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07140152156352997
    2. '       ' → logprob: -2.821401596069336
    3. 'best' → logprob: -5.071401596069336
    4. 'minimal' → logprob: -5.821401596069336
    5. 'result' → logprob: -9.196401596069336
    6. 'original' (adapté à ' original') → logprob: -10.821401596069336
    7. 'minimum' → logprob: -11.196401596069336
    8. 'current' → logprob: -12.071401596069336
    9. ' min' → logprob: -12.321401596069336
    10. 'remaining' → logprob: -12.696401596069336

Token 978: '_colors' (ID: 79137)
  Prédit: '_sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.06137288361787796
    2. '_remaining' → logprob: -3.436372995376587
    3. '_size' → logprob: -4.061372756958008
    4. '_seq' → logprob: -5.311372756958008
    5. ' =' → logprob: -6.436372756958008
    6. '_length' → logprob: -6.811372756958008
    7. '_colors' → logprob: -6.936372756958008
    8. '_result' → logprob: -7.186372756958008
    9. '_min' → logprob: -7.436372756958008
    10. '_sizes' → logprob: -10.186372756958008

Token 979: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759571194648743
    2. '=' → logprob: -0.8259571194648743
    3. '   ' → logprob: -11.450957298278809
    4. '       ' → logprob: -12.700957298278809
    5. ':' → logprob: -12.825957298278809
    6. ' ' → logprob: -15.325957298278809
    7. '[:]' → logprob: -15.575957298278809
    8. '=self' → logprob: -15.700957298278809
    9. 's' → logprob: -15.950957298278809
    10. '  ' → logprob: -16.200956344604492

Token 980: ' [' (ID: 723)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1605902761220932
    2. '[self' → logprob: -1.9105902910232544
    3. ' self' → logprob: -8.160590171813965
    4. '[' → logprob: -9.785590171813965
    5. ' [' → logprob: -10.910590171813965
    6. '   ' → logprob: -13.410590171813965
    7. '[
' → logprob: -13.410590171813965
    8. '(self' → logprob: -14.535590171813965
    9. '	self' → logprob: -14.660590171813965
    10. 'list' → logprob: -14.785590171813965

Token 981: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.438573680294212e-06
    2. ' self' → logprob: -12.125005722045898
    3. '(self' → logprob: -18.0000057220459
    4. 'c' → logprob: -18.1250057220459
    5. 'sequence' → logprob: -18.2500057220459
    6. '   ' → logprob: -18.5000057220459
    7. 'original' → logprob: -18.5000057220459
    8. '	self' → logprob: -18.7500057220459
    9. '[self' → logprob: -19.1250057220459
    10. 'current' → logprob: -20.2500057220459

Token 982: '.sequence' (ID: 97641)
  Prédit: '.sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sequence' → logprob: -0.0007281593861989677
    2. 'sequence' → logprob: -7.250728130340576
    3. '.get' → logprob: -11.625728607177734
    4. '.' → logprob: -11.875728607177734
    5. ' .' → logprob: -14.375728607177734
    6. '.s' → logprob: -15.250728607177734
    7. ' sequence' → logprob: -15.375728607177734
    8. '(sequence' → logprob: -15.625728607177734
    9. '   ' → logprob: -15.875728607177734
    10. '._' → logprob: -16.000728607177734

Token 983: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -4.127333340875339e-06
    2. 'get' → logprob: -13.125003814697266
    3. '.' → logprob: -13.500003814697266
    4. ' .' → logprob: -14.625003814697266
    5. '._' → logprob: -15.625003814697266
    6. '_.' → logprob: -18.000003814697266
    7. '   ' → logprob: -18.250003814697266
    8. '[i' → logprob: -18.375003814697266
    9. '().' → logprob: -19.125003814697266
    10. '```' → logprob: -19.250003814697266

Token 984: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -5.88418151892256e-05
    2. 'color' → logprob: -10.375059127807617
    3. '(i' → logprob: -10.875059127807617
    4. 'i' → logprob: -13.375059127807617
    5. 'Color' → logprob: -13.500059127807617
    6. 'idx' → logprob: -14.000059127807617
    7. ' ' → logprob: -14.125059127807617
    8. '   ' → logprob: -14.250059127807617
    9. '(idx' → logprob: -14.875059127807617
    10. '```' → logprob: -15.250059127807617

Token 985: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -8.895480277715251e-06
    2. '(idx' → logprob: -11.750008583068848
    3. '(' → logprob: -14.500008583068848
    4. ' (' → logprob: -15.125008583068848
    5. 'i' → logprob: -16.500009536743164
    6. '
' → logprob: -18.375009536743164
    7. '(index' → logprob: -19.250009536743164
    8. ' i' → logprob: -19.500009536743164
    9. '](' → logprob: -19.500009536743164
    10. '(x' → logprob: -19.750009536743164

Token 986: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02832469344139099
    2. '(i' → logprob: -3.778324604034424
    3. 'for' → logprob: -5.653324604034424
    4. ' for' → logprob: -6.653324604034424
    5. '   ' → logprob: -8.903325080871582
    6. 'i' → logprob: -9.903325080871582
    7. ' )' → logprob: -10.528325080871582
    8. ' i' → logprob: -10.528325080871582
    9. '[i' → logprob: -11.403325080871582
    10. ' ' → logprob: -12.653325080871582

Token 987: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08918656408786774
    2. 'for' → logprob: -2.464186668395996
    3. '()' → logprob: -8.839186668395996
    4. '       ' → logprob: -10.089186668395996
    5. '[:]' → logprob: -10.589186668395996
    6. '           ' → logprob: -10.714186668395996
    7. '        ' → logprob: -12.089186668395996
    8. '	for' → logprob: -13.339186668395996
    9. '          ' → logprob: -13.464186668395996
    10. '            ' → logprob: -13.839186668395996

Token 988: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024756586644798517
    2. ' i' → logprob: -6.002475738525391
    3. '	i' → logprob: -18.50247573852539
    4. 'in' → logprob: -20.75247573852539
    5. '
' → logprob: -20.87747573852539
    6. ' ' → logprob: -20.87747573852539
    7. ' ' → logprob: -21.37747573852539
    8. ' in' → logprob: -21.75247573852539
    9. 'I' → logprob: -22.00247573852539
    10. '  ' → logprob: -22.12747573852539

Token 989: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10072050243616104
    2. 'in' → logprob: -2.3507204055786133
    3. 'i' → logprob: -7.600720405578613
    4. ' i' → logprob: -11.600720405578613
    5. 'range' → logprob: -12.725720405578613
    6. ' range' → logprob: -14.475720405578613
    7. ' ' → logprob: -14.975720405578613
    8. 'import' → logprob: -15.600720405578613
    9. 's' → logprob: -15.850720405578613
    10. ',' → logprob: -17.10072135925293

Token 990: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '
' → logprob: -22.625045776367188
    4. ' ' → logprob: -23.250045776367188
    5. '(range' → logprob: -23.375045776367188
    6. '   ' → logprob: -23.875045776367188
    7. '	range' → logprob: -24.500045776367188
    8. '  ' → logprob: -25.500045776367188
    9. 'Range' → logprob: -26.125045776367188
    10. '0' → logprob: -27.000045776367188

Token 991: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.577061116695404
    2. '(self' → logprob: -0.827061116695404
    3. ' self' → logprob: -6.952061176300049
    4. '(' → logprob: -9.07706069946289
    5. '0' → logprob: -10.32706069946289
    6. '       ' → logprob: -11.95206069946289
    7. 's' → logprob: -12.45206069946289
    8. '	self' → logprob: -13.95206069946289
    9. '           ' → logprob: -14.07706069946289
    10. ')' → logprob: -14.20206069946289

Token 992: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.07251503318548203
    2. 'self' → logprob: -2.9475150108337402
    3. '.sequence' → logprob: -4.69751501083374
    4. 'n' → logprob: -5.19751501083374
    5. '.self' → logprob: -7.19751501083374
    6. 'sequence' → logprob: -7.32251501083374
    7. '.length' → logprob: -7.69751501083374
    8. '.' → logprob: -8.197515487670898
    9. '(self' → logprob: -8.947515487670898
    10. ')' → logprob: -9.322515487670898

Token 993: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.017047064378857613
    2. ']' → logprob: -4.142046928405762
    3. ')' → logprob: -7.142046928405762
    4. ')]
' → logprob: -8.767046928405762
    5. ' ]' → logprob: -10.267046928405762
    6. ']
' → logprob: -11.017046928405762
    7. ' )' → logprob: -12.142046928405762
    8. '       ' → logprob: -12.267046928405762
    9. ')]

' → logprob: -13.642046928405762
    10. ')]
' → logprob: -14.017046928405762

Token 994: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05499354749917984
    2. 'min' → logprob: -3.0549936294555664
    3. 'best' → logprob: -5.804993629455566
    4. 'minimal' → logprob: -6.804993629455566
    5. ' min' → logprob: -7.054993629455566
    6. 'result' → logprob: -7.179993629455566
    7. ' minimal' → logprob: -7.679993629455566
    8. ' best' → logprob: -9.429993629455566
    9. 'minimum' → logprob: -10.554993629455566
    10. '```' → logprob: -10.554993629455566

Token 995: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.015175503678619862
    2. 'best' → logprob: -4.5151753425598145
    3. 'minimal' → logprob: -5.5151753425598145
    4. '       ' → logprob: -9.515175819396973
    5. 'result' → logprob: -11.265175819396973
    6. ' min' → logprob: -12.140175819396973
    7. 'minimum' → logprob: -14.015175819396973
    8. ' minimal' → logprob: -14.015175819396973
    9. ' best' → logprob: -15.265175819396973
    10. '   ' → logprob: -16.640174865722656

Token 996: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -0.20407025516033173
    2. '_size' → logprob: -1.7040702104568481
    3. '_result' → logprob: -6.829070091247559
    4. '_rem' → logprob: -7.329070091247559
    5. '_length' → logprob: -7.454070091247559
    6. '_len' → logprob: -9.079070091247559
    7. '_res' → logprob: -9.204070091247559
    8. '_count' → logprob: -9.329070091247559
    9. '_left' → logprob: -11.579070091247559
    10. 'size' → logprob: -12.454070091247559

Token 997: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692968547344208
    2. ' =' → logprob: -2.126929759979248
    3. ':' → logprob: -13.62692928314209
    4. '   ' → logprob: -15.62692928314209
    5. '=int' → logprob: -15.87692928314209
    6. '=float' → logprob: -17.751930236816406
    7. ',' → logprob: -17.876930236816406
    8. ':int' → logprob: -18.376930236816406
    9. ' ' → logprob: -18.501930236816406
    10. '=

' → logprob: -19.251930236816406

Token 998: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5451681974809617e-05
    2. ' self' → logprob: -11.500015258789062
    3. 'float' → logprob: -12.500015258789062
    4. 'len' → logprob: -13.875015258789062
    5. '       ' → logprob: -14.875015258789062
    6. 'min' → logprob: -15.625015258789062
    7. '   ' → logprob: -17.125015258789062
    8. '           ' → logprob: -17.875015258789062
    9. '	self' → logprob: -18.000015258789062
    10. '[self' → logprob: -18.250015258789062

Token 999: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00048405781853944063
    2. 'n' → logprob: -8.000484466552734
    3. 'self' → logprob: -9.000484466552734
    4. 'sequence' → logprob: -11.500484466552734
    5. '.' → logprob: -12.375484466552734
    6. ' .' → logprob: -12.750484466552734
    7. '_n' → logprob: -13.125484466552734
    8. '.sequence' → logprob: -13.875484466552734
    9. 'min' → logprob: -14.375484466552734
    10. '   ' → logprob: -14.500484466552734

Token 1000: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02678542584180832
    2. '       ' → logprob: -3.776785373687744
    3. 'for' → logprob: -6.151785373687744
    4. ' for' → logprob: -7.651785373687744
    5. '        
' → logprob: -8.026785850524902
    6. '+' → logprob: -8.151785850524902
    7. ' +' → logprob: -8.776785850524902
    8. '
' → logprob: -9.776785850524902
    9. '<|end|>' → logprob: -10.026785850524902
    10. '   ' → logprob: -11.026785850524902

Token 1001: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6457679867744446
    2. '       ' → logprob: -1.1457679271697998
    3. 'for' → logprob: -1.8957679271697998
    4. ' for' → logprob: -4.895768165588379
    5. '        
' → logprob: -9.770768165588379
    6. '
' → logprob: -11.270768165588379
    7. '   ' → logprob: -12.020768165588379
    8. '

' → logprob: -14.145768165588379
    9. '```' → logprob: -14.770768165588379
    10. '    
' → logprob: -14.895768165588379

Token 1002: ' worst' (ID: 20486)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010664248111424968
    2. '       ' → logprob: -9.375106811523438
    3. '
' → logprob: -11.000106811523438
    4. '#' → logprob: -12.875106811523438
    5. ' for' → logprob: -13.000106811523438
    6. 'best' → logprob: -16.750106811523438
    7. '        
' → logprob: -17.000106811523438
    8. '```' → logprob: -17.250106811523438
    9. 'result' → logprob: -17.625106811523438
    10. '   ' → logprob: -17.750106811523438

Token 1003: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -1.2666012048721313
    2. '_' → logprob: -1.3916012048721313
    3. '_case' → logprob: -1.7666012048721313
    4. '_possible' → logprob: -2.266601085662842
    5. '-case' → logprob: -2.516601085662842
    6. '   ' → logprob: -3.141601085662842
    7. '       ' → logprob: -3.516601085662842
    8. 'possible' → logprob: -3.766601085662842
    9. ' case' → logprob: -5.891601085662842
    10. '_min' → logprob: -6.016601085662842

Token 1004: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5400484204292297
    2. '
' → logprob: -1.040048360824585
    3. ' for' → logprob: -3.040048360824585
    4. 'for' → logprob: -4.165048599243164
    5. '        
' → logprob: -7.790048599243164
    6. '   ' → logprob: -10.915048599243164
    7. ',' → logprob: -11.165048599243164
    8. '
' → logprob: -11.540048599243164
    9. '	for' → logprob: -12.165048599243164
    10. '

' → logprob: -12.540048599243164

Token 1005: ' no' (ID: 860)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2559242844581604
    2. 'self' → logprob: -1.5059242248535156
    3. ' min' → logprob: -5.880924224853516
    4. ' self' → logprob: -6.755924224853516
    5. '```' → logprob: -11.755924224853516
    6. 'len' → logprob: -12.130924224853516
    7. '
' → logprob: -12.630924224853516
    8. 'for' → logprob: -12.755924224853516
    9. 'no' → logprob: -13.255924224853516
    10. '       ' → logprob: -13.505924224853516

Token 1006: ' elimination' (ID: 77324)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.06816868484020233
    2. ' elimination' → logprob: -3.6931686401367188
    3. 'change' → logprob: -3.8181686401367188
    4. ' change' → logprob: -4.943168640136719
    5. 'changes' → logprob: -5.318168640136719
    6. ' elimin' → logprob: -5.693168640136719
    7. ' changes' → logprob: -6.068168640136719
    8. 'elim' → logprob: -7.568168640136719
    9. 'rem' → logprob: -7.693168640136719
    10. '   ' → logprob: -9.443168640136719

Token 1007: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5349918603897095
    2. '
' → logprob: -0.9099918603897095
    3. 'for' → logprob: -5.03499174118042
    4. ' for' → logprob: -5.28499174118042
    5. '        
' → logprob: -8.659992218017578
    6. ',' → logprob: -11.034992218017578
    7. '   ' → logprob: -11.409992218017578
    8. '
' → logprob: -11.534992218017578
    9. '

' → logprob: -12.284992218017578
    10. '    
' → logprob: -12.909992218017578

Token 1008: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00879809819161892
    2. 'for' → logprob: -5.008798122406006
    3. '
' → logprob: -6.383798122406006
    4. ' for' → logprob: -8.383797645568848
    5. '   ' → logprob: -8.758797645568848
    6. '```' → logprob: -12.758797645568848
    7. '        
' → logprob: -12.883797645568848
    8. '           ' → logprob: -15.008797645568848
    9. '	for' → logprob: -15.633797645568848
    10. '    
' → logprob: -16.133798599243164

Token 1009: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.2723104848410003e-05
    2. '       ' → logprob: -10.750022888183594
    3. 'colors' → logprob: -13.875022888183594
    4. '
' → logprob: -16.000022888183594
    5. ' for' → logprob: -16.125022888183594
    6. '   ' → logprob: -17.125022888183594
    7. 'possible' → logprob: -17.750022888183594
    8. 'available' → logprob: -18.000022888183594
    9. 'from' → logprob: -18.000022888183594
    10. 'all' → logprob: -18.125022888183594

Token 1010: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3204495906829834
    2. 'i' → logprob: -1.3204495906829834
    3. 'idx' → logprob: -5.3204498291015625
    4. 'position' → logprob: -6.4454498291015625
    5. ' pos' → logprob: -7.9454498291015625
    6. ' i' → logprob: -8.320449829101562
    7. '   ' → logprob: -10.320449829101562
    8. 'color' → logprob: -10.320449829101562
    9. ' idx' → logprob: -11.695449829101562
    10. 'change' → logprob: -12.445449829101562

Token 1011: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02058696746826172
    2. 'in' → logprob: -3.8955869674682617
    3. ' ' → logprob: -10.895586967468262
    4. ',' → logprob: -11.270586967468262
    5. '_in' → logprob: -12.770586967468262
    6. 'import' → logprob: -13.145586967468262
    7. '   ' → logprob: -13.145586967468262
    8. 'In' → logprob: -13.145586967468262
    9. ' ,' → logprob: -13.895586967468262
    10. '  ' → logprob: -14.645586967468262

Token 1012: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00861456897109747
    2. ' range' → logprob: -4.758614540100098
    3. '   ' → logprob: -17.508615493774414
    4. ' ' → logprob: -17.758615493774414
    5. 'Range' → logprob: -17.883615493774414
    6. '(range' → logprob: -18.758615493774414
    7. '0' → logprob: -19.008615493774414
    8. '	range' → logprob: -19.383615493774414
    9. '  ' → logprob: -19.883615493774414
    10. '
' → logprob: -20.133615493774414

Token 1013: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0698043704032898
    2. '(self' → logprob: -2.8198044300079346
    3. '0' → logprob: -5.3198041915893555
    4. ' self' → logprob: -6.0698041915893555
    5. '       ' → logprob: -7.5698041915893555
    6. '(' → logprob: -9.569804191589355
    7. '           ' → logprob: -12.194804191589355
    8. '   ' → logprob: -12.569804191589355
    9. '               ' → logprob: -13.319804191589355
    10. '1' → logprob: -13.569804191589355

Token 1014: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00016766376211307943
    2. 'n' → logprob: -8.875167846679688
    3. 'self' → logprob: -10.750167846679688
    4. '       ' → logprob: -12.625167846679688
    5. '_n' → logprob: -12.875167846679688
    6. '   ' → logprob: -15.375167846679688
    7. ',n' → logprob: -16.875167846679688
    8. ' .' → logprob: -17.250167846679688
    9. '           ' → logprob: -17.375167846679688
    10. ').' → logprob: -18.375167846679688

Token 1015: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08949509263038635
    2. '):' → logprob: -2.4644951820373535
    3. '       ' → logprob: -8.714494705200195
    4. '):
' → logprob: -8.714494705200195
    5. '   ' → logprob: -9.589494705200195
    6. ':' → logprob: -9.714494705200195
    7. ' ):
' → logprob: -9.964494705200195
    8. ':
' → logprob: -10.964494705200195
    9. ')' → logprob: -10.964494705200195
    10. ' ):' → logprob: -12.214494705200195

Token 1016: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006334837060421705
    2. ' for' → logprob: -5.2563347816467285
    3. 'for' → logprob: -7.3813347816467285
    4. '   ' → logprob: -7.8813347816467285
    5. ' original' → logprob: -10.006335258483887
    6. ' ' → logprob: -11.506335258483887
    7. '       ' → logprob: -11.881335258483887
    8. 'original' → logprob: -12.131335258483887
    9. ' ' → logprob: -12.381335258483887
    10. '               ' → logprob: -12.381335258483887

Token 1017: ' original' (ID: 4756)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08314978331327438
    2. ' for' → logprob: -2.5831496715545654
    3. '           ' → logprob: -5.8331499099731445
    4. 'original' (adapté à ' original') → logprob: -7.3331499099731445
    5. ' original' → logprob: -8.208149909973145
    6. '               ' → logprob: -8.833149909973145
    7. 'current' → logprob: -8.958149909973145
    8. '   ' → logprob: -9.458149909973145
    9. ' current' → logprob: -10.958149909973145
    10. '	for' → logprob: -11.458149909973145

Token 1018: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.00026264708139933646
    2. '_colors' → logprob: -8.875262260437012
    3. 'color' → logprob: -9.125262260437012
    4. '   ' → logprob: -12.375262260437012
    5. 'Color' → logprob: -12.625262260437012
    6. 'for' → logprob: -13.625262260437012
    7. ' color' → logprob: -13.750262260437012
    8. '       ' → logprob: -14.125262260437012
    9. '```' → logprob: -14.250262260437012
    10. '           ' → logprob: -14.750262260437012

Token 1019: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17975667119026184
    2. '=' → logprob: -1.8047566413879395
    3. '=current' → logprob: -12.304757118225098
    4. 'current' → logprob: -13.554757118225098
    5. '   ' → logprob: -13.804757118225098
    6. 'for' → logprob: -13.929757118225098
    7. '_current' → logprob: -13.929757118225098
    8. '_original' → logprob: -14.054757118225098
    9. ':' → logprob: -14.554757118225098
    10. ',' → logprob: -15.429757118225098

Token 1020: ' original' (ID: 4756)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.011254831217229366
    2. ' original' → logprob: -4.511254787445068
    3. 'self' → logprob: -8.511255264282227
    4. ' self' → logprob: -12.886255264282227
    5. '           ' → logprob: -14.136255264282227
    6. 'origin' → logprob: -14.136255264282227
    7. '       ' → logprob: -14.261255264282227
    8. 'orig' → logprob: -14.886255264282227
    9. '   ' → logprob: -15.136255264282227
    10. '(original' → logprob: -15.636255264282227

Token 1021: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.000400521676056087
    2. '_color' → logprob: -8.00040054321289
    3. 'colors' → logprob: -10.50040054321289
    4. 'color' → logprob: -10.87540054321289
    5. '=' → logprob: -12.12540054321289
    6. ' =' → logprob: -12.37540054321289
    7. 'Colors' → logprob: -12.75040054321289
    8. 's' → logprob: -13.37540054321289
    9. '```' → logprob: -14.12540054321289
    10. '   ' → logprob: -14.12540054321289

Token 1022: '[pos' (ID: 48272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26909029483795166
    2. ' =' → logprob: -1.6440902948379517
    3. '[pos' → logprob: -3.394090175628662
    4. '           ' → logprob: -4.894090175628662
    5. 'pos' → logprob: -6.769090175628662
    6. 'for' → logprob: -8.76909065246582
    7. '               ' → logprob: -9.01909065246582
    8. '
' → logprob: -9.51909065246582
    9. ')' → logprob: -10.39409065246582
    10. '   ' → logprob: -10.51909065246582

Token 1023: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10113594681024551
    2. '
' → logprob: -2.7261359691619873
    3. ')' → logprob: -4.351135730743408
    4. '               ' → logprob: -5.226135730743408
    5. ')
' → logprob: -5.226135730743408
    6. '):
' → logprob: -5.351135730743408
    7. ':
' → logprob: -7.101135730743408
    8. '       ' → logprob: -7.726135730743408
    9. '            
' → logprob: -8.351136207580566
    10. ',' → logprob: -8.851136207580566

Token 1024: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.856408536899835e-05
    2. 'for' → logprob: -10.875028610229492
    3. ' for' → logprob: -11.750028610229492
    4. '       ' → logprob: -13.625028610229492
    5. '   ' → logprob: -15.250028610229492
    6. '               ' → logprob: -15.875028610229492
    7. '		' → logprob: -16.625028610229492
    8. '	       ' → logprob: -17.250028610229492
    9. '          ' → logprob: -17.750028610229492
    10. '	   ' → logprob: -17.875028610229492

Token 1025: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006345968693494797
    2. '           ' → logprob: -5.756345748901367
    3. ' for' → logprob: -5.756345748901367
    4. '       ' → logprob: -15.131345748901367
    5. '   ' → logprob: -15.631345748901367
    6. '	for' → logprob: -16.256345748901367
    7. '               ' → logprob: -17.256345748901367
    8. ' ' → logprob: -18.381345748901367
    9. '		' → logprob: -19.506345748901367
    10. '          ' → logprob: -19.631345748901367

Token 1026: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.03277323395013809
    2. 'new' → logprob: -3.53277325630188
    3. 'c' → logprob: -5.907773017883301
    4. 'candidate' → logprob: -8.7827730178833
    5. ' color' → logprob: -9.1577730178833
    6. ' new' → logprob: -10.5327730178833
    7. 'col' → logprob: -11.7827730178833
    8. 'Color' → logprob: -13.0327730178833
    9. 'target' → logprob: -13.2827730178833
    10. 'clr' → logprob: -13.9077730178833

Token 1027: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006721655838191509
    2. 'in' → logprob: -5.006721496582031
    3. '_in' → logprob: -13.256721496582031
    4. '           ' → logprob: -13.756721496582031
    5. ' ' → logprob: -14.006721496582031
    6. '            ' → logprob: -14.506721496582031
    7. '_color' → logprob: -14.756721496582031
    8. '	in' → logprob: -15.381721496582031
    9. '               ' → logprob: -15.631721496582031
    10. '_' → logprob: -15.631721496582031

Token 1028: ' Color' (ID: 6822)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.0009131324477493763
    2. ' Color' → logprob: -7.000913143157959
    3. '           ' → logprob: -14.0009126663208
    4. '   ' → logprob: -14.5009126663208
    5. '[' → logprob: -15.8759126663208
    6. '	Color' → logprob: -16.500913619995117
    7. ' ' → logprob: -18.125913619995117
    8. '(Color' → logprob: -18.250913619995117
    9. '       ' → logprob: -18.750913619995117
    10. '               ' → logprob: -18.875913619995117

Token 1029: '.all' (ID: 14045)
  Prédit: '.all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.all' → logprob: -2.8444881536415778e-05
    2. 'all' → logprob: -10.875028610229492
    3. ' .' → logprob: -12.000028610229492
    4. '.' → logprob: -13.500028610229492
    5. '   ' → logprob: -14.250028610229492
    6. 'All' → logprob: -15.000028610229492
    7. ' all' → logprob: -15.750028610229492
    8. ' ' → logprob: -15.750028610229492
    9. '_all' → logprob: -16.250028610229492
    10. '	all' → logprob: -16.250028610229492

Token 1030: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.6934825778007507
    2. '():' → logprob: -0.6934825778007507
    3. ':' → logprob: -8.568482398986816
    4. '()' → logprob: -9.568482398986816
    5. '():
' → logprob: -10.193482398986816
    6. ':
' → logprob: -10.318482398986816
    7. '               ' → logprob: -13.193482398986816
    8. '           ' → logprob: -13.568482398986816
    9. '():

' → logprob: -13.943482398986816
    10. '()):
' → logprob: -14.693482398986816

Token 1031: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011367550177965313
    2. ' if' → logprob: -9.375113487243652
    3. 'if' → logprob: -12.250113487243652
    4. '                               ' → logprob: -12.250113487243652
    5. ':' → logprob: -12.750113487243652
    6. '<|end|>' → logprob: -12.875113487243652
    7. ':
' → logprob: -13.000113487243652
    8. '                   ' → logprob: -13.000113487243652
    9. '                ' → logprob: -13.750113487243652
    10. '           ' → logprob: -13.875113487243652

Token 1032: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17728540301322937
    2. 'if' (adapté à ' if') → logprob: -2.5522854328155518
    3. '                   ' → logprob: -2.5522854328155518
    4. '               ' → logprob: -5.052285194396973
    5. '                       ' → logprob: -9.177285194396973
    6. '           ' → logprob: -9.802285194396973
    7. '   ' → logprob: -9.927285194396973
    8. '                           ' → logprob: -11.177285194396973
    9. '                               ' → logprob: -11.677285194396973
    10. '                ' → logprob: -11.927285194396973

Token 1033: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.005234002135694027
    2. ' color' → logprob: -5.2552337646484375
    3. '                   ' → logprob: -16.380233764648438
    4. '	color' → logprob: -16.630233764648438
    5. '               ' → logprob: -17.880233764648438
    6. '(color' → logprob: -18.255233764648438
    7. 'Color' → logprob: -18.755233764648438
    8. '                       ' → logprob: -18.880233764648438
    9. '[color' → logprob: -19.255233764648438
    10. '   ' → logprob: -19.380233764648438

Token 1034: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.11894188821315765
    2. '!=' → logprob: -2.8689417839050293
    3. ' ==' → logprob: -3.1189417839050293
    4. '==' → logprob: -4.493941783905029
    5. '()!=' → logprob: -14.868942260742188
    6. ')!=' → logprob: -15.618942260742188
    7. '=' → logprob: -16.368942260742188
    8. '```' → logprob: -16.493942260742188
    9. '!==' → logprob: -16.618942260742188
    10. '==
' → logprob: -16.993942260742188

Token 1035: ' original' (ID: 4756)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.004078758880496025
    2. ' original' → logprob: -5.5040788650512695
    3. '(original' → logprob: -15.50407886505127
    4. '   ' → logprob: -16.504077911376953
    5. '.original' → logprob: -16.629077911376953
    6. 'Original' → logprob: -17.629077911376953
    7. 'origin' → logprob: -17.754077911376953
    8. ' ' → logprob: -17.754077911376953
    9. '           ' → logprob: -17.879077911376953
    10. '
' → logprob: -17.879077911376953

Token 1036: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -2.057743949990254e-05
    2. 'color' → logprob: -10.875020980834961
    3. 'Color' → logprob: -15.125020980834961
    4. 'original' → logprob: -15.375020980834961
    5. '_colors' → logprob: -15.375020980834961
    6. '_code' → logprob: -15.750020980834961
    7. ' color' → logprob: -15.875020980834961
    8. '   ' → logprob: -16.25002098083496
    9. 's' → logprob: -16.37502098083496
    10. '
' → logprob: -16.50002098083496

Token 1037: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20313753187656403
    2. ':
' → logprob: -1.9531375169754028
    3. '                   ' → logprob: -3.2031376361846924
    4. '               ' → logprob: -7.453137397766113
    5. ' or' → logprob: -8.203137397766113
    6. ' continue' → logprob: -8.578137397766113
    7. 'continue' → logprob: -9.328137397766113
    8. '                       ' → logprob: -9.453137397766113
    9. '           ' → logprob: -10.203137397766113
    10. '                           ' → logprob: -10.453137397766113

Token 1038: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002478694950696081
    2. ':' → logprob: -9.125247955322266
    3. ':
' → logprob: -9.500247955322266
    4. ' continue' → logprob: -10.500247955322266
    5. '               ' → logprob: -11.000247955322266
    6. '                       ' → logprob: -11.750247955322266
    7. '           ' → logprob: -12.875247955322266
    8. '                  ' → logprob: -13.125247955322266
    9. 'continue' → logprob: -13.250247955322266
    10. '   ' → logprob: -14.000247955322266

Token 1039: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.026694897562265396
    2. ' continue' → logprob: -4.0266947746276855
    3. '                   ' → logprob: -4.7766947746276855
    4. '	continue' → logprob: -9.776695251464844
    5. '                       ' → logprob: -11.276695251464844
    6. '   ' → logprob: -11.901695251464844
    7. '               ' → logprob: -12.151695251464844
    8. '_continue' → logprob: -13.151695251464844
    9. 'contin' → logprob: -14.776695251464844
    10. '           ' → logprob: -15.026695251464844

Token 1040: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10198952257633209
    2. '                   ' → logprob: -2.351989507675171
    3. '                    
' → logprob: -7.47698974609375
    4. '                       ' → logprob: -7.97698974609375
    5. '                
' → logprob: -7.97698974609375
    6. '
' → logprob: -9.10198974609375
    7. ' self' → logprob: -9.10198974609375
    8. 'self' → logprob: -9.97698974609375
    9. '           ' → logprob: -10.10198974609375
    10. ',' → logprob: -10.35198974609375

Token 1041: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04770521819591522
    2. '
' → logprob: -3.5477051734924316
    3. 'self' → logprob: -4.422705173492432
    4. '                
' → logprob: -6.672705173492432
    5. 'temp' → logprob: -6.672705173492432
    6. 'new' → logprob: -7.047705173492432
    7. '                   ' → logprob: -7.547705173492432
    8. ' self' → logprob: -7.797705173492432
    9. 'color' → logprob: -7.797705173492432
    10. 'sequence' → logprob: -8.79770565032959

Token 1042: ' no' (ID: 860)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.8721939921379089
    2. '               ' → logprob: -1.6221940517425537
    3. 'new' → logprob: -1.7471940517425537
    4. '#' → logprob: -2.4971940517425537
    5. '                   ' → logprob: -2.7471940517425537
    6. ' #' → logprob: -3.9971940517425537
    7. 'self' → logprob: -4.747193813323975
    8. 'color' → logprob: -4.997193813323975
    9. ' continue' → logprob: -5.122193813323975
    10. 'continue' → logprob: -5.247193813323975

Token 1043: ' change' (ID: 3343)
  Prédit: ' change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.3407958447933197
    2. 'change' → logprob: -1.465795874595642
    3. ' need' → logprob: -3.4657957553863525
    4. ' continue' → logprob: -5.340795993804932
    5. '           ' → logprob: -5.840795993804932
    6. ' color' → logprob: -6.215795993804932
    7. 'continue' → logprob: -6.215795993804932
    8. '   ' → logprob: -6.340795993804932
    9. 'token' → logprob: -6.590795993804932
    10. '_change' → logprob: -6.840795993804932

Token 1044: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006112866685725749
    2. '                
' → logprob: -7.500611305236816
    3. '                    
' → logprob: -10.750611305236816
    4. '
' → logprob: -12.000611305236816
    5. '               
' → logprob: -12.250611305236816
    6. '<|end|>' → logprob: -12.375611305236816
    7. '			' → logprob: -12.625611305236816
    8. '                   ' → logprob: -13.000611305236816
    9. '                        
' → logprob: -13.125611305236816
    10. '  
' → logprob: -13.250611305236816

Token 1045: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010534112807363272
    2. '                
' → logprob: -7.376053333282471
    3. ' new' → logprob: -8.751053810119629
    4. 'new' → logprob: -9.626053810119629
    5. ' self' → logprob: -10.126053810119629
    6. 'self' → logprob: -10.126053810119629
    7. '                   ' → logprob: -10.126053810119629
    8. '                    
' → logprob: -10.876053810119629
    9. '           ' → logprob: -11.001053810119629
    10. '
' → logprob: -11.126053810119629

Token 1046: ' modified' (ID: 19209)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8178887963294983
    2. '               ' → logprob: -1.4428887367248535
    3. 'self' → logprob: -1.6928887367248535
    4. 'temp' → logprob: -2.4428887367248535
    5. '#' → logprob: -3.3178887367248535
    6. 'move' → logprob: -4.9428887367248535
    7. 'modified' (adapté à ' modified') → logprob: -6.4428887367248535
    8. '           ' → logprob: -6.5678887367248535
    9. 'm' → logprob: -6.5678887367248535
    10. 'sequence' → logprob: -7.4428887367248535

Token 1047: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.026208676397800446
    2. '_seq' → logprob: -4.276208877563477
    3. '_colors' → logprob: -5.026208877563477
    4. ' =' → logprob: -5.651208877563477
    5. 'sequence' → logprob: -6.776208877563477
    6. '=' → logprob: -7.651208877563477
    7. 'seq' → logprob: -8.526208877563477
    8. 'colors' → logprob: -10.901208877563477
    9. 'Sequence' → logprob: -11.276208877563477
    10. '   ' → logprob: -11.526208877563477

Token 1048: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760119557380676
    2. ' =' → logprob: -0.8260119557380676
    3. '           ' → logprob: -10.201011657714844
    4. '       ' → logprob: -11.326011657714844
    5. '.set' → logprob: -11.576011657714844
    6. '   ' → logprob: -12.326011657714844
    7. '=self' → logprob: -12.451011657714844
    8. '               ' → logprob: -13.826011657714844
    9. ':' → logprob: -13.951011657714844
    10. '=set' → logprob: -14.201011657714844

Token 1049: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.32924506068229675
    2. 'Linear' → logprob: -1.3292450904846191
    3. ' self' → logprob: -4.954245090484619
    4. ' Linear' → logprob: -5.454245090484619
    5. '                   ' → logprob: -5.579245090484619
    6. '               ' → logprob: -7.454245090484619
    7. '                       ' → logprob: -9.204244613647461
    8. '           ' → logprob: -11.579244613647461
    9. 'Line' → logprob: -11.579244613647461
    10. '   ' → logprob: -11.829244613647461

Token 1050: '.sequence' (ID: 97641)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.2843421995639801
    2. '.sequence' → logprob: -1.4093421697616577
    3. '.clone' → logprob: -7.159342288970947
    4. '_sequence' → logprob: -7.534342288970947
    5. 'clone' → logprob: -7.659342288970947
    6. '._' → logprob: -7.784342288970947
    7. '_clone' → logprob: -8.784341812133789
    8. '.copy' → logprob: -8.909341812133789
    9. '           ' → logprob: -8.909341812133789
    10. '               ' → logprob: -9.659341812133789

Token 1051: '.clone' (ID: 29419)
  Prédit: '.clone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.clone' → logprob: -2.7133641196996905e-05
    2. 'clone' → logprob: -11.12502670288086
    3. '.' → logprob: -11.62502670288086
    4. ' .' → logprob: -12.75002670288086
    5. '   ' → logprob: -16.00002670288086
    6. '.copy' → logprob: -16.75002670288086
    7. '().' → logprob: -16.87502670288086
    8. ' clone' → logprob: -17.00002670288086
    9. '.set' → logprob: -17.00002670288086
    10. '.Clone' → logprob: -17.00002670288086

Token 1052: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003937937319278717
    2. '           ' → logprob: -6.503937721252441
    3. '()
' → logprob: -6.753937721252441
    4. '()' → logprob: -7.128937721252441
    5. '                
' → logprob: -8.628937721252441
    6. '       ' → logprob: -9.628937721252441
    7. '              ' → logprob: -9.878937721252441
    8. ')' → logprob: -10.503937721252441
    9. '<|end|>' → logprob: -10.628937721252441
    10. ')
' → logprob: -10.878937721252441

Token 1053: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005047772428952157
    2. 'modified' → logprob: -7.625504970550537
    3. ' modified' → logprob: -12.000504493713379
    4. '                   ' → logprob: -12.375504493713379
    5. '           ' → logprob: -12.625504493713379
    6. '                       ' → logprob: -14.125504493713379
    7. 'mod' → logprob: -14.500504493713379
    8. '   ' → logprob: -14.750504493713379
    9. '                               ' → logprob: -15.125504493713379
    10. '       ' → logprob: -15.500504493713379

Token 1054: ' modified' (ID: 19209)
  Prédit: 'modified'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'modified' (adapté à ' modified') → logprob: -0.0011762974318116903
    2. '               ' → logprob: -6.751176357269287
    3. ' modified' → logprob: -12.251175880432129
    4. '           ' → logprob: -14.251175880432129
    5. 'mod' → logprob: -15.126175880432129
    6. '       ' → logprob: -15.751175880432129
    7. 'modifiable' → logprob: -16.376176834106445
    8. 'modifier' → logprob: -16.501176834106445
    9. 'modify' → logprob: -17.001176834106445
    10. '                   ' → logprob: -17.501176834106445

Token 1055: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.02072744630277157
    2. '.set' → logprob: -4.395727634429932
    3. 'sequence' → logprob: -4.895727634429932
    4. 'set' → logprob: -8.020727157592773
    5. '.' → logprob: -9.020727157592773
    6. '.sequence' → logprob: -9.770727157592773
    7. 'Sequence' → logprob: -10.020727157592773
    8. '           ' → logprob: -10.395727157592773
    9. '   ' → logprob: -10.520727157592773
    10. '               ' → logprob: -11.020727157592773

Token 1056: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -1.2233183042553719e-05
    2. '.' → logprob: -11.375012397766113
    3. ' .' → logprob: -15.625012397766113
    4. ').' → logprob: -15.750012397766113
    5. 'set' → logprob: -16.000011444091797
    6. '   ' → logprob: -16.125011444091797
    7. '               ' → logprob: -17.875011444091797
    8. ')set' → logprob: -18.000011444091797
    9. '.setdefault' → logprob: -18.000011444091797
    10. '                   ' → logprob: -18.250011444091797

Token 1057: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.00976305641233921
    2. 'color' → logprob: -4.634763240814209
    3. 'olor' → logprob: -12.75976276397705
    4. 'Color' → logprob: -13.88476276397705
    5. '```' → logprob: -14.25976276397705
    6. 'pos' → logprob: -14.88476276397705
    7. ' color' → logprob: -15.00976276397705
    8. '_COLOR' → logprob: -15.25976276397705
    9. '
' → logprob: -15.50976276397705
    10. 'the' → logprob: -15.63476276397705

Token 1058: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -5.200166469876422e-06
    2. 'pos' → logprob: -12.500004768371582
    3. '(' → logprob: -14.125004768371582
    4. '[pos' → logprob: -14.625004768371582
    5. '(position' → logprob: -16.3750057220459
    6. ',pos' → logprob: -16.5000057220459
    7. '	pos' → logprob: -18.1250057220459
    8. ' pos' → logprob: -18.3750057220459
    9. '(
' → logprob: -18.5000057220459
    10. ' (' → logprob: -18.6250057220459

Token 1059: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016480287013109773
    2. ',color' → logprob: -9.250164985656738
    3. ' ,' → logprob: -9.625164985656738
    4. 'color' → logprob: -13.625164985656738
    5. ',
' → logprob: -15.000164985656738
    6. '               ' → logprob: -15.500164985656738
    7. ' color' → logprob: -15.500164985656738
    8. '(color' → logprob: -15.625164985656738
    9. '                   ' → logprob: -16.125164031982422
    10. ')' → logprob: -16.500164031982422

Token 1060: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.002476135268807411
    2. ' color' → logprob: -6.002476215362549
    3. '                   ' → logprob: -14.87747573852539
    4. '               ' → logprob: -16.62747573852539
    5. '                       ' → logprob: -17.75247573852539
    6. '(color' → logprob: -18.50247573852539
    7. 'Color' → logprob: -18.50247573852539
    8. '                               ' → logprob: -18.87747573852539
    9. '	color' → logprob: -18.87747573852539
    10. '=color' → logprob: -19.37747573852539

Token 1061: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28278252482414246
    2. '               ' → logprob: -1.4077825546264648
    3. ')
' → logprob: -6.532782554626465
    4. '                
' → logprob: -9.907782554626465
    5. '<|end|>' → logprob: -10.157782554626465
    6. '           ' → logprob: -11.157782554626465
    7. '              ' → logprob: -11.282782554626465
    8. ' )' → logprob: -11.407782554626465
    9. '                ' → logprob: -11.657782554626465
    10. ')return' → logprob: -12.032782554626465

Token 1062: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000865487614646554
    2. 'result' → logprob: -7.750865459442139
    3. '           ' → logprob: -8.000865936279297
    4. '```' → logprob: -10.125865936279297
    5. 'modified' → logprob: -11.125865936279297
    6. ' result' → logprob: -11.500865936279297
    7. 'remaining' → logprob: -12.125865936279297
    8. 'current' → logprob: -12.375865936279297
    9. 'filtered' → logprob: -12.375865936279297
    10. '
' → logprob: -12.500865936279297

Token 1063: ' eliminated' (ID: 61164)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.09860608726739883
    2. 'result' → logprob: -2.4736061096191406
    3. 're' → logprob: -5.723606109619141
    4. 'modified' → logprob: -5.973606109619141
    5. 'final' → logprob: -6.598606109619141
    6. '           ' → logprob: -7.348606109619141
    7. '               ' → logprob: -7.848606109619141
    8. 'processed' → logprob: -7.848606109619141
    9. 'elim' → logprob: -8.34860610961914
    10. '       ' → logprob: -8.47360610961914

Token 1064: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -5.3596853831550106e-05
    2. '_seq' → logprob: -10.625053405761719
    3. ' =' → logprob: -11.250053405761719
    4. 'sequence' → logprob: -12.000053405761719
    5. 'ed' → logprob: -12.375053405761719
    6. '=' → logprob: -12.375053405761719
    7. 'd' → logprob: -14.000053405761719
    8. 'Sequence' → logprob: -15.375053405761719
    9. '_' → logprob: -16.25005340576172
    10. ' sequence' → logprob: -16.50005340576172

Token 1065: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740782678127289
    2. ' =' → logprob: -0.9740782976150513
    3. '=self' → logprob: -14.099078178405762
    4. '       ' → logprob: -15.349078178405762
    5. '           ' → logprob: -16.099079132080078
    6. '   ' → logprob: -16.349079132080078
    7. '=
' → logprob: -16.474079132080078
    8. ':' → logprob: -17.474079132080078
    9. ' ' → logprob: -17.599079132080078
    10. '＝' → logprob: -17.599079132080078

Token 1066: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014196529053151608
    2. ' self' → logprob: -4.264196395874023
    3. '               ' → logprob: -10.389196395874023
    4. '                   ' → logprob: -13.139196395874023
    5. '(self' → logprob: -15.889196395874023
    6. '           ' → logprob: -16.514196395874023
    7. '	self' → logprob: -17.014196395874023
    8. '=self' → logprob: -17.639196395874023
    9. '   ' → logprob: -18.139196395874023
    10. '[self' → logprob: -18.764196395874023

Token 1067: '.el' (ID: 28187)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.2664652466773987
    2. '.el' → logprob: -1.766465187072754
    3. 'self' → logprob: -2.766465187072754
    4. '           ' → logprob: -10.016465187072754
    5. 'elf' → logprob: -10.891465187072754
    6. 'elim' → logprob: -11.016465187072754
    7. ' elimination' → logprob: -12.391465187072754
    8. '       ' → logprob: -12.391465187072754
    9. '.self' → logprob: -13.266465187072754
    10. ' self' → logprob: -14.016465187072754

Token 1068: 'imination' (ID: 34362)
  Prédit: 'imination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imination' → logprob: -0.000344044849043712
    2. 'im' → logprob: -8.125344276428223
    3. 'iminate' → logprob: -10.500344276428223
    4. 'imin' → logprob: -11.625344276428223
    5. 'imation' → logprob: -12.375344276428223
    6. 'min' → logprob: -12.625344276428223
    7. 'em' → logprob: -13.250344276428223
    8. 'imini' → logprob: -13.750344276428223
    9. 'ination' → logprob: -15.875344276428223
    10. '``' → logprob: -16.000343322753906

Token 1069: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -0.00013262155698612332
    2. 'strategy' → logprob: -9.00013256072998
    3. 'Strategy' → logprob: -11.62513256072998
    4. 'self' → logprob: -15.62513256072998
    5. ' strategy' → logprob: -17.750133514404297
    6. 'strateg' → logprob: -17.875133514404297
    7. '           ' → logprob: -18.375133514404297
    8. '       ' → logprob: -18.875133514404297
    9. '   ' → logprob: -19.375133514404297
    10. '               ' → logprob: -19.750133514404297

Token 1070: '.el' (ID: 28187)
  Prédit: '.el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.el' → logprob: -2.165027217415627e-05
    2. 'el' → logprob: -10.750021934509277
    3. ' .' → logprob: -16.50002098083496
    4. '.' → logprob: -17.00002098083496
    5. '	el' → logprob: -18.25002098083496
    6. '           ' → logprob: -19.00002098083496
    7. '(el' → logprob: -19.25002098083496
    8. 'El' → logprob: -19.25002098083496
    9. '.e' → logprob: -19.62502098083496
    10. '   ' → logprob: -19.75002098083496

Token 1071: 'iminate' (ID: 74373)
  Prédit: 'iminate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iminate' → logprob: -2.463036435074173e-05
    2. 'imate' → logprob: -11.375024795532227
    3. 'im' → logprob: -11.625024795532227
    4. '```' → logprob: -14.000024795532227
    5. 'em' → logprob: -14.125024795532227
    6. 'imin' → logprob: -14.125024795532227
    7. 'e' → logprob: -14.750024795532227
    8. 'imit' → logprob: -15.125024795532227
    9. 'imination' → logprob: -15.500024795532227
    10. 'emit' → logprob: -15.500024795532227

Token 1072: '(mod' (ID: 45051)
  Prédit: '(mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -4.842555426876061e-06
    2. 'modified' → logprob: -12.250004768371582
    3. '(' → logprob: -18.0000057220459
    4. '```' → logprob: -18.2500057220459
    5. '	mod' → logprob: -18.8750057220459
    6. '(updated' → logprob: -19.6250057220459
    7. '(
' → logprob: -19.6250057220459
    8. ' modified' → logprob: -19.7500057220459
    9. '               ' → logprob: -19.8750057220459
    10. ' (' → logprob: -20.3750057220459

Token 1073: 'ified' (ID: 2720)
  Prédit: 'ified'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ified' → logprob: -0.016851454973220825
    2. 'modified' → logprob: -4.141851425170898
    3. '               ' → logprob: -7.516851425170898
    4. '                   ' → logprob: -9.141851425170898
    5. 'ated' → logprob: -10.766851425170898
    6. '           ' → logprob: -10.766851425170898
    7. '_modified' → logprob: -11.141851425170898
    8. 'ited' → logprob: -11.141851425170898
    9. ' modified' → logprob: -11.266851425170898
    10. 'f' → logprob: -11.391851425170898

Token 1074: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.07399646192789078
    2. 'modified' → logprob: -2.9489965438842773
    3. 'sequence' → logprob: -4.073996543884277
    4. 'Sequence' → logprob: -6.448996543884277
    5. ' modified' → logprob: -9.198996543884277
    6. '(mod' → logprob: -10.073996543884277
    7. '           ' → logprob: -10.198996543884277
    8. 'quence' → logprob: -10.573996543884277
    9. '   ' → logprob: -10.823996543884277
    10. '_modified' → logprob: -10.948996543884277

Token 1075: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08017725497484207
    2. ')' → logprob: -2.9551773071289062
    3. ')
' → logprob: -3.7051773071289062
    4. '           ' → logprob: -8.705177307128906
    5. '
' → logprob: -9.080177307128906
    6. '                
' → logprob: -10.455177307128906
    7. '              ' → logprob: -10.830177307128906
    8. ').' → logprob: -11.080177307128906
    9. ',' → logprob: -11.955177307128906
    10. '<|end|>' → logprob: -12.205177307128906

Token 1076: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.5716304410016164e-05
    2. '           ' → logprob: -10.500035285949707
    3. '                   ' → logprob: -12.750035285949707
    4. '```' → logprob: -13.625035285949707
    5. '              ' → logprob: -13.750035285949707
    6. '       ' → logprob: -13.750035285949707
    7. 'min' → logprob: -14.125035285949707
    8. '                
' → logprob: -15.375035285949707
    9. '                ' → logprob: -15.500035285949707
    10. '   ' → logprob: -15.875035285949707

Token 1077: ' remaining' (ID: 15448)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.02250666171312332
    2. 'remaining' (adapté à ' remaining') → logprob: -3.8975067138671875
    3. 'if' → logprob: -6.6475067138671875
    4. '               ' → logprob: -8.397506713867188
    5. 'rem' → logprob: -9.147506713867188
    6. 'current' → logprob: -9.397506713867188
    7. 'result' → logprob: -9.397506713867188
    8. 'remain' → logprob: -10.147506713867188
    9. 'length' → logprob: -10.397506713867188
    10. 'res' → logprob: -10.397506713867188

Token 1078: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6921238303184509
    2. '_length' → logprob: -1.0671238899230957
    3. '_size' → logprob: -2.3171238899230957
    4. '=' → logprob: -3.1921238899230957
    5. '_count' → logprob: -4.692123889923096
    6. '_len' → logprob: -5.067123889923096
    7. '   ' → logprob: -9.317123413085938
    8. '_remaining' → logprob: -9.442123413085938
    9. '_tokens' → logprob: -9.692123413085938
    10. '_chars' → logprob: -10.317123413085938

Token 1079: ' eliminated' (ID: 61164)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -6.0868278524139896e-05
    2. ' eliminated' → logprob: -9.75006103515625
    3. '           ' → logprob: -13.25006103515625
    4. 'elim' → logprob: -14.37506103515625
    5. 'elapsed' → logprob: -16.87506103515625
    6. 'ele' → logprob: -17.00006103515625
    7. '   ' → logprob: -17.50006103515625
    8. '                   ' → logprob: -17.50006103515625
    9. '	el' → logprob: -17.62506103515625
    10. 'elong' → logprob: -17.87506103515625

Token 1080: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -7.159660890465602e-05
    2. '               ' → logprob: -10.50007152557373
    3. '           ' → logprob: -10.75007152557373
    4. 'sequence' → logprob: -11.75007152557373
    5. '   ' → logprob: -12.50007152557373
    6. '                   ' → logprob: -13.50007152557373
    7. '_SEQUENCE' → logprob: -13.50007152557373
    8. '       ' → logprob: -13.75007152557373
    9. '.el' → logprob: -14.00007152557373
    10. '.sequence' → logprob: -14.25007152557373

Token 1081: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -4.320199877838604e-07
    2. 'length' → logprob: -14.75
    3. '.' → logprob: -17.75
    4. ' .' → logprob: -18.625
    5. ':length' → logprob: -20.75
    6. '   ' → logprob: -21.0
    7. '.count' → logprob: -21.375
    8. ').' → logprob: -21.75
    9. '	length' → logprob: -22.0
    10. '.LENGTH' → logprob: -22.0

Token 1082: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1083: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001310719089815393
    2. ' if' → logprob: -9.875130653381348
    3. 'if' → logprob: -10.125130653381348
    4. '           ' → logprob: -11.000130653381348
    5. '                   ' → logprob: -11.250130653381348
    6. '```' → logprob: -12.500130653381348
    7. '<|end|>' → logprob: -13.375130653381348
    8. '                       ' → logprob: -13.750130653381348
    9. '                
' → logprob: -14.125130653381348
    10. '                               ' → logprob: -14.375130653381348

Token 1084: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.023728489875793457
    2. '               ' → logprob: -3.773728370666504
    3. 'min' → logprob: -8.023728370666504
    4. ' if' → logprob: -8.773728370666504
    5. '                   ' → logprob: -15.023728370666504
    6. '                       ' → logprob: -16.27372932434082
    7. ' min' → logprob: -16.77372932434082
    8. '           ' → logprob: -16.89872932434082
    9. '```' → logprob: -17.02372932434082
    10. '                               ' → logprob: -17.77372932434082

Token 1085: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -2.15310683415737e-05
    2. ' remaining' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.37502098083496
    4. 'remain' → logprob: -19.12502098083496
    5. '               ' → logprob: -19.62502098083496
    6. '           ' → logprob: -20.00002098083496
    7. 'Remaining' → logprob: -20.37502098083496
    8. '.remaining' → logprob: -20.50002098083496
    9. '                   ' → logprob: -21.00002098083496
    10. '_remaining' → logprob: -21.12502098083496

Token 1086: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2526870369911194
    2. '<' → logprob: -1.5026869773864746
    3. '<|end|>' → logprob: -8.002687454223633
    4. '               ' → logprob: -9.377687454223633
    5. '<int' → logprob: -9.502687454223633
    6. '                   ' → logprob: -9.877687454223633
    7. '<size' → logprob: -10.252687454223633
    8. '[' → logprob: -10.377687454223633
    9. '                ' → logprob: -10.627687454223633
    10. '                               ' → logprob: -10.877687454223633

Token 1087: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.688212614681106e-05
    2. ' min' → logprob: -11.000017166137695
    3. '           ' → logprob: -16.750017166137695
    4. '               ' → logprob: -17.000017166137695
    5. '                   ' → logprob: -19.250017166137695
    6. '	min' → logprob: -19.500017166137695
    7. '   ' → logprob: -21.125017166137695
    8. '_min' → logprob: -21.750017166137695
    9. 'minimum' → logprob: -21.750017166137695
    10. '=min' → logprob: -21.750017166137695

Token 1088: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -1.4736459888808895e-05
    2. 'remaining' → logprob: -11.500014305114746
    3. '               ' → logprob: -13.500014305114746
    4. 'Remaining' → logprob: -13.500014305114746
    5. 'min' → logprob: -14.500014305114746
    6. '                   ' → logprob: -14.500014305114746
    7. '_min' → logprob: -15.500014305114746
    8. '```' → logprob: -15.875014305114746
    9. '           ' → logprob: -16.125015258789062
    10. '_rem' → logprob: -16.375015258789062

Token 1089: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.750128448009491
    2. ':' → logprob: -0.875128448009491
    3. '                   ' → logprob: -2.2501285076141357
    4. '               ' → logprob: -5.750128269195557
    5. '                       ' → logprob: -6.250128269195557
    6. '           ' → logprob: -9.125128746032715
    7. '                           ' → logprob: -9.250128746032715
    8. '):
' → logprob: -9.375128746032715
    9. '                  ' → logprob: -11.000128746032715
    10. '=' → logprob: -11.375128746032715

Token 1090: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.024704983457922935
    2. ' min' → logprob: -4.399704933166504
    3. '                       ' → logprob: -5.149704933166504
    4. 'min' → logprob: -5.774704933166504
    5. '                           ' → logprob: -6.274704933166504
    6. '               ' → logprob: -7.399704933166504
    7. '                               ' → logprob: -7.899704933166504
    8. '                                   ' → logprob: -9.274704933166504
    9. '                                           ' → logprob: -9.274704933166504
    10. '                                       ' → logprob: -9.899704933166504

Token 1091: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -1.1398757123970427e-05
    2. ' min' → logprob: -11.500011444091797
    3. '                   ' → logprob: -13.750011444091797
    4. '               ' → logprob: -16.750011444091797
    5. '           ' → logprob: -17.625011444091797
    6. 'move' → logprob: -18.875011444091797
    7. 'pos' → logprob: -19.000011444091797
    8. '                       ' → logprob: -19.250011444091797
    9. '	min' → logprob: -20.625011444091797
    10. '```' → logprob: -20.625011444091797

Token 1092: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -1.0564331205387134e-05
    2. 'Remaining' → logprob: -12.12501049041748
    3. '                   ' → logprob: -12.62501049041748
    4. 'remaining' → logprob: -13.75001049041748
    5. '               ' → logprob: -16.000011444091797
    6. '_rem' → logprob: -16.125011444091797
    7. '```' → logprob: -16.375011444091797
    8. '_' → logprob: -16.625011444091797
    9. '_possible' → logprob: -16.625011444091797
    10. '_position' → logprob: -16.875011444091797

Token 1093: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061968810856342316
    2. ' =' → logprob: -2.8119688034057617
    3. '=
' → logprob: -15.311968803405762
    4. ',' → logprob: -15.561968803405762
    5. '＝' → logprob: -15.561968803405762
    6. '                   ' → logprob: -15.811968803405762
    7. '=

' → logprob: -15.936968803405762
    8. '=min' → logprob: -16.311969757080078
    9. '                       ' → logprob: -17.061969757080078
    10. '=True' → logprob: -17.436969757080078

Token 1094: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.0002614550176076591
    2. ' remaining' → logprob: -8.250261306762695
    3. '                   ' → logprob: -16.250261306762695
    4. 'remain' → logprob: -17.250261306762695
    5. '               ' → logprob: -17.500261306762695
    6. '   ' → logprob: -18.500261306762695
    7. '.remaining' → logprob: -19.125261306762695
    8. '           ' → logprob: -19.750261306762695
    9. '                       ' → logprob: -19.750261306762695
    10. '_remaining' → logprob: -20.375261306762695

Token 1095: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17875711619853973
    2. 'return' → logprob: -2.5537571907043457
    3. '
' → logprob: -3.4287571907043457
    4. '<|end|>' → logprob: -3.4287571907043457
    5. ' return' → logprob: -4.428757190704346
    6. '        
' → logprob: -6.178757190704346
    7. '               ' → logprob: -6.553757190704346
    8. '        ' → logprob: -6.553757190704346
    9. '                   ' → logprob: -7.053757190704346
    10. ':return' → logprob: -7.428757190704346

Token 1096: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.53173828125
    2. 'return' → logprob: -1.65673828125
    3. '                   ' → logprob: -2.15673828125
    4. ' return' → logprob: -3.65673828125
    5. '               ' → logprob: -3.65673828125
    6. '<|end|>' → logprob: -3.78173828125
    7. '
' → logprob: -4.53173828125
    8. '```' → logprob: -4.65673828125
    9. '                    
' → logprob: -6.03173828125
    10. '        
' → logprob: -6.53173828125

Token 1097: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.27309003472328186
    2. '       ' → logprob: -1.5230900049209595
    3. ' return' → logprob: -4.02308988571167
    4. '
' → logprob: -5.89808988571167
    5. '   ' → logprob: -8.773090362548828
    6. '	return' → logprob: -9.648090362548828
    7. '        
' → logprob: -10.023090362548828
    8. '	' → logprob: -11.398090362548828
    9. '    ' → logprob: -12.523090362548828
    10. '      ' → logprob: -12.648090362548828

Token 1098: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -4.842555426876061e-06
    2. ' min' → logprob: -12.250004768371582
    3. '	min' → logprob: -22.0000057220459
    4. 'max' → logprob: -22.5000057220459
    5. '_min' → logprob: -22.7500057220459
    6. '(min' → logprob: -23.0000057220459
    7. '[min' → logprob: -23.2500057220459
    8. '   ' → logprob: -23.6250057220459
    9. '=min' → logprob: -25.2500057220459
    10. '```' → logprob: -25.2500057220459

Token 1099: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -2.546478935983032e-05
    2. 'Remaining' → logprob: -10.750025749206543
    3. '_removed' → logprob: -13.750025749206543
    4. 'remaining' → logprob: -14.000025749206543
    5. '_min' → logprob: -14.375025749206543
    6. 'min' → logprob: -15.125025749206543
    7. '_rem' → logprob: -15.125025749206543
    8. 's' → logprob: -16.000024795532227
    9. '_missing' → logprob: -16.125024795532227
    10. 't' → logprob: -16.125024795532227

Token 1100: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1101: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1102: ' Input' (ID: 10090)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.6084181070327759
    2. 'Test' → logprob: -1.8584181070327759
    3. '__' → logprob: -2.1084179878234863
    4. 'Solution' → logprob: -3.6084179878234863
    5. 'Random' → logprob: -3.8584179878234863
    6. 'Minimal' → logprob: -3.8584179878234863
    7. 'Move' → logprob: -3.9834179878234863
    8. 'Solver' → logprob: -4.358417987823486
    9. 'Character' → logprob: -4.358417987823486
    10. 'Advanced' → logprob: -4.483417987823486

Token 1103: 'Reader' (ID: 7171)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.550614058971405
    2. 'Reader' → logprob: -1.5506141185760498
    3. 'Processor' → logprob: -2.80061411857605
    4. 'Handler' → logprob: -2.92561411857605
    5. 'Data' → logprob: -3.55061411857605
    6. ':' → logprob: -3.92561411857605
    7. 'Output' → logprob: -3.92561411857605
    8. ':
' → logprob: -4.300613880157471
    9. 'Provider' → logprob: -5.925613880157471
    10. 'Tokenizer' → logprob: -6.050613880157471

Token 1104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00030829108436591923
    2. ':
' → logprob: -8.1253080368042
    3. ':def' → logprob: -12.1253080368042
    4. '<|end|>' → logprob: -12.6253080368042
    5. '():' → logprob: -13.6253080368042
    6. ':

' → logprob: -13.8753080368042
    7. '):' → logprob: -14.8753080368042
    8. '(object' → logprob: -15.1253080368042
    9. '(' → logprob: -15.3753080368042
    10. '```' → logprob: -16.250308990478516

Token 1105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22943760454654694
    2. 'class' → logprob: -1.6044375896453857
    3. '```' → logprob: -6.104437828063965
    4. '<|end|>' → logprob: -7.229437828063965
    5. 'import' → logprob: -7.604437828063965
    6. ' class' → logprob: -9.229437828063965
    7. 'from' → logprob: -9.229437828063965
    8. '
' → logprob: -9.229437828063965
    9. 'def' → logprob: -9.479437828063965
    10. ':' → logprob: -9.479437828063965

Token 1106: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.58307284116745
    2. 'class' → logprob: -1.0830729007720947
    3. '   ' → logprob: -2.3330729007720947
    4. ' def' → logprob: -5.708072662353516
    5. ':' → logprob: -7.083072662353516
    6. '```' → logprob: -7.083072662353516
    7. '<|end|>' → logprob: -7.833072662353516
    8. 'import' → logprob: -8.208072662353516
    9. 'from' → logprob: -8.708072662353516
    10. ' class' → logprob: -9.208072662353516

Token 1107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01848270185291767
    2. 'def' → logprob: -4.518482685089111
    3. '"""' → logprob: -5.018482685089111
    4. 'class' → logprob: -8.64348316192627
    5. '"""
' → logprob: -8.64348316192627
    6. '```' → logprob: -9.01848316192627
    7. '
' → logprob: -9.76848316192627
    8. ' def' → logprob: -9.89348316192627
    9. ':' → logprob: -10.26848316192627
    10. 'staticmethod' → logprob: -10.39348316192627

Token 1108: ' Handles' (ID: 47620)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07399790734052658
    2. 'class' → logprob: -3.073997974395752
    3. '@' → logprob: -3.823997974395752
    4. ' def' → logprob: -6.073997974395752
    5. '
' → logprob: -7.323997974395752
    6. '   ' → logprob: -9.448997497558594
    7. 'staticmethod' → logprob: -9.573997497558594
    8. '"""
' → logprob: -9.698997497558594
    9. '@dat' → logprob: -10.573997497558594
    10. 'from' → logprob: -10.823997497558594

Token 1109: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18234461545944214
    2. 'reading' → logprob: -3.682344675064087
    3. ' reading' → logprob: -3.682344675064087
    4. 'staticmethod' → logprob: -3.932344675064087
    5. '@' → logprob: -4.057344436645508
    6. '   ' → logprob: -4.182344436645508
    7. ' parsing' → logprob: -4.182344436645508
    8. 'input' → logprob: -4.432344436645508
    9. ' input' → logprob: -4.557344436645508
    10. 'import' → logprob: -4.932344436645508

Token 1110: ' reading' (ID: 6085)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25917989015579224
    2. '   ' → logprob: -1.6341798305511475
    3. ':' → logprob: -5.134180068969727
    4. ':
' → logprob: -5.259180068969727
    5. ' and' → logprob: -5.634180068969727
    6. 'and' → logprob: -5.759180068969727
    7. '<|end|>' → logprob: -5.884180068969727
    8. ' def' → logprob: -6.009180068969727
    9. '
' → logprob: -6.384180068969727
    10. '(self' → logprob: -6.759180068969727

Token 1111: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31830981373786926
    2. ':' → logprob: -2.193309783935547
    3. ':
' → logprob: -3.193309783935547
    4. 'def' → logprob: -3.318309783935547
    5. ' and' → logprob: -3.693309783935547
    6. 'and' → logprob: -3.693309783935547
    7. '<|end|>' → logprob: -4.443309783935547
    8. 'from' → logprob: -4.818309783935547
    9. '
' → logprob: -5.693309783935547
    10. '(' → logprob: -5.693309783935547

Token 1112: ' supports' (ID: 17203)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.10417231172323227
    2. ' parsing' → logprob: -2.4791722297668457
    3. ' validation' → logprob: -4.979172229766846
    4. ' processing' → logprob: -6.104172229766846
    5. 'def' → logprob: -6.104172229766846
    6. 'processing' → logprob: -6.729172229766846
    7. ' par' → logprob: -6.854172229766846
    8. 'validation' → logprob: -7.729172229766846
    9. ' output' → logprob: -8.354172706604004
    10. 'output' → logprob: -8.479172706604004

Token 1113: ' multiple' (ID: 7598)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3348964750766754
    2. 'from' → logprob: -2.0848965644836426
    3. 'self' → logprob: -2.5848965644836426
    4. 'reading' → logprob: -3.7098965644836426
    5. ' def' → logprob: -4.209896564483643
    6. ' reading' → logprob: -5.209896564483643
    7. 'staticmethod' → logprob: -5.459896564483643
    8. '@' → logprob: -5.709896564483643
    9. 'optional' → logprob: -5.709896564483643
    10. ' from' → logprob: -5.959896564483643

Token 1114: ' data' (ID: 1238)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14368776977062225
    2. 'lines' → logprob: -2.2686877250671387
    3. ' lines' → logprob: -3.7686877250671387
    4. ' def' → logprob: -5.143687725067139
    5. '_lines' → logprob: -7.518687725067139
    6. 'line' → logprob: -7.893687725067139
    7. 'methods' → logprob: -8.268688201904297
    8. '
' → logprob: -9.268688201904297
    9. ' methods' → logprob: -10.143688201904297
    10. 'test' → logprob: -10.643688201904297

Token 1115: ' sets' (ID: 11982)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.3819713890552521
    2. ' lines' → logprob: -1.3819713592529297
    3. '_lines' → logprob: -3.1319713592529297
    4. '=' → logprob: -4.75697135925293
    5. 'sources' → logprob: -5.38197135925293
    6. ' sources' → logprob: -6.13197135925293
    7. 'points' → logprob: -6.88197135925293
    8. '_sources' → logprob: -7.25697135925293
    9. '   ' → logprob: -7.38197135925293
    10. '
' → logprob: -7.63197135925293

Token 1116: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7884039878845215
    2. ',' → logprob: -2.1634039878845215
    3. ':
' → logprob: -2.1634039878845215
    4. ':' → logprob: -2.2884039878845215
    5. '
' → logprob: -2.9134039878845215
    6. '.' → logprob: -3.0384039878845215
    7. ' and' → logprob: -3.0384039878845215
    8. 'and' → logprob: -3.2884039878845215
    9. '.
' → logprob: -4.2884039878845215
    10. '(' → logprob: -5.5384039878845215

Token 1117: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03046463429927826
    2. '   ' → logprob: -3.5304646492004395
    3. '```' → logprob: -7.7804646492004395
    4. '    
' → logprob: -8.405464172363281
    5. '

' → logprob: -10.530464172363281
    6. '<|end|>' → logprob: -10.905464172363281
    7. 'class' → logprob: -11.780464172363281
    8. '``' → logprob: -12.030464172363281
    9. ')' → logprob: -12.780464172363281
    10. '
' → logprob: -13.030464172363281

Token 1118: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015482377260923386
    2. '   ' → logprob: -4.265482425689697
    3. 'def' → logprob: -6.765482425689697
    4. '```' → logprob: -9.265481948852539
    5. ' def' → logprob: -10.390481948852539
    6. '    
' → logprob: -10.765481948852539
    7. '

' → logprob: -11.390481948852539
    8. 'class' → logprob: -12.640481948852539
    9. '
' → logprob: -13.265481948852539
    10. ')' → logprob: -14.140481948852539

Token 1119: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2586587965488434
    2. '   ' → logprob: -1.508658766746521
    3. ' def' → logprob: -5.0086588859558105
    4. '	def' → logprob: -11.383658409118652
    5. '```' → logprob: -11.383658409118652
    6. '
' → logprob: -13.633658409118652
    7. 'import' → logprob: -14.383658409118652
    8. '    
' → logprob: -14.508658409118652
    9. 'class' → logprob: -14.758658409118652
    10. ':def' → logprob: -15.008658409118652

Token 1120: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00016396844875998795
    2. ' def' → logprob: -8.750164031982422
    3. '   ' → logprob: -12.250164031982422
    4. '
' → logprob: -15.375164031982422
    5. 'import' → logprob: -15.750164031982422
    6. 'from' → logprob: -16.000164031982422
    7. '```' → logprob: -16.250164031982422
    8. '@' → logprob: -16.375164031982422
    9. 'class' → logprob: -17.500164031982422
    10. '	def' → logprob: -18.125164031982422

Token 1121: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.1907646507024765
    2. '__' → logprob: -2.0657646656036377
    3. 'read' → logprob: -3.3157646656036377
    4. 'init' → logprob: -4.815764427185059
    5. 'next' → logprob: -6.815764427185059
    6. 'classmethod' → logprob: -6.940764427185059
    7. 'def' → logprob: -8.815764427185059
    8. 'iter' → logprob: -9.440764427185059
    9. 'property' → logprob: -9.440764427185059
    10. '...' → logprob: -9.940764427185059

Token 1122: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0027242754586040974
    2. 'iter' → logprob: -6.5027241706848145
    3. 'staticmethod' → logprob: -6.7527241706848145
    4. 'call' → logprob: -10.627724647521973
    5. 'next' → logprob: -10.877724647521973
    6. ' init' → logprob: -12.377724647521973
    7. 'int' → logprob: -13.377724647521973
    8. 'classmethod' → logprob: -13.502724647521973
    9. 'stdin' → logprob: -14.252724647521973
    10. '`' → logprob: -14.752724647521973

Token 1123: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007413532119244337
    2. '__(' → logprob: -5.007413387298584
    3. 'self' → logprob: -7.382413387298584
    4. '=self' → logprob: -10.507413864135742
    5. '```' → logprob: -11.132413864135742
    6. '(' → logprob: -11.882413864135742
    7. 'import' → logprob: -12.132413864135742
    8. '   ' → logprob: -12.257413864135742
    9. 'def' → logprob: -12.632413864135742
    10. '_(' → logprob: -12.882413864135742

Token 1124: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.56364209135063e-05
    2. ')' → logprob: -9.875065803527832
    3. '):
' → logprob: -11.750065803527832
    4. ' self' → logprob: -12.625065803527832
    5. '(self' → logprob: -13.375065803527832
    6. '   ' → logprob: -14.750065803527832
    7. '       ' → logprob: -14.875065803527832
    8. '	self' → logprob: -15.875065803527832
    9. '
' → logprob: -16.000064849853516
    10. '):' → logprob: -16.000064849853516

Token 1125: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11083744466304779
    2. '):
' → logprob: -2.735837459564209
    3. ',' → logprob: -3.735837459564209
    4. '   ' → logprob: -4.610837459564209
    5. '       ' → logprob: -5.860837459564209
    6. '(self' → logprob: -6.110837459564209
    7. '):' → logprob: -7.360837459564209
    8. ',self' → logprob: -8.11083698272705
    9. ')' → logprob: -8.86083698272705
    10. ' self' → logprob: -9.86083698272705

Token 1126: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024323819670826197
    2. '   ' → logprob: -6.252432346343994
    3. '
' → logprob: -8.002432823181152
    4. ' self' → logprob: -9.627432823181152
    5. '       ' → logprob: -9.877432823181152
    6. ')' → logprob: -11.002432823181152
    7. 'def' → logprob: -11.002432823181152
    8. 'import' → logprob: -12.252432823181152
    9. '(self' → logprob: -12.752432823181152
    10. '	self' → logprob: -12.752432823181152

Token 1127: ' pass' (ID: 1853)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1184326708316803
    2. 'pass' (adapté à ' pass') → logprob: -2.2434327602386475
    3. 'import' → logprob: -5.493432521820068
    4. '   ' → logprob: -7.243432521820068
    5. ' self' → logprob: -7.743432521820068
    6. '       ' → logprob: -8.743432998657227
    7. ' pass' → logprob: -8.993432998657227
    8. '
' → logprob: -10.493432998657227
    9. 'def' → logprob: -11.618432998657227
    10. 'from' → logprob: -12.493432998657227

Token 1128: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0707118958234787
    2. '
' → logprob: -3.320711851119995
    3. 'def' → logprob: -3.445711851119995
    4. ' def' → logprob: -8.695712089538574
    5. '```' → logprob: -10.070712089538574
    6. '    
' → logprob: -10.320712089538574
    7. 'import' → logprob: -11.570712089538574
    8. '<|end|>' → logprob: -12.820712089538574
    9. '

' → logprob: -13.445712089538574
    10. '	def' → logprob: -13.695712089538574

Token 1129: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2553495764732361
    2. '   ' → logprob: -1.5053496360778809
    3. '
' → logprob: -5.755349636077881
    4. ' def' → logprob: -8.630349159240723
    5. '```' → logprob: -9.755349159240723
    6. 'import' → logprob: -11.755349159240723
    7. '    
' → logprob: -13.130349159240723
    8. '	def' → logprob: -13.505349159240723
    9. 'from' → logprob: -14.755349159240723
    10. '`' → logprob: -16.00535011291504

Token 1130: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.3464544432936236e-05
    2. '   ' → logprob: -10.250043869018555
    3. ' def' → logprob: -11.750043869018555
    4. '
' → logprob: -16.375043869018555
    5. 'import' → logprob: -17.375043869018555
    6. 'from' → logprob: -18.000043869018555
    7. '```' → logprob: -19.625043869018555
    8. '	def' → logprob: -20.250043869018555
    9. 'class' → logprob: -21.125043869018555
    10. '@' → logprob: -21.750043869018555

Token 1131: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -2.696889623621246e-06
    2. 'next' → logprob: -13.37500286102295
    3. ' read' → logprob: -14.37500286102295
    4. '_read' → logprob: -15.50000286102295
    5. 'parse' → logprob: -16.000001907348633
    6. 'reads' → logprob: -16.625001907348633
    7. 'from' → logprob: -16.875001907348633
    8. '__' → logprob: -17.125001907348633
    9. '.read' → logprob: -17.375001907348633
    10. ' readline' → logprob: -18.375001907348633

Token 1132: '_dataset' (ID: 40568)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.4972829222679138
    2. '(self' → logprob: -0.9972829222679138
    3. 'self' → logprob: -4.497282981872559
    4. 'line' → logprob: -4.622282981872559
    5. '_sequence' → logprob: -6.997282981872559
    6. '_input' → logprob: -7.247282981872559
    7. '_string' → logprob: -9.497282981872559
    8. '_self' → logprob: -9.747282981872559
    9. '_lines' → logprob: -10.122282981872559
    10. '()' → logprob: -10.497282981872559

Token 1133: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9146995327901095e-05
    2. '(' → logprob: -11.000019073486328
    3. 'self' → logprob: -13.000019073486328
    4. '()' → logprob: -16.500019073486328
    5. '(
' → logprob: -17.375019073486328
    6. ' (' → logprob: -17.875019073486328
    7. 'from' → logprob: -18.625019073486328
    8. '(s' → logprob: -19.125019073486328
    9. '(Self' → logprob: -19.750019073486328
    10. '   ' → logprob: -19.875019073486328

Token 1134: ')' (ID: 8)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4749041199684143
    2. '(self' → logprob: -1.4749040603637695
    3. ',' → logprob: -2.7249040603637695
    4. ')' → logprob: -2.8499040603637695
    5. '):
' → logprob: -3.8499040603637695
    6. '):' → logprob: -5.9749040603637695
    7. ')(' → logprob: -6.9749040603637695
    8. '   ' → logprob: -8.09990406036377
    9. '       ' → logprob: -8.34990406036377
    10. 's' → logprob: -8.72490406036377

Token 1135: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015574743738397956
    2. 'self' → logprob: -6.501557350158691
    3. '->' → logprob: -10.126557350158691
    4. '       ' → logprob: -12.501557350158691
    5. '   ' → logprob: -12.876557350158691
    6. '(' → logprob: -12.876557350158691
    7. ' ->' → logprob: -13.001557350158691
    8. '```' → logprob: -13.501557350158691
    9. ')' → logprob: -14.626557350158691
    10. '(
' → logprob: -14.876557350158691

Token 1136: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.000182921823579818
    2. 'Tuple' → logprob: -9.50018310546875
    3. 'List' → logprob: -9.62518310546875
    4. ' Optional' → logprob: -10.62518310546875
    5. 'int' → logprob: -11.62518310546875
    6. 'optional' → logprob: -11.87518310546875
    7. '(Optional' → logprob: -14.62518310546875
    8. 'None' → logprob: -14.75018310546875
    9. '	Optional' → logprob: -15.25018310546875
    10. 'Character' → logprob: -15.87518310546875

Token 1137: '[' (ID: 58)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.33565422892570496
    2. '[List' → logprob: -1.5856542587280273
    3. '[' → logprob: -2.8356542587280273
    4. '[str' → logprob: -3.8356542587280273
    5. 'int' → logprob: -10.085654258728027
    6. '[list' → logprob: -12.710654258728027
    7. '[Int' → logprob: -13.335654258728027
    8. '[
' → logprob: -14.085654258728027
    9. 'Tuple' → logprob: -14.835654258728027
    10. '[T' → logprob: -15.085654258728027

Token 1138: 'Tuple' (ID: 40048)
  Prédit: 'Linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Linear' → logprob: -0.7531489133834839
    2. 'Tuple' → logprob: -1.3781489133834839
    3. 'List' → logprob: -1.7531489133834839
    4. 'Character' → logprob: -2.7531490325927734
    5. 'str' → logprob: -3.3781490325927734
    6. 'int' → logprob: -5.253149032592773
    7. 'tuple' → logprob: -8.128149032592773
    8. 'Line' → logprob: -8.628149032592773
    9. '[str' → logprob: -9.878149032592773
    10. '[List' → logprob: -10.003149032592773

Token 1139: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.001180704333819449
    2. 'int' → logprob: -7.001180648803711
    3. '[List' → logprob: -8.251180648803711
    4. '[str' → logprob: -11.876180648803711
    5. 'List' → logprob: -14.126180648803711
    6. '(int' → logprob: -15.001180648803711
    7. ',int' → logprob: -15.751180648803711
    8. '   ' → logprob: -17.00118064880371
    9. '[' → logprob: -18.37618064880371
    10. ',List' → logprob: -18.50118064880371

Token 1140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006380964769050479
    2. ',List' → logprob: -7.375638008117676
    3. ',int' → logprob: -11.750638008117676
    4. ',
' → logprob: -13.500638008117676
    5. ',str' → logprob: -13.500638008117676
    6. ' ,' → logprob: -14.750638008117676
    7. ',list' → logprob: -16.500638961791992
    8. ',bool' → logprob: -16.500638961791992
    9. '[int' → logprob: -16.625638961791992
    10. '[List' → logprob: -16.625638961791992

Token 1141: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.2793804407119751
    2. 'str' → logprob: -1.529380440711975
    3. 'int' → logprob: -3.6543803215026855
    4. ' List' → logprob: -7.1543803215026855
    5. ' str' → logprob: -8.529380798339844
    6. 'Str' → logprob: -9.529380798339844
    7. 'Linear' → logprob: -9.904380798339844
    8. 'list' → logprob: -10.154380798339844
    9. ' int' → logprob: -11.279380798339844
    10. 'Sequence' → logprob: -11.904380798339844

Token 1142: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.8074162653647363e-05
    2. '[str' → logprob: -11.250018119812012
    3. 'int' → logprob: -13.000018119812012
    4. '[' → logprob: -13.750018119812012
    5. ',' → logprob: -14.125018119812012
    6. ',int' → logprob: -14.500018119812012
    7. ']:
' → logprob: -16.125017166137695
    8. ']]:
' → logprob: -16.375017166137695
    9. '[Int' → logprob: -17.500017166137695
    10. ']int' → logprob: -17.625017166137695

Token 1143: ']]' (ID: 8928)
  Prédit: ']]:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.37960779666900635
    2. ',' → logprob: -1.3796077966690063
    3. ']]' → logprob: -2.754607677459717
    4. ']):
' → logprob: -8.129608154296875
    5. ')]' → logprob: -9.754608154296875
    6. ']' → logprob: -9.754608154296875
    7. ']])' → logprob: -10.754608154296875
    8. '   ' → logprob: -11.004608154296875
    9. ' ]' → logprob: -11.129608154296875
    10. ']:
' → logprob: -11.254608154296875

Token 1144: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17884483933448792
    2. ')' → logprob: -2.053844928741455
    3. ',' → logprob: -3.928844928741455
    4. '):' → logprob: -4.553844928741455
    5. '   ' → logprob: -5.678844928741455
    6. 'self' → logprob: -7.678844928741455
    7. '(self' → logprob: -7.803844928741455
    8. '       ' → logprob: -7.803844928741455
    9. ':
' → logprob: -8.428844451904297
    10. '():
' → logprob: -9.053844451904297

Token 1145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002593130338937044
    2. ' line' → logprob: -8.625259399414062
    3. 'try' → logprob: -9.875259399414062
    4. '```' → logprob: -11.625259399414062
    5. 'line' → logprob: -12.125259399414062
    6. '   ' → logprob: -12.125259399414062
    7. 'input' → logprob: -12.875259399414062
    8. '#' → logprob: -13.750259399414062
    9. ' try' → logprob: -13.875259399414062
    10. 'import' → logprob: -14.375259399414062

Token 1146: ' try' (ID: 2075)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10234048962593079
    2. 'try' (adapté à ' try') → logprob: -2.3523404598236084
    3. '       ' → logprob: -6.3523406982421875
    4. 'n' → logprob: -8.977340698242188
    5. ' line' → logprob: -9.227340698242188
    6. 'raw' → logprob: -10.102340698242188
    7. 'import' → logprob: -10.477340698242188
    8. '```' → logprob: -10.727340698242188
    9. 'input' → logprob: -10.852340698242188
    10. 'data' → logprob: -10.977340698242188

Token 1147: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00968986563384533
    2. ':' → logprob: -5.259689807891846
    3. ' line' → logprob: -6.134689807891846
    4. ':
' → logprob: -6.884689807891846
    5. '.readline' → logprob: -8.009690284729004
    6. 'input' → logprob: -8.384690284729004
    7. ' readline' → logprob: -8.884690284729004
    8. 'line' → logprob: -9.009690284729004
    9. '(line' → logprob: -9.134690284729004
    10. '_line' → logprob: -10.009690284729004

Token 1148: '           ' (ID: 352)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.052328746765851974
    2. '           ' → logprob: -3.3023288249969482
    3. ' line' → logprob: -4.552328586578369
    4. 'n' → logprob: -6.302328586578369
    5. '	line' → logprob: -7.927328586578369
    6. 'input' → logprob: -8.052329063415527
    7. 'data' → logprob: -8.302329063415527
    8. 'count' → logprob: -8.802329063415527
    9. 's' → logprob: -8.802329063415527
    10. '_line' → logprob: -9.052329063415527

Token 1149: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.2092212438583374
    2. 'n' → logprob: -1.7092212438583374
    3. ' line' → logprob: -5.584221363067627
    4. 'raw' → logprob: -6.834221363067627
    5. 'length' → logprob: -6.834221363067627
    6. '           ' → logprob: -7.209221363067627
    7. ' n' → logprob: -7.709221363067627
    8. '   ' → logprob: -8.084220886230469
    9. 's' → logprob: -8.959220886230469
    10. 'N' → logprob: -9.209220886230469

Token 1150: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20147405564785004
    2. ' =' → logprob: -1.7014740705490112
    3. '=line' → logprob: -9.9514741897583
    4. '()' → logprob: -12.5764741897583
    5. '=
' → logprob: -13.0764741897583
    6. 'tokens' → logprob: -13.4514741897583
    7. '=input' → logprob: -13.7014741897583
    8. '_tokens' → logprob: -14.2014741897583
    9. ':' → logprob: -14.4514741897583
    10. '.=' → logprob: -14.5764741897583

Token 1151: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.306760805164231e-05
    2. ' input' → logprob: -11.25001335144043
    3. '=input' → logprob: -21.75001335144043
    4. '(input' → logprob: -22.25001335144043
    5. '	input' → logprob: -23.12501335144043
    6. '   ' → logprob: -24.00001335144043
    7. '<input' → logprob: -24.12501335144043
    8. 'int' → logprob: -24.62501335144043
    9. '
' → logprob: -25.12501335144043
    10. 'import' → logprob: -25.50001335144043

Token 1152: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6099874973297119
    2. '()
' → logprob: -1.359987497329712
    3. '().' → logprob: -1.609987497329712
    4. '.strip' → logprob: -9.609987258911133
    5. '()
' → logprob: -11.734987258911133
    6. '()

' → logprob: -12.734987258911133
    7. '       ' → logprob: -13.359987258911133
    8. 'strip' → logprob: -13.484987258911133
    9. '())' → logprob: -13.734987258911133
    10. '().
' → logprob: -14.234987258911133

Token 1153: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019796747714281082
    2. '       ' → logprob: -4.894796848297119
    3. '.strip' → logprob: -5.019796848297119
    4. ' if' → logprob: -6.144796848297119
    5. '
' → logprob: -6.394796848297119
    6. '.rstrip' → logprob: -7.519796848297119
    7. '<|end|>' → logprob: -8.519796371459961
    8. '	       ' → logprob: -8.769796371459961
    9. 'if' → logprob: -8.769796371459961
    10. '               ' → logprob: -9.144796371459961

Token 1154: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07322810590267181
    2. 'n' → logprob: -2.698228120803833
    3. ' if' → logprob: -6.073227882385254
    4. '           ' → logprob: -7.198227882385254
    5. 'while' → logprob: -8.948227882385254
    6. ' n' → logprob: -9.698227882385254
    7. 'N' → logprob: -11.073227882385254
    8. 'num' → logprob: -11.698227882385254
    9. 'count' → logprob: -11.948227882385254
    10. 'length' → logprob: -12.073227882385254

Token 1155: ' line' (ID: 2543)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5775625109672546
    2. 'line' → logprob: -0.8275625109672546
    3. ' not' → logprob: -6.45256233215332
    4. ' line' → logprob: -10.07756233215332
    5. '#line' → logprob: -13.45256233215332
    6. 'len' → logprob: -14.45256233215332
    7. '   ' → logprob: -14.70256233215332
    8. '(line' → logprob: -15.32756233215332
    9. '	line' → logprob: -15.70256233215332
    10. '!' → logprob: -16.32756233215332

Token 1156: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5076914429664612
    2. ' ==' → logprob: -1.5076913833618164
    3. '.strip' → logprob: -1.7576913833618164
    4. '.' → logprob: -5.882691383361816
    5. '()==' → logprob: -7.132691383361816
    6. '().' → logprob: -7.632691383361816
    7. 'strip' → logprob: -9.382691383361816
    8. '===' → logprob: -10.757691383361816
    9. ' is' → logprob: -11.257691383361816
    10. '()' → logprob: -11.382691383361816

Token 1157: ' "":
' (ID: 132826)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -1.0131443738937378
    2. '''' → logprob: -1.2631443738937378
    3. '"' → logprob: -1.5131443738937378
    4. '"":' → logprob: -2.2631444931030273
    5. ''' → logprob: -3.5131444931030273
    6. ' "":
' → logprob: -10.513144493103027
    7. '''
' → logprob: -11.013144493103027
    8. ' '':
' → logprob: -11.263144493103027
    9. '"-' → logprob: -11.513144493103027
    10. '":' → logprob: -11.888144493103027

Token 1158: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010593337006866932
    2. ' or' → logprob: -5.135593414306641
    3. ':
' → logprob: -5.510593414306641
    4. '           ' → logprob: -8.63559341430664
    5. ':' → logprob: -8.88559341430664
    6. ':return' → logprob: -8.88559341430664
    7. 'return' → logprob: -9.51059341430664
    8. ' return' → logprob: -10.38559341430664
    9. '\n' → logprob: -11.13559341430664
    10. 'None' → logprob: -11.38559341430664

Token 1159: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0051126801408827305
    2. '               ' → logprob: -5.755112648010254
    3. ' return' → logprob: -6.505112648010254
    4. 'None' → logprob: -8.255112648010254
    5. '                   ' → logprob: -9.505112648010254
    6. '           ' → logprob: -9.880112648010254
    7. '
' → logprob: -10.130112648010254
    8. '   ' → logprob: -11.630112648010254
    9. ' None' → logprob: -13.505112648010254
    10. ':return' → logprob: -14.630112648010254

Token 1160: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00033665422233752906
    2. ' None' → logprob: -8.000336647033691
    3. '
' → logprob: -13.750336647033691
    4. ',None' → logprob: -16.375337600708008
    5. '(None' → logprob: -16.500337600708008
    6. '           ' → logprob: -16.875337600708008
    7. '_None' → logprob: -16.875337600708008
    8. '=None' → logprob: -18.000337600708008
    9. '               ' → logprob: -18.250337600708008
    10. '            
' → logprob: -19.250337600708008

Token 1161: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006241010967642069
    2. '
' → logprob: -5.1312408447265625
    3. '            
' → logprob: -8.256240844726562
    4. ',' → logprob: -11.506240844726562
    5. 'return' → logprob: -11.881240844726562
    6. '       ' → logprob: -12.006240844726562
    7. '<|end|>' → logprob: -12.006240844726562
    8. ' or' → logprob: -13.006240844726562
    9. '    
' → logprob: -13.131240844726562
    10. 'import' → logprob: -13.131240844726562

Token 1162: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012630375567823648
    2. '
' → logprob: -9.875125885009766
    3. '            
' → logprob: -9.875125885009766
    4. '<|end|>' → logprob: -11.625125885009766
    5. '       ' → logprob: -12.375125885009766
    6. ',' → logprob: -13.000125885009766
    7. '               ' → logprob: -13.500125885009766
    8. '          ' → logprob: -13.625125885009766
    9. '```' → logprob: -14.500125885009766
    10. '		' → logprob: -14.500125885009766

Token 1163: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.02812965400516987
    2. 'parts' → logprob: -4.278129577636719
    3. ' n' → logprob: -5.278129577636719
    4. 'N' → logprob: -5.778129577636719
    5. 'length' → logprob: -6.153129577636719
    6. 'count' → logprob: -6.653129577636719
    7. 'num' → logprob: -7.028129577636719
    8. ' parts' → logprob: -7.903129577636719
    9. '           ' → logprob: -8.028129577636719
    10. '       ' → logprob: -8.153129577636719

Token 1164: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3156055212020874
    2. ' =' → logprob: -1.3156055212020874
    3. ',' → logprob: -6.065605640411377
    4. '=int' → logprob: -10.940605163574219
    5. '   ' → logprob: -14.565605163574219
    6. '=
' → logprob: -15.190605163574219
    7. ' ,' → logprob: -15.690605163574219
    8. ',n' → logprob: -15.815605163574219
    9. '           ' → logprob: -15.940605163574219
    10. '=line' → logprob: -16.31560516357422

Token 1165: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.5491004129871726e-05
    2. ' int' → logprob: -10.000045776367188
    3. '[int' → logprob: -23.000045776367188
    4. '(int' → logprob: -24.125045776367188
    5. 'len' → logprob: -24.250045776367188
    6. '=int' → logprob: -24.375045776367188
    7. '   ' → logprob: -24.625045776367188
    8. '	int' → logprob: -25.000045776367188
    9. '<int' → logprob: -25.375045776367188
    10. '
' → logprob: -25.500045776367188

Token 1166: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0005545823951251805
    2. 'line' → logprob: -7.50055456161499
    3. '(' → logprob: -13.500555038452148
    4. ' line' → logprob: -15.500555038452148
    5. '=line' → logprob: -17.12555503845215
    6. '#line' → logprob: -18.00055503845215
    7. '[line' → logprob: -18.37555503845215
    8. '(
' → logprob: -19.25055503845215
    9. '	line' → logprob: -19.75055503845215
    10. ',line' → logprob: -20.25055503845215

Token 1167: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.014474094845354557
    2. ')' → logprob: -4.264473915100098
    3. '())
' → logprob: -8.389473915100098
    4. '.strip' → logprob: -10.389473915100098
    5. '           ' → logprob: -10.514473915100098
    6. '       ' → logprob: -11.264473915100098
    7. ')
' → logprob: -12.514473915100098
    8. '               ' → logprob: -13.014473915100098
    9. '()
' → logprob: -13.014473915100098
    10. '())' → logprob: -13.514473915100098

Token 1168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013011827832087874
    2. 'if' → logprob: -10.000129699707031
    3. ' if' → logprob: -10.000129699707031
    4. '       ' → logprob: -10.500129699707031
    5. '<|end|>' → logprob: -12.625129699707031
    6. '               ' → logprob: -13.000129699707031
    7. '   ' → logprob: -13.375129699707031
    8. '	       ' → logprob: -13.500129699707031
    9. '		' → logprob: -13.875129699707031
    10. 'except' → logprob: -15.000129699707031

Token 1169: ' if' (ID: 538)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.007362645119428635
    2. 'if' (adapté à ' if') → logprob: -5.3823628425598145
    3. '           ' → logprob: -6.0073628425598145
    4. 'line' → logprob: -8.882362365722656
    5. 'color' → logprob: -9.757362365722656
    6. ' colors' → logprob: -10.507362365722656
    7. 'chars' → logprob: -10.882362365722656
    8. 's' → logprob: -11.007362365722656
    9. '       ' → logprob: -11.632362365722656
    10. ' if' → logprob: -13.007362365722656

Token 1170: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.1008713702030946e-06
    2. ' n' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.875001907348633
    4. 'not' → logprob: -18.625001907348633
    5. '	n' → logprob: -18.875001907348633
    6. '           ' → logprob: -19.625001907348633
    7. 'n't' → logprob: -19.750001907348633
    8. '_n' → logprob: -19.750001907348633
    9. '0' → logprob: -20.000001907348633
    10. '
' → logprob: -20.375001907348633

Token 1171: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25221970677375793
    2. ' ==' → logprob: -1.5022196769714355
    3. '<=' → logprob: -8.252220153808594
    4. '===' → logprob: -11.377220153808594
    5. ' <=' → logprob: -11.627220153808594
    6. '```' → logprob: -12.752220153808594
    7. '==
' → logprob: -13.002220153808594
    8. ')==' → logprob: -13.877220153808594
    9. '()==' → logprob: -14.002220153808594
    10. '=' → logprob: -14.127220153808594

Token 1172: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. '-' → logprob: -15.000021934509277
    4. '   ' → logprob: -17.00002098083496
    5. ' -' → logprob: -17.37502098083496
    6. '  ' → logprob: -18.50002098083496
    7. '```' → logprob: -19.62502098083496
    8. '    ' → logprob: -19.87502098083496
    9. '       ' → logprob: -20.00002098083496
    10. '۰' → logprob: -20.50002098083496

Token 1173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.00000286102295
    3. '-' → logprob: -14.62500286102295
    4. '   ' → logprob: -19.000001907348633
    5. '=' → logprob: -19.375001907348633
    6. '۰' → logprob: -20.000001907348633
    7. 'EOF' → logprob: -20.125001907348633
    8. ' -' → logprob: -20.375001907348633
    9. '```' → logprob: -20.625001907348633
    10. '  ' → logprob: -20.875001907348633

Token 1174: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.025705724954605103
    2. '               ' → logprob: -4.400705814361572
    3. '           ' → logprob: -5.025705814361572
    4. ':' → logprob: -5.150705814361572
    5. ':return' → logprob: -7.275705814361572
    6. 'return' → logprob: -11.150705337524414
    7. '):
' → logprob: -11.525705337524414
    8. '       ' → logprob: -11.650705337524414
    9. ' or' → logprob: -12.025705337524414
    10. '   ' → logprob: -12.275705337524414

Token 1175: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.3954463510308415e-05
    2. '           ' → logprob: -10.000054359436035
    3. 'return' → logprob: -12.625054359436035
    4. '   ' → logprob: -13.750054359436035
    5. '	           ' → logprob: -13.750054359436035
    6. '		       ' → logprob: -14.250054359436035
    7. '			' → logprob: -14.500054359436035
    8. ':return' → logprob: -14.500054359436035
    9. '       ' → logprob: -14.750054359436035
    10. '                   ' → logprob: -14.875054359436035

Token 1176: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004971518646925688
    2. '               ' → logprob: -7.750497341156006
    3. ' return' → logprob: -9.750496864318848
    4. '           ' → logprob: -11.750496864318848
    5. '                   ' → logprob: -15.750496864318848
    6. '   ' → logprob: -16.125497817993164
    7. '	return' → logprob: -16.375497817993164
    8. '
' → logprob: -18.500497817993164
    9. ':return' → logprob: -19.375497817993164
    10. ' ' → logprob: -19.625497817993164

Token 1177: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.8889261304575484e-06
    2. ' None' → logprob: -12.500003814697266
    3. '(None' → logprob: -16.500003814697266
    4. '_None' → logprob: -18.250003814697266
    5. ',None' → logprob: -19.000003814697266
    6. '=None' → logprob: -19.125003814697266
    7. '0' → logprob: -19.875003814697266
    8. 'none' → logprob: -20.625003814697266
    9. '.None' → logprob: -22.000003814697266
    10. '  ' → logprob: -22.250003814697266

Token 1178: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009278989746235311
    2. '
' → logprob: -7.000927925109863
    3. '       ' → logprob: -11.500927925109863
    4. '            
' → logprob: -13.250927925109863
    5. ',' → logprob: -13.375927925109863
    6. '		' → logprob: -14.625927925109863
    7. '               ' → logprob: -15.125927925109863
    8. '          ' → logprob: -15.250927925109863
    9. 'n' → logprob: -15.500927925109863
    10. '	       ' → logprob: -15.625927925109863

Token 1179: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5094070477061905e-05
    2. '       ' → logprob: -11.250015258789062
    3. '            
' → logprob: -14.375015258789062
    4. '
' → logprob: -15.250015258789062
    5. '```' → logprob: -15.250015258789062
    6. '               ' → logprob: -15.250015258789062
    7. '          ' → logprob: -15.875015258789062
    8. '   ' → logprob: -16.375015258789062
    9. 'n' → logprob: -16.500015258789062
    10. '		' → logprob: -16.500015258789062

Token 1180: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' (adapté à ' colors') → logprob: -0.0097549082711339
    2. '           ' → logprob: -4.8847551345825195
    3. ' colors' → logprob: -6.7597551345825195
    4. 'line' → logprob: -7.0097551345825195
    5. 'color' → logprob: -10.00975513458252
    6. 'chars' → logprob: -11.88475513458252
    7. ' line' → logprob: -12.13475513458252
    8. '   ' → logprob: -12.25975513458252
    9. 'seq' → logprob: -12.25975513458252
    10. 'sequence' → logprob: -12.38475513458252

Token 1181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3138008415699005
    2. ' =' → logprob: -1.3138008117675781
    3. '_line' → logprob: -7.688800811767578
    4. '           ' → logprob: -10.313800811767578
    5. '=line' → logprob: -10.688800811767578
    6. 'line' → logprob: -11.688800811767578
    7. '=[]' → logprob: -12.188800811767578
    8. '   ' → logprob: -12.688800811767578
    9. ' line' → logprob: -12.813800811767578
    10. '=[]
' → logprob: -13.813800811767578

Token 1182: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.023400846868753433
    2. '[list' → logprob: -3.7734007835388184
    3. '[' → logprob: -9.023401260375977
    4. ' list' → logprob: -10.523401260375977
    5. '[List' → logprob: -13.148401260375977
    6. '[int' → logprob: -13.773401260375977
    7. '[s' → logprob: -13.898401260375977
    8. '[line' → logprob: -14.398401260375977
    9. ' [' → logprob: -14.523401260375977
    10. '[len' → logprob: -14.648401260375977

Token 1183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015810435870662332
    2. 'while' → logprob: -7.001581192016602
    3. 'for' → logprob: -7.501581192016602
    4. ' for' → logprob: -9.626581192016602
    5. '       ' → logprob: -10.626581192016602
    6. ' while' → logprob: -10.751581192016602
    7. '   ' → logprob: -12.626581192016602
    8. '               ' → logprob: -14.126581192016602
    9. '	       ' → logprob: -14.626581192016602
    10. '		' → logprob: -14.876581192016602

Token 1184: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5145745873451233
    2. 'while' → logprob: -1.1395745277404785
    3. '           ' → logprob: -3.0145745277404785
    4. 'line' → logprob: -3.6395745277404785
    5. ' for' → logprob: -5.7645745277404785
    6. 'colors' → logprob: -6.0145745277404785
    7. ' while' → logprob: -7.0145745277404785
    8. ' line' → logprob: -8.889575004577637
    9. '       ' → logprob: -9.514575004577637
    10. 'parts' → logprob: -9.639575004577637

Token 1185: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006824536249041557
    2. '_i' → logprob: -5.006824493408203
    3. '_in' → logprob: -10.006824493408203
    4. '_color' → logprob: -10.881824493408203
    5. '_tokens' → logprob: -11.256824493408203
    6. '_token' → logprob: -12.131824493408203
    7. '_
' → logprob: -12.881824493408203
    8. '_=' → logprob: -13.256824493408203
    9. '_ignore' → logprob: -13.381824493408203
    10. ' _' → logprob: -13.631824493408203

Token 1186: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020890681073069572
    2. 'in' → logprob: -3.895890712738037
    3. '_' → logprob: -8.020890235900879
    4. ' _' → logprob: -11.770890235900879
    5. 'i' → logprob: -11.895890235900879
    6. ' ' → logprob: -12.395890235900879
    7. '_in' → logprob: -14.145890235900879
    8. '_i' → logprob: -15.395890235900879
    9. '
' → logprob: -15.520890235900879
    10. ' i' → logprob: -15.770890235900879

Token 1187: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012630313634872437
    2. '_range' → logprob: -4.762630462646484
    3. '_' → logprob: -5.762630462646484
    4. '_colors' → logprob: -7.512630462646484
    5. ' range' → logprob: -8.137630462646484
    6. '_input' → logprob: -10.887630462646484
    7. '_color' → logprob: -12.137630462646484
    8. '_in' → logprob: -14.637630462646484
    9. '_i' → logprob: -15.012630462646484
    10. '_r' → logprob: -15.012630462646484

Token 1188: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10023406147956848
    2. '(n' → logprob: -2.350234031677246
    3. ' n' → logprob: -10.975234031677246
    4. '_n' → logprob: -12.350234031677246
    5. '	n' → logprob: -12.600234031677246
    6. '           ' → logprob: -14.600234031677246
    7. 's' → logprob: -14.600234031677246
    8. '
' → logprob: -15.100234031677246
    9. '   ' → logprob: -15.225234031677246
    10. '       ' → logprob: -15.475234031677246

Token 1189: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005387310869991779
    2. '):' → logprob: -6.005387306213379
    3. ':
' → logprob: -6.505387306213379
    4. '           ' → logprob: -7.255387306213379
    5. '():
' → logprob: -8.255387306213379
    6. '               ' → logprob: -8.630387306213379
    7. ':' → logprob: -8.880387306213379
    8. '):
' → logprob: -9.755387306213379
    9. '       ' → logprob: -11.005387306213379
    10. '()):
' → logprob: -11.380387306213379

Token 1190: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017322985222563148
    2. ' line' → logprob: -6.626732349395752
    3. 'line' → logprob: -9.001731872558594
    4. '#line' → logprob: -9.751731872558594
    5. '	           ' → logprob: -10.126731872558594
    6. ' lines' → logprob: -10.501731872558594
    7. '<|end|>' → logprob: -10.501731872558594
    8. 'colors' → logprob: -10.751731872558594
    9. 'tokens' → logprob: -10.876731872558594
    10. ':' → logprob: -11.251731872558594

Token 1191: ' col' (ID: 996)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.23318150639533997
    2. 'color' → logprob: -1.8581814765930176
    3. 'c' → logprob: -2.9831814765930176
    4. 'line' → logprob: -6.733181476593018
    5. ' colors' → logprob: -9.983181953430176
    6. 'col' (adapté à ' col') → logprob: -10.108181953430176
    7. 'clr' → logprob: -10.233181953430176
    8. 'parts' → logprob: -10.858181953430176
    9. '           ' → logprob: -11.358181953430176
    10. 'val' → logprob: -11.733181953430176

Token 1192: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.00015431294741574675
    2. '=' → logprob: -9.375154495239258
    3. ' =' → logprob: -9.625154495239258
    4. 'ors' → logprob: -13.750154495239258
    5. '_or' → logprob: -14.750154495239258
    6. '=line' → logprob: -14.875154495239258
    7. '=color' → logprob: -15.125154495239258
    8. '_color' → logprob: -15.250154495239258
    9. '_line' → logprob: -15.500154495239258
    10. 'o' → logprob: -15.625154495239258

Token 1193: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.392202976712724e-06
    2. ' int' → logprob: -12.375006675720215
    3. 'Color' → logprob: -13.250006675720215
    4. 'input' → logprob: -15.375006675720215
    5. '   ' → logprob: -16.6250057220459
    6. 'color' → logprob: -16.7500057220459
    7. '           ' → logprob: -18.5000057220459
    8. '(int' → logprob: -19.5000057220459
    9. '
' → logprob: -19.6250057220459
    10. ' ' → logprob: -19.7500057220459

Token 1194: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0019289902411401272
    2. 'input' → logprob: -6.251928806304932
    3. ' input' → logprob: -16.376928329467773
    4. '(' → logprob: -16.501928329467773
    5. '=input' → logprob: -16.501928329467773
    6. '()
' → logprob: -17.001928329467773
    7. ',input' → logprob: -17.501928329467773
    8. '()' → logprob: -18.126928329467773
    9. '	input' → logprob: -18.376928329467773
    10. '(
' → logprob: -18.501928329467773

Token 1195: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5772820711135864
    2. '())
' → logprob: -0.8272820711135864
    3. '().' → logprob: -6.952281951904297
    4. '()' → logprob: -8.077281951904297
    5. '())
' → logprob: -9.702281951904297
    6. '()
' → logprob: -12.327281951904297
    7. ')' → logprob: -12.327281951904297
    8. '())

' → logprob: -13.202281951904297
    9. ')
' → logprob: -13.952281951904297
    10. ' ())' → logprob: -14.202281951904297

Token 1196: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006392885115928948
    2. '<|end|>' → logprob: -7.75063943862915
    3. '<|end|>' → logprob: -9.875638961791992
    4. '		       ' → logprob: -10.375638961791992
    5. '	           ' → logprob: -10.625638961791992
    6. '           ' → logprob: -10.625638961791992
    7. ',' → logprob: -11.125638961791992
    8. '			' → logprob: -11.625638961791992
    9. '                   ' → logprob: -12.000638961791992
    10. '	       ' → logprob: -12.000638961791992

Token 1197: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' (adapté à ' colors') → logprob: -0.010110429488122463
    2. ' colors' → logprob: -4.760110378265381
    3. '               ' → logprob: -6.510110378265381
    4. '           ' → logprob: -12.760110855102539
    5. '(colors' → logprob: -13.135110855102539
    6. '.colors' → logprob: -13.760110855102539
    7. '_colors' → logprob: -15.760110855102539
    8. '   ' → logprob: -15.885110855102539
    9. '                   ' → logprob: -16.51011085510254
    10. '              ' → logprob: -17.01011085510254

Token 1198: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0048079416155815125
    2. 'colors' → logprob: -5.504807949066162
    3. '.colors' → logprob: -8.129807472229004
    4. '_colors' → logprob: -9.004807472229004
    5. '.' → logprob: -9.379807472229004
    6. '               ' → logprob: -9.379807472229004
    7. '(colors' → logprob: -10.129807472229004
    8. 'append' → logprob: -10.254807472229004
    9. '           ' → logprob: -10.504807472229004
    10. ' colors' → logprob: -11.254807472229004

Token 1199: '(col' (ID: 37070)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.00016325322212651372
    2. '(col' → logprob: -8.750163078308105
    3. ' col' → logprob: -12.250163078308105
    4. '	col' → logprob: -19.250164031982422
    5. '_col' → logprob: -20.500164031982422
    6. 'colm' → logprob: -20.750164031982422
    7. '[col' → logprob: -22.250164031982422
    8. '(' → logprob: -22.375164031982422
    9. 'colon' → logprob: -22.500164031982422
    10. '.col' → logprob: -22.750164031982422

Token 1200: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4049675464630127
    2. ')' → logprob: -1.1549675464630127
    3. '           ' → logprob: -4.029967308044434
    4. '               ' → logprob: -9.404967308044434
    5. '       ' → logprob: -10.279967308044434
    6. ')return' → logprob: -10.779967308044434
    7. ')
' → logprob: -11.654967308044434
    8. '<|end|>' → logprob: -13.279967308044434
    9. ')

' → logprob: -13.404967308044434
    10. '
' → logprob: -13.529967308044434

Token 1201: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.440506407059729e-05
    2. '
' → logprob: -10.62503433227539
    3. 'return' → logprob: -12.12503433227539
    4. '       ' → logprob: -12.50003433227539
    5. '          ' → logprob: -15.37503433227539
    6. '		' → logprob: -15.50003433227539
    7. '               ' → logprob: -15.62503433227539
    8. ' return' → logprob: -16.50003433227539
    9. '	       ' → logprob: -17.00003433227539
    10. '         ' → logprob: -17.12503433227539

Token 1202: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10124377906322479
    2. 'return' (adapté à ' return') → logprob: -2.351243734359741
    3. ' return' → logprob: -7.10124397277832
    4. '       ' → logprob: -8.47624397277832
    5. '               ' → logprob: -13.60124397277832
    6. '
' → logprob: -13.97624397277832
    7. '   ' → logprob: -14.22624397277832
    8. '          ' → logprob: -14.47624397277832
    9. '		' → logprob: -14.85124397277832
    10. '         ' → logprob: -15.60124397277832

Token 1203: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2519342005252838
    2. '(n' → logprob: -1.5019341707229614
    3. ' n' → logprob: -12.501934051513672
    4. ' (' → logprob: -13.876934051513672
    5. '   ' → logprob: -15.126934051513672
    6. '(' → logprob: -16.376934051513672
    7. '	n' → logprob: -16.876934051513672
    8. '_n' → logprob: -17.626934051513672
    9. '(
' → logprob: -18.251934051513672
    10. '       ' → logprob: -18.376934051513672

Token 1204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.253090865968261e-06
    2. ',
' → logprob: -12.000009536743164
    3. 'colors' → logprob: -13.000009536743164
    4. ' ,' → logprob: -14.875009536743164
    5. ',color' → logprob: -15.875009536743164
    6. ',n' → logprob: -17.125009536743164
    7. '(colors' → logprob: -17.125009536743164
    8. '
' → logprob: -17.125009536743164
    9. '```' → logprob: -17.250009536743164
    10. '           ' → logprob: -17.875009536743164

Token 1205: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.00033546582562848926
    2. ' colors' → logprob: -8.000335693359375
    3. '(colors' → logprob: -18.750335693359375
    4. 'color' → logprob: -18.875335693359375
    5. '.colors' → logprob: -20.250335693359375
    6. '   ' → logprob: -20.250335693359375
    7. 'Colors' → logprob: -21.125335693359375
    8. '_colors' → logprob: -21.625335693359375
    9. 'colored' → logprob: -21.625335693359375
    10. '           ' → logprob: -21.875335693359375

Token 1206: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6972571015357971
    2. '<|end|>' → logprob: -0.6972571015357971
    3. 'except' → logprob: -5.697257041931152
    4. '<|end|>' → logprob: -7.447257041931152
    5. '
' → logprob: -10.697257041931152
    6. '	' → logprob: -10.697257041931152
    7. '   ' → logprob: -10.697257041931152
    8. '```' → logprob: -10.947257041931152
    9. '        
' → logprob: -11.322257041931152
    10. ' except' → logprob: -11.447257041931152

Token 1208: ' except' (ID: 6384)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' (adapté à ' except') → logprob: -0.039786845445632935
    2. ' except' → logprob: -4.0397868156433105
    3. '       ' → logprob: -4.2897868156433105
    4. '<|end|>' → logprob: -5.4147868156433105
    5. '	except' → logprob: -5.9147868156433105
    6. '
' → logprob: -7.7897868156433105
    7. '   ' → logprob: -9.664787292480469
    8. '        
' → logprob: -11.039787292480469
    9. '           ' → logprob: -11.164787292480469
    10. '<|end|>' → logprob: -11.289787292480469

Token 1209: ' EOF' (ID: 72412)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.0011757015017792583
    2. ' EOF' → logprob: -6.751175880432129
    3. '(' → logprob: -12.501175880432129
    4. 'Exception' → logprob: -13.876175880432129
    5. 'Stop' → logprob: -14.001175880432129
    6. ' (' → logprob: -18.001174926757812
    7. '(Exception' → logprob: -18.626174926757812
    8. '(E' → logprob: -18.751174926757812
    9. 'EO' → logprob: -19.251174926757812
    10. 'Value' → logprob: -19.876174926757812

Token 1210: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. '
' → logprob: -19.0
    3. 'error' → logprob: -20.25
    4. 'rror' → logprob: -21.625
    5. 'EOF' → logprob: -22.125
    6. 'ERROR' → logprob: -22.875
    7. ' Error' → logprob: -23.125
    8. '_error' → logprob: -23.375
    9. 'End' → logprob: -23.375
    10. '_ERROR' → logprob: -24.0

Token 1211: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23245453834533691
    2. ':
' → logprob: -1.857454538345337
    3. ':' → logprob: -2.982454538345337
    4. '       ' → logprob: -8.232454299926758
    5. ':return' → logprob: -8.857454299926758
    6. ',' → logprob: -9.857454299926758
    7. '               ' → logprob: -9.982454299926758
    8. ' as' → logprob: -10.107454299926758
    9. '          ' → logprob: -10.107454299926758
    10. '		' → logprob: -10.732454299926758

Token 1212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003326049481984228
    2. '       ' → logprob: -8.250332832336426
    3. '		' → logprob: -10.750332832336426
    4. 'return' → logprob: -10.875332832336426
    5. '	       ' → logprob: -11.625332832336426
    6. ':
' → logprob: -11.875332832336426
    7. ' return' → logprob: -12.500332832336426
    8. ':' → logprob: -13.125332832336426
    9. '               ' → logprob: -13.125332832336426
    10. '   ' → logprob: -13.250332832336426

Token 1213: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009305141866207123
    2. '           ' → logprob: -7.000930309295654
    3. ' return' → logprob: -11.000930786132812
    4. '       ' → logprob: -13.000930786132812
    5. 'None' → logprob: -16.625930786132812
    6. '
' → logprob: -17.375930786132812
    7. '               ' → logprob: -17.375930786132812
    8. '   ' → logprob: -17.750930786132812
    9. '	return' → logprob: -18.000930786132812
    10. 'pass' → logprob: -19.125930786132812

Token 1214: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0002613358374219388
    2. ' None' → logprob: -8.250261306762695
    3. '0' → logprob: -18.375261306762695
    4. '(None' → logprob: -18.875261306762695
    5. '_None' → logprob: -18.875261306762695
    6. '   ' → logprob: -20.750261306762695
    7. ',None' → logprob: -21.000261306762695
    8. '=None' → logprob: -21.000261306762695
    9. 'Nothing' → logprob: -21.875261306762695
    10. '
' → logprob: -22.125261306762695

Token 1215: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1216: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04911968857049942
    2. 'if' → logprob: -3.049119710922241
    3. 'class' → logprob: -7.549119472503662
    4. '
' → logprob: -12.54911994934082
    5. '```' → logprob: -13.67411994934082
    6. 'from' → logprob: -15.04911994934082
    7. 'import' → logprob: -15.17411994934082
    8. '    
' → logprob: -16.42411994934082
    9. ' if' → logprob: -16.67411994934082
    10. '

' → logprob: -16.67411994934082

Token 1217: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.10860785096883774
    2. 'Game' → logprob: -2.858607769012451
    3. 'Solver' → logprob: -3.858607769012451
    4. 'Main' → logprob: -4.358607769012451
    5. 'Runner' → logprob: -4.858607769012451
    6. 'Solution' → logprob: -5.858607769012451
    7. 'Program' → logprob: -7.983607769012451
    8. 'main' → logprob: -8.35860824584961
    9. 'Problem' → logprob: -8.48360824584961
    10. 'Processor' → logprob: -9.10860824584961

Token 1218: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.0041440497152507305
    2. 'Handler' → logprob: -5.504144191741943
    3. 'Printer' → logprob: -10.129143714904785
    4. 'Manager' → logprob: -11.754143714904785
    5. 'ter' → logprob: -12.129143714904785
    6. 'Builder' → logprob: -12.379143714904785
    7. 'Formatter' → logprob: -12.879143714904785
    8. 'Collector' → logprob: -13.879143714904785
    9. 'Generator' → logprob: -14.004143714904785
    10. 'Processor' → logprob: -14.254143714904785

Token 1219: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014213105663657188
    2. ':
' → logprob: -4.2642130851745605
    3. ':

' → logprob: -10.639213562011719
    4. '<|end|>' → logprob: -11.389213562011719
    5. ':def' → logprob: -11.639213562011719
    6. '```' → logprob: -13.514213562011719
    7. '(object' → logprob: -13.764213562011719
    8. ':void' → logprob: -14.389213562011719
    9. '):' → logprob: -14.639213562011719
    10. '():' → logprob: -15.014213562011719

Token 1220: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5598268508911133
    2. ':
' → logprob: -1.5598268508911133
    3. '```' → logprob: -1.8098268508911133
    4. ':' → logprob: -3.4348268508911133
    5. '   ' → logprob: -4.559826850891113
    6. '
' → logprob: -4.559826850891113
    7. '<|end|>' → logprob: -7.809826850891113
    8. ' class' → logprob: -7.809826850891113
    9. '<class' → logprob: -8.309826850891113
    10. '``' → logprob: -8.934826850891113

Token 1221: ' """
' (ID: 7037)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.1093578804284334e-05
    2. '
' → logprob: -10.500051498413086
    3. '"""
' (adapté à ' """
') → logprob: -11.750051498413086
    4. '```' → logprob: -11.750051498413086
    5. '   ' → logprob: -11.875051498413086
    6. 'def' → logprob: -14.750051498413086
    7. ' class' → logprob: -15.625051498413086
    8. '``' → logprob: -16.750051498413086
    9. '"""' → logprob: -17.375051498413086
    10. 'Class' → logprob: -17.875051498413086

Token 1222: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.16473418474197388
    2. '   ' → logprob: -1.914734125137329
    3. '"""
' → logprob: -5.914734363555908
    4. '
' → logprob: -6.414734363555908
    5. '```' → logprob: -9.41473388671875
    6. 'def' → logprob: -9.66473388671875
    7. '``' → logprob: -11.53973388671875
    8. '"""' → logprob: -12.28973388671875
    9. '    
' → logprob: -13.41473388671875
    10. ' class' → logprob: -13.53973388671875

Token 1223: ' Handles' (ID: 47620)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.017736272886395454
    2. 'def' → logprob: -4.767736434936523
    3. '
' → logprob: -5.017736434936523
    4. '"""
' → logprob: -6.392736434936523
    5. '   ' → logprob: -7.392736434936523
    6. '```' → logprob: -8.767736434936523
    7. '``' → logprob: -11.517736434936523
    8. '"""' → logprob: -12.642736434936523
    9. '

' → logprob: -14.642736434936523
    10. '    
' → logprob: -14.767736434936523

Token 1224: ' output' (ID: 4733)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2261170595884323
    2. 'output' → logprob: -1.9761170148849487
    3. '   ' → logprob: -2.9761171340942383
    4. 'class' → logprob: -5.101117134094238
    5. '"""
' → logprob: -6.226117134094238
    6. '
' → logprob: -6.226117134094238
    7. 'writing' → logprob: -7.101117134094238
    8. 'self' → logprob: -7.351117134094238
    9. ' def' → logprob: -7.851117134094238
    10. '@' → logprob: -8.851117134094238

Token 1225: ' formatting' (ID: 61348)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6988587975502014
    2. 'def' → logprob: -1.3238587379455566
    3. '   ' → logprob: -2.0738587379455566
    4. '
' → logprob: -2.5738587379455566
    5. ':
' → logprob: -3.5738587379455566
    6. '```' → logprob: -6.198858737945557
    7. ' def' → logprob: -6.698858737945557
    8. ':' → logprob: -7.323858737945557
    9. ' ' → logprob: -7.698858737945557
    10. '  ' → logprob: -8.073859214782715

Token 1226: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2388581037521362
    2. '
' → logprob: -1.3638581037521362
    3. ':
' → logprob: -1.3638581037521362
    4. 'and' → logprob: -1.8638581037521362
    5. 'class' → logprob: -3.613858222961426
    6. ':' → logprob: -5.113858222961426
    7. ' and' → logprob: -5.238858222961426
    8. '):
' → logprob: -5.863858222961426
    9. ':

' → logprob: -6.363858222961426
    10. 'def' → logprob: -8.613858222961426

Token 1227: ' writing' (ID: 5281)
  Prédit: 'writing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'writing' → logprob: -0.3765498697757721
    2. 'def' → logprob: -2.0015499591827393
    3. 'printing' → logprob: -2.2515499591827393
    4. 'display' → logprob: -2.8765499591827393
    5. 'presentation' → logprob: -4.75154972076416
    6. '
' → logprob: -6.62654972076416
    7. 'report' → logprob: -6.87654972076416
    8. 'result' → logprob: -7.25154972076416
    9. 'output' → logprob: -7.37654972076416
    10. 'fl' → logprob: -7.37654972076416

Token 1228: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13537868857383728
    2. '   ' → logprob: -2.26037859916687
    3. ':
' → logprob: -4.135378837585449
    4. 'def' → logprob: -5.885378837585449
    5. ':' → logprob: -6.760378837585449
    6. ':

' → logprob: -7.260378837585449
    7. 'class' → logprob: -8.13537883758545
    8. '):
' → logprob: -8.26037883758545
    9. '<|end|>' → logprob: -8.26037883758545
    10. '

' → logprob: -8.63537883758545

Token 1229: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009694354608654976
    2. 'class' → logprob: -5.259694576263428
    3. '   ' → logprob: -5.634694576263428
    4. '

' → logprob: -7.134694576263428
    5. '```' → logprob: -10.00969409942627
    6. '    
' → logprob: -11.13469409942627
    7. 'def' → logprob: -11.25969409942627
    8. '<|end|>' → logprob: -12.75969409942627
    9. '
' → logprob: -13.38469409942627
    10. '``' → logprob: -13.63469409942627

Token 1230: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06250815093517303
    2. 'class' → logprob: -3.0625081062316895
    3. '

' → logprob: -4.4375081062316895
    4. '   ' → logprob: -6.8125081062316895
    5. 'def' → logprob: -7.1875081062316895
    6. '```' → logprob: -9.062508583068848
    7. '    
' → logprob: -11.812508583068848
    8. '
' → logprob: -12.187508583068848
    9. 'from' → logprob: -13.062508583068848
    10. 'The' → logprob: -13.062508583068848

Token 1231: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1570252776145935
    2. '   ' → logprob: -2.1570253372192383
    3. '
' → logprob: -3.9070253372192383
    4. '```' → logprob: -4.782025337219238
    5. 'def' → logprob: -6.782025337219238
    6. '``' → logprob: -11.157025337219238
    7. '    
' → logprob: -11.907025337219238
    8. 'from' → logprob: -12.532025337219238
    9. ' class' → logprob: -13.657025337219238
    10. '

' → logprob: -13.782025337219238

Token 1232: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.543733904138207e-05
    2. 'class' → logprob: -10.37509536743164
    3. '   ' → logprob: -10.62509536743164
    4. ' def' → logprob: -11.12509536743164
    5. '```' → logprob: -11.12509536743164
    6. '
' → logprob: -11.50009536743164
    7. '@' (adapté à ' @') → logprob: -15.75009536743164
    8. '	def' → logprob: -17.50009536743164
    9. '``' → logprob: -18.37509536743164
    10. 'staticmethod' → logprob: -19.62509536743164

Token 1233: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.004510343074798584
    2. 'classmethod' → logprob: -5.629510402679443
    3. 'def' → logprob: -7.129510402679443
    4. 'write' → logprob: -10.129509925842285
    5. 'init' → logprob: -10.129509925842285
    6. '__' → logprob: -10.629509925842285
    7. 'indent' → logprob: -13.504509925842285
    8. '
' → logprob: -13.754509925842285
    9. 'class' → logprob: -14.004509925842285
    10. 'static' → logprob: -14.754509925842285

Token 1234: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022306155413389206
    2. '
' → logprob: -4.522305965423584
    3. '   ' → logprob: -4.522305965423584
    4. ' def' → logprob: -8.022306442260742
    5. '(def' → logprob: -13.647306442260742
    6. '	def' → logprob: -14.022306442260742
    7. '    
' → logprob: -14.897306442260742
    8. '  ' → logprob: -15.272306442260742
    9. '```' → logprob: -15.522306442260742
    10. '(' → logprob: -15.522306442260742

Token 1235: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005537479883059859
    2. '
' → logprob: -8.250554084777832
    3. '   ' → logprob: -8.250554084777832
    4. ' def' → logprob: -10.375554084777832
    5. '	def' → logprob: -16.125553131103516
    6. '```' → logprob: -16.625553131103516
    7. '(def' → logprob: -17.500553131103516
    8. '    
' → logprob: -17.750553131103516
    9. '\' → logprob: -18.875553131103516
    10. '  ' → logprob: -19.000553131103516

Token 1236: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.253090865968261e-06
    2. '
' → logprob: -12.250009536743164
    3. ' def' → logprob: -12.500009536743164
    4. 'write' → logprob: -14.750009536743164
    5. '   ' → logprob: -15.125009536743164
    6. 'print' → logprob: -18.250009536743164
    7. '	def' → logprob: -19.750009536743164
    8. 'define' → logprob: -19.875009536743164
    9. 'from' → logprob: -20.375009536743164
    10. '    
' → logprob: -20.500009536743164

Token 1237: ' write' (ID: 5067)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.06197642162442207
    2. 'print' → logprob: -2.811976432800293
    3. 'println' → logprob: -12.061976432800293
    4. 'output' → logprob: -13.811976432800293
    5. 'format' → logprob: -13.811976432800293
    6. 'w' → logprob: -14.061976432800293
    7. ' write' → logprob: -15.936976432800293
    8. 'writes' → logprob: -17.061975479125977
    9. 'put' → logprob: -17.686975479125977
    10. 'display' → logprob: -18.061975479125977

Token 1238: '_result' (ID: 11623)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.1120145320892334
    2. '(str' → logprob: -1.2370145320892334
    3. '_line' → logprob: -1.9870145320892334
    4. 'result' → logprob: -2.1120145320892334
    5. '(result' → logprob: -2.8620145320892334
    6. '(output' → logprob: -4.3620147705078125
    7. 'def' → logprob: -4.4870147705078125
    8. '(line' → logprob: -4.7370147705078125
    9. '_result' → logprob: -5.6120147705078125
    10. 'results' → logprob: -5.6120147705078125

Token 1239: '(min' (ID: 26035)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7349092364311218
    2. '(result' → logprob: -0.7349092364311218
    3. '(' → logprob: -3.9849092960357666
    4. '(count' → logprob: -4.9849090576171875
    5. '(size' → logprob: -5.4849090576171875
    6. '(length' → logprob: -5.6099090576171875
    7. '(results' → logprob: -6.6099090576171875
    8. '(num' → logprob: -6.7349090576171875
    9. '(line' → logprob: -6.7349090576171875
    10. '(value' → logprob: -6.8599090576171875

Token 1240: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -0.011249176226556301
    2. 'imal' → logprob: -4.51124906539917
    3. 'imum' → logprob: -9.886249542236328
    4. '_rem' → logprob: -10.386249542236328
    5. 'remaining' → logprob: -10.761249542236328
    6. 'Remaining' → logprob: -11.136249542236328
    7. 'inal' → logprob: -11.261249542236328
    8. 'imized' → logprob: -11.386249542236328
    9. '_
' → logprob: -11.886249542236328
    10. '_' → logprob: -11.886249542236328

Token 1241: ':' (ID: 25)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.6939908266067505
    2. '(n' → logprob: -1.3189908266067505
    3. '(' → logprob: -1.5689908266067505
    4. '   ' → logprob: -4.693990707397461
    5. '(result' → logprob: -5.818990707397461
    6. ' (' → logprob: -6.068990707397461
    7. ',' → logprob: -6.193990707397461
    8. ':' → logprob: -6.318990707397461
    9. '):' → logprob: -6.443990707397461
    10. '):
' → logprob: -6.568990707397461

Token 1242: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006196353584527969
    2. ' int' → logprob: -5.13119649887085
    3. ')' → logprob: -8.631196022033691
    4. '(int' → logprob: -10.381196022033691
    5. 'str' → logprob: -10.756196022033691
    6. '[int' → logprob: -11.256196022033691
    7. ' ' → logprob: -12.131196022033691
    8. 'Int' → logprob: -12.381196022033691
    9. '   ' → logprob: -12.381196022033691
    10. ')
' → logprob: -13.381196022033691

Token 1243: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9180452227592468
    2. '):
' → logprob: -1.0430452823638916
    3. ')' → logprob: -1.4180452823638916
    4. '):' → logprob: -5.2930450439453125
    5. '   ' → logprob: -6.9180450439453125
    6. '       ' → logprob: -9.918045043945312
    7. '):
' → logprob: -10.418045043945312
    8. ')
' → logprob: -10.668045043945312
    9. ')->' → logprob: -13.168045043945312
    10. ' )' → logprob: -13.418045043945312

Token 1244: ' ->' (ID: 2747)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -1.0120400190353394
    2. ':
' → logprob: -1.2620400190353394
    3. '(output' → logprob: -1.7620400190353394
    4. '       ' → logprob: -2.387040138244629
    5. ':' → logprob: -3.012040138244629
    6. '   ' → logprob: -4.637040138244629
    7. '(result' → logprob: -5.262040138244629
    8. '(n' → logprob: -5.512040138244629
    9. '(line' → logprob: -5.637040138244629
    10. '(' → logprob: -6.012040138244629

Token 1245: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.47499728202819824
    2. 'print' → logprob: -0.9749972820281982
    3. ' None' → logprob: -7.224997520446777
    4. '   ' → logprob: -8.724997520446777
    5. 'int' → logprob: -11.099997520446777
    6. ' print' → logprob: -11.349997520446777
    7. ' ' → logprob: -13.849997520446777
    8. '  ' → logprob: -13.849997520446777
    9. '       ' → logprob: -15.474997520446777
    10. '(None' → logprob: -16.34999656677246

Token 1246: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2672417461872101
    2. '       ' → logprob: -1.5172417163848877
    3. ':' → logprob: -4.392241954803467
    4. '   ' → logprob: -6.142241954803467
    5. '():
' → logprob: -7.892241954803467
    6. '):
' → logprob: -8.517241477966309
    7. '           ' → logprob: -10.892241477966309
    8. '```' → logprob: -10.892241477966309
    9. '(output' → logprob: -11.017241477966309
    10. '(' → logprob: -11.392241477966309

Token 1247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.432518421206623e-05
    2. 'print' → logprob: -9.7500638961792
    3. '   ' → logprob: -12.3750638961792
    4. '```' → logprob: -13.5000638961792
    5. ' print' → logprob: -15.2500638961792
    6. '           ' → logprob: -16.125064849853516
    7. '`' → logprob: -18.375064849853516
    8. '	' → logprob: -19.750064849853516
    9. '      ' → logprob: -19.750064849853516
    10. '               ' → logprob: -19.875064849853516

Token 1248: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. '       ' → logprob: -16.75
    3. ' print' → logprob: -17.25
    4. '```' → logprob: -23.375
    5. '   ' → logprob: -24.375
    6. '
' → logprob: -25.0
    7. '           ' → logprob: -26.625
    8. '	print' → logprob: -26.625
    9. '``' → logprob: -27.125
    10. 'println' → logprob: -27.875

Token 1249: '(min' (ID: 26035)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00015872348740231246
    2. '(min' → logprob: -8.750158309936523
    3. ' min' → logprob: -15.250158309936523
    4. '[min' → logprob: -20.375158309936523
    5. '=min' → logprob: -21.125158309936523
    6. '	min' → logprob: -21.625158309936523
    7. '-min' → logprob: -21.750158309936523
    8. ',min' → logprob: -22.125158309936523
    9. ':min' → logprob: -22.375158309936523
    10. 'f' → logprob: -22.625158309936523

Token 1250: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -12.25001335144043
    3. 'remaining' → logprob: -12.50001335144043
    4. 'Remaining' → logprob: -13.75001335144043
    5. '(min' → logprob: -13.87501335144043
    6. '_rem' → logprob: -14.25001335144043
    7. '_result' → logprob: -14.50001335144043
    8. 'min' → logprob: -14.50001335144043
    9. '   ' → logprob: -15.62501335144043
    10. ')' → logprob: -16.00001335144043

Token 1251: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.625
    3. '")' → logprob: -17.5
    4. ' )' → logprob: -17.5
    5. '   ' → logprob: -17.75
    6. '))' → logprob: -18.5
    7. '())' → logprob: -18.75
    8. '()' → logprob: -19.875
    9. '),' → logprob: -19.875
    10. '<|end|>' → logprob: -19.875

Token 1252: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31327590346336365
    2. 'if' → logprob: -1.313275933265686
    3. '```' → logprob: -11.563276290893555
    4. 'import' → logprob: -13.188276290893555
    5. '#' → logprob: -13.688276290893555
    6. '
' → logprob: -14.313276290893555
    7. ' if' → logprob: -14.688276290893555
    8. 'from' → logprob: -15.313276290893555
    9. 'while' → logprob: -15.563276290893555
    10. 'for' → logprob: -17.063276290893555

Token 1253: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.3856492842023727e-06
    2. 'run' → logprob: -14.500000953674316
    3. ' main' → logprob: -14.750000953674316
    4. 'solve' → logprob: -15.000000953674316
    5. 'process' → logprob: -16.875001907348633
    6. '_main' → logprob: -18.125001907348633
    7. 'read' → logprob: -18.625001907348633
    8. '__' → logprob: -19.500001907348633
    9. 'def' → logprob: -20.375001907348633
    10. 'input' → logprob: -21.250001907348633

Token 1254: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009142052149400115
    2. '():
' → logprob: -7.000914096832275
    3. '()' → logprob: -13.250914573669434
    4. ' ():' → logprob: -14.250914573669434
    5. '():
' → logprob: -15.375914573669434
    6. '():

' → logprob: -17.875913619995117
    7. '()->' → logprob: -18.250913619995117
    8. '()>' → logprob: -19.000913619995117
    9. '_' → logprob: -19.500913619995117
    10. '().' → logprob: -19.500913619995117

Token 1255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007389922975562513
    2. 'reader' → logprob: -7.250739097595215
    3. 'input' → logprob: -10.625739097595215
    4. ' reader' → logprob: -12.375739097595215
    5. 'while' → logprob: -15.625739097595215
    6. '	reader' → logprob: -15.750739097595215
    7. '   ' → logprob: -15.875739097595215
    8. ' input' → logprob: -15.875739097595215
    9. '```' → logprob: -17.5007381439209
    10. 'ir' → logprob: -18.0007381439209

Token 1256: ' reader' (ID: 10958)
  Prédit: 'reader'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reader' (adapté à ' reader') → logprob: -0.0009327789884991944
    2. 'input' → logprob: -7.000932693481445
    3. '   ' → logprob: -11.250932693481445
    4. ' reader' → logprob: -11.750932693481445
    5. 'while' → logprob: -15.625932693481445
    6. 'ir' → logprob: -16.000932693481445
    7. 'import' → logprob: -16.125932693481445
    8. '	reader' → logprob: -17.250932693481445
    9. '_reader' → logprob: -18.750932693481445
    10. ' input' → logprob: -18.875932693481445

Token 1257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12696851789951324
    2. '=' → logprob: -2.1269686222076416
    3. '   ' → logprob: -10.126968383789062
    4. '()' → logprob: -15.376968383789062
    5. '  ' → logprob: -16.001968383789062
    6. ' ' → logprob: -16.501968383789062
    7. '=
' → logprob: -17.126968383789062
    8. '    ' → logprob: -17.626968383789062
    9. ' =
' → logprob: -17.876968383789062
    10. '_reader' → logprob: -18.001968383789062

Token 1258: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. ' Input' → logprob: -18.375
    3. 'input' → logprob: -22.0
    4. 'Output' → logprob: -22.5
    5. '	Input' → logprob: -23.0
    6. '<Input' → logprob: -23.5
    7. '\Input' → logprob: -24.5
    8. '_input' → logprob: -24.625
    9. '_Input' → logprob: -25.25
    10. 'Inputs' → logprob: -25.625

Token 1259: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: 0.0
    2. 'Writer' → logprob: -17.375
    3. 'reader' → logprob: -18.5
    4. '_reader' → logprob: -18.75
    5. '.Reader' → logprob: -20.25
    6. 'Readers' → logprob: -21.625
    7. ' Reader' → logprob: -21.75
    8. '-reader' → logprob: -23.125
    9. 'Handler' → logprob: -24.25
    10. 'Receiver' → logprob: -24.625

Token 1260: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007189268711954355
    2. '
' → logprob: -5.1321892738342285
    3. 'while' → logprob: -6.7571892738342285
    4. 'writer' → logprob: -9.50718879699707
    5. '    
' → logprob: -11.00718879699707
    6. ' while' → logprob: -12.88218879699707
    7. '```' → logprob: -13.50718879699707
    8. 'w' → logprob: -14.50718879699707
    9. 'output' → logprob: -14.75718879699707
    10. '  ' → logprob: -15.00718879699707

Token 1261: '   ' (ID: 271)
  Prédit: 'writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'writer' → logprob: -0.20346809923648834
    2. '   ' → logprob: -1.7034680843353271
    3. 'while' → logprob: -6.203468322753906
    4. 'strategy' → logprob: -11.578468322753906
    5. 'el' → logprob: -11.703468322753906
    6. 'reader' → logprob: -11.953468322753906
    7. 'output' → logprob: -13.328468322753906
    8. 'Writer' → logprob: -13.578468322753906
    9. 'solver' → logprob: -13.953468322753906
    10. ' writer' → logprob: -14.328468322753906

Token 1262: ' writer' (ID: 10645)
  Prédit: 'writer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'writer' (adapté à ' writer') → logprob: -0.03344166278839111
    2. 'while' → logprob: -3.5334415435791016
    3. 'el' → logprob: -6.533441543579102
    4. '   ' → logprob: -6.783441543579102
    5. 'strategy' → logprob: -7.033441543579102
    6. 'solver' → logprob: -8.533441543579102
    7. 'output' → logprob: -11.783441543579102
    8. 'strateg' → logprob: -12.783441543579102
    9. 'elim' → logprob: -13.283441543579102
    10. 'reader' → logprob: -13.658441543579102

Token 1263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16026271879673004
    2. '=' → logprob: -1.9102627038955688
    3. '   ' → logprob: -10.785263061523438
    4. '.write' → logprob: -11.785263061523438
    5. '=True' → logprob: -12.535263061523438
    6. '  ' → logprob: -13.660263061523438
    7. '.' → logprob: -14.035263061523438
    8. '.writerow' → logprob: -14.035263061523438
    9. '=None' → logprob: -14.285263061523438
    10. 'def' → logprob: -14.410263061523438

Token 1264: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -3.7697225252486533e-06
    2. ' Output' → logprob: -12.500003814697266
    3. '	Output' → logprob: -20.250003814697266
    4. 'Input' → logprob: -21.125003814697266
    5. 'output' → logprob: -21.250003814697266
    6. '   ' → logprob: -22.625003814697266
    7. '(Output' → logprob: -23.375003814697266
    8. 'OUTPUT' → logprob: -24.625003814697266
    9. '
' → logprob: -25.250003814697266
    10. '.Output' → logprob: -25.250003814697266

Token 1265: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -1.5048530030981055e-06
    2. 'Reader' → logprob: -13.500001907348633
    3. '_writer' → logprob: -19.625001907348633
    4. 'writer' → logprob: -19.875001907348633
    5. 'Write' → logprob: -20.125001907348633
    6. 'Output' → logprob: -21.000001907348633
    7. 'Handler' → logprob: -23.000001907348633
    8. 'Worker' → logprob: -23.875001907348633
    9. '.Writer' → logprob: -24.000001907348633
    10. 'Viewer' → logprob: -24.375001907348633

Token 1266: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019542062655091286
    2. 'while' → logprob: -6.376954078674316
    3. '
' → logprob: -8.501954078674316
    4. ' while' → logprob: -10.126954078674316
    5. '    
' → logprob: -11.751954078674316
    6. '```' → logprob: -13.751954078674316
    7. '	while' → logprob: -17.501955032348633
    8. '   ' → logprob: -18.001955032348633
    9. '       ' → logprob: -18.751955032348633
    10. '``' → logprob: -19.001955032348633

Token 1267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061980683356523514
    2. 'while' → logprob: -2.811980724334717
    3. ' while' → logprob: -12.061980247497559
    4. '```' → logprob: -12.436980247497559
    5. 'strategy' → logprob: -13.561980247497559
    6. '
' → logprob: -14.186980247497559
    7. '    
' → logprob: -14.686980247497559
    8. 'data' → logprob: -14.811980247497559
    9. 'el' → logprob: -15.436980247497559
    10. 'for' → logprob: -16.561981201171875

Token 1268: ' elimination' (ID: 77324)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0822993740439415
    2. '   ' → logprob: -2.5822994709014893
    3. 'dataset' → logprob: -6.08229923248291
    4. 'data' → logprob: -7.08229923248291
    5. 'strategy' → logprob: -8.45729923248291
    6. ' while' → logprob: -10.58229923248291
    7. 'result' → logprob: -10.83229923248291
    8. 'for' → logprob: -11.95729923248291
    9. 'line' → logprob: -12.33229923248291
    10. 'el' → logprob: -12.45729923248291

Token 1269: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -6.392202976712724e-06
    2. ' =' → logprob: -13.000006675720215
    3. 'strategy' → logprob: -13.125006675720215
    4. '=' → logprob: -13.250006675720215
    5. '_str' → logprob: -16.1250057220459
    6. '   ' → logprob: -16.3750057220459
    7. 'Strategy' → logprob: -17.0000057220459
    8. 'strateg' → logprob: -18.5000057220459
    9. '_' → logprob: -19.6250057220459
    10. '_method' → logprob: -20.3750057220459

Token 1270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759410262107849
    2. ' =' → logprob: -0.8259410262107849
    3. '   ' → logprob: -13.45094108581543
    4. ' ' → logprob: -16.95094108581543
    5. '=
' → logprob: -17.57594108581543
    6. '  ' → logprob: -17.95094108581543
    7. ':' → logprob: -18.45094108581543
    8. '	' → logprob: -18.82594108581543
    9. '=

' → logprob: -18.82594108581543
    10. ' =
' → logprob: -18.95094108581543

Token 1271: ' Chain' (ID: 43814)
  Prédit: 'Chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Chain' → logprob: -4.320199877838604e-07
    2. ' Chain' → logprob: -14.75
    3. 'chain' → logprob: -20.25
    4. '   ' → logprob: -22.75
    5. 'CHAIN' → logprob: -22.875
    6. 'Ch' → logprob: -23.0
    7. 'Chains' → logprob: -23.125
    8. ' chain' → logprob: -23.875
    9. '_chain' → logprob: -24.5
    10. 'C' → logprob: -26.0

Token 1272: 'El' (ID: 4422)
  Prédit: 'El'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'El' → logprob: 0.0
    2. 'Chain' → logprob: -17.875
    3. 'el' → logprob: -18.25
    4. ' El' → logprob: -19.0
    5. 'En' → logprob: -19.625
    6. ' elimination' → logprob: -19.75
    7. 'Em' → logprob: -20.5
    8. '```' → logprob: -20.875
    9. 'Er' → logprob: -21.0
    10. '_el' → logprob: -21.125

Token 1273: 'imination' (ID: 34362)
  Prédit: 'imination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imination' → logprob: -2.570319702499546e-05
    2. 'imation' → logprob: -11.250025749206543
    3. 'im' → logprob: -11.375025749206543
    4. 'ination' → logprob: -14.375025749206543
    5. 'min' → logprob: -15.500025749206543
    6. 'imin' → logprob: -16.000024795532227
    7. 'imini' → logprob: -16.875024795532227
    8. ' elimination' → logprob: -17.250024795532227
    9. 'imi' → logprob: -17.375024795532227
    10. 'em' → logprob: -17.375024795532227

Token 1274: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -5.676981345459353e-06
    2. 'strategy' → logprob: -12.125005722045898
    3. 'g' → logprob: -16.5000057220459
    4. 't' → logprob: -17.3750057220459
    5. 'Chain' → logprob: -17.5000057220459
    6. 'ategy' → logprob: -17.6250057220459
    7. '_strategy' → logprob: -18.1250057220459
    8. 'str' → logprob: -19.0000057220459
    9. ' Strategy' → logprob: -19.1250057220459
    10. ' strategy' → logprob: -19.5000057220459

Token 1275: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06035734340548515
    2. '
' → logprob: -3.1853573322296143
    3. 'while' → logprob: -4.435357570648193
    4. ' while' → logprob: -5.310357570648193
    5. '    
' → logprob: -7.810357570648193
    6. '	while' → logprob: -12.310357093811035
    7. ' 
' → logprob: -12.935357093811035
    8. '
' → logprob: -13.310357093811035
    9. '  
' → logprob: -13.810357093811035
    10. '<|end|>' → logprob: -14.810357093811035

Token 1276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12698008120059967
    2. 'while' → logprob: -2.1269800662994385
    3. ' while' → logprob: -9.87697982788086
    4. '```' → logprob: -14.87697982788086
    5. 'data' → logprob: -15.25197982788086
    6. '
' → logprob: -17.25197982788086
    7. '	while' → logprob: -17.25197982788086
    8. '    
' → logprob: -17.62697982788086
    9. '``' → logprob: -18.37697982788086
    10. 'dataset' → logprob: -18.37697982788086

Token 1277: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.010782396420836449
    2. 'dataset' → logprob: -5.010782241821289
    3. 'data' → logprob: -5.510782241821289
    4. '   ' → logprob: -11.260782241821289
    5. ' while' → logprob: -13.010782241821289
    6. 'result' → logprob: -15.010782241821289
    7. 'for' → logprob: -16.26078224182129
    8. 'input' → logprob: -16.38578224182129
    9. '
' → logprob: -16.63578224182129
    10. 'While' → logprob: -17.38578224182129

Token 1278: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0027568526566028595
    2. ' True' → logprob: -6.0027570724487305
    3. '   ' → logprob: -8.75275707244873
    4. '(True' → logprob: -9.00275707244873
    5. 'true' → logprob: -17.627756118774414
    6. '1' → logprob: -18.377756118774414
    7. ' ' → logprob: -18.502756118774414
    8. '(' → logprob: -18.752756118774414
    9. '  ' → logprob: -19.127756118774414
    10. '
' → logprob: -19.252756118774414

Token 1279: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6761741638183594
    2. '       ' → logprob: -0.8011741638183594
    3. ':
' → logprob: -3.1761741638183594
    4. ' =' → logprob: -8.92617416381836
    5. ',' → logprob: -8.92617416381836
    6. '():
' → logprob: -9.05117416381836
    7. '   ' → logprob: -9.55117416381836
    8. '=' → logprob: -9.80117416381836
    9. '(line' → logprob: -9.80117416381836
    10. '():' → logprob: -10.05117416381836

Token 1280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009395699598826468
    2. 'data' → logprob: -7.12593936920166
    3. 'dataset' → logprob: -9.62593936920166
    4. '   ' → logprob: -10.25093936920166
    5. 'result' → logprob: -10.37593936920166
    6. '           ' → logprob: -14.25093936920166
    7. 'd' → logprob: -14.37593936920166
    8. '     ' → logprob: -15.50093936920166
    9. '      ' → logprob: -15.62593936920166
    10. ' data' → logprob: -15.62593936920166

Token 1281: ' data' (ID: 1238)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -0.25471237301826477
    2. 'data' (adapté à ' data') → logprob: -1.5047123432159424
    3. 'result' → logprob: -6.2547125816345215
    4. 'res' → logprob: -7.2547125816345215
    5. '   ' → logprob: -9.379712104797363
    6. 'input' → logprob: -10.254712104797363
    7. 'ds' → logprob: -11.129712104797363
    8. 'read' → logprob: -11.629712104797363
    9. '       ' → logprob: -12.379712104797363
    10. ' dataset' → logprob: -13.254712104797363

Token 1282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890532165765762
    2. ' =' → logprob: -2.5789053440093994
    3. '       ' → logprob: -11.45390510559082
    4. '   ' → logprob: -12.57890510559082
    5. '           ' → logprob: -15.45390510559082
    6. 'set' → logprob: -15.45390510559082
    7. '=data' → logprob: -15.57890510559082
    8. 'data' → logprob: -15.57890510559082
    9. '_data' → logprob: -15.57890510559082
    10. '_optional' → logprob: -15.95390510559082

Token 1283: ' reader' (ID: 10958)
  Prédit: 'reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reader' → logprob: -0.0011703446507453918
    2. ' reader' → logprob: -6.7511701583862305
    3. '(reader' → logprob: -16.626171112060547
    4. '	reader' → logprob: -17.751171112060547
    5. 'read' → logprob: -20.001171112060547
    6. '.reader' → logprob: -20.126171112060547
    7. '       ' → logprob: -20.376171112060547
    8. '_reader' → logprob: -20.626171112060547
    9. '   ' → logprob: -20.626171112060547
    10. 'writer' → logprob: -21.376171112060547

Token 1284: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.0003554847207851708
    2. 'read' → logprob: -8.00035572052002
    3. '.readline' → logprob: -10.87535572052002
    4. '.' → logprob: -14.50035572052002
    5. ' .' → logprob: -15.00035572052002
    6. '   ' → logprob: -15.25035572052002
    7. ' read' → logprob: -16.875354766845703
    8. '	read' → logprob: -17.625354766845703
    9. '.readlines' → logprob: -17.875354766845703
    10. '_read' → logprob: -17.875354766845703

Token 1285: '_dataset' (ID: 40568)
  Prédit: '_dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dataset' → logprob: -1.700132997939363e-05
    2. 'dataset' → logprob: -11.000017166137695
    3. 'ataset' → logprob: -15.125017166137695
    4. 'Dataset' → logprob: -17.625017166137695
    5. '_data' → logprob: -18.125017166137695
    6. ' dataset' → logprob: -18.875017166137695
    7. 'set' → logprob: -20.125017166137695
    8. '(dataset' → logprob: -20.625017166137695
    9. '
' → logprob: -20.875017166137695
    10. 'a' → logprob: -21.375017166137695

Token 1286: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.629921436891891e-05
    2. 'if' → logprob: -11.75002670288086
    3. '<|end|>' → logprob: -12.12502670288086
    4. ' if' → logprob: -12.37502670288086
    5. '   ' → logprob: -12.87502670288086
    6. '           ' → logprob: -13.50002670288086
    7. '<|end|>' → logprob: -14.12502670288086
    8. '
' → logprob: -14.12502670288086
    9. ',' → logprob: -14.25002670288086
    10. '=' → logprob: -14.37502670288086

Token 1287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005075189401395619
    2. 'if' → logprob: -8.000507354736328
    3. '   ' → logprob: -8.750507354736328
    4. ' if' → logprob: -11.250507354736328
    5. '```' → logprob: -15.125507354736328
    6. '           ' → logprob: -15.250507354736328
    7. '	' → logprob: -16.250507354736328
    8. '	if' → logprob: -16.500507354736328
    9. '	   ' → logprob: -17.500507354736328
    10. '>' → logprob: -17.875507354736328

Token 1288: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10022716224193573
    2. '       ' → logprob: -2.350227117538452
    3. ' if' → logprob: -10.850227355957031
    4. '   ' → logprob: -13.725227355957031
    5. '	if' → logprob: -16.85022735595703
    6. '           ' → logprob: -19.72522735595703
    7. 'If' → logprob: -20.10022735595703
    8. '
' → logprob: -21.72522735595703
    9. '	' → logprob: -21.85022735595703
    10. '               ' → logprob: -22.10022735595703

Token 1289: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0024756586644798517
    2. ' data' → logprob: -6.002475738525391
    3. '	data' → logprob: -22.25247573852539
    4. 'not' → logprob: -22.62747573852539
    5. 'Data' → logprob: -23.00247573852539
    6. '   ' → logprob: -23.37747573852539
    7. ' not' → logprob: -23.62747573852539
    8. '_data' → logprob: -24.00247573852539
    9. '       ' → logprob: -24.62747573852539
    10. '$data' → logprob: -25.62747573852539

Token 1290: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.011048170737922192
    2. 'is' → logprob: -4.511048316955566
    3. '	is' → logprob: -15.386048316955566
    4. '==' → logprob: -15.886048316955566
    5. '   ' → logprob: -17.26104736328125
    6. '       ' → logprob: -17.63604736328125
    7. ' ==' → logprob: -18.01104736328125
    8. ')' → logprob: -18.51104736328125
    9. ' ' → logprob: -18.51104736328125
    10. ')is' → logprob: -18.51104736328125

Token 1291: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.008619893342256546
    2. ' None' → logprob: -4.758619785308838
    3. '   ' → logprob: -12.383620262145996
    4. '       ' → logprob: -14.633620262145996
    5. '_None' → logprob: -14.883620262145996
    6. '(None' → logprob: -15.508620262145996
    7. '           ' → logprob: -15.758620262145996
    8. '=None' → logprob: -16.25861930847168
    9. '    ' → logprob: -18.38361930847168
    10. '0' → logprob: -18.50861930847168

Token 1292: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5481756925582886
    2. '           ' → logprob: -1.0481756925582886
    3. ':' → logprob: -2.923175811767578
    4. '       ' → logprob: -4.048175811767578
    5. ' or' → logprob: -9.298175811767578
    6. ',' → logprob: -11.048175811767578
    7. '               ' → logprob: -11.173175811767578
    8. '		' → logprob: -11.298175811767578
    9. '          ' → logprob: -11.548175811767578
    10. '):
' → logprob: -11.548175811767578

Token 1293: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.4849443838757e-06
    2. '		' → logprob: -13.375004768371582
    3. '       ' → logprob: -13.500004768371582
    4. '               ' → logprob: -14.000004768371582
    5. '	       ' → logprob: -15.125004768371582
    6. '          ' → logprob: -15.750004768371582
    7. 'break' → logprob: -16.125003814697266
    8. '         ' → logprob: -17.500003814697266
    9. '                   ' → logprob: -17.625003814697266
    10. ' break' → logprob: -17.750003814697266

Token 1294: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31442323327064514
    2. 'break' (adapté à ' break') → logprob: -1.3144232034683228
    3. ' break' → logprob: -7.314423084259033
    4. '       ' → logprob: -7.814423084259033
    5. '               ' → logprob: -9.439423561096191
    6. '	break' → logprob: -11.814423561096191
    7. '   ' → logprob: -13.439423561096191
    8. '_break' → logprob: -13.689423561096191
    9. '		' → logprob: -13.814423561096191
    10. '	       ' → logprob: -15.814423561096191

Token 1295: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.909333023941144e-05
    2. '
' → logprob: -10.250068664550781
    3. ',' → logprob: -11.250068664550781
    4. 'n' → logprob: -11.375068664550781
    5. '        
' → logprob: -12.625068664550781
    6. '   ' → logprob: -12.750068664550781
    7. '(n' → logprob: -13.500068664550781
    8. '```' → logprob: -14.750068664550781
    9. ',n' → logprob: -15.250068664550781
    10. '[n' → logprob: -15.875068664550781

Token 1296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.629921436891891e-05
    2. 'n' → logprob: -10.62502670288086
    3. '
' → logprob: -14.12502670288086
    4. '   ' → logprob: -14.75002670288086
    5. '        
' → logprob: -14.87502670288086
    6. '```' → logprob: -15.62502670288086
    7. '(n' → logprob: -16.00002670288086
    8. ' n' → logprob: -16.87502670288086
    9. ',n' → logprob: -17.00002670288086
    10. ',' → logprob: -17.12502670288086

Token 1297: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.018201803788542747
    2. '       ' → logprob: -4.01820182800293
    3. ' n' → logprob: -10.14320182800293
    4. '(n' → logprob: -12.14320182800293
    5. '   ' → logprob: -12.51820182800293
    6. 'size' → logprob: -13.14320182800293
    7. '```' → logprob: -14.01820182800293
    8. 'length' → logprob: -15.14320182800293
    9. 'num' → logprob: -15.39320182800293
    10. '           ' → logprob: -15.89320182800293

Token 1298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1008713702030946e-06
    2. ' ,' → logprob: -14.375001907348633
    3. ',n' → logprob: -14.750001907348633
    4. ',color' → logprob: -14.875001907348633
    5. '_,' → logprob: -15.625001907348633
    6. 'colors' → logprob: -15.875001907348633
    7. '‌,' → logprob: -16.250001907348633
    8. 'n' → logprob: -16.375001907348633
    9. '=' → logprob: -16.750001907348633
    10. ',
' → logprob: -17.250001907348633

Token 1299: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.00015860427811276168
    2. ' colors' → logprob: -8.750158309936523
    3. 'cols' → logprob: -15.750158309936523
    4. 'color' → logprob: -17.875158309936523
    5. '(colors' → logprob: -20.000158309936523
    6. '   ' → logprob: -20.250158309936523
    7. '_colors' → logprob: -20.250158309936523
    8. 'Colors' → logprob: -20.875158309936523
    9. '.colors' → logprob: -22.250158309936523
    10. '```' → logprob: -22.375158309936523

Token 1300: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409385442733765
    2. ' =' → logprob: -0.9740938544273376
    3. '       ' → logprob: -11.099093437194824
    4. '   ' → logprob: -13.849093437194824
    5. ',' → logprob: -14.724093437194824
    6. ')' → logprob: -15.349093437194824
    7. '           ' → logprob: -16.97409439086914
    8. '=line' → logprob: -17.59909439086914
    9. '        ' → logprob: -18.22409439086914
    10. '＝' → logprob: -18.59909439086914

Token 1301: ' data' (ID: 1238)
  Prédit: 'Linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Linear' → logprob: -0.6250227689743042
    2. 'colors' → logprob: -0.8750227689743042
    3. ' Linear' → logprob: -3.2500228881835938
    4. ' colors' → logprob: -4.750022888183594
    5. 'data' → logprob: -8.875022888183594
    6. 'Color' → logprob: -9.000022888183594
    7. '       ' → logprob: -9.250022888183594
    8. 'Line' → logprob: -10.875022888183594
    9. 'linear' → logprob: -10.875022888183594
    10. 'reader' → logprob: -11.000022888183594

Token 1302: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.0259150157216936e-05
    2. '
' → logprob: -10.25005054473877
    3. '   ' → logprob: -12.25005054473877
    4. 'sequence' → logprob: -12.37505054473877
    5. ' sequence' → logprob: -12.37505054473877
    6. '        
' → logprob: -13.87505054473877
    7. ',' → logprob: -14.75005054473877
    8. '           ' → logprob: -16.375049591064453
    9. '    
' → logprob: -16.625049591064453
    10. '      ' → logprob: -16.875049591064453

Token 1303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.704065213445574e-05
    2. ' sequence' → logprob: -10.375046730041504
    3. 'sequence' → logprob: -11.250046730041504
    4. '   ' → logprob: -12.875046730041504
    5. '```' → logprob: -15.750046730041504
    6. '
' → logprob: -16.25004768371582
    7. '           ' → logprob: -17.50004768371582
    8. 'seq' → logprob: -17.75004768371582
    9. '        
' → logprob: -17.75004768371582
    10. '(sequence' → logprob: -18.62504768371582

Token 1304: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' (adapté à ' sequence') → logprob: -0.021476102992892265
    2. '       ' → logprob: -4.0214762687683105
    3. ' sequence' → logprob: -5.7714762687683105
    4. 'seq' → logprob: -8.521475791931152
    5. '   ' → logprob: -12.146475791931152
    6. ' seq' → logprob: -14.396475791931152
    7. 'sequ' → logprob: -15.271475791931152
    8. '(sequence' → logprob: -16.77147674560547
    9. '```' → logprob: -17.39647674560547
    10. ' ' → logprob: -17.52147674560547

Token 1305: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931484341621399
    2. ' =' → logprob: -0.6931484341621399
    3. '   ' → logprob: -13.693148612976074
    4. '       ' → logprob: -16.568147659301758
    5. '_sequence' → logprob: -17.193147659301758
    6. 'sequence' → logprob: -17.693147659301758
    7. '＝' → logprob: -18.193147659301758
    8. '=
' → logprob: -18.568147659301758
    9. '	' → logprob: -18.818147659301758
    10. '    ' → logprob: -19.068147659301758

Token 1306: ' Linear' (ID: 29092)
  Prédit: 'Linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Linear' → logprob: -2.7610454708337784e-05
    2. ' Linear' → logprob: -10.500027656555176
    3. '   ' → logprob: -20.00002670288086
    4. '       ' → logprob: -20.00002670288086
    5. 'linear' → logprob: -20.62502670288086
    6. 'Line' → logprob: -20.75002670288086
    7. 'Lin' → logprob: -22.37502670288086
    8. '.Linear' → logprob: -22.62502670288086
    9. ' linear' → logprob: -23.25002670288086
    10. '_linear' → logprob: -23.37502670288086

Token 1307: 'Character' (ID: 14648)
  Prédit: 'Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: -5.512236498361744e-07
    2. '_character' → logprob: -15.500000953674316
    3. 'character' → logprob: -15.750000953674316
    4. '<Character' → logprob: -15.875000953674316
    5. 'Color' → logprob: -16.75
    6. '(Character' → logprob: -18.5
    7. ' Character' → logprob: -19.0
    8. 'Characteristic' → logprob: -19.5
    9. '_CHARACTER' → logprob: -19.875
    10. '```' → logprob: -20.125

Token 1308: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.011106777004897594
    2. 'Character' → logprob: -4.511106967926025
    3. 'sequence' → logprob: -9.761106491088867
    4. 'quence' → logprob: -14.011106491088867
    5. ' sequence' → logprob: -15.386106491088867
    6. '_sequence' → logprob: -15.636106491088867
    7. 'character' → logprob: -17.636106491088867
    8. 'Color' → logprob: -18.886106491088867
    9. 'Sequ' → logprob: -19.011106491088867
    10. '<Character' → logprob: -19.761106491088867

Token 1309: '(colors' (ID: 131922)
  Prédit: '(colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(colors' → logprob: -2.935296834039036e-06
    2. 'colors' → logprob: -12.75000286102295
    3. '(color' → logprob: -17.500003814697266
    4. '/colors' → logprob: -18.875003814697266
    5. ' colors' → logprob: -19.875003814697266
    6. '(' → logprob: -20.250003814697266
    7. '.colors' → logprob: -21.375003814697266
    8. ' (' → logprob: -21.625003814697266
    9. '(chars' → logprob: -22.125003814697266
    10. 'Colors' → logprob: -22.250003814697266

Token 1310: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.00208257045596838
    2. '       ' → logprob: -6.752082347869873
    3. ')' → logprob: -7.002082347869873
    4. ')
' → logprob: -13.627082824707031
    5. '   ' → logprob: -14.502082824707031
    6. ' )
' → logprob: -15.877082824707031
    7. ')

' → logprob: -16.50208282470703
    8. '")
' → logprob: -16.62708282470703
    9. '
' → logprob: -18.50208282470703
    10. '           ' → logprob: -18.75208282470703

Token 1311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034901879727840424
    2. 'solver' → logprob: -3.4099018573760986
    3. ' solver' → logprob: -7.409902095794678
    4. '   ' → logprob: -7.534902095794678
    5. 'solution' → logprob: -9.40990161895752
    6. '
' → logprob: -11.65990161895752
    7. '_solver' → logprob: -12.28490161895752
    8. ' solution' → logprob: -12.28490161895752
    9. 'el' → logprob: -12.40990161895752
    10. 'solve' → logprob: -13.03490161895752

Token 1312: ' solver' (ID: 63271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3367152512073517
    2. 'result' → logprob: -1.7117152214050293
    3. 'solver' (adapté à ' solver') → logprob: -2.4617152214050293
    4. 'minimal' → logprob: -4.211715221405029
    5. '       ' → logprob: -5.586715221405029
    6. ' min' → logprob: -7.211715221405029
    7. '   ' → logprob: -8.586715698242188
    8. 'solution' → logprob: -8.836715698242188
    9. ' result' → logprob: -9.211715698242188
    10. ' solver' → logprob: -9.461715698242188

Token 1313: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17692600190639496
    2. '=' → logprob: -2.0519258975982666
    3. '.min' → logprob: -3.6769258975982666
    4. '.solve' → logprob: -5.676926136016846
    5. 'minimal' → logprob: -6.551926136016846
    6. ' minimal' → logprob: -6.551926136016846
    7. '.' → logprob: -7.176926136016846
    8. '=min' → logprob: -7.301926136016846
    9. '_min' → logprob: -8.176925659179688
    10. 'Minimal' → logprob: -9.551925659179688

Token 1314: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -4.842555426876061e-06
    2. ' Game' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.0000057220459
    4. '       ' → logprob: -20.0000057220459
    5. '	Game' → logprob: -20.6250057220459
    6. '(Game' → logprob: -22.5000057220459
    7. '_Game' → logprob: -22.5000057220459
    8. 'User' → logprob: -23.1250057220459
    9. '.Game' → logprob: -23.1250057220459
    10. '<Game' → logprob: -23.5000057220459

Token 1315: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -3.128163257315464e-07
    2. 'solver' → logprob: -15.375
    3. '_solver' → logprob: -17.625
    4. ' Solver' → logprob: -18.625
    5. 'Solve' → logprob: -20.125
    6. ' solver' → logprob: -20.625
    7. 'Sol' → logprob: -21.375
    8. 'olver' → logprob: -21.375
    9. 'Saver' → logprob: -21.5
    10. 'Resolver' → logprob: -21.75

Token 1316: '(sequence' (ID: 129991)
  Prédit: '(sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.0002075933152809739
    2. 'sequence' → logprob: -8.500207901000977
    3. '(' → logprob: -13.250207901000977
    4. '       ' → logprob: -13.750207901000977
    5. '(
' → logprob: -14.000207901000977
    6. ' sequence' → logprob: -15.875207901000977
    7. '.sequence' → logprob: -16.875207901000977
    8. '(sentence' → logprob: -16.875207901000977
    9. '(solution' → logprob: -17.625207901000977
    10. ' (' → logprob: -18.000207901000977

Token 1317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1637164789135568e-05
    2. '       ' → logprob: -12.000011444091797
    3. ' ,' → logprob: -12.750011444091797
    4. ',
' → logprob: -13.125011444091797
    5. '   ' → logprob: -14.875011444091797
    6. 'el' → logprob: -15.750011444091797
    7. ')' → logprob: -17.375011444091797
    8. '(el' → logprob: -17.375011444091797
    9. ',e' → logprob: -17.625011444091797
    10. '           ' → logprob: -18.375011444091797

Token 1318: ' elimination' (ID: 77324)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -1.1160349458805285e-05
    2. ' elimination' → logprob: -11.500011444091797
    3. '           ' → logprob: -14.125011444091797
    4. 'elim' → logprob: -15.500011444091797
    5. '       ' → logprob: -17.875011444091797
    6. '	el' → logprob: -19.500011444091797
    7. '   ' → logprob: -19.625011444091797
    8. ' el' → logprob: -20.250011444091797
    9. 'elong' → logprob: -20.625011444091797
    10. 'em' → logprob: -21.000011444091797

Token 1319: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -3.547789674485102e-05
    2. 'strategy' → logprob: -10.250035285949707
    3. 'Strategy' → logprob: -18.500036239624023
    4. ' strategy' → logprob: -19.125036239624023
    5. 'strateg' → logprob: -21.000036239624023
    6. '=' → logprob: -21.500036239624023
    7. '_str' → logprob: -21.625036239624023
    8. 'ation' → logprob: -21.750036239624023
    9. '_' → logprob: -22.250036239624023
    10. 'strategie' → logprob: -22.500036239624023

Token 1320: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2413981407880783
    2. ')' → logprob: -2.1163980960845947
    3. '       ' → logprob: -2.3663980960845947
    4. ')
' → logprob: -9.241397857666016
    5. '   ' → logprob: -9.991397857666016
    6. '<|end|>' → logprob: -11.241397857666016
    7. '<|end|>' → logprob: -11.491397857666016
    8. ').' → logprob: -12.116397857666016
    9. '           ' → logprob: -12.616397857666016
    10. ' )
' → logprob: -13.241397857666016

Token 1321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012943734414875507
    2. 'result' → logprob: -4.387943744659424
    3. ' result' → logprob: -8.387943267822266
    4. 'min' → logprob: -8.762943267822266
    5. '   ' → logprob: -10.762943267822266
    6. '```' → logprob: -10.887943267822266
    7. ' min' → logprob: -12.137943267822266
    8. 'print' → logprob: -13.512943267822266
    9. '
' → logprob: -14.012943267822266
    10. 'results' → logprob: -14.387943267822266

Token 1322: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.38708174228668213
    2. 'min' → logprob: -1.1370817422866821
    3. '       ' → logprob: -8.88708209991455
    4. 'res' → logprob: -9.88708209991455
    5. 'answer' → logprob: -12.01208209991455
    6. ' result' → logprob: -12.13708209991455
    7. ' min' → logprob: -12.76208209991455
    8. 'minimal' → logprob: -13.01208209991455
    9. 'remaining' → logprob: -13.51208209991455
    10. 'print' → logprob: -13.51208209991455

Token 1323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07407727092504501
    2. '=' → logprob: -2.6990773677825928
    3. '.write' → logprob: -6.449077129364014
    4. '   ' → logprob: -7.574077129364014
    5. '=result' → logprob: -7.699077129364014
    6. '=min' → logprob: -7.949077129364014
    7. '.min' → logprob: -7.949077129364014
    8. ')' → logprob: -8.574077606201172
    9. '.' → logprob: -8.699077606201172
    10. '.result' → logprob: -9.074077606201172

Token 1324: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.0007100477814674377
    2. ' solver' → logprob: -7.2507100105285645
    3. 'writer' → logprob: -17.750709533691406
    4. 'sol' → logprob: -18.625709533691406
    5. '   ' → logprob: -19.000709533691406
    6. '       ' → logprob: -19.875709533691406
    7. '_solver' → logprob: -21.625709533691406
    8. 'resolver' → logprob: -22.250709533691406
    9. 's' → logprob: -22.875709533691406
    10. '
' → logprob: -23.000709533691406

Token 1325: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -1.7432603272027336e-06
    2. 'minimal' → logprob: -13.875001907348633
    3. '.minimum' → logprob: -14.375001907348633
    4. '.max' → logprob: -17.000001907348633
    5. '.Min' → logprob: -18.375001907348633
    6. '.' → logprob: -18.375001907348633
    7. ' minimal' → logprob: -18.750001907348633
    8. '	min' → logprob: -19.250001907348633
    9. ' .' → logprob: -19.250001907348633
    10. '.m' → logprob: -19.875001907348633

Token 1326: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.011066683568060398
    2. '_remaining' → logprob: -4.511066913604736
    3. 'inal' → logprob: -11.136066436767578
    4. 'mal' → logprob: -13.386066436767578
    5. 'IMAL' → logprob: -14.136066436767578
    6. 'imum' → logprob: -14.261066436767578
    7. 'remaining' → logprob: -14.511066436767578
    8. 'al' → logprob: -15.136066436767578
    9. 'imized' → logprob: -15.511066436767578
    10. 'Remaining' → logprob: -15.511066436767578

Token 1327: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -5.512236498361744e-07
    2. 'remaining' → logprob: -15.000000953674316
    3. 'Remaining' → logprob: -16.25
    4. '_rem' → logprob: -17.875
    5. '_' → logprob: -18.5
    6. '```' → logprob: -18.625
    7. '_possible' → logprob: -18.875
    8. ' remaining' → logprob: -20.0
    9. '_required' → logprob: -20.25
    10. '_return' → logprob: -20.375

Token 1328: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6211027503013611
    2. '       ' → logprob: -1.2461028099060059
    3. '()' → logprob: -1.8711028099060059
    4. '(result' → logprob: -4.371102809906006
    5. '
' → logprob: -6.246102809906006
    6. '(writer' → logprob: -6.246102809906006
    7. '(' → logprob: -6.371102809906006
    8. 'result' → logprob: -7.121102809906006
    9. '();' → logprob: -7.621102809906006
    10. '        
' → logprob: -7.871102809906006

Token 1329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.673547563375905e-05
    2. '   ' → logprob: -9.375086784362793
    3. 'writer' → logprob: -13.750086784362793
    4. '```' → logprob: -14.375086784362793
    5. '
' → logprob: -16.375085830688477
    6. '           ' → logprob: -18.250085830688477
    7. ' writer' → logprob: -19.125085830688477
    8. '      ' → logprob: -19.125085830688477
    9. '        
' → logprob: -19.125085830688477
    10. 'Output' → logprob: -19.125085830688477

Token 1330: ' writer' (ID: 10645)
  Prédit: 'writer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'writer' (adapté à ' writer') → logprob: -0.10026437044143677
    2. '       ' → logprob: -2.350264310836792
    3. 'Output' → logprob: -9.975264549255371
    4. '   ' → logprob: -11.975264549255371
    5. ' writer' → logprob: -12.975264549255371
    6. 'Writer' → logprob: -12.975264549255371
    7. '
' → logprob: -16.225263595581055
    8. 'write' → logprob: -16.725263595581055
    9. '	writer' → logprob: -16.725263595581055
    10. 'worker' → logprob: -17.100263595581055

Token 1331: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -1.981667537620524e-06
    2. '.' → logprob: -13.250001907348633
    3. 'write' → logprob: -16.250001907348633
    4. ' .' → logprob: -18.125001907348633
    5. '   ' → logprob: -19.250001907348633
    6. '.send' → logprob: -20.125001907348633
    7. '.print' → logprob: -20.125001907348633
    8. '```' → logprob: -20.500001907348633
    9. '._' → logprob: -20.625001907348633
    10. '
' → logprob: -20.625001907348633

Token 1332: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.981667537620524e-06
    2. 'result' → logprob: -13.250001907348633
    3. 'Result' → logprob: -16.250001907348633
    4. 's' → logprob: -17.250001907348633
    5. '_RESULT' → logprob: -18.125001907348633
    6. '(result' → logprob: -18.250001907348633
    7. '	result' → logprob: -20.500001907348633
    8. 't' → logprob: -20.625001907348633
    9. '   ' → logprob: -20.750001907348633
    10. '
' → logprob: -20.875001907348633

Token 1333: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0040785204619169235
    2. 'result' → logprob: -5.504078388214111
    3. ' result' → logprob: -17.254077911376953
    4. '[result' → logprob: -20.879077911376953
    5. '(' → logprob: -21.129077911376953
    6. '=result' → logprob: -21.504077911376953
    7. ',result' → logprob: -21.629077911376953
    8. '	result' → logprob: -22.254077911376953
    9. ' (' → logprob: -23.254077911376953
    10. '$result' → logprob: -23.254077911376953

Token 1334: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000363590574124828
    2. ')
' → logprob: -8.75036334991455
    3. '())' → logprob: -8.75036334991455
    4. '()' → logprob: -10.75036334991455
    5. '       ' → logprob: -11.12536334991455
    6. '   ' → logprob: -12.12536334991455
    7. '<|end|>' → logprob: -13.12536334991455
    8. '```' → logprob: -13.75036334991455
    9. ' )' → logprob: -15.00036334991455
    10. '()
' → logprob: -15.12536334991455

Token 1335: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.9743012671824545e-05
    2. '```' → logprob: -10.875020027160645
    3. ' if' → logprob: -14.375020027160645
    4. '
' → logprob: -16.875019073486328
    5. 'main' → logprob: -17.000019073486328
    6. '#' → logprob: -17.875019073486328
    7. '__' → logprob: -19.625019073486328
    8. '    
' → logprob: -19.625019073486328
    9. '``' → logprob: -20.125019073486328
    10. '	if' → logprob: -20.375019073486328

Token 1336: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011107130907475948
    2. ' __' → logprob: -4.511106967926025
    3. 'name' → logprob: -9.761107444763184
    4. '___' → logprob: -13.761107444763184
    5. '_name' → logprob: -15.011107444763184
    6. ' ' → logprob: -16.386106491088867
    7. '```' → logprob: -16.636106491088867
    8. ' "__' → logprob: -17.011106491088867
    9. '  ' → logprob: -17.261106491088867
    10. 'Name' → logprob: -17.386106491088867

Token 1337: 'name' (ID: 897)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7200027108192444
    2. '__' → logprob: -0.7200027108192444
    3. ' ==' → logprob: -3.8450026512145996
    4. '=="' → logprob: -6.0950026512146
    5. 'name' → logprob: -6.2200026512146
    6. '=='' → logprob: -7.5950026512146
    7. '```' → logprob: -8.845003128051758
    8. 'if' → logprob: -9.095003128051758
    9. 'main' → logprob: -10.095003128051758
    10. '==
' → logprob: -11.345003128051758

Token 1338: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.3856492842023727e-06
    2. '__.__' → logprob: -14.250000953674316
    3. '==' → logprob: -14.625000953674316
    4. '__.' → logprob: -15.875000953674316
    5. ' ==' → logprob: -16.750001907348633
    6. 'name' → logprob: -16.875001907348633
    7. '____' → logprob: -16.875001907348633
    8. '__
' → logprob: -17.000001907348633
    9. '___' → logprob: -17.625001907348633
    10. '```' → logprob: -18.375001907348633

Token 1339: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05019232630729675
    2. '==' → logprob: -3.050192356109619
    3. '=="' → logprob: -6.925192356109619
    4. ' ==' → logprob: -7.425192356109619
    5. '=='' → logprob: -11.300191879272461
    6. '__.__' → logprob: -11.925191879272461
    7. '===' → logprob: -13.675191879272461
    8. 'main' → logprob: -14.050191879272461
    9. '```' → logprob: -14.425191879272461
    10. '==
' → logprob: -14.425191879272461

Token 1340: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004079112783074379
    2. ''' → logprob: -5.504079341888428
    3. '__' → logprob: -14.37907886505127
    4. ' "__' → logprob: -16.004079818725586
    5. '"name' → logprob: -20.004079818725586
    6. 'main' → logprob: -20.129079818725586
    7. '"class' → logprob: -20.379079818725586
    8. '"user' → logprob: -20.379079818725586
    9. ''"' → logprob: -20.754079818725586
    10. '   ' → logprob: -21.129079818725586

Token 1341: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12821675837039948
    2. '__' → logprob: -2.1282167434692383
    3. '"' → logprob: -7.003216743469238
    4. 'name' → logprob: -8.003216743469238
    5. ''' → logprob: -10.128216743469238
    6. '"name' → logprob: -13.628216743469238
    7. '_main' → logprob: -14.128216743469238
    8. ' "__' → logprob: -14.628216743469238
    9. '__":
' → logprob: -14.753216743469238
    10. ' main' → logprob: -14.753216743469238

Token 1342: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.014595216140151024
    2. '__' → logprob: -4.264595031738281
    3. '__':
' → logprob: -7.764595031738281
    4. '__
' → logprob: -12.014595031738281
    5. '__.' → logprob: -15.389595031738281
    6. '__["' → logprob: -15.514595031738281
    7. '__
' → logprob: -15.639595031738281
    8. '"' → logprob: -15.889595031738281
    9. '__("' → logprob: -16.38959503173828
    10. '__.__' → logprob: -16.38959503173828

Token 1343: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.008683474734425545
    2. '   ' → logprob: -4.758683681488037
    3. ' main' → logprob: -10.383683204650879
    4. '	main' → logprob: -10.508683204650879
    5. '__' → logprob: -11.508683204650879
    6. '_main' → logprob: -14.883683204650879
    7. ' ' → logprob: -16.508684158325195
    8. '(main' → logprob: -16.633684158325195
    9. '    
' → logprob: -16.633684158325195
    10. '```' → logprob: -17.008684158325195

Token 1344: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -15.000000953674316
    3. ' main' → logprob: -16.0
    4. 'import' → logprob: -16.5
    5. '	main' → logprob: -19.5
    6. '.main' → logprob: -23.875
    7. '(main' → logprob: -23.875
    8. '_main' → logprob: -25.125
    9. '  ' → logprob: -26.75
    10. 'Main' → logprob: -27.0

Token 1345: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1343
Tokens correctement prédits (1ère position, stricte): 580
Tokens correctement prédits (1ère position, avec adaptation): 674
Tokens correctement prédits (top 10): 1175
Précision stricte (1ère position): 43.19%
Précision adaptée (1ère position): 50.19%
Précision (top 10): 87.49%
================================================================================
