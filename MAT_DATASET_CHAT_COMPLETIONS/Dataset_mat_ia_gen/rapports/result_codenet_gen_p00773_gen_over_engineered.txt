================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class VATPriceCalculator:
    class PricePair:
        def __init__(self, p1: int, p2: int):
            self.p1 = p1
            self.p2 = p2
        
        def total_after_tax(self, rate: int) -> int:
            def after_tax(p: int, r: int) -> int:
                raw = p * (100 + r)
                div, mod = divmod(raw, 100)
                if mod >= 50:
                    div += 1
                return div
            return after_tax(self.p1, rate) + after_tax(self.p2, rate)
        
        def __repr__(self):
            return f"PricePair({self.p1}, {self.p2})"

    class VATChangeScenario:
        def __init__(self, old_rate: int, new_rate: int, old_total: int):
            self.old_rate = old_rate
            self.new_rate = new_rate
            self.old_total = old_total
            self.valid_pairs = []
            self._generate_valid_pairs()
        
        def _generate_valid_pairs(self):
            # We only consider pairs (p, old_total - p) with p in [1, old_total-1]
            # which have the after_tax total at old_rate equal to old_total
            for p1 in range(1, self.old_total):
                p2 = self.old_total - p1
                pair = VATPriceCalculator.PricePair(p1, p2)
                if pair.total_after_tax(self.old_rate) == self.old_total:
                    self.valid_pairs.append(pair)
        
        def maximum_new_total(self) -> int:
            # Among valid pairs, pick max total_after_tax with new_rate
            max_total = 0
            for pair in self.valid_pairs:
                val = pair.total_after_tax(self.new_rate)
                if val > max_total:
                    max_total = val
            return max_total
    
    def __init__(self):
        self.scenarios = []
    
    def add_scenario(self, x: int, y: int, s: int):
        self.scenarios.append(VATPriceCalculator.VATChangeScenario(x, y, s))
    
    def compute_results(self):
        results = []
        for scenario in self.scenarios:
            results.append(scenario.maximum_new_total())
        return results


def main():
    import sys
    calculator = VATPriceCalculator()
    for line in sys.stdin:
        if not line.strip():
            continue
        x, y, s = map(int, line.strip().split())
        if x == 0 and y == 0 and s == 0:
            break
        calculator.add_scenario(x, y, s)
    results = calculator.compute_results()
    for r in results:
        print(r)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' VAT' (ID: 56356)
  → Token d'amorce (pas de prédiction)

Token 2: 'Price' (ID: 7417)
  → Token d'amorce (pas de prédiction)

Token 3: 'Calculator' (ID: 50159)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6450673341751099
    2. ':' → logprob: -0.8950673341751099
    3. '{' → logprob: -2.7700672149658203
    4. '.' → logprob: -5.77006721496582
    5. '(:' → logprob: -7.39506721496582
    6. '```' → logprob: -8.89506721496582
    7. ' {' → logprob: -9.27006721496582
    8. ' :' → logprob: -10.64506721496582
    9. '():' → logprob: -10.64506721496582
    10. 's' → logprob: -10.77006721496582

Token 4: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16607527434825897
    2. ':' → logprob: -2.2910752296447754
    3. '{' → logprob: -3.0410752296447754
    4. '.' → logprob: -5.541075229644775
    5. '(:' → logprob: -10.041075706481934
    6. '```' → logprob: -10.416075706481934
    7. ' {' → logprob: -10.541075706481934
    8. '[' → logprob: -11.666075706481934
    9. '({' → logprob: -11.791075706481934
    10. '(
' → logprob: -12.166075706481934

Token 5: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05689755827188492
    2. ':' → logprob: -3.3068976402282715
    3. '.' → logprob: -4.8068976402282715
    4. '   ' → logprob: -4.9318976402282715
    5. '```' → logprob: -6.0568976402282715
    6. '(
' → logprob: -8.306897163391113
    7. '\' → logprob: -9.306897163391113
    8. '[' → logprob: -9.431897163391113
    9. ' ' → logprob: -9.556897163391113
    10. '(space' → logprob: -9.681897163391113

Token 6: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8046289682388306
    2. '    ' → logprob: -1.3046289682388306
    3. ' ' → logprob: -1.5546289682388306
    4. ' def' → logprob: -3.679628849029541
    5. '```' → logprob: -4.429628849029541
    6. 'def' → logprob: -4.929628849029541
    7. '    
' → logprob: -5.429628849029541
    8. ' 
' → logprob: -5.554628849029541
    9. ' ```' → logprob: -6.304628849029541
    10. '       ' → logprob: -6.304628849029541

Token 7: ' Price' (ID: 11772)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42312929034233093
    2. ' VAT' → logprob: -1.9231293201446533
    3. '  ' → logprob: -2.7981293201446533
    4. 'VAT' → logprob: -3.5481293201446533
    5. '   ' → logprob: -3.9231293201446533
    6. ' Calculator' → logprob: -4.298129081726074
    7. ' Vat' → logprob: -4.298129081726074
    8. ':' → logprob: -4.423129081726074
    9. '(' → logprob: -4.923129081726074
    10. ' Variable' → logprob: -5.048129081726074

Token 8: 'Pair' (ID: 15573)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09697317332029343
    2. ':' → logprob: -2.596973180770874
    3. 'Calculator' → logprob: -4.471972942352295
    4. 'Calculation' → logprob: -6.846972942352295
    5. '):' → logprob: -6.971972942352295
    6. ')' → logprob: -7.096972942352295
    7. '   ' → logprob: -7.221972942352295
    8. ' (' → logprob: -7.471972942352295
    9. 's' → logprob: -7.971972942352295
    10. ' ' → logprob: -8.846973419189453

Token 9: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22680513560771942
    2. ':' → logprob: -1.6018050909042358
    3. '(
' → logprob: -8.101804733276367
    4. '[' → logprob: -8.226804733276367
    5. '(:' → logprob: -8.851804733276367
    6. '.' → logprob: -8.976804733276367
    7. '   ' → logprob: -9.101804733276367
    8. ' :' → logprob: -9.101804733276367
    9. ':
' → logprob: -10.101804733276367
    10. ' (' → logprob: -10.101804733276367

Token 10: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02113102748990059
    2. '       ' → logprob: -4.5211310386657715
    3. '    ' → logprob: -6.0211310386657715
    4. '(
' → logprob: -6.3961310386657715
    5. '\' → logprob: -6.7711310386657715
    6. '   ' → logprob: -6.7711310386657715
    7. ' (' → logprob: -6.8961310386657715
    8. '        ' → logprob: -7.5211310386657715
    9. '[' → logprob: -8.271130561828613
    10. '(space' → logprob: -8.646130561828613

Token 11: ' def' (ID: 1056)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6346160769462585
    2. '       ' → logprob: -1.0096161365509033
    3. '           ' → logprob: -3.6346161365509033
    4. ' (' → logprob: -3.8846161365509033
    5. '   ' → logprob: -4.509615898132324
    6. '        ' → logprob: -4.509615898132324
    7. '```' → logprob: -5.134615898132324
    8. '(price' → logprob: -5.384615898132324
    9. '(
' → logprob: -5.509615898132324
    10. '`' → logprob: -5.884615898132324

Token 12: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -9.901345038088039e-05
    2. '__' → logprob: -10.000099182128906
    3. ' ' → logprob: -10.625099182128906
    4. ' _' → logprob: -11.125099182128906
    5. ' init' → logprob: -12.500099182128906
    6. ' calculate' → logprob: -12.500099182128906
    7. '_init' → logprob: -12.750099182128906
    8. '_' → logprob: -13.500099182128906
    9. ' initialize' → logprob: -14.250099182128906
    10. 'init' → logprob: -14.875099182128906

Token 13: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1517960956552997e-05
    2. ' init' → logprob: -11.500011444091797
    3. 'ini' → logprob: -14.750011444091797
    4. '_init' → logprob: -14.750011444091797
    5. '	init' → logprob: -16.000011444091797
    6. 'inite' → logprob: -16.500011444091797
    7. '```' → logprob: -16.625011444091797
    8. ' ' → logprob: -17.375011444091797
    9. '(init' → logprob: -17.375011444091797
    10. '   ' → logprob: -17.375011444091797

Token 14: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06264208257198334
    2. '__' → logprob: -2.8126420974731445
    3. '__(
' → logprob: -7.9376420974731445
    4. '__((' → logprob: -8.687642097473145
    5. '__('' → logprob: -9.062642097473145
    6. '(' → logprob: -11.187642097473145
    7. '__(*' → logprob: -12.187642097473145
    8. '__("' → logprob: -12.312642097473145
    9. '(self' → logprob: -12.312642097473145
    10. '__.__' → logprob: -12.937642097473145

Token 15: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.055473633110523224
    2. ' self' → logprob: -2.930473566055298
    3. 'base' → logprob: -8.680473327636719
    4. 'price' → logprob: -9.180473327636719
    5. 'original' → logprob: -9.305473327636719
    6. ' base' → logprob: -9.930473327636719
    7. ' original' → logprob: -10.555473327636719
    8. 'amount' → logprob: -10.680473327636719
    9. ' price' → logprob: -10.805473327636719
    10. ' ' → logprob: -10.930473327636719

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006134380120784044
    2. ' ,' → logprob: -5.381134510040283
    3. 'self' → logprob: -6.631134510040283
    4. ',self' → logprob: -9.131134033203125
    5. ' self' → logprob: -11.006134033203125
    6. ')' → logprob: -11.006134033203125
    7. 'price' → logprob: -11.131134033203125
    8. '<|end|>' → logprob: -12.381134033203125
    9. ',value' → logprob: -12.631134033203125
    10. '_,' → logprob: -12.631134033203125

Token 17: ' p' (ID: 275)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3349589109420776
    2. ' net' → logprob: -1.4599589109420776
    3. ' self' → logprob: -1.5849589109420776
    4. ' price' → logprob: -2.459959030151367
    5. 'net' → logprob: -2.959959030151367
    6. 'price' → logprob: -3.209959030151367
    7. ' base' → logprob: -3.834959030151367
    8. 'base' → logprob: -3.959959030151367
    9. 'gross' → logprob: -4.334959030151367
    10. 'amount' → logprob: -4.959959030151367

Token 18: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3142741918563843
    2. 'rice' → logprob: -1.3142741918563843
    3. 'rices' → logprob: -7.439274311065674
    4. ' r' → logprob: -8.689273834228516
    5. 'ric' → logprob: -9.689273834228516
    6. ')' → logprob: -10.064273834228516
    7. ' rice' → logprob: -10.064273834228516
    8. 'ri' → logprob: -10.314273834228516
    9. ' ' → logprob: -10.814273834228516
    10. '   ' → logprob: -11.814273834228516

Token 19: ':' (ID: 25)
  Prédit: 'rice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rice' → logprob: -0.2314797192811966
    2. ',' → logprob: -1.6064797639846802
    3. 'rices' → logprob: -6.481479644775391
    4. ':' → logprob: -6.481479644775391
    5. ',r' → logprob: -7.481479644775391
    6. ' ,' → logprob: -7.481479644775391
    7. 'r' → logprob: -7.481479644775391
    8. '):' → logprob: -7.731479644775391
    9. '_price' → logprob: -8.23147964477539
    10. 'ric' → logprob: -8.23147964477539

Token 20: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.2924610674381256
    2. 'float' → logprob: -1.4174610376358032
    3. ' int' → logprob: -5.042460918426514
    4. 'int' → logprob: -5.542460918426514
    5. ' str' → logprob: -8.292461395263672
    6. ' price' → logprob: -8.792461395263672
    7. ' ' → logprob: -9.667461395263672
    8. ')' → logprob: -9.667461395263672
    9. '=float' → logprob: -9.667461395263672
    10. 'price' → logprob: -10.167461395263672

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002775512868538499
    2. ' ,' → logprob: -6.0027756690979
    3. ')' → logprob: -8.752775192260742
    4. ',p' → logprob: -9.752775192260742
    5. '):' → logprob: -9.877775192260742
    6. '=' → logprob: -11.752775192260742
    7. ',
' → logprob: -12.252775192260742
    8. ':' → logprob: -12.377775192260742
    9. ' ' → logprob: -12.627775192260742
    10. ' )' → logprob: -13.502775192260742

Token 22: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.04657747969031334
    2. 'p' → logprob: -3.1715774536132812
    3. ' ' → logprob: -5.671577453613281
    4. ' ' → logprob: -10.046577453613281
    5. ',' → logprob: -10.671577453613281
    6. ' ,' → logprob: -10.921577453613281
    7. ',p' → logprob: -11.171577453613281
    8. ')' → logprob: -12.296577453613281
    9. '<|end|>' → logprob: -12.296577453613281
    10. '    ' → logprob: -12.421577453613281

Token 23: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.567575034452602e-05
    2. 'r' → logprob: -9.87509536743164
    3. 'rice' → logprob: -10.12509536743164
    4. 'rices' → logprob: -13.50009536743164
    5. ' ' → logprob: -13.75009536743164
    6. '_' → logprob: -15.37509536743164
    7. '₂' → logprob: -15.75009536743164
    8. 'p' → logprob: -15.87509536743164
    9. '1' → logprob: -16.00009536743164
    10. '_price' → logprob: -16.12509536743164

Token 24: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03169099614024162
    2. '):' → logprob: -3.531691074371338
    3. ')' → logprob: -6.906691074371338
    4. ':int' → logprob: -7.156691074371338
    5. ' ):' → logprob: -9.28169059753418
    6. ' :' → logprob: -10.28169059753418
    7. '):
' → logprob: -11.53169059753418
    8. ',' → logprob: -12.15669059753418
    9. ' )' → logprob: -12.40669059753418
    10. 'int' → logprob: -13.03169059753418

Token 25: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6933534145355225
    2. ' int' → logprob: -0.6933534145355225
    3. ' float' → logprob: -9.693353652954102
    4. ')' → logprob: -9.943353652954102
    5. ':int' → logprob: -10.443353652954102
    6. 'float' → logprob: -10.443353652954102
    7. '=int' → logprob: -11.693353652954102
    8. '[int' → logprob: -12.193353652954102
    9. ']int' → logprob: -12.318353652954102
    10. ' ' → logprob: -12.318353652954102

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002351741772145033
    2. ')' → logprob: -6.127351760864258
    3. ':' → logprob: -9.502351760864258
    4. ',' → logprob: -9.502351760864258
    5. '):
' → logprob: -11.627351760864258
    6. ' ):' → logprob: -12.127351760864258
    7. '   ' → logprob: -14.002351760864258
    8. '       ' → logprob: -14.627351760864258
    9. ' ' → logprob: -14.877351760864258
    10. '```' → logprob: -15.627351760864258

Token 27: '           ' (ID: 352)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31653860211372375
    2. ':' → logprob: -1.9415385723114014
    3. ')' → logprob: -2.4415385723114014
    4. ',' → logprob: -3.6915385723114014
    5. '):
' → logprob: -4.5665388107299805
    6. '<|end|>' → logprob: -5.9415388107299805
    7. '       ' → logprob: -6.4415388107299805
    8. ':
' → logprob: -8.44153881072998
    9. ' :' → logprob: -8.69153881072998
    10. '   ' → logprob: -8.81653881072998

Token 28: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5783119201660156
    2. 'self' (adapté à ' self') → logprob: -0.9533119201660156
    3. '               ' → logprob: -3.0783119201660156
    4. '           ' → logprob: -5.203311920166016
    5. ' ' → logprob: -6.828311920166016
    6. '             ' → logprob: -7.578311920166016
    7. '            ' → logprob: -8.078311920166016
    8. '   ' → logprob: -9.203311920166016
    9. '                ' → logprob: -10.078311920166016
    10. ' ' → logprob: -10.828311920166016

Token 29: '.p' (ID: 1201)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0027228486724197865
    2. '.p' → logprob: -6.00272274017334
    3. ' .' → logprob: -9.62772274017334
    4. 'p' → logprob: -9.62772274017334
    5. ' p' → logprob: -9.75272274017334
    6. '._' → logprob: -11.25272274017334
    7. '=' → logprob: -12.25272274017334
    8. ',' → logprob: -12.25272274017334
    9. '.price' → logprob: -12.25272274017334
    10. ')' → logprob: -12.37772274017334

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015264409012161195
    2. 'r' → logprob: -9.125152587890625
    3. 'rice' → logprob: -10.250152587890625
    4. '2' → logprob: -12.500152587890625
    5. '_' → logprob: -13.125152587890625
    6. 'rices' → logprob: -13.875152587890625
    7. '_r' → logprob: -15.125152587890625
    8. 'air' → logprob: -15.437652587890625
    9. ' ' → logprob: -15.437652587890625
    10. '```' → logprob: -15.750152587890625

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09105444699525833
    2. '=' → logprob: -2.4660544395446777
    3. ',' → logprob: -6.341054439544678
    4. ' ,' → logprob: -8.341054916381836
    5. ')' → logprob: -9.966054916381836
    6. ' ' → logprob: -10.341054916381836
    7. '<|end|>' → logprob: -11.466054916381836
    8. ' +=' → logprob: -12.216054916381836
    9. '=int' → logprob: -12.841054916381836
    10. '<|end|>' → logprob: -13.216054916381836

Token 32: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.20141597092151642
    2. 'p' → logprob: -1.701416015625
    3. ' ' → logprob: -13.326416015625
    4. ' ' → logprob: -15.576416015625
    5. '0' → logprob: -15.701416015625
    6. '            ' → logprob: -16.076416015625
    7. 'int' → logprob: -16.076416015625
    8. '(p' → logprob: -17.201416015625
    9. ')p' → logprob: -17.201416015625
    10. '    ' → logprob: -17.326416015625

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.219262624857947e-05
    2. '2' → logprob: -9.625072479248047
    3. '_' → logprob: -13.000072479248047
    4. '.' → logprob: -13.375072479248047
    5. 'a' → logprob: -14.875072479248047
    6. '' → logprob: -15.312572479248047
    7. 's' → logprob: -15.312572479248047
    8. ' ' → logprob: -15.562572479248047
    9. 'self' → logprob: -15.750072479248047
    10. 'r' → logprob: -15.937572479248047

Token 34: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1994616985321045
    2. '       ' → logprob: -2.4494616985321045
    3. '<|end|>' → logprob: -2.9494616985321045
    4. '
' → logprob: -4.324461936950684
    5. '            
' → logprob: -4.949461936950684
    6. ' 
' → logprob: -5.824461936950684
    7. ' ' → logprob: -6.199461936950684
    8. '        
' → logprob: -6.199461936950684
    9. 'newline' → logprob: -6.324461936950684
    10. '```' → logprob: -6.574461936950684

Token 35: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06541354209184647
    2. '       ' → logprob: -3.565413475036621
    3. '
' → logprob: -4.190413475036621
    4. '<|end|>' → logprob: -4.190413475036621
    5. ' ' → logprob: -6.940413475036621
    6. '   ' → logprob: -7.315413475036621
    7. ' 
' → logprob: -7.565413475036621
    8. '        ' → logprob: -7.690413475036621
    9. '            
' → logprob: -8.065413475036621
    10. '<|end|>' → logprob: -8.190413475036621

Token 36: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24130795896053314
    2. '       ' → logprob: -2.2413079738616943
    3. '
' → logprob: -3.7413079738616943
    4. ' ' → logprob: -3.8663079738616943
    5. ',' → logprob: -4.241307735443115
    6. '   ' → logprob: -4.991307735443115
    7. '            
' → logprob: -4.991307735443115
    8. ' 
' → logprob: -5.241307735443115
    9. '<|end|>' → logprob: -5.491307735443115
    10. '        ' → logprob: -5.741307735443115

Token 37: '.p' (ID: 1201)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00018685187387745827
    2. '.p' → logprob: -8.750186920166016
    3. ' .' → logprob: -11.125186920166016
    4. 'p' → logprob: -12.125186920166016
    5. '<|end|>' → logprob: -13.125186920166016
    6. '_' → logprob: -13.625186920166016
    7. ')' → logprob: -14.125186920166016
    8. '=' → logprob: -14.375186920166016
    9. '<|end|>' → logprob: -14.375186920166016
    10. '.)' → logprob: -14.750186920166016

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4498052223643754e-05
    2. 'r' → logprob: -12.125014305114746
    3. '1' → logprob: -12.375014305114746
    4. '.' → logprob: -12.875014305114746
    5. ' ' → logprob: -14.125014305114746
    6. 'a' → logprob: -14.625014305114746
    7. '_' → logprob: -14.875014305114746
    8. ',' → logprob: -15.500014305114746
    9. 'er' → logprob: -16.312515258789062
    10. '۲' → logprob: -17.000015258789062

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023439675569534
    2. '=' → logprob: -2.3502345085144043
    3. '<|end|>' → logprob: -10.975234031677246
    4. ' ' → logprob: -11.975234031677246
    5. ')' → logprob: -12.850234031677246
    6. ' =
' → logprob: -14.600234031677246
    7. '<|end|>' → logprob: -14.600234031677246
    8. ' ==' → logprob: -15.725234031677246
    9. ' =)' → logprob: -15.975234031677246
    10. '   ' → logprob: -16.225234985351562

Token 40: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.13011349737644196
    2. 'p' → logprob: -2.1301136016845703
    3. ' ' → logprob: -5.75511360168457
    4. ' ' → logprob: -11.75511360168457
    5. 'space' → logprob: -12.88011360168457
    6. ''' → logprob: -15.00511360168457
    7. ' ​' → logprob: -15.25511360168457
    8. '(p' → logprob: -15.25511360168457
    9. ' п' → logprob: -15.38011360168457
    10. 's' → logprob: -15.50511360168457

Token 41: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06831934303045273
    2. '1' → logprob: -2.818319320678711
    3. 'air' → logprob: -5.068319320678711
    4. 'airs' → logprob: -11.443319320678711
    5. 'r' → logprob: -11.818319320678711
    6. 'a' → logprob: -12.193319320678711
    7. '12' → logprob: -13.193319320678711
    8. 'ai' → logprob: -13.630819320678711
    9. '```' → logprob: -13.630819320678711
    10. 'ay' → logprob: -13.755819320678711

Token 42: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03170047327876091
    2. '<|end|>' → logprob: -3.656700372695923
    3. '   ' → logprob: -6.406700611114502
    4. '       ' → logprob: -7.156700611114502
    5. ' 
' → logprob: -7.406700611114502
    6. '    
' → logprob: -7.531700611114502
    7. '

' → logprob: -7.781700611114502
    8. '\n' → logprob: -8.156700134277344
    9. '<|end|>' → logprob: -8.531700134277344
    10. 'newline' → logprob: -8.656700134277344

Token 43: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24102115631103516
    2. '
' → logprob: -2.116021156311035
    3. '       ' → logprob: -2.991021156311035
    4. 'def' → logprob: -4.241021156311035
    5. '    
' → logprob: -4.491021156311035
    6. '<|end|>' → logprob: -5.366021156311035
    7. ' ' → logprob: -5.491021156311035
    8. '    ' → logprob: -5.866021156311035
    9. '        
' → logprob: -6.241021156311035
    10. ' 
' → logprob: -6.866021156311035

Token 44: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3061845600605011
    2. '
' → logprob: -1.4311845302581787
    3. '   ' → logprob: -4.431184768676758
    4. ' def' → logprob: -5.181184768676758
    5. '    
' → logprob: -6.181184768676758
    6. '<|end|>' → logprob: -6.431184768676758
    7. '       ' → logprob: -6.931184768676758
    8. '        
' → logprob: -7.931184768676758
    9. ' ' → logprob: -8.181184768676758
    10. '

' → logprob: -8.306184768676758

Token 45: ' total' (ID: 3609)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5172826051712036
    2. ' __' → logprob: -1.6422826051712036
    3. ' calculate' → logprob: -2.392282485961914
    4. '_' → logprob: -2.517282485961914
    5. ' _' → logprob: -3.767282485961914
    6. ' add' → logprob: -5.892282485961914
    7. ' space' → logprob: -6.017282485961914
    8. ' get' → logprob: -6.517282485961914
    9. '__' → logprob: -6.767282485961914
    10. 'calculate' → logprob: -7.017282485961914

Token 46: '_after' (ID: 46788)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23579752445220947
    2. '(self' → logprob: -1.6107975244522095
    3. '_' → logprob: -4.86079740524292
    4. '_price' → logprob: -6.48579740524292
    5. 's' → logprob: -8.235797882080078
    6. '(
' → logprob: -8.860797882080078
    7. 'self' → logprob: -8.860797882080078
    8. '()' → logprob: -9.110797882080078
    9. '(s' → logprob: -9.235797882080078
    10. ')' → logprob: -9.485797882080078

Token 47: '_tax' (ID: 61146)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.347139447927475
    2. '_' → logprob: -1.3471394777297974
    3. '_tax' → logprob: -3.597139358520508
    4. '_discount' → logprob: -5.597139358520508
    5. '_V' → logprob: -6.972139358520508
    6. '_va' → logprob: -7.472139358520508
    7. '_t' → logprob: -8.597139358520508
    8. '_add' → logprob: -9.097139358520508
    9. 'VAT' → logprob: -9.847139358520508
    10. '__' → logprob: -10.472139358520508

Token 48: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3576197922229767
    2. '(' → logprob: -1.2326197624206543
    3. '(s' → logprob: -4.982619762420654
    4. 's' → logprob: -6.357619762420654
    5. 'self' → logprob: -8.482620239257812
    6. '_' → logprob: -9.357620239257812
    7. '(
' → logprob: -9.482620239257812
    8. ' (' → logprob: -9.607620239257812
    9. '(sel' → logprob: -11.482620239257812
    10. '_s' → logprob: -11.607620239257812

Token 49: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5920857787132263
    2. ')' → logprob: -1.092085838317871
    3. ',' → logprob: -2.217085838317871
    4. ' ):' → logprob: -7.592085838317871
    5. '(' → logprob: -7.717085838317871
    6. ' )' → logprob: -8.217085838317871
    7. '):
' → logprob: -8.467085838317871
    8. 'self' → logprob: -8.467085838317871
    9. ':' → logprob: -8.967085838317871
    10. ' ,' → logprob: -9.592085838317871

Token 50: ' rate' (ID: 6251)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5691252946853638
    2. ' tax' → logprob: -1.3191252946853638
    3. ' vat' → logprob: -2.694125175476074
    4. ' rate' → logprob: -3.319125175476074
    5. 'self' → logprob: -4.444125175476074
    6. ' )' → logprob: -4.444125175476074
    7. ')' → logprob: -4.444125175476074
    8. 'tax' → logprob: -4.819125175476074
    9. 'vat' → logprob: -5.194125175476074
    10. ' t' → logprob: -5.694125175476074

Token 51: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6020758152008057
    2. ':' → logprob: -0.8520758152008057
    3. '=' → logprob: -4.102075576782227
    4. ')' → logprob: -5.602075576782227
    5. ' ):' → logprob: -6.227075576782227
    6. '_tax' → logprob: -6.727075576782227
    7. ',' → logprob: -7.352075576782227
    8. '%' → logprob: -7.977075576782227
    9. '_' → logprob: -8.102075576782227
    10. '_percent' → logprob: -8.602075576782227

Token 52: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.6772410869598389
    2. ')' → logprob: -1.8022410869598389
    3. 'float' → logprob: -2.177241086959839
    4. ' int' → logprob: -2.302241086959839
    5. 'int' → logprob: -2.552241086959839
    6. ' )' → logprob: -3.427241086959839
    7. ' ' → logprob: -7.052241325378418
    8. ' ):' → logprob: -7.552241325378418
    9. '):' → logprob: -7.677241325378418
    10. 'flo' → logprob: -8.302241325378418

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12776701152324677
    2. '):' → logprob: -2.1277670860290527
    3. ',' → logprob: -7.502767086029053
    4. ':' → logprob: -8.752766609191895
    5. ')->' → logprob: -9.377766609191895
    6. ' )' → logprob: -11.127766609191895
    7. '):
' → logprob: -11.752766609191895
    8. '=' → logprob: -12.002766609191895
    9. ' ):' → logprob: -12.002766609191895
    10. ' ' → logprob: -13.127766609191895

Token 54: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09729433804750443
    2. '):' → logprob: -2.472294330596924
    3. ')' → logprob: -4.847294330596924
    4. ' :' → logprob: -8.597294807434082
    5. ')->' → logprob: -8.722294807434082
    6. ' ->' → logprob: -10.222294807434082
    7. ':return' → logprob: -10.597294807434082
    8. '():' → logprob: -10.972294807434082
    9. '->' → logprob: -10.972294807434082
    10. ' ):' → logprob: -11.097294807434082

Token 55: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06276210397481918
    2. ' float' → logprob: -3.3127620220184326
    3. 'int' → logprob: -3.9377620220184326
    4. ' None' → logprob: -6.187762260437012
    5. ' ' → logprob: -6.312762260437012
    6. 'float' → logprob: -7.312762260437012
    7. ' in' → logprob: -9.562762260437012
    8. ' ' → logprob: -9.687762260437012
    9. ' '' → logprob: -10.062762260437012
    10. 'None' → logprob: -10.187762260437012

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.717296517104842e-05
    2. '):' → logprob: -10.250057220458984
    3. ':return' → logprob: -11.250057220458984
    4. ' :' → logprob: -12.500057220458984
    5. ':
' → logprob: -13.250057220458984
    6. '():' → logprob: -14.000057220458984
    7. ',' → logprob: -14.250057220458984
    8. ':**' → logprob: -14.375057220458984
    9. ')' → logprob: -14.500057220458984
    10. ':def' → logprob: -15.750057220458984

Token 57: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12074778974056244
    2. '           ' → logprob: -2.7457478046417236
    3. '        ' → logprob: -3.9957478046417236
    4. ' return' → logprob: -4.1207475662231445
    5. ':' → logprob: -5.6207475662231445
    6. 'return' → logprob: -6.1207475662231445
    7. ' ' → logprob: -6.3707475662231445
    8. '               ' → logprob: -6.4957475662231445
    9. '   ' → logprob: -6.6207475662231445
    10. ',' → logprob: -7.4957475662231445

Token 58: ' def' (ID: 1056)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7430849671363831
    2. 'return' → logprob: -1.1180849075317383
    3. '           ' → logprob: -1.7430849075317383
    4. '       ' → logprob: -4.368084907531738
    5. '        ' → logprob: -5.743084907531738
    6. '               ' → logprob: -6.368084907531738
    7. 'r' → logprob: -7.493084907531738
    8. '            ' → logprob: -7.618084907531738
    9. ' ' → logprob: -7.868084907531738
    10. 't' → logprob: -7.868084907531738

Token 59: ' after' (ID: 1934)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017177734524011612
    2. '_' → logprob: -5.142177581787109
    3. ' lambda' → logprob: -5.892177581787109
    4. ' calculate' → logprob: -6.267177581787109
    5. '  ' → logprob: -7.017177581787109
    6. ' `' → logprob: -7.017177581787109
    7. ' self' → logprob: -7.517177581787109
    8. ' ```' → logprob: -7.892177581787109
    9. 'n' → logprob: -8.26717758178711
    10. ' _' → logprob: -8.26717758178711

Token 60: '_tax' (ID: 61146)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006187113933265209
    2. '_tax' → logprob: -5.1311869621276855
    3. ' _' → logprob: -8.756187438964844
    4. '_t' → logprob: -10.131187438964844
    5. '_space' → logprob: -10.881187438964844
    6. ' ' → logprob: -11.381187438964844
    7. '_discount' → logprob: -12.381187438964844
    8. '__' → logprob: -12.881187438964844
    9. '_

' → logprob: -13.131187438964844
    10. '_
' → logprob: -13.506187438964844

Token 61: '(p' (ID: 2407)
  Prédit: '_price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.4227267801761627
    2. '_amount' → logprob: -1.6727267503738403
    3. '(self' → logprob: -2.54772686958313
    4. ' =' → logprob: -3.29772686958313
    5. '(' → logprob: -4.297726631164551
    6. 'ed' → logprob: -4.672726631164551
    7. '_' → logprob: -5.672726631164551
    8. '=' → logprob: -5.797726631164551
    9. '_value' → logprob: -5.797726631164551
    10. '(price' → logprob: -6.547726631164551

Token 62: ':' (ID: 25)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6716547608375549
    2. 'rice' → logprob: -0.9216547608375549
    3. ',' → logprob: -3.42165470123291
    4. ')' → logprob: -3.92165470123291
    5. '_' → logprob: -4.04665470123291
    6. '):' → logprob: -5.29665470123291
    7. 'r' → logprob: -6.04665470123291
    8. '_price' → logprob: -6.17165470123291
    9. ':' → logprob: -6.29665470123291
    10. 'ice' → logprob: -6.42165470123291

Token 63: ' int' (ID: 677)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.48796218633651733
    2. ')' → logprob: -2.112962245941162
    3. ',' → logprob: -2.112962245941162
    4. 'int' → logprob: -3.237962245941162
    5. ' ' → logprob: -3.362962245941162
    6. ' )' → logprob: -3.362962245941162
    7. ' ,' → logprob: -4.987962245941162
    8. '1' → logprob: -5.362962245941162
    9. ' int' → logprob: -5.487962245941162
    10. '):' → logprob: -5.737962245941162

Token 64: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7331134676933289
    2. ',' → logprob: -1.2331135272979736
    3. ')' → logprob: -1.4831135272979736
    4. ':' → logprob: -7.1081132888793945
    5. '):
' → logprob: -8.608113288879395
    6. ')->' → logprob: -9.608113288879395
    7. ' ):' → logprob: -9.608113288879395
    8. ' ,' → logprob: -10.358113288879395
    9. ' )' → logprob: -10.608113288879395
    10. '),' → logprob: -11.483113288879395

Token 65: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.7702801823616028
    2. ' rate' → logprob: -0.8952801823616028
    3. 'rate' → logprob: -3.270280122756958
    4. ')' → logprob: -3.520280122756958
    5. ' tax' → logprob: -4.645280361175537
    6. ' t' → logprob: -4.770280361175537
    7. ' )' → logprob: -4.770280361175537
    8. 'r' → logprob: -4.770280361175537
    9. '):' → logprob: -4.770280361175537
    10. '):
' → logprob: -5.770280361175537

Token 66: ':' (ID: 25)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7333109378814697
    2. 'ate' → logprob: -1.3583109378814697
    3. '):' → logprob: -1.9833109378814697
    4. ':' → logprob: -2.4833109378814697
    5. ')' → logprob: -3.3583109378814697
    6. 'at' → logprob: -5.858310699462891
    7. ',' → logprob: -6.733310699462891
    8. ' ' → logprob: -7.483310699462891
    9. ' ):' → logprob: -7.858310699462891
    10. 'e' → logprob: -7.858310699462891

Token 67: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.30092012882232666
    2. 'int' → logprob: -1.4259201288223267
    3. ' rate' → logprob: -4.800920009613037
    4. ')' → logprob: -5.050920009613037
    5. 'rate' → logprob: -5.550920009613037
    6. ' )' → logprob: -7.800920009613037
    7. ' ' → logprob: -8.300920486450195
    8. ':int' → logprob: -9.675920486450195
    9. '):
' → logprob: -9.800920486450195
    10. 't' → logprob: -10.175920486450195

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10040237754583359
    2. '):' → logprob: -2.350402355194092
    3. ')->' → logprob: -9.22540283203125
    4. ':' → logprob: -10.10040283203125
    5. '):
' → logprob: -10.85040283203125
    6. ',' → logprob: -11.47540283203125
    7. ' )' → logprob: -11.72540283203125
    8. '=' → logprob: -12.22540283203125
    9. ' ):' → logprob: -12.47540283203125
    10. ' ' → logprob: -13.60040283203125

Token 69: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14037740230560303
    2. ')' → logprob: -2.5153775215148926
    3. '):' → logprob: -3.0153775215148926
    4. ')->' → logprob: -7.890377521514893
    5. ' ->' → logprob: -8.515377044677734
    6. '->' → logprob: -8.640377044677734
    7. ':
' → logprob: -9.390377044677734
    8. '):
' → logprob: -9.515377044677734
    9. ':return' → logprob: -9.640377044677734
    10. '=' → logprob: -10.265377044677734

Token 70: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3360383212566376
    2. ' p' → logprob: -1.58603835105896
    3. 'int' → logprob: -3.08603835105896
    4. ' ' → logprob: -3.96103835105896
    5. ')' → logprob: -4.961038112640381
    6. ' (' → logprob: -5.711038112640381
    7. ' float' → logprob: -6.086038112640381
    8. ' )' → logprob: -7.336038112640381
    9. ' return' → logprob: -7.711038112640381
    10. '):
' → logprob: -7.836038112640381

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028966693207621574
    2. '):' → logprob: -3.6539666652679443
    3. ')' → logprob: -6.028966903686523
    4. ',' → logprob: -10.153966903686523
    5. ' :' → logprob: -10.278966903686523
    6. '           ' → logprob: -10.278966903686523
    7. ':
' → logprob: -10.528966903686523
    8. '=' → logprob: -10.653966903686523
    9. ':return' → logprob: -10.653966903686523
    10. '       ' → logprob: -11.153966903686523

Token 72: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44523653388023376
    2. '               ' → logprob: -1.5702365636825562
    3. ')' → logprob: -2.4452364444732666
    4. '           ' → logprob: -3.5702364444732666
    5. '):' → logprob: -3.9452364444732666
    6. ' ' → logprob: -4.945236682891846
    7. ' :' → logprob: -6.570236682891846
    8. ' return' → logprob: -6.820236682891846
    9. '       ' → logprob: -6.820236682891846
    10. '   ' → logprob: -7.320236682891846

Token 73: ' raw' (ID: 11428)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7124329805374146
    2. 'return' → logprob: -0.7124329805374146
    3. '           ' → logprob: -4.587432861328125
    4. '               ' → logprob: -5.087432861328125
    5. '                   ' → logprob: -6.337432861328125
    6. '   ' → logprob: -7.337432861328125
    7. ' ' → logprob: -9.087432861328125
    8. '       ' → logprob: -9.087432861328125
    9. '	return' → logprob: -10.837432861328125
    10. ')' → logprob: -11.212432861328125

Token 74: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.267015814781189
    2. '_price' → logprob: -1.267015814781189
    3. ' =' → logprob: -1.767015814781189
    4. ' ' → logprob: -2.8920159339904785
    5. '*' → logprob: -3.0170159339904785
    6. ' *' → logprob: -3.0170159339904785
    7. '_amount' → logprob: -3.5170159339904785
    8. '=' → logprob: -4.0170159339904785
    9. ')' → logprob: -4.2670159339904785
    10. '_value' → logprob: -4.6420159339904785

Token 75: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.06676486134529114
    2. 'p' → logprob: -2.8167648315429688
    3. ' (' → logprob: -5.566764831542969
    4. ' ' → logprob: -8.191764831542969
    5. ' int' → logprob: -8.191764831542969
    6. 'int' → logprob: -8.691764831542969
    7. '(p' → logprob: -9.066764831542969
    8. '(' → logprob: -9.691764831542969
    9. ' round' → logprob: -10.566764831542969
    10. 'round' → logprob: -11.816764831542969

Token 76: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14753620326519012
    2. '*' → logprob: -2.647536277770996
    3. ' +' → logprob: -2.772536277770996
    4. '+' → logprob: -5.647536277770996
    5. ' ' → logprob: -8.272536277770996
    6. '*(' → logprob: -10.272536277770996
    7. ' +
' → logprob: -12.647536277770996
    8. ' ' → logprob: -12.647536277770996
    9. ' *
' → logprob: -13.272536277770996
    10. '    ' → logprob: -13.272536277770996

Token 77: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38754695653915405
    2. ' (' → logprob: -1.2625470161437988
    3. 'r' → logprob: -3.637547016143799
    4. '(r' → logprob: -4.762547016143799
    5. ' r' → logprob: -5.762547016143799
    6. '(
' → logprob: -8.38754653930664
    7. ' ' → logprob: -9.76254653930664
    8. '(

' → logprob: -10.76254653930664
    9. '100' → logprob: -12.01254653930664
    10. ' (
' → logprob: -12.01254653930664

Token 78: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.019082050770521164
    2. '1' → logprob: -4.269082069396973
    3. ' ' → logprob: -6.144082069396973
    4. 'r' → logprob: -6.769082069396973
    5. '(' → logprob: -6.769082069396973
    6. '10' → logprob: -8.144082069396973
    7. ' (' → logprob: -9.019082069396973
    8. ' r' → logprob: -10.894082069396973
    9. '

' → logprob: -11.644082069396973
    10. '```' → logprob: -11.769082069396973

Token 79: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2014765739440918
    2. ' +' → logprob: -1.7014765739440918
    3. ' +
' → logprob: -11.32647705078125
    4. ' ' → logprob: -11.45147705078125
    5. '+
' → logprob: -11.45147705078125
    6. '0' → logprob: -11.45147705078125
    7. '<|end|>' → logprob: -11.95147705078125
    8. '00' → logprob: -12.57647705078125
    9. '+

' → logprob: -12.82647705078125
    10. '+r' → logprob: -12.95147705078125

Token 80: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.2014162540435791
    2. 'r' → logprob: -1.701416254043579
    3. '<|end|>' → logprob: -13.326416015625
    4. ' ' → logprob: -14.076416015625
    5. 'rate' → logprob: -15.576416015625
    6. ')' → logprob: -15.701416015625
    7. '	r' → logprob: -15.826416015625
    8. '(r' → logprob: -17.076416015625
    9. ' ' → logprob: -17.451416015625
    10. '    ' → logprob: -17.701416015625

Token 81: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005400468362495303
    2. ' )' → logprob: -7.625540256500244
    3. ')//' → logprob: -10.000539779663086
    4. ')
' → logprob: -13.625539779663086
    5. ')

' → logprob: -13.750539779663086
    6. ')/' → logprob: -14.000539779663086
    7. '       ' → logprob: -14.125539779663086
    8. ' ' → logprob: -14.125539779663086
    9. '   ' → logprob: -15.000539779663086
    10. '0' → logprob: -15.000539779663086

Token 82: '               ' (ID: 506)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.23640330135822296
    2. ')' → logprob: -1.7364033460617065
    3. '//' → logprob: -3.986403226852417
    4. ' ' → logprob: -5.111403465270996
    5. ' /' → logprob: -5.486403465270996
    6. ' )' → logprob: -6.111403465270996
    7. '               ' → logprob: -6.486403465270996
    8. '           ' → logprob: -7.861403465270996
    9. '/' → logprob: -8.236403465270996
    10. '       ' → logprob: -8.236403465270996

Token 83: ' div' (ID: 4223)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.11586160957813263
    2. ')' → logprob: -2.740861654281616
    3. ' ' → logprob: -3.240861654281616
    4. ' /' → logprob: -6.115861415863037
    5. '//' → logprob: -6.740861415863037
    6. ' )' → logprob: -6.865861415863037
    7. '
' → logprob: -8.490861892700195
    8. '               ' → logprob: -8.490861892700195
    9. ' ' → logprob: -8.740861892700195
    10. '0' → logprob: -8.865861892700195

Token 84: ',' (ID: 11)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1680719554424286
    2. ' ' → logprob: -2.668071985244751
    3. ')' → logprob: -3.043071985244751
    4. '//' → logprob: -5.043071746826172
    5. '    ' → logprob: -5.293071746826172
    6. '  ' → logprob: -5.668071746826172
    7. ' ' → logprob: -5.918071746826172
    8. '           ' → logprob: -5.918071746826172
    9. '               ' → logprob: -6.043071746826172
    10. '   ' → logprob: -6.168071746826172

Token 85: ' mod' (ID: 1812)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13321754336357117
    2. ' raw' → logprob: -3.1332175731658936
    3. ' =' → logprob: -3.2582175731658936
    4. '=' → logprob: -4.0082173347473145
    5. 'raw' → logprob: -4.2582173347473145
    6. ' p' → logprob: -6.2582173347473145
    7. ' _' → logprob: -6.8832173347473145
    8. '<|end|>' → logprob: -7.3207173347473145
    9. '  ' → logprob: -7.4457173347473145
    10. ',' → logprob: -7.6957173347473145

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519666254520416
    2. '=' → logprob: -1.5019665956497192
    3. ',' → logprob: -10.75196647644043
    4. ' ' → logprob: -11.75196647644043
    5. '   ' → logprob: -13.25196647644043
    6. 'ular' → logprob: -13.62696647644043
    7. ')' → logprob: -14.50196647644043
    8. '    ' → logprob: -14.62696647644043
    9. '           ' → logprob: -14.75196647644043
    10. '  ' → logprob: -15.00196647644043

Token 87: ' div' (ID: 4223)
  Prédit: ' raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raw' → logprob: -0.3970746099948883
    2. ' div' → logprob: -1.397074580192566
    3. 'raw' → logprob: -2.6470746994018555
    4. 'div' → logprob: -4.8970746994018555
    5. ' ' → logprob: -6.6470746994018555
    6. ' (' → logprob: -8.522074699401855
    7. '(raw' → logprob: -8.647074699401855
    8. '/raw' → logprob: -9.022074699401855
    9. '_raw' → logprob: -10.022074699401855
    10. '               ' → logprob: -10.022074699401855

Token 88: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.33868592977523804
    2. 'ision' → logprob: -1.9636859893798828
    3. '               ' → logprob: -3.463685989379883
    4. 'iding' → logprob: -3.713685989379883
    5. 'ided' → logprob: -3.963685989379883
    6. ',' → logprob: -4.088685989379883
    7. 'ide' → logprob: -4.088685989379883
    8. 'idend' → logprob: -5.588685989379883
    9. 's' → logprob: -5.713685989379883
    10. '              ' → logprob: -5.838685989379883

Token 89: '(raw' (ID: 46707)
  Prédit: '(raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.011666244827210903
    2. '(' → logprob: -4.886666297912598
    3. 'raw' → logprob: -6.011666297912598
    4. ' raw' → logprob: -6.511666297912598
    5. ' (' → logprob: -9.386666297912598
    6. '(
' → logprob: -11.011666297912598
    7. ' ' → logprob: -12.136666297912598
    8. '(p' → logprob: -13.011666297912598
    9. '_raw' → logprob: -13.511666297912598
    10. '	raw' → logprob: -13.511666297912598

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03924586996436119
    2. ' ,' → logprob: -3.289245843887329
    3. '100' → logprob: -7.164246082305908
    4. '(' → logprob: -8.41424560546875
    5. ' (' → logprob: -10.41424560546875
    6. ',
' → logprob: -10.41424560546875
    7. '           ' → logprob: -10.78924560546875
    8. '(),' → logprob: -10.91424560546875
    9. '(p' → logprob: -10.91424560546875
    10. ' ' → logprob: -11.03924560546875

Token 91: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.044377535581588745
    2. ' ' → logprob: -3.419377565383911
    3. '1' → logprob: -4.794377326965332
    4. '10' → logprob: -6.044377326965332
    5. ')' → logprob: -12.106877326965332
    6. '   ' → logprob: -12.669377326965332
    7. '```' → logprob: -13.231877326965332
    8. ' ' → logprob: -13.544377326965332
    9. '9' → logprob: -13.606877326965332
    10. '0' → logprob: -14.044377326965332

Token 92: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.004586653783917427
    2. '1' → logprob: -5.754586696624756
    3. '10' → logprob: -6.629586696624756
    4. ' ' → logprob: -9.379586219787598
    5. '   ' → logprob: -14.629586219787598
    6. '11' → logprob: -14.754586219787598
    7. '101' → logprob: -14.879586219787598
    8. '12' → logprob: -15.129586219787598
    9. '```' → logprob: -15.692086219787598
    10. '9' → logprob: -15.754586219787598

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036834771162830293
    2. ')
' → logprob: -8.125368118286133
    3. '):' → logprob: -10.000368118286133
    4. '       ' → logprob: -11.750368118286133
    5. ' )' → logprob: -12.000368118286133
    6. '           ' → logprob: -12.125368118286133
    7. ')

' → logprob: -13.625368118286133
    8. '               ' → logprob: -13.750368118286133
    9. ')
' → logprob: -13.750368118286133
    10. '):
' → logprob: -14.125368118286133

Token 94: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32879793643951416
    2. '               ' → logprob: -1.9537979364395142
    3. '+' → logprob: -4.203797817230225
    4. ')' → logprob: -4.203797817230225
    5. '           ' → logprob: -4.328797817230225
    6. '        
' → logprob: -4.453797817230225
    7. '                ' → logprob: -4.453797817230225
    8. ' +' → logprob: -4.578797817230225
    9. '                
' → logprob: -4.703797817230225
    10. ' 
' → logprob: -4.828797817230225

Token 95: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5613772869110107
    2. '               ' → logprob: -1.3113772869110107
    3. 'if' (adapté à ' if') → logprob: -2.4363772869110107
    4. ' return' → logprob: -3.3113772869110107
    5. 'return' → logprob: -3.9363772869110107
    6. '        ' → logprob: -5.81137752532959
    7. '       ' → logprob: -5.93637752532959
    8. ')' → logprob: -6.06137752532959
    9. '                ' → logprob: -6.06137752532959
    10. '           ' → logprob: -6.06137752532959

Token 96: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.002390398643910885
    2. 'mod' → logprob: -6.127390384674072
    3. ' ' → logprob: -9.00239086151123
    4. ' not' → logprob: -10.37739086151123
    5. ' m' → logprob: -10.75239086151123
    6. '(mod' → logprob: -11.37739086151123
    7. '	mod' → logprob: -11.87739086151123
    8. ' mo' → logprob: -12.50239086151123
    9. ' (' → logprob: -13.00239086151123
    10. ' ' → logprob: -13.12739086151123

Token 97: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.10813890397548676
    2. ' *' → logprob: -3.2331387996673584
    3. ' <' → logprob: -3.8581387996673584
    4. '>=' → logprob: -4.2331390380859375
    5. '*' → logprob: -4.6081390380859375
    6. ' >' → logprob: -4.8581390380859375
    7. ' ' → logprob: -5.1081390380859375
    8. '>' → logprob: -6.7331390380859375
    9. ' ==' → logprob: -6.8581390380859375
    10. ' !=' → logprob: -7.9831390380859375

Token 98: ' ' (ID: 220)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.11329810321331024
    2. ' ' → logprob: -2.238298177719116
    3. '5' → logprob: -7.988297939300537
    4. '51' → logprob: -9.113298416137695
    5. ' (' → logprob: -11.488298416137695
    6. '49' → logprob: -12.613298416137695
    7. '   ' → logprob: -12.863298416137695
    8. '(' → logprob: -13.488298416137695
    9. '0' → logprob: -14.050798416137695
    10. '1' → logprob: -14.238298416137695

Token 99: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.0012348759919404984
    2. ' ' → logprob: -6.876235008239746
    3. '5' → logprob: -9.376235008239746
    4. '51' → logprob: -9.751235008239746
    5. '49' → logprob: -11.501235008239746
    6. '   ' → logprob: -11.501235008239746
    7. '(' → logprob: -11.501235008239746
    8. '

' → logprob: -12.501235008239746
    9. ' (' → logprob: -12.501235008239746
    10. 'r' → logprob: -12.751235008239746

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005654775071889162
    2. ':
' → logprob: -5.380654811859131
    3. '0' → logprob: -7.130654811859131
    4. '           ' → logprob: -9.505654335021973
    5. ':return' → logprob: -9.630654335021973
    6. ' :' → logprob: -10.880654335021973
    7. '   ' → logprob: -11.380654335021973
    8. '       ' → logprob: -11.505654335021973
    9. ' else' → logprob: -11.505654335021973
    10. ':
' → logprob: -11.630654335021973

Token 101: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6319759488105774
    2. '           ' → logprob: -1.5069758892059326
    3. '               ' → logprob: -2.0069758892059326
    4. '1' → logprob: -2.5069758892059326
    5. ' ' → logprob: -4.756976127624512
    6. ':' → logprob: -5.006976127624512
    7. '+' → logprob: -5.506976127624512
    8. '<|end|>' → logprob: -6.131976127624512
    9. '                       ' → logprob: -6.381976127624512
    10. '\n' → logprob: -7.506976127624512

Token 102: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' (adapté à ' div') → logprob: -0.8450890779495239
    2. ' div' → logprob: -1.345089077949524
    3. '
' → logprob: -1.595089077949524
    4. '                   ' → logprob: -2.3450889587402344
    5. '               ' → logprob: -5.345088958740234
    6. '                    
' → logprob: -6.470088958740234
    7. 'return' → logprob: -6.845088958740234
    8. ' 
' → logprob: -7.095088958740234
    9. '```' → logprob: -7.595088958740234
    10. '                       ' → logprob: -7.845088958740234

Token 103: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06076102331280708
    2. '+=' → logprob: -3.185760974884033
    3. '+' → logprob: -4.185760974884033
    4. ' +' → logprob: -6.185760974884033
    5. '<|end|>' → logprob: -8.685761451721191
    6. '               ' → logprob: -9.935761451721191
    7. '           ' → logprob: -10.935761451721191
    8. '1' → logprob: -10.935761451721191
    9. '                   ' → logprob: -10.935761451721191
    10. ' ' → logprob: -11.060761451721191

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003178071230649948
    2. ' ' → logprob: -5.753178119659424
    3. '   ' → logprob: -16.003177642822266
    4. '
' → logprob: -17.190677642822266
    5. '+' → logprob: -17.190677642822266
    6. ' ' → logprob: -17.253177642822266
    7. '```' → logprob: -17.628177642822266
    8. '0' → logprob: -17.753177642822266
    9. '<|end|>' → logprob: -17.878177642822266
    10. ' +' → logprob: -17.878177642822266

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '  ' → logprob: -18.375015258789062
    4. '```' → logprob: -18.750015258789062
    5. '

' → logprob: -19.000015258789062
    6. '   ' → logprob: -19.187515258789062
    7. '2' → logprob: -19.187515258789062
    8. '' → logprob: -19.375015258789062
    9. '0' → logprob: -19.500015258789062
    10. '+' → logprob: -19.812515258789062

Token 106: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37741565704345703
    2. '               ' → logprob: -1.377415657043457
    3. '
' → logprob: -3.377415657043457
    4. ' return' → logprob: -3.877415657043457
    5. 'return' → logprob: -5.627415657043457
    6. '       ' → logprob: -5.877415657043457
    7. '            
' → logprob: -8.127415657043457
    8. '    
' → logprob: -8.877415657043457
    9. '   ' → logprob: -9.127415657043457
    10. '                
' → logprob: -9.377415657043457

Token 107: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4934019446372986
    2. '               ' → logprob: -0.9934019446372986
    3. 'return' → logprob: -4.493402004241943
    4. ' return' → logprob: -5.243402004241943
    5. '       ' → logprob: -5.993402004241943
    6. '   ' → logprob: -8.868401527404785
    7. '                   ' → logprob: -10.868401527404785
    8. '
' → logprob: -12.868401527404785
    9. '          ' → logprob: -13.118401527404785
    10. '	return' → logprob: -13.368401527404785

Token 108: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3730210065841675
    2. ' return' → logprob: -1.4980210065841675
    3. 'return' (adapté à ' return') → logprob: -2.623021125793457
    4. '               ' → logprob: -4.748021125793457
    5. '       ' → logprob: -5.373021125793457
    6. '   ' → logprob: -6.373021125793457
    7. '
' → logprob: -9.498021125793457
    8. '	return' → logprob: -10.248021125793457
    9. ' ' → logprob: -10.748021125793457
    10. '                   ' → logprob: -11.498021125793457

Token 109: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.47407880425453186
    2. 'div' → logprob: -0.9740787744522095
    3. '	div' → logprob: -13.349079132080078
    4. '(div' → logprob: -16.099079132080078
    5. ' ' → logprob: -16.224079132080078
    6. '<div' → logprob: -17.849079132080078
    7. 'Div' → logprob: -19.224079132080078
    8. ' diver' → logprob: -19.224079132080078
    9. 'd' → logprob: -19.349079132080078
    10. '   ' → logprob: -19.349079132080078

Token 110: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09906665980815887
    2. '           ' → logprob: -3.224066734313965
    3. '    
' → logprob: -3.474066734313965
    4. '<|end|>' → logprob: -4.849066734313965
    5. '            
' → logprob: -5.724066734313965
    6. '       ' → logprob: -5.974066734313965
    7. 'return' → logprob: -5.974066734313965
    8. '

' → logprob: -6.724066734313965
    9. ' return' → logprob: -6.849066734313965
    10. '        
' → logprob: -7.099066734313965

Token 111: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4553190767765045
    2. '           ' → logprob: -1.7053190469741821
    3. '       ' → logprob: -2.0803191661834717
    4. 'return' → logprob: -3.9553191661834717
    5. '    
' → logprob: -4.080318927764893
    6. ' return' → logprob: -4.330318927764893
    7. '        
' → logprob: -5.205318927764893
    8. '   ' → logprob: -6.830318927764893
    9. '            
' → logprob: -6.830318927764893
    10. '  
' → logprob: -7.705318927764893

Token 112: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7077576518058777
    2. '       ' → logprob: -0.9577576518058777
    3. ' return' → logprob: -2.3327577114105225
    4. '           ' → logprob: -3.7077577114105225
    5. '   ' → logprob: -6.832757472991943
    6. '
' → logprob: -7.707757472991943
    7. '	return' → logprob: -8.082757949829102
    8. '    
' → logprob: -10.582757949829102
    9. '        
' → logprob: -10.832757949829102
    10. '     ' → logprob: -11.332757949829102

Token 113: ' after' (ID: 1934)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.29009589552879333
    2. 'self' → logprob: -1.6650959253311157
    3. ' after' → logprob: -2.915095806121826
    4. 'after' → logprob: -4.790095806121826
    5. '           ' → logprob: -10.290096282958984
    6. ' [' → logprob: -11.290096282958984
    7. '(after' → logprob: -11.415096282958984
    8. '(self' → logprob: -11.415096282958984
    9. ' max' → logprob: -11.540096282958984
    10. ' ' → logprob: -11.665096282958984

Token 114: '_tax' (ID: 61146)
  Prédit: '_tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tax' → logprob: -0.0002390594017924741
    2. '_' → logprob: -8.375239372253418
    3. '_price' → logprob: -12.750239372253418
    4. ' _' → logprob: -12.875239372253418
    5. '_token' → logprob: -13.625239372253418
    6. '_t' → logprob: -15.000239372253418
    7. '_tar' → logprob: -15.000239372253418
    8. '_tex' → logprob: -15.250239372253418
    9. '_tx' → logprob: -15.875239372253418
    10. ')_' → logprob: -16.2502384185791

Token 115: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5780510902404785
    2. '(p' → logprob: -0.8280510902404785
    3. '(' → logprob: -6.2030510902404785
    4. ' (' → logprob: -10.32805061340332
    5. '((' → logprob: -10.57805061340332
    6. 'self' → logprob: -11.57805061340332
    7. '(P' → logprob: -12.07805061340332
    8. '(this' → logprob: -13.45305061340332
    9. '(s' → logprob: -13.57805061340332
    10. ' ' → logprob: -13.57805061340332

Token 116: '.p' (ID: 1201)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1846189945936203
    2. '.p' → logprob: -1.8096189498901367
    3. ').' → logprob: -5.559618949890137
    4. ' .' → logprob: -7.559618949890137
    5. ')' → logprob: -8.559618949890137
    6. ' ' → logprob: -9.059618949890137
    7. '.s' → logprob: -10.309618949890137
    8. '`.' → logprob: -10.809618949890137
    9. 'p' → logprob: -11.434618949890137
    10. '.
' → logprob: -11.434618949890137

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. '2' → logprob: -10.875021934509277
    3. ' ' → logprob: -14.000021934509277
    4. ')' → logprob: -14.625021934509277
    5. '۱' → logprob: -15.875021934509277
    6. 'a' → logprob: -16.37502098083496
    7. ',' → logprob: -16.50002098083496
    8. '```' → logprob: -16.81252098083496
    9. '' → logprob: -17.00002098083496
    10. '_' → logprob: -17.00002098083496

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010545044642640278
    2. ' ,' → logprob: -9.250105857849121
    3. ',
' → logprob: -12.500105857849121
    4. ',r' → logprob: -12.750105857849121
    5. ')' → logprob: -13.750105857849121
    6. '),' → logprob: -14.750105857849121
    7. ' ' → logprob: -15.125105857849121
    8. '`,' → logprob: -15.625105857849121
    9. ',

' → logprob: -15.875105857849121
    10. '   ' → logprob: -16.000104904174805

Token 119: ' rate' (ID: 6251)
  Prédit: ' rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rate' → logprob: -0.06197552755475044
    2. 'rate' → logprob: -2.8119754791259766
    3. '(rate' → logprob: -12.686975479125977
    4. ' r' → logprob: -12.811975479125977
    5. ' ' → logprob: -14.311975479125977
    6. ' rat' → logprob: -14.686975479125977
    7. ')' → logprob: -14.936975479125977
    8. '.rate' → logprob: -15.561975479125977
    9. '_rate' → logprob: -15.811975479125977
    10. ' )' → logprob: -16.561975479125977

Token 120: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2127087504486553e-05
    2. ' )' → logprob: -10.875021934509277
    3. ')
' → logprob: -13.000021934509277
    4. '),' → logprob: -15.250021934509277
    5. '       ' → logprob: -15.375021934509277
    6. ')

' → logprob: -15.875021934509277
    7. ',' → logprob: -16.125022888183594
    8. '   ' → logprob: -16.500022888183594
    9. ')return' → logprob: -16.625022888183594
    10. ' ' → logprob: -16.750022888183594

Token 121: ' +' (ID: 659)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29151082038879395
    2. '<|end|>' → logprob: -1.791510820388794
    3. ')' → logprob: -3.291510820388794
    4. ' +' → logprob: -4.166510581970215
    5. '+' → logprob: -5.041510581970215
    6. ' 
' → logprob: -5.166510581970215
    7. '        ' → logprob: -5.666510581970215
    8. '       ' → logprob: -5.791510581970215
    9. ' )' → logprob: -6.291510581970215
    10. ',' → logprob: -6.291510581970215

Token 122: ' after' (ID: 1934)
  Prédit: ' after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' after' → logprob: -0.03846130520105362
    2. ' self' → logprob: -3.288461208343506
    3. ' ' → logprob: -8.413461685180664
    4. 'after' → logprob: -9.788461685180664
    5. ' ' → logprob: -9.913461685180664
    6. 'self' → logprob: -9.913461685180664
    7. ''' → logprob: -11.163461685180664
    8. ' 
' → logprob: -11.788461685180664
    9. ' space' → logprob: -12.038461685180664
    10. '"' → logprob: -12.288461685180664

Token 123: '_tax' (ID: 61146)
  Prédit: '_tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tax' → logprob: -5.514650183613412e-05
    2. 'tax' → logprob: -10.000055313110352
    3. '_t' → logprob: -12.375055313110352
    4. '_' → logprob: -13.250055313110352
    5. 'x' → logprob: -13.500055313110352
    6. '-tax' → logprob: -13.750055313110352
    7. '_tx' → logprob: -14.500055313110352
    8. '_token' → logprob: -15.875055313110352
    9. 'Tax' → logprob: -15.875055313110352
    10. '_price' → logprob: -16.12505531311035

Token 124: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04864470660686493
    2. '(' → logprob: -3.048644781112671
    3. '(
' → logprob: -10.17364501953125
    4. '(s' → logprob: -11.92364501953125
    5. 'self' → logprob: -12.42364501953125
    6. ' (' → logprob: -12.42364501953125
    7. '<|end|>' → logprob: -13.17364501953125
    8. '(this' → logprob: -14.42364501953125
    9. '(p' → logprob: -14.79864501953125
    10. '((' → logprob: -14.92364501953125

Token 125: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00320433103479445
    2. '.' → logprob: -5.753204345703125
    3. ' .' → logprob: -11.753204345703125
    4. 'p' → logprob: -11.878204345703125
    5. ').' → logprob: -12.503204345703125
    6. ' ' → logprob: -13.253204345703125
    7. '.
' → logprob: -14.003204345703125
    8. '.п' → logprob: -14.253204345703125
    9. '`.' → logprob: -14.753204345703125
    10. '‌.' → logprob: -14.753204345703125

Token 126: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -13.125004768371582
    3. 'p' → logprob: -14.625004768371582
    4. '.' → logprob: -15.000004768371582
    5. 'self' → logprob: -15.000004768371582
    6. 's' → logprob: -15.687504768371582
    7. 'class' → logprob: -15.937504768371582
    8. 'r' → logprob: -15.937504768371582
    9. '_' → logprob: -16.312503814697266
    10. '۲' → logprob: -16.312503814697266

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018247224390506744
    2. ')' → logprob: -4.018247127532959
    3. ' ,' → logprob: -9.518247604370117
    4. ',
' → logprob: -11.643247604370117
    5. '<|end|>' → logprob: -12.268247604370117
    6. ' )' → logprob: -13.268247604370117
    7. ',)' → logprob: -13.518247604370117
    8. '‌,' → logprob: -13.768247604370117
    9. '   ' → logprob: -14.018247604370117
    10. ',r' → logprob: -14.143247604370117

Token 128: ' rate' (ID: 6251)
  Prédit: ' rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rate' → logprob: -0.02630435861647129
    2. 'rate' → logprob: -3.651304244995117
    3. '(rate' → logprob: -13.151304244995117
    4. ' ' → logprob: -14.026304244995117
    5. ')' → logprob: -14.276304244995117
    6. ' r' → logprob: -15.526304244995117
    7. ' rat' → logprob: -15.526304244995117
    8. '.rate' → logprob: -16.776304244995117
    9. '_rate' → logprob: -16.901304244995117
    10. 'r' → logprob: -17.151304244995117

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ')
' → logprob: -13.25000286102295
    3. ' )' → logprob: -14.75000286102295
    4. ')

' → logprob: -15.75000286102295
    5. ')return' → logprob: -16.375001907348633
    6. '))' → logprob: -17.000001907348633
    7. '       ' → logprob: -17.250001907348633
    8. '   ' → logprob: -17.750001907348633
    9. ')#' → logprob: -17.875001907348633
    10. ')`' → logprob: -18.125001907348633

Token 130: '        
' (ID: 3564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14701366424560547
    2. '<|end|>' → logprob: -2.0220136642456055
    3. 'newline' → logprob: -7.1470136642456055
    4. '

' → logprob: -7.1470136642456055
    5. '<|end|>' → logprob: -7.1470136642456055
    6. '   ' → logprob: -7.2720136642456055
    7. '    
' → logprob: -7.5220136642456055
    8. '\n' → logprob: -7.8970136642456055
    9. '
    
' → logprob: -9.647013664245605
    10. '```' → logprob: -9.772013664245605

Token 131: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13726016879081726
    2. '<|end|>' → logprob: -2.8872601985931396
    3. 'def' → logprob: -3.2622601985931396
    4. '    
' → logprob: -4.0122599601745605
    5. '
' → logprob: -4.7622599601745605
    6. ' ' → logprob: -6.1372599601745605
    7. '  ' → logprob: -6.7622599601745605
    8. '    ' → logprob: -7.1372599601745605
    9. '<|end|>' → logprob: -7.5122599601745605
    10. '       ' → logprob: -7.8872599601745605

Token 132: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0034227122087031603
    2. ' def' → logprob: -6.503422737121582
    3. 'class' → logprob: -6.628422737121582
    4. '   ' → logprob: -7.878422737121582
    5. '@' → logprob: -9.003422737121582
    6. ' ' → logprob: -11.003422737121582
    7. '    ' → logprob: -11.378422737121582
    8. '  ' → logprob: -11.628422737121582
    9. '    
' → logprob: -11.753422737121582
    10. '#' → logprob: -12.003422737121582

Token 133: ' __' (ID: 2516)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.544520378112793
    2. ' __' → logprob: -1.544520378112793
    3. ' difference' → logprob: -3.044520378112793
    4. ' price' → logprob: -3.294520378112793
    5. ' net' → logprob: -3.669520378112793
    6. 'total' → logprob: -4.044520378112793
    7. ' ' → logprob: -4.419520378112793
    8. ' diff' → logprob: -4.794520378112793
    9. '__' → logprob: -5.044520378112793
    10. ' sum' → logprob: -5.294520378112793

Token 134: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.00047142591211013496
    2. 'lt' → logprob: -8.250471115112305
    3. 'repr' → logprob: -8.750471115112305
    4. 'str' → logprob: -10.500471115112305
    5. 'add' → logprob: -11.625471115112305
    6. ' eq' → logprob: -11.750471115112305
    7. 'hash' → logprob: -12.375471115112305
    8. 'init' → logprob: -13.500471115112305
    9. 'gt' → logprob: -15.000471115112305
    10. 'le' → logprob: -15.000471115112305

Token 135: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03036600537598133
    2. '__' → logprob: -3.5303659439086914
    3. '__('' → logprob: -8.155365943908691
    4. '__(
' → logprob: -8.405365943908691
    5. '__((' → logprob: -9.655365943908691
    6. '__("' → logprob: -11.155365943908691
    7. '___' → logprob: -11.530365943908691
    8. '_' → logprob: -12.030365943908691
    9. '____' → logprob: -12.405365943908691
    10. '__.__' → logprob: -12.780365943908691

Token 136: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006645413814112544
    2. ')' → logprob: -7.375664710998535
    3. ' self' → logprob: -10.500664710998535
    4. ' ' → logprob: -12.750664710998535
    5. '
' → logprob: -13.000664710998535
    6. '(self' → logprob: -13.250664710998535
    7. ')(' → logprob: -14.000664710998535
    8. '   ' → logprob: -14.375664710998535
    9. 's' → logprob: -14.375664710998535
    10. '  ' → logprob: -14.750664710998535

Token 137: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.35675740242004395
    2. '__' → logprob: -1.356757402420044
    3. '__)' → logprob: -3.856757402420044
    4. '__('' → logprob: -3.981757402420044
    5. '__("' → logprob: -6.731757164001465
    6. '__(
' → logprob: -7.106757164001465
    7. '__,' → logprob: -7.856757164001465
    8. '__((' → logprob: -8.981757164001465
    9. '__(*' → logprob: -9.981757164001465
    10. '__.__' → logprob: -10.106757164001465

Token 138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003097381442785263
    2. '(self' → logprob: -6.7530975341796875
    3. 'self' → logprob: -7.7530975341796875
    4. '       ' → logprob: -8.003097534179688
    5. ' return' → logprob: -8.128097534179688
    6. '(' → logprob: -8.753097534179688
    7. '               ' → logprob: -9.003097534179688
    8. ' self' → logprob: -9.003097534179688
    9. 'return' → logprob: -9.003097534179688
    10. ' (' → logprob: -9.253097534179688

Token 139: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011692053638398647
    2. ' return' → logprob: -4.511692047119141
    3. '           ' → logprob: -7.386692047119141
    4. '       ' → logprob: -11.01169204711914
    5. '	return' → logprob: -12.88669204711914
    6. '{return' → logprob: -13.26169204711914
    7. '   ' → logprob: -13.76169204711914
    8. 'r' → logprob: -14.26169204711914
    9. 'f' → logprob: -14.63669204711914
    10. ':return' → logprob: -14.88669204711914

Token 140: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.5231638550758362
    2. 'f' → logprob: -0.8981638550758362
    3. ' ' → logprob: -10.898163795471191
    4. '"' → logprob: -12.148163795471191
    5. ''f' → logprob: -12.148163795471191
    6. ''' → logprob: -12.773163795471191
    7. '   ' → logprob: -13.023163795471191
    8. '	f' → logprob: -13.648163795471191
    9. 'F' → logprob: -13.898163795471191
    10. '(f' → logprob: -14.023163795471191

Token 141: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.589087188243866
    2. 'f' → logprob: -1.5890872478485107
    3. '(f' → logprob: -1.9640872478485107
    4. '"(' → logprob: -2.9640872478485107
    5. '(' → logprob: -3.8390872478485107
    6. ''' → logprob: -4.214087009429932
    7. ''(' → logprob: -4.839087009429932
    8. '("("' → logprob: -6.339087009429932
    9. ''f' → logprob: -6.839087009429932
    10. '("' → logprob: -7.214087009429932

Token 142: 'Price' (ID: 7417)
  Prédit: 'VAT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VAT' → logprob: -0.5246115922927856
    2. 'Price' → logprob: -0.8996115922927856
    3. '"' → logprob: -8.024611473083496
    4. 'Vat' → logprob: -8.399611473083496
    5. ''' → logprob: -8.774611473083496
    6. ' VAT' → logprob: -8.899611473083496
    7. '<V' → logprob: -9.524611473083496
    8. '<' → logprob: -9.774611473083496
    9. 'V' → logprob: -10.149611473083496
    10. 'PV' → logprob: -10.399611473083496

Token 143: 'Pair' (ID: 15573)
  Prédit: 'Pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pair' → logprob: -3.440506407059729e-05
    2. 'P' → logprob: -10.75003433227539
    3. '(' → logprob: -11.50003433227539
    4. 'Pa' → logprob: -13.75003433227539
    5. '(P' → logprob: -14.37503433227539
    6. 'Pai' → logprob: -14.50003433227539
    7. 'Pairs' → logprob: -15.00003433227539
    8. '<Pair' → logprob: -15.87503433227539
    9. ' Pair' → logprob: -17.25003433227539
    10. '('' → logprob: -17.62503433227539

Token 144: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.011212044395506382
    2. '(p' → logprob: -4.51121187210083
    3. '(self' → logprob: -8.886212348937988
    4. '(' → logprob: -10.636212348937988
    5. '{' → logprob: -14.261212348937988
    6. '(price' → logprob: -14.886212348937988
    7. '(
' → logprob: -15.136212348937988
    8. '(({' → logprob: -15.386212348937988
    9. '({
' → logprob: -16.136211395263672
    10. '(`' → logprob: -16.636211395263672

Token 145: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.639096970204264e-05
    2. '{' → logprob: -9.500096321105957
    3. ' self' → logprob: -11.000096321105957
    4. 'sel' → logprob: -13.625096321105957
    5. 'repr' → logprob: -13.875096321105957
    6. 'f' → logprob: -14.500096321105957
    7. '       ' → logprob: -15.000096321105957
    8. '   ' → logprob: -15.250096321105957
    9. '           ' → logprob: -15.625096321105957
    10. 'se' → logprob: -15.625096321105957

Token 146: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.012559212744235992
    2. '.' → logprob: -4.387559413909912
    3. ' .' → logprob: -10.262558937072754
    4. ').' → logprob: -13.012558937072754
    5. '.s' → logprob: -13.262558937072754
    6. '.pkl' → logprob: -13.512558937072754
    7. 'p' → logprob: -13.637558937072754
    8. '.py' → logprob: -13.762558937072754
    9. '.v' → logprob: -13.762558937072754
    10. '
' → logprob: -13.887558937072754

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4881879400927573e-05
    2. 'airs' → logprob: -11.250035285949707
    3. 'air' → logprob: -11.750035285949707
    4. '.' → logprob: -11.750035285949707
    5. '.p' → logprob: -12.750035285949707
    6. 'self' → logprob: -14.125035285949707
    7. 'airo' → logprob: -15.125035285949707
    8. 'a' → logprob: -15.500035285949707
    9. 'p' → logprob: -15.875035285949707
    10. ' ' → logprob: -16.00003433227539

Token 148: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10088325291872025
    2. '},' → logprob: -2.3508832454681396
    3. '},{' → logprob: -8.475883483886719
    4. '}' → logprob: -8.475883483886719
    5. ' ,' → logprob: -8.475883483886719
    6. ',
' → logprob: -10.725883483886719
    7. ' },' → logprob: -11.850883483886719
    8. ' ' → logprob: -12.975883483886719
    9. '>,' → logprob: -12.975883483886719
    10. '",' → logprob: -13.225883483886719

Token 149: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.5257968902587891
    2. '{' → logprob: -0.9007968902587891
    3. ' ' → logprob: -6.775796890258789
    4. 'self' → logprob: -7.275796890258789
    5. ' self' → logprob: -7.525796890258789
    6. ' ' → logprob: -9.025796890258789
    7. ' )' → logprob: -9.900796890258789
    8. ')' → logprob: -10.525796890258789
    9. '{}' → logprob: -10.775796890258789
    10. '{s' → logprob: -11.025796890258789

Token 150: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010342398309148848
    2. ' self' → logprob: -9.250102996826172
    3. '{' → logprob: -11.875102996826172
    4. '       ' → logprob: -16.125102996826172
    5. '
' → logprob: -16.625102996826172
    6. '           ' → logprob: -16.875102996826172
    7. '(self' → logprob: -17.375102996826172
    8. '   ' → logprob: -17.875102996826172
    9. '	self' → logprob: -17.875102996826172
    10. ' ' → logprob: -18.000102996826172

Token 151: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00014060820103622973
    2. '.' → logprob: -8.875140190124512
    3. 'p' → logprob: -15.375140190124512
    4. ').' → logprob: -16.000141143798828
    5. ')' → logprob: -16.250141143798828
    6. ' .' → logprob: -16.250141143798828
    7. '.п' → logprob: -17.500141143798828
    8. '<p' → logprob: -18.125141143798828
    9. '.P' → logprob: -18.250141143798828
    10. '}.' → logprob: -18.375141143798828

Token 152: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006520323222503066
    2. '.p' → logprob: -7.375651836395264
    3. '.' → logprob: -11.000652313232422
    4. ')' → logprob: -12.375652313232422
    5. 'p' → logprob: -13.875652313232422
    6. '.s' → logprob: -14.500652313232422
    7. '1' → logprob: -15.000652313232422
    8. '
' → logprob: -15.125652313232422
    9. '```' → logprob: -15.125652313232422
    10. '}' → logprob: -15.250652313232422

Token 153: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.01194875966757536
    2. ')"' → logprob: -4.761948585510254
    3. ')' → logprob: -6.136948585510254
    4. '}")' → logprob: -7.136948585510254
    5. ')")' → logprob: -8.511948585510254
    6. '}"' → logprob: -9.511948585510254
    7. ')}' → logprob: -10.136948585510254
    8. '"})' → logprob: -10.636948585510254
    9. '")' → logprob: -11.636948585510254
    10. '}' → logprob: -11.636948585510254

Token 154: '"

' (ID: 2678)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46979349851608276
    2. '"' → logprob: -1.2197935581207275
    3. '")' → logprob: -2.8447935581207275
    4. ')"' → logprob: -4.594793319702148
    5. '<|end|>' → logprob: -4.719793319702148
    6. '```' → logprob: -7.469793319702148
    7. '}' → logprob: -7.719793319702148
    8. '"""' → logprob: -7.969793319702148
    9. '\n' → logprob: -8.094793319702148
    10. '   ' → logprob: -9.469793319702148

Token 155: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.120500847697258
    2. '   ' → logprob: -2.4955008029937744
    3. '    
' → logprob: -3.9955008029937744
    4. '<|end|>' → logprob: -5.4955010414123535
    5. 'class' → logprob: -5.7455010414123535
    6. '

' → logprob: -6.2455010414123535
    7. 'def' → logprob: -7.3705010414123535
    8. ' 
' → logprob: -7.7455010414123535
    9. ' ' → logprob: -7.9955010414123535
    10. 'newline' → logprob: -8.120500564575195

Token 156: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1655731201171875
    2. 'def' → logprob: -1.2905731201171875
    3. '
' → logprob: -1.5405731201171875
    4. ' ' → logprob: -2.2905731201171875
    5. ' 
' → logprob: -3.4155731201171875
    6. '    
' → logprob: -3.6655731201171875
    7. ' def' → logprob: -4.2905731201171875
    8. '    ' → logprob: -4.6655731201171875
    9. '' → logprob: -6.0405731201171875
    10. '   
' → logprob: -6.2905731201171875

Token 157: ' VAT' (ID: 56356)
  Prédit: ' Discount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Discount' → logprob: -0.6415890455245972
    2. ' Calculator' → logprob: -2.0165891647338867
    3. ' Price' → logprob: -2.1415891647338867
    4. ' Solution' → logprob: -3.3915891647338867
    5. ' Product' → logprob: -3.6415891647338867
    6. ' Unit' → logprob: -4.016589164733887
    7. ' Test' → logprob: -4.266589164733887
    8. ' Tax' → logprob: -4.266589164733887
    9. ' Validator' → logprob: -4.641589164733887
    10. ' Builder' → logprob: -4.766589164733887

Token 158: 'Change' (ID: 4836)
  Prédit: 'Rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rate' → logprob: -0.5577887892723083
    2. 'Price' → logprob: -1.0577888488769531
    3. 'Calculator' → logprob: -2.807788848876953
    4. ':' → logprob: -5.307788848876953
    5. 'def' → logprob: -5.557788848876953
    6. 'Amount' → logprob: -6.182788848876953
    7. '   ' → logprob: -6.432788848876953
    8. 'Tax' → logprob: -6.682788848876953
    9. 'Rates' → logprob: -7.432788848876953
    10. 'rate' → logprob: -8.057788848876953

Token 159: 'Scenario' (ID: 65095)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0039413790218532085
    2. ':
' → logprob: -6.128941535949707
    3. 'Calculator' → logprob: -6.753941535949707
    4. '):' → logprob: -8.628941535949707
    5. '(' → logprob: -8.878941535949707
    6. '   ' → logprob: -9.253941535949707
    7. 'Price' → logprob: -10.378941535949707
    8. '{' → logprob: -11.003941535949707
    9. ' :' → logprob: -11.128941535949707
    10. 'ed' → logprob: -11.378941535949707

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00030686063109897077
    2. ':
' → logprob: -8.250307083129883
    3. '(' → logprob: -10.125307083129883
    4. '):' → logprob: -13.500307083129883
    5. ':

' → logprob: -13.625307083129883
    6. ':**' → logprob: -14.375307083129883
    7. '>:' → logprob: -14.750307083129883
    8. ' :' → logprob: -14.875307083129883
    9. '<|end|>' → logprob: -14.875307083129883
    10. '():' → logprob: -14.875307083129883

Token 161: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18039537966251373
    2. ':' → logprob: -3.1803953647613525
    3. '       ' → logprob: -3.1803953647613525
    4. '<|end|>' → logprob: -3.3053953647613525
    5. '(' → logprob: -4.555395603179932
    6. ':
' → logprob: -4.680395603179932
    7. ' def' → logprob: -4.805395603179932
    8. 'def' → logprob: -4.930395603179932
    9. '(
' → logprob: -6.055395603179932
    10. '    
' → logprob: -6.055395603179932

Token 162: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20158183574676514
    2. ' def' → logprob: -1.7015818357467651
    3. '   ' → logprob: -8.701581954956055
    4. 'class' → logprob: -14.076581954956055
    5. '       ' → logprob: -14.326581954956055
    6. '	def' → logprob: -15.576581954956055
    7. '    ' → logprob: -15.701581954956055
    8. ' ' → logprob: -15.701581954956055
    9. '
' → logprob: -15.826581954956055
    10. '```' → logprob: -16.076581954956055

Token 163: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.023242564871907234
    2. '__' → logprob: -5.023242473602295
    3. '_init' → logprob: -5.148242473602295
    4. '_' → logprob: -5.773242473602295
    5. ' def' → logprob: -5.898242473602295
    6. ' _' → logprob: -6.523242473602295
    7. ' ' → logprob: -6.773242473602295
    8. 'init' → logprob: -6.773242473602295
    9. ' init' → logprob: -7.148242473602295
    10. 'def' → logprob: -9.648242950439453

Token 164: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0004282851587049663
    2. 'i' → logprob: -8.250428199768066
    3. 'def' → logprob: -9.500428199768066
    4. '_init' → logprob: -10.250428199768066
    5. 'in' → logprob: -10.750428199768066
    6. 'ini' → logprob: -11.000428199768066
    7. '_' → logprob: -11.500428199768066
    8. 'nit' → logprob: -12.750428199768066
    9. 'int' → logprob: -13.250428199768066
    10. '_i' → logprob: -13.625428199768066

Token 165: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1247185692191124
    2. '__(' → logprob: -2.49971866607666
    3. '(' → logprob: -3.37471866607666
    4. ',' → logprob: -7.49971866607666
    5. ' (' → logprob: -8.37471866607666
    6. '_(' → logprob: -9.74971866607666
    7. 'self' → logprob: -10.24971866607666
    8. '__(
' → logprob: -11.37471866607666
    9. '__' → logprob: -11.49971866607666
    10. ')(' → logprob: -12.24971866607666

Token 166: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015504523180425167
    2. ' self' → logprob: -6.501550674438477
    3. ',' → logprob: -10.626550674438477
    4. '       ' → logprob: -12.001550674438477
    5. '(self' → logprob: -12.126550674438477
    6. '0' → logprob: -12.501550674438477
    7. 's' → logprob: -13.001550674438477
    8. '<|end|>' → logprob: -13.251550674438477
    9. '
' → logprob: -13.751550674438477
    10. '           ' → logprob: -14.126550674438477

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008628651266917586
    2. 'self' → logprob: -7.250863075256348
    3. ' ,' → logprob: -8.875863075256348
    4. '(self' → logprob: -11.875863075256348
    5. ',self' → logprob: -12.875863075256348
    6. ' self' → logprob: -13.250863075256348
    7. '<|end|>' → logprob: -15.000863075256348
    8. '__,' → logprob: -15.000863075256348
    9. '‌,' → logprob: -15.125863075256348
    10. '_,' → logprob: -15.500863075256348

Token 168: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.4720745384693146
    2. ' old' → logprob: -1.5970745086669922
    3. 'self' → logprob: -2.472074508666992
    4. ' self' → logprob: -3.597074508666992
    5. 'prev' → logprob: -4.222074508666992
    6. 'p' → logprob: -4.347074508666992
    7. ' prev' → logprob: -4.972074508666992
    8. ' p' → logprob: -5.097074508666992
    9. 'previous' → logprob: -5.597074508666992
    10. ' previous' → logprob: -5.722074508666992

Token 169: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.0011237873695790768
    2. '_' → logprob: -7.751123905181885
    3. '_tax' → logprob: -8.126123428344727
    4. '_price' → logprob: -9.126123428344727
    5. ',' → logprob: -9.251123428344727
    6. 'rate' → logprob: -10.251123428344727
    7. '_v' → logprob: -10.376123428344727
    8. '_r' → logprob: -10.376123428344727
    9. '_rates' → logprob: -10.626123428344727
    10. '_value' → logprob: -11.001123428344727

Token 170: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3146364986896515
    2. ',' → logprob: -1.314636468887329
    3. ':int' → logprob: -7.314636707305908
    4. '=' → logprob: -7.564636707305908
    5. ' ,' → logprob: -8.81463623046875
    6. ' :' → logprob: -11.06463623046875
    7. '):' → logprob: -11.31463623046875
    8. ':,' → logprob: -11.93963623046875
    9. '   ' → logprob: -13.43963623046875
    10. '=None' → logprob: -13.93963623046875

Token 171: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25328168272972107
    2. ' int' → logprob: -1.5032817125320435
    3. ':int' → logprob: -8.128281593322754
    4. 'old' → logprob: -8.253281593322754
    5. 'self' → logprob: -8.503281593322754
    6. ' old' → logprob: -8.503281593322754
    7. ',' → logprob: -9.003281593322754
    8. ' self' → logprob: -9.878281593322754
    9. '<|end|>' → logprob: -9.878281593322754
    10. ' ' → logprob: -10.003281593322754

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.615255839889869e-05
    2. ' ,' → logprob: -9.625096321105957
    3. '):' → logprob: -10.500096321105957
    4. ')' → logprob: -13.875096321105957
    5. ':' → logprob: -14.625096321105957
    6. ',
' → logprob: -15.250096321105957
    7. '   ' → logprob: -15.500096321105957
    8. '       ' → logprob: -15.750096321105957
    9. '=' → logprob: -16.00009536743164
    10. '‌,' → logprob: -16.00009536743164

Token 173: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.16024810075759888
    2. 'new' → logprob: -1.910248041152954
    3. ' ' → logprob: -12.410247802734375
    4. '	new' → logprob: -12.410247802734375
    5. ')new' → logprob: -12.660247802734375
    6. '   ' → logprob: -12.910247802734375
    7. '    ' → logprob: -13.535247802734375
    8. '_new' → logprob: -13.660247802734375
    9. ',new' → logprob: -14.347747802734375
    10. ',' → logprob: -14.472747802734375

Token 174: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.004744587931782007
    2. '_' → logprob: -5.629744529724121
    3. '_r' → logprob: -6.879744529724121
    4. ' _' → logprob: -9.504744529724121
    5. '_rating' → logprob: -11.629744529724121
    6. ')' → logprob: -12.379744529724121
    7. ')_' → logprob: -12.504744529724121
    8. '_rat' → logprob: -12.504744529724121
    9. '_ratio' → logprob: -12.629744529724121
    10. '
' → logprob: -12.879744529724121

Token 175: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023738505318760872
    2. '):' → logprob: -3.7737386226654053
    3. ')' → logprob: -8.648738861083984
    4. ',' → logprob: -8.773738861083984
    5. ':int' → logprob: -9.523738861083984
    6. '):
' → logprob: -9.648738861083984
    7. ' :' → logprob: -11.523738861083984
    8. '   ' → logprob: -12.398738861083984
    9. ' ):' → logprob: -12.523738861083984
    10. '<|end|>' → logprob: -12.898738861083984

Token 176: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31330814957618713
    2. 'int' → logprob: -1.3133081197738647
    3. ':int' → logprob: -10.688307762145996
    4. ')' → logprob: -11.063307762145996
    5. ',int' → logprob: -13.563307762145996
    6. '):
' → logprob: -13.688307762145996
    7. '[int' → logprob: -13.938307762145996
    8. '(int' → logprob: -14.063307762145996
    9. '=int' → logprob: -14.188307762145996
    10. ' ' → logprob: -14.313307762145996

Token 177: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011524823494255543
    2. '):
' → logprob: -6.876152515411377
    3. ',' → logprob: -9.876152038574219
    4. ')' → logprob: -10.001152038574219
    5. ':' → logprob: -11.376152038574219
    6. '       ' → logprob: -12.001152038574219
    7. '   ' → logprob: -13.001152038574219
    8. '):
' → logprob: -13.501152038574219
    9. ' ):' → logprob: -13.626152038574219
    10. '           ' → logprob: -15.876152038574219

Token 178: ' old' (ID: 2890)
  Prédit: ' old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' old' → logprob: -1.1536940336227417
    2. ' price' → logprob: -1.2786940336227417
    3. ' prices' → logprob: -2.7786941528320312
    4. ' base' → logprob: -3.1536941528320312
    5. ' p' → logprob: -3.2786941528320312
    6. ' pair' → logprob: -3.5286941528320312
    7. ' original' → logprob: -3.6536941528320312
    8. ' initial' → logprob: -3.6536941528320312
    9. 'old' → logprob: -4.153694152832031
    10. '   ' → logprob: -4.278694152832031

Token 179: '_total' (ID: 23814)
  Prédit: '_price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.1487286388874054
    2. '_prices' → logprob: -2.773728609085083
    3. '_amount' → logprob: -4.273728847503662
    4. '_base' → logprob: -4.398728847503662
    5. '_tax' → logprob: -4.523728847503662
    6. '_pair' → logprob: -4.648728847503662
    7. '_' → logprob: -5.023728847503662
    8. '_rate' → logprob: -5.273728847503662
    9. '_total' → logprob: -5.523728847503662
    10. '_value' → logprob: -6.148728847503662

Token 180: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015663836151361465
    2. '):' → logprob: -4.2656636238098145
    3. ',' → logprob: -7.3906636238098145
    4. '_price' → logprob: -8.015664100646973
    5. ')' → logprob: -8.515664100646973
    6. ' :' → logprob: -9.265664100646973
    7. 'price' → logprob: -9.265664100646973
    8. '):
' → logprob: -9.640664100646973
    9. ':int' → logprob: -10.390664100646973
    10. ' price' → logprob: -11.265664100646973

Token 181: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04123086482286453
    2. ' int' → logprob: -3.2912309169769287
    3. 'VAT' → logprob: -6.79123067855835
    4. ')' → logprob: -7.16623067855835
    5. 'Price' → logprob: -7.79123067855835
    6. ' VAT' → logprob: -8.291231155395508
    7. '   ' → logprob: -8.416231155395508
    8. '):
' → logprob: -9.041231155395508
    9. ' Price' → logprob: -9.791231155395508
    10. ':' → logprob: -10.041231155395508

Token 182: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012329687597230077
    2. ',' → logprob: -7.126233100891113
    3. '):
' → logprob: -8.251233100891113
    4. ':' → logprob: -9.376233100891113
    5. ')' → logprob: -9.626233100891113
    6. '       ' → logprob: -11.876233100891113
    7. '   ' → logprob: -11.876233100891113
    8. ' ):' → logprob: -13.626233100891113
    9. '):
' → logprob: -14.251233100891113
    10. '           ' → logprob: -15.626233100891113

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06368420273065567
    2. ':' → logprob: -2.9386842250823975
    3. '       ' → logprob: -5.188683986663818
    4. ',' → logprob: -7.188683986663818
    5. ':
' → logprob: -7.313683986663818
    6. '<|end|>' → logprob: -7.563683986663818
    7. '):
' → logprob: -7.688683986663818
    8. '):' → logprob: -8.563684463500977
    9. '          ' → logprob: -8.688684463500977
    10. ')' → logprob: -9.438684463500977

Token 184: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001548664178699255
    2. ' self' → logprob: -6.501548767089844
    3. '       ' → logprob: -10.001548767089844
    4. '           ' → logprob: -15.001548767089844
    5. '   ' → logprob: -15.126548767089844
    6. '	self' → logprob: -15.376548767089844
    7. 'super' → logprob: -15.876548767089844
    8. ' ' → logprob: -17.251548767089844
    9. '        ' → logprob: -18.376548767089844
    10. '```' → logprob: -18.376548767089844

Token 185: '.old' (ID: 81843)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.26168176531791687
    2. '.old' → logprob: -1.5116817951202393
    3. ' .' → logprob: -4.63668155670166
    4. ' ' → logprob: -12.01168155670166
    5. '	old' → logprob: -13.26168155670166
    6. ' old' → logprob: -13.76168155670166
    7. 'old' → logprob: -14.26168155670166
    8. '.new' → logprob: -14.63668155670166
    9. '.v' → logprob: -14.63668155670166
    10. '._' → logprob: -14.88668155670166

Token 186: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.0026362957432866096
    2. '_total' → logprob: -6.752636432647705
    3. '_' → logprob: -7.127636432647705
    4. '_price' → logprob: -7.377636432647705
    5. '_tax' → logprob: -12.002635955810547
    6. '_rating' → logprob: -12.252635955810547
    7. '_old' → logprob: -12.377635955810547
    8. '_r' → logprob: -12.502635955810547
    9. ' _' → logprob: -12.877635955810547
    10. '_rates' → logprob: -13.252635955810547

Token 187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20144784450531006
    2. ' =' → logprob: -1.70144784450531
    3. '<|end|>' → logprob: -10.701447486877441
    4. ',' → logprob: -11.576447486877441
    5. ' ' → logprob: -13.951447486877441
    6. ')' → logprob: -13.951447486877441
    7. ':' → logprob: -15.076447486877441
    8. '<|end|>' → logprob: -15.701447486877441
    9. '=}' → logprob: -16.326448440551758
    10. '=
' → logprob: -16.451448440551758

Token 188: ' old' (ID: 2890)
  Prédit: ' old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' old' → logprob: -0.03804286941885948
    2. 'old' → logprob: -3.2880427837371826
    3. '	old' → logprob: -13.663043022155762
    4. '(old' → logprob: -16.163042068481445
    5. ' ' → logprob: -16.538042068481445
    6. '_old' → logprob: -16.788042068481445
    7. '.old' → logprob: -17.413042068481445
    8. 'olds' → logprob: -18.163042068481445
    9. 'oldt' → logprob: -18.538042068481445
    10. ' ' → logprob: -18.913042068481445

Token 189: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -3.440506407059729e-05
    2. '_r' → logprob: -11.12503433227539
    3. '_' → logprob: -11.50003433227539
    4. ' _' → logprob: -12.00003433227539
    5. 'rate' → logprob: -13.50003433227539
    6. '_rat' → logprob: -14.25003433227539
    7. '._' → logprob: -14.87503433227539
    8. '_ratio' → logprob: -15.87503433227539
    9. '_rating' → logprob: -15.87503433227539
    10. '_ra' → logprob: -16.00003433227539

Token 190: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005025609862059355
    2. '       ' → logprob: -5.505025386810303
    3. 'self' → logprob: -7.130025386810303
    4. '   ' → logprob: -10.505025863647461
    5. ' self' → logprob: -10.505025863647461
    6. ',' → logprob: -10.630025863647461
    7. '          ' → logprob: -11.130025863647461
    8. '         ' → logprob: -11.380025863647461
    9. '
' → logprob: -11.630025863647461
    10. '               ' → logprob: -12.005025863647461

Token 191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002047243993729353
    2. 'self' → logprob: -6.377047061920166
    3. '       ' → logprob: -8.252047538757324
    4. ' self' → logprob: -9.752047538757324
    5. '   ' → logprob: -12.002047538757324
    6. '          ' → logprob: -12.377047538757324
    7. '         ' → logprob: -12.502047538757324
    8. ',' → logprob: -12.752047538757324
    9. '               ' → logprob: -13.002047538757324
    10. '		' → logprob: -13.377047538757324

Token 192: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.021056320518255234
    2. ' self' → logprob: -3.8960564136505127
    3. 'new' → logprob: -7.771056175231934
    4. '           ' → logprob: -9.771056175231934
    5. ' new' → logprob: -10.396056175231934
    6. '       ' → logprob: -12.646056175231934
    7. '   ' → logprob: -14.396056175231934
    8. '	self' → logprob: -15.146056175231934
    9. ' ' → logprob: -15.646056175231934
    10. '               ' → logprob: -15.771056175231934

Token 193: '.new' (ID: 8564)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5572985410690308
    2. '.new' → logprob: -0.9322985410690308
    3. '.old' → logprob: -3.4322986602783203
    4. ' .' → logprob: -7.18229866027832
    5. 'new' → logprob: -7.80729866027832
    6. '.
' → logprob: -10.05729866027832
    7. ' new' → logprob: -10.80729866027832
    8. '.user' → logprob: -11.55729866027832
    9. 'old' → logprob: -11.55729866027832
    10. '.previous' → logprob: -11.93229866027832

Token 194: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -1.0564331205387134e-05
    2. '_' → logprob: -11.75001049041748
    3. ' _' → logprob: -13.62501049041748
    4. '_r' → logprob: -14.12501049041748
    5. '_rating' → logprob: -15.50001049041748
    6. '_ratio' → logprob: -16.250011444091797
    7. '_code' → logprob: -16.500011444091797
    8. '_rates' → logprob: -16.625011444091797
    9. 'rate' → logprob: -17.125011444091797
    10. '_price' → logprob: -17.375011444091797

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38689297437667847
    2. '=' → logprob: -1.1368930339813232
    3. '<|end|>' → logprob: -11.511893272399902
    4. ' ' → logprob: -11.636893272399902
    5. ',' → logprob: -14.136893272399902
    6. '_' → logprob: -14.261893272399902
    7. ')' → logprob: -14.636893272399902
    8. '<|end|>' → logprob: -15.011893272399902
    9. ':' → logprob: -15.386893272399902
    10. ' =
' → logprob: -16.011892318725586

Token 196: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.2811567485332489
    2. 'new' → logprob: -1.4061567783355713
    3. '_new' → logprob: -13.406156539916992
    4. ' ' → logprob: -13.531156539916992
    5. '<|end|>' → logprob: -14.281156539916992
    6. '	new' → logprob: -14.656156539916992
    7. ')new' → logprob: -14.906156539916992
    8. ' ' → logprob: -15.093656539916992
    9. '[new' → logprob: -15.156156539916992
    10. 'n' → logprob: -15.156156539916992

Token 197: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.00013774730905424803
    2. 'rate' → logprob: -9.625137329101562
    3. '_' → logprob: -9.875137329101562
    4. ' _' → logprob: -11.625137329101562
    5. '_r' → logprob: -12.875137329101562
    6. '_rat' → logprob: -13.125137329101562
    7. 'new' → logprob: -13.500137329101562
    8. 'Rate' → logprob: -13.625137329101562
    9. '_code' → logprob: -14.500137329101562
    10. ' rate' → logprob: -14.750137329101562

Token 198: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008850149461068213
    2. '       ' → logprob: -7.500885009765625
    3. 'self' → logprob: -8.625885009765625
    4. '
' → logprob: -9.125885009765625
    5. ',' → logprob: -11.000885009765625
    6. '   ' → logprob: -11.875885009765625
    7. ' self' → logprob: -12.000885009765625
    8. '               ' → logprob: -12.625885009765625
    9. '          ' → logprob: -13.250885009765625
    10. '		' → logprob: -13.375885009765625

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0045457081869244576
    2. '       ' → logprob: -6.00454568862915
    3. 'self' → logprob: -6.25454568862915
    4. ' self' → logprob: -9.629546165466309
    5. '
' → logprob: -10.504546165466309
    6. '        
' → logprob: -11.504546165466309
    7. '   ' → logprob: -11.754546165466309
    8. ',' → logprob: -12.004546165466309
    9. '         ' → logprob: -12.004546165466309
    10. '          ' → logprob: -12.254546165466309

Token 200: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005512446514330804
    2. ' self' → logprob: -8.000551223754883
    3. 'old' → logprob: -8.500551223754883
    4. '       ' → logprob: -11.625551223754883
    5. '           ' → logprob: -12.750551223754883
    6. '   ' → logprob: -15.375551223754883
    7. ' old' → logprob: -16.125551223754883
    8. '
' → logprob: -16.750551223754883
    9. 'new' → logprob: -16.875551223754883
    10. '	self' → logprob: -17.625551223754883

Token 201: '.old' (ID: 81843)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.25200748443603516
    2. '.old' → logprob: -1.5020074844360352
    3. ' .' → logprob: -9.752007484436035
    4. 'old' → logprob: -12.002007484436035
    5. '	old' → logprob: -13.002007484436035
    6. ' old' → logprob: -13.127007484436035
    7. '._' → logprob: -13.127007484436035
    8. '.new' → logprob: -13.377007484436035
    9. ' ' → logprob: -13.627007484436035
    10. '_old' → logprob: -14.127007484436035

Token 202: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.00019650737522169948
    2. '_rate' → logprob: -9.25019645690918
    3. '_price' → logprob: -9.37519645690918
    4. '_' → logprob: -11.87519645690918
    5. 'total' → logprob: -12.25019645690918
    6. '_value' → logprob: -14.37519645690918
    7. 'Total' → logprob: -14.50019645690918
    8. ' _' → logprob: -14.50019645690918
    9. '_code' → logprob: -15.37519645690918
    10. '_amount' → logprob: -15.75019645690918

Token 203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751067981123924
    2. ' =' → logprob: -3.5297510623931885
    3. '_' → logprob: -14.90475082397461
    4. ' ' → logprob: -16.65475082397461
    5. ')' → logprob: -16.77975082397461
    6. '<|end|>' → logprob: -16.77975082397461
    7. '=

' → logprob: -17.40475082397461
    8. '_=' → logprob: -17.52975082397461
    9. '=self' → logprob: -18.02975082397461
    10. ',' → logprob: -18.65475082397461

Token 204: ' old' (ID: 2890)
  Prédit: ' old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' old' → logprob: -0.31326448917388916
    2. 'old' → logprob: -1.3132644891738892
    3. '	old' → logprob: -13.188264846801758
    4. '(old' → logprob: -14.688264846801758
    5. '_old' → logprob: -15.063264846801758
    6. '.old' → logprob: -16.313264846801758
    7. ' ' → logprob: -17.813264846801758
    8. ' ' → logprob: -17.938264846801758
    9. 'Old' → logprob: -18.188264846801758
    10. 'olds' → logprob: -18.563264846801758

Token 205: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.00011629798245849088
    2. 'total' → logprob: -9.500116348266602
    3. '_price' → logprob: -11.000116348266602
    4. '_' → logprob: -11.375116348266602
    5. '_rate' → logprob: -11.875116348266602
    6. 'otal' → logprob: -12.750116348266602
    7. '_tax' → logprob: -13.750116348266602
    8. '_t' → logprob: -14.000116348266602
    9. 'Total' → logprob: -14.625116348266602
    10. '_value' → logprob: -15.125116348266602

Token 206: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7802640199661255
    2. '        
' → logprob: -1.4052640199661255
    3. '       ' → logprob: -1.6552640199661255
    4. '    
' → logprob: -3.030263900756836
    5. '<|end|>' → logprob: -3.155263900756836
    6. '   ' → logprob: -4.655263900756836
    7. 'def' → logprob: -6.280263900756836
    8. '            
' → logprob: -7.405263900756836
    9. '<|end|>' → logprob: -7.405263900756836
    10. '        

' → logprob: -7.655263900756836

Token 208: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.8284288048744202
    2. 'def' → logprob: -0.8284288048744202
    3. ' self' → logprob: -3.2034287452697754
    4. '       ' → logprob: -3.4534287452697754
    5. ' def' → logprob: -3.9534287452697754
    6. '   ' → logprob: -4.828428745269775
    7. '
' → logprob: -4.953428745269775
    8. '#' → logprob: -5.203428745269775
    9. '           ' → logprob: -5.578428745269775
    10. 'class' → logprob: -6.578428745269775

Token 209: '.valid' (ID: 41805)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011351012624800205
    2. '.price' → logprob: -6.011351108551025
    3. '.old' → logprob: -6.261351108551025
    4. ' .' → logprob: -6.761351108551025
    5. ' =' → logprob: -7.011351108551025
    6. '.total' → logprob: -7.511351108551025
    7. 'def' → logprob: -8.136350631713867
    8. '.valid' → logprob: -8.261350631713867
    9. ' ' → logprob: -8.636350631713867
    10. '.v' → logprob: -8.761350631713867

Token 210: '_pairs' (ID: 90005)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38708510994911194
    2. '=' → logprob: -1.1370850801467896
    3. '<|end|>' → logprob: -9.7620849609375
    4. ' ' → logprob: -10.5120849609375
    5. '_' → logprob: -10.5120849609375
    6. '=True' → logprob: -10.6370849609375
    7. '   ' → logprob: -11.0120849609375
    8. 'ity' → logprob: -11.5120849609375
    9. '=False' → logprob: -11.6370849609375
    10. ':' → logprob: -11.6370849609375

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18011604249477386
    2. '=' → logprob: -1.805116057395935
    3. ':' → logprob: -8.180115699768066
    4. '=[]' → logprob: -9.430115699768066
    5. '<|end|>' → logprob: -12.555115699768066
    6. ')' → logprob: -13.180115699768066
    7. ' ' → logprob: -13.555115699768066
    8. ' :' → logprob: -13.805115699768066
    9. 's' → logprob: -14.055115699768066
    10. '=None' → logprob: -14.930115699768066

Token 212: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.07277288287878036
    2. '[]' → logprob: -2.697772979736328
    3. ' set' → logprob: -5.947772979736328
    4. 'set' → logprob: -8.697772979736328
    5. ' []
' → logprob: -10.322772979736328
    6. ' [' → logprob: -11.447772979736328
    7. '[]
' → logprob: -12.447772979736328
    8. ' []

' → logprob: -13.572772979736328
    9. '[' → logprob: -13.822772979736328
    10. '[]}' → logprob: -13.822772979736328

Token 213: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04070416837930679
    2. '        
' → logprob: -4.040704250335693
    3. 'def' → logprob: -4.915704250335693
    4. '       ' → logprob: -5.290704250335693
    5. '    
' → logprob: -5.540704250335693
    6. '<|end|>' → logprob: -5.915704250335693
    7. '   ' → logprob: -6.165704250335693
    8. '
        
' → logprob: -7.790704250335693
    9. '

' → logprob: -7.915704250335693
    10. ' def' → logprob: -9.165703773498535

Token 215: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0032121767289936543
    2. ' .' → logprob: -6.753211975097656
    3. '.valid' → logprob: -7.128211975097656
    4. 'def' → logprob: -7.878211975097656
    5. '.validate' → logprob: -8.253211975097656
    6. ' ' → logprob: -8.753211975097656
    7. '._' → logprob: -9.253211975097656
    8. ' def' → logprob: -10.003211975097656
    9. '.is' → logprob: -10.253211975097656
    10. '.old' → logprob: -10.628211975097656

Token 216: 'generate' (ID: 36386)
  Prédit: 'generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.6002498865127563
    2. 'find' → logprob: -1.4752498865127563
    3. 'compute' → logprob: -2.475249767303467
    4. 'calculate' → logprob: -3.100249767303467
    5. 'search' → logprob: -3.850249767303467
    6. 'expl' → logprob: -4.100249767303467
    7. 'populate' → logprob: -4.725249767303467
    8. 're' → logprob: -5.600249767303467
    9. 'enumer' → logprob: -5.600249767303467
    10. 'calc' → logprob: -5.725249767303467

Token 217: '_valid' (ID: 23321)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.050256721675395966
    2. '_price' → logprob: -4.050256729125977
    3. '_' → logprob: -4.300256729125977
    4. '_valid' → logprob: -4.675256729125977
    5. '_possible' → logprob: -5.550256729125977
    6. '_candidates' → logprob: -6.175256729125977
    7. '_prices' → logprob: -6.675256729125977
    8. '_all' → logprob: -7.300256729125977
    9. '()' → logprob: -8.050256729125977
    10. '_pair' → logprob: -8.675256729125977

Token 218: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.003309723688289523
    2. '_' → logprob: -6.753309726715088
    3. '_price' → logprob: -6.878309726715088
    4. '_prices' → logprob: -6.878309726715088
    5. '_pair' → logprob: -10.50330924987793
    6. '_p' → logprob: -11.12830924987793
    7. 's' → logprob: -11.37830924987793
    8. 'pairs' → logprob: -12.50330924987793
    9. '_candidates' → logprob: -12.62830924987793
    10. ' _' → logprob: -13.12830924987793

Token 219: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.822646693966817e-06
    2. '()
' → logprob: -12.500007629394531
    3. ' ()' → logprob: -13.375007629394531
    4. '(' → logprob: -13.625007629394531
    5. '()

' → logprob: -14.250007629394531
    6. '()`' → logprob: -15.625007629394531
    7. '()?' → logprob: -16.12500762939453
    8. '（）' → logprob: -16.37500762939453
    9. '_' → logprob: -16.62500762939453
    10. '()]' → logprob: -17.12500762939453

Token 220: '        
' (ID: 3564)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 221: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20264996588230133
    2. 'def' → logprob: -1.7026499509811401
    3. '    
' → logprob: -7.57765007019043
    4. '
' → logprob: -7.95265007019043
    5. '       ' → logprob: -8.57765007019043
    6. ' def' → logprob: -9.20265007019043
    7. '        
' → logprob: -10.07765007019043
    8. '	def' → logprob: -10.20265007019043
    9. '    ' → logprob: -13.95265007019043
    10. ' ' → logprob: -14.07765007019043

Token 222: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.6087021473795176e-05
    2. ' def' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.375045776367188
    4. '
' → logprob: -18.250045776367188
    5. '        
' → logprob: -18.875045776367188
    6. '    
' → logprob: -19.125045776367188
    7. '       ' → logprob: -19.625045776367188
    8. ' ' → logprob: -20.375045776367188
    9. '	def' → logprob: -20.375045776367188
    10. 'de' → logprob: -20.625045776367188

Token 223: ' _' (ID: 1175)
  Prédit: '_generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_generate' → logprob: -0.0013305948814377189
    2. ' _' → logprob: -6.626330375671387
    3. '_validate' → logprob: -13.876330375671387
    4. '_' → logprob: -13.876330375671387
    5. '_generated' → logprob: -13.876330375671387
    6. '_add' → logprob: -15.251330375671387
    7. 'generate' → logprob: -15.251330375671387
    8. 'Generate' → logprob: -15.501330375671387
    9. '_valid' → logprob: -15.626330375671387
    10. '_gener' → logprob: -15.876330375671387

Token 224: 'generate' (ID: 36386)
  Prédit: 'generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -2.935296834039036e-06
    2. '_generate' → logprob: -13.87500286102295
    3. 'g' → logprob: -14.12500286102295
    4. 'gener' → logprob: -14.75000286102295
    5. ' generate' → logprob: -15.12500286102295
    6. 'ge' → logprob: -15.75000286102295
    7. 'enerate' → logprob: -15.75000286102295
    8. 'gen' → logprob: -16.125003814697266
    9. '(generate' → logprob: -16.500003814697266
    10. '.generate' → logprob: -16.625003814697266

Token 225: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -9.088346359931165e-07
    2. '_possible' → logprob: -15.375000953674316
    3. '_invalid' → logprob: -15.625000953674316
    4. 'valid' → logprob: -15.875000953674316
    5. '_' → logprob: -16.0
    6. '_val' → logprob: -16.125
    7. '_pairs' → logprob: -16.875
    8. ' valid' → logprob: -18.75
    9. '_price' → logprob: -18.875
    10. '_value' → logprob: -19.0

Token 226: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -1.3782830137643032e-05
    2. '_prices' → logprob: -11.75001335144043
    3. '_price' → logprob: -12.50001335144043
    4. '_' → logprob: -13.50001335144043
    5. '_pair' → logprob: -14.87501335144043
    6. 'pairs' → logprob: -15.25001335144043
    7. ' _' → logprob: -17.62501335144043
    8. '_p' → logprob: -17.75001335144043
    9. ' pairs' → logprob: -17.87501335144043
    10. '_self' → logprob: -18.87501335144043

Token 227: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015317666111513972
    2. '(' → logprob: -6.501531600952148
    3. '(s' → logprob: -11.376531600952148
    4. 'self' → logprob: -11.501531600952148
    5. ' (' → logprob: -12.376531600952148
    6. '(
' → logprob: -13.876531600952148
    7. '   ' → logprob: -14.126531600952148
    8. '()' → logprob: -15.001531600952148
    9. '(se' → logprob: -15.126531600952148
    10. ' ' → logprob: -15.251531600952148

Token 228: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043379489332437515
    2. ',' → logprob: -3.418379545211792
    3. '):
' → logprob: -4.793379306793213
    4. 'self' → logprob: -7.418379306793213
    5. ')' → logprob: -8.543379783630371
    6. '():' → logprob: -8.668379783630371
    7. ' ):' → logprob: -8.793379783630371
    8. ':' → logprob: -9.793379783630371
    9. '(self' → logprob: -9.793379783630371
    10. '   ' → logprob: -9.793379783630371

Token 229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27490201592445374
    2. '       ' → logprob: -1.5249019861221313
    3. ' for' → logprob: -4.274901866912842
    4. 'for' → logprob: -4.899901866912842
    5. '   ' → logprob: -7.649901866912842
    6. '        
' → logprob: -8.89990234375
    7. '        ' → logprob: -9.02490234375
    8. ' p' → logprob: -9.27490234375
    9. '
' → logprob: -9.64990234375
    10. 'p' → logprob: -9.77490234375

Token 230: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7922576665878296
    2. 'for' → logprob: -0.9172576665878296
    3. '           ' → logprob: -2.792257785797119
    4. ' for' → logprob: -3.292257785797119
    5. ' max' → logprob: -3.292257785797119
    6. 'self' → logprob: -5.667257785797119
    7. 'limit' → logprob: -6.042257785797119
    8. 'MAX' → logprob: -6.542257785797119
    9. 'old' → logprob: -6.917257785797119
    10. ' self' → logprob: -7.417257785797119

Token 231: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7468662261962891
    2. 'max' → logprob: -0.8718662261962891
    3. 'self' → logprob: -2.996866226196289
    4. ' for' → logprob: -4.121866226196289
    5. ' max' → logprob: -4.121866226196289
    6. ' self' → logprob: -5.496866226196289
    7. 'limit' → logprob: -5.621866226196289
    8. 'range' → logprob: -5.871866226196289
    9. '           ' → logprob: -5.996866226196289
    10. 'old' → logprob: -6.246866226196289

Token 232: ' only' (ID: 1606)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5685840249061584
    2. '           ' → logprob: -1.4435839653015137
    3. '       ' → logprob: -2.4435839653015137
    4. 'for' → logprob: -2.9435839653015137
    5. ' can' → logprob: -4.318583965301514
    6. ' =' → logprob: -5.068583965301514
    7. ' def' → logprob: -5.568583965301514
    8. 'def' → logprob: -5.568583965301514
    9. '        ' → logprob: -5.943583965301514
    10. ' know' → logprob: -6.068583965301514

Token 233: ' consider' (ID: 3331)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.272889256477356
    2. ' for' → logprob: -2.0228891372680664
    3. 'for' → logprob: -2.2728891372680664
    4. '       ' → logprob: -2.3978891372680664
    5. '           ' → logprob: -2.8978891372680664
    6. ' can' → logprob: -3.1478891372680664
    7. ' need' → logprob: -3.3978891372680664
    8. ' know' → logprob: -3.5228891372680664
    9. ' have' → logprob: -3.6478891372680664
    10. 'generate' → logprob: -3.6478891372680664

Token 234: ' pairs' (ID: 24702)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7474026083946228
    2. ' p' → logprob: -0.8724026083946228
    3. 'prices' → logprob: -3.4974026679992676
    4. ' prices' → logprob: -4.247402667999268
    5. ' for' → logprob: -4.497402667999268
    6. '   ' → logprob: -4.622402667999268
    7. 'for' → logprob: -4.747402667999268
    8. 'self' → logprob: -4.997402667999268
    9. '       ' → logprob: -5.122402667999268
    10. 'price' → logprob: -5.747402667999268

Token 235: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3293975591659546
    2. '(' → logprob: -2.079397678375244
    3. ' of' → logprob: -2.204397678375244
    4. ' with' → logprob: -2.329397678375244
    5. ' (' → logprob: -2.829397678375244
    6. '       ' → logprob: -2.954397678375244
    7. ' p' → logprob: -3.079397678375244
    8. '           ' → logprob: -3.079397678375244
    9. '(p' → logprob: -3.079397678375244
    10. ' in' → logprob: -3.204397678375244

Token 236: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004097993019968271
    2. ' p' → logprob: -5.879097938537598
    3. 'i' → logprob: -7.504097938537598
    4. 'self' → logprob: -8.129097938537598
    5. '0' → logprob: -8.754097938537598
    6. ')' → logprob: -8.879097938537598
    7. '           ' → logprob: -10.504097938537598
    8. '   ' → logprob: -10.754097938537598
    9. '100' → logprob: -11.254097938537598
    10. 'price' → logprob: -11.254097938537598

Token 237: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005454666912555695
    2. ',' → logprob: -5.6304545402526855
    3. ')' → logprob: -6.7554545402526855
    4. ' =' → logprob: -8.755455017089844
    5. '           ' → logprob: -9.505455017089844
    6. ' ' → logprob: -9.505455017089844
    7. ' ,' → logprob: -9.505455017089844
    8. '=' → logprob: -9.630455017089844
    9. '       ' → logprob: -9.880455017089844
    10. ' in' → logprob: -10.130455017089844

Token 238: ' old' (ID: 2890)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5541951060295105
    2. 'q' → logprob: -0.9291951060295105
    3. '100' → logprob: -4.054194927215576
    4. ' q' → logprob: -5.679194927215576
    5. ' p' → logprob: -5.804194927215576
    6. ')' → logprob: -6.054194927215576
    7. '0' → logprob: -6.054194927215576
    8. ' ' → logprob: -6.804194927215576
    9. 'total' → logprob: -9.366695404052734
    10. 'price' → logprob: -9.616695404052734

Token 239: '_total' (ID: 23814)
  Prédit: '_rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.585780143737793
    2. '_price' → logprob: -0.835780143737793
    3. '_p' → logprob: -5.460780143737793
    4. ')' → logprob: -5.835780143737793
    5. '_' → logprob: -7.210780143737793
    6. ',' → logprob: -8.210780143737793
    7. '   ' → logprob: -8.585780143737793
    8. 'rate' → logprob: -8.835780143737793
    9. '_tax' → logprob: -8.835780143737793
    10. ')_' → logprob: -8.960780143737793

Token 240: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1904691904783249
    2. '-' → logprob: -1.8154691457748413
    3. '-p' → logprob: -5.190469264984131
    4. ')' → logprob: -5.565469264984131
    5. ' ' → logprob: -7.815469264984131
    6. 'p' → logprob: -7.940469264984131
    7. ' p' → logprob: -8.690468788146973
    8. ',' → logprob: -9.315468788146973
    9. '   ' → logprob: -9.690468788146973
    10. '+' → logprob: -10.565468788146973

Token 241: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0011521248379722238
    2. ' p' → logprob: -6.876152038574219
    3. ')' → logprob: -9.501152038574219
    4. 'self' → logprob: -10.501152038574219
    5. '   ' → logprob: -12.001152038574219
    6. ')p' → logprob: -12.626152038574219
    7. ' ' → logprob: -13.376152038574219
    8. ' self' → logprob: -13.501152038574219
    9. '<|end|>' → logprob: -14.251152038574219
    10. '           ' → logprob: -14.501152038574219

Token 242: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030171608086675406
    2. '):' → logprob: -6.503016948699951
    3. ' )' → logprob: -7.628016948699951
    4. '):
' → logprob: -7.753016948699951
    5. ')
' → logprob: -8.12801742553711
    6. '       ' → logprob: -9.37801742553711
    7. '           ' → logprob: -9.87801742553711
    8. '-' → logprob: -10.25301742553711
    9. ' -' → logprob: -10.37801742553711
    10. '   ' → logprob: -10.75301742553711

Token 243: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2593380808830261
    2. ' for' → logprob: -1.634338140487671
    3. 'for' → logprob: -4.134337902069092
    4. '
' → logprob: -5.509337902069092
    5. '       ' → logprob: -5.509337902069092
    6. '   ' → logprob: -5.884337902069092
    7. ',' → logprob: -6.134337902069092
    8. '        
' → logprob: -7.759337902069092
    9. '    
' → logprob: -7.884337902069092
    10. '               ' → logprob: -7.884337902069092

Token 244: ' p' (ID: 275)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4766620099544525
    2. ' p' → logprob: -1.226662039756775
    3. 'p' → logprob: -3.1016619205474854
    4. ' ' → logprob: -3.3516619205474854
    5. ' range' → logprob: -5.8516621589660645
    6. 'range' → logprob: -7.2266621589660645
    7. ' self' → logprob: -7.6016621589660645
    8. 'self' → logprob: -7.6016621589660645
    9. '1' → logprob: -7.8516621589660645
    10. 'max' → logprob: -7.8516621589660645

Token 245: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14307506382465363
    2. 'in' → logprob: -2.0180749893188477
    3. 'from' → logprob: -8.893074989318848
    4. 'range' → logprob: -10.018074989318848
    5. ' ' → logprob: -10.268074989318848
    6. '=' → logprob: -10.268074989318848
    7. ' =' → logprob: -10.643074989318848
    8. ' range' → logprob: -10.643074989318848
    9. '1' → logprob: -11.143074989318848
    10. '0' → logprob: -11.268074989318848

Token 246: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16024920344352722
    2. ' range' → logprob: -1.9102492332458496
    3. '	range' → logprob: -11.410248756408691
    4. '   ' → logprob: -11.785248756408691
    5. 'rang' → logprob: -12.785248756408691
    6. ' ra' → logprob: -14.410248756408691
    7. ' rang' → logprob: -14.660248756408691
    8. 'ra' → logprob: -14.660248756408691
    9. '(range' → logprob: -14.785248756408691
    10. ' ' → logprob: -14.910248756408691

Token 247: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003503626212477684
    2. '1' → logprob: -8.250349998474121
    3. 'max' → logprob: -10.000349998474121
    4. ' ' → logprob: -10.500349998474121
    5. 'self' → logprob: -11.250349998474121
    6. '   ' → logprob: -13.750349998474121
    7. ' max' → logprob: -14.625349998474121
    8. 'range' → logprob: -14.875349998474121
    9. '
' → logprob: -15.000349998474121
    10. ')' → logprob: -16.000350952148438

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002671376569196582
    2. ' ,' → logprob: -6.002671241760254
    3. ',
' → logprob: -9.252671241760254
    4. ',self' → logprob: -9.627671241760254
    5. 'self' → logprob: -10.627671241760254
    6. '
' → logprob: -12.752671241760254
    7. ',

' → logprob: -13.752671241760254
    8. '

' → logprob: -14.502671241760254
    9. ' ,
' → logprob: -14.502671241760254
    10. 'old' → logprob: -15.127671241760254

Token 249: ' old' (ID: 2890)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006289214943535626
    2. ' self' → logprob: -7.37562894821167
    3. '(self' → logprob: -14.250628471374512
    4. '
' → logprob: -14.375628471374512
    5. '```' → logprob: -15.500628471374512
    6. '1' → logprob: -15.875628471374512
    7. '	self' → logprob: -16.250629425048828
    8. '$self' → logprob: -16.625629425048828
    9. 's' → logprob: -16.750629425048828
    10. 'sel' → logprob: -16.750629425048828

Token 250: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.003250438952818513
    2. '_price' → logprob: -6.003250598907471
    3. 'total' → logprob: -8.003250122070312
    4. '_' → logprob: -8.628250122070312
    5. 'self' → logprob: -9.128250122070312
    6. '_tot' → logprob: -9.878250122070312
    7. '_self' → logprob: -10.878250122070312
    8. '   ' → logprob: -11.003250122070312
    9. '_t' → logprob: -11.253250122070312
    10. 'Total' → logprob: -11.253250122070312

Token 251: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.92461758852005
    2. ' -' → logprob: -1.2996175289154053
    3. '):
' → logprob: -1.9246175289154053
    4. '-' → logprob: -2.9246175289154053
    5. ' +' → logprob: -3.4246175289154053
    6. ']:' → logprob: -3.5496175289154053
    7. '+' → logprob: -3.9246175289154053
    8. ' ):' → logprob: -4.299617767333984
    9. ']' → logprob: -4.424617767333984
    10. '   ' → logprob: -5.049617767333984

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018387178715784103
    2. ' ' → logprob: -8.625184059143066
    3. '   ' → logprob: -13.375184059143066
    4. '2' → logprob: -13.875184059143066
    5. ')' → logprob: -14.625184059143066
    6. '```' → logprob: -15.125184059143066
    7. '  ' → logprob: -15.812684059143066
    8. '
' → logprob: -16.25018310546875
    9. '

' → logprob: -16.31268310546875
    10. '    ' → logprob: -16.43768310546875

Token 253: ']
' (ID: 1592)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6632763147354126
    2. ']' → logprob: -1.1632763147354126
    3. ']:
' → logprob: -1.9132763147354126
    4. '):' → logprob: -4.538276195526123
    5. '):
' → logprob: -4.913276195526123
    6. '           ' → logprob: -5.788276195526123
    7. ' ]' → logprob: -6.663276195526123
    8. ']:
' → logprob: -7.163276195526123
    9. '       ' → logprob: -7.413276195526123
    10. ')' → logprob: -7.913276195526123

Token 254: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4659517705440521
    2. '           ' → logprob: -1.7159518003463745
    3. '   ' → logprob: -2.590951681137085
    4. ' for' → logprob: -3.090951681137085
    5. ' ' → logprob: -3.590951681137085
    6. ',' → logprob: -3.965951681137085
    7. '    ' → logprob: -4.840951919555664
    8. '<|end|>' → logprob: -5.590951919555664
    9. '        ' → logprob: -5.715951919555664
    10. ':' → logprob: -6.715951919555664

Token 255: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4676983058452606
    2. 'for' → logprob: -1.217698335647583
    3. '           ' → logprob: -2.842698335647583
    4. '       ' → logprob: -3.967698335647583
    5. '   ' → logprob: -7.967698097229004
    6. ' ' → logprob: -10.717698097229004
    7. '
' → logprob: -11.467698097229004
    8. '     ' → logprob: -11.467698097229004
    9. '```' → logprob: -11.467698097229004
    10. '         ' → logprob: -11.592698097229004

Token 256: ' which' (ID: 1118)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6824748516082764
    2. ' for' → logprob: -0.8074748516082764
    3. '           ' → logprob: -3.0574748516082764
    4. '       ' → logprob: -6.6824750900268555
    5. '   ' → logprob: -8.182475090026855
    6. 'def' → logprob: -9.932475090026855
    7. ' ' → logprob: -11.307475090026855
    8. '
' → logprob: -11.682475090026855
    9. 'self' → logprob: -12.057475090026855
    10. '         ' → logprob: -12.182475090026855

Token 257: ' have' (ID: 679)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.784783661365509
    2. '           ' → logprob: -2.2847836017608643
    3. 'for' → logprob: -2.2847836017608643
    4. ' in' → logprob: -2.4097836017608643
    5. ' def' → logprob: -2.6597836017608643
    6. ' p' → logprob: -3.4097836017608643
    7. ' are' → logprob: -3.6597836017608643
    8. 'are' → logprob: -4.034783840179443
    9. ' can' → logprob: -4.284783840179443
    10. '       ' → logprob: -4.284783840179443

Token 258: ' the' (ID: 290)
  Prédit: 'VAT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'VAT' → logprob: -1.3782999515533447
    2. 'self' → logprob: -1.5032999515533447
    3. 'total' → logprob: -2.2532999515533447
    4. ' self' → logprob: -2.6282999515533447
    5. ' a' → logprob: -2.8782999515533447
    6. ' total' → logprob: -3.0032999515533447
    7. ' VAT' → logprob: -3.2532999515533447
    8. 'a' → logprob: -3.5032999515533447
    9. 'valid' → logprob: -3.6282999515533447
    10. ' after' → logprob: -3.7532999515533447

Token 259: ' after' (ID: 1934)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5122932195663452
    2. ' total' → logprob: -2.5122933387756348
    3. 'correct' → logprob: -2.7622933387756348
    4. 'old' → logprob: -2.8872933387756348
    5. 'same' → logprob: -3.1372933387756348
    6. ' correct' → logprob: -3.3872933387756348
    7. 'self' → logprob: -3.8872933387756348
    8. 'p' → logprob: -4.137293338775635
    9. 'def' → logprob: -4.262293338775635
    10. ' p' → logprob: -4.387293338775635

Token 260: '_tax' (ID: 61146)
  Prédit: '_tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tax' → logprob: -0.0010156603530049324
    2. '_' → logprob: -7.126015663146973
    3. '_price' → logprob: -9.126015663146973
    4. '_total' → logprob: -10.501015663146973
    5. 'tax' → logprob: -11.376015663146973
    6. '_token' → logprob: -11.501015663146973
    7. '_t' → logprob: -12.126015663146973
    8. ' _' → logprob: -12.251015663146973
    9. '           ' → logprob: -12.251015663146973
    10. '       ' → logprob: -12.376015663146973

Token 261: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.1491634845733643
    2. ' total' → logprob: -1.6491634845733643
    3. '(self' → logprob: -1.8991634845733643
    4. ' price' → logprob: -3.1491634845733643
    5. 'self' → logprob: -3.3991634845733643
    6. ' prices' → logprob: -3.5241634845733643
    7. ' self' → logprob: -3.6491634845733643
    8. 'price' → logprob: -3.6491634845733643
    9. ' amounts' → logprob: -3.7741634845733643
    10. ' totals' → logprob: -3.7741634845733643

Token 262: ' at' (ID: 540)
  Prédit: ' equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' equal' → logprob: -0.5150954127311707
    2. ' divisible' → logprob: -2.1400954723358154
    3. 'equal' → logprob: -3.1400954723358154
    4. ' that' → logprob: -3.2650954723358154
    5. ' consistent' → logprob: -3.2650954723358154
    6. ' exactly' → logprob: -3.3900954723358154
    7. ' ==' → logprob: -3.5150954723358154
    8. ' as' → logprob: -4.015095233917236
    9. ' matching' → logprob: -4.140095233917236
    10. '==' → logprob: -4.890095233917236

Token 263: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.6053566932678223
    2. ' old' → logprob: -0.8553566932678223
    3. ' self' → logprob: -4.980356693267822
    4. ' least' → logprob: -4.980356693267822
    5. 'self' → logprob: -5.355356693267822
    6. 'least' → logprob: -5.605356693267822
    7. ' ' → logprob: -6.230356693267822
    8. 'rate' → logprob: -6.730356693267822
    9. ' rate' → logprob: -6.855356693267822
    10. ' the' → logprob: -7.355356693267822

Token 264: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.01335444487631321
    2. '_price' → logprob: -5.013354301452637
    3. 'rate' → logprob: -6.013354301452637
    4. 'self' → logprob: -6.888354301452637
    5. '_total' → logprob: -6.888354301452637
    6. ' rate' → logprob: -7.513354301452637
    7. '   ' → logprob: -7.763354301452637
    8. '       ' → logprob: -8.138354301452637
    9. '           ' → logprob: -8.388354301452637
    10. 'total' → logprob: -8.638354301452637

Token 265: ' equal' (ID: 12629)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3260953426361084
    2. ' for' → logprob: -1.8260953426361084
    3. '       ' → logprob: -2.4510953426361084
    4. ',' → logprob: -4.7010955810546875
    5. ' ' → logprob: -5.5760955810546875
    6. '        
' → logprob: -5.8260955810546875
    7. '   ' → logprob: -6.0760955810546875
    8. 'for' → logprob: -6.2010955810546875
    9. '
' → logprob: -6.4510955810546875
    10. ':' → logprob: -6.9510955810546875

Token 266: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.28588491678237915
    2. 'to' → logprob: -1.4108848571777344
    3. 'self' → logprob: -5.910884857177734
    4. '           ' → logprob: -6.410884857177734
    5. ' self' → logprob: -8.660884857177734
    6. '       ' → logprob: -9.660884857177734
    7. '   ' → logprob: -9.910884857177734
    8. '=' → logprob: -10.285884857177734
    9. '_to' → logprob: -11.535884857177734
    10. ',' → logprob: -12.160884857177734

Token 267: ' old' (ID: 2890)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.799880862236023
    2. 'old' → logprob: -0.924880862236023
    3. ' old' → logprob: -2.2998809814453125
    4. ' self' → logprob: -2.9248809814453125
    5. '   ' → logprob: -10.424880981445312
    6. ' ' → logprob: -11.049880981445312
    7. ' the' → logprob: -11.299880981445312
    8. '           ' → logprob: -11.424880981445312
    9. 'the' → logprob: -11.674880981445312
    10. '	old' → logprob: -11.924880981445312

Token 268: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.003868831554427743
    2. '_rate' → logprob: -6.00386905670166
    3. '_' → logprob: -6.75386905670166
    4. 'total' → logprob: -9.62886905670166
    5. '_price' → logprob: -9.75386905670166
    6. ' _' → logprob: -10.50386905670166
    7. '   ' → logprob: -10.62886905670166
    8. '       ' → logprob: -12.00386905670166
    9. '_tax' → logprob: -12.12886905670166
    10. '_t' → logprob: -12.25386905670166

Token 269: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021451245993375778
    2. '
' → logprob: -4.396451473236084
    3. ' for' → logprob: -5.021451473236084
    4. '       ' → logprob: -6.896451473236084
    5. 'for' → logprob: -7.521451473236084
    6. ',' → logprob: -7.646451473236084
    7. '            
' → logprob: -9.896450996398926
    8. '        
' → logprob: -10.021450996398926
    9. '   ' → logprob: -10.146450996398926
    10. '<|end|>' → logprob: -10.521450996398926

Token 270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19817548990249634
    2. '       ' → logprob: -1.8231754302978516
    3. '   ' → logprob: -4.948175430297852
    4. ',' → logprob: -6.323175430297852
    5. '
' → logprob: -6.448175430297852
    6. '    
' → logprob: -6.448175430297852
    7. ' for' → logprob: -6.573175430297852
    8. '        
' → logprob: -6.823175430297852
    9. '<|end|>' → logprob: -6.823175430297852
    10. '            
' → logprob: -7.698175430297852

Token 271: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4609357416629791
    2. ' for' → logprob: -1.7109357118606567
    3. 'for' (adapté à ' for') → logprob: -1.7109357118606567
    4. '       ' → logprob: -4.960935592651367
    5. '   ' → logprob: -7.210935592651367
    6. 'def' → logprob: -9.460935592651367
    7. 'self' → logprob: -11.210935592651367
    8. '         ' → logprob: -11.210935592651367
    9. '          ' → logprob: -11.585935592651367
    10. '
' → logprob: -11.585935592651367

Token 272: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.048687856644392014
    2. 'p' → logprob: -3.0486879348754883
    3. ' price' → logprob: -9.548687934875488
    4. 'price' → logprob: -11.173687934875488
    5. ' i' → logprob: -12.548687934875488
    6. '   ' → logprob: -12.798687934875488
    7. '	p' → logprob: -13.298687934875488
    8. ' ' → logprob: -13.298687934875488
    9. '           ' → logprob: -14.173687934875488
    10. 'i' → logprob: -14.236187934875488

Token 273: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011010414455085993
    2. 'in' → logprob: -7.126101016998291
    3. ' ' → logprob: -8.62610149383545
    4. '1' → logprob: -9.25110149383545
    5. '  ' → logprob: -12.12610149383545
    6. '_' → logprob: -12.75110149383545
    7. ' i' → logprob: -13.25110149383545
    8. '   ' → logprob: -13.25110149383545
    9. ',' → logprob: -13.50110149383545
    10. 'p' → logprob: -13.62610149383545

Token 274: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003610401414334774
    2. 'in' → logprob: -5.628610610961914
    3. ' ' → logprob: -12.378610610961914
    4. 'n' → logprob: -13.378610610961914
    5. 'range' → logprob: -14.003610610961914
    6. '  ' → logprob: -14.503610610961914
    7. ',' → logprob: -14.878610610961914
    8. ' i' → logprob: -15.128610610961914
    9. '   ' → logprob: -15.253610610961914
    10. 'int' → logprob: -15.253610610961914

Token 275: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.693158745765686
    2. 'range' → logprob: -0.693158745765686
    3. '1' → logprob: -11.693159103393555
    4. '   ' → logprob: -12.818159103393555
    5. '(range' → logprob: -15.068159103393555
    6. '	range' → logprob: -15.568159103393555
    7. ' ' → logprob: -16.318159103393555
    8. '    ' → logprob: -18.443159103393555
    9. '  ' → logprob: -19.068159103393555
    10. '       ' → logprob: -19.193159103393555

Token 276: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1994775377388578e-05
    2. '1' → logprob: -11.375012397766113
    3. '(
' → logprob: -15.125012397766113
    4. ' (' → logprob: -16.250011444091797
    5. '           ' → logprob: -16.500011444091797
    6. '   ' → logprob: -16.625011444091797
    7. ',' → logprob: -17.625011444091797
    8. '(self' → logprob: -19.750011444091797
    9. '[' → logprob: -19.875011444091797
    10. ' ' → logprob: -20.000011444091797

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013083349040243775
    2. ' ' → logprob: -9.000130653381348
    3. '   ' → logprob: -12.375130653381348
    4. 'self' → logprob: -13.500130653381348
    5. '           ' → logprob: -13.875130653381348
    6. '
' → logprob: -15.250130653381348
    7. '       ' → logprob: -15.625130653381348
    8. ',' → logprob: -16.187631607055664
    9. '(' → logprob: -16.312631607055664
    10. '

' → logprob: -17.250131607055664

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.273621405242011e-05
    2. ' ,' → logprob: -10.375032424926758
    3. ',
' → logprob: -14.500032424926758
    4. ',self' → logprob: -14.750032424926758
    5. ',

' → logprob: -16.000032424926758
    6. '   ' → logprob: -16.250032424926758
    7. 'self' → logprob: -16.375032424926758
    8. '‌,' → logprob: -16.500032424926758
    9. ',p' → logprob: -16.750032424926758
    10. '           ' → logprob: -17.375032424926758

Token 279: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02414749562740326
    2. ' self' → logprob: -3.7741475105285645
    3. '           ' → logprob: -7.1491475105285645
    4. '   ' → logprob: -9.899147033691406
    5. '               ' → logprob: -10.024147033691406
    6. '       ' → logprob: -11.274147033691406
    7. '                   ' → logprob: -13.274147033691406
    8. '            ' → logprob: -13.649147033691406
    9. ' ' → logprob: -13.774147033691406
    10. '(self' → logprob: -14.149147033691406

Token 280: '.old' (ID: 81843)
  Prédit: '.old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.old' → logprob: -2.5941604690160602e-05
    2. 'old' → logprob: -11.125025749206543
    3. '.' → logprob: -12.250025749206543
    4. ' .' → logprob: -12.375025749206543
    5. '_old' → logprob: -13.625025749206543
    6. '._' → logprob: -14.875025749206543
    7. '	old' → logprob: -15.375025749206543
    8. '   ' → logprob: -15.875025749206543
    9. '_.' → logprob: -17.00002670288086
    10. ' old' → logprob: -17.12502670288086

Token 281: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -6.2729995988775045e-06
    2. 'total' → logprob: -12.375006675720215
    3. '_rate' → logprob: -13.875006675720215
    4. '_' → logprob: -14.375006675720215
    5. '_price' → logprob: -15.250006675720215
    6. '_tot' → logprob: -16.2500057220459
    7. ' _' → logprob: -16.6250057220459
    8. '   ' → logprob: -16.8750057220459
    9. '_t' → logprob: -17.1250057220459
    10. '_old' → logprob: -18.3750057220459

Token 282: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11782138049602509
    2. '):
' → logprob: -2.242821455001831
    3. ' ):' → logprob: -5.492821216583252
    4. ' ):
' → logprob: -8.11782169342041
    5. '-' → logprob: -8.36782169342041
    6. ' -' → logprob: -8.74282169342041
    7. '   ' → logprob: -9.49282169342041
    8. ')' → logprob: -9.74282169342041
    9. '):

' → logprob: -10.86782169342041
    10. ' ' → logprob: -11.99282169342041

Token 283: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08783341199159622
    2. '               ' → logprob: -2.5878334045410156
    3. ':' → logprob: -4.962833404541016
    4. ':
' → logprob: -8.087833404541016
    5. '       ' → logprob: -8.212833404541016
    6. ',' → logprob: -8.212833404541016
    7. '):' → logprob: -8.462833404541016
    8. '   ' → logprob: -8.712833404541016
    9. '            
' → logprob: -8.712833404541016
    10. '):
' → logprob: -8.962833404541016

Token 284: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.41478630900382996
    2. ' p' → logprob: -1.2897863388061523
    3. '           ' → logprob: -2.9147863388061523
    4. '               ' → logprob: -4.664786338806152
    5. '   ' → logprob: -8.414786338806152
    6. 'total' → logprob: -9.789786338806152
    7. '       ' → logprob: -9.914786338806152
    8. '                   ' → logprob: -10.164786338806152
    9. ' for' → logprob: -10.164786338806152
    10. ' ' → logprob: -10.414786338806152

Token 285: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04986031353473663
    2. '2' → logprob: -3.2998602390289307
    3. ' =' → logprob: -5.17486047744751
    4. '_' → logprob: -6.04986047744751
    5. '_price' → logprob: -6.54986047744751
    6. '_total' → logprob: -6.67486047744751
    7. '   ' → logprob: -8.799860000610352
    8. '=' → logprob: -9.424860000610352
    9. '_pair' → logprob: -9.549860000610352
    10. ' ' → logprob: -9.924860000610352

Token 286: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029932953417301178
    2. '=' → logprob: -3.529932975769043
    3. ' in' → logprob: -9.654932975769043
    4. ')' → logprob: -9.779932975769043
    5. ' ' → logprob: -9.904932975769043
    6. '            ' → logprob: -12.529932975769043
    7. ',' → logprob: -13.279932975769043
    8. '        ' → logprob: -13.529932975769043
    9. ' =
' → logprob: -14.029932975769043
    10. '=self' → logprob: -14.404932975769043

Token 287: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2519378066062927
    2. 'self' → logprob: -1.5019378662109375
    3. '               ' → logprob: -12.251937866210938
    4. '(self' → logprob: -13.751937866210938
    5. '[self' → logprob: -14.126937866210938
    6. '	self' → logprob: -14.751937866210938
    7. '                   ' → logprob: -14.876937866210938
    8. ' ' → logprob: -14.876937866210938
    9. '                ' → logprob: -15.876937866210938
    10. '=self' → logprob: -16.126937866210938

Token 288: '.old' (ID: 81843)
  Prédit: '.old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.old' → logprob: -0.0007130279554985464
    2. 'old' → logprob: -7.250712871551514
    3. '.' → logprob: -13.500713348388672
    4. ' .' → logprob: -14.500713348388672
    5. '	old' → logprob: -14.625713348388672
    6. ' old' → logprob: -14.750713348388672
    7. '_old' → logprob: -15.250713348388672
    8. '.user' → logprob: -18.125713348388672
    9. '   ' → logprob: -18.125713348388672
    10. '-old' → logprob: -19.125713348388672

Token 289: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.00013417120499070734
    2. 'total' → logprob: -9.000134468078613
    3. 'Total' → logprob: -11.625134468078613
    4. '_tot' → logprob: -14.375134468078613
    5. '_' → logprob: -14.625134468078613
    6. '_price' → logprob: -15.125134468078613
    7. '_t' → logprob: -15.875134468078613
    8. ' total' → logprob: -16.500133514404297
    9. '_user' → logprob: -17.250133514404297
    10. ' _' → logprob: -17.250133514404297

Token 290: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0487382709980011
    2. '-' → logprob: -3.0487382411956787
    3. ' ' → logprob: -9.423738479614258
    4. '-p' → logprob: -9.673738479614258
    5. '   ' → logprob: -12.798738479614258
    6. '  ' → logprob: -14.548738479614258
    7. '1' → logprob: -14.673738479614258
    8. '    ' → logprob: -14.798738479614258
    9. ')' → logprob: -14.923738479614258
    10. ' p' → logprob: -15.048738479614258

Token 291: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005530327325686812
    2. ' p' → logprob: -7.500553131103516
    3. '1' → logprob: -18.125553131103516
    4. '   ' → logprob: -18.875553131103516
    5. '<p' → logprob: -19.625553131103516
    6. '           ' → logprob: -19.750553131103516
    7. ' ' → logprob: -19.750553131103516
    8. '               ' → logprob: -20.625553131103516
    9. '	p' → logprob: -20.625553131103516
    10. '                   ' → logprob: -21.125553131103516

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.868328920158092e-05
    2. '               ' → logprob: -11.750028610229492
    3. '_total' → logprob: -11.875028610229492
    4. 'total' → logprob: -12.625028610229492
    5. '```' → logprob: -13.125028610229492
    6. ' ' → logprob: -13.625028610229492
    7. '   ' → logprob: -13.625028610229492
    8. '           ' → logprob: -13.750028610229492
    9. '2' → logprob: -13.875028610229492
    10. ')' → logprob: -14.125028610229492

Token 293: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15936395525932312
    2. '
' → logprob: -2.4093639850616455
    3. '<|end|>' → logprob: -3.5343639850616455
    4. '                
' → logprob: -4.159363746643066
    5. '  
' → logprob: -5.409363746643066
    6. '            
' → logprob: -6.284363746643066
    7. '<|end|>' → logprob: -6.409363746643066
    8. '           ' → logprob: -6.659363746643066
    9. ' 
' → logprob: -6.909363746643066
    10. ' ' → logprob: -7.909363746643066

Token 294: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002924468135461211
    2. '                
' → logprob: -6.00292444229126
    3. '
' → logprob: -8.502924919128418
    4. '           ' → logprob: -9.627924919128418
    5. '            
' → logprob: -9.752924919128418
    6. '<|end|>' → logprob: -10.002924919128418
    7. ',' → logprob: -11.627924919128418
    8. '                ' → logprob: -11.752924919128418
    9. '  
' → logprob: -11.877924919128418
    10. '               
' → logprob: -12.252924919128418

Token 295: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' (adapté à ' pair') → logprob: -0.9116609692573547
    2. ' pair' → logprob: -1.91166090965271
    3. '               ' → logprob: -2.03666090965271
    4. 'pp' → logprob: -2.16166090965271
    5. ' if' → logprob: -2.78666090965271
    6. 'if' → logprob: -2.78666090965271
    7. 'price' → logprob: -3.66166090965271
    8. '           ' → logprob: -3.66166090965271
    9. 'total' → logprob: -4.911661148071289
    10. ' price' → logprob: -5.036661148071289

Token 296: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026302620768547058
    2. '=' → logprob: -3.6513025760650635
    3. ' ' → logprob: -13.651302337646484
    4. '_' → logprob: -14.651302337646484
    5. '_price' → logprob: -15.776302337646484
    6. '   ' → logprob: -16.026302337646484
    7. ' =
' → logprob: -16.026302337646484
    8. ')' → logprob: -16.526302337646484
    9. '_pair' → logprob: -16.776302337646484
    10. '  ' → logprob: -17.151302337646484

Token 297: ' VAT' (ID: 56356)
  Prédit: 'VAT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VAT' → logprob: -0.2071540802717209
    2. ' VAT' → logprob: -1.8321540355682373
    3. 'self' → logprob: -3.8321540355682373
    4. ' self' → logprob: -5.332154273986816
    5. 'Vat' → logprob: -8.082154273986816
    6. 'Price' → logprob: -9.082154273986816
    7. ' Vat' → logprob: -10.457154273986816
    8. 'vat' → logprob: -10.832154273986816
    9. '   ' → logprob: -10.957154273986816
    10. ' Price' → logprob: -11.207154273986816

Token 298: 'Price' (ID: 7417)
  Prédit: 'Price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Price' → logprob: -1.1398757123970427e-05
    2. 'Pric' → logprob: -12.500011444091797
    3. ' Price' → logprob: -12.875011444091797
    4. '.Price' → logprob: -13.375011444091797
    5. 'Pricing' → logprob: -13.875011444091797
    6. 'Calculator' → logprob: -14.000011444091797
    7. 'price' → logprob: -15.000011444091797
    8. 'Prices' → logprob: -15.125011444091797
    9. '   ' → logprob: -15.500011444091797
    10. '_price' → logprob: -15.750011444091797

Token 299: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -6.885492621222511e-05
    2. 'Price' → logprob: -10.250068664550781
    3. 'calculator' → logprob: -10.875068664550781
    4. 'Pair' → logprob: -11.875068664550781
    5. 'Calcul' → logprob: -12.625068664550781
    6. ' Calculator' → logprob: -13.250068664550781
    7. 'Pric' → logprob: -14.250068664550781
    8. 'Calc' → logprob: -14.500068664550781
    9. 'Cal' → logprob: -15.000068664550781
    10. 'Calculate' → logprob: -15.125068664550781

Token 300: '.Price' (ID: 103245)
  Prédit: '.Price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Price' → logprob: -0.0032593535725027323
    2. '.' → logprob: -5.753259181976318
    3. ' .' → logprob: -9.503259658813477
    4. '   ' → logprob: -12.628259658813477
    5. '.V' → logprob: -14.003259658813477
    6. '.P' → logprob: -14.253259658813477
    7. 'Price' → logprob: -14.753259658813477
    8. '.Point' → logprob: -15.378259658813477
    9. '.Pr' → logprob: -15.628259658813477
    10. '.Pair' → logprob: -15.628259658813477

Token 301: 'Pair' (ID: 15573)
  Prédit: 'Pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pair' → logprob: -1.0280383548888494e-06
    2. 'pair' → logprob: -14.500000953674316
    3. 'Pa' → logprob: -15.750000953674316
    4. ' Pair' → logprob: -16.125001907348633
    5. 'Pairs' → logprob: -16.375001907348633
    6. 'Pai' → logprob: -16.750001907348633
    7. ' pair' → logprob: -17.625001907348633
    8. '_pair' → logprob: -17.875001907348633
    9. 'PAIR' → logprob: -17.875001907348633
    10. 'P' → logprob: -18.250001907348633

Token 302: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00018280261429026723
    2. '(' → logprob: -8.62518310546875
    3. '(
' → logprob: -13.37518310546875
    4. '               ' → logprob: -14.00018310546875
    5. ' (' → logprob: -15.37518310546875
    6. '(pair' → logprob: -15.37518310546875
    7. '   ' → logprob: -15.62518310546875
    8. '           ' → logprob: -16.12518310546875
    9. ')' → logprob: -17.00018310546875
    10. '(self' → logprob: -17.75018310546875

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. '2' → logprob: -12.625007629394531
    3. ')' → logprob: -13.125007629394531
    4. ',' → logprob: -14.000007629394531
    5. ' ' → logprob: -15.562507629394531
    6. '```' → logprob: -16.00000762939453
    7. '۱' → logprob: -16.18750762939453
    8. 'p' → logprob: -16.37500762939453
    9. '<|end|>' → logprob: -16.68750762939453
    10. '   ' → logprob: -16.81250762939453

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009238460334017873
    2. ',p' → logprob: -7.0009236335754395
    3. ' ,' → logprob: -12.000924110412598
    4. ',
' → logprob: -12.750924110412598
    5. ')' → logprob: -14.000924110412598
    6. 'p' → logprob: -14.125924110412598
    7. '               ' → logprob: -14.250924110412598
    8. '‌,' → logprob: -15.250924110412598
    9. ',

' → logprob: -16.62592315673828
    10. ',
' → logprob: -16.62592315673828

Token 305: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16022585332393646
    2. ' p' → logprob: -1.9102258682250977
    3. ' ' → logprob: -14.660225868225098
    4. ')' → logprob: -15.285225868225098
    5. ')p' → logprob: -15.285225868225098
    6. '	p' → logprob: -15.785225868225098
    7. '(p' → logprob: -15.910225868225098
    8. '   ' → logprob: -16.16022491455078
    9. '    ' → logprob: -16.66022491455078
    10. '<p' → logprob: -17.28522491455078

Token 306: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.13388703338569e-06
    2. ')' → logprob: -12.000009536743164
    3. 'p' → logprob: -13.750009536743164
    4. ' ' → logprob: -15.000009536743164
    5. '₂' → logprob: -15.125009536743164
    6. '۲' → logprob: -15.312509536743164
    7. ' p' → logprob: -15.875009536743164
    8. '_' → logprob: -15.875009536743164
    9. '   ' → logprob: -16.187509536743164
    10. '```' → logprob: -16.500009536743164

Token 307: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13965155184268951
    2. ')
' → logprob: -2.1396515369415283
    3. '               ' → logprob: -4.389651775360107
    4. ')
' → logprob: -8.63965129852295
    5. '           ' → logprob: -9.88965129852295
    6. ')

' → logprob: -11.88965129852295
    7. ' )' → logprob: -14.76465129852295
    8. '       ' → logprob: -14.88965129852295
    9. '              ' → logprob: -14.88965129852295
    10. ' )
' → logprob: -15.13965129852295

Token 308: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004640049301087856
    2. '           ' → logprob: -5.629640102386475
    3. ' if' → logprob: -7.254640102386475
    4. 'if' → logprob: -8.254639625549316
    5. '                
' → logprob: -10.379639625549316
    6. '       ' → logprob: -11.754639625549316
    7. '            
' → logprob: -12.004639625549316
    8. '<|end|>' → logprob: -12.129639625549316
    9. '              ' → logprob: -12.629639625549316
    10. ')' → logprob: -12.879639625549316

Token 309: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5214400887489319
    2. '           ' → logprob: -1.521440029144287
    3. 'if' (adapté à ' if') → logprob: -2.021440029144287
    4. ' if' → logprob: -2.896440029144287
    5. '       ' → logprob: -9.521440505981445
    6. 'total' → logprob: -9.646440505981445
    7. '          ' → logprob: -10.646440505981445
    8. '              ' → logprob: -10.896440505981445
    9. '   ' → logprob: -11.146440505981445
    10. '            
' → logprob: -11.646440505981445

Token 310: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.28121307492256165
    2. 'pair' → logprob: -1.4062130451202393
    3. '               ' → logprob: -10.53121280670166
    4. '(pair' → logprob: -10.65621280670166
    5. '                   ' → logprob: -12.03121280670166
    6. '   ' → logprob: -13.53121280670166
    7. ' ' → logprob: -13.65621280670166
    8. '_pair' → logprob: -14.03121280670166
    9. '           ' → logprob: -14.40621280670166
    10. '                ' → logprob: -14.53121280670166

Token 311: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.01124764047563076
    2. '.' → logprob: -4.511247634887695
    3. ' .' → logprob: -8.761247634887695
    4. 'total' → logprob: -10.511247634887695
    5. '       ' → logprob: -12.011247634887695
    6. '   ' → logprob: -12.136247634887695
    7. ').' → logprob: -13.261247634887695
    8. ' total' → logprob: -13.636247634887695
    9. '           ' → logprob: -14.511247634887695
    10. ' ' → logprob: -15.511247634887695

Token 312: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -2.339278580620885e-06
    2. '_before' → logprob: -13.000001907348633
    3. '_' → logprob: -17.125001907348633
    4. 'after' → logprob: -18.000001907348633
    5. '_a' → logprob: -18.250001907348633
    6. ' after' → logprob: -18.375001907348633
    7. '_AFTER' → logprob: -18.375001907348633
    8. '_at' → logprob: -19.750001907348633
    9. '_af' → logprob: -19.750001907348633
    10. ' _' → logprob: -20.625001907348633

Token 313: '_tax' (ID: 61146)
  Prédit: '_tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tax' → logprob: -3.249780638725497e-05
    2. 'tax' → logprob: -10.375032424926758
    3. '_' → logprob: -14.000032424926758
    4. ' tax' → logprob: -15.500032424926758
    5. ' _' → logprob: -16.875032424926758
    6. '
' → logprob: -17.750032424926758
    7. '_t' → logprob: -18.125032424926758
    8. ' ' → logprob: -18.250032424926758
    9. '_tar' → logprob: -18.250032424926758
    10. '_price' → logprob: -19.375032424926758

Token 314: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00027182576013728976
    2. '(' → logprob: -8.250271797180176
    3. ' (' → logprob: -12.000271797180176
    4. '(V' → logprob: -13.250271797180176
    5. 'self' → logprob: -14.125271797180176
    6. '(
' → logprob: -14.125271797180176
    7. '(this' → logprob: -14.625271797180176
    8. '(v' → logprob: -15.625271797180176
    9. '(s' → logprob: -15.875271797180176
    10. '[self' → logprob: -16.750272750854492

Token 315: '.old' (ID: 81843)
  Prédit: '.old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.old' → logprob: -0.0015214069280773401
    2. 'old' → logprob: -6.501521587371826
    3. ' .' → logprob: -11.251521110534668
    4. '.' → logprob: -12.751521110534668
    5. ' old' → logprob: -13.001521110534668
    6. '	old' → logprob: -14.626521110534668
    7. '_old' → logprob: -15.376521110534668
    8. ').' → logprob: -17.001522064208984
    9. '.
' → logprob: -17.126522064208984
    10. ' ' → logprob: -17.626522064208984

Token 316: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -7.896309739408025e-07
    2. 'rate' → logprob: -14.250000953674316
    3. 'Rate' → logprob: -17.75
    4. ' _' → logprob: -17.875
    5. '_rating' → logprob: -17.875
    6. '   ' → logprob: -18.0
    7. ')' → logprob: -18.0
    8. ')_' → logprob: -18.625
    9. '_RATE' → logprob: -19.125
    10. '_' → logprob: -19.125

Token 317: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007270866190083325
    2. ' )' → logprob: -7.25072717666626
    3. ')==' → logprob: -11.125726699829102
    4. '()' → logprob: -13.750726699829102
    5. ' ==' → logprob: -14.750726699829102
    6. '())' → logprob: -15.250726699829102
    7. '==' → logprob: -15.500726699829102
    8. ')
' → logprob: -16.2507266998291
    9. '   ' → logprob: -16.3757266998291
    10. '=' → logprob: -17.2507266998291

Token 318: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0086322957649827
    2. '==' → logprob: -4.758632183074951
    3. ')' → logprob: -11.75863265991211
    4. '=' → logprob: -12.50863265991211
    5. ' ' → logprob: -13.00863265991211
    6. ')==' → logprob: -13.25863265991211
    7. '()' → logprob: -14.00863265991211
    8. ' =' → logprob: -14.63363265991211
    9. '()==' → logprob: -14.63363265991211
    10. ' <=' → logprob: -16.25863265991211

Token 319: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804768621921539
    2. ' self' → logprob: -3.2880477905273438
    3. '               ' → logprob: -13.038047790527344
    4. '           ' → logprob: -13.663047790527344
    5. '	self' → logprob: -14.038047790527344
    6. '   ' → logprob: -14.288047790527344
    7. '[self' → logprob: -14.788047790527344
    8. '(self' → logprob: -15.288047790527344
    9. '                   ' → logprob: -15.413047790527344
    10. ' ' → logprob: -15.913047790527344

Token 320: '.old' (ID: 81843)
  Prédit: '.old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.old' → logprob: -5.080963092041202e-06
    2. 'old' → logprob: -12.375004768371582
    3. ' .' → logprob: -14.875004768371582
    4. '.' → logprob: -14.875004768371582
    5. '	old' → logprob: -17.0000057220459
    6. '_old' → logprob: -17.3750057220459
    7. '.user' → logprob: -19.2500057220459
    8. ' old' → logprob: -19.5000057220459
    9. 'Old' → logprob: -20.2500057220459
    10. '.prev' → logprob: -20.3750057220459

Token 321: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.00015800826076883823
    2. '_rate' → logprob: -9.250158309936523
    3. 'total' → logprob: -9.750158309936523
    4. '_price' → logprob: -12.875158309936523
    5. 'Total' → logprob: -14.500158309936523
    6. '_' → logprob: -15.500158309936523
    7. '_tax' → logprob: -16.625158309936523
    8. '_t' → logprob: -17.500158309936523
    9. 'otal' → logprob: -17.625158309936523
    10. '_tot' → logprob: -17.875158309936523

Token 322: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055434953421354294
    2. ':
' → logprob: -2.9304349422454834
    3. '           ' → logprob: -8.680435180664062
    4. '):' → logprob: -8.805435180664062
    5. '):
' → logprob: -8.930435180664062
    6. '               ' → logprob: -9.430435180664062
    7. ' and' → logprob: -12.555435180664062
    8. ' :' → logprob: -12.555435180664062
    9. ':

' → logprob: -13.180435180664062
    10. ')' → logprob: -13.180435180664062

Token 323: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013662001118063927
    2. '               ' → logprob: -5.013661861419678
    3. ':' → logprob: -5.388661861419678
    4. ':
' → logprob: -6.263661861419678
    5. '           ' → logprob: -9.013662338256836
    6. '):
' → logprob: -9.013662338256836
    7. '                       ' → logprob: -9.138662338256836
    8. '):' → logprob: -11.013662338256836
    9. ' :' → logprob: -11.138662338256836
    10. ',' → logprob: -11.263662338256836

Token 324: ' self' (ID: 1051)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.022911038249731064
    2. ' self' → logprob: -4.397911071777344
    3. 'self' (adapté à ' self') → logprob: -4.647911071777344
    4. '               ' → logprob: -7.522911071777344
    5. '           ' → logprob: -9.147911071777344
    6. '                       ' → logprob: -9.772911071777344
    7. '   ' → logprob: -10.022911071777344
    8. '       ' → logprob: -11.647911071777344
    9. '                  ' → logprob: -13.147911071777344
    10. '                ' → logprob: -13.272911071777344

Token 325: '.valid' (ID: 41805)
  Prédit: '.valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.valid' → logprob: -0.0010466240346431732
    2. '.' → logprob: -6.876046657562256
    3. ' .' → logprob: -11.751046180725098
    4. 'valid' → logprob: -13.501046180725098
    5. '.invalid' → logprob: -13.876046180725098
    6. '           ' → logprob: -14.001046180725098
    7. '	valid' → logprob: -14.251046180725098
    8. '.validation' → logprob: -15.251046180725098
    9. '       ' → logprob: -15.376046180725098
    10. '.validate' → logprob: -15.376046180725098

Token 326: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -1.9361264946837764e-07
    2. 'pairs' → logprob: -16.125
    3. '_' → logprob: -16.875
    4. 'Pairs' → logprob: -18.375
    5. '_pair' → logprob: -19.375
    6. '_prices' → logprob: -20.125
    7. '_valid' → logprob: -20.25
    8. '```' → logprob: -20.5
    9. ' _' → logprob: -20.625
    10. '_parts' → logprob: -20.625

Token 327: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07891292124986649
    2. '.' → logprob: -2.5789129734039307
    3. ' .' → logprob: -11.453912734985352
    4. '.add' → logprob: -12.578912734985352
    5. '.ap' → logprob: -12.703912734985352
    6. '.app' → logprob: -13.078912734985352
    7. '           ' → logprob: -13.453912734985352
    8. '.Append' → logprob: -13.828912734985352
    9. '               ' → logprob: -15.078912734985352
    10. ').' → logprob: -15.453912734985352

Token 328: '(pair' (ID: 84884)
  Prédit: '(pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pair' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. 'pair' → logprob: -17.250001907348633
    4. '(
' → logprob: -18.375001907348633
    5. '(part' → logprob: -20.500001907348633
    6. ' (' → logprob: -20.500001907348633
    7. '(piece' → logprob: -20.500001907348633
    8. '(paren' → logprob: -20.750001907348633
    9. '(pa' → logprob: -20.750001907348633
    10. '(p' → logprob: -21.000001907348633

Token 329: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.717296517104842e-05
    2. ')
' → logprob: -9.875057220458984
    3. '           ' → logprob: -13.500057220458984
    4. ' )' → logprob: -13.750057220458984
    5. '       ' → logprob: -14.125057220458984
    6. '<|end|>' → logprob: -14.250057220458984
    7. '               ' → logprob: -14.375057220458984
    8. '())' → logprob: -15.125057220458984
    9. ')

' → logprob: -15.750057220458984
    10. ')return' → logprob: -16.125057220458984

Token 330: '        
' (ID: 3564)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.583859384059906
    2. '
' → logprob: -0.958859384059906
    3. '        
' → logprob: -2.958859443664551
    4. 'def' → logprob: -5.833859443664551
    5. '   ' → logprob: -6.083859443664551
    6. '    
' → logprob: -6.708859443664551
    7. '            
' → logprob: -8.08385944366455
    8. '

' → logprob: -8.58385944366455
    9. '<|end|>' → logprob: -10.58385944366455
    10. '
        
' → logprob: -10.95885944366455

Token 332: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004267508164048195
    2. '       ' → logprob: -6.129267692565918
    3. '   ' → logprob: -6.379267692565918
    4. ' def' → logprob: -8.629267692565918
    5. '
' → logprob: -9.254267692565918
    6. '        
' → logprob: -9.504267692565918
    7. '    
' → logprob: -10.379267692565918
    8. ' ' → logprob: -13.629267692565918
    9. '  ' → logprob: -14.754267692565918
    10. '            
' → logprob: -14.754267692565918

Token 333: ' maximum' (ID: 10562)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -1.8263764381408691
    2. 'new' → logprob: -2.201376438140869
    3. ' new' → logprob: -2.451376438140869
    4. ' get' → logprob: -2.451376438140869
    5. ' possible' → logprob: -2.576376438140869
    6. 'get' → logprob: -2.826376438140869
    7. 'possible' → logprob: -3.076376438140869
    8. 'best' → logprob: -3.076376438140869
    9. 'filter' → logprob: -3.201376438140869
    10. ' filter' → logprob: -3.451376438140869

Token 334: '_new' (ID: 13000)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.308632254600525
    2. '_possible' → logprob: -2.0586323738098145
    3. '_difference' → logprob: -2.1836323738098145
    4. '_profit' → logprob: -2.1836323738098145
    5. '_discount' → logprob: -2.4336323738098145
    6. '_price' → logprob: -2.6836323738098145
    7. '_re' → logprob: -2.9336323738098145
    8. '_' → logprob: -3.4336323738098145
    9. '_valid' → logprob: -3.5586323738098145
    10. '_in' → logprob: -3.8086323738098145

Token 335: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.003699604654684663
    2. '_price' → logprob: -5.878699779510498
    3. '_value' → logprob: -7.503699779510498
    4. '_rate' → logprob: -8.50369930267334
    5. '_' → logprob: -9.75369930267334
    6. '_tax' → logprob: -10.00369930267334
    7. 'total' → logprob: -11.87869930267334
    8. '_amount' → logprob: -12.37869930267334
    9. '_after' → logprob: -12.37869930267334
    10. '_re' → logprob: -12.62869930267334

Token 336: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002487903693690896
    2. '(' → logprob: -6.002488136291504
    3. ' (' → logprob: -12.502488136291504
    4. 'self' → logprob: -12.752488136291504
    5. '(s' → logprob: -13.252488136291504
    6. '   ' → logprob: -13.377488136291504
    7. '_(' → logprob: -14.627488136291504
    8. 's' → logprob: -14.877488136291504
    9. '_' → logprob: -15.127488136291504
    10. ' ' → logprob: -15.377488136291504

Token 337: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.026504293084144592
    2. '):' → logprob: -4.4015045166015625
    3. 'self' → logprob: -4.6515045166015625
    4. ')(' → logprob: -6.1515045166015625
    5. ')' → logprob: -7.4015045166015625
    6. '):
' → logprob: -7.4015045166015625
    7. ' (' → logprob: -7.9015045166015625
    8. '(' → logprob: -8.401504516601562
    9. '   ' → logprob: -8.776504516601562
    10. ',' → logprob: -9.526504516601562

Token 338: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003281944082118571
    2. '(' → logprob: -8.125328063964844
    3. 'self' → logprob: -11.250328063964844
    4. '       ' → logprob: -11.625328063964844
    5. ' (' → logprob: -11.875328063964844
    6. '   ' → logprob: -13.125328063964844
    7. ':' → logprob: -14.875328063964844
    8. ' self' → logprob: -15.000328063964844
    9. '(
' → logprob: -15.500328063964844
    10. '(s' → logprob: -15.875328063964844

Token 339: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011116675101220608
    2. ' int' → logprob: -4.5111165046691895
    3. '   ' → logprob: -10.136116981506348
    4. 'Optional' → logprob: -11.136116981506348
    5. ' Optional' → logprob: -12.136116981506348
    6. '(int' → logprob: -12.136116981506348
    7. ' ' → logprob: -13.511116981506348
    8. '  ' → logprob: -14.636116981506348
    9. 'None' → logprob: -14.761116981506348
    10. '[int' → logprob: -14.761116981506348

Token 340: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2577982246875763
    2. ':' → logprob: -2.007798194885254
    3. '(' → logprob: -3.257798194885254
    4. ':
' → logprob: -3.507798194885254
    5. '       ' → logprob: -3.882798194885254
    6. '(
' → logprob: -6.007798194885254
    7. '   ' → logprob: -7.382798194885254
    8. '):
' → logprob: -8.257798194885254
    9. '           ' → logprob: -8.382798194885254
    10. 'self' → logprob: -9.382798194885254

Token 341: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07900215685367584
    2. '           ' → logprob: -2.5790021419525146
    3. 'max' → logprob: -9.829002380371094
    4. ' max' → logprob: -11.079002380371094
    5. '        ' → logprob: -11.954002380371094
    6. '         ' → logprob: -12.204002380371094
    7. '               ' → logprob: -12.204002380371094
    8. '​' → logprob: -12.704002380371094
    9. 'return' → logprob: -12.704002380371094
    10. '          ' → logprob: -12.704002380371094

Token 342: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.22997918725013733
    2. ' max' → logprob: -2.6049792766571045
    3. '       ' → logprob: -2.8549792766571045
    4. 'return' → logprob: -3.3549792766571045
    5. '           ' → logprob: -3.4799792766571045
    6. ' return' → logprob: -5.229979038238525
    7. ' if' → logprob: -6.854979038238525
    8. 'if' → logprob: -6.854979038238525
    9. 'result' → logprob: -7.854979038238525
    10. '   ' → logprob: -8.354979515075684

Token 343: ' Among' (ID: 32417)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.11276692897081375
    2. ' max' → logprob: -2.862766981124878
    3. 'return' → logprob: -3.362766981124878
    4. '           ' → logprob: -4.987766742706299
    5. ' return' → logprob: -5.737766742706299
    6. '       ' → logprob: -6.237766742706299
    7. 'best' → logprob: -6.987766742706299
    8. 'if' → logprob: -7.737766742706299
    9. '   ' → logprob: -7.862766742706299
    10. 'result' → logprob: -7.987766742706299

Token 344: ' valid' (ID: 4529)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.37202906608581543
    2. 'pair' → logprob: -1.7470290660858154
    3. '(pair' → logprob: -2.8720290660858154
    4. 'p' → logprob: -3.6220290660858154
    5. ' pair' → logprob: -3.9970290660858154
    6. ' self' → logprob: -4.3720293045043945
    7. '[p' → logprob: -5.2470293045043945
    8. ' p' → logprob: -5.2470293045043945
    9. '(p' → logprob: -5.8720293045043945
    10. '[' → logprob: -6.1220293045043945

Token 345: ' pairs' (ID: 24702)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.23790858685970306
    2. 'pairs' → logprob: -1.7379086017608643
    3. ' pairs' → logprob: -3.8629086017608643
    4. '           ' → logprob: -5.487908363342285
    5. 'self' → logprob: -5.487908363342285
    6. 'pair' → logprob: -5.862908363342285
    7. '       ' → logprob: -6.737908363342285
    8. ' pair' → logprob: -7.237908363342285
    9. '_prices' → logprob: -7.487908363342285
    10. 'max' → logprob: -7.862908363342285

Token 346: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05695700645446777
    2. ',' → logprob: -2.9319570064544678
    3. ':' → logprob: -7.306957244873047
    4. 'max' → logprob: -7.931957244873047
    5. ' return' → logprob: -8.056957244873047
    6. 'return' → logprob: -8.556957244873047
    7. ' ,' → logprob: -8.931957244873047
    8. '       ' → logprob: -9.181957244873047
    9. ' max' → logprob: -9.306957244873047
    10. ' =' → logprob: -10.306957244873047

Token 347: ' pick' (ID: 5230)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5041605830192566
    2. 'return' → logprob: -1.6291606426239014
    3. '           ' → logprob: -2.1291606426239014
    4. ' max' → logprob: -3.0041606426239014
    5. 'max' → logprob: -3.5041606426239014
    6. ' if' → logprob: -7.129160404205322
    7. ' new' → logprob: -8.50416088104248
    8. '       ' → logprob: -8.87916088104248
    9. 'if' → logprob: -9.75416088104248
    10. 'new' → logprob: -10.12916088104248

Token 348: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.30567705631256104
    2. ' max' → logprob: -1.555677056312561
    3. ' the' → logprob: -3.3056769371032715
    4. '           ' → logprob: -4.6806769371032715
    5. 'the' → logprob: -5.4306769371032715
    6. '               ' → logprob: -7.3056769371032715
    7. ' pair' → logprob: -8.05567741394043
    8. 'self' → logprob: -8.05567741394043
    9. 'pair' → logprob: -8.30567741394043
    10. 'return' → logprob: -8.68067741394043

Token 349: ' total' (ID: 3609)
  Prédit: '(pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pair' → logprob: -0.07582195103168488
    2. '([' → logprob: -3.325821876525879
    3. '(' → logprob: -3.450821876525879
    4. '(self' → logprob: -6.200821876525879
    5. '(p' → logprob: -6.700821876525879
    6. '((' → logprob: -7.200821876525879
    7. '(
' → logprob: -7.325821876525879
    8. '_' → logprob: -9.325821876525879
    9. 'return' → logprob: -9.700821876525879
    10. 'pair' → logprob: -9.700821876525879

Token 350: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -0.20490393042564392
    2. ' =' → logprob: -2.0799038410186768
    3. '           ' → logprob: -3.2049038410186768
    4. '_price' → logprob: -5.329904079437256
    5. '=' → logprob: -5.954904079437256
    6. '_tax' → logprob: -6.204904079437256
    7. ' after' → logprob: -6.579904079437256
    8. '([' → logprob: -6.704904079437256
    9. '_total' → logprob: -6.829904079437256
    10. '       ' → logprob: -7.079904079437256

Token 351: '_tax' (ID: 61146)
  Prédit: '_tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tax' → logprob: -4.3464544432936236e-05
    2. 'tax' → logprob: -10.125043869018555
    3. '_' → logprob: -13.750043869018555
    4. '_after' → logprob: -14.250043869018555
    5. 'after' → logprob: -15.500043869018555
    6. '_t' → logprob: -15.875043869018555
    7. '```' → logprob: -16.000043869018555
    8. '(' → logprob: -16.000043869018555
    9. '_new' → logprob: -16.125043869018555
    10. '   ' → logprob: -16.250043869018555

Token 352: ' with' (ID: 483)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007126776967197657
    2. '(' → logprob: -5.757126808166504
    3. '           ' → logprob: -5.882126808166504
    4. 'return' → logprob: -7.757126808166504
    5. 'self' → logprob: -8.007126808166504
    6. '(lambda' → logprob: -9.257126808166504
    7. ' at' → logprob: -9.632126808166504
    8. '(
' → logprob: -9.882126808166504
    9. '       ' → logprob: -10.257126808166504
    10. 'with' → logprob: -10.382126808166504

Token 353: ' new' (ID: 620)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03452674672007561
    2. ' self' → logprob: -3.409526824951172
    3. 'new' → logprob: -7.409526824951172
    4. '(self' → logprob: -8.909526824951172
    5. ' new' → logprob: -9.784526824951172
    6. 'the' → logprob: -10.159526824951172
    7. ' the' → logprob: -10.409526824951172
    8. '           ' → logprob: -11.909526824951172
    9. '[self' → logprob: -13.534526824951172
    10. 'lambda' → logprob: -13.659526824951172

Token 354: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -1.2113979209971149e-05
    2. 'self' → logprob: -11.500012397766113
    3. '_' → logprob: -14.875012397766113
    4. ' _' → logprob: -15.000012397766113
    5. '_price' → logprob: -15.000012397766113
    6. ''_' → logprob: -16.000011444091797
    7. '_tax' → logprob: -16.125011444091797
    8. '_rating' → logprob: -16.250011444091797
    9. '(self' → logprob: -16.750011444091797
    10. '_code' → logprob: -16.875011444091797

Token 355: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044040970504283905
    2. '(self' → logprob: -3.9190409183502197
    3. '       ' → logprob: -4.294041156768799
    4. '(' → logprob: -4.919041156768799
    5. '        
' → logprob: -7.419041156768799
    6. '(
' → logprob: -7.919041156768799
    7. '   ' → logprob: -8.04404067993164
    8. '               ' → logprob: -8.16904067993164
    9. 'self' → logprob: -9.16904067993164
    10. '        ' → logprob: -9.29404067993164

Token 356: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000373950315406546
    2. '       ' → logprob: -8.125373840332031
    3. 'return' → logprob: -10.750373840332031
    4. '               ' → logprob: -11.000373840332031
    5. 'max' → logprob: -11.750373840332031
    6. ',' → logprob: -11.750373840332031
    7. ' return' → logprob: -12.250373840332031
    8. '          ' → logprob: -12.750373840332031
    9. '(max' → logprob: -13.125373840332031
    10. ' max' → logprob: -13.250373840332031

Token 357: ' max' (ID: 2999)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.502754807472229
    2. 'max' (adapté à ' max') → logprob: -1.252754807472229
    3. 'return' → logprob: -2.5027546882629395
    4. ' max' → logprob: -4.2527546882629395
    5. ' return' → logprob: -4.5027546882629395
    6. '       ' → logprob: -6.2527546882629395
    7. 'if' → logprob: -9.252755165100098
    8. ' if' → logprob: -9.627755165100098
    9. '   ' → logprob: -9.877755165100098
    10. '```' → logprob: -10.752755165100098

Token 358: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.012248033657670021
    2. '_' → logprob: -4.6372480392456055
    3. '_val' → logprob: -6.2622480392456055
    4. '_price' → logprob: -8.137248039245605
    5. '_value' → logprob: -8.637248039245605
    6. '_sum' → logprob: -9.887248039245605
    7. '_pair' → logprob: -10.762248039245605
    8. 'total' → logprob: -11.387248039245605
    9. '_amount' → logprob: -11.887248039245605
    10. '(' → logprob: -11.887248039245605

Token 359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602250337600708
    2. '=' → logprob: -1.9102250337600708
    3. '_' → logprob: -14.785224914550781
    4. '   ' → logprob: -15.785224914550781
    5. ' ' → logprob: -15.910224914550781
    6. '_=' → logprob: -16.66022491455078
    7. ',' → logprob: -16.78522491455078
    8. '  ' → logprob: -17.28522491455078
    9. '=None' → logprob: -17.28522491455078
    10. ' =
' → logprob: -17.41022491455078

Token 360: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2561659514904022
    2. '-' → logprob: -1.5061659812927246
    3. ' ' → logprob: -6.631165981292725
    4. 'None' → logprob: -7.006165981292725
    5. ' -' → logprob: -7.131165981292725
    6. 'float' → logprob: -7.506165981292725
    7. 'self' → logprob: -8.006165504455566
    8. '-self' → logprob: -8.881165504455566
    9. 'max' → logprob: -9.756165504455566
    10. ' self' → logprob: -10.256165504455566

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3451269567012787
    2. '-' → logprob: -1.345126986503601
    3. 'max' → logprob: -3.8451268672943115
    4. 'float' → logprob: -5.845127105712891
    5. '-max' → logprob: -5.845127105712891
    6. '-self' → logprob: -6.220127105712891
    7. 'self' → logprob: -6.470127105712891
    8. 'None' → logprob: -7.720127105712891
    9. '-s' → logprob: -9.59512710571289
    10. ' -' → logprob: -10.59512710571289

Token 362: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024378577247262
    2. '
' → logprob: -3.774378538131714
    3. ' for' → logprob: -7.149378776550293
    4. '            
' → logprob: -8.774378776550293
    5. '       ' → logprob: -10.024378776550293
    6. '    
' → logprob: -10.274378776550293
    7. '        
' → logprob: -10.274378776550293
    8. '<|end|>' → logprob: -11.149378776550293
    9. ' 
' → logprob: -11.274378776550293
    10. ',' → logprob: -11.524378776550293

Token 363: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036901265382766724
    2. '
' → logprob: -3.4119012355804443
    3. ' for' → logprob: -6.536901473999023
    4. '       ' → logprob: -7.161901473999023
    5. '        
' → logprob: -8.286901473999023
    6. '            
' → logprob: -8.411901473999023
    7. '    
' → logprob: -8.786901473999023
    8. '<|end|>' → logprob: -9.161901473999023
    9. 'for' → logprob: -9.786901473999023
    10. '   ' → logprob: -9.911901473999023

Token 364: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.25338631868362427
    2. '           ' → logprob: -1.7533862590789795
    3. ' for' → logprob: -3.2533862590789795
    4. '       ' → logprob: -4.503386497497559
    5. '   ' → logprob: -7.003386497497559
    6. '
' → logprob: -11.253386497497559
    7. ' ' → logprob: -13.253386497497559
    8. '	for' → logprob: -13.253386497497559
    9. '        
' → logprob: -13.878386497497559
    10. '               ' → logprob: -13.878386497497559

Token 365: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.281194269657135
    2. ' pair' → logprob: -1.4061942100524902
    3. '   ' → logprob: -10.906194686889648
    4. 'p' → logprob: -11.406194686889648
    5. ' p' → logprob: -12.531194686889648
    6. '(pair' → logprob: -12.781194686889648
    7. '           ' → logprob: -13.406194686889648
    8. ' ' → logprob: -13.656194686889648
    9. 'pa' → logprob: -13.781194686889648
    10. '_pair' → logprob: -14.281194686889648

Token 366: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007241101702675223
    2. 'in' → logprob: -7.2507243156433105
    3. ' ' → logprob: -11.250723838806152
    4. '	in' → logprob: -14.875723838806152
    5. 's' → logprob: -15.875723838806152
    6. '.' → logprob: -15.875723838806152
    7. '  ' → logprob: -16.25072479248047
    8. '        ' → logprob: -16.25072479248047
    9. ' i' → logprob: -16.50072479248047
    10. '.in' → logprob: -16.87572479248047

Token 367: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029756393283605576
    2. ' self' → logprob: -3.5297563076019287
    3. '           ' → logprob: -13.404756546020508
    4. '   ' → logprob: -13.654756546020508
    5. '(self' → logprob: -13.904756546020508
    6. '       ' → logprob: -14.029756546020508
    7. '	self' → logprob: -14.279756546020508
    8. '[self' → logprob: -15.904756546020508
    9. 'Self' → logprob: -16.154756546020508
    10. '
' → logprob: -16.154756546020508

Token 368: '.valid' (ID: 41805)
  Prédit: '.valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.valid' → logprob: -0.00010211274639004841
    2. '.' → logprob: -9.500102043151855
    3. ' .' → logprob: -10.750102043151855
    4. 'valid' → logprob: -12.875102043151855
    5. '.v' → logprob: -13.375102043151855
    6. ' valid' → logprob: -14.250102043151855
    7. '	valid' → logprob: -14.750102043151855
    8. '   ' → logprob: -15.500102043151855
    9. '       ' → logprob: -15.875102043151855
    10. '.V' → logprob: -16.375102996826172

Token 369: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.10657507926225662
    2. 'Price' → logprob: -2.4815750122070312
    3. 'Change' → logprob: -5.231575012207031
    4. '_price' → logprob: -5.481575012207031
    5. 'Pairs' → logprob: -5.731575012207031
    6. '_change' → logprob: -5.856575012207031
    7. '_' → logprob: -7.231575012207031
    8. 'Calculator' → logprob: -7.981575012207031
    9. '_prices' → logprob: -8.106575012207031
    10. 'pairs' → logprob: -8.356575012207031

Token 370: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31543225049972534
    2. ':
' → logprob: -1.3154323101043701
    3. '           ' → logprob: -6.815432071685791
    4. '               ' → logprob: -6.940432071685791
    5. '):
' → logprob: -9.69043254852295
    6. ',' → logprob: -10.56543254852295
    7. ' :
' → logprob: -12.81543254852295
    8. ':

' → logprob: -13.19043254852295
    9. ':
' → logprob: -13.19043254852295
    10. ' :' → logprob: -13.19043254852295

Token 371: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7367567420005798
    2. '               ' → logprob: -0.7367567420005798
    3. '
' → logprob: -3.4867568016052246
    4. '            
' → logprob: -5.736756801605225
    5. ' total' → logprob: -6.361756801605225
    6. '    
' → logprob: -6.611756801605225
    7. '       ' → logprob: -7.111756801605225
    8. ',' → logprob: -7.236756801605225
    9. ':' → logprob: -7.486756801605225
    10. '                
' → logprob: -7.486756801605225

Token 372: ' val' (ID: 1459)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6993831396102905
    2. 'total' → logprob: -0.9493831396102905
    3. ' new' → logprob: -2.69938325881958
    4. '               ' → logprob: -3.57438325881958
    5. 'new' → logprob: -4.32438325881958
    6. ' current' → logprob: -5.69938325881958
    7. 't' → logprob: -6.82438325881958
    8. '                   ' → logprob: -7.19938325881958
    9. 'current' → logprob: -7.57438325881958
    10. ' t' → logprob: -7.57438325881958

Token 373: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5765017867088318
    2. '=' → logprob: -0.8265017867088318
    3. '_' → logprob: -8.451501846313477
    4. '_total' → logprob: -8.826501846313477
    5. '   ' → logprob: -9.076501846313477
    6. '           ' → logprob: -10.701501846313477
    7. 'al' → logprob: -11.326501846313477
    8. ' ' → logprob: -11.451501846313477
    9. '               ' → logprob: -11.826501846313477
    10. 'total' → logprob: -11.951501846313477

Token 374: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.0067161982879042625
    2. 'pair' → logprob: -5.006716251373291
    3. '(pair' → logprob: -14.131715774536133
    4. '               ' → logprob: -16.381715774536133
    5. '_pair' → logprob: -17.756715774536133
    6. '           ' → logprob: -17.881715774536133
    7. 'Pair' → logprob: -18.506715774536133
    8. '<pair' → logprob: -18.756715774536133
    9. '            ' → logprob: -18.881715774536133
    10. ' ' → logprob: -19.506715774536133

Token 375: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.001058890949934721
    2. '.' → logprob: -6.876059055328369
    3. 'total' → logprob: -11.251058578491211
    4. ' .' → logprob: -11.376058578491211
    5. '.maximum' → logprob: -14.501058578491211
    6. ' total' → logprob: -14.876058578491211
    7. ',total' → logprob: -15.751058578491211
    8. '.
' → logprob: -15.876058578491211
    9. ' ' → logprob: -16.00105857849121
    10. '	total' → logprob: -16.37605857849121

Token 376: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -1.1472419600977446e-06
    2. 'after' → logprob: -14.125000953674316
    3. '_before' → logprob: -16.000001907348633
    4. 'After' → logprob: -16.750001907348633
    5. '.after' → logprob: -17.625001907348633
    6. '_AFTER' → logprob: -17.625001907348633
    7. '_' → logprob: -17.875001907348633
    8. ' after' → logprob: -18.375001907348633
    9. '_af' → logprob: -18.750001907348633
    10. '_at' → logprob: -18.750001907348633

Token 377: '_tax' (ID: 61146)
  Prédit: '_tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tax' → logprob: -0.00014036978245712817
    2. 'tax' → logprob: -8.875140190124512
    3. ' tax' → logprob: -15.750140190124512
    4. '_' → logprob: -16.750141143798828
    5. 'Tax' → logprob: -17.000141143798828
    6. '_t' → logprob: -17.000141143798828
    7. '_tar' → logprob: -17.000141143798828
    8. '-tax' → logprob: -17.250141143798828
    9. '_tex' → logprob: -17.375141143798828
    10. '税' → logprob: -17.750141143798828

Token 378: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003178306156769395
    2. '(' → logprob: -5.753178119659424
    3. ' (' → logprob: -15.378178596496582
    4. '(
' → logprob: -15.753178596496582
    5. '(this' → logprob: -16.253177642822266
    6. '('' → logprob: -17.003177642822266
    7. 'self' → logprob: -17.628177642822266
    8. '((' → logprob: -17.753177642822266
    9. '(s' → logprob: -17.878177642822266
    10. '(`' → logprob: -18.378177642822266

Token 379: '.new' (ID: 8564)
  Prédit: '.new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.new' → logprob: -0.037676140666007996
    2. ' new' → logprob: -3.9126760959625244
    3. ' self' → logprob: -5.6626763343811035
    4. 'new' → logprob: -5.7876763343811035
    5. '_new' → logprob: -5.7876763343811035
    6. '.' → logprob: -6.1626763343811035
    7. 'self' → logprob: -6.2876763343811035
    8. ' .' → logprob: -6.2876763343811035
    9. ')' → logprob: -7.0376763343811035
    10. ',' → logprob: -8.287675857543945

Token 380: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: 0.0
    2. '_' → logprob: -18.375
    3. 'rate' → logprob: -18.375
    4. ' _' → logprob: -19.125
    5. 'Rate' → logprob: -20.0
    6. '_RATE' → logprob: -20.125
    7. '_code' → logprob: -20.5
    8. '   ' → logprob: -21.0
    9. '_rating' → logprob: -21.125
    10. '_ratio' → logprob: -21.125

Token 381: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5777836441993713
    2. ')' → logprob: -0.8277836441993713
    3. '               ' → logprob: -6.452783584594727
    4. ')
' → logprob: -8.452783584594727
    5. '           ' → logprob: -10.202783584594727
    6. ' )
' → logprob: -11.702783584594727
    7. ')

' → logprob: -12.577783584594727
    8. '):
' → logprob: -13.577783584594727
    9. ')`
' → logprob: -13.952783584594727
    10. ' )' → logprob: -13.952783584594727

Token 382: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019698418327607214
    2. '           ' → logprob: -10.000197410583496
    3. '                
' → logprob: -10.375197410583496
    4. '<|end|>' → logprob: -10.625197410583496
    5. '                   ' → logprob: -11.125197410583496
    6. '                ' → logprob: -11.250197410583496
    7. '              ' → logprob: -11.375197410583496
    8. ',' → logprob: -11.500197410583496
    9. ' ' → logprob: -11.875197410583496
    10. '=' → logprob: -12.250197410583496

Token 383: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8390588164329529
    2. '               ' → logprob: -1.0890588760375977
    3. 'if' (adapté à ' if') → logprob: -1.4640588760375977
    4. '           ' → logprob: -10.839058876037598
    5. '                
' → logprob: -11.589058876037598
    6. '
' → logprob: -11.714058876037598
    7. '                   ' → logprob: -11.714058876037598
    8. '   ' → logprob: -12.964058876037598
    9. ' ' → logprob: -13.339058876037598
    10. '	if' → logprob: -13.589058876037598

Token 384: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.02324792370200157
    2. 'val' → logprob: -3.7732479572296143
    3. '	val' → logprob: -13.273247718811035
    4. '(val' → logprob: -14.898247718811035
    5. '[val' → logprob: -15.648247718811035
    6. '               ' → logprob: -16.02324867248535
    7. '                   ' → logprob: -17.02324867248535
    8. ',val' → logprob: -17.39824867248535
    9. 'v' → logprob: -18.52324867248535
    10. '.val' → logprob: -18.89824867248535

Token 385: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.007607458624988794
    2. '>' → logprob: -4.882607460021973
    3. ' ' → logprob: -13.882607460021973
    4. ' >
' → logprob: -16.257606506347656
    5. ' >
' → logprob: -17.132606506347656
    6. ' >

' → logprob: -17.257606506347656
    7. ' ' → logprob: -17.382606506347656
    8. '               ' → logprob: -17.632606506347656
    9. '           ' → logprob: -17.882606506347656
    10. '<|end|>' → logprob: -18.132606506347656

Token 386: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07889639586210251
    2. ' max' → logprob: -2.5788962841033936
    3. '               ' → logprob: -12.328896522521973
    4. '           ' → logprob: -13.453896522521973
    5. '	max' → logprob: -15.203896522521973
    6. '
' → logprob: -15.703896522521973
    7. '                   ' → logprob: -16.078895568847656
    8. '   ' → logprob: -16.453895568847656
    9. ' ' → logprob: -16.578895568847656
    10. '_max' → logprob: -16.703895568847656

Token 387: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.125000953674316
    3. '_max' → logprob: -15.625000953674316
    4. '_tot' → logprob: -16.375
    5. 'total' → logprob: -16.75
    6. ' _' → logprob: -17.5
    7. '_TOTAL' → logprob: -19.125
    8. '_to' → logprob: -19.125
    9. '           ' → logprob: -19.75
    10. '_Total' → logprob: -19.875

Token 388: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.45191946625709534
    2. ':' → logprob: -1.201919436454773
    3. '                   ' → logprob: -2.8269195556640625
    4. '               ' → logprob: -5.7019195556640625
    5. '           ' → logprob: -8.451919555664062
    6. '):
' → logprob: -9.451919555664062
    7. '                       ' → logprob: -9.826919555664062
    8. ',' → logprob: -10.576919555664062
    9. ' :
' → logprob: -10.951919555664062
    10. '                ' → logprob: -11.576919555664062

Token 389: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010058381594717503
    2. '               ' → logprob: -4.885058403015137
    3. '                       ' → logprob: -7.135058403015137
    4. '                    
' → logprob: -7.510058403015137
    5. '           ' → logprob: -8.510058403015137
    6. '                    ' → logprob: -8.760058403015137
    7. '                ' → logprob: -8.885058403015137
    8. ' max' → logprob: -8.885058403015137
    9. '                  ' → logprob: -9.385058403015137
    10. ' 
' → logprob: -9.385058403015137

Token 390: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.06589403003454208
    2. '                   ' → logprob: -2.81589412689209
    3. 'max' (adapté à ' max') → logprob: -5.69089412689209
    4. '                       ' → logprob: -7.69089412689209
    5. '               ' → logprob: -10.44089412689209
    6. '
' → logprob: -11.44089412689209
    7. '                    ' → logprob: -11.81589412689209
    8. '           ' → logprob: -12.06589412689209
    9. '                    
' → logprob: -12.06589412689209
    10. ' 
' → logprob: -12.31589412689209

Token 391: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.8908587662735954e-05
    2. '_' → logprob: -11.375019073486328
    3. '_max' → logprob: -12.375019073486328
    4. '_token' → logprob: -13.250019073486328
    5. 'total' → logprob: -14.250019073486328
    6. ' _' → logprob: -15.000019073486328
    7. '_tot' → logprob: -16.250019073486328
    8. '_tokens' → logprob: -17.000019073486328
    9. '=_' → logprob: -17.000019073486328
    10. '_to' → logprob: -17.250019073486328

Token 392: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859429597854614
    2. '=' → logprob: -3.0485942363739014
    3. ' =
' → logprob: -12.04859447479248
    4. '=
' → logprob: -15.29859447479248
    5. ' ' → logprob: -15.92359447479248
    6. ' =)' → logprob: -15.92359447479248
    7. '                    ' → logprob: -16.298593521118164
    8. '=

' → logprob: -16.548593521118164
    9. ' =
' → logprob: -16.673593521118164
    10. '＝' → logprob: -16.673593521118164

Token 393: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.014163628220558167
    2. 'val' → logprob: -4.264163494110107
    3. '	val' → logprob: -16.264163970947266
    4. 'v' → logprob: -16.889163970947266
    5. '[val' → logprob: -17.889163970947266
    6. '(val' → logprob: -18.514163970947266
    7. '_val' → logprob: -18.639163970947266
    8. ',val' → logprob: -18.764163970947266
    9. '.val' → logprob: -19.514163970947266
    10. ' v' → logprob: -19.639163970947266

Token 394: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013685694430023432
    2. '
' → logprob: -6.626368522644043
    3. 'return' → logprob: -10.626368522644043
    4. '          ' → logprob: -11.751368522644043
    5. ' return' → logprob: -12.251368522644043
    6. '            
' → logprob: -13.376368522644043
    7. '       ' → logprob: -13.876368522644043
    8. '		' → logprob: -14.001368522644043
    9. '            ' → logprob: -15.001368522644043
    10. '         ' → logprob: -15.001368522644043

Token 395: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011033025803044438
    2. '
' → logprob: -7.001103401184082
    3. 'return' → logprob: -9.126103401184082
    4. ' return' → logprob: -10.501103401184082
    5. '          ' → logprob: -11.001103401184082
    6. '       ' → logprob: -11.251103401184082
    7. '            
' → logprob: -11.376103401184082
    8. '    
' → logprob: -12.626103401184082
    9. '                   ' → logprob: -13.376103401184082
    10. '            ' → logprob: -13.501103401184082

Token 396: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0538509227335453
    2. 'return' (adapté à ' return') → logprob: -3.4288508892059326
    3. '       ' → logprob: -4.178851127624512
    4. ' return' → logprob: -5.428851127624512
    5. '   ' → logprob: -9.053851127624512
    6. '
' → logprob: -9.303851127624512
    7. '          ' → logprob: -10.678851127624512
    8. '               ' → logprob: -11.053851127624512
    9. '		' → logprob: -11.303851127624512
    10. '	return' → logprob: -11.428851127624512

Token 397: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3132617771625519
    2. 'max' → logprob: -1.3132617473602295
    3. '	max' → logprob: -17.563261032104492
    4. '(max' → logprob: -17.938261032104492
    5. '[max' → logprob: -18.813261032104492
    6. '_max' → logprob: -18.938261032104492
    7. '
' → logprob: -19.063261032104492
    8. ',max' → logprob: -20.438261032104492
    9. ' ' → logprob: -21.188261032104492
    10. '=max' → logprob: -21.313261032104492

Token 398: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.0180790014564991
    2. 'Total' → logprob: -4.768078804016113
    3. '_' → logprob: -5.143078804016113
    4. '<|end|>' → logprob: -6.268078804016113
    5. 'total' → logprob: -7.018078804016113
    6. '\' → logprob: -9.393078804016113
    7. '_
' → logprob: -9.518078804016113
    8. '_tot' → logprob: -9.518078804016113
    9. '_Total' → logprob: -9.518078804016113
    10. '_token' → logprob: -9.518078804016113

Token 399: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1412794440984726
    2. '<|end|>' → logprob: -2.891279458999634
    3. 'def' → logprob: -3.141279458999634
    4. 'class' → logprob: -4.266279220581055
    5. 'vat' → logprob: -5.516279220581055
    6. 'v' → logprob: -5.516279220581055
    7. '
' → logprob: -6.016279220581055
    8. '    
' → logprob: -6.391279220581055
    9. '#' → logprob: -6.641279220581055
    10. '```' → logprob: -7.141279220581055

Token 401: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.020244624465703964
    2. '   ' → logprob: -4.020244598388672
    3. 'class' → logprob: -7.395244598388672
    4. ' def' → logprob: -8.020244598388672
    5. 'v' → logprob: -8.395244598388672
    6. '    ' → logprob: -8.770244598388672
    7. '    
' → logprob: -8.895244598388672
    8. '#' → logprob: -9.020244598388672
    9. 'vat' → logprob: -9.020244598388672
    10. '<|end|>' → logprob: -9.020244598388672

Token 402: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.013807331211864948
    2. '__' → logprob: -4.51380729675293
    3. ' calculate' → logprob: -6.01380729675293
    4. 'calculate' → logprob: -9.38880729675293
    5. ' ' → logprob: -9.63880729675293
    6. ' def' → logprob: -10.26380729675293
    7. ' _' → logprob: -10.38880729675293
    8. ' ' → logprob: -10.63880729675293
    9. ' compute' → logprob: -10.76380729675293
    10. ' get' → logprob: -10.88880729675293

Token 403: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.75
    3. '_init' → logprob: -18.75
    4. 'ini' → logprob: -20.25
    5. 'int' → logprob: -20.75
    6. 'i' → logprob: -22.375
    7. 'in' → logprob: -24.0
    8. '```' → logprob: -24.5
    9. '	init' → logprob: -24.75
    10. 'def' → logprob: -24.75

Token 404: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0003675133048091084
    2. '(self' → logprob: -8.375367164611816
    3. '__(
' → logprob: -9.500367164611816
    4. '__' → logprob: -9.875367164611816
    5. '(' → logprob: -12.375367164611816
    6. '_(' → logprob: -12.375367164611816
    7. '__((' → logprob: -14.375367164611816
    8. 'self' → logprob: -14.625367164611816
    9. '__(*' → logprob: -15.375367164611816
    10. '__('' → logprob: -15.750367164611816

Token 405: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.600714161526412e-05
    2. ' self' → logprob: -10.250076293945312
    3. '   ' → logprob: -10.500076293945312
    4. '
' → logprob: -12.250076293945312
    5. '  ' → logprob: -13.250076293945312
    6. ')' → logprob: -13.250076293945312
    7. '0' → logprob: -13.500076293945312
    8. ' ' → logprob: -13.500076293945312
    9. ',' → logprob: -14.250076293945312
    10. '{' → logprob: -15.250076293945312

Token 406: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0052966042421758175
    2. 'self' → logprob: -5.25529670715332
    3. ' self' → logprob: -10.63029670715332
    4. ',self' → logprob: -11.13029670715332
    5. '(self' → logprob: -11.50529670715332
    6. ')' → logprob: -12.38029670715332
    7. ' ,' → logprob: -13.00529670715332
    8. ',
' → logprob: -13.13029670715332
    9. '   ' → logprob: -13.13029670715332
    10. '):
' → logprob: -13.25529670715332

Token 407: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011787721887230873
    2. ' self' → logprob: -4.5117878913879395
    3. '   ' → logprob: -7.2617878913879395
    4. '       ' → logprob: -10.261787414550781
    5. '
' → logprob: -13.761787414550781
    6. 'def' → logprob: -14.011787414550781
    7. '(self' → logprob: -14.761787414550781
    8. ' ' → logprob: -15.761787414550781
    9. '  ' → logprob: -16.01178741455078
    10. '    ' → logprob: -16.13678741455078

Token 408: ' self' (ID: 1051)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.5368080139160156
    2. 'pass' → logprob: -1.4118080139160156
    3. 'self' (adapté à ' self') → logprob: -2.0368080139160156
    4. ' self' → logprob: -3.2868080139160156
    5. '   ' → logprob: -5.786808013916016
    6. '       ' → logprob: -7.161808013916016
    7. '	pass' → logprob: -12.036808013916016
    8. ' None' → logprob: -12.161808013916016
    9. 'None' → logprob: -12.411808013916016
    10. '    ' → logprob: -12.661808013916016

Token 409: '.sc' (ID: 9411)
  Prédit: '.old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.old' → logprob: -0.5548809766769409
    2. '.' → logprob: -0.9298809766769409
    3. '._' → logprob: -4.3048810958862305
    4. ' .' → logprob: -5.3048810958862305
    5. '.v' → logprob: -5.9298810958862305
    6. '.price' → logprob: -6.8048810958862305
    7. '.valid' → logprob: -7.0548810958862305
    8. ' =' → logprob: -7.1798810958862305
    9. '.rate' → logprob: -7.1798810958862305
    10. '.previous' → logprob: -7.3048810958862305

Token 410: 'enarios' (ID: 89141)
  Prédit: 'enarios'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enarios' → logprob: -0.0009433844243176281
    2. 'enario' → logprob: -7.000943183898926
    3. 'en' → logprob: -10.500943183898926
    4. 'enar' → logprob: -13.750943183898926
    5. '#' → logprob: -14.125943183898926
    6. '_' → logprob: -14.625943183898926
    7. '=' → logprob: -14.750943183898926
    8. 'cen' → logprob: -15.625943183898926
    9. ' scenarios' → logprob: -15.750943183898926
    10. 'ener' → logprob: -16.000944137573242

Token 411: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20150074362754822
    2. '=' → logprob: -1.7015007734298706
    3. '=[]' → logprob: -9.45150089263916
    4. ' ' → logprob: -12.45150089263916
    5. '<|end|>' → logprob: -13.07650089263916
    6. 's' → logprob: -13.32650089263916
    7. ':' → logprob: -14.70150089263916
    8. '={}' → logprob: -15.95150089263916
    9. '[]' → logprob: -16.451499938964844
    10. ']' → logprob: -16.576499938964844

Token 412: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.011051236651837826
    2. ' []' → logprob: -4.511051177978516
    3. '{}' → logprob: -13.011051177978516
    4. '[]}' → logprob: -14.761051177978516
    5. '[]
' → logprob: -14.886051177978516
    6. '[' → logprob: -15.261051177978516
    7. ' {}' → logprob: -17.011051177978516
    8. '[]>' → logprob: -17.761051177978516
    9. '[]

' → logprob: -17.761051177978516
    10. '[],' → logprob: -17.761051177978516

Token 413: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11342848837375641
    2. '<|end|>' → logprob: -2.3634285926818848
    3. '   ' → logprob: -4.988428592681885
    4. '    
' → logprob: -5.363428592681885
    5. ' 
' → logprob: -7.613428592681885
    6. '

' → logprob: -7.738428592681885
    7. '<|end|>' → logprob: -7.988428592681885
    8. 'def' → logprob: -8.488428115844727
    9. '  
' → logprob: -9.863428115844727
    10. '        
' → logprob: -10.738428115844727

Token 414: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25600382685661316
    2. ' def' → logprob: -1.5060038566589355
    3. '   ' → logprob: -5.5060038566589355
    4. ' ' → logprob: -13.131003379821777
    5. '
' → logprob: -14.506003379821777
    6. '	def' → logprob: -14.506003379821777
    7. '    
' → logprob: -14.756003379821777
    8. '  ' → logprob: -15.631003379821777
    9. 'd' → logprob: -16.006004333496094
    10. '    ' → logprob: -16.381004333496094

Token 415: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.627176768844947e-05
    2. ' def' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.25009536743164
    4. 'd' → logprob: -17.50009536743164
    5. 'de' → logprob: -18.87509536743164
    6. '
' → logprob: -20.62509536743164
    7. ' ' → logprob: -20.87509536743164
    8. '	def' → logprob: -21.75009536743164
    9. '    
' → logprob: -22.62509536743164
    10. ' 
' → logprob: -22.75009536743164

Token 416: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.0051002223044633865
    2. 'add' → logprob: -5.505100250244141
    3. ' def' → logprob: -7.005100250244141
    4. '_add' → logprob: -10.25510025024414
    5. ' process' → logprob: -10.63010025024414
    6. ' create' → logprob: -10.88010025024414
    7. ' run' → logprob: -11.50510025024414
    8. 'def' → logprob: -12.00510025024414
    9. ' load' → logprob: -12.63010025024414
    10. ' parse' → logprob: -13.00510025024414

Token 417: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0006489329971373081
    2. '_' → logprob: -7.3756489753723145
    3. '_case' → logprob: -12.000648498535156
    4. '_sc' → logprob: -12.250648498535156
    5. '_scene' → logprob: -13.000648498535156
    6. 'Scenario' → logprob: -13.750648498535156
    7. '_option' → logprob: -14.250648498535156
    8. '_code' → logprob: -14.625648498535156
    9. ' scenario' → logprob: -14.750648498535156
    10. 'scenario' → logprob: -14.750648498535156

Token 418: 'cenario' (ID: 118492)
  Prédit: 'cenario'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cenario' → logprob: -9.114600834436715e-05
    2. 'enario' → logprob: -10.000091552734375
    3. 'scenario' → logprob: -10.375091552734375
    4. 'cen' → logprob: -12.125091552734375
    5. '_' → logprob: -12.250091552734375
    6. 'cene' → logprob: -13.875091552734375
    7. 'c' → logprob: -14.125091552734375
    8. 'cean' → logprob: -14.375091552734375
    9. ' scenario' → logprob: -14.500091552734375
    10. 'Scenario' → logprob: -14.500091552734375

Token 419: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0024773201439529657
    2. '(' → logprob: -6.002477169036865
    3. '(s' → logprob: -14.002477645874023
    4. ' (' → logprob: -15.002477645874023
    5. 'self' → logprob: -15.252477645874023
    6. '(
' → logprob: -16.127477645874023
    7. '(sel' → logprob: -17.377477645874023
    8. '(Self' → logprob: -17.752477645874023
    9. '(old' → logprob: -18.002477645874023
    10. '   ' → logprob: -18.377477645874023

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3438327843905427e-05
    2. ' ,' → logprob: -10.75002384185791
    3. 'self' → logprob: -14.12502384185791
    4. ',new' → logprob: -14.75002384185791
    5. '(' → logprob: -16.000022888183594
    6. ',
' → logprob: -16.125022888183594
    7. '_,' → logprob: -16.250022888183594
    8. ')' → logprob: -16.250022888183594
    9. ',self' → logprob: -16.250022888183594
    10. ',int' → logprob: -16.875022888183594

Token 421: ' x' (ID: 1215)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.026454955339431763
    2. ' old' → logprob: -3.6514549255371094
    3. 'self' → logprob: -9.02645492553711
    4. ' self' → logprob: -11.15145492553711
    5. '   ' → logprob: -11.40145492553711
    6. '	old' → logprob: -12.15145492553711
    7. '_old' → logprob: -14.02645492553711
    8. '    ' → logprob: -14.27645492553711
    9. '(old' → logprob: -14.52645492553711
    10. ' ' → logprob: -14.77645492553711

Token 422: ':' (ID: 25)
  Prédit: '_old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_old' → logprob: -0.15505734086036682
    2. 'old' → logprob: -2.030057430267334
    3. ':' → logprob: -5.030057430267334
    4. ',' → logprob: -5.905057430267334
    5. '):' → logprob: -6.280057430267334
    6. ' old' → logprob: -8.155056953430176
    7. '_' → logprob: -8.280056953430176
    8. '1' → logprob: -9.280056953430176
    9. '(old' → logprob: -9.405056953430176
    10. '_o' → logprob: -9.530056953430176

Token 423: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.027187958359718323
    2. ' int' → logprob: -4.152187824249268
    3. '(int' → logprob: -5.152187824249268
    4. ',' → logprob: -6.277187824249268
    5. ':int' → logprob: -7.277187824249268
    6. 'VAT' → logprob: -7.277187824249268
    7. 'old' → logprob: -7.527187824249268
    8. '[int' → logprob: -8.277188301086426
    9. ')' → logprob: -8.652188301086426
    10. '):' → logprob: -8.652188301086426

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001882823125924915
    2. ' ,' → logprob: -8.625187873840332
    3. ':' → logprob: -12.875187873840332
    4. ')' → logprob: -13.625187873840332
    5. '):' → logprob: -13.625187873840332
    6. '   ' → logprob: -13.750187873840332
    7. ',
' → logprob: -14.125187873840332
    8. '1' → logprob: -14.625187873840332
    9. ',y' → logprob: -14.875187873840332
    10. '       ' → logprob: -15.375187873840332

Token 425: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.031003383919596672
    2. ' y' → logprob: -3.656003475189209
    3. 'a' → logprob: -6.031003475189209
    4. 'old' → logprob: -6.656003475189209
    5. '   ' → logprob: -8.90600299835205
    6. ' ' → logprob: -9.03100299835205
    7. ' old' → logprob: -9.40600299835205
    8. 'o' → logprob: -9.65600299835205
    9. 'p' → logprob: -9.84350299835205
    10. '  ' → logprob: -9.96850299835205

Token 426: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014481264166533947
    2. ',' → logprob: -4.264481067657471
    3. ':int' → logprob: -8.139481544494629
    4. '):' → logprob: -11.264481544494629
    5. ')' → logprob: -12.514481544494629
    6. ' ,' → logprob: -12.514481544494629
    7. ' :' → logprob: -13.639481544494629
    8. ',int' → logprob: -13.889481544494629
    9. 'int' → logprob: -14.014481544494629
    10. '):
' → logprob: -14.264481544494629

Token 427: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1799820363521576
    2. ' int' → logprob: -1.80498206615448
    3. ':int' → logprob: -8.55498218536377
    4. '(int' → logprob: -11.42998218536377
    5. 'x' → logprob: -11.92998218536377
    6. '[int' → logprob: -12.42998218536377
    7. ',int' → logprob: -12.67998218536377
    8. '   ' → logprob: -12.67998218536377
    9. ' ' → logprob: -12.80498218536377
    10. ':' → logprob: -12.80498218536377

Token 428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.429896944202483e-05
    2. ' ,' → logprob: -10.125043869018555
    3. ')' → logprob: -12.750043869018555
    4. '):' → logprob: -14.625043869018555
    5. ',int' → logprob: -15.375043869018555
    6. '   ' → logprob: -15.625043869018555
    7. ',
' → logprob: -15.750043869018555
    8. '):
' → logprob: -16.250043869018555
    9. '       ' → logprob: -16.625043869018555
    10. ':' → logprob: -16.750043869018555

Token 429: ' s' (ID: 265)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00456624198704958
    2. 'w' → logprob: -6.379566192626953
    3. ' z' → logprob: -7.129566192626953
    4. 'n' → logprob: -7.754566192626953
    5. 'a' → logprob: -8.254566192626953
    6. 's' → logprob: -8.379566192626953
    7. 'k' → logprob: -8.629566192626953
    8. 't' → logprob: -8.754566192626953
    9. 'old' → logprob: -8.754566192626953
    10. 'p' → logprob: -8.879566192626953

Token 430: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010443627834320068
    2. ')' → logprob: -8.126044273376465
    3. '):' → logprob: -8.376044273376465
    4. ':int' → logprob: -8.376044273376465
    5. ' :' → logprob: -8.876044273376465
    6. '_:' → logprob: -9.376044273376465
    7. '_' → logprob: -10.501044273376465
    8. '=' → logprob: -12.001044273376465
    9. '):
' → logprob: -12.251044273376465
    10. ' ):' → logprob: -12.376044273376465

Token 431: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.015076876617968082
    2. ' int' → logprob: -4.265077114105225
    3. ':int' → logprob: -7.890077114105225
    4. ')' → logprob: -8.265076637268066
    5. 'nt' → logprob: -9.890076637268066
    6. '):
' → logprob: -10.140076637268066
    7. ':' → logprob: -10.140076637268066
    8. '=int' → logprob: -10.265076637268066
    9. '<int' → logprob: -10.765076637268066
    10. '(int' → logprob: -10.890076637268066

Token 432: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016276907408609986
    2. '):
' → logprob: -6.5016279220581055
    3. ')' → logprob: -9.001627922058105
    4. '):
' → logprob: -13.501627922058105
    5. '   ' → logprob: -15.001627922058105
    6. ':' → logprob: -15.001627922058105
    7. ' ):' → logprob: -16.50162696838379
    8. '):

' → logprob: -16.87662696838379
    9. '       ' → logprob: -17.00162696838379
    10. ')->' → logprob: -17.50162696838379

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005343250813893974
    2. 'self' → logprob: -8.125534057617188
    3. '   ' → logprob: -9.750534057617188
    4. '
' → logprob: -9.875534057617188
    5. '        
' → logprob: -10.250534057617188
    6. ' self' → logprob: -10.250534057617188
    7. '```' → logprob: -11.250534057617188
    8. '      ' → logprob: -11.875534057617188
    9. '' → logprob: -12.250534057617188
    10. '  
' → logprob: -12.375534057617188

Token 434: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.058729901909828186
    2. 'scenario' → logprob: -3.308729887008667
    3. ' self' → logprob: -4.183730125427246
    4. '       ' → logprob: -5.433730125427246
    5. ' scenario' → logprob: -7.308730125427246
    6. 'sc' → logprob: -8.808730125427246
    7. 'scene' → logprob: -10.308730125427246
    8. 'new' → logprob: -12.558730125427246
    9. '   ' → logprob: -12.808730125427246
    10. 'sce' → logprob: -12.933730125427246

Token 435: '.sc' (ID: 9411)
  Prédit: '.sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sc' → logprob: -6.0868278524139896e-05
    2. '.s' → logprob: -10.37506103515625
    3. '.scal' → logprob: -11.75006103515625
    4. '.' → logprob: -11.87506103515625
    5. ' .' → logprob: -12.50006103515625
    6. '	sc' → logprob: -12.50006103515625
    7. '=sc' → logprob: -12.50006103515625
    8. '   ' → logprob: -14.25006103515625
    9. '`.' → logprob: -14.75006103515625
    10. ').' → logprob: -14.87506103515625

Token 436: 'enarios' (ID: 89141)
  Prédit: 'enarios'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enarios' → logprob: -0.000856193364597857
    2. 'enario' → logprob: -7.250856399536133
    3. 'en' → logprob: -9.625856399536133
    4. '#' → logprob: -10.750856399536133
    5. 'enar' → logprob: -11.375856399536133
    6. '   ' → logprob: -11.750856399536133
    7. 'ener' → logprob: -12.000856399536133
    8. 'arios' → logprob: -12.250856399536133
    9. '_' → logprob: -12.625856399536133
    10. '=' → logprob: -12.750856399536133

Token 437: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005538671393878758
    2. '.' → logprob: -7.500554084777832
    3. '.extend' → logprob: -15.000554084777832
    4. '.add' → logprob: -15.250554084777832
    5. 'append' → logprob: -16.500553131103516
    6. '.app' → logprob: -16.625553131103516
    7. '.push' → logprob: -16.750553131103516
    8. ' .' → logprob: -16.875553131103516
    9. '.ap' → logprob: -17.125553131103516
    10. '.insert' → logprob: -17.625553131103516

Token 438: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.47596561908721924
    2. '(self' → logprob: -0.9759656190872192
    3. '(' → logprob: -6.35096549987793
    4. 'self' → logprob: -9.47596549987793
    5. 'VAT' → logprob: -10.22596549987793
    6. '(
' → logprob: -10.85096549987793
    7. '((' → logprob: -13.47596549987793
    8. ' VAT' → logprob: -13.47596549987793
    9. '(

' → logprob: -13.85096549987793
    10. '(Self' → logprob: -13.97596549987793

Token 439: 'AT' (ID: 1228)
  Prédit: 'AT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AT' → logprob: -0.0021896373946219683
    2. 'VAT' → logprob: -6.252189636230469
    3. 'at' → logprob: -8.752189636230469
    4. 'ATP' → logprob: -11.127189636230469
    5. '   ' → logprob: -11.252189636230469
    6. 'A' → logprob: -11.939689636230469
    7. 'АТ' → logprob: -12.064689636230469
    8. 'ATM' → logprob: -12.127189636230469
    9. ' VAT' → logprob: -12.377189636230469
    10. '
' → logprob: -12.377189636230469

Token 440: 'Price' (ID: 7417)
  Prédit: 'Price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Price' → logprob: -0.0019366045016795397
    2. 'Change' → logprob: -6.251936435699463
    3. 'VAT' → logprob: -12.751936912536621
    4. 'Pric' → logprob: -13.751936912536621
    5. 'Pricing' → logprob: -14.626936912536621
    6. ' Price' → logprob: -14.751936912536621
    7. 'Vat' → logprob: -14.876936912536621
    8. 'Calculator' → logprob: -15.126936912536621
    9. 'price' → logprob: -15.376936912536621
    10. '_price' → logprob: -15.626936912536621

Token 441: 'Calculator' (ID: 50159)
  Prédit: 'Price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Price' → logprob: -0.0002559753193054348
    2. 'Calculator' → logprob: -8.500255584716797
    3. 'Change' → logprob: -10.000255584716797
    4. 'Pric' → logprob: -13.375255584716797
    5. 'price' → logprob: -14.000255584716797
    6. 'VAT' → logprob: -14.125255584716797
    7. ' Price' → logprob: -14.375255584716797
    8. 'calculator' → logprob: -14.750255584716797
    9. 'Pricing' → logprob: -14.875255584716797
    10. '_price' → logprob: -15.125255584716797

Token 442: '.V' (ID: 5970)
  Prédit: '.V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -1.580929347255733e-05
    2. '.' → logprob: -11.625016212463379
    3. 'VAT' → logprob: -12.375016212463379
    4. ' .' → logprob: -13.250016212463379
    5. '.v' → logprob: -15.250016212463379
    6. '   ' → logprob: -15.875016212463379
    7. '.VK' → logprob: -15.875016212463379
    8. ' VAT' → logprob: -16.250015258789062
    9. 'V' → logprob: -16.875015258789062
    10. ' ' → logprob: -17.375015258789062

Token 443: 'AT' (ID: 1228)
  Prédit: 'AT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AT' → logprob: -6.704273118884885e-07
    2. 'АТ' → logprob: -15.000000953674316
    3. 'at' → logprob: -16.125
    4. '"AT' → logprob: -16.125
    5. ' AT' → logprob: -16.875
    6. 'A' → logprob: -17.875
    7. '

' → logprob: -19.25
    8. '_AT' → logprob: -19.5
    9. 'ATCH' → logprob: -19.625
    10. 'Change' → logprob: -19.75

Token 444: 'Change' (ID: 4836)
  Prédit: 'Change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Change' → logprob: -1.1472419600977446e-06
    2. 'change' → logprob: -14.125000953674316
    3. '_change' → logprob: -16.000001907348633
    4. 'Price' → logprob: -16.250001907348633
    5. ' Change' → logprob: -16.750001907348633
    6. ' change' → logprob: -17.750001907348633
    7. '_CHANGE' → logprob: -17.750001907348633
    8. '.Change' → logprob: -19.000001907348633
    9. 'Charge' → logprob: -19.250001907348633
    10. 'C' → logprob: -19.625001907348633

Token 445: 'Scenario' (ID: 65095)
  Prédit: 'Scenario'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Scenario' → logprob: -0.0001612267515156418
    2. 'Change' → logprob: -8.750161170959473
    3. 'scenario' → logprob: -13.125161170959473
    4. 'Scene' → logprob: -14.625161170959473
    5. 'Sc' → logprob: -16.12516212463379
    6. ' scenario' → logprob: -16.75016212463379
    7. 'cenario' → logprob: -16.87516212463379
    8. 'S' → logprob: -18.12516212463379
    9. ' Scenario' → logprob: -18.50016212463379
    10. '   ' → logprob: -19.50016212463379

Token 446: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -7.541112427134067e-05
    2. '(' → logprob: -9.500075340270996
    3. ' (' → logprob: -15.250075340270996
    4. ')' → logprob: -16.500076293945312
    5. '(y' → logprob: -16.625076293945312
    6. '(self' → logprob: -17.000076293945312
    7. ')(' → logprob: -17.375076293945312
    8. '(
' → logprob: -17.625076293945312
    9. 'x' → logprob: -18.000076293945312
    10. '((' → logprob: -19.500076293945312

Token 447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032926726271398365
    2. ',y' → logprob: -8.50032901763916
    3. ' ,' → logprob: -9.00032901763916
    4. 'y' → logprob: -13.87532901763916
    5. ',
' → logprob: -13.87532901763916
    6. '‌,' → logprob: -15.62532901763916
    7. '
' → logprob: -16.625329971313477
    8. ' y' → logprob: -16.625329971313477
    9. '<|end|>' → logprob: -17.000329971313477
    10. ',\
' → logprob: -18.125329971313477

Token 448: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38687121868133545
    2. ' y' → logprob: -1.1368712186813354
    3. '    ' → logprob: -16.386871337890625
    4. '	y' → logprob: -16.511871337890625
    5. '<|end|>' → logprob: -16.761871337890625
    6. '
' → logprob: -17.511871337890625
    7. ' ' → logprob: -18.136871337890625
    8. '        ' → logprob: -18.761871337890625
    9. ')y' → logprob: -19.011871337890625
    10. ' 
' → logprob: -19.386871337890625

Token 449: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006815764936618507
    2. ',s' → logprob: -7.500681400299072
    3. 's' → logprob: -9.50068187713623
    4. ' ,' → logprob: -9.87568187713623
    5. ' s' → logprob: -13.00068187713623
    6. ',
' → logprob: -17.500680923461914
    7. '   ' → logprob: -18.250680923461914
    8. '       ' → logprob: -18.375680923461914
    9. '
' → logprob: -18.500680923461914
    10. '           ' → logprob: -18.875680923461914

Token 450: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007099286303855479
    2. ' s' → logprob: -7.2507100105285645
    3. '       ' → logprob: -20.750709533691406
    4. '   ' → logprob: -21.375709533691406
    5. '           ' → logprob: -21.750709533691406
    6. '	s' → logprob: -22.375709533691406
    7. '_s' → logprob: -22.500709533691406
    8. '{s' → logprob: -23.000709533691406
    9. '    ' → logprob: -23.125709533691406
    10. '  ' → logprob: -23.375709533691406

Token 451: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003362966235727072
    2. ')' → logprob: -8.000336647033691
    3. '))
' → logprob: -14.250336647033691
    4. ')))' → logprob: -15.750336647033691
    5. ' ))' → logprob: -16.875335693359375
    6. '))

' → logprob: -18.125335693359375
    7. '   ' → logprob: -18.625335693359375
    8. '));' → logprob: -18.625335693359375
    9. ')
' → logprob: -19.000335693359375
    10. '       ' → logprob: -19.000335693359375

Token 452: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2597382664680481
    2. '
' → logprob: -2.0097382068634033
    3. '    
' → logprob: -2.3847382068634033
    4. '<|end|>' → logprob: -6.884738445281982
    5. 'def' → logprob: -7.009738445281982
    6. '  
' → logprob: -8.509737968444824
    7. '```' → logprob: -8.634737968444824
    8. '        
' → logprob: -8.759737968444824
    9. '<|end|>' → logprob: -9.759737968444824
    10. '   
' → logprob: -11.134737968444824

Token 453: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00038086410495452583
    2. '   ' → logprob: -8.000380516052246
    3. ' def' → logprob: -10.000380516052246
    4. '	def' → logprob: -17.750381469726562
    5. '    
' → logprob: -18.125381469726562
    6. '```' → logprob: -18.875381469726562
    7. '
' → logprob: -19.000381469726562
    8. 'd' → logprob: -19.625381469726562
    9. 'de' → logprob: -20.875381469726562
    10. ' ' → logprob: -21.375381469726562

Token 454: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.318681188422488e-05
    2. ' def' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.62501335144043
    4. ' ' → logprob: -20.62501335144043
    5. '	def' → logprob: -22.37501335144043
    6. '
' → logprob: -22.62501335144043
    7. '  ' → logprob: -23.37501335144043
    8. 'de' → logprob: -23.62501335144043
    9. 'd' → logprob: -24.25001335144043
    10. '```' → logprob: -24.50001335144043

Token 455: ' compute' (ID: 23864)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.3555521965026855
    2. ' get' → logprob: -1.9805521965026855
    3. 'calculate' → logprob: -1.9805521965026855
    4. ' run' → logprob: -2.7305521965026855
    5. 'compute' → logprob: -2.7305521965026855
    6. ' calculate' → logprob: -2.7305521965026855
    7. 'get' → logprob: -2.9805521965026855
    8. 'def' → logprob: -2.9805521965026855
    9. ' compute' → logprob: -3.1055521965026855
    10. 'run' → logprob: -3.7305521965026855

Token 456: '_results' (ID: 31049)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.026036787778139114
    2. '_' → logprob: -4.776036739349365
    3. '(self' → logprob: -5.526036739349365
    4. '()' → logprob: -5.901036739349365
    5. '_total' → logprob: -5.901036739349365
    6. '_final' → logprob: -6.151036739349365
    7. '_tot' → logprob: -6.276036739349365
    8. '(' → logprob: -6.776036739349365
    9. '_all' → logprob: -7.401036739349365
    10. '_results' → logprob: -7.776036739349365

Token 457: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018199224025011063
    2. '(' → logprob: -4.018199443817139
    3. ' (' → logprob: -10.26819896697998
    4. '(s' → logprob: -11.76819896697998
    5. '   ' → logprob: -12.64319896697998
    6. '(
' → logprob: -13.51819896697998
    7. 'self' → logprob: -14.01819896697998
    8. ' ' → logprob: -14.76819896697998
    9. '()' → logprob: -15.26819896697998
    10. '       ' → logprob: -15.64319896697998

Token 458: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1623271405696869
    2. '):
' → logprob: -1.9123271703720093
    3. ')' → logprob: -6.412327289581299
    4. '):
' → logprob: -8.41232681274414
    5. 'self' → logprob: -8.41232681274414
    6. '   ' → logprob: -11.78732681274414
    7. '       ' → logprob: -13.03732681274414
    8. '(self' → logprob: -13.03732681274414
    9. ',' → logprob: -14.16232681274414
    10. '):

' → logprob: -14.28732681274414

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036037206882610917
    2. 'result' → logprob: -9.375360488891602
    3. '[]' → logprob: -9.750360488891602
    4. ':' → logprob: -10.125360488891602
    5. 'results' → logprob: -10.125360488891602
    6. '   ' → logprob: -10.625360488891602
    7. ' results' → logprob: -10.750360488891602
    8. '(' → logprob: -10.750360488891602
    9. '[' → logprob: -11.125360488891602
    10. '()' → logprob: -11.375360488891602

Token 460: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.12459134310483932
    2. ' results' → logprob: -2.37459135055542
    3. '       ' → logprob: -3.87459135055542
    4. 'return' → logprob: -6.12459135055542
    5. 'result' → logprob: -6.99959135055542
    6. ' return' → logprob: -8.999590873718262
    7. 'for' → logprob: -9.999590873718262
    8. ' result' → logprob: -10.999590873718262
    9. '	results' → logprob: -11.124590873718262
    10. 'res' → logprob: -11.374590873718262

Token 461: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023248739540576935
    2. '=' → logprob: -3.7732486724853516
    3. '=[]' → logprob: -13.273248672485352
    4. ' ' → logprob: -15.148248672485352
    5. '_' → logprob: -15.148248672485352
    6. '   ' → logprob: -15.273248672485352
    7. '=[]
' → logprob: -15.523248672485352
    8. '[]' → logprob: -15.523248672485352
    9. '  ' → logprob: -15.648248672485352
    10. ':' → logprob: -16.02324867248535

Token 462: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1604483425617218
    2. '[]
' → logprob: -1.9104483127593994
    3. ' []' → logprob: -8.66044807434082
    4. ' []
' → logprob: -9.91044807434082
    5. '[' → logprob: -13.91044807434082
    6. '[]

' → logprob: -15.03544807434082
    7. '[
' → logprob: -17.28544807434082
    8. '[]"' → logprob: -17.53544807434082
    9. '   ' → logprob: -19.03544807434082
    10. '[])
' → logprob: -19.91044807434082

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00953223928809166
    2. ' for' → logprob: -4.759532451629639
    3. 'for' → logprob: -8.00953197479248
    4. '
' → logprob: -8.50953197479248
    5. '   ' → logprob: -8.50953197479248
    6. '	for' → logprob: -9.63453197479248
    7. '        
' → logprob: -10.25953197479248
    8. '	' → logprob: -10.38453197479248
    9. '    
' → logprob: -10.63453197479248
    10. '	   ' → logprob: -12.00953197479248

Token 464: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003514310345053673
    2. '       ' → logprob: -5.753514289855957
    3. ' for' → logprob: -8.003514289855957
    4. '   ' → logprob: -13.378514289855957
    5. '	for' → logprob: -14.128514289855957
    6. ' ' → logprob: -17.878515243530273
    7. '	' → logprob: -18.503515243530273
    8. '```' → logprob: -19.753515243530273
    9. '           ' → logprob: -19.878515243530273
    10. '  ' → logprob: -21.003515243530273

Token 465: ' scenario' (ID: 25697)
  Prédit: ' scenario'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scenario' → logprob: -0.47613129019737244
    2. 'scenario' → logprob: -0.9761313199996948
    3. 'sc' → logprob: -7.101131439208984
    4. ' sc' → logprob: -7.351131439208984
    5. ' scen' → logprob: -7.851131439208984
    6. ' sce' → logprob: -9.601131439208984
    7. 'sce' → logprob: -9.976131439208984
    8. 's' → logprob: -10.351131439208984
    9. 'scene' → logprob: -10.976131439208984
    10. '   ' → logprob: -11.226131439208984

Token 466: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028084407094866037
    2. 'in' → logprob: -5.877808570861816
    3. ' ' → logprob: -13.877808570861816
    4. '	in' → logprob: -14.002808570861816
    5. '<|end|>' → logprob: -14.502808570861816
    6. 's' → logprob: -15.002808570861816
    7. '_in' → logprob: -15.752808570861816
    8. '   ' → logprob: -16.1278076171875
    9. '_' → logprob: -16.3778076171875
    10. ' i' → logprob: -16.5028076171875

Token 467: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078997299075127
    2. ' self' → logprob: -5.5040788650512695
    3. '       ' → logprob: -15.00407886505127
    4. '   ' → logprob: -15.37907886505127
    5. '(self' → logprob: -17.254079818725586
    6. '	self' → logprob: -18.254079818725586
    7. '
' → logprob: -18.254079818725586
    8. '[self' → logprob: -18.629079818725586
    9. ' ' → logprob: -19.004079818725586
    10. '    ' → logprob: -19.254079818725586

Token 468: '.sc' (ID: 9411)
  Prédit: '.sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sc' → logprob: -3.8889261304575484e-06
    2. '.' → logprob: -12.625003814697266
    3. ' .' → logprob: -15.125003814697266
    4. '	sc' → logprob: -16.375003814697266
    5. '.scal' → logprob: -16.625003814697266
    6. '.s' → logprob: -17.000003814697266
    7. '=sc' → logprob: -18.375003814697266
    8. '.
' → logprob: -19.250003814697266
    9. 'sc' → logprob: -20.000003814697266
    10. '.se' → logprob: -20.750003814697266

Token 469: 'enarios' (ID: 89141)
  Prédit: 'enarios'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enarios' → logprob: -0.01867893524467945
    2. 'enario' → logprob: -4.018679141998291
    3. 'arios' → logprob: -7.643679141998291
    4. 'en' → logprob: -10.268678665161133
    5. 'ario' → logprob: -11.643678665161133
    6. 'ener' → logprob: -13.768678665161133
    7. '   ' → logprob: -13.893678665161133
    8. 'enar' → logprob: -14.018678665161133
    9. 'ar' → logprob: -14.268678665161133
    10. 'n' → logprob: -14.518678665161133

Token 470: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2262898087501526
    2. ':
' → logprob: -1.6012897491455078
    3. '           ' → logprob: -7.101289749145508
    4. ',' → logprob: -10.976289749145508
    5. '       ' → logprob: -11.101289749145508
    6. '):
' → logprob: -11.226289749145508
    7. ':
' → logprob: -12.976289749145508
    8. ':

' → logprob: -13.601289749145508
    9. '.' → logprob: -14.351289749145508
    10. '):' → logprob: -14.726289749145508

Token 471: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007376850116997957
    2. 'results' → logprob: -5.882376670837402
    3. '       ' → logprob: -6.007376670837402
    4. ' results' → logprob: -6.257376670837402
    5. '
' → logprob: -9.007376670837402
    6. 'result' → logprob: -10.132376670837402
    7. '   ' → logprob: -12.007376670837402
    8. '	results' → logprob: -12.257376670837402
    9. ' result' → logprob: -12.632376670837402
    10. '```' → logprob: -13.132376670837402

Token 472: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.6429921984672546
    2. ' results' → logprob: -1.1429922580718994
    3. '           ' → logprob: -1.8929922580718994
    4. 'result' → logprob: -5.64299201965332
    5. ' result' → logprob: -6.76799201965332
    6. '	results' → logprob: -10.14299201965332
    7. '       ' → logprob: -10.64299201965332
    8. 'res' → logprob: -11.14299201965332
    9. ' res' → logprob: -11.64299201965332
    10. '               ' → logprob: -11.64299201965332

Token 473: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00033558503491804004
    2. '.' → logprob: -8.000335693359375
    3. 'append' → logprob: -17.500335693359375
    4. ' .' → logprob: -17.750335693359375
    5. '.extend' → logprob: -17.750335693359375
    6. '.app' → logprob: -18.125335693359375
    7. ').' → logprob: -18.125335693359375
    8. '.push' → logprob: -18.250335693359375
    9. '.Append' → logprob: -18.875335693359375
    10. '.ap' → logprob: -18.875335693359375

Token 474: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0002622894535306841
    2. '(' → logprob: -8.250262260437012
    3. '(scene' → logprob: -14.875262260437012
    4. 'scenario' → logprob: -14.875262260437012
    5. '(
' → logprob: -15.375262260437012
    6. '((' → logprob: -17.125263214111328
    7. '(sc' → logprob: -18.125263214111328
    8. ' (' → logprob: -18.875263214111328
    9. ' scenario' → logprob: -19.375263214111328
    10. '(

' → logprob: -20.500263214111328

Token 475: 'cenario' (ID: 118492)
  Prédit: 'cenario'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cenario' → logprob: -5.6100132496794686e-05
    2. 'c' → logprob: -10.875056266784668
    3. '.c' → logprob: -11.000056266784668
    4. 'enario' → logprob: -11.625056266784668
    5. 'cen' → logprob: -12.250056266784668
    6. 'scenario' → logprob: -12.625056266784668
    7. 'cene' → logprob: -13.625056266784668
    8. '.' → logprob: -14.500056266784668
    9. '>' → logprob: -14.625056266784668
    10. '.sc' → logprob: -15.375056266784668

Token 476: '.maximum' (ID: 128678)
  Prédit: '.maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.maximum' → logprob: -1.1472419600977446e-06
    2. '.' → logprob: -14.250000953674316
    3. ' .' → logprob: -15.125000953674316
    4. '.minimum' → logprob: -17.750001907348633
    5. ').' → logprob: -17.875001907348633
    6. '.Maximum' → logprob: -18.250001907348633
    7. 'maximum' → logprob: -18.625001907348633
    8. ')' → logprob: -19.750001907348633
    9. '.max' → logprob: -21.250001907348633
    10. '.previous' → logprob: -22.125001907348633

Token 477: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -9.968312951968983e-06
    2. 'new' → logprob: -11.625009536743164
    3. 'New' → logprob: -14.375009536743164
    4. '_' → logprob: -15.625009536743164
    5. '_NEW' → logprob: -16.375009536743164
    6. '
' → logprob: -17.000009536743164
    7. ')_' → logprob: -17.500009536743164
    8. '```' → logprob: -17.500009536743164
    9. ' new' → logprob: -17.625009536743164
    10. '_total' → logprob: -18.000009536743164

Token 478: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.1472419600977446e-06
    2. 'total' → logprob: -13.750000953674316
    3. '_new' → logprob: -18.000001907348633
    4. ' total' → logprob: -19.625001907348633
    5. '_tot' → logprob: -19.875001907348633
    6. '_' → logprob: -19.875001907348633
    7. '_TOTAL' → logprob: -20.375001907348633
    8. 'Total' → logprob: -21.250001907348633
    9. '_to' → logprob: -21.625001907348633
    10. ')_' → logprob: -22.000001907348633

Token 479: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.000444850797066465
    2. '()' → logprob: -7.7504448890686035
    3. '())
' → logprob: -11.250444412231445
    4. ' ())' → logprob: -14.000444412231445
    5. '()
' → logprob: -15.750444412231445
    6. '())

' → logprob: -16.625444412231445
    7. '()))' → logprob: -17.000444412231445
    8. ')' → logprob: -17.250444412231445
    9. '();)' → logprob: -18.000444412231445
    10. '()]' → logprob: -18.250444412231445

Token 480: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022067606449127197
    2. '       ' → logprob: -3.8970675468444824
    3. 'return' → logprob: -7.647067546844482
    4. '
' → logprob: -7.772067546844482
    5. '        
' → logprob: -8.52206802368164
    6. ' return' → logprob: -8.52206802368164
    7. '   ' → logprob: -9.64706802368164
    8. '	return' → logprob: -9.89706802368164
    9. '    
' → logprob: -10.02206802368164
    10. '  
' → logprob: -11.27206802368164

Token 481: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16832304000854492
    2. ' return' → logprob: -1.918323040008545
    3. '       ' → logprob: -5.168323040008545
    4. '
' → logprob: -6.168323040008545
    5. '   ' → logprob: -8.418323516845703
    6. '	return' → logprob: -9.918323516845703
    7. '        
' → logprob: -12.793323516845703
    8. '
' → logprob: -13.418323516845703
    9. '    
' → logprob: -13.918323516845703
    10. ' ' → logprob: -14.918323516845703

Token 482: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.4740773141384125
    2. 'results' → logprob: -0.9740773439407349
    3. '	results' → logprob: -15.224077224731445
    4. '(results' → logprob: -16.599077224731445
    5. 'Results' → logprob: -19.224077224731445
    6. '.results' → logprob: -20.224077224731445
    7. 'result' → logprob: -20.349077224731445
    8. '_results' → logprob: -20.474077224731445
    9. '[' → logprob: -21.724077224731445
    10. ' resultados' → logprob: -22.724077224731445

Token 483: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 484: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15083515644073486
    2. '<|end|>' → logprob: -2.9008350372314453
    3. '```' → logprob: -3.6508350372314453
    4. 'a' → logprob: -4.025835037231445
    5. 'n' → logprob: -4.025835037231445
    6. 'def' → logprob: -4.025835037231445
    7. 'v' → logprob: -6.525835037231445
    8. 'd' → logprob: -7.025835037231445
    9. 'x' → logprob: -7.275835037231445
    10. '[' → logprob: -8.025835037231445

Token 485: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.002521561225876212
    2. ' solve' → logprob: -6.627521514892578
    3. ' run' → logprob: -7.127521514892578
    4. ' test' → logprob: -8.252521514892578
    5. ' process' → logprob: -9.377521514892578
    6. ' solution' → logprob: -11.502521514892578
    7. ' sample' → logprob: -11.752521514892578
    8. ' example' → logprob: -11.752521514892578
    9. ' parse' → logprob: -12.377521514892578
    10. '_main' → logprob: -12.627521514892578

Token 486: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.129266067640856e-05
    2. ' ():' → logprob: -10.875020980834961
    3. '():
' → logprob: -13.500020980834961
    4. '()' → logprob: -14.000020980834961
    5. '_' → logprob: -16.37502098083496
    6. '(' → logprob: -16.75002098083496
    7. '().' → logprob: -18.87502098083496
    8. '()>' → logprob: -19.00002098083496
    9. '(":' → logprob: -19.37502098083496
    10. '():
' → logprob: -19.50002098083496

Token 487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005329455249011517
    2. ' import' → logprob: -5.630329608917236
    3. ' n' → logprob: -7.755329608917236
    4. 'n' → logprob: -7.755329608917236
    5. ' calculator' → logprob: -8.380329132080078
    6. 'import' → logprob: -9.005329132080078
    7. ' c' → logprob: -9.380329132080078
    8. ' calc' → logprob: -9.505329132080078
    9. 'calculator' → logprob: -9.505329132080078
    10. 'c' → logprob: -9.880329132080078

Token 488: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.9891126155853271
    2. 'v' → logprob: -1.6141126155853271
    3. ' import' → logprob: -1.6141126155853271
    4. 'calc' → logprob: -2.614112615585327
    5. ' v' → logprob: -3.489112615585327
    6. '   ' → logprob: -3.739112615585327
    7. ' calc' → logprob: -3.864112615585327
    8. 'calculator' → logprob: -3.989112615585327
    9. 'vat' → logprob: -4.239112854003906
    10. 'n' → logprob: -4.364112854003906

Token 489: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5759416818618774
    2. ' sys' → logprob: -0.8259416818618774
    3. '=sys' → logprob: -13.200942039489746
    4. '	sys' → logprob: -15.450942039489746
    5. '(sys' → logprob: -16.07594108581543
    6. '_sys' → logprob: -16.70094108581543
    7. '.sys' → logprob: -17.57594108581543
    8. 'math' → logprob: -17.95094108581543
    9. ' math' → logprob: -19.20094108581543
    10. '_' → logprob: -20.20094108581543

Token 490: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.757085382938385
    2. '
' → logprob: -1.0070853233337402
    3. 'input' → logprob: -2.1320853233337402
    4. '    
' → logprob: -3.3820853233337402
    5. ' input' → logprob: -4.88208532333374
    6. 'for' → logprob: -5.63208532333374
    7. 'data' → logprob: -7.13208532333374
    8. ' for' → logprob: -8.007085800170898
    9. 'n' → logprob: -8.257085800170898
    10. ' 
' → logprob: -9.257085800170898

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03135557100176811
    2. ' input' → logprob: -3.656355619430542
    3. 'input' → logprob: -5.531355381011963
    4. ' lines' → logprob: -7.906355381011963
    5. ' for' → logprob: -8.406355857849121
    6. '    
' → logprob: -8.531355857849121
    7. ' data' → logprob: -9.531355857849121
    8. ' readline' → logprob: -9.656355857849121
    9. 'data' → logprob: -9.906355857849121
    10. 'for' → logprob: -10.156355857849121

Token 492: ' calculator' (ID: 44484)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1616085320711136
    2. '   ' → logprob: -2.2866084575653076
    3. 'input' → logprob: -3.7866084575653076
    4. ' for' → logprob: -4.161608695983887
    5. ' lines' → logprob: -5.036608695983887
    6. 'for' → logprob: -6.661608695983887
    7. ' data' → logprob: -7.036608695983887
    8. 'data' → logprob: -8.786608695983887
    9. ' n' → logprob: -8.911608695983887
    10. ' inputs' → logprob: -8.911608695983887

Token 493: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890267670154572
    2. '=' → logprob: -2.5789027214050293
    3. ' ' → logprob: -11.578902244567871
    4. '.' → logprob: -12.828902244567871
    5. '  ' → logprob: -15.453902244567871
    6. '	' → logprob: -15.578902244567871
    7. '   ' → logprob: -15.703902244567871
    8. ' =
' → logprob: -16.203903198242188
    9. '.=' → logprob: -16.328903198242188
    10. '＝' → logprob: -16.828903198242188

Token 494: ' VAT' (ID: 56356)
  Prédit: ' VAT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' VAT' → logprob: -0.0788901224732399
    2. 'VAT' → logprob: -2.578890085220337
    3. ' vat' → logprob: -15.328889846801758
    4. ' Vat' → logprob: -15.703889846801758
    5. 'V' → logprob: -17.328889846801758
    6. 'Vat' → logprob: -17.703889846801758
    7. ' VBA' → logprob: -18.578889846801758
    8. ' ' → logprob: -18.953889846801758
    9. '	V' → logprob: -18.953889846801758
    10. 'vat' → logprob: -19.703889846801758

Token 495: 'Price' (ID: 7417)
  Prédit: 'Price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Price' → logprob: -6.704273118884885e-07
    2. ' Price' → logprob: -14.875000953674316
    3. 'price' → logprob: -16.0
    4. 'Pric' → logprob: -16.125
    5. 'P' → logprob: -17.75
    6. '_price' → logprob: -18.0
    7. 'Prices' → logprob: -18.0
    8. 'Calculator' → logprob: -18.25
    9. '_PRICE' → logprob: -19.5
    10. 'Pricing' → logprob: -19.5

Token 496: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.011533454060554504
    2. 'Price' → logprob: -4.511533260345459
    3. 'calculator' → logprob: -7.636533260345459
    4. 'Pric' → logprob: -14.011533737182617
    5. ' calculator' → logprob: -14.386533737182617
    6. ' Calculator' → logprob: -14.886533737182617
    7. 'culator' → logprob: -14.886533737182617
    8. 'calc' → logprob: -16.386533737182617
    9. 'VAT' → logprob: -16.511533737182617
    10. '   ' → logprob: -16.636533737182617

Token 497: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5879547595977783
    2. 'for' → logprob: -1.0879547595977783
    3. '   ' → logprob: -2.3379547595977783
    4. ' for' → logprob: -5.212954521179199
    5. '    
' → logprob: -5.837954521179199
    6. '()
' → logprob: -6.712954521179199
    7. '()' → logprob: -8.0879545211792
    8. '  
' → logprob: -8.3379545211792
    9. 'while' → logprob: -8.5879545211792
    10. '
' → logprob: -8.8379545211792

Token 498: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011769934557378292
    2. 'for' → logprob: -4.886769771575928
    3. ' for' → logprob: -5.511769771575928
    4. '    
' → logprob: -9.261770248413086
    5. '
' → logprob: -11.511770248413086
    6. ' lines' → logprob: -11.761770248413086
    7. 'input' → logprob: -13.886770248413086
    8. ' input' → logprob: -14.511770248413086
    9. ' line' → logprob: -15.136770248413086
    10. '	for' → logprob: -15.386770248413086

Token 499: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.15037566423416138
    2. 'input' → logprob: -2.7753756046295166
    3. 'n' → logprob: -2.9003756046295166
    4. 'lines' → logprob: -4.025375843048096
    5. '   ' → logprob: -6.025375843048096
    6. ' for' → logprob: -7.525375843048096
    7. 'data' → logprob: -7.650375843048096
    8. ' lines' → logprob: -7.900375843048096
    9. 't' → logprob: -8.400375366210938
    10. 'num' → logprob: -9.025375366210938

Token 500: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4741222560405731
    2. 'line' → logprob: -0.9741222858428955
    3. 'l' → logprob: -11.099122047424316
    4. '	line' → logprob: -11.349122047424316
    5. '_line' → logprob: -11.849122047424316
    6. 'lin' → logprob: -12.599122047424316
    7. ' l' → logprob: -12.974122047424316
    8. ' lin' → logprob: -13.599122047424316
    9. ' linen' → logprob: -13.974122047424316
    10. '_' → logprob: -14.599122047424316

Token 501: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007113590254448354
    2. 'in' → logprob: -7.250711441040039
    3. 's' → logprob: -14.500711441040039
    4. ' ' → logprob: -15.500711441040039
    5. '_' → logprob: -15.625711441040039
    6. ' i' → logprob: -15.625711441040039
    7. 'n' → logprob: -16.12571144104004
    8. 'line' → logprob: -16.25071144104004
    9. 'import' → logprob: -17.00071144104004
    10. ' ' → logprob: -17.37571144104004

Token 502: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011048528365790844
    2. ' sys' → logprob: -4.511048316955566
    3. '=sys' → logprob: -14.636048316955566
    4. '	sys' → logprob: -15.511048316955566
    5. '(sys' → logprob: -16.761049270629883
    6. 'stdin' → logprob: -18.636049270629883
    7. 'import' → logprob: -19.636049270629883
    8. 's' → logprob: -19.886049270629883
    9. 'input' → logprob: -20.136049270629883
    10. '_sys' → logprob: -20.511049270629883

Token 503: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0016461454797536135
    2. 'stdin' → logprob: -6.626646041870117
    3. '.' → logprob: -8.126646041870117
    4. ' stdin' → logprob: -11.751646041870117
    5. '(stdin' → logprob: -12.126646041870117
    6. '.stdout' → logprob: -12.626646041870117
    7. '.argv' → logprob: -13.001646041870117
    8. 'in' → logprob: -13.126646041870117
    9. ' in' → logprob: -13.876646041870117
    10. '.readline' → logprob: -13.876646041870117

Token 504: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.4589536786079407
    2. ':' → logprob: -1.333953619003296
    3. ' in' → logprob: -2.458953619003296
    4. '.readlines' → logprob: -4.708953857421875
    5. '.' → logprob: -5.458953857421875
    6. '.strip' → logprob: -5.583953857421875
    7. '.rstrip' → logprob: -7.083953857421875
    8. ':
' → logprob: -7.583953857421875
    9. 'in' → logprob: -8.333953857421875
    10. ' readline' → logprob: -8.833953857421875

Token 505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000932421418838203
    2. ' if' → logprob: -7.625932216644287
    3. '   ' → logprob: -8.500932693481445
    4. '        
' → logprob: -9.500932693481445
    5. '    
' → logprob: -9.625932693481445
    6. '.strip' → logprob: -10.625932693481445
    7. '    ' → logprob: -11.125932693481445
    8. '
' → logprob: -11.750932693481445
    9. ',' → logprob: -11.750932693481445
    10. ' line' → logprob: -11.875932693481445

Token 506: ' if' (ID: 538)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.19198007881641388
    2. '       ' → logprob: -2.3169801235198975
    3. ' if' → logprob: -3.0669801235198975
    4. 'line' → logprob: -3.9419801235198975
    5. ' stripped' → logprob: -5.566979885101318
    6. '   ' → logprob: -6.066979885101318
    7. ' parts' → logprob: -6.441979885101318
    8. ' tokens' → logprob: -7.191979885101318
    9. 'if' (adapté à ' if') → logprob: -7.816979885101318
    10. '	line' → logprob: -8.316980361938477

Token 507: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3856275677680969
    2. ' not' → logprob: -1.3856275081634521
    3. 'line' → logprob: -3.010627508163452
    4. ' line' → logprob: -3.885627508163452
    5. '=line' → logprob: -11.760627746582031
    6. ' ' → logprob: -13.510627746582031
    7. '   ' → logprob: -13.885627746582031
    8. '(line' → logprob: -14.135627746582031
    9. '#line' → logprob: -14.260627746582031
    10. 'n' → logprob: -14.510627746582031

Token 508: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5759395360946655
    2. 'line' → logprob: -0.8259395360946655
    3. '	line' → logprob: -16.700939178466797
    4. '(line' → logprob: -18.325939178466797
    5. '=line' → logprob: -18.325939178466797
    6. '#line' → logprob: -19.075939178466797
    7. 'ine' → logprob: -20.700939178466797
    8. '_line' → logprob: -20.700939178466797
    9. '[line' → logprob: -20.700939178466797
    10. '
' → logprob: -20.700939178466797

Token 509: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.014181148260831833
    2. '.' → logprob: -4.264181137084961
    3. '.rstrip' → logprob: -11.764181137084961
    4. '.startswith' → logprob: -11.889181137084961
    5. ' .' → logprob: -13.514181137084961
    6. 'strip' → logprob: -13.764181137084961
    7. ':' → logprob: -15.264181137084961
    8. ' strip' → logprob: -16.38918113708496
    9. '.chomp' → logprob: -16.51418113708496
    10. '.readline' → logprob: -16.76418113708496

Token 510: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06210874393582344
    2. '():
' → logprob: -2.8121087551116943
    3. '()' → logprob: -9.187108993530273
    4. ':' → logprob: -10.437108993530273
    5. '():
' → logprob: -11.937108993530273
    6. ' ():' → logprob: -13.562108993530273
    7. '():

' → logprob: -13.812108993530273
    8. '()==' → logprob: -15.562108993530273
    9. '().' → logprob: -15.687108993530273
    10. '(' → logprob: -16.187108993530273

Token 511: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4290621280670166
    2. '           ' → logprob: -1.0540621280670166
    3. '   ' → logprob: -8.304061889648438
    4. ' break' → logprob: -9.679061889648438
    5. '               ' → logprob: -10.929061889648438
    6. ':' → logprob: -12.179061889648438
    7. 'break' → logprob: -12.429061889648438
    8. '	break' → logprob: -12.554061889648438
    9. '	       ' → logprob: -12.679061889648438
    10. '<|end|>' → logprob: -12.929061889648438

Token 512: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.07026039808988571
    2. ' break' → logprob: -2.8202602863311768
    3. '           ' → logprob: -4.820260524749756
    4. '	break' → logprob: -8.945260047912598
    5. '               ' → logprob: -10.445260047912598
    6. '       ' → logprob: -10.570260047912598
    7. 'continue' (adapté à ' continue') → logprob: -12.195260047912598
    8. '   ' → logprob: -13.320260047912598
    9. '_break' → logprob: -13.820260047912598
    10. 'b' → logprob: -14.695260047912598

Token 513: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014358828775584698
    2. '        
' → logprob: -9.250144004821777
    3. '   ' → logprob: -10.375144004821777
    4. '
' → logprob: -12.875144004821777
    5. '    
' → logprob: -12.875144004821777
    6. '      ' → logprob: -13.000144004821777
    7. '           ' → logprob: -13.500144004821777
    8. ' tokens' → logprob: -13.625144004821777
    9. 'tokens' → logprob: -13.875144004821777
    10. '<|end|>' → logprob: -14.250144004821777

Token 514: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.333223139634356e-05
    2. '   ' → logprob: -11.000033378601074
    3. '        
' → logprob: -11.750033378601074
    4. '           ' → logprob: -12.500033378601074
    5. '      ' → logprob: -13.375033378601074
    6. ' tokens' → logprob: -14.500033378601074
    7. ' parts' → logprob: -14.750033378601074
    8. '    
' → logprob: -15.000033378601074
    9. 'tokens' → logprob: -15.125033378601074
    10. '    ' → logprob: -15.250033378601074

Token 515: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0016166195273399353
    2. ' x' → logprob: -7.126616477966309
    3. 'parts' → logprob: -7.501616477966309
    4. ' parts' → logprob: -8.876616477966309
    5. '       ' → logprob: -9.501616477966309
    6. 'params' → logprob: -11.126616477966309
    7. 'tokens' → logprob: -11.126616477966309
    8. 'data' → logprob: -12.126616477966309
    9. 'values' → logprob: -12.876616477966309
    10. 'args' → logprob: -12.876616477966309

Token 516: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017588881019037217
    2. ',y' → logprob: -8.750175476074219
    3. ' ,' → logprob: -12.375175476074219
    4. ',s' → logprob: -12.625175476074219
    5. ',x' → logprob: -12.875175476074219
    6. ',user' → logprob: -13.625175476074219
    7. ',n' → logprob: -14.000175476074219
    8. ',int' → logprob: -14.625175476074219
    9. ',...' → logprob: -14.875175476074219
    10. 's' → logprob: -15.000175476074219

Token 517: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0013305948814377189
    2. ' y' → logprob: -6.626330375671387
    3. '<|end|>' → logprob: -12.751330375671387
    4. ' ' → logprob: -14.376330375671387
    5. '  ' → logprob: -15.126330375671387
    6. '    ' → logprob: -15.251330375671387
    7. '‘y' → logprob: -15.876330375671387
    8. '=' → logprob: -16.126331329345703
    9. 's' → logprob: -16.376331329345703
    10. '	y' → logprob: -16.751331329345703

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.47495681833243e-05
    2. '=' → logprob: -10.750024795532227
    3. ' ,' → logprob: -13.125024795532227
    4. ' =' → logprob: -13.875024795532227
    5. '<|end|>' → logprob: -16.125024795532227
    6. 's' → logprob: -16.375024795532227
    7. '‌,' → logprob: -17.875024795532227
    8. ',s' → logprob: -18.000024795532227
    9. '_,' → logprob: -18.250024795532227
    10. ',...' → logprob: -18.375024795532227

Token 519: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12692968547344208
    2. ' s' → logprob: -2.126929759979248
    3. 'z' → logprob: -13.87692928314209
    4. ' ' → logprob: -15.12692928314209
    5. '  ' → logprob: -16.001930236816406
    6. '	s' → logprob: -16.751930236816406
    7. ' z' → logprob: -16.751930236816406
    8. '   ' → logprob: -17.001930236816406
    9. '_s' → logprob: -17.126930236816406
    10. '    ' → logprob: -17.876930236816406

Token 520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192946195602417
    2. ' =' → logprob: -1.501929521560669
    3. ',' → logprob: -15.00192928314209
    4. '=line' → logprob: -16.501930236816406
    5. ')' → logprob: -17.126930236816406
    6. '＝' → logprob: -17.251930236816406
    7. '<|end|>' → logprob: -18.126930236816406
    8. ')=' → logprob: -18.751930236816406
    9. '=

' → logprob: -18.751930236816406
    10. '=int' → logprob: -18.876930236816406

Token 521: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.31340402364730835
    2. 'map' → logprob: -1.3134040832519531
    3. 'line' → logprob: -9.438404083251953
    4. ' line' → logprob: -9.688404083251953
    5. '(map' → logprob: -15.188404083251953
    6. '[' → logprob: -15.813404083251953
    7. '   ' → logprob: -15.938404083251953
    8. '	map' → logprob: -16.313404083251953
    9. '[line' → logprob: -17.188404083251953
    10. '.map' → logprob: -17.563404083251953

Token 522: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002549623604863882
    2. '(' → logprob: -6.002549648284912
    3. '(str' → logprob: -9.877549171447754
    4. 'int' → logprob: -11.127549171447754
    5. '(lambda' → logprob: -12.377549171447754
    6. '(in' → logprob: -13.377549171447754
    7. '[int' → logprob: -14.627549171447754
    8. ' int' → logprob: -14.752549171447754
    9. '<int' → logprob: -14.877549171447754
    10. '(
' → logprob: -15.002549171447754

Token 523: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.005769872572273016
    2. ')' → logprob: -5.505769729614258
    3. 'line' → logprob: -6.630769729614258
    4. ' line' → logprob: -8.630769729614258
    5. '=line' → logprob: -9.630769729614258
    6. '(' → logprob: -9.755769729614258
    7. ',line' → logprob: -10.005769729614258
    8. ')(' → logprob: -11.880769729614258
    9. '[line' → logprob: -11.880769729614258
    10. '	line' → logprob: -12.255769729614258

Token 524: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.005234121344983578
    2. ' line' → logprob: -5.255234241485596
    3. '(line' → logprob: -15.380233764648438
    4. '	line' → logprob: -16.755233764648438
    5. '=line' → logprob: -17.755233764648438
    6. '#line' → logprob: -18.630233764648438
    7. '[line' → logprob: -19.005233764648438
    8. ',line' → logprob: -19.880233764648438
    9. '_line' → logprob: -20.005233764648438
    10. ')' → logprob: -20.005233764648438

Token 525: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.20418612658977509
    2. '().' → logprob: -1.7041860818862915
    3. '.split' → logprob: -6.204185962677002
    4. '.' → logprob: -7.829185962677002
    5. ' .' → logprob: -8.20418643951416
    6. '.rstrip' → logprob: -9.82918643951416
    7. '.readline' → logprob: -11.45418643951416
    8. '()' → logprob: -12.20418643951416
    9. '.strptime' → logprob: -13.57918643951416
    10. 'strip' → logprob: -13.57918643951416

Token 526: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8624639324116288e-06
    2. '()' → logprob: -13.250001907348633
    3. ' ().' → logprob: -18.125001907348633
    4. '.split' → logprob: -19.000001907348633
    5. '   ' → logprob: -20.125001907348633
    6. '()
' → logprob: -21.000001907348633
    7. '(' → logprob: -21.250001907348633
    8. '())' → logprob: -21.625001907348633
    9. '().'' → logprob: -22.000001907348633
    10. '.' → logprob: -22.000001907348633

Token 527: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.125
    3. '(split' → logprob: -16.25
    4. '.split' → logprob: -18.875
    5. 'spl' → logprob: -20.125
    6. 'rstrip' → logprob: -20.875
    7. 'strip' → logprob: -21.0
    8. '   ' → logprob: -21.625
    9. 'sp' → logprob: -21.875
    10. ')' → logprob: -21.875

Token 528: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03891902044415474
    2. '()' → logprob: -3.288918972015381
    3. '('' → logprob: -7.913918972015381
    4. ')' → logprob: -8.413919448852539
    5. '(' → logprob: -8.413919448852539
    6. '()))' → logprob: -10.038919448852539
    7. '())
' → logprob: -11.288919448852539
    8. ' ())' → logprob: -12.788919448852539
    9. '()]' → logprob: -13.038919448852539
    10. '(','' → logprob: -13.163919448852539

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004405905492603779
    2. '   ' → logprob: -6.129405975341797
    3. 'calculator' → logprob: -6.129405975341797
    4. 'cal' → logprob: -11.254405975341797
    5. '<|end|>' → logprob: -11.504405975341797
    6. '	cal' → logprob: -12.129405975341797
    7. '        
' → logprob: -12.504405975341797
    8. ' calculator' → logprob: -12.754405975341797
    9. '           ' → logprob: -13.504405975341797
    10. '
' → logprob: -14.129405975341797

Token 530: ' if' (ID: 538)
  Prédit: 'calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculator' → logprob: -0.016088098287582397
    2. ' calculator' → logprob: -4.391088008880615
    3. '   ' → logprob: -5.641088008880615
    4. 'cal' → logprob: -11.391088485717773
    5. '       ' → logprob: -12.391088485717773
    6. '	cal' → logprob: -12.766088485717773
    7. '    
' → logprob: -13.766088485717773
    8. '
' → logprob: -14.766088485717773
    9. '```' → logprob: -14.766088485717773
    10. '  ' → logprob: -14.891088485717773

Token 531: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10214376449584961
    2. ' x' → logprob: -2.3521437644958496
    3. 's' → logprob: -6.47714376449585
    4. ' s' → logprob: -8.227144241333008
    5. '(x' → logprob: -9.102144241333008
    6. ' (' → logprob: -11.102144241333008
    7. ' ' → logprob: -13.227144241333008
    8. '(s' → logprob: -14.352144241333008
    9. '(' → logprob: -14.477144241333008
    10. '{x' → logprob: -15.727144241333008

Token 532: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6933174133300781
    2. ' ==' → logprob: -0.6933174133300781
    3. '=' → logprob: -8.818317413330078
    4. '<' → logprob: -12.568317413330078
    5. '>' → logprob: -12.568317413330078
    6. ' <' → logprob: -12.818317413330078
    7. ' ' → logprob: -12.818317413330078
    8. 'x' → logprob: -12.943317413330078
    9. ' =' → logprob: -13.068317413330078
    10. '0' → logprob: -13.818317413330078

Token 533: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00036323294625617564
    2. 'y' → logprob: -8.62536334991455
    3. ' ' → logprob: -8.62536334991455
    4. ' y' → logprob: -13.00036334991455
    5. '-' → logprob: -13.75036334991455
    6. '   ' → logprob: -16.500362396240234
    7. '  ' → logprob: -16.625362396240234
    8. '```' → logprob: -16.750362396240234
    9. '
' → logprob: -16.937862396240234
    10. '#' → logprob: -16.937862396240234

Token 534: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018968674121424556
    2. 'y' → logprob: -6.376896858215332
    3. ' ' → logprob: -8.626896858215332
    4. '-' → logprob: -11.751896858215332
    5. ' y' → logprob: -12.126896858215332
    6. '```' → logprob: -15.064396858215332
    7. 's' → logprob: -15.251896858215332
    8. '   ' → logprob: -15.314396858215332
    9. '

' → logprob: -15.814396858215332
    10. '
' → logprob: -15.876896858215332

Token 535: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.693147599697113
    2. 'and' → logprob: -0.693147599697113
    3. ' ' → logprob: -15.568147659301758
    4. 'a' → logprob: -16.318147659301758
    5. '0' → logprob: -16.943147659301758
    6. '	and' → logprob: -16.943147659301758
    7. ' or' → logprob: -17.318147659301758
    8. '<|end|>' → logprob: -17.443147659301758
    9. ' a' → logprob: -17.568147659301758
    10. '   ' → logprob: -18.193147659301758

Token 536: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018151111900806427
    2. ' y' → logprob: -4.01815128326416
    3. '   ' → logprob: -14.39315128326416
    4. '	y' → logprob: -14.76815128326416
    5. '  ' → logprob: -15.89315128326416
    6. ' ' → logprob: -16.518150329589844
    7. 'x' → logprob: -17.643150329589844
    8. ' ' → logprob: -17.768150329589844
    9. 'Y' → logprob: -18.268150329589844
    10. '    ' → logprob: -18.518150329589844

Token 537: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4740796685218811
    2. '==' → logprob: -0.9740796685218811
    3. '<|end|>' → logprob: -13.224080085754395
    4. '=' → logprob: -15.849080085754395
    5. '===' → logprob: -15.849080085754395
    6. '==
' → logprob: -15.849080085754395
    7. ' ' → logprob: -15.849080085754395
    8. ' =' → logprob: -16.849079132080078
    9. '0' → logprob: -16.849079132080078
    10. ']==' → logprob: -16.974079132080078

Token 538: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0052342405542731285
    2. ' ' → logprob: -5.255234241485596
    3. 's' → logprob: -15.880233764648438
    4. '  ' → logprob: -16.505233764648438
    5. '   ' → logprob: -16.505233764648438
    6. ' ' → logprob: -17.380233764648438
    7. ' and' → logprob: -17.817733764648438
    8. ' s' → logprob: -17.880233764648438
    9. 'and' → logprob: -18.380233764648438
    10. '۰' → logprob: -18.692733764648438

Token 539: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -17.00020408630371
    4. 's' → logprob: -17.12520408630371
    5. '  ' → logprob: -17.37520408630371
    6. '۰' → logprob: -19.31270408630371
    7. '    ' → logprob: -19.56270408630371
    8. '
' → logprob: -19.62520408630371
    9. '00' → logprob: -19.68770408630371
    10. '       ' → logprob: -19.87520408630371

Token 540: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0036004253197461367
    2. 'and' → logprob: -5.628600597381592
    3. '0' → logprob: -15.128600120544434
    4. ' ' → logprob: -16.00360107421875
    5. '	and' → logprob: -17.12860107421875
    6. ' и' → logprob: -18.00360107421875
    7. '           ' → logprob: -18.12860107421875
    8. '   ' → logprob: -18.25360107421875
    9. '<|end|>' → logprob: -18.25360107421875
    10. ',' → logprob: -18.75360107421875

Token 541: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0067154900170862675
    2. ' s' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.381715774536133
    4. '0' → logprob: -17.381715774536133
    5. ' ' → logprob: -18.006715774536133
    6. '	s' → logprob: -18.631715774536133
    7. '  ' → logprob: -18.631715774536133
    8. '    ' → logprob: -19.881715774536133
    9. '       ' → logprob: -20.381715774536133
    10. '_s' → logprob: -20.756715774536133

Token 542: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10021281987428665
    2. ' ==' → logprob: -2.350212812423706
    3. '=' → logprob: -12.350213050842285
    4. ')==' → logprob: -14.975213050842285
    5. '==
' → logprob: -15.225213050842285
    6. '===' → logprob: -15.225213050842285
    7. '0' → logprob: -15.350213050842285
    8. '<|end|>' → logprob: -15.600213050842285
    9. '()==' → logprob: -15.725213050842285
    10. ' =' → logprob: -16.22521209716797

Token 543: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.628177642822266
    4. '  ' → logprob: -18.253177642822266
    5. ' ' → logprob: -19.253177642822266
    6. '=' → logprob: -19.878177642822266
    7. '۰' → logprob: -19.940677642822266
    8. 's' → logprob: -20.065677642822266
    9. '```' → logprob: -20.378177642822266
    10. '00' → logprob: -21.065677642822266

Token 544: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -19.25004005432129
    4. '۰' → logprob: -20.25004005432129
    5. '  ' → logprob: -20.37504005432129
    6. '000' → logprob: -21.37504005432129
    7. '০' → logprob: -21.75004005432129
    8. '00' → logprob: -21.81254005432129
    9. '０' → logprob: -21.93754005432129
    10. '०' → logprob: -21.93754005432129

Token 545: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20168092846870422
    2. ':
' → logprob: -1.7016808986663818
    3. '       ' → logprob: -8.826681137084961
    4. '           ' → logprob: -9.201681137084961
    5. '   ' → logprob: -11.326681137084961
    6. ':return' → logprob: -12.701681137084961
    7. '():
' → logprob: -13.576681137084961
    8. ':
' → logprob: -13.826681137084961
    9. '):
' → logprob: -13.826681137084961
    10. ':

' → logprob: -14.826681137084961

Token 546: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.9292415749514475e-05
    2. '       ' → logprob: -10.250039100646973
    3. '               ' → logprob: -13.375039100646973
    4. 'break' → logprob: -14.250039100646973
    5. '   ' → logprob: -14.500039100646973
    6. '		' → logprob: -14.875039100646973
    7. ' break' → logprob: -15.000039100646973
    8. '          ' → logprob: -15.250039100646973
    9. '	       ' → logprob: -17.00004005432129
    10. '
' → logprob: -17.37504005432129

Token 547: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.30760473012924194
    2. ' break' → logprob: -1.8076047897338867
    3. '           ' → logprob: -2.3076047897338867
    4. '       ' → logprob: -7.057604789733887
    5. '	break' → logprob: -8.432604789733887
    6. 'return' → logprob: -9.057604789733887
    7. '               ' → logprob: -10.682604789733887
    8. '   ' → logprob: -10.932604789733887
    9. '_break' → logprob: -12.432604789733887
    10. 'b' → logprob: -13.057604789733887

Token 548: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029912516474723816
    2. '   ' → logprob: -5.877991199493408
    3. '
' → logprob: -8.877991676330566
    4. '        
' → logprob: -10.752991676330566
    5. 'calculator' → logprob: -11.627991676330566
    6. '<|end|>' → logprob: -12.002991676330566
    7. '    
' → logprob: -12.252991676330566
    8. '           ' → logprob: -13.377991676330566
    9. '  
' → logprob: -13.752991676330566
    10. ',' → logprob: -14.877991676330566

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4163496494293213
    2. '   ' → logprob: -1.1663496494293213
    3. 'calculator' → logprob: -3.9163496494293213
    4. '	cal' → logprob: -5.166349411010742
    5. '
' → logprob: -6.916349411010742
    6. 'cal' → logprob: -7.166349411010742
    7. '    
' → logprob: -7.541349411010742
    8. '        
' → logprob: -7.541349411010742
    9. '<|end|>' → logprob: -8.291349411010742
    10. '    ' → logprob: -9.666349411010742

Token 550: ' calculator' (ID: 44484)
  Prédit: 'calculator'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculator' (adapté à ' calculator') → logprob: -0.3393077552318573
    2. '   ' → logprob: -1.3393077850341797
    3. '       ' → logprob: -4.33930778503418
    4. ' calculator' → logprob: -4.46430778503418
    5. 'cal' → logprob: -6.96430778503418
    6. '	cal' → logprob: -8.83930778503418
    7. '    
' → logprob: -11.58930778503418
    8. '  ' → logprob: -11.71430778503418
    9. '```' → logprob: -11.96430778503418
    10. '
' → logprob: -12.21430778503418

Token 551: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0005555360112339258
    2. '.' → logprob: -7.500555515289307
    3. '.append' → logprob: -13.500555992126465
    4. ' .' → logprob: -14.375555992126465
    5. '   ' → logprob: -14.875555992126465
    6. '.setdefault' → logprob: -17.12555503845215
    7. '`.' → logprob: -17.25055503845215
    8. '.Add' → logprob: -17.37555503845215
    9. '.enqueue' → logprob: -17.50055503845215
    10. ')add' → logprob: -17.62555503845215

Token 552: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -3.128163257315464e-07
    2. 'scenario' → logprob: -15.625
    3. '_' → logprob: -16.875
    4. '_scene' → logprob: -18.125
    5. '_sc' → logprob: -18.25
    6. ' scenario' → logprob: -18.25
    7. 's' → logprob: -18.625
    8. '\' → logprob: -18.75
    9. 'Scenario' → logprob: -19.125
    10. '##_' → logprob: -19.625

Token 553: 'cenario' (ID: 118492)
  Prédit: 'cenario'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cenario' → logprob: -1.747814349073451e-05
    2. 'enario' → logprob: -11.250017166137695
    3. 'scenario' → logprob: -12.750017166137695
    4. 'cen' → logprob: -14.500017166137695
    5. '_' → logprob: -14.625017166137695
    6. 'c' → logprob: -14.750017166137695
    7. 'Scenario' → logprob: -17.250017166137695
    8. '_c' → logprob: -17.500017166137695
    9. 'cean' → logprob: -17.625017166137695
    10. '``' → logprob: -18.250017166137695

Token 554: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.250001907348633
    3. '(
' → logprob: -17.000001907348633
    4. ' (' → logprob: -18.625001907348633
    5. 'x' → logprob: -19.000001907348633
    6. '(y' → logprob: -20.375001907348633
    7. '((' → logprob: -21.000001907348633
    8. '   ' → logprob: -22.375001907348633
    9. '(line' → logprob: -22.750001907348633
    10. '```' → logprob: -23.000001907348633

Token 555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045914790825918317
    2. ',y' → logprob: -8.000458717346191
    3. ' ,' → logprob: -9.000458717346191
    4. ',
' → logprob: -16.250459671020508
    5. 'y' → logprob: -16.375459671020508
    6. '   ' → logprob: -17.125459671020508
    7. '‌,' → logprob: -17.625459671020508
    8. ',Y' → logprob: -19.500459671020508
    9. ')' → logprob: -19.875459671020508
    10. '=' → logprob: -20.000459671020508

Token 556: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03804194927215576
    2. ' y' → logprob: -3.2880420684814453
    3. '<|end|>' → logprob: -14.788042068481445
    4. 's' → logprob: -16.663042068481445
    5. ' ' → logprob: -16.788042068481445
    6. '	y' → logprob: -17.413042068481445
    7. ')y' → logprob: -17.788042068481445
    8. '    ' → logprob: -17.913042068481445
    9. '
' → logprob: -19.538042068481445
    10. '   ' → logprob: -19.663042068481445

Token 557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003464289184194058
    2. ',s' → logprob: -8.000346183776855
    3. ' ,' → logprob: -11.500346183776855
    4. 's' → logprob: -14.000346183776855
    5. ',
' → logprob: -17.375347137451172
    6. ')' → logprob: -18.750347137451172
    7. '```' → logprob: -19.250347137451172
    8. '),' → logprob: -19.375347137451172
    9. '‌,' → logprob: -19.375347137451172
    10. '   ' → logprob: -19.500347137451172

Token 558: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00033546582562848926
    2. ' s' → logprob: -8.000335693359375
    3. '   ' → logprob: -19.375335693359375
    4. ')' → logprob: -20.250335693359375
    5. '	s' → logprob: -20.250335693359375
    6. ' ' → logprob: -20.500335693359375
    7. '
' → logprob: -20.625335693359375
    8. ')s' → logprob: -21.000335693359375
    9. '`s' → logprob: -21.250335693359375
    10. '_s' → logprob: -21.250335693359375

Token 559: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004952482995577157
    2. ')
' → logprob: -7.625495433807373
    3. '   ' → logprob: -12.125494956970215
    4. ' )' → logprob: -14.625494956970215
    5. ')return' → logprob: -15.375494956970215
    6. '<|end|>' → logprob: -15.500494956970215
    7. '       ' → logprob: -15.875494956970215
    8. ')

' → logprob: -15.875494956970215
    9. ')
' → logprob: -16.37549591064453
    10. '),' → logprob: -16.75049591064453

Token 560: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003433296224102378
    2. ' results' → logprob: -8.750343322753906
    3. 'results' → logprob: -9.750343322753906
    4. '
' → logprob: -9.875343322753906
    5. '    
' → logprob: -10.875343322753906
    6. ' result' → logprob: -11.000343322753906
    7. 'print' → logprob: -11.125343322753906
    8. 'result' → logprob: -11.375343322753906
    9. ' print' → logprob: -11.625343322753906
    10. ' for' → logprob: -12.750343322753906

Token 561: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.6217471957206726
    2. ' results' → logprob: -0.8717471957206726
    3. '   ' → logprob: -3.6217472553253174
    4. 'for' → logprob: -4.621747016906738
    5. ' for' → logprob: -4.871747016906738
    6. 'result' → logprob: -8.121747016906738
    7. '	results' → logprob: -9.621747016906738
    8. 'res' → logprob: -10.121747016906738
    9. '    
' → logprob: -10.121747016906738
    10. ' result' → logprob: -10.496747016906738

Token 562: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10033261030912399
    2. '=' → logprob: -2.350332498550415
    3. ':' → logprob: -9.600332260131836
    4. ' =
' → logprob: -11.100332260131836
    5. '   ' → logprob: -11.100332260131836
    6. '.' → logprob: -11.225332260131836
    7. ' ' → logprob: -11.600332260131836
    8. '_' → logprob: -13.725332260131836
    9. '=
' → logprob: -13.725332260131836
    10. '=[]
' → logprob: -14.850332260131836

Token 563: ' calculator' (ID: 44484)
  Prédit: 'calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculator' → logprob: -0.1602245420217514
    2. ' calculator' → logprob: -1.9102245569229126
    3. 'cal' → logprob: -15.535224914550781
    4. '   ' → logprob: -15.910224914550781
    5. 'Calculator' → logprob: -17.28522491455078
    6. '	cal' → logprob: -18.16022491455078
    7. 'calc' → logprob: -18.41022491455078
    8. 'calcul' → logprob: -19.41022491455078
    9. ' calculators' → logprob: -20.28522491455078
    10. ' calcular' → logprob: -20.41022491455078

Token 564: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.0004315036640036851
    2. '.' → logprob: -7.750431537628174
    3. '.calculate' → logprob: -14.250431060791016
    4. ' .' → logprob: -16.750431060791016
    5. '.compile' → logprob: -18.125431060791016
    6. 'compute' → logprob: -18.250431060791016
    7. '   ' → logprob: -18.500431060791016
    8. '.com' → logprob: -19.000431060791016
    9. '.
' → logprob: -19.125431060791016
    10. '.concatenate' → logprob: -19.125431060791016

Token 565: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -1.6240566083070007e-06
    2. 'results' → logprob: -14.125001907348633
    3. '_result' → logprob: -14.750001907348633
    4. '_res' → logprob: -15.375001907348633
    5. ' _' → logprob: -15.875001907348633
    6. '\' → logprob: -17.125001907348633
    7. '_' → logprob: -17.625001907348633
    8. '```' → logprob: -18.250001907348633
    9. '"_' → logprob: -18.750001907348633
    10. '_values' → logprob: -18.875001907348633

Token 566: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.31331607699394226
    2. '()' → logprob: -1.3133161067962646
    3. '()
' → logprob: -9.938316345214844
    4. '()

' → logprob: -12.313316345214844
    5. '(
' → logprob: -13.813316345214844
    6. '():
' → logprob: -15.938316345214844
    7. 'for' → logprob: -16.438316345214844
    8. '   ' → logprob: -16.438316345214844
    9. '()\' → logprob: -16.438316345214844
    10. '()`' → logprob: -16.938316345214844

Token 567: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025101432111114264
    2. 'for' → logprob: -6.002510070800781
    3. ' for' → logprob: -10.377510070800781
    4. '	for' → logprob: -12.627510070800781
    5. '
' → logprob: -17.00251007080078
    6. '    
' → logprob: -17.25251007080078
    7. '       ' → logprob: -17.50251007080078
    8. '```' → logprob: -18.00251007080078
    9. '   ' → logprob: -19.37751007080078
    10. '<|end|>' → logprob: -20.62751007080078

Token 568: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00016861737822182477
    2. '   ' → logprob: -8.750168800354004
    3. ' for' → logprob: -11.500168800354004
    4. '	for' → logprob: -17.875167846679688
    5. '
' → logprob: -19.375167846679688
    6. '```' → logprob: -19.750167846679688
    7. '    
' → logprob: -20.875167846679688
    8. 'import' → logprob: -21.625167846679688
    9. 'print' → logprob: -21.750167846679688
    10. 'from' → logprob: -23.125167846679688

Token 569: ' r' (ID: 428)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5275287628173828
    2. 'result' → logprob: -1.5275287628173828
    3. ' res' → logprob: -1.7775287628173828
    4. ' result' → logprob: -4.027528762817383
    5. 'r' → logprob: -5.277528762817383
    6. ' r' → logprob: -7.027528762817383
    7. '   ' → logprob: -14.027528762817383
    8. 're' → logprob: -15.527528762817383
    9. 'total' → logprob: -16.027528762817383
    10. ' ' → logprob: -16.402528762817383

Token 570: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006285638664849102
    2. 'in' → logprob: -7.375628471374512
    3. ' ' → logprob: -14.500628471374512
    4. ' i' → logprob: -14.500628471374512
    5. 'es' → logprob: -14.875628471374512
    6. 'e' → logprob: -15.500628471374512
    7. 'i' → logprob: -15.750628471374512
    8. '  ' → logprob: -16.500629425048828
    9. '	in' → logprob: -16.500629425048828
    10. 'n' → logprob: -17.500629425048828

Token 571: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0485873706638813
    2. ' results' → logprob: -3.0485873222351074
    3. '(results' → logprob: -16.798587799072266
    4. '	results' → logprob: -18.673587799072266
    5. 'result' → logprob: -18.798587799072266
    6. '.results' → logprob: -20.173587799072266
    7. 'Results' → logprob: -20.423587799072266
    8. '_results' → logprob: -20.548587799072266
    9. ' resultados' → logprob: -23.673587799072266
    10. 'r' → logprob: -24.673587799072266

Token 572: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.041946034878492355
    2. ':
' → logprob: -3.6669459342956543
    3. 'print' → logprob: -4.291945934295654
    4. '   ' → logprob: -7.541945934295654
    5. '.print' → logprob: -7.541945934295654
    6. ' print' → logprob: -8.291946411132812
    7. '.println' → logprob: -9.416946411132812
    8. '(print' → logprob: -9.791946411132812
    9. '	print' → logprob: -9.916946411132812
    10. ',' → logprob: -9.916946411132812

Token 573: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004429762717336416
    2. ' print' → logprob: -5.879429817199707
    3. 'print' → logprob: -7.004429817199707
    4. '   ' → logprob: -7.254429817199707
    5. '
' → logprob: -13.254429817199707
    6. '    
' → logprob: -13.504429817199707
    7. '           ' → logprob: -13.879429817199707
    8. '     ' → logprob: -14.004429817199707
    9. '	print' → logprob: -14.004429817199707
    10. '      ' → logprob: -14.379429817199707

Token 574: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0019294669618830085
    2. ' print' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.00192928314209
    4. '       ' → logprob: -20.626930236816406
    5. '	print' → logprob: -20.751930236816406
    6. '```' → logprob: -21.126930236816406
    7. 'pr' → logprob: -22.876930236816406
    8. 'println' → logprob: -23.251930236816406
    9. 'printf' → logprob: -23.376930236816406
    10. '.print' → logprob: -23.501930236816406

Token 575: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -5.848420551046729e-05
    2. '(' → logprob: -9.7500581741333
    3. 'r' → logprob: -16.625059127807617
    4. '(f' → logprob: -18.000059127807617
    5. '(
' → logprob: -18.625059127807617
    6. '()' → logprob: -20.125059127807617
    7. '(int' → logprob: -20.250059127807617
    8. '((' → logprob: -21.125059127807617
    9. ' r' → logprob: -21.875059127807617
    10. '(

' → logprob: -22.375059127807617

Token 576: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.306760805164231e-05
    2. '()' → logprob: -11.75001335144043
    3. '())' → logprob: -12.25001335144043
    4. ' )' → logprob: -15.62501335144043
    5. ')
' → logprob: -16.37501335144043
    6. '))' → logprob: -17.62501335144043
    7. ')`' → logprob: -17.62501335144043
    8. '(' → logprob: -17.87501335144043
    9. '   ' → logprob: -18.37501335144043
    10. '}' → logprob: -18.75001335144043

Token 577: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.7432603272027336e-06
    2. ' if' → logprob: -13.875001907348633
    3. '```' → logprob: -14.500001907348633
    4. 'main' → logprob: -15.500001907348633
    5. '#' → logprob: -18.250001907348633
    6. '#if' → logprob: -19.375001907348633
    7. '
' → logprob: -19.375001907348633
    8. '\' → logprob: -19.500001907348633
    9. '<|end|>' → logprob: -19.625001907348633
    10. 'If' → logprob: -20.000001907348633

Token 578: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.18068437278270721
    2. '__' → logprob: -1.8056843280792236
    3. '_name' → logprob: -7.555684566497803
    4. '_' → logprob: -7.930684566497803
    5. 'name' → logprob: -10.305684089660645
    6. ' ' → logprob: -11.680684089660645
    7. '___' → logprob: -12.055684089660645
    8. ' _' → logprob: -12.805684089660645
    9. ' ' → logprob: -13.805684089660645
    10. 'Name' → logprob: -14.180684089660645

Token 579: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0023951521143317223
    2. '__.__' → logprob: -6.627395153045654
    3. ' ==' → logprob: -8.127394676208496
    4. '==' → logprob: -8.127394676208496
    5. '__.' → logprob: -8.627394676208496
    6. '.__' → logprob: -9.127394676208496
    7. 'name' → logprob: -9.377394676208496
    8. ' __' → logprob: -9.752394676208496
    9. '_' → logprob: -11.627394676208496
    10. '__[' → logprob: -11.752394676208496

Token 580: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.7432603272027336e-06
    2. '__.__' → logprob: -13.375001907348633
    3. '__.' → logprob: -16.750001907348633
    4. '____' → logprob: -17.000001907348633
    5. '__["' → logprob: -18.500001907348633
    6. '__

' → logprob: -18.625001907348633
    7. '___' → logprob: -18.625001907348633
    8. '__
' → logprob: -18.625001907348633
    9. '_' → logprob: -18.750001907348633
    10. ' __' → logprob: -19.125001907348633

Token 581: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2959122955799103
    2. ' ==' → logprob: -1.795912265777588
    3. '==' → logprob: -2.420912265777588
    4. '=="' → logprob: -6.795912265777588
    5. '=='' → logprob: -9.170912742614746
    6. '_' → logprob: -9.670912742614746
    7. '___' → logprob: -11.295912742614746
    8. '__.__' → logprob: -11.795912742614746
    9. '=' → logprob: -11.920912742614746
    10. '===' → logprob: -12.295912742614746

Token 582: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0040835049003362656
    2. ''' → logprob: -5.504083633422852
    3. '__' → logprob: -12.879083633422852
    4. ' "__' → logprob: -13.004083633422852
    5. '"user' → logprob: -16.62908363342285
    6. '"name' → logprob: -16.87908363342285
    7. '"class' → logprob: -17.12908363342285
    8. ''"' → logprob: -17.37908363342285
    9. '"_' → logprob: -17.50408363342285
    10. ' '__' → logprob: -18.00408363342285

Token 583: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06219163537025452
    2. '__' → logprob: -2.8121917247772217
    3. '"' → logprob: -8.4371919631958
    4. ''' → logprob: -12.0621919631958
    5. '_main' → logprob: -14.1871919631958
    6. 'name' → logprob: -15.0621919631958
    7. ' main' → logprob: -15.1871919631958
    8. '__":
' → logprob: -16.437191009521484
    9. 'built' → logprob: -16.562191009521484
    10. '__
' → logprob: -16.687191009521484

Token 584: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6941644549369812
    2. '__":
' → logprob: -0.6941644549369812
    3. '__:' → logprob: -6.944164276123047
    4. '__':
' → logprob: -10.569164276123047
    5. '__.' → logprob: -11.069164276123047
    6. '__.__' → logprob: -12.319164276123047
    7. '__["' → logprob: -12.569164276123047
    8. '_' → logprob: -14.194164276123047
    9. '__
' → logprob: -14.194164276123047
    10. '__("' → logprob: -14.444164276123047

Token 585: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0035630115307867527
    2. '__' → logprob: -5.753562927246094
    3. ' main' → logprob: -7.878562927246094
    4. '   ' → logprob: -13.253562927246094
    5. '_main' → logprob: -13.378562927246094
    6. '"' → logprob: -13.878562927246094
    7. '	main' → logprob: -14.003562927246094
    8. ' __' → logprob: -14.128562927246094
    9. '(main' → logprob: -15.503562927246094
    10. '___' → logprob: -16.003562927246094

Token 586: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.56102097814437e-05
    2. ' main' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.750045776367188
    4. '	main' → logprob: -17.125045776367188
    5. 'import' → logprob: -19.250045776367188
    6. '_main' → logprob: -21.875045776367188
    7. '.main' → logprob: -22.500045776367188
    8. 'mai' → logprob: -23.125045776367188
    9. '(main' → logprob: -23.500045776367188
    10. 'm' → logprob: -23.875045776367188

Token 587: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 585
Tokens correctement prédits (1ère position, stricte): 292
Tokens correctement prédits (1ère position, avec adaptation): 324
Tokens correctement prédits (top 10): 511
Précision stricte (1ère position): 49.91%
Précision adaptée (1ère position): 55.38%
Précision (top 10): 87.35%
================================================================================
