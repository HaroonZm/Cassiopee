================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:32:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def vector_sub(a, b):
    return [a[i] - b[i] for i in range(3)]

def dot(a, b):
    return sum(a[i] * b[i] for i in range(3))

def cross(a, b):
    return [a[1]*b[2] - a[2]*b[1],
            a[2]*b[0] - a[0]*b[2],
            a[0]*b[1] - a[1]*b[0]]

def is_point_in_triangle(p, a, b, c):
    # Check if point p lies inside triangle abc (including boundary)
    v0 = vector_sub(c, a)
    v1 = vector_sub(b, a)
    v2 = vector_sub(p, a)

    dot00 = dot(v0, v0)
    dot01 = dot(v0, v1)
    dot02 = dot(v0, v2)
    dot11 = dot(v1, v1)
    dot12 = dot(v1, v2)

    denom = dot00 * dot11 - dot01 * dot01
    # In case of degenerate triangle
    if denom == 0:
        return False

    u = (dot11 * dot02 - dot01 * dot12) / denom
    v = (dot00 * dot12 - dot01 * dot02) / denom

    return (u >= 0) and (v >= 0) and (u + v <= 1)

def point_in_triangle_3d(p, a, b, c):
    # Use barycentric coordinates in 3D by projecting to the triangle's plane
    # Compute normal vector of triangle plane
    ab = vector_sub(b, a)
    ac = vector_sub(c, a)
    normal = cross(ab, ac)

    # Check if p is in the same plane (allow small tolerance)
    ap = vector_sub(p, a)
    if abs(dot(ap, normal)) > 1e-9:
        return False

    return is_point_in_triangle(p, a, b, c)

def is_point_on_segment(p, a, b):
    # Check if p lies on the segment ab (including endpoints)
    ap = vector_sub(p, a)
    bp = vector_sub(p, b)
    ab = vector_sub(b, a)
    cross_prod = cross(ap, ab)
    if any(abs(x) > 1e-9 for x in cross_prod):
        return False
    # Check if dot products are in range
    if dot(ap, ab) < -1e-9:
        return False
    if dot(bp, vector_sub(a,b)) < -1e-9:
        return False
    return True

def segment_intersects_triangle(p1, p2, a, b, c):
    d = vector_sub(p2, p1)
    ab = vector_sub(b, a)
    ac = vector_sub(c, a)
    normal = cross(ab, ac)

    denom = dot(normal, d)
    if abs(denom) < 1e-15:
        # Line is parallel to plane
        # Check if segment lies in the plane and intersects triangle
        ap1 = vector_sub(p1, a)
        if abs(dot(normal, ap1)) > 1e-9:
            return False
        # Segment lies in the plane - check overlap
        # Project to 2D to check intersection
        # Because the problem states no degenerate cases, we can return False here
        return False

    t = dot(normal, vector_sub(a, p1)) / denom
    if t < -1e-9 or t > 1 + 1e-9:
        return False

    intersection = [p1[i] + t * d[i] for i in range(3)]

    # If intersection is at endpoints, it counts as hitting barrier
    if any(abs(intersection[i] - p1[i]) < 1e-9 for i in range(3)) or any(abs(intersection[i] - p2[i]) < 1e-9 for i in range(3)):
        return True

    return point_in_triangle_3d(intersection, a, b, c)

def main():
    UAZ = list(map(int, input().split()))
    enemy = list(map(int, input().split()))
    v1 = list(map(int, input().split()))
    v2 = list(map(int, input().split()))
    v3 = list(map(int, input().split()))

    # If enemy is inside triangle
    if point_in_triangle_3d(enemy, v1, v2, v3):
        print("MISS")
        return

    # Check if segment UAZ->enemy intersects the barrier triangle
    if segment_intersects_triangle(UAZ, enemy, v1, v2, v3):
        print("MISS")
        return

    print("HIT")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' vector' (ID: 9727)
  → Token d'amorce (pas de prédiction)

Token 2: '_sub' (ID: 11572)
  → Token d'amorce (pas de prédiction)

Token 3: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09086624532938004
    2. '_' → logprob: -3.4658663272857666
    3. 'stract' → logprob: -3.4658663272857666
    4. 'tract' → logprob: -5.2158660888671875
    5. '```' → logprob: -5.3408660888671875
    6. ' (' → logprob: -5.8408660888671875
    7. 'tracted' → logprob: -5.9658660888671875
    8. 'traction' → logprob: -6.0908660888671875
    9. '(_' → logprob: -6.5908660888671875
    10. '`' → logprob: -7.5908660888671875

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006004755850881338
    2. ')' → logprob: -6.381004810333252
    3. '[' → logprob: -6.381004810333252
    4. '_,' → logprob: -6.881004810333252
    5. ',b' → logprob: -7.381004810333252
    6. '):' → logprob: -8.131004333496094
    7. 's' → logprob: -8.756004333496094
    8. '_' → logprob: -9.006004333496094
    9. ' ,' → logprob: -9.506004333496094
    10. '```' → logprob: -9.506004333496094

Token 5: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.014256360940635204
    2. 'b' → logprob: -4.264256477355957
    3. ' ' → logprob: -10.764256477355957
    4. ',' → logprob: -10.764256477355957
    5. ' ' → logprob: -11.014256477355957
    6. ')' → logprob: -11.389256477355957
    7. ',b' → logprob: -12.014256477355957
    8. '<|end|>' → logprob: -12.139256477355957
    9. ' ,' → logprob: -12.639256477355957
    10. ')b' → logprob: -13.764256477355957

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06243536248803139
    2. ')' → logprob: -2.8124353885650635
    3. ',' → logprob: -8.437435150146484
    4. '[' → logprob: -9.312435150146484
    5. '):
' → logprob: -9.687435150146484
    6. ':' → logprob: -10.062435150146484
    7. '**' → logprob: -11.312435150146484
    8. '```' → logprob: -11.312435150146484
    9. 's' → logprob: -12.187435150146484
    10. ')**' → logprob: -12.437435150146484

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28716689348220825
    2. '   ' → logprob: -1.4121668338775635
    3. '```' → logprob: -6.412167072296143
    4. '():' → logprob: -7.537167072296143
    5. ' return' → logprob: -7.662167072296143
    6. ':return' → logprob: -7.912167072296143
    7. '    
' → logprob: -7.912167072296143
    8. '(' → logprob: -7.912167072296143
    9. ':
' → logprob: -8.037166595458984
    10. '_' → logprob: -8.287166595458984

Token 8: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13968192040920258
    2. '[' → logprob: -3.139681816101074
    3. ' return' → logprob: -3.139681816101074
    4. '```' → logprob: -4.014681816101074
    5. 'return' (adapté à ' return') → logprob: -5.014681816101074
    6. '    ' → logprob: -5.264681816101074
    7. ' ' → logprob: -5.389681816101074
    8. '_' → logprob: -6.139681816101074
    9. '    
' → logprob: -6.889681816101074
    10. '[:]' → logprob: -7.014681816101074

Token 9: ' [' (ID: 723)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.03735349327325821
    2. 'a' → logprob: -3.662353515625
    3. ' ' → logprob: -4.537353515625
    4. '[' → logprob: -9.287353515625
    5. ' [' → logprob: -9.787353515625
    6. '  ' → logprob: -9.787353515625
    7. ' []' → logprob: -11.037353515625
    8. 's' → logprob: -11.287353515625
    9. '[a' → logprob: -11.537353515625
    10. '<|end|>' → logprob: -11.537353515625

Token 10: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3141046166419983
    2. 'x' → logprob: -1.3141045570373535
    3. 'ai' → logprob: -7.5641045570373535
    4. ' x' → logprob: -8.439105033874512
    5. 'i' → logprob: -9.814105033874512
    6. ' a' → logprob: -10.064105033874512
    7. ' ai' → logprob: -11.814105033874512
    8. '_ai' → logprob: -14.064105033874512
    9. '   ' → logprob: -14.439105033874512
    10. '```' → logprob: -14.689105033874512

Token 11: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.020414939150214195
    2. '[' → logprob: -4.39541482925415
    3. '-' → logprob: -5.14541482925415
    4. '_i' → logprob: -7.27041482925415
    5. 'i' → logprob: -7.52041482925415
    6. ' -' → logprob: -7.77041482925415
    7. '[j' → logprob: -9.270415306091309
    8. '[index' → logprob: -9.270415306091309
    9. '[idx' → logprob: -9.520415306091309
    10. ']' → logprob: -10.270415306091309

Token 12: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4747960567474365
    2. '-' → logprob: -0.9747960567474365
    3. ']' → logprob: -7.724796295166016
    4. '-i' → logprob: -9.599796295166016
    5. ')' → logprob: -9.724796295166016
    6. '[i' → logprob: -10.224796295166016
    7. ' ' → logprob: -10.349796295166016
    8. '[' → logprob: -11.099796295166016
    9. ']-' → logprob: -11.974796295166016
    10. ' ' → logprob: -11.974796295166016

Token 13: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4741698205471039
    2. ' -' → logprob: -0.9741698503494263
    3. '-i' → logprob: -10.349169731140137
    4. '[' → logprob: -10.849169731140137
    5. '[i' → logprob: -11.224169731140137
    6. ' ' → logprob: -11.224169731140137
    7. ' ' → logprob: -13.224169731140137
    8. ')' → logprob: -13.224169731140137
    9. '_' → logprob: -13.349169731140137
    10. ']' → logprob: -13.849169731140137

Token 14: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47407761216163635
    2. ' b' → logprob: -0.974077582359314
    3. '<|end|>' → logprob: -14.974077224731445
    4. ' ' → logprob: -15.849077224731445
    5. '	b' → logprob: -17.099077224731445
    6. ' б' → logprob: -18.474077224731445
    7. ')b' → logprob: -18.474077224731445
    8. ' ' → logprob: -18.599077224731445
    9. '_b' → logprob: -19.224077224731445
    10. '<|end|>' → logprob: -20.099077224731445

Token 15: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0029243486933410168
    2. '[' → logprob: -6.00292444229126
    3. '][' → logprob: -8.627923965454102
    4. ']' → logprob: -8.877923965454102
    5. '[j' → logprob: -9.627923965454102
    6. ' [' → logprob: -11.127923965454102
    7. '[I' → logprob: -11.252923965454102
    8. ' ' → logprob: -11.502923965454102
    9. '```' → logprob: -11.627923965454102
    10. '[
' → logprob: -12.252923965454102

Token 16: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1756367712223437e-05
    2. ' ]' → logprob: -11.500011444091797
    3. '']' → logprob: -14.125011444091797
    4. '`]' → logprob: -15.125011444091797
    5. ')]' → logprob: -15.625011444091797
    6. ')' → logprob: -15.875011444091797
    7. ']]' → logprob: -15.875011444091797
    8. '])' → logprob: -16.750011444091797
    9. '],' → logprob: -17.125011444091797
    10. ']
' → logprob: -17.125011444091797

Token 17: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008584582828916609
    2. ' ]' → logprob: -7.125858306884766
    3. ' for' → logprob: -10.125858306884766
    4. 'for' → logprob: -12.125858306884766
    5. '']' → logprob: -13.000858306884766
    6. ')' → logprob: -13.500858306884766
    7. '}' → logprob: -14.000858306884766
    8. '   ' → logprob: -14.000858306884766
    9. '`]' → logprob: -14.250858306884766
    10. '```' → logprob: -14.625858306884766

Token 18: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0403069332242012
    2. ' i' → logprob: -3.66530704498291
    3. 'range' → logprob: -4.29030704498291
    4. 'i' → logprob: -8.79030704498291
    5. ' ' → logprob: -10.29030704498291
    6. '	range' → logprob: -11.66530704498291
    7. ' xrange' → logprob: -11.79030704498291
    8. '  ' → logprob: -13.54030704498291
    9. ' in' → logprob: -13.66530704498291
    10. '_range' → logprob: -14.29030704498291

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1019984558224678
    2. 'in' → logprob: -2.3519985675811768
    3. '<|end|>' → logprob: -7.101998329162598
    4. ']' → logprob: -7.851998329162598
    5. ' ' → logprob: -8.976998329162598
    6. '<|end|>' → logprob: -9.476998329162598
    7. ')' → logprob: -9.601998329162598
    8. 's' → logprob: -9.726998329162598
    9. '[' → logprob: -10.351998329162598
    10. 'range' → logprob: -10.726998329162598

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1602245420217514
    2. ' range' → logprob: -1.9102245569229126
    3. '	range' → logprob: -15.285224914550781
    4. ' xrange' → logprob: -15.410224914550781
    5. '(range' → logprob: -17.16022491455078
    6. '_range' → logprob: -18.41022491455078
    7. '.range' → logprob: -19.66022491455078
    8. ' ' → logprob: -19.91022491455078
    9. '-range' → logprob: -20.16022491455078
    10. '范围' → logprob: -20.28522491455078

Token 21: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00033558503491804004
    2. '(' → logprob: -8.000335693359375
    3. 'len' → logprob: -16.625335693359375
    4. '(length' → logprob: -17.125335693359375
    5. ' (' → logprob: -18.375335693359375
    6. '(
' → logprob: -18.750335693359375
    7. ' len' → logprob: -19.125335693359375
    8. '(

' → logprob: -19.500335693359375
    9. '<len' → logprob: -19.625335693359375
    10. '(min' → logprob: -20.125335693359375

Token 22: '3' (ID: 18)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.5716304410016164e-05
    2. ' len' → logprob: -10.250035285949707
    3. '(len' → logprob: -15.250035285949707
    4. 'min' → logprob: -17.875036239624023
    5. '	len' → logprob: -19.250036239624023
    6. '=len' → logprob: -20.125036239624023
    7. ',len' → logprob: -20.625036239624023
    8. '[len' → logprob: -20.875036239624023
    9. 'max' → logprob: -21.250036239624023
    10. ')' → logprob: -21.375036239624023

Token 23: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.968934758333489e-05
    2. ')' → logprob: -10.125069618225098
    3. ']' → logprob: -10.500069618225098
    4. ' )' → logprob: -13.500069618225098
    5. ')])' → logprob: -15.125069618225098
    6. '')]' → logprob: -15.750069618225098
    7. '])]' → logprob: -16.375070571899414
    8. '])' → logprob: -16.750070571899414
    9. '))' → logprob: -17.250070571899414
    10. ' ]' → logprob: -17.625070571899414

Token 24: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6651400327682495
    2. '```' → logprob: -1.7901400327682495
    3. '<|end|>' → logprob: -2.290140151977539
    4. '#' → logprob: -2.665140151977539
    5. '(' → logprob: -3.165140151977539
    6. 'def' → logprob: -3.915140151977539
    7. ')' → logprob: -4.290140151977539
    8. '\n' → logprob: -4.290140151977539
    9. ' ' → logprob: -4.915140151977539
    10. '

' → logprob: -4.915140151977539

Token 25: ' dot' (ID: 16579)
  Prédit: ' vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.0015837816754356027
    2. 'vector' → logprob: -6.626583576202393
    3. ' ' → logprob: -8.62658405303955
    4. ' vect' → logprob: -10.37658405303955
    5. ' space' → logprob: -11.00158405303955
    6. ' ' → logprob: -12.00158405303955
    7. ' vectors' → logprob: -12.25158405303955
    8. ' matrix' → logprob: -12.50158405303955
    9. '_vector' → logprob: -12.62658405303955
    10. ' vec' → logprob: -12.87658405303955

Token 26: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16155894100666046
    2. '_product' → logprob: -2.1615588665008545
    3. '_' → logprob: -3.5365588665008545
    4. ' (' → logprob: -5.911559104919434
    5. '(a' → logprob: -7.411559104919434
    6. '_vector' → logprob: -7.786559104919434
    7. '_products' → logprob: -8.661559104919434
    8. ' ' → logprob: -9.286559104919434
    9. '(product' → logprob: -9.786559104919434
    10. ' product' → logprob: -9.786559104919434

Token 27: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41513267159461975
    2. ',' → logprob: -1.5401326417922974
    3. '(a' → logprob: -2.540132761001587
    4. '(' → logprob: -3.790132761001587
    5. '<|end|>' → logprob: -4.165132522583008
    6. ',a' → logprob: -5.540132522583008
    7. '[' → logprob: -6.790132522583008
    8. ' )' → logprob: -7.790132522583008
    9. 'a' → logprob: -8.040132522583008
    10. '_' → logprob: -8.165132522583008

Token 28: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.649861216545105
    2. ' b' → logprob: -0.774861216545105
    3. 'a' → logprob: -4.2748613357543945
    4. ' a' → logprob: -5.7748613357543945
    5. '<|end|>' → logprob: -10.274861335754395
    6. ')' → logprob: -10.649861335754395
    7. ' vector' → logprob: -11.274861335754395
    8. ' ' → logprob: -11.274861335754395
    9. ' )' → logprob: -12.524861335754395
    10. 'vector' → logprob: -13.024861335754395

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1435726135969162
    2. ')' → logprob: -2.0185725688934326
    3. ')]' → logprob: -7.143572807312012
    4. ']:' → logprob: -10.393572807312012
    5. ')])' → logprob: -11.018572807312012
    6. '):
' → logprob: -11.143572807312012
    7. ']' → logprob: -11.893572807312012
    8. ')>' → logprob: -12.143572807312012
    9. '   ' → logprob: -12.393572807312012
    10. ' ):' → logprob: -12.518572807312012

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01276802271604538
    2. ' a' → logprob: -4.637767791748047
    3. ' return' → logprob: -6.012767791748047
    4. 'a' → logprob: -8.137767791748047
    5. '    ' → logprob: -9.637767791748047
    6. 'return' → logprob: -9.887767791748047
    7. ' ' → logprob: -9.887767791748047
    8. '  ' → logprob: -10.512767791748047
    9. ' sum' → logprob: -10.512767791748047
    10. '[' → logprob: -10.512767791748047

Token 31: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6804193258285522
    2. '   ' → logprob: -0.8054193258285522
    3. 'return' (adapté à ' return') → logprob: -3.180419445037842
    4. ' sum' → logprob: -6.055419445037842
    5. ' a' → logprob: -6.680419445037842
    6. 'sum' → logprob: -7.305419445037842
    7. 'a' → logprob: -7.680419445037842
    8. ' ' → logprob: -8.680418968200684
    9. '0' → logprob: -9.680418968200684
    10. ' result' → logprob: -9.930418968200684

Token 32: ' sum' (ID: 4215)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3419703245162964
    2. ' sum' → logprob: -1.5919703245162964
    3. 'a' → logprob: -2.841970443725586
    4. 'sum' → logprob: -3.591970443725586
    5. ' ' → logprob: -9.091970443725586
    6. '[a' → logprob: -9.466970443725586
    7. '[' → logprob: -11.091970443725586
    8. ' [' → logprob: -11.341970443725586
    9. '  ' → logprob: -11.716970443725586
    10. '(a' → logprob: -11.841970443725586

Token 33: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5002135634422302
    2. '([' → logprob: -1.250213623046875
    3. '(' → logprob: -2.250213623046875
    4. '(x' → logprob: -6.375213623046875
    5. '(ai' → logprob: -10.500213623046875
    6. '[a' → logprob: -11.000213623046875
    7. '(i' → logprob: -11.500213623046875
    8. '(
' → logprob: -12.125213623046875
    9. '([(' → logprob: -12.500213623046875
    10. '[' → logprob: -12.875213623046875

Token 34: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020425561524461955
    2. '[' → logprob: -8.500204086303711
    3. '[j' → logprob: -15.000204086303711
    4. '[I' → logprob: -15.750204086303711
    5. ' [' → logprob: -15.875204086303711
    6. '[k' → logprob: -16.62520408630371
    7. '   ' → logprob: -18.00020408630371
    8. '[a' → logprob: -18.00020408630371
    9. ' ' → logprob: -18.25020408630371
    10. '[
' → logprob: -18.37520408630371

Token 35: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03539746627211571
    2. '*' → logprob: -3.660397529602051
    3. ' *' → logprob: -5.160397529602051
    4. ')' → logprob: -6.035397529602051
    5. ']*' → logprob: -7.410397529602051
    6. ' ]' → logprob: -8.53539752960205
    7. ' ' → logprob: -9.66039752960205
    8. '}' → logprob: -10.66039752960205
    9. '[' → logprob: -11.28539752960205
    10. '   ' → logprob: -11.53539752960205

Token 36: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3486928641796112
    2. '*' → logprob: -1.2236928939819336
    3. ')' → logprob: -8.848692893981934
    4. ' ' → logprob: -9.973692893981934
    5. '*b' → logprob: -9.973692893981934
    6. '   ' → logprob: -12.973692893981934
    7. ']' → logprob: -12.973692893981934
    8. ')*' → logprob: -13.848692893981934
    9. '```' → logprob: -13.973692893981934
    10. '[' → logprob: -13.973692893981934

Token 37: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38687315583229065
    2. ' b' → logprob: -1.1368731260299683
    3. ' ' → logprob: -13.136873245239258
    4. '	b' → logprob: -16.386873245239258
    5. '   ' → logprob: -17.136873245239258
    6. '  ' → logprob: -17.136873245239258
    7. '    ' → logprob: -17.636873245239258
    8. ')b' → logprob: -18.011873245239258
    9. '<|end|>' → logprob: -19.886873245239258
    10. ' б' → logprob: -20.136873245239258

Token 38: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.632542913896032e-05
    2. '[' → logprob: -10.000046730041504
    3. '[I' → logprob: -15.375046730041504
    4. ' [' → logprob: -15.625046730041504
    5. ']' → logprob: -15.750046730041504
    6. ')' → logprob: -15.875046730041504
    7. '][' → logprob: -16.875045776367188
    8. ')[' → logprob: -17.125045776367188
    9. '[
' → logprob: -17.750045776367188
    10. ' ' → logprob: -18.375045776367188

Token 39: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05547092854976654
    2. ')' → logprob: -3.5554709434509277
    3. '])' → logprob: -3.8054709434509277
    4. ' for' → logprob: -5.930470943450928
    5. 'for' → logprob: -8.43047046661377
    6. ' ]' → logprob: -8.55547046661377
    7. ' ])' → logprob: -10.18047046661377
    8. '   ' → logprob: -11.55547046661377
    9. ')]' → logprob: -12.18047046661377
    10. ')])' → logprob: -12.18047046661377

Token 40: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0426606722176075
    2. 'for' → logprob: -3.292660713195801
    3. ')' → logprob: -5.417660713195801
    4. '   ' → logprob: -9.0426607131958
    5. ' ' → logprob: -10.5426607131958
    6. '    ' → logprob: -11.5426607131958
    7. ' )' → logprob: -11.6676607131958
    8. '  ' → logprob: -12.7926607131958
    9. '	for' → logprob: -13.6676607131958
    10. ']' → logprob: -13.7926607131958

Token 41: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0021949794609099627
    2. 'i' → logprob: -6.127194881439209
    3. ' range' → logprob: -12.252195358276367
    4. ' ' → logprob: -13.252195358276367
    5. 'range' → logprob: -13.502195358276367
    6. '	i' → logprob: -13.502195358276367
    7. '  ' → logprob: -14.877195358276367
    8. '   ' → logprob: -16.002195358276367
    9. ' ' → logprob: -16.002195358276367
    10. '(i' → logprob: -17.502195358276367

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012674334459006786
    2. 'in' → logprob: -4.387674331665039
    3. ' ' → logprob: -8.887674331665039
    4. ')' → logprob: -11.012674331665039
    5. '  ' → logprob: -12.762674331665039
    6. '(' → logprob: -13.012674331665039
    7. ' )' → logprob: -13.387674331665039
    8. 'n' → logprob: -14.387674331665039
    9. '3' → logprob: -14.512674331665039
    10. '[' → logprob: -15.012674331665039

Token 43: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11289311200380325
    2. ' range' → logprob: -2.2378931045532227
    3. '3' → logprob: -9.737893104553223
    4. ' ' → logprob: -11.612893104553223
    5. '[' → logprob: -14.112893104553223
    6. '(range' → logprob: -14.487893104553223
    7. '  ' → logprob: -14.612893104553223
    8. '   ' → logprob: -14.862893104553223
    9. ')' → logprob: -15.362893104553223
    10. '	range' → logprob: -15.362893104553223

Token 44: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010986098641296849
    2. '3' → logprob: -9.125109672546387
    3. '(len' → logprob: -14.250109672546387
    4. ' (' → logprob: -16.500110626220703
    5. ' ' → logprob: -17.375110626220703
    6. '(
' → logprob: -17.750110626220703
    7. '   ' → logprob: -18.750110626220703
    8. ')' → logprob: -19.875110626220703
    9. 'len' → logprob: -20.125110626220703
    10. '  ' → logprob: -21.750110626220703

Token 45: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'len' → logprob: -15.25001049041748
    4. '   ' → logprob: -15.62501049041748
    5. ')' → logprob: -18.000011444091797
    6. ' len' → logprob: -18.000011444091797
    7. '  ' → logprob: -18.875011444091797
    8. '```' → logprob: -20.375011444091797
    9. '    ' → logprob: -20.687511444091797
    10. '３' → logprob: -20.750011444091797

Token 46: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20141762495040894
    2. '))' → logprob: -1.7014176845550537
    3. ')))' → logprob: -13.576417922973633
    4. ')
' → logprob: -13.701417922973633
    5. '])' → logprob: -14.326417922973633
    6. ' )' → logprob: -15.076417922973633
    7. '),' → logprob: -15.451417922973633
    8. ')]' → logprob: -15.576417922973633
    9. ')}' → logprob: -15.826417922973633
    10. ')>' → logprob: -16.201417922973633

Token 47: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012917857384309173
    2. '
' → logprob: -6.876291751861572
    3. '```' → logprob: -9.00129222869873
    4. '

' → logprob: -9.62629222869873
    5. '\' → logprob: -10.87629222869873
    6. '  
' → logprob: -11.62629222869873
    7. '``' → logprob: -11.75129222869873
    8. ' def' → logprob: -12.12629222869873
    9. '    
' → logprob: -12.62629222869873
    10. 'd' → logprob: -12.62629222869873

Token 48: ' cross' (ID: 8088)
  Prédit: ' cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.25497496128082275
    2. ' vector' → logprob: -1.5049749612808228
    3. ' norm' → logprob: -6.879974842071533
    4. 'cross' → logprob: -7.254974842071533
    5. 'vector' → logprob: -7.504974842071533
    6. ' length' → logprob: -8.129975318908691
    7. ' normalize' → logprob: -8.254975318908691
    8. ' scalar' → logprob: -10.254975318908691
    9. ' vec' → logprob: -10.754975318908691
    10. ' def' → logprob: -10.754975318908691

Token 49: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.010314215905964375
    2. '(' → logprob: -4.635313987731934
    3. '_' → logprob: -8.010313987731934
    4. '_vector' → logprob: -9.385313987731934
    5. ' (' → logprob: -10.135313987731934
    6. '_product' → logprob: -10.510313987731934
    7. '(A' → logprob: -10.760313987731934
    8. '```' → logprob: -11.260313987731934
    9. '_(' → logprob: -11.385313987731934
    10. '_vectors' → logprob: -11.885313987731934

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009064606274478137
    2. ' ,' → logprob: -7.500906467437744
    3. '(a' → logprob: -9.125905990600586
    4. ',b' → logprob: -9.125905990600586
    5. ',a' → logprob: -9.250905990600586
    6. '(' → logprob: -11.000905990600586
    7. '[' → logprob: -11.875905990600586
    8. '_,' → logprob: -12.375905990600586
    9. ')' → logprob: -12.625905990600586
    10. ' (' → logprob: -12.750905990600586

Token 51: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.062088679522275925
    2. ' b' → logprob: -2.81208872795105
    3. 'a' → logprob: -9.062088966369629
    4. ' a' → logprob: -12.437088966369629
    5. ' ' → logprob: -14.437088966369629
    6. ')' → logprob: -15.187088966369629
    7. '	b' → logprob: -15.937088966369629
    8. ')b' → logprob: -16.312088012695312
    9. '   ' → logprob: -16.687088012695312
    10. '  ' → logprob: -17.062088012695312

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.478889215737581e-05
    2. ')' → logprob: -10.250054359436035
    3. '):
' → logprob: -11.375054359436035
    4. ' ):' → logprob: -12.500054359436035
    5. ']:' → logprob: -13.125054359436035
    6. '[]):' → logprob: -14.125054359436035
    7. ':' → logprob: -14.875054359436035
    8. '[' → logprob: -15.500054359436035
    9. '）：' → logprob: -15.625054359436035
    10. '   ' → logprob: -15.625054359436035

Token 53: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.017610600218176842
    2. ' [' → logprob: -4.892610549926758
    3. '[
' → logprob: -5.267610549926758
    4. '   ' → logprob: -5.392610549926758
    5. '[a' → logprob: -8.517610549926758
    6. ' [
' → logprob: -10.267610549926758
    7. '[n' → logprob: -12.517610549926758
    8. '[(' → logprob: -13.017610549926758
    9. '```' → logprob: -13.392610549926758
    10. '[A' → logprob: -13.892610549926758

Token 54: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006496482528746128
    2. '[a' → logprob: -7.500649452209473
    3. '[
' → logprob: -10.000649452209473
    4. ' [' → logprob: -10.125649452209473
    5. 'return' (adapté à ' return') → logprob: -11.875649452209473
    6. '   ' → logprob: -12.625649452209473
    7. '[A' → logprob: -15.250649452209473
    8. '[c' → logprob: -15.500649452209473
    9. '[b' → logprob: -16.12565040588379
    10. '[n' → logprob: -16.25065040588379

Token 55: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.049444351345300674
    2. ' [' → logprob: -3.0494444370269775
    3. '[
' → logprob: -7.174444198608398
    4. '[a' → logprob: -9.674444198608398
    5. ' [
' → logprob: -10.549444198608398
    6. '[n' → logprob: -14.424444198608398
    7. '[(' → logprob: -15.674444198608398
    8. ' ' → logprob: -16.1744441986084
    9. '[A' → logprob: -16.4244441986084
    10. '[int' → logprob: -16.5494441986084

Token 56: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.1008713702030946e-06
    2. ' a' → logprob: -13.500001907348633
    3. '   ' → logprob: -14.375001907348633
    4. '	a' → logprob: -16.625001907348633
    5. '(a' → logprob: -17.125001907348633
    6. ' ' → logprob: -17.625001907348633
    7. '  ' → logprob: -18.250001907348633
    8. '```' → logprob: -19.250001907348633
    9. '[a' → logprob: -20.625001907348633
    10. '    ' → logprob: -21.375001907348633

Token 57: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.5120287066092715e-05
    2. '1' → logprob: -10.625035285949707
    3. '[i' → logprob: -12.000035285949707
    4. '[(' → logprob: -12.375035285949707
    5. '[
' → logprob: -15.500035285949707
    6. ' [' → logprob: -15.750035285949707
    7. '```' → logprob: -17.00003433227539
    8. '
' → logprob: -17.12503433227539
    9. '[j' → logprob: -17.50003433227539
    10. '(' → logprob: -18.00003433227539

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -14.125001907348633
    3. '```' → logprob: -14.750001907348633
    4. '0' → logprob: -15.000001907348633
    5. '
' → logprob: -15.875001907348633
    6. '   ' → logprob: -16.000001907348633
    7. 'i' → logprob: -16.375001907348633
    8. '(' → logprob: -17.250001907348633
    9. '``' → logprob: -17.375001907348633
    10. '

' → logprob: -17.375001907348633

Token 59: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020562559366226196
    2. ']*' → logprob: -3.8955626487731934
    3. '*' → logprob: -11.020562171936035
    4. ' ]' → logprob: -13.145562171936035
    5. ')' → logprob: -14.395562171936035
    6. '}' → logprob: -14.520562171936035
    7. '```' → logprob: -15.520562171936035
    8. '"]' → logprob: -15.520562171936035
    9. '']' → logprob: -15.770562171936035
    10. ']]' → logprob: -16.02056312561035

Token 60: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024758970830589533
    2. ' b' → logprob: -6.002475738525391
    3. '*b' → logprob: -15.37747573852539
    4. '	b' → logprob: -17.37747573852539
    5. ' ' → logprob: -18.50247573852539
    6. ')b' → logprob: -19.12747573852539
    7. '>b' → logprob: -20.50247573852539
    8. ' б' → logprob: -20.87747573852539
    9. ',b' → logprob: -21.87747573852539
    10. ''b' → logprob: -22.37747573852539

Token 61: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004898841143585742
    2. '2' → logprob: -7.625489711761475
    3. '```' → logprob: -13.500490188598633
    4. ' [' → logprob: -15.375490188598633
    5. '[
' → logprob: -16.625490188598633
    6. ' ' → logprob: -17.125490188598633
    7. ']' → logprob: -17.875490188598633
    8. '][' → logprob: -17.875490188598633
    9. 'import' → logprob: -19.250490188598633
    10. ',' → logprob: -19.375490188598633

Token 62: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.5
    3. ' ' → logprob: -17.875
    4. '0' → logprob: -17.875
    5. '[' → logprob: -18.0
    6. '-' → logprob: -18.25
    7. '২' → logprob: -18.25
    8. 'index' → logprob: -18.375
    9. '۲' → logprob: -18.5
    10. '   ' → logprob: -18.875

Token 63: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3870293200016022
    2. '-' → logprob: -1.1370292901992798
    3. ',' → logprob: -9.012029647827148
    4. ' ' → logprob: -11.262029647827148
    5. ']' → logprob: -11.387029647827148
    6. ' ,' → logprob: -12.512029647827148
    7. ')' → logprob: -13.387029647827148
    8. ' -,' → logprob: -13.512029647827148
    9. '-a' → logprob: -13.637029647827148
    10. ' ' → logprob: -14.262029647827148

Token 64: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018155796453356743
    2. '-' → logprob: -4.018155574798584
    3. ',' → logprob: -13.018156051635742
    4. '-a' → logprob: -13.018156051635742
    5. ' ' → logprob: -13.893156051635742
    6. ' ,' → logprob: -15.893156051635742
    7. '```' → logprob: -15.893156051635742
    8. 'a' → logprob: -16.393156051635742
    9. ' ' → logprob: -16.393156051635742
    10. '   ' → logprob: -16.643156051635742

Token 65: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023245712742209435
    2. ' a' → logprob: -3.7732458114624023
    3. '	a' → logprob: -15.273245811462402
    4. 'b' → logprob: -17.023244857788086
    5. ' ' → logprob: -17.023244857788086
    6. '_a' → logprob: -19.523244857788086
    7. ' b' → logprob: -19.773244857788086
    8. '(a' → logprob: -20.398244857788086
    9. 'а' → logprob: -21.273244857788086
    10. '   ' → logprob: -21.773244857788086

Token 66: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.125
    3. '1' → logprob: -17.875
    4. '0' → logprob: -19.75
    5. 'a' → logprob: -19.875
    6. '3' → logprob: -20.125
    7. ' ' → logprob: -20.125
    8. '[
' → logprob: -20.5
    9. ' [' → logprob: -20.5
    10. '```' → logprob: -20.5

Token 67: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.5
    3. '```' → logprob: -16.75
    4. '۲' → logprob: -17.875
    5. '1' → logprob: -18.25
    6. ' ' → logprob: -18.5
    7. '२' → logprob: -19.0
    8. '	' → logprob: -19.375
    9. '২' → logprob: -19.5
    10. '２' → logprob: -19.5625

Token 68: ']*' (ID: 18579)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06650232523679733
    2. '[' → logprob: -3.191502332687378
    3. ']*' → logprob: -3.816502332687378
    4. ']' → logprob: -6.816502094268799
    5. '*' → logprob: -9.441502571105957
    6. '1' → logprob: -10.941502571105957
    7. '}[' → logprob: -11.816502571105957
    8. ''][' → logprob: -12.191502571105957
    9. ' ][' → logprob: -12.566502571105957
    10. '*[' → logprob: -12.691502571105957

Token 69: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.6240566083070007e-06
    2. ' b' → logprob: -13.375001907348633
    3. '1' → logprob: -20.000001907348633
    4. 'a' → logprob: -20.500001907348633
    5. '	b' → logprob: -20.625001907348633
    6. ')b' → logprob: -21.375001907348633
    7. '[' → logprob: -21.625001907348633
    8. '<|end|>' → logprob: -21.750001907348633
    9. ' ' → logprob: -22.625001907348633
    10. '>b' → logprob: -22.750001907348633

Token 70: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023250321100931615
    2. '1' → logprob: -8.375232696533203
    3. '[
' → logprob: -14.000232696533203
    4. '][' → logprob: -14.750232696533203
    5. ']' → logprob: -15.500232696533203
    6. '```' → logprob: -15.625232696533203
    7. 's' → logprob: -16.750232696533203
    8. ' [' → logprob: -16.750232696533203
    9. ''[' → logprob: -17.000232696533203
    10. '0' → logprob: -17.500232696533203

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '0' → logprob: -17.0
    4. '```' → logprob: -18.5625
    5. '۱' → logprob: -18.75
    6. '１' → logprob: -18.8125
    7. '১' → logprob: -19.25
    8. '[' → logprob: -19.5
    9. '१' → logprob: -19.5625
    10. ']' → logprob: -19.75

Token 72: '],
' (ID: 2274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026516128331422806
    2. ']' → logprob: -3.9015161991119385
    3. '],' → logprob: -5.151515960693359
    4. ' ,' → logprob: -9.40151596069336
    5. ',
' → logprob: -9.90151596069336
    6. '),' → logprob: -11.90151596069336
    7. ',

' → logprob: -12.02651596069336
    8. ')' → logprob: -12.02651596069336
    9. ',a' → logprob: -12.02651596069336
    10. ' ]' → logprob: -13.02651596069336

Token 73: '           ' (ID: 352)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.012537204660475254
    2. 'a' → logprob: -4.387537002563477
    3. '    ' → logprob: -10.637537002563477
    4. '	a' → logprob: -13.887537002563477
    5. ' ' → logprob: -14.137537002563477
    6. '        ' → logprob: -14.512537002563477
    7. ' ' → logprob: -14.512537002563477
    8. '   ' → logprob: -14.762537002563477
    9. '      ' → logprob: -16.262537002563477
    10. '            ' → logprob: -16.262537002563477

Token 74: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07897350937128067
    2. 'a' (adapté à ' a') → logprob: -2.5789735317230225
    3. '    ' → logprob: -9.453973770141602
    4. ' ' → logprob: -13.328973770141602
    5. '   ' → logprob: -13.703973770141602
    6. '	a' → logprob: -13.703973770141602
    7. ' ' → logprob: -14.953973770141602
    8. '  ' → logprob: -15.328973770141602
    9. '        ' → logprob: -15.453973770141602
    10. '     ' → logprob: -15.453973770141602

Token 75: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '2' → logprob: -18.0
    3. '[
' → logprob: -20.25
    4. '3' → logprob: -20.5
    5. '*' → logprob: -22.0
    6. '   ' → logprob: -22.375
    7. ' ' → logprob: -22.5
    8. 'a' → logprob: -22.625
    9. '	' → logprob: -22.875
    10. '0' → logprob: -22.875

Token 76: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.875000953674316
    3. '２' → logprob: -17.0
    4. '۲' → logprob: -17.0
    5. '-' → logprob: -17.625
    6. ' ' → logprob: -18.0
    7. '২' → logprob: -19.5
    8. '₂' → logprob: -19.75
    9. '२' → logprob: -19.875
    10. '   ' → logprob: -20.375

Token 77: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.21651844680309296
    2. ']*' → logprob: -1.9665184020996094
    3. '*b' → logprob: -2.9665184020996094
    4. '**' → logprob: -5.966518402099609
    5. ''*' → logprob: -8.71651840209961
    6. '"*' → logprob: -9.09151840209961
    7. '*[' → logprob: -9.21651840209961
    8. '*a' → logprob: -9.46651840209961
    9. ')*' → logprob: -9.46651840209961
    10. '```' → logprob: -10.09151840209961

Token 78: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.491498531133402e-06
    2. '*b' → logprob: -12.125009536743164
    3. ' b' → logprob: -12.625009536743164
    4. 'a' → logprob: -14.875009536743164
    5. '0' → logprob: -15.625009536743164
    6. '	b' → logprob: -15.875009536743164
    7. '[' → logprob: -16.875009536743164
    8. ')b' → logprob: -17.500009536743164
    9. '*' → logprob: -18.125009536743164
    10. '>b' → logprob: -18.500009536743164

Token 79: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.676981345459353e-06
    2. '0' → logprob: -12.125005722045898
    3. '[
' → logprob: -15.250005722045898
    4. '2' → logprob: -19.1250057220459
    5. '```' → logprob: -19.1250057220459
    6. '][' → logprob: -19.3750057220459
    7. '1' → logprob: -19.5000057220459
    8. ' [' → logprob: -19.8750057220459
    9. '3' → logprob: -20.0000057220459
    10. '<|end|>' → logprob: -21.2500057220459

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '[' → logprob: -15.625
    4. '[
' → logprob: -18.25
    5. '۰' → logprob: -18.375
    6. '```' → logprob: -19.625
    7. '<|end|>' → logprob: -19.875
    8. '
' → logprob: -20.125
    9. '1' → logprob: -20.5
    10. '   ' → logprob: -20.9375

Token 81: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.13053718209266663
    2. '-' → logprob: -2.130537271499634
    3. ']' → logprob: -5.880537033081055
    4. ' ' → logprob: -7.880537033081055
    5. ')' → logprob: -9.005537033081055
    6. ',' → logprob: -9.630537033081055
    7. ' ]' → logprob: -9.880537033081055
    8. ' ' → logprob: -10.005537033081055
    9. '    ' → logprob: -10.505537033081055
    10. ''' → logprob: -10.505537033081055

Token 82: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11285457760095596
    2. '-' → logprob: -2.237854480743408
    3. ' ' → logprob: -10.987854957580566
    4. ']' → logprob: -12.112854957580566
    5. ',' → logprob: -12.737854957580566
    6. ' ]' → logprob: -13.612854957580566
    7. ' ' → logprob: -13.862854957580566
    8. '[' → logprob: -13.987854957580566
    9. ')' → logprob: -14.487854957580566
    10. '   ' → logprob: -14.612854957580566

Token 83: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019287518225610256
    2. ' a' → logprob: -6.251928806304932
    3. '	a' → logprob: -16.126928329467773
    4. 'b' → logprob: -19.876928329467773
    5. ' ' → logprob: -20.126928329467773
    6. ''a' → logprob: -20.626928329467773
    7. '_a' → logprob: -21.126928329467773
    8. '"a' → logprob: -21.876928329467773
    9. 'а' → logprob: -22.001928329467773
    10. '[' → logprob: -22.126928329467773

Token 84: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '[
' → logprob: -13.375001907348633
    3. '1' → logprob: -15.125001907348633
    4. '0' → logprob: -16.250001907348633
    5. '<|end|>' → logprob: -18.250001907348633
    6. '```' → logprob: -18.625001907348633
    7. ' [' → logprob: -18.625001907348633
    8. '\[' → logprob: -20.625001907348633
    9. '
' → logprob: -20.750001907348633
    10. '(' → logprob: -20.750001907348633

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.000000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '2' → logprob: -17.375001907348633
    5. '
' → logprob: -17.500001907348633
    6. '```' → logprob: -17.500001907348633
    7. '1' → logprob: -17.750001907348633
    8. '[
' → logprob: -18.125001907348633
    9. '``' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.875001907348633

Token 86: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.3999766409397125
    2. '*' → logprob: -1.2749766111373901
    3. '*b' → logprob: -3.1499767303466797
    4. '[' → logprob: -5.14997673034668
    5. '*[' → logprob: -6.77497673034668
    6. ']' → logprob: -8.27497673034668
    7. '][' → logprob: -9.77497673034668
    8. ')*' → logprob: -10.64997673034668
    9. ''*' → logprob: -10.64997673034668
    10. '*c' → logprob: -11.02497673034668

Token 87: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9361264946837764e-07
    2. ' b' → logprob: -16.25
    3. '*b' → logprob: -21.125
    4. '<b' → logprob: -21.25
    5. '	b' → logprob: -21.875
    6. ')b' → logprob: -22.25
    7. '[b' → logprob: -23.75
    8. ''b' → logprob: -24.0
    9. '$b' → logprob: -24.625
    10. '>b' → logprob: -24.75

Token 88: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.845798710244708e-05
    2. '1' → logprob: -10.875038146972656
    3. '2' → logprob: -11.125038146972656
    4. '[
' → logprob: -12.625038146972656
    5. '][' → logprob: -13.875038146972656
    6. ']' → logprob: -15.375038146972656
    7. ' [' → logprob: -16.375038146972656
    8. '*[' → logprob: -16.500038146972656
    9. '
' → logprob: -16.750038146972656
    10. ''[' → logprob: -17.250038146972656

Token 89: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -16.0
    3. '   ' → logprob: -17.0
    4. '1' → logprob: -17.25
    5. '```' → logprob: -18.375
    6. ' ' → logprob: -18.5
    7. '

' → logprob: -18.5
    8. '۲' → logprob: -18.75
    9. '２' → logprob: -19.375
    10. '  ' → logprob: -19.375

Token 90: '],
' (ID: 2274)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.09698246419429779
    2. ',' → logprob: -2.721982479095459
    3. ']' → logprob: -4.221982479095459
    4. '],
' → logprob: -4.596982479095459
    5. ',
' → logprob: -6.346982479095459
    6. '),' → logprob: -9.2219820022583
    7. '],

' → logprob: -10.5969820022583
    8. ' ],' → logprob: -10.7219820022583
    9. '],[' → logprob: -11.9719820022583
    10. '           ' → logprob: -12.3469820022583

Token 91: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07890443503856659
    2. ' a' → logprob: -2.578904390335083
    3. '   ' → logprob: -11.828904151916504
    4. '	a' → logprob: -12.703904151916504
    5. '           ' → logprob: -12.828904151916504
    6. '    ' → logprob: -14.203904151916504
    7. ' ' → logprob: -14.453904151916504
    8. ' ' → logprob: -16.20390510559082
    9. '            ' → logprob: -16.32890510559082
    10. '       ' → logprob: -16.70390510559082

Token 92: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00029637437546625733
    2. ' a' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.625296592712402
    4. ' ' → logprob: -16.375295639038086
    5. '	a' → logprob: -16.750295639038086
    6. '  ' → logprob: -18.125295639038086
    7. '    ' → logprob: -18.750295639038086
    8. ''a' → logprob: -19.500295639038086
    9. '(a' → logprob: -19.750295639038086
    10. '     ' → logprob: -20.375295639038086

Token 93: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '1' → logprob: -14.375000953674316
    3. '0' → logprob: -14.500000953674316
    4. '[
' → logprob: -15.500000953674316
    5. '2' → logprob: -16.875001907348633
    6. '3' → logprob: -18.000001907348633
    7. '```' → logprob: -19.500001907348633
    8. 'def' → logprob: -19.750001907348633
    9. ' [' → logprob: -20.000001907348633
    10. '][' → logprob: -20.125001907348633

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001238004770129919
    2. '1' → logprob: -9.000123977661133
    3. '[' → logprob: -14.875123977661133
    4. ' ' → logprob: -18.000123977661133
    5. '
' → logprob: -19.000123977661133
    6. '```' → logprob: -19.250123977661133
    7. '[
' → logprob: -19.375123977661133
    8. '3' → logprob: -20.375123977661133
    9. 'cross' → logprob: -20.500123977661133
    10. '(' → logprob: -20.625123977661133

Token 95: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.06409104913473129
    2. '*' → logprob: -2.8140909671783447
    3. '*b' → logprob: -6.189091205596924
    4. ')*' → logprob: -10.564090728759766
    5. '"*' → logprob: -11.064090728759766
    6. ']' → logprob: -12.189090728759766
    7. '**' → logprob: -12.314090728759766
    8. '*
' → logprob: -12.564090728759766
    9. ''*' → logprob: -12.814090728759766
    10. '*f' → logprob: -13.189090728759766

Token 96: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.704273118884885e-07
    2. ' b' → logprob: -14.375000953674316
    3. '*b' → logprob: -16.625
    4. '1' → logprob: -17.375
    5. '[' → logprob: -19.125
    6. '	b' → logprob: -20.375
    7. '[b' → logprob: -21.125
    8. ')b' → logprob: -21.125
    9. '>b' → logprob: -21.5
    10. ''b' → logprob: -21.625

Token 97: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004341261519584805
    2. '1' → logprob: -7.750433921813965
    3. '[
' → logprob: -13.500433921813965
    4. '][' → logprob: -13.750433921813965
    5. ']' → logprob: -14.750433921813965
    6. '*' → logprob: -15.125433921813965
    7. '```' → logprob: -16.62543487548828
    8. '**' → logprob: -17.00043487548828
    9. ']*' → logprob: -17.00043487548828
    10. '*[' → logprob: -17.12543487548828

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.750000953674316
    3. ' ' → logprob: -16.75
    4. ']' → logprob: -18.625
    5. '```' → logprob: -19.25
    6. '   ' → logprob: -19.875
    7. '１' → logprob: -20.375
    8. '<|end|>' → logprob: -20.625
    9. '[
' → logprob: -20.75
    10. '**' → logprob: -20.8125

Token 99: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5948560833930969
    2. ']' → logprob: -0.8448560833930969
    3. '-' → logprob: -4.469856262207031
    4. '*' → logprob: -5.344856262207031
    5. ' ' → logprob: -6.594856262207031
    6. ' ]' → logprob: -7.594856262207031
    7. ')' → logprob: -7.969856262207031
    8. ']*' → logprob: -9.844856262207031
    9. '[' → logprob: -9.969856262207031
    10. ' *' → logprob: -10.344856262207031

Token 100: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.048599183559417725
    2. '-' → logprob: -3.0485992431640625
    3. ' ' → logprob: -11.548599243164062
    4. ' ' → logprob: -14.298599243164062
    5. ' -
' → logprob: -14.673599243164062
    6. '   ' → logprob: -15.423599243164062
    7. '```' → logprob: -15.798599243164062
    8. '    ' → logprob: -16.173599243164062
    9. '           ' → logprob: -16.173599243164062
    10. '[' → logprob: -16.298599243164062

Token 101: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002521561225876212
    2. ' a' → logprob: -6.002521514892578
    3. 'b' → logprob: -10.002521514892578
    4. '	a' → logprob: -14.752521514892578
    5. ' b' → logprob: -16.377521514892578
    6. '   ' → logprob: -16.502521514892578
    7. ' ' → logprob: -18.252521514892578
    8. '_a' → logprob: -19.377521514892578
    9. '    ' → logprob: -20.002521514892578
    10. '  ' → logprob: -20.002521514892578

Token 102: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7968066206085496e-05
    2. '1' → logprob: -10.500027656555176
    3. '[
' → logprob: -15.000027656555176
    4. '2' → logprob: -18.500028610229492
    5. '   ' → logprob: -18.750028610229492
    6. ' [' → logprob: -19.000028610229492
    7. '```' → logprob: -19.375028610229492
    8. '\[' → logprob: -20.625028610229492
    9. '3' → logprob: -20.750028610229492
    10. '(' → logprob: -20.750028610229492

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.125000953674316
    3. '```' → logprob: -15.500000953674316
    4. '2' → logprob: -16.250001907348633
    5. ' ' → logprob: -16.250001907348633
    6. '   ' → logprob: -16.750001907348633
    7. '0' → logprob: -17.250001907348633
    8. '
' → logprob: -18.375001907348633
    9. '``' → logprob: -18.375001907348633
    10. '[
' → logprob: -19.000001907348633

Token 104: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.3045230507850647
    2. '[' → logprob: -1.92952299118042
    3. '][' → logprob: -2.30452299118042
    4. ']' → logprob: -4.42952299118042
    5. '*' → logprob: -5.92952299118042
    6. '*b' → logprob: -6.42952299118042
    7. '*[' → logprob: -7.05452299118042
    8. '[
' → logprob: -8.429523468017578
    9. 'b' → logprob: -8.929523468017578
    10. '```' → logprob: -11.054523468017578

Token 105: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1472419600977446e-06
    2. ' b' → logprob: -13.750000953674316
    3. '0' → logprob: -19.500001907348633
    4. '	b' → logprob: -20.625001907348633
    5. '*b' → logprob: -21.875001907348633
    6. ')b' → logprob: -22.125001907348633
    7. '[' → logprob: -23.500001907348633
    8. 'a' → logprob: -24.375001907348633
    9. '```' → logprob: -24.375001907348633
    10. '[b' → logprob: -24.500001907348633

Token 106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004498573543969542
    2. '0' → logprob: -7.7504496574401855
    3. '[
' → logprob: -11.750450134277344
    4. '2' → logprob: -12.375450134277344
    5. '[i' → logprob: -12.375450134277344
    6. ']' → logprob: -13.125450134277344
    7. '][' → logprob: -15.375450134277344
    8. '```' → logprob: -16.125450134277344
    9. '])' → logprob: -16.375450134277344
    10. '\[' → logprob: -16.500450134277344

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.37500286102295
    3. '2' → logprob: -13.62500286102295
    4. '[' → logprob: -17.250001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '  ' → logprob: -18.375001907348633
    7. '۰' → logprob: -19.000001907348633
    8. '```' → logprob: -19.375001907348633
    9. '
' → logprob: -19.500001907348633
    10. '	' → logprob: -20.000001907348633

Token 108: ']]

' (ID: 84024)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0041463072411715984
    2. ')]' → logprob: -5.504146099090576
    3. ']]' → logprob: -10.379146575927734
    4. '])' → logprob: -11.129146575927734
    5. ' ]' → logprob: -11.129146575927734
    6. ')' → logprob: -12.879146575927734
    7. ']}' → logprob: -13.504146575927734
    8. '>]' → logprob: -14.004146575927734
    9. '}]' → logprob: -14.129146575927734
    10. '])]' → logprob: -14.379146575927734

Token 109: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02541440725326538
    2. '
' → logprob: -3.77541446685791
    3. '

' → logprob: -6.40041446685791
    4. '<|end|>' → logprob: -9.27541446685791
    5. '```' → logprob: -9.27541446685791
    6. '
' → logprob: -9.90041446685791
    7. ' def' → logprob: -10.15041446685791
    8. '  
' → logprob: -10.27541446685791
    9. ' 
' → logprob: -10.40041446685791
    10. '\' → logprob: -10.77541446685791

Token 110: ' is' (ID: 382)
  Prédit: ' vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.04110320284962654
    2. ' normalize' → logprob: -3.6661031246185303
    3. 'vector' → logprob: -5.291103363037109
    4. ' norm' → logprob: -5.541103363037109
    5. ' length' → logprob: -6.041103363037109
    6. 'normalize' → logprob: -6.666103363037109
    7. ' magnitude' → logprob: -7.166103363037109
    8. ' scalar' → logprob: -7.416103363037109
    9. 'norm' → logprob: -8.29110336303711
    10. ' main' → logprob: -9.29110336303711

Token 111: '_point' (ID: 15466)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2682006359100342
    2. '_zero' → logprob: -2.268200635910034
    3. '_point' → logprob: -3.018200635910034
    4. '_parallel' → logprob: -3.643200635910034
    5. '_unit' → logprob: -3.893200635910034
    6. '_vector' → logprob: -4.018200874328613
    7. '_per' → logprob: -5.893200874328613
    8. '_normal' → logprob: -6.268200874328613
    9. '_right' → logprob: -6.393200874328613
    10. '_col' → logprob: -6.393200874328613

Token 112: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.2986275255680084
    2. '_on' → logprob: -1.798627495765686
    3. '_inside' → logprob: -2.5486276149749756
    4. '_' → logprob: -4.4236273765563965
    5. '_between' → logprob: -7.5486273765563965
    6. 'in' → logprob: -8.298627853393555
    7. '_point' → logprob: -8.423627853393555
    8. '_line' → logprob: -8.423627853393555
    9. 'In' → logprob: -8.673627853393555
    10. '_a' → logprob: -9.298627853393555

Token 113: '_triangle' (ID: 187218)
  Prédit: '_triangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_triangle' → logprob: -0.047057073563337326
    2. '_t' → logprob: -3.4220571517944336
    3. '_s' → logprob: -4.672057151794434
    4. '_cube' → logprob: -6.672057151794434
    5. '_plane' → logprob: -7.047057151794434
    6. '_' → logprob: -7.672057151794434
    7. '_polygon' → logprob: -8.047057151794434
    8. '_circle' → logprob: -8.547057151794434
    9. '_rectangle' → logprob: -9.047057151794434
    10. '_poly' → logprob: -9.047057151794434

Token 114: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5701881051063538
    2. '(' → logprob: -1.070188045501709
    3. '(point' → logprob: -2.445188045501709
    4. '(Point' → logprob: -6.445188045501709
    5. '(a' → logprob: -6.570188045501709
    6. ' (' → logprob: -6.945188045501709
    7. '(P' → logprob: -7.820188045501709
    8. '(pt' → logprob: -8.195188522338867
    9. '(points' → logprob: -8.820188522338867
    10. '(t' → logprob: -10.570188522338867

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011307948443572968
    2. ' ,' → logprob: -9.375113487243652
    3. ',p' → logprob: -10.750113487243652
    4. '(p' → logprob: -12.750113487243652
    5. 'p' → logprob: -13.625113487243652
    6. ' p' → logprob: -14.000113487243652
    7. ',a' → logprob: -15.375113487243652
    8. 'a' → logprob: -15.625113487243652
    9. '<|end|>' → logprob: -15.750113487243652
    10. '   ' → logprob: -15.875113487243652

Token 116: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34398239850997925
    2. ' a' → logprob: -1.343982458114624
    3. 't' → logprob: -4.218982219696045
    4. ' t' → logprob: -5.093982219696045
    5. ' p' → logprob: -6.093982219696045
    6. 'v' → logprob: -6.343982219696045
    7. 'p' → logprob: -6.468982219696045
    8. 'triangle' → logprob: -6.843982219696045
    9. ' v' → logprob: -7.593982219696045
    10. 'tri' → logprob: -7.718982219696045

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8087270038668066e-05
    2. ' ,' → logprob: -10.875027656555176
    3. ',b' → logprob: -11.750027656555176
    4. ',
' → logprob: -14.375027656555176
    5. 'b' → logprob: -15.500027656555176
    6. ',p' → logprob: -15.875027656555176
    7. 'p' → logprob: -16.125028610229492
    8. '_,' → logprob: -16.500028610229492
    9. ')' → logprob: -16.750028610229492
    10. ' ' → logprob: -17.625028610229492

Token 118: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08894272893667221
    2. ' b' → logprob: -2.463942766189575
    3. ' ' → logprob: -13.588942527770996
    4. '<|end|>' → logprob: -13.588942527770996
    5. 'p' → logprob: -14.963942527770996
    6. '	b' → logprob: -15.838942527770996
    7. ' p' → logprob: -15.963942527770996
    8. 'v' → logprob: -16.463943481445312
    9. '
' → logprob: -17.088943481445312
    10. 'c' → logprob: -17.588943481445312

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7755875129951164e-05
    2. ' ,' → logprob: -10.12504768371582
    3. ',c' → logprob: -12.25004768371582
    4. 'c' → logprob: -13.00004768371582
    5. ',
' → logprob: -15.00004768371582
    6. ')' → logprob: -16.25004768371582
    7. '_,' → logprob: -16.50004768371582
    8. ' c' → logprob: -17.50004768371582
    9. '‌,' → logprob: -18.00004768371582
    10. ' ' → logprob: -18.00004768371582

Token 120: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06993932276964188
    2. ' c' → logprob: -2.694939374923706
    3. '	c' → logprob: -13.944939613342285
    4. ')c' → logprob: -14.069939613342285
    5. ')' → logprob: -14.694939613342285
    6. ' ' → logprob: -14.819939613342285
    7. '<|end|>' → logprob: -14.819939613342285
    8. ',c' → logprob: -16.44493865966797
    9. '):
' → logprob: -17.19493865966797
    10. '_c' → logprob: -17.81993865966797

Token 121: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002693224814720452
    2. ')' → logprob: -8.250268936157227
    3. '):
' → logprob: -12.750268936157227
    4. ':' → logprob: -12.750268936157227
    5. ' ):' → logprob: -13.375268936157227
    6. ']:' → logprob: -15.125268936157227
    7. '   ' → logprob: -16.375268936157227
    8. ''):' → logprob: -17.000268936157227
    9. ')：' → logprob: -17.000268936157227
    10. '）：' → logprob: -17.000268936157227

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009193053469061852
    2. '    
' → logprob: -5.009192943572998
    3. ' 
' → logprob: -6.634192943572998
    4. '
' → logprob: -8.134193420410156
    5. '    ' → logprob: -8.884193420410156
    6. '<|end|>' → logprob: -8.884193420410156
    7. '  
' → logprob: -9.134193420410156
    8. ')' → logprob: -9.509193420410156
    9. ' #' → logprob: -9.759193420410156
    10. ' ' → logprob: -9.759193420410156

Token 123: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0068849194794893265
    2. ' v' → logprob: -5.506885051727295
    3. '   ' → logprob: -6.381885051727295
    4. '#' (adapté à ' #') → logprob: -6.881885051727295
    5. '    
' → logprob: -10.506884574890137
    6. 'ap' → logprob: -11.631884574890137
    7. ' ' → logprob: -11.756884574890137
    8. ' #' → logprob: -11.756884574890137
    9. '	v' → logprob: -12.006884574890137
    10. 'def' → logprob: -12.131884574890137

Token 124: ' Check' (ID: 6208)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.012946800328791142
    2. ' v' → logprob: -4.637946605682373
    3. '#' → logprob: -5.887946605682373
    4. '   ' → logprob: -8.887947082519531
    5. 'def' → logprob: -9.137947082519531
    6. 'vec' → logprob: -10.512947082519531
    7. 'ab' → logprob: -10.637947082519531
    8. 'ap' → logprob: -10.637947082519531
    9. 'u' → logprob: -10.887947082519531
    10. ' #' → logprob: -11.012947082519531

Token 125: ' if' (ID: 538)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.851428747177124
    2. ' vectors' → logprob: -1.351428747177124
    3. ' #' → logprob: -1.976428747177124
    4. ' vector' → logprob: -2.601428747177124
    5. '#' → logprob: -3.351428747177124
    6. '   ' → logprob: -3.476428747177124
    7. ' def' → logprob: -4.851428985595703
    8. 'def' → logprob: -5.101428985595703
    9. '    ' → logprob: -5.226428985595703
    10. 'v' → logprob: -5.851428985595703

Token 126: ' point' (ID: 2438)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3866606652736664
    2. ' p' → logprob: -2.261660575866699
    3. ' vector' → logprob: -2.761660575866699
    4. ' all' → logprob: -3.261660575866699
    5. 'vector' → logprob: -3.261660575866699
    6. ' vectors' → logprob: -3.886660575866699
    7. ' the' → logprob: -4.761660575866699
    8. 'all' → logprob: -4.761660575866699
    9. 'point' → logprob: -5.011660575866699
    10. ' is' → logprob: -5.636660575866699

Token 127: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.649229884147644
    2. ' ' → logprob: -1.524229884147644
    3. ' is' → logprob: -2.2742300033569336
    4. '<|end|>' → logprob: -3.0242300033569336
    5. ' vector' → logprob: -3.5242300033569336
    6. '   ' → logprob: -4.024230003356934
    7. ' vectors' → logprob: -4.149230003356934
    8. '  ' → logprob: -4.649230003356934
    9. 'p' → logprob: -4.899230003356934
    10. ' in' → logprob: -5.024230003356934

Token 128: ' lies' (ID: 24384)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.05199958011507988
    2. ')' → logprob: -3.926999568939209
    3. ' in' → logprob: -4.676999568939209
    4. 'is' → logprob: -5.426999568939209
    5. ' vector' → logprob: -5.801999568939209
    6. ' has' → logprob: -5.926999568939209
    7. ' lies' → logprob: -6.176999568939209
    8. 'in' → logprob: -6.301999568939209
    9. ' vectors' → logprob: -6.426999568939209
    10. ',' → logprob: -7.051999568939209

Token 129: ' inside' (ID: 6772)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2956133484840393
    2. ' on' → logprob: -2.0456132888793945
    3. ' inside' → logprob: -2.7956132888793945
    4. ' within' → logprob: -3.6706132888793945
    5. 'in' → logprob: -3.9206132888793945
    6. ' ' → logprob: -4.0456132888793945
    7. 'inside' → logprob: -6.5456132888793945
    8. ' exactly' → logprob: -8.045613288879395
    9. '   ' → logprob: -8.545613288879395
    10. 'within' → logprob: -8.670613288879395

Token 130: ' triangle' (ID: 41487)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9483914375305176
    2. 'triangle' → logprob: -1.0733914375305176
    3. ' the' → logprob: -1.4483914375305176
    4. ' triangle' → logprob: -3.6983914375305176
    5. 'def' → logprob: -4.823391437530518
    6. 'a' → logprob: -6.698391437530518
    7. '#' → logprob: -7.573391437530518
    8. 'abc' → logprob: -7.698391437530518
    9. '   ' → logprob: -8.07339096069336
    10. 'tri' → logprob: -9.07339096069336

Token 131: ' abc' (ID: 75094)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5203604698181152
    2. 'abc' → logprob: -2.5203604698181152
    3. '(a' → logprob: -2.6453604698181152
    4. 'def' → logprob: -2.8953604698181152
    5. ' using' → logprob: -3.3953604698181152
    6. 'a' → logprob: -3.3953604698181152
    7. 'ABC' → logprob: -3.3953604698181152
    8. ' a' → logprob: -4.020360469818115
    9. '
' → logprob: -4.020360469818115
    10. '    
' → logprob: -4.270360469818115

Token 132: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7065249085426331
    2. '   ' → logprob: -0.7065249085426331
    3. '    
' → logprob: -4.831524848937988
    4. '<|end|>' → logprob: -6.831524848937988
    5. ':
' → logprob: -7.206524848937988
    6. '.' → logprob: -7.206524848937988
    7. ',' → logprob: -7.706524848937988
    8. '(' → logprob: -7.831524848937988
    9. '
' → logprob: -8.081524848937988
    10. '#' → logprob: -8.081524848937988

Token 133: 'including' (ID: 26167)
  Prédit: ' using'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' using' → logprob: -0.7247053980827332
    2. '   ' → logprob: -1.349705457687378
    3. 'def' → logprob: -2.349705457687378
    4. 'using' → logprob: -2.849705457687378
    5. ')' → logprob: -3.849705457687378
    6. ' or' → logprob: -4.224705219268799
    7. ' the' → logprob: -4.724705219268799
    8. ' def' → logprob: -4.724705219268799
    9. '    
' → logprob: -4.849705219268799
    10. ' in' → logprob: -4.849705219268799

Token 134: ' boundary' (ID: 35021)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.0315204858779907
    2. 'edges' → logprob: -1.0315204858779907
    3. ' the' → logprob: -2.406520366668701
    4. ' on' → logprob: -2.656520366668701
    5. 'on' → logprob: -3.031520366668701
    6. 'the' → logprob: -3.281520366668701
    7. ' its' → logprob: -4.406520366668701
    8. '   ' → logprob: -5.156520366668701
    9. ')' → logprob: -5.156520366668701
    10. 'b' → logprob: -5.281520366668701

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4999101758003235
    2. '):' → logprob: -0.9999101758003235
    3. '):
' → logprob: -4.124910354614258
    4. '   ' → logprob: -5.249910354614258
    5. ')
' → logprob: -5.749910354614258
    6. '):

' → logprob: -7.499910354614258
    7. 'def' → logprob: -8.499910354614258
    8. ')

' → logprob: -10.374910354614258
    9. ').' → logprob: -10.499910354614258
    10. '):
' → logprob: -11.124910354614258

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01782398298382759
    2. '    
' → logprob: -4.142824172973633
    3. '
' → logprob: -6.892824172973633
    4. ')' → logprob: -8.517824172973633
    5. ':' → logprob: -8.517824172973633
    6. 'def' → logprob: -8.892824172973633
    7. '```' → logprob: -10.267824172973633
    8. '   
' → logprob: -10.392824172973633
    9. '#' → logprob: -10.642824172973633
    10. '  
' → logprob: -10.642824172973633

Token 137: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.5196236371994019
    2. '   ' → logprob: -1.3946236371994019
    3. ' v' → logprob: -1.8946236371994019
    4. '#' → logprob: -5.769623756408691
    5. '    
' → logprob: -6.019623756408691
    6. 'def' → logprob: -8.394623756408691
    7. '	v' → logprob: -8.519623756408691
    8. 'ap' → logprob: -8.894623756408691
    9. '
' → logprob: -8.894623756408691
    10. ' ' → logprob: -8.894623756408691

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.625
    3. 'p' → logprob: -17.0
    4. 'ector' → logprob: -17.875
    5. '۰' → logprob: -18.625
    6. 'ectors' → logprob: -19.0
    7. '   ' → logprob: -19.25
    8. 'ect' → logprob: -19.5
    9. 'v' → logprob: -20.75
    10. 'ap' → logprob: -20.875

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03805365785956383
    2. '=' → logprob: -3.2880537509918213
    3. ' =
' → logprob: -12.288053512573242
    4. ',' → logprob: -12.663053512573242
    5. ' vector' → logprob: -13.413053512573242
    6. 'vector' → logprob: -13.913053512573242
    7. '<|end|>' → logprob: -14.913053512573242
    8. ')' → logprob: -15.163053512573242
    9. ' ' → logprob: -15.288053512573242
    10. '=
' → logprob: -15.413053512573242

Token 140: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.02324652671813965
    2. ' vector' → logprob: -3.7732465267181396
    3. '.vector' → logprob: -15.398246765136719
    4. '	vector' → logprob: -15.773246765136719
    5. 'Vector' → logprob: -15.898246765136719
    6. '_vector' → logprob: -15.898246765136719
    7. '<vector' → logprob: -16.14824676513672
    8. '   ' → logprob: -16.14824676513672
    9. '(vector' → logprob: -16.64824676513672
    10. ' ' → logprob: -16.89824676513672

Token 141: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0004926258116029203
    2. '_' → logprob: -7.625492572784424
    3. 'sub' → logprob: -12.375493049621582
    4. '_SUB' → logprob: -16.375492095947266
    5. '_Sub' → logprob: -16.625492095947266
    6. 'subtract' → logprob: -16.750492095947266
    7. 's' → logprob: -17.250492095947266
    8. '_
' → logprob: -17.250492095947266
    9. '=sub' → logprob: -17.375492095947266
    10. 'Sub' → logprob: -17.750492095947266

Token 142: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00024251631111837924
    2. '(b' → logprob: -8.500242233276367
    3. '(' → logprob: -10.375242233276367
    4. '<|end|>' → logprob: -12.625242233276367
    5. 'c' → logprob: -12.750242233276367
    6. ')c' → logprob: -14.500242233276367
    7. ' (' → logprob: -15.750242233276367
    8. '(C' → logprob: -15.750242233276367
    9. '(v' → logprob: -15.875242233276367
    10. '(
' → logprob: -15.875242233276367

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9153885558771435e-06
    2. 'a' → logprob: -12.500005722045898
    3. ' ,' → logprob: -13.750005722045898
    4. ',a' → logprob: -13.875005722045898
    5. ',
' → logprob: -17.3750057220459
    6. 'b' → logprob: -17.7500057220459
    7. ',b' → logprob: -18.0000057220459
    8. '‌,' → logprob: -18.1250057220459
    9. '，' → logprob: -19.1250057220459
    10. '<|end|>' → logprob: -19.3750057220459

Token 144: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00016432604752480984
    2. ' a' → logprob: -8.750164031982422
    3. '	a' → logprob: -12.125164031982422
    4. ')a' → logprob: -15.375164031982422
    5. '<|end|>' → logprob: -16.875164031982422
    6. '_a' → logprob: -17.500164031982422
    7. '<a' → logprob: -17.625164031982422
    8. '[a' → logprob: -17.750164031982422
    9. '   ' → logprob: -17.875164031982422
    10. ')' → logprob: -18.000164031982422

Token 145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005235529970377684
    2. ')
' → logprob: -5.25523567199707
    3. ')
' → logprob: -13.75523567199707
    4. ')

' → logprob: -15.00523567199707
    5. ' )' → logprob: -16.13023567199707
    6. '),' → logprob: -16.75523567199707
    7. ']' → logprob: -17.13023567199707
    8. '   ' → logprob: -17.38023567199707
    9. 'v' → logprob: -17.50523567199707
    10. ')`' → logprob: -17.88023567199707

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4760359227657318
    2. 'v' → logprob: -1.2260359525680542
    3. '
' → logprob: -3.4760358333587646
    4. '    
' → logprob: -4.226036071777344
    5. '<|end|>' → logprob: -4.226036071777344
    6. ' v' → logprob: -4.851036071777344
    7. '  
' → logprob: -4.976036071777344
    8. '	v' → logprob: -5.601036071777344
    9. ' 
' → logprob: -5.976036071777344
    10. ' ' → logprob: -6.726036071777344

Token 147: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.16023437678813934
    2. ' v' → logprob: -1.9102343320846558
    3. '	v' → logprob: -12.160234451293945
    4. '   ' → logprob: -12.285234451293945
    5. ' ' → logprob: -15.410234451293945
    6. '  ' → logprob: -17.160234451293945
    7. '    
' → logprob: -17.160234451293945
    8. ',v' → logprob: -17.410234451293945
    9. '
' → logprob: -18.535234451293945
    10. '    ' → logprob: -18.535234451293945

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.448370838072151e-05
    2. '0' → logprob: -9.375094413757324
    3. 'ector' → logprob: -11.875094413757324
    4. '_' → logprob: -13.625094413757324
    5. 'ectors' → logprob: -14.250094413757324
    6. 'ect' → logprob: -14.500094413757324
    7. ' =' → logprob: -16.37509536743164
    8. '=' → logprob: -16.75009536743164
    9. 'ec' → logprob: -17.50009536743164
    10. 'a' → logprob: -18.12509536743164

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326258182525635
    2. '=' → logprob: -1.3132625818252563
    3. ' ' → logprob: -15.063262939453125
    4. ' =
' → logprob: -15.313262939453125
    5. '=
' → logprob: -15.938262939453125
    6. '<|end|>' → logprob: -16.813262939453125
    7. 'v' → logprob: -16.938262939453125
    8. ')' → logprob: -17.313262939453125
    9. '=v' → logprob: -17.938262939453125
    10. ' =[' → logprob: -18.188262939453125

Token 150: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.005236479919403791
    2. ' vector' → logprob: -5.255236625671387
    3. '	vector' → logprob: -13.755236625671387
    4. '<vector' → logprob: -14.130236625671387
    5. '.vector' → logprob: -14.630236625671387
    6. '(vector' → logprob: -14.755236625671387
    7. '   ' → logprob: -16.38023567199707
    8. '_vector' → logprob: -16.63023567199707
    9. ' ' → logprob: -18.25523567199707
    10. 'vectors' → logprob: -18.75523567199707

Token 151: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -2.1008713702030946e-06
    2. 'sub' → logprob: -13.500001907348633
    3. '_' → logprob: -14.375001907348633
    4. 'Sub' → logprob: -17.625001907348633
    5. '_SUB' → logprob: -18.375001907348633
    6. '=' → logprob: -18.625001907348633
    7. '=sub' → logprob: -18.875001907348633
    8. ' =' → logprob: -19.125001907348633
    9. '[' → logprob: -19.250001907348633
    10. '_s' → logprob: -19.250001907348633

Token 152: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.9361264946837764e-07
    2. 'b' → logprob: -15.875
    3. '(c' → logprob: -17.5
    4. ' (' → logprob: -17.75
    5. '(a' → logprob: -18.875
    6. '(' → logprob: -19.125
    7. '	b' → logprob: -19.375
    8. '[b' → logprob: -19.75
    9. '(
' → logprob: -20.125
    10. ' b' → logprob: -20.25

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.180258191714529e-06
    2. ' ,' → logprob: -12.000008583068848
    3. 'a' → logprob: -13.875008583068848
    4. ',a' → logprob: -14.125008583068848
    5. ',
' → logprob: -16.00000762939453
    6. '<|end|>' → logprob: -16.37500762939453
    7. '‌,' → logprob: -17.25000762939453
    8. '[' → logprob: -17.50000762939453
    9. ' a' → logprob: -17.87500762939453
    10. ')' → logprob: -18.25000762939453

Token 154: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0010331686353310943
    2. ' a' → logprob: -6.876033306121826
    3. '<|end|>' → logprob: -15.501032829284668
    4. '	a' → logprob: -16.001033782958984
    5. '   ' → logprob: -17.126033782958984
    6. '[a' → logprob: -17.626033782958984
    7. ')a' → logprob: -18.251033782958984
    8. '[' → logprob: -18.376033782958984
    9. ')' → logprob: -18.501033782958984
    10. '>a' → logprob: -18.626033782958984

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06207367032766342
    2. ')
' → logprob: -2.8120737075805664
    3. '   ' → logprob: -9.187073707580566
    4. ')
' → logprob: -12.937073707580566
    5. ')

' → logprob: -15.062073707580566
    6. ' ' → logprob: -15.312073707580566
    7. ')p' → logprob: -15.812073707580566
    8. ' )' → logprob: -15.812073707580566
    9. ')v' → logprob: -15.937073707580566
    10. ' )
' → logprob: -16.18707275390625

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3935754597187042
    2. 'v' → logprob: -1.1435754299163818
    3. ' v' → logprob: -5.018575668334961
    4. '	v' → logprob: -9.893575668334961
    5. '  ' → logprob: -12.518575668334961
    6. '    
' → logprob: -12.643575668334961
    7. '    ' → logprob: -12.643575668334961
    8. 'p' → logprob: -12.768575668334961
    9. 'vp' → logprob: -13.018575668334961
    10. ' ' → logprob: -14.393575668334961

Token 157: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0036450917832553387
    2. ' v' → logprob: -6.128644943237305
    3. '   ' → logprob: -6.753644943237305
    4. 'vp' → logprob: -8.253644943237305
    5. '	v' → logprob: -10.503644943237305
    6. ' ' → logprob: -13.753644943237305
    7. ' vp' → logprob: -14.003644943237305
    8. '    
' → logprob: -14.128644943237305
    9. '    ' → logprob: -14.378644943237305
    10. '  ' → logprob: -14.378644943237305

Token 158: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006908721290528774
    2. '=' → logprob: -5.631908893585205
    3. ' =' → logprob: -5.881908893585205
    4. '1' → logprob: -9.256908416748047
    5. '2' → logprob: -9.256908416748047
    6. '[' → logprob: -9.381908416748047
    7. 'p' → logprob: -9.506908416748047
    8. '   ' → logprob: -10.131908416748047
    9. '_' → logprob: -10.381908416748047
    10. ' ' → logprob: -10.756908416748047

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750484973192215
    2. '=' → logprob: -3.5297505855560303
    3. ' ' → logprob: -17.90475082397461
    4. ' =
' → logprob: -18.40475082397461
    5. ')' → logprob: -18.90475082397461
    6. '<|end|>' → logprob: -19.15475082397461
    7. ' vector' → logprob: -19.90475082397461
    8. '=
' → logprob: -20.40475082397461
    9. 'vector' → logprob: -20.52975082397461
    10. '＝' → logprob: -21.02975082397461

Token 160: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.1269369274377823
    2. ' vector' → logprob: -2.126936912536621
    3. '   ' → logprob: -12.251936912536621
    4. '	vector' → logprob: -13.126936912536621
    5. '.vector' → logprob: -13.626936912536621
    6. '(vector' → logprob: -14.626936912536621
    7. ' ' → logprob: -15.876936912536621
    8. '<vector' → logprob: -16.501937866210938
    9. '_vector' → logprob: -16.626937866210938
    10. '  ' → logprob: -16.751937866210938

Token 161: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -2.868328920158092e-05
    2. 'sub' → logprob: -10.500028610229492
    3. 'vector' → logprob: -14.250028610229492
    4. 'Sub' → logprob: -14.750028610229492
    5. '-sub' → logprob: -17.000028610229492
    6. 'subtract' → logprob: -17.750028610229492
    7. '_SUB' → logprob: -18.375028610229492
    8. ' Sub' → logprob: -18.500028610229492
    9. '_' → logprob: -18.875028610229492
    10. ' суб' → logprob: -19.000028610229492

Token 162: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0007556661730632186
    2. '(vector' → logprob: -7.375755786895752
    3. 'vector' → logprob: -9.375755310058594
    4. '(' → logprob: -10.250755310058594
    5. '(point' → logprob: -12.000755310058594
    6. ' vector' → logprob: -13.625755310058594
    7. '(
' → logprob: -14.375755310058594
    8. '(sub' → logprob: -14.875755310058594
    9. 'p' → logprob: -15.500755310058594
    10. 'sub' → logprob: -15.625755310058594

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.802049756515771e-05
    2. ' ,' → logprob: -9.625067710876465
    3. '‌,' → logprob: -13.875067710876465
    4. ',a' → logprob: -15.000067710876465
    5. 'a' → logprob: -15.875067710876465
    6. ')' → logprob: -15.875067710876465
    7. ',
' → logprob: -16.37506866455078
    8. '[' → logprob: -16.87506866455078
    9. '<|end|>' → logprob: -17.00006866455078
    10. ',b' → logprob: -17.12506866455078

Token 164: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10020849853754044
    2. ' a' → logprob: -2.3502085208892822
    3. '	a' → logprob: -13.475208282470703
    4. ' ' → logprob: -15.100208282470703
    5. ')a' → logprob: -17.725208282470703
    6. '   ' → logprob: -17.850208282470703
    7. '[a' → logprob: -18.600208282470703
    8. 'а' → logprob: -18.600208282470703
    9. ''a' → logprob: -18.600208282470703
    10. '"a' → logprob: -18.725208282470703

Token 165: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004120430909097195
    2. ')
' → logprob: -5.504120349884033
    3. '   ' → logprob: -10.129120826721191
    4. ')

' → logprob: -14.254120826721191
    5. ')
' → logprob: -14.754120826721191
    6. ' )' → logprob: -15.004120826721191
    7. ' ' → logprob: -15.004120826721191
    8. '
' → logprob: -15.754120826721191
    9. ')`' → logprob: -16.504119873046875
    10. '```' → logprob: -17.379119873046875

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19654402136802673
    2. '
' → logprob: -1.9465440511703491
    3. 'dot' → logprob: -4.321544170379639
    4. '    
' → logprob: -4.571544170379639
    5. ' dot' → logprob: -4.946544170379639
    6. 'd' → logprob: -5.946544170379639
    7. 'v' → logprob: -8.44654369354248
    8. '   
' → logprob: -8.44654369354248
    9. '```' → logprob: -8.57154369354248
    10. '    ' → logprob: -8.69654369354248

Token 167: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' (adapté à ' dot') → logprob: -0.0684220939874649
    2. ' dot' → logprob: -3.3184220790863037
    3. 'd' → logprob: -3.5684220790863037
    4. 'den' → logprob: -6.693422317504883
    5. '   ' → logprob: -7.943422317504883
    6. ' d' → logprob: -10.068422317504883
    7. '    
' → logprob: -10.693422317504883
    8. '```' → logprob: -10.818422317504883
    9. '#' → logprob: -11.318422317504883
    10. ' ' → logprob: -12.318422317504883

Token 168: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0009607735555619001
    2. '0' → logprob: -7.625960826873779
    3. '_' → logprob: -8.125960350036621
    4. 'v' → logprob: -9.125960350036621
    5. '_v' → logprob: -10.125960350036621
    6. '01' → logprob: -10.750960350036621
    7. '(v' → logprob: -12.500960350036621
    8. 'd' → logprob: -13.000960350036621
    9. 'V' → logprob: -15.750960350036621
    10. 'dot' → logprob: -16.125961303710938

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08912179619073868
    2. '=' → logprob: -2.4641218185424805
    3. ',' → logprob: -8.71412181854248
    4. ' ' → logprob: -11.58912181854248
    5. ')' → logprob: -12.33912181854248
    6. '   ' → logprob: -13.33912181854248
    7. ' =
' → logprob: -13.58912181854248
    8. '  ' → logprob: -14.58912181854248
    9. ' ,' → logprob: -14.96412181854248
    10. ']' → logprob: -15.71412181854248

Token 170: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.014165744185447693
    2. ' dot' → logprob: -4.264165878295898
    3. '(dot' → logprob: -13.264165878295898
    4. '_dot' → logprob: -15.889165878295898
    5. '-dot' → logprob: -16.0141658782959
    6. '   ' → logprob: -16.6391658782959
    7. ' ' → logprob: -17.1391658782959
    8. '.dot' → logprob: -17.2641658782959
    9. 'Dot' → logprob: -17.7641658782959
    10. '  ' → logprob: -18.2641658782959

Token 171: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -3.5716304410016164e-05
    2. '(' → logprob: -10.250035285949707
    3. ' (' → logprob: -15.875035285949707
    4. '(
' → logprob: -16.000036239624023
    5. ')' → logprob: -17.500036239624023
    6. ')(' → logprob: -17.625036239624023
    7. 'v' → logprob: -18.125036239624023
    8. ')v' → logprob: -19.500036239624023
    9. ',v' → logprob: -19.875036239624023
    10. '(V' → logprob: -20.000036239624023

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '(v' → logprob: -14.500000953674316
    3. '(' → logprob: -19.5
    4. '۰' → logprob: -20.0
    5. ')' → logprob: -20.125
    6. '2' → logprob: -20.25
    7. 'v' → logprob: -20.375
    8. ' ' → logprob: -20.75
    9. '<v' → logprob: -20.875
    10. 'o' → logprob: -21.0

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010127831774298102
    2. ',v' → logprob: -9.250101089477539
    3. ' ,' → logprob: -12.375101089477539
    4. 'v' → logprob: -14.000101089477539
    5. ',
' → logprob: -17.62510108947754
    6. '   ' → logprob: -18.25010108947754
    7. ')' → logprob: -18.62510108947754
    8. ' v' → logprob: -19.12510108947754
    9. ',d' → logprob: -19.25010108947754
    10. '‌,' → logprob: -19.37510108947754

Token 174: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005237429868429899
    2. ' v' → logprob: -5.255237579345703
    3. '	v' → logprob: -13.380237579345703
    4. ')v' → logprob: -13.380237579345703
    5. ')' → logprob: -14.880237579345703
    6. '_v' → logprob: -16.880237579345703
    7. '   ' → logprob: -16.880237579345703
    8. '0' → logprob: -17.130237579345703
    9. '(v' → logprob: -17.255237579345703
    10. ' ' → logprob: -17.880237579345703

Token 175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '۰' → logprob: -18.625
    4. ')' → logprob: -19.25
    5. '[' → logprob: -20.25
    6. '1' → logprob: -20.625
    7. '   ' → logprob: -20.875
    8. '০' → logprob: -21.0
    9. '０' → logprob: -21.0
    10. 'o' → logprob: -21.875

Token 176: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004082078114151955
    2. ')
' → logprob: -5.504082202911377
    3. '   ' → logprob: -13.879081726074219
    4. ')

' → logprob: -14.004081726074219
    5. ' )' → logprob: -14.129081726074219
    6. ')
' → logprob: -14.379081726074219
    7. '),' → logprob: -15.504081726074219
    8. ' ' → logprob: -15.879081726074219
    9. ' )
' → logprob: -17.12908172607422
    10. ')`' → logprob: -17.12908172607422

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1255718618631363
    2. '
' → logprob: -2.7505719661712646
    3. 'dot' → logprob: -3.2505719661712646
    4. '    
' → logprob: -4.3755717277526855
    5. '  
' → logprob: -7.5005717277526855
    6. '(dot' → logprob: -7.5005717277526855
    7. ' dot' → logprob: -8.625572204589844
    8. '   
' → logprob: -8.625572204589844
    9. '<|end|>' → logprob: -8.625572204589844
    10. '  ' → logprob: -8.750572204589844

Token 178: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' (adapté à ' dot') → logprob: -0.056029245257377625
    2. ' dot' → logprob: -2.9310293197631836
    3. '   ' → logprob: -7.306029319763184
    4. '    
' → logprob: -9.181029319763184
    5. ' ' → logprob: -9.306029319763184
    6. '.' → logprob: -9.806029319763184
    7. ' 
' → logprob: -10.181029319763184
    8. '0' → logprob: -10.431029319763184
    9. '(dot' → logprob: -10.556029319763184
    10. '    ' → logprob: -10.681029319763184

Token 179: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.00019948746194131672
    2. '11' → logprob: -8.625199317932129
    3. '10' → logprob: -10.875199317932129
    4. '0' → logprob: -14.125199317932129
    5. '011' → logprob: -16.750200271606445
    6. '_' → logprob: -18.000200271606445
    7. '1' → logprob: -18.000200271606445
    8. '00' → logprob: -18.500200271606445
    9. ' ' → logprob: -19.000200271606445
    10. '   ' → logprob: -19.125200271606445

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018153101205825806
    2. '=' → logprob: -4.018153190612793
    3. ' ' → logprob: -13.268153190612793
    4. ')' → logprob: -14.018153190612793
    5. ',' → logprob: -15.518153190612793
    6. '<|end|>' → logprob: -15.518153190612793
    7. ' =
' → logprob: -16.643152236938477
    8. ' =[' → logprob: -17.393152236938477
    9. ' =)' → logprob: -17.768152236938477
    10. ' ='' → logprob: -17.893152236938477

Token 181: ' dot' (ID: 16579)
  Prédit: ' dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dot' → logprob: -0.5761300325393677
    2. 'dot' → logprob: -0.8261300325393677
    3. '(dot' → logprob: -8.576129913330078
    4. '.dot' → logprob: -13.701129913330078
    5. '0' → logprob: -14.951129913330078
    6. '_dot' → logprob: -15.201129913330078
    7. '-dot' → logprob: -16.451129913330078
    8. ' ' → logprob: -16.451129913330078
    9. 'Dot' → logprob: -17.076129913330078
    10. '   ' → logprob: -17.576129913330078

Token 182: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0004884536610916257
    2. '(' → logprob: -7.62548828125
    3. '(
' → logprob: -15.37548828125
    4. ' (' → logprob: -15.37548828125
    5. '(vector' → logprob: -17.75048828125
    6. '(var' → logprob: -18.37548828125
    7. '(u' → logprob: -18.50048828125
    8. '<|end|>' → logprob: -19.00048828125
    9. '(s' → logprob: -19.37548828125
    10. '(dot' → logprob: -19.62548828125

Token 183: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.578663170337677
    2. '0' → logprob: -0.828663170337677
    3. '(v' → logprob: -6.203663349151611
    4. '(' → logprob: -7.328663349151611
    5. ' ' → logprob: -11.453662872314453
    6. ' (' → logprob: -11.453662872314453
    7. '   ' → logprob: -12.328662872314453
    8. '01' → logprob: -12.578662872314453
    9. '[' → logprob: -12.953662872314453
    10. ')' → logprob: -13.703662872314453

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048179292934946716
    2. ' ,' → logprob: -7.750481605529785
    3. ',v' → logprob: -10.000481605529785
    4. ',
' → logprob: -12.750481605529785
    5. ')' → logprob: -13.500481605529785
    6. '<|end|>' → logprob: -14.875481605529785
    7. ' ' → logprob: -15.125481605529785
    8. '‌,' → logprob: -16.0004825592041
    9. '(' → logprob: -16.6254825592041
    10. ',)' → logprob: -16.7504825592041

Token 185: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.57594233751297
    2. ' v' → logprob: -0.82594233751297
    3. '	v' → logprob: -13.075942039489746
    4. ')v' → logprob: -14.325942039489746
    5. '(v' → logprob: -16.575942993164062
    6. ')' → logprob: -17.200942993164062
    7. ' ' → logprob: -17.575942993164062
    8. '_v' → logprob: -17.950942993164062
    9. 'vector' → logprob: -18.075942993164062
    10. '[v' → logprob: -18.325942993164062

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -18.3125
    4. 'v' → logprob: -18.4375
    5. '0' → logprob: -18.5
    6. '```' → logprob: -18.875
    7. '１' → logprob: -19.1875
    8. ')' → logprob: -19.4375
    9. '[' → logprob: -19.75
    10. '
' → logprob: -20.375

Token 187: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023262133821845055
    2. ')
' → logprob: -3.7732620239257812
    3. '   ' → logprob: -11.273262023925781
    4. ')
' → logprob: -13.273262023925781
    5. ')

' → logprob: -14.273262023925781
    6. ' )' → logprob: -14.523262023925781
    7. ' ' → logprob: -15.523262023925781
    8. ' )
' → logprob: -15.648262023925781
    9. '),' → logprob: -15.648262023925781
    10. '```' → logprob: -15.773262023925781

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032797686755657196
    2. '
' → logprob: -4.282797813415527
    3. '    
' → logprob: -4.532797813415527
    4. 'dot' → logprob: -5.657797813415527
    5. ' dot' → logprob: -6.532797813415527
    6. ' 
' → logprob: -7.032797813415527
    7. '  
' → logprob: -7.657797813415527
    8. '(dot' → logprob: -7.782797813415527
    9. '   
' → logprob: -7.907797813415527
    10. '  ' → logprob: -8.407797813415527

Token 189: ' dot' (ID: 16579)
  Prédit: ' dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dot' → logprob: -0.4741177558898926
    2. 'dot' (adapté à ' dot') → logprob: -0.9741177558898926
    3. '   ' → logprob: -10.349117279052734
    4. '(dot' → logprob: -12.474117279052734
    5. '
' → logprob: -13.099117279052734
    6. '.dot' → logprob: -14.474117279052734
    7. ' ' → logprob: -14.724117279052734
    8. '-dot' → logprob: -14.724117279052734
    9. '0' → logprob: -15.099117279052734
    10. '_dot' → logprob: -15.349117279052734

Token 190: '02' (ID: 3286)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.47436636686325073
    2. '11' → logprob: -0.9743663668632507
    3. '1' → logprob: -9.224366188049316
    4. '02' → logprob: -9.724366188049316
    5. '01' → logprob: -10.099366188049316
    6. '(v' → logprob: -10.349366188049316
    7. '   ' → logprob: -11.224366188049316
    8. '(' → logprob: -11.224366188049316
    9. '0' → logprob: -11.849366188049316
    10. '(p' → logprob: -11.974366188049316

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022492945194244
    2. '=' → logprob: -1.9102249145507812
    3. ' ' → logprob: -15.160224914550781
    4. ')' → logprob: -15.160224914550781
    5. '   ' → logprob: -16.78522491455078
    6. ' =
' → logprob: -17.66022491455078
    7. ',' → logprob: -17.78522491455078
    8. '[' → logprob: -17.91022491455078
    9. '<|end|>' → logprob: -17.91022491455078
    10. ':' → logprob: -18.03522491455078

Token 192: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.47408145666122437
    2. ' dot' → logprob: -0.9740814566612244
    3. '(dot' → logprob: -12.349081039428711
    4. '.dot' → logprob: -16.47408103942871
    5. '_dot' → logprob: -17.22408103942871
    6. '-dot' → logprob: -17.72408103942871
    7. ' ' → logprob: -18.47408103942871
    8. '   ' → logprob: -18.47408103942871
    9. 'Dot' → logprob: -18.72408103942871
    10. 'dots' → logprob: -19.47408103942871

Token 193: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00020389800192788243
    2. '(' → logprob: -8.500204086303711
    3. ' (' → logprob: -15.750204086303711
    4. '(
' → logprob: -16.87520408630371
    5. '(vector' → logprob: -17.12520408630371
    6. '0' → logprob: -17.50020408630371
    7. 'v' → logprob: -17.87520408630371
    8. '	v' → logprob: -18.87520408630371
    9. ')' → logprob: -19.00020408630371
    10. '[v' → logprob: -19.37520408630371

Token 194: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.750015258789062
    3. '0' → logprob: -12.500015258789062
    4. '   ' → logprob: -13.375015258789062
    5. '(' → logprob: -14.875015258789062
    6. '[' → logprob: -14.937515258789062
    7. ')' → logprob: -15.187515258789062
    8. '```' → logprob: -15.312515258789062
    9. '20' → logprob: -15.750015258789062
    10. '    ' → logprob: -16.125015258789062

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006215345347300172
    2. ',v' → logprob: -7.625621318817139
    3. '(v' → logprob: -9.500621795654297
    4. ' ,' → logprob: -10.375621795654297
    5. ')' → logprob: -11.250621795654297
    6. ',
' → logprob: -12.375621795654297
    7. 'v' → logprob: -12.500621795654297
    8. '),' → logprob: -12.625621795654297
    9. '(' → logprob: -13.500621795654297
    10. ' v' → logprob: -14.625621795654297

Token 196: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2519303858280182
    2. ' v' → logprob: -1.5019303560256958
    3. '	v' → logprob: -13.751930236816406
    4. ')v' → logprob: -16.001930236816406
    5. '   ' → logprob: -16.251930236816406
    6. ')' → logprob: -17.876930236816406
    7. '(v' → logprob: -18.501930236816406
    8. '_v' → logprob: -18.751930236816406
    9. ' ' → logprob: -18.876930236816406
    10. '2' → logprob: -19.126930236816406

Token 197: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.00000286102295
    3. ')' → logprob: -14.75000286102295
    4. '۲' → logprob: -16.250003814697266
    5. '₂' → logprob: -16.875003814697266
    6. '   ' → logprob: -17.000003814697266
    7. '```' → logprob: -17.125003814697266
    8. '２' → logprob: -18.125003814697266
    9. 'p' → logprob: -18.437503814697266
    10. '  ' → logprob: -18.750003814697266

Token 198: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029796889051795006
    2. ')
' → logprob: -3.529796838760376
    3. '   ' → logprob: -10.029796600341797
    4. ')
' → logprob: -13.904796600341797
    5. ')

' → logprob: -14.529796600341797
    6. ' )' → logprob: -15.654796600341797
    7. '```' → logprob: -15.904796600341797
    8. ' ' → logprob: -16.029796600341797
    9. '),' → logprob: -16.154796600341797
    10. ')`' → logprob: -16.279796600341797

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39493173360824585
    2. '
' → logprob: -1.1449317932128906
    3. 'dot' → logprob: -5.519931793212891
    4. '    
' → logprob: -5.644931793212891
    5. ' dot' → logprob: -8.39493179321289
    6. '
' → logprob: -9.39493179321289
    7. '   
' → logprob: -9.76993179321289
    8. '  
' → logprob: -10.39493179321289
    9. '```' → logprob: -10.76993179321289
    10. ' 
' → logprob: -11.26993179321289

Token 200: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' (adapté à ' dot') → logprob: -0.07225391268730164
    2. ' dot' → logprob: -3.197253942489624
    3. '   ' → logprob: -3.572253942489624
    4. '
' → logprob: -7.322253704071045
    5. '(dot' → logprob: -10.822254180908203
    6. ' ' → logprob: -10.947254180908203
    7. '  ' → logprob: -11.072254180908203
    8. '    
' → logprob: -12.447254180908203
    9. '```' → logprob: -12.447254180908203
    10. '_dot' → logprob: -12.447254180908203

Token 201: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0005045388825237751
    2. '01' → logprob: -7.625504493713379
    3. '12' → logprob: -11.125504493713379
    4. '10' → logprob: -14.500504493713379
    5. '011' → logprob: -14.500504493713379
    6. ' ' → logprob: -15.500504493713379
    7. '   ' → logprob: -15.875504493713379
    8. '1' → logprob: -15.875504493713379
    9. '=' → logprob: -16.125505447387695
    10. '[' → logprob: -16.875505447387695

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048587486147880554
    2. '=' → logprob: -3.0485875606536865
    3. ' ' → logprob: -17.173587799072266
    4. ',' → logprob: -18.298587799072266
    5. ' =
' → logprob: -18.423587799072266
    6. '<|end|>' → logprob: -18.548587799072266
    7. ')' → logprob: -18.798587799072266
    8. '   ' → logprob: -19.673587799072266
    9. '=
' → logprob: -19.798587799072266
    10. ' ' → logprob: -19.923587799072266

Token 203: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.018150296062231064
    2. ' dot' → logprob: -4.018150329589844
    3. '(dot' → logprob: -14.768150329589844
    4. '_dot' → logprob: -18.768150329589844
    5. '.dot' → logprob: -18.893150329589844
    6. '-dot' → logprob: -19.018150329589844
    7. 'Dot' → logprob: -19.393150329589844
    8. '
' → logprob: -19.643150329589844
    9. 'def' → logprob: -20.893150329589844
    10. '   ' → logprob: -21.018150329589844

Token 204: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -13.875000953674316
    3. '(
' → logprob: -17.250001907348633
    4. ' (' → logprob: -18.125001907348633
    5. 'v' → logprob: -19.625001907348633
    6. '	v' → logprob: -21.750001907348633
    7. '(vector' → logprob: -21.875001907348633
    8. '[v' → logprob: -22.375001907348633
    9. '(b' → logprob: -22.375001907348633
    10. '<v' → logprob: -22.875001907348633

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '(v' → logprob: -15.375
    3. 'v' → logprob: -18.0
    4. ' ' → logprob: -18.75
    5. ',v' → logprob: -19.0
    6. '[v' → logprob: -20.25
    7. '   ' → logprob: -20.375
    8. '[' → logprob: -20.625
    9. '(' → logprob: -20.75
    10. ',' → logprob: -21.0

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000356199947418645
    2. ',v' → logprob: -8.000356674194336
    3. ' ,' → logprob: -11.000356674194336
    4. ',
' → logprob: -12.625356674194336
    5. 'v' → logprob: -15.250356674194336
    6. ',b' → logprob: -15.750356674194336
    7. '[' → logprob: -15.750356674194336
    8. ' v' → logprob: -16.250356674194336
    9. ')' → logprob: -16.500356674194336
    10. '(v' → logprob: -17.000356674194336

Token 207: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03804171830415726
    2. ' v' → logprob: -3.288041830062866
    3. '	v' → logprob: -15.038042068481445
    4. ')v' → logprob: -16.913042068481445
    5. '(v' → logprob: -18.163042068481445
    6. '1' → logprob: -18.413042068481445
    7. '   ' → logprob: -19.038042068481445
    8. '[' → logprob: -19.163042068481445
    9. ' ' → logprob: -19.413042068481445
    10. 'vector' → logprob: -19.663042068481445

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.750009536743164
    3. '<|end|>' → logprob: -15.000009536743164
    4. ')' → logprob: -15.125009536743164
    5. '<|end|>' → logprob: -15.500009536743164
    6. '[' → logprob: -15.625009536743164
    7. '۱' → logprob: -16.500009536743164
    8. 'v' → logprob: -16.625009536743164
    9. ',' → logprob: -18.000009536743164
    10. '   ' → logprob: -18.125009536743164

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.386931449174881
    2. ')
' → logprob: -1.1369314193725586
    3. '   ' → logprob: -9.886931419372559
    4. ' )
' → logprob: -12.511931419372559
    5. ')
' → logprob: -12.511931419372559
    6. ' )' → logprob: -13.261931419372559
    7. ' ' → logprob: -15.136931419372559
    8. ')

' → logprob: -16.761932373046875
    9. ')`
' → logprob: -17.261932373046875
    10. ',' → logprob: -17.761932373046875

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.322582483291626
    2. ' dot' → logprob: -1.322582483291626
    3. 'dot' → logprob: -4.697582244873047
    4. '
' → logprob: -9.072582244873047
    5. '```' → logprob: -11.197582244873047
    6. '(dot' → logprob: -11.572582244873047
    7. '  ' → logprob: -12.322582244873047
    8. '    
' → logprob: -12.822582244873047
    9. ' ' → logprob: -12.947582244873047
    10. '    ' → logprob: -13.072582244873047

Token 211: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' (adapté à ' dot') → logprob: -0.16022473573684692
    2. ' dot' → logprob: -1.9102246761322021
    3. '(dot' → logprob: -14.410224914550781
    4. '_dot' → logprob: -17.03522491455078
    5. '```' → logprob: -17.16022491455078
    6. '   ' → logprob: -17.16022491455078
    7. '-dot' → logprob: -17.66022491455078
    8. 'Dot' → logprob: -17.91022491455078
    9. 'dots' → logprob: -18.66022491455078
    10. '.dot' → logprob: -18.78522491455078

Token 212: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.0010092307347804308
    2. '02' → logprob: -7.001009464263916
    3. '01' → logprob: -10.001008987426758
    4. '
' → logprob: -11.001008987426758
    5. '```' → logprob: -11.376008987426758
    6. '10' → logprob: -12.126008987426758
    7. '2' → logprob: -12.126008987426758
    8. '   ' → logprob: -12.251008987426758
    9. ' ' → logprob: -12.501008987426758
    10. '012' → logprob: -13.501008987426758

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132617771625519
    2. '=' → logprob: -1.3132617473602295
    3. ' ' → logprob: -16.938261032104492
    4. ')' → logprob: -17.688261032104492
    5. ',' → logprob: -19.813261032104492
    6. 's' → logprob: -19.938261032104492
    7. '=

' → logprob: -20.063261032104492
    8. ' ' → logprob: -20.188261032104492
    9. '[' → logprob: -20.188261032104492
    10. '＝' → logprob: -20.563261032104492

Token 214: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.3868720829486847
    2. ' dot' → logprob: -1.1368720531463623
    3. '(dot' → logprob: -13.761872291564941
    4. '_dot' → logprob: -18.761871337890625
    5. ' ' → logprob: -18.886871337890625
    6. '.dot' → logprob: -19.011871337890625
    7. '   ' → logprob: -19.636871337890625
    8. 'Dot' → logprob: -19.761871337890625
    9. '-dot' → logprob: -20.261871337890625
    10. ' ' → logprob: -20.636871337890625

Token 215: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.1637164789135568e-05
    2. '(' → logprob: -11.375011444091797
    3. '(
' → logprob: -16.375011444091797
    4. '(vector' → logprob: -19.750011444091797
    5. 'v' → logprob: -20.125011444091797
    6. ' (' → logprob: -20.250011444091797
    7. '(b' → logprob: -20.500011444091797
    8. '(a' → logprob: -21.750011444091797
    9. '(

' → logprob: -22.125011444091797
    10. '(s' → logprob: -22.250011444091797

Token 216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. '2' → logprob: -11.125017166137695
    3. '```' → logprob: -14.000017166137695
    4. '[' → logprob: -14.875017166137695
    5. '0' → logprob: -15.562517166137695
    6. ' ' → logprob: -15.875017166137695
    7. ')' → logprob: -16.062517166137695
    8. '   ' → logprob: -16.187517166137695
    9. '
' → logprob: -16.937517166137695
    10. '(' → logprob: -16.937517166137695

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00587297510355711
    2. ',v' → logprob: -5.630873203277588
    3. '(v' → logprob: -6.130873203277588
    4. ' ,' → logprob: -10.38087272644043
    5. 'v' → logprob: -10.50587272644043
    6. ')' → logprob: -11.00587272644043
    7. ',
' → logprob: -11.63087272644043
    8. '[v' → logprob: -12.50587272644043
    9. ' v' → logprob: -12.75587272644043
    10. '[' → logprob: -13.88087272644043

Token 218: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.029751762747764587
    2. ' v' → logprob: -3.529751777648926
    3. '	v' → logprob: -13.779751777648926
    4. ')v' → logprob: -16.52975082397461
    5. 'vector' → logprob: -16.65475082397461
    6. ')' → logprob: -17.40475082397461
    7. ' ' → logprob: -17.65475082397461
    8. '0' → logprob: -17.65475082397461
    9. '   ' → logprob: -17.77975082397461
    10. '*v' → logprob: -18.02975082397461

Token 219: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.625005722045898
    4. '1' → logprob: -17.1250057220459
    5. '[' → logprob: -17.4375057220459
    6. '12' → logprob: -17.7500057220459
    7. '```' → logprob: -17.9375057220459
    8. '۲' → logprob: -18.1250057220459
    9. '
' → logprob: -18.5000057220459
    10. ')' → logprob: -18.5625057220459

Token 220: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001422770437784493
    2. ')
' → logprob: -9.375142097473145
    3. '   ' → logprob: -10.000142097473145
    4. ')

' → logprob: -11.500142097473145
    5. ' )' → logprob: -13.375142097473145
    6. ')
' → logprob: -16.12514305114746
    7. ' ' → logprob: -16.37514305114746
    8. ')`' → logprob: -16.50014305114746
    9. ']' → logprob: -17.62514305114746
    10. ')

' → logprob: -18.12514305114746

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09908448159694672
    2. '
' → logprob: -2.7240843772888184
    3. 'den' → logprob: -3.7240843772888184
    4. '    
' → logprob: -6.224084377288818
    5. ' denom' → logprob: -6.974084377288818
    6. 'd' → logprob: -7.474084377288818
    7. 'det' → logprob: -8.099084854125977
    8. ' denominator' → logprob: -8.474084854125977
    9. '```' → logprob: -9.474084854125977
    10. ' den' → logprob: -9.849084854125977

Token 222: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.4757026135921478
    2. 'inv' → logprob: -0.9757026433944702
    3. ' denom' → logprob: -6.60070276260376
    4. 'in' → logprob: -8.850702285766602
    5. ' inv' → logprob: -9.225702285766602
    6. 'div' → logprob: -11.975702285766602
    7. '#' → logprob: -12.225702285766602
    8. 'Den' → logprob: -12.350702285766602
    9. '   ' → logprob: -12.600702285766602
    10. ' den' → logprob: -13.600702285766602

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519519627094269
    2. '=' → logprob: -1.5019519329071045
    3. ' ' → logprob: -10.876952171325684
    4. ' =
' → logprob: -13.251952171325684
    5. '   ' → logprob: -13.876952171325684
    6. '  ' → logprob: -14.751952171325684
    7. ',' → logprob: -14.876952171325684
    8. 'space' → logprob: -16.126951217651367
    9. 's' → logprob: -16.251951217651367
    10. ' ' → logprob: -16.501951217651367

Token 224: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.025588717311620712
    2. '(dot' → logprob: -3.7755887508392334
    3. ' dot' → logprob: -6.275588512420654
    4. '   ' → logprob: -8.025588989257812
    5. ' (' → logprob: -10.025588989257812
    6. '(' → logprob: -10.150588989257812
    7. '  ' → logprob: -10.650588989257812
    8. ' ' → logprob: -10.900588989257812
    9. '    ' → logprob: -12.650588989257812
    10. '(d' → logprob: -13.650588989257812

Token 225: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -1.9361264946837764e-07
    2. '11' → logprob: -15.625
    3. '[' → logprob: -20.875
    4. ' ' → logprob: -21.25
    5. '```' → logprob: -22.5
    6. '
' → logprob: -23.0
    7. '   ' → logprob: -23.5
    8. '

' → logprob: -23.5
    9. '0' → logprob: -23.5
    10. '01' → logprob: -23.625

Token 226: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4740864336490631
    2. '*' → logprob: -0.9740864038467407
    3. '=' → logprob: -12.72408676147461
    4. ' ' → logprob: -12.72408676147461
    5. 'dot' → logprob: -13.22408676147461
    6. '**' → logprob: -14.09908676147461
    7. '.' → logprob: -15.47408676147461
    8. '1' → logprob: -15.97408676147461
    9. '   ' → logprob: -15.97408676147461
    10. ' =' → logprob: -16.84908676147461

Token 227: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.0011718906462192535
    2. ' dot' → logprob: -6.751172065734863
    3. '(dot' → logprob: -14.126172065734863
    4. '_dot' → logprob: -14.501172065734863
    5. '.dot' → logprob: -14.876172065734863
    6. '-dot' → logprob: -17.126171112060547
    7. 'Dot' → logprob: -17.876171112060547
    8. 'dots' → logprob: -18.126171112060547
    9. '11' → logprob: -18.626171112060547
    10. 'd' → logprob: -18.626171112060547

Token 228: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '
' → logprob: -17.0
    4. '   ' → logprob: -18.25
    5. '[' → logprob: -18.375
    6. '１１' → logprob: -18.5
    7. '११' → logprob: -19.375
    8. '

' → logprob: -19.375
    9. '1' → logprob: -19.5
    10. '  ' → logprob: -20.0625

Token 229: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004623441956937313
    2. '-' → logprob: -5.3796234130859375
    3. ' ' → logprob: -12.754623413085938
    4. '   ' → logprob: -16.004623413085938
    5. ' -
' → logprob: -17.254623413085938
    6. '.' → logprob: -17.879623413085938
    7. 'dot' → logprob: -18.004623413085938
    8. '  ' → logprob: -18.254623413085938
    9. '-dot' → logprob: -18.254623413085938
    10. ' .' → logprob: -18.379623413085938

Token 230: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.20142006874084473
    2. ' dot' → logprob: -1.7014200687408447
    3. '(dot' → logprob: -11.951419830322266
    4. '_dot' → logprob: -16.326419830322266
    5. ' ' → logprob: -16.451419830322266
    6. '.dot' → logprob: -16.701419830322266
    7. 'Dot' → logprob: -17.701419830322266
    8. '-dot' → logprob: -17.826419830322266
    9. '   ' → logprob: -18.201419830322266
    10. 'dots' → logprob: -19.326419830322266

Token 231: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: 0.0
    2. ' ' → logprob: -19.625
    3. '[' → logprob: -21.625
    4. '_' → logprob: -22.25
    5. '001' → logprob: -22.25
    6. '```' → logprob: -22.625
    7. '
' → logprob: -22.875
    8. '   ' → logprob: -23.0
    9. '0' → logprob: -23.125
    10. '00' → logprob: -23.25

Token 232: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0031830633524805307
    2. '*' → logprob: -5.753182888031006
    3. ' ' → logprob: -12.878183364868164
    4. '**' → logprob: -13.003183364868164
    5. ' **' → logprob: -14.503183364868164
    6. ' ' → logprob: -16.878183364868164
    7. ' *
' → logprob: -19.378183364868164
    8. '*object' → logprob: -20.128183364868164
    9. ' dot' → logprob: -20.503183364868164
    10. '2' → logprob: -20.503183364868164

Token 233: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.2014193832874298
    2. ' dot' → logprob: -1.7014193534851074
    3. '(dot' → logprob: -12.576419830322266
    4. '.dot' → logprob: -13.826419830322266
    5. '_dot' → logprob: -14.826419830322266
    6. '2' → logprob: -15.076419830322266
    7. '-dot' → logprob: -15.076419830322266
    8. '   ' → logprob: -15.201419830322266
    9. ' ' → logprob: -15.826419830322266
    10. 'Dot' → logprob: -16.576419830322266

Token 234: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.00030590701499022543
    2. '1' → logprob: -8.750306129455566
    3. '```' → logprob: -9.750306129455566
    4. '*' → logprob: -10.750306129455566
    5. ' ' → logprob: -11.125306129455566
    6. '0' → logprob: -11.875306129455566
    7. '00' → logprob: -12.000306129455566
    8. '   ' → logprob: -12.000306129455566
    9. '[' → logprob: -12.375306129455566
    10. '  ' → logprob: -12.875306129455566

Token 235: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14168788492679596
    2. '   ' → logprob: -2.2666878700256348
    3. '    
' → logprob: -4.391687870025635
    4. 'if' → logprob: -4.641687870025635
    5. ' if' → logprob: -5.516687870025635
    6. '  
' → logprob: -7.391687870025635
    7. '   
' → logprob: -7.391687870025635
    8. ' 
' → logprob: -7.766687870025635
    9. '     
' → logprob: -8.766688346862793
    10. '=' → logprob: -9.516688346862793

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03391146659851074
    2. ' if' → logprob: -3.9089114665985107
    3. '
' → logprob: -4.90891170501709
    4. 'if' → logprob: -5.65891170501709
    5. '    
' → logprob: -6.28391170501709
    6. '   
' → logprob: -8.65891170501709
    7. ',' → logprob: -9.53391170501709
    8. '  
' → logprob: -9.65891170501709
    9. ' 
' → logprob: -10.03391170501709
    10. ' ' → logprob: -10.15891170501709

Token 237: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1659994274377823
    2. 'if' → logprob: -1.915999412536621
    3. '   ' → logprob: -5.290999412536621
    4. 'u' → logprob: -7.790999412536621
    5. ' u' → logprob: -9.415999412536621
    6. '
' → logprob: -9.665999412536621
    7. ',' → logprob: -10.290999412536621
    8. 't' → logprob: -11.040999412536621
    9. 'inv' → logprob: -11.040999412536621
    10. 'y' → logprob: -11.540999412536621

Token 238: ' In' (ID: 730)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007714159321039915
    2. ' if' → logprob: -4.88271427154541
    3. '   ' → logprob: -9.25771427154541
    4. '#' → logprob: -12.25771427154541
    5. 'return' → logprob: -12.88271427154541
    6. 'den' → logprob: -13.25771427154541
    7. '
' → logprob: -14.38271427154541
    8. ' ' → logprob: -14.63271427154541
    9. '    
' → logprob: -14.63271427154541
    10. 'i' → logprob: -14.75771427154541

Token 239: ' case' (ID: 1890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45709702372550964
    2. 'if' → logprob: -1.707097053527832
    3. ' if' → logprob: -2.207097053527832
    4. 'v' → logprob: -3.457097053527832
    5. ' ' → logprob: -3.707097053527832
    6. ' return' → logprob: -5.707097053527832
    7. 'f' → logprob: -5.707097053527832
    8. '  ' → logprob: -6.082097053527832
    9. '    ' → logprob: -6.207097053527832
    10. '
' → logprob: -6.707097053527832

Token 240: ' of' (ID: 328)
  Prédit: ' denom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' denom' → logprob: -0.004130049608647823
    2. 'den' → logprob: -5.504129886627197
    3. ' abs' → logprob: -10.129130363464355
    4. 'abs' → logprob: -11.379130363464355
    5. ' ' → logprob: -16.12912940979004
    6. 'd' → logprob: -16.87912940979004
    7. '   ' → logprob: -17.12912940979004
    8. '  ' → logprob: -17.25412940979004
    9. '	' → logprob: -17.87912940979004
    10. ' math' → logprob: -18.50412940979004

Token 241: ' deg' (ID: 5597)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0019313741941004992
    2. ' denom' → logprob: -6.251931190490723
    3. 'abs' → logprob: -12.876931190490723
    4. '0' → logprob: -15.626931190490723
    5. ' abs' → logprob: -17.62693214416504
    6. ' den' → logprob: -17.75193214416504
    7. ' ' → logprob: -18.37693214416504
    8. 'd' → logprob: -18.50193214416504
    9. '   ' → logprob: -19.50193214416504
    10. 'Den' → logprob: -19.75193214416504

Token 242: 'enerate' (ID: 15481)
  Prédit: 'enerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enerate' → logprob: -0.01446233969181776
    2. '   ' → logprob: -5.264462471008301
    3. 'en' → logprob: -5.389462471008301
    4. 'enerated' → logprob: -5.639462471008301
    5. 'enom' → logprob: -7.514462471008301
    6. 'ener' → logprob: -8.5144624710083
    7. 'er' → logprob: -9.1394624710083
    8. '(' → logprob: -10.2644624710083
    9. ' denom' → logprob: -10.2644624710083
    10. 'den' → logprob: -10.6394624710083

Token 243: ' triangle' (ID: 41487)
  Prédit: ' denom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' denom' → logprob: -0.03877178952097893
    2. 'den' → logprob: -3.288771867752075
    3. ' denominator' → logprob: -7.413771629333496
    4. ' triangle' → logprob: -9.288771629333496
    5. ' triangles' → logprob: -11.288771629333496
    6. ' den' → logprob: -11.663771629333496
    7. ' denomin' → logprob: -11.788771629333496
    8. ' ' → logprob: -12.663771629333496
    9. 'triangle' → logprob: -13.413771629333496
    10. ' tri' → logprob: -14.663771629333496

Token 244: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1621389240026474
    2. ' if' → logprob: -1.9121389389038086
    3. 'if' → logprob: -6.662138938903809
    4. ',' → logprob: -8.662138938903809
    5. '  ' → logprob: -9.037138938903809
    6. '    
' → logprob: -9.412138938903809
    7. '    ' → logprob: -9.662138938903809
    8. ' ' → logprob: -10.412138938903809
    9. ' ==' → logprob: -10.412138938903809
    10. '
' → logprob: -10.412138938903809

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005054433364421129
    2. ' if' → logprob: -5.380054473876953
    3. 'if' → logprob: -8.255054473876953
    4. '
' → logprob: -8.880054473876953
    5. '    
' → logprob: -10.505054473876953
    6. '    ' → logprob: -12.630054473876953
    7. ',' → logprob: -13.380054473876953
    8. ' 
' → logprob: -14.130054473876953
    9. '   
' → logprob: -14.505054473876953
    10. '  ' → logprob: -15.005054473876953

Token 246: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.023313146084547043
    2. ' if' → logprob: -3.773313045501709
    3. '   ' → logprob: -9.648313522338867
    4. 'i' → logprob: -13.148313522338867
    5. ' i' → logprob: -13.898313522338867
    6. '
' → logprob: -16.648313522338867
    7. '    
' → logprob: -17.023313522338867
    8. ' 
' → logprob: -17.148313522338867
    9. 'If' → logprob: -17.523313522338867
    10. '```' → logprob: -17.523313522338867

Token 247: ' denom' (ID: 73604)
  Prédit: ' denom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' denom' → logprob: -0.004090035799890757
    2. 'den' → logprob: -5.504089832305908
    3. ' abs' → logprob: -11.504090309143066
    4. 'abs' → logprob: -13.879090309143066
    5. ' ' → logprob: -15.129090309143066
    6. '	' → logprob: -15.879090309143066
    7. '   ' → logprob: -16.62908935546875
    8. '  ' → logprob: -16.87908935546875
    9. ' ' → logprob: -17.62908935546875
    10. 'd' → logprob: -17.75408935546875

Token 248: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28158292174339294
    2. '==' → logprob: -1.4065829515457153
    3. '=' → logprob: -7.781582832336426
    4. ' =' → logprob: -11.906582832336426
    5. '0' → logprob: -13.406582832336426
    6. '==
' → logprob: -13.531582832336426
    7. ' ' → logprob: -13.656582832336426
    8. '<=' → logprob: -13.781582832336426
    9. ' <=' → logprob: -14.031582832336426
    10. '[' → logprob: -14.406582832336426

Token 249: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023245826363563538
    2. ' ' → logprob: -3.7732458114624023
    3. ' ' → logprob: -15.273245811462402
    4. '   ' → logprob: -16.77324676513672
    5. '  ' → logprob: -17.39824676513672
    6. '۰' → logprob: -17.52324676513672
    7. '	' → logprob: -18.14824676513672
    8. '０' → logprob: -18.46074676513672
    9. '```' → logprob: -19.27324676513672
    10. ' ' → logprob: -19.58574676513672

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '۰' → logprob: -18.000051498413086
    4. '０' → logprob: -19.312551498413086
    5. '
' → logprob: -19.687551498413086
    6. 'zero' → logprob: -19.687551498413086
    7. ' ' → logprob: -19.812551498413086
    8. '00' → logprob: -20.000051498413086
    9. '   ' → logprob: -20.125051498413086
    10. '

' → logprob: -20.125051498413086

Token 251: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03818022832274437
    2. ':
' → logprob: -3.288180112838745
    3. ':return' → logprob: -8.913180351257324
    4. ' :' → logprob: -13.163180351257324
    5. '   ' → logprob: -14.038180351257324
    6. ' :
' → logprob: -14.163180351257324
    7. ':
' → logprob: -15.663180351257324
    8. '.' → logprob: -16.038179397583008
    9. ':

' → logprob: -16.038179397583008
    10. '):' → logprob: -16.413179397583008

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01875498704612255
    2. ' return' → logprob: -4.518754959106445
    3. '   ' → logprob: -5.268754959106445
    4. '
' → logprob: -6.268754959106445
    5. 'return' → logprob: -7.393754959106445
    6. '    
' → logprob: -12.393754959106445
    7. ',' → logprob: -13.018754959106445
    8. '        
' → logprob: -13.393754959106445
    9. ':return' → logprob: -13.518754959106445
    10. '	return' → logprob: -13.643754959106445

Token 253: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.25233542919158936
    2. 'return' (adapté à ' return') → logprob: -1.5023354291915894
    3. '   ' → logprob: -7.877335548400879
    4. '
' → logprob: -11.002335548400879
    5. 'False' → logprob: -13.127335548400879
    6. '       ' → logprob: -13.127335548400879
    7. '    ' → logprob: -13.252335548400879
    8. ' False' → logprob: -13.252335548400879
    9. '	return' → logprob: -14.127335548400879
    10. ':return' → logprob: -14.127335548400879

Token 254: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.12692904472351074
    2. ' False' → logprob: -2.1269290447235107
    3. 'None' → logprob: -14.12692928314209
    4. 'True' → logprob: -16.126928329467773
    5. ' None' → logprob: -16.251928329467773
    6. '(False' → logprob: -16.876928329467773
    7. '=False' → logprob: -18.001928329467773
    8. ' ' → logprob: -18.001928329467773
    9. ' True' → logprob: -18.376928329467773
    10. '   ' → logprob: -18.376928329467773

Token 255: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002762675518169999
    2. '   ' → logprob: -6.627762794494629
    3. '    
' → logprob: -7.002762794494629
    4. '

' → logprob: -8.127762794494629
    5. '  
' → logprob: -8.752762794494629
    6. '
    
' → logprob: -10.377762794494629
    7. '   
' → logprob: -11.002762794494629
    8. '
' → logprob: -11.627762794494629
    9. ' 
' → logprob: -12.252762794494629
    10. '\n' → logprob: -13.377762794494629

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3047403395175934
    2. 'inv' → logprob: -1.679740309715271
    3. 'u' → logprob: -2.6797404289245605
    4. '    
' → logprob: -5.1797404289245605
    5. 'in' → logprob: -7.0547404289245605
    6. 't' → logprob: -7.8047404289245605
    7. ' inv' → logprob: -8.679739952087402
    8. ' u' → logprob: -8.804739952087402
    9. 'v' → logprob: -9.179739952087402
    10. 'inverse' → logprob: -9.554739952087402

Token 257: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.7069882154464722
    2. 'inv' → logprob: -0.7069882154464722
    3. '   ' → logprob: -4.331988334655762
    4. ' inv' → logprob: -7.831988334655762
    5. 'in' → logprob: -8.956988334655762
    6. '    
' → logprob: -10.331988334655762
    7. ' u' → logprob: -10.331988334655762
    8. '```' → logprob: -12.206988334655762
    9. 'inverse' → logprob: -13.456988334655762
    10. 'uin' → logprob: -14.206988334655762

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889033854007721
    2. '=' → logprob: -2.578890323638916
    3. ' =(' → logprob: -15.828890800476074
    4. ',' → logprob: -15.953890800476074
    5. ' ' → logprob: -16.453889846801758
    6. ' =
' → logprob: -16.953889846801758
    7. '.' → logprob: -17.328889846801758
    8. '＝' → logprob: -17.328889846801758
    9. '=float' → logprob: -17.453889846801758
    10. '  ' → logprob: -17.828889846801758

Token 259: ' (' (ID: 350)
  Prédit: '(dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dot' → logprob: -0.062281474471092224
    2. ' (' → logprob: -2.812281370162964
    3. '(d' → logprob: -8.812281608581543
    4. '((' → logprob: -10.187281608581543
    5. '(dd' → logprob: -10.437281608581543
    6. 'dot' → logprob: -11.062281608581543
    7. '
' → logprob: -11.312281608581543
    8. '(' → logprob: -11.562281608581543
    9. '(dp' → logprob: -11.812281608581543
    10. '(div' → logprob: -12.312281608581543

Token 260: 'dot' (ID: 29155)
  Prédit: 'dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.001431905198842287
    2. '(dot' → logprob: -6.751431941986084
    3. ' dot' → logprob: -8.251431465148926
    4. ' (' → logprob: -14.501431465148926
    5. '  ' → logprob: -16.501432418823242
    6. '(' → logprob: -16.751432418823242
    7. '   ' → logprob: -17.126432418823242
    8. '_dot' → logprob: -17.126432418823242
    9. '-dot' → logprob: -17.751432418823242
    10. ' ' → logprob: -17.876432418823242

Token 261: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0019306590547785163
    2. '12' → logprob: -6.2519307136535645
    3. '   ' → logprob: -14.126930236816406
    4. '1' → logprob: -14.876930236816406
    5. ' ' → logprob: -15.376930236816406
    6. '01' → logprob: -15.626930236816406
    7. '  ' → logprob: -16.001930236816406
    8. '
' → logprob: -16.251930236816406
    9. 'dot' → logprob: -16.376930236816406
    10. '    ' → logprob: -16.751930236816406

Token 262: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014163747429847717
    2. '*' → logprob: -4.264163970947266
    3. ' ' → logprob: -16.014163970947266
    4. ')' → logprob: -16.764163970947266
    5. '**' → logprob: -18.514163970947266
    6. '   ' → logprob: -18.514163970947266
    7. ' **' → logprob: -18.764163970947266
    8. ')*' → logprob: -19.514163970947266
    9. ' ' → logprob: -19.639163970947266
    10. '*object' → logprob: -19.764163970947266

Token 263: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.201459139585495
    2. ' dot' → logprob: -1.7014591693878174
    3. '.dot' → logprob: -10.576458930969238
    4. '-dot' → logprob: -11.451458930969238
    5. '(dot' → logprob: -11.826458930969238
    6. '_dot' → logprob: -13.451458930969238
    7. '*' → logprob: -15.201458930969238
    8. ' ' → logprob: -15.201458930969238
    9. '   ' → logprob: -15.951458930969238
    10. 'Dot' → logprob: -16.076459884643555

Token 264: '02' (ID: 3286)
  Prédit: '02'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '02' → logprob: -9.968312951968983e-06
    2. '2' → logprob: -11.625009536743164
    3. '```' → logprob: -15.375009536743164
    4. '   ' → logprob: -15.750009536743164
    5. ' ' → logprob: -16.125009536743164
    6. '12' → logprob: -16.250009536743164
    7. '
' → logprob: -16.375009536743164
    8. '0' → logprob: -16.375009536743164
    9. '

' → logprob: -17.125009536743164
    10. '' → logprob: -17.250009536743164

Token 265: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008678034879267216
    2. '-' → logprob: -4.758677959442139
    3. ' ' → logprob: -10.383678436279297
    4. '   ' → logprob: -10.758678436279297
    5. ')' → logprob: -12.008678436279297
    6. '    ' → logprob: -12.883678436279297
    7. '  ' → logprob: -13.383678436279297
    8. ' )' → logprob: -15.008678436279297
    9. '```' → logprob: -15.258678436279297
    10. '        ' → logprob: -16.258678436279297

Token 266: ' dot' (ID: 16579)
  Prédit: ' dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dot' → logprob: -0.6931514739990234
    2. 'dot' → logprob: -0.6931514739990234
    3. '(dot' → logprob: -12.443151473999023
    4. ' ' → logprob: -15.818151473999023
    5. '_dot' → logprob: -16.693151473999023
    6. '.dot' → logprob: -16.818151473999023
    7. 'Dot' → logprob: -16.943151473999023
    8. '   ' → logprob: -16.943151473999023
    9. '-dot' → logprob: -17.068151473999023
    10. '
' → logprob: -17.443151473999023

Token 267: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -17.125
    3. '1' → logprob: -17.25
    4. '12' → logprob: -19.0
    5. '[' → logprob: -19.625
    6. '0' → logprob: -19.875
    7. '00' → logprob: -20.25
    8. '   ' → logprob: -20.375
    9. '```' → logprob: -20.375
    10. '
' → logprob: -21.25

Token 268: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.000488811288960278
    2. '*' → logprob: -7.625488758087158
    3. ' ' → logprob: -14.375489234924316
    4. ' ' → logprob: -15.875489234924316
    5. ')' → logprob: -17.37548828125
    6. ' **' → logprob: -17.37548828125
    7. '**' → logprob: -19.50048828125
    8. ' *
' → logprob: -19.75048828125
    9. '[' → logprob: -20.50048828125
    10. ' )' → logprob: -21.25048828125

Token 269: ' dot' (ID: 16579)
  Prédit: ' dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dot' → logprob: -0.5759590864181519
    2. 'dot' → logprob: -0.8259590864181519
    3. '(dot' → logprob: -11.575959205627441
    4. ' ' → logprob: -12.825959205627441
    5. '_dot' → logprob: -12.825959205627441
    6. '.dot' → logprob: -13.450959205627441
    7. 'Dot' → logprob: -14.075959205627441
    8. '-dot' → logprob: -14.200959205627441
    9. '   ' → logprob: -14.450959205627441
    10. '
' → logprob: -14.575959205627441

Token 270: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -6.034592388459714e-06
    2. '2' → logprob: -13.125005722045898
    3. '02' → logprob: -13.375005722045898
    4. '   ' → logprob: -14.000005722045898
    5. '1' → logprob: -15.000005722045898
    6. '[' → logprob: -15.125005722045898
    7. '```' → logprob: -15.375005722045898
    8. '

' → logprob: -15.500005722045898
    9. '
' → logprob: -15.875005722045898
    10. '012' → logprob: -16.1250057220459

Token 271: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023202638840302825
    2. ' )' → logprob: -8.375231742858887
    3. ')/' → logprob: -13.625231742858887
    4. ')
' → logprob: -15.250231742858887
    5. '   ' → logprob: -18.125232696533203
    6. ')/(' → logprob: -18.125232696533203
    7. ' )
' → logprob: -18.750232696533203
    8. ' ' → logprob: -19.750232696533203
    9. ']' → logprob: -19.875232696533203
    10. ')

' → logprob: -20.125232696533203

Token 272: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2014700472354889
    2. '/' → logprob: -1.7014700174331665
    3. ' /
' → logprob: -10.826470375061035
    4. ')' → logprob: -11.076470375061035
    5. '/d' → logprob: -11.826470375061035
    6. '/
' → logprob: -11.951470375061035
    7. '   ' → logprob: -12.701470375061035
    8. '/div' → logprob: -13.201470375061035
    9. ' ' → logprob: -14.201470375061035
    10. 'div' → logprob: -14.701470375061035

Token 273: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.014165159314870834
    2. ' denom' → logprob: -4.264164924621582
    3. ' den' → logprob: -13.764164924621582
    4. ' denominator' → logprob: -15.639164924621582
    5. 'float' → logprob: -16.0141658782959
    6. '(' → logprob: -16.2641658782959
    7. ' denomin' → logprob: -16.7641658782959
    8. 'Den' → logprob: -17.2641658782959
    9. '   ' → logprob: -17.3891658782959
    10. ' ' → logprob: -17.6391658782959

Token 274: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.482685923576355
    2. 'v' → logprob: -1.357685923576355
    3. ' ' → logprob: -3.2326860427856445
    4. '<|end|>' → logprob: -3.4826860427856445
    5. ' v' → logprob: -3.7326860427856445
    6. '   ' → logprob: -4.6076860427856445
    7. ' 
' → logprob: -4.8576860427856445
    8. '  
' → logprob: -5.8576860427856445
    9. '    
' → logprob: -6.1076860427856445
    10. ',' → logprob: -6.2326860427856445

Token 275: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16040457785129547
    2. ' v' → logprob: -1.9104045629501343
    3. '   ' → logprob: -8.785404205322266
    4. '	v' → logprob: -11.160404205322266
    5. '    ' → logprob: -12.660404205322266
    6. ' ' → logprob: -12.660404205322266
    7. '
' → logprob: -12.785404205322266
    8. '    
' → logprob: -12.910404205322266
    9. '  ' → logprob: -14.160404205322266
    10. ',v' → logprob: -14.785404205322266

Token 276: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.048587486147880554
    2. ' v' → logprob: -3.0485875606536865
    3. '	v' → logprob: -16.798587799072266
    4. '   ' → logprob: -18.298587799072266
    5. ' ' → logprob: -19.548587799072266
    6. '
' → logprob: -21.298587799072266
    7. 'u' → logprob: -21.798587799072266
    8. 'b' → logprob: -21.923587799072266
    9. '    ' → logprob: -22.298587799072266
    10. '    
' → logprob: -22.798587799072266

Token 277: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. ')' → logprob: -16.193147659301758
    4. ',' → logprob: -16.318147659301758
    5. 'v' → logprob: -17.193147659301758
    6. ' ' → logprob: -17.443147659301758
    7. 'u' → logprob: -17.568147659301758
    8. '(' → logprob: -17.943147659301758
    9. '   ' → logprob: -18.068147659301758
    10. '=}' → logprob: -18.318147659301758

Token 278: ' (' (ID: 350)
  Prédit: '(dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dot' → logprob: -0.024498868733644485
    2. ' (' → logprob: -3.77449893951416
    3. '(' → logprob: -7.27449893951416
    4. '(d' → logprob: -8.89949893951416
    5. '(div' → logprob: -9.14949893951416
    6. '(dd' → logprob: -9.39949893951416
    7. '   ' → logprob: -10.02449893951416
    8. '((' → logprob: -10.27449893951416
    9. '(u' → logprob: -10.89949893951416
    10. '(di' → logprob: -11.02449893951416

Token 279: 'dot' (ID: 29155)
  Prédit: 'dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.20186330378055573
    2. '(dot' → logprob: -1.7018632888793945
    3. ' dot' → logprob: -7.8268632888793945
    4. ' (' → logprob: -10.451863288879395
    5. '   ' → logprob: -11.576863288879395
    6. '  ' → logprob: -12.826863288879395
    7. ')' → logprob: -12.951863288879395
    8. '(' → logprob: -13.326863288879395
    9. ' ' → logprob: -13.576863288879395
    10. '.dot' → logprob: -13.826863288879395

Token 280: '00' (ID: 504)
  Prédit: '01'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.0015139080351218581
    2. '00' → logprob: -7.001513957977295
    3. '12' → logprob: -7.501513957977295
    4. '10' → logprob: -10.376513481140137
    5. ' ' → logprob: -11.376513481140137
    6. '0' → logprob: -12.751513481140137
    7. '1' → logprob: -14.001513481140137
    8. '   ' → logprob: -14.126513481140137
    9. '02' → logprob: -14.501513481140137
    10. '[' → logprob: -14.501513481140137

Token 281: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.029762184247374535
    2. '*' → logprob: -3.5297622680664062
    3. ')' → logprob: -11.654762268066406
    4. ' ' → logprob: -13.404762268066406
    5. ' ' → logprob: -14.279762268066406
    6. ')*' → logprob: -15.029762268066406
    7. '	' → logprob: -15.904762268066406
    8. ' *
' → logprob: -16.529762268066406
    9. ' **' → logprob: -16.529762268066406
    10. '**' → logprob: -16.654762268066406

Token 282: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.06242506578564644
    2. ' dot' → logprob: -3.062425136566162
    3. '-dot' → logprob: -4.437425136566162
    4. 'v' → logprob: -6.687425136566162
    5. '*' → logprob: -8.562424659729004
    6. ' ' → logprob: -9.437424659729004
    7. ' v' → logprob: -9.562424659729004
    8. '(dot' → logprob: -9.687424659729004
    9. '.dot' → logprob: -9.812424659729004
    10. '_dot' → logprob: -9.812424659729004

Token 283: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -3.650518920039758e-06
    2. '1' → logprob: -14.250003814697266
    3. '   ' → logprob: -14.250003814697266
    4. ' ' → logprob: -14.500003814697266
    5. '[' → logprob: -14.875003814697266
    6. '2' → logprob: -15.000003814697266
    7. '
' → logprob: -15.375003814697266
    8. '```' → logprob: -15.500003814697266
    9. '  ' → logprob: -15.750003814697266
    10. '*' → logprob: -16.125003814697266

Token 284: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026307502761483192
    2. '-' → logprob: -3.6513075828552246
    3. ' ' → logprob: -12.276307106018066
    4. ')' → logprob: -13.026307106018066
    5. ' ' → logprob: -16.276308059692383
    6. '   ' → logprob: -16.526308059692383
    7. ' -
' → logprob: -16.776308059692383
    8. '```' → logprob: -16.776308059692383
    9. ' )' → logprob: -16.901308059692383
    10. '    ' → logprob: -17.276308059692383

Token 285: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.004078639671206474
    2. ' dot' → logprob: -5.5040788650512695
    3. '(dot' → logprob: -15.37907886505127
    4. '.dot' → logprob: -17.254077911376953
    5. '_dot' → logprob: -18.629077911376953
    6. '-dot' → logprob: -19.254077911376953
    7. 'Dot' → logprob: -19.379077911376953
    8. 'dots' → logprob: -21.629077911376953
    9. ' ' → logprob: -22.379077911376953
    10. '   ' → logprob: -22.879077911376953

Token 286: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.375
    3. ' ' → logprob: -17.625
    4. '[' → logprob: -17.625
    5. '1' → logprob: -18.125
    6. '
' → logprob: -18.25
    7. '' → logprob: -19.0
    8. '   ' → logprob: -19.0
    9. '0' → logprob: -20.125
    10. '[
' → logprob: -20.25

Token 287: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47409898042678833
    2. ' *' → logprob: -0.9740989804267883
    3. ')' → logprob: -11.474099159240723
    4. ' ' → logprob: -12.349099159240723
    5. ' ' → logprob: -12.974099159240723
    6. '**' → logprob: -13.099099159240723
    7. '[' → logprob: -13.474099159240723
    8. ')*' → logprob: -15.224099159240723
    9. ' **' → logprob: -15.724099159240723
    10. ' *
' → logprob: -15.724099159240723

Token 288: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.3872210681438446
    2. ' dot' → logprob: -1.137221097946167
    3. ' *' → logprob: -8.762221336364746
    4. '*' → logprob: -9.012221336364746
    5. '.dot' → logprob: -10.387221336364746
    6. '(dot' → logprob: -11.137221336364746
    7. ' ' → logprob: -11.887221336364746
    8. ' ' → logprob: -12.012221336364746
    9. '_dot' → logprob: -12.387221336364746
    10. '   ' → logprob: -12.762221336364746

Token 289: '02' (ID: 3286)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.006521391216665506
    2. '02' → logprob: -5.631521224975586
    3. '22' → logprob: -6.256521224975586
    4. 'v' → logprob: -7.756521224975586
    5. ' ' → logprob: -8.381521224975586
    6. '2' → logprob: -9.631521224975586
    7. '```' → logprob: -9.756521224975586
    8. 'u' → logprob: -10.131521224975586
    9. '   ' → logprob: -10.631521224975586
    10. '[' → logprob: -10.631521224975586

Token 290: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.463036435074173e-05
    2. ' )' → logprob: -10.625024795532227
    3. ')/' → logprob: -16.000024795532227
    4. '   ' → logprob: -16.625024795532227
    5. ')
' → logprob: -17.625024795532227
    6. ' ' → logprob: -18.375024795532227
    7. ']' → logprob: -19.625024795532227
    8. '）' → logprob: -20.500024795532227
    9. ')

' → logprob: -21.750024795532227
    10. '}' → logprob: -21.875024795532227

Token 291: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.28141579031944275
    2. ' /' → logprob: -1.4064158201217651
    3. ')' → logprob: -8.781415939331055
    4. '   ' → logprob: -9.406415939331055
    5. ' /
' → logprob: -11.406415939331055
    6. ' ' → logprob: -11.781415939331055
    7. '/
' → logprob: -13.406415939331055
    8. ')/' → logprob: -13.656415939331055
    9. '/v' → logprob: -14.031415939331055
    10. '/u' → logprob: -14.156415939331055

Token 292: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.033674053847789764
    2. ' denom' → logprob: -3.4086740016937256
    3. ' den' → logprob: -10.533674240112305
    4. 'dot' → logprob: -14.283674240112305
    5. ' denomin' → logprob: -14.658674240112305
    6. ' denominator' → logprob: -15.158674240112305
    7. ' ' → logprob: -16.283674240112305
    8. '   ' → logprob: -16.408674240112305
    9. 'dom' → logprob: -17.158674240112305
    10. 'Den' → logprob: -17.408674240112305

Token 293: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12031843513250351
    2. '
' → logprob: -2.2453184127807617
    3. '    
' → logprob: -6.245318412780762
    4. '<|end|>' → logprob: -6.245318412780762
    5. ' return' → logprob: -6.745318412780762
    6. '  
' → logprob: -7.120318412780762
    7. ' 
' → logprob: -7.245318412780762
    8. 'return' → logprob: -8.245318412780762
    9. '	return' → logprob: -8.370318412780762
    10. '  ' → logprob: -9.620318412780762

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005236041033640504
    2. '
' → logprob: -8.750523567199707
    3. ' return' → logprob: -8.875523567199707
    4. '    
' → logprob: -9.125523567199707
    5. 'return' → logprob: -9.125523567199707
    6. ' 
' → logprob: -12.375523567199707
    7. '    ' → logprob: -13.625523567199707
    8. ' if' → logprob: -14.375523567199707
    9. '	return' → logprob: -14.750523567199707
    10. '   
' → logprob: -15.000523567199707

Token 295: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08911208808422089
    2. '   ' → logprob: -2.5891120433807373
    3. ' return' → logprob: -4.589112281799316
    4. ' ' → logprob: -13.214112281799316
    5. '  ' → logprob: -13.214112281799316
    6. '	return' → logprob: -13.214112281799316
    7. '
' → logprob: -13.589112281799316
    8. 'if' → logprob: -13.964112281799316
    9. '    
' → logprob: -14.714112281799316
    10. '    ' → logprob: -15.089112281799316

Token 296: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.020653771236538887
    2. 'u' → logprob: -4.52065372467041
    3. ' (' → logprob: -4.77065372467041
    4. ' u' → logprob: -7.52065372467041
    5. '(' → logprob: -7.52065372467041
    6. ' ' → logprob: -14.14565372467041
    7. '[u' → logprob: -15.02065372467041
    8. '   ' → logprob: -15.77065372467041
    9. '	u' → logprob: -15.89565372467041
    10. '((' → logprob: -16.520654678344727

Token 297: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.06226019188761711
    2. '(u' → logprob: -2.937260150909424
    3. ' u' → logprob: -5.062260150909424
    4. '(' → logprob: -7.562260150909424
    5. ' (' → logprob: -7.812260150909424
    6. '0' → logprob: -9.437260627746582
    7. ' ' → logprob: -11.687260627746582
    8. '	u' → logprob: -13.187260627746582
    9. '   ' → logprob: -13.687260627746582
    10. '(
' → logprob: -13.687260627746582

Token 298: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.08896847069263458
    2. '>=' → logprob: -2.463968515396118
    3. ')>=' → logprob: -11.213968276977539
    4. ')' → logprob: -12.088968276977539
    5. ' ' → logprob: -12.338968276977539
    6. ' ' → logprob: -12.838968276977539
    7. '1' → logprob: -14.213968276977539
    8. ']>=' → logprob: -14.588968276977539
    9. '0' → logprob: -14.838968276977539
    10. '>' → logprob: -15.088968276977539

Token 299: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00317783304490149
    2. ' ' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.628177642822266
    4. '
' → logprob: -17.503177642822266
    5. '-' → logprob: -17.878177642822266
    6. ')' → logprob: -18.003177642822266
    7. ' ' → logprob: -19.003177642822266
    8. ' -' → logprob: -19.253177642822266
    9. '  ' → logprob: -19.503177642822266
    10. '    ' → logprob: -19.878177642822266

Token 300: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '-' → logprob: -17.875001907348633
    4. ')' → logprob: -20.875001907348633
    5. '
' → logprob: -21.000001907348633
    6. '00' → logprob: -21.000001907348633
    7. '۰' → logprob: -21.250001907348633
    8. '   ' → logprob: -21.375001907348633
    9. '

' → logprob: -22.375001907348633
    10. 'zero' → logprob: -22.500001907348633

Token 301: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2596157193183899
    2. ')' → logprob: -1.5096156597137451
    3. 'and' → logprob: -5.259615898132324
    4. ' )' → logprob: -6.009615898132324
    5. ' ' → logprob: -12.634615898132324
    6. '    ' → logprob: -13.884615898132324
    7. '   ' → logprob: -15.634615898132324
    8. ']' → logprob: -16.134614944458008
    9. '	and' → logprob: -17.009614944458008
    10. ')
' → logprob: -17.134614944458008

Token 302: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04858759790658951
    2. 'and' → logprob: -3.0485875606536865
    3. ' ' → logprob: -15.548587799072266
    4. '    ' → logprob: -16.923587799072266
    5. ')' → logprob: -17.173587799072266
    6. ',' → logprob: -17.173587799072266
    7. '   ' → logprob: -17.548587799072266
    8. '	and' → logprob: -17.673587799072266
    9. '<|end|>' → logprob: -17.798587799072266
    10. 'a' → logprob: -18.673587799072266

Token 303: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3868895173072815
    2. '(v' → logprob: -1.1368894577026367
    3. '(' → logprob: -11.636889457702637
    4. ' v' → logprob: -12.511889457702637
    5. '(u' → logprob: -12.886889457702637
    6. 'v' → logprob: -13.136889457702637
    7. ' ' → logprob: -14.011889457702637
    8. '[v' → logprob: -15.386889457702637
    9. ' ' → logprob: -15.886889457702637
    10. '
' → logprob: -15.886889457702637

Token 304: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004635303281247616
    2. ' v' → logprob: -5.379635334014893
    3. '(v' → logprob: -11.754634857177734
    4. 'u' → logprob: -13.004634857177734
    5. '
' → logprob: -13.379634857177734
    6. ' (' → logprob: -13.754634857177734
    7. '   ' → logprob: -14.379634857177734
    8. ')v' → logprob: -15.129634857177734
    9. '	v' → logprob: -15.129634857177734
    10. '    ' → logprob: -15.254634857177734

Token 305: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.014190888963639736
    2. '>=' → logprob: -4.264190673828125
    3. ')>=' → logprob: -11.514190673828125
    4. ' ' → logprob: -11.889190673828125
    5. ')' → logprob: -12.389190673828125
    6. ']>=' → logprob: -13.014190673828125
    7. '<|end|>' → logprob: -13.264190673828125
    8. '[' → logprob: -13.764190673828125
    9. ' <=' → logprob: -14.514190673828125
    10. '   ' → logprob: -15.264190673828125

Token 306: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22541499137878418
    2. ' ' → logprob: -1.6004149913787842
    3. '   ' → logprob: -13.350415229797363
    4. ' ' → logprob: -14.850415229797363
    5. '  ' → logprob: -15.225415229797363
    6. '    ' → logprob: -17.225414276123047
    7. ')' → logprob: -17.412914276123047
    8. '	' → logprob: -17.912914276123047
    9. '     ' → logprob: -18.350414276123047
    10. '-' → logprob: -18.412914276123047

Token 307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024758970830589533
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -15.12747573852539
    4. ' ' → logprob: -17.87747573852539
    5. '  ' → logprob: -18.00247573852539
    6. ')' → logprob: -18.12747573852539
    7. '-' → logprob: -18.75247573852539
    8. '    ' → logprob: -19.56497573852539
    9. '00' → logprob: -19.68997573852539
    10. '     ' → logprob: -20.12747573852539

Token 308: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004311460361350328
    2. ' )' → logprob: -7.750431060791016
    3. ' and' → logprob: -14.625431060791016
    4. 'and' → logprob: -16.750431060791016
    5. '   ' → logprob: -17.750431060791016
    6. ')
' → logprob: -19.500431060791016
    7. ' ' → logprob: -19.750431060791016
    8. ']' → logprob: -20.375431060791016
    9. '')' → logprob: -20.750431060791016
    10. '）' → logprob: -21.250431060791016

Token 309: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004090627655386925
    2. 'and' → logprob: -5.504090785980225
    3. '   ' → logprob: -11.504090309143066
    4. ' ' → logprob: -14.004090309143066
    5. '	and' → logprob: -14.004090309143066
    6. '    ' → logprob: -15.004090309143066
    7. ')' → logprob: -16.379091262817383
    8. '<|end|>' → logprob: -17.004091262817383
    9. '  ' → logprob: -17.129091262817383
    10. ',' → logprob: -17.629091262817383

Token 310: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.07896348088979721
    2. ' (' → logprob: -2.5789635181427
    3. '(' → logprob: -9.953963279724121
    4. 'u' → logprob: -10.703963279724121
    5. '   ' → logprob: -13.453963279724121
    6. '[u' → logprob: -13.578963279724121
    7. ' u' → logprob: -14.953963279724121
    8. ' ' → logprob: -15.203963279724121
    9. ' ' → logprob: -16.328964233398438
    10. '
' → logprob: -16.578964233398438

Token 311: 'u' (ID: 84)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.2291124016046524
    2. 'u' → logprob: -1.7291123867034912
    3. ' (' → logprob: -3.729112386703491
    4. ' u' → logprob: -5.85411262512207
    5. '(' → logprob: -8.35411262512207
    6. '   ' → logprob: -8.85411262512207
    7. '[u' → logprob: -10.60411262512207
    8. ' ' → logprob: -11.35411262512207
    9. '    ' → logprob: -11.97911262512207
    10. ')' → logprob: -12.47911262512207

Token 312: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2139761596918106
    2. '<=' → logprob: -2.0889761447906494
    3. ' +' → logprob: -2.9639761447906494
    4. ' <=' → logprob: -4.2139763832092285
    5. ')' → logprob: -6.4639763832092285
    6. ' ' → logprob: -7.7139763832092285
    7. '[' → logprob: -8.83897590637207
    8. '0' → logprob: -9.46397590637207
    9. '>=' → logprob: -9.58897590637207
    10. '1' → logprob: -10.08897590637207

Token 313: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.038055259734392166
    2. ' v' → logprob: -3.288055181503296
    3. '1' → logprob: -11.413055419921875
    4. ' ' → logprob: -13.538055419921875
    5. '	v' → logprob: -14.288055419921875
    6. ')' → logprob: -15.288055419921875
    7. ')v' → logprob: -15.538055419921875
    8. '
' → logprob: -16.163055419921875
    9. '    ' → logprob: -17.038055419921875
    10. '   ' → logprob: -17.163055419921875

Token 314: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3134628236293793
    2. '<=' → logprob: -1.3134628534317017
    3. ')' → logprob: -8.81346321105957
    4. ')<=' → logprob: -10.06346321105957
    5. '[' → logprob: -12.56346321105957
    6. ']<=' → logprob: -12.81346321105957
    7. ' ' → logprob: -12.93846321105957
    8. '1' → logprob: -14.81346321105957
    9. '0' → logprob: -16.18846321105957
    10. ' )' → logprob: -16.43846321105957

Token 315: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0076065086759626865
    2. ' ' → logprob: -4.882606506347656
    3. '   ' → logprob: -14.882606506347656
    4. ')' → logprob: -17.507606506347656
    5. '  ' → logprob: -17.632606506347656
    6. ' ' → logprob: -18.257606506347656
    7. '    ' → logprob: -18.757606506347656
    8. '```' → logprob: -19.132606506347656
    9. '	' → logprob: -20.007606506347656
    10. '
' → logprob: -20.070106506347656

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.125139236450195
    4. ')' → logprob: -18.125139236450195
    5. '  ' → logprob: -19.000139236450195
    6. '```' → logprob: -19.500139236450195
    7. ' ' → logprob: -20.125139236450195
    8. '
' → logprob: -20.125139236450195
    9. '    ' → logprob: -20.625139236450195
    10. '[' → logprob: -20.625139236450195

Token 317: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -13.750000953674316
    3. ')
' → logprob: -15.875000953674316
    4. '))' → logprob: -16.375001907348633
    5. ')`' → logprob: -17.125001907348633
    6. '}' → logprob: -17.875001907348633
    7. ')return' → logprob: -18.250001907348633
    8. '+' → logprob: -18.500001907348633
    9. ')**' → logprob: -18.500001907348633
    10. ')}' → logprob: -18.750001907348633

Token 318: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10286860167980194
    2. '<|end|>' → logprob: -2.9778685569763184
    3. '
' → logprob: -3.2278685569763184
    4. '```' → logprob: -5.727868556976318
    5. ' def' → logprob: -6.602868556976318
    6. '#' → logprob: -6.977868556976318
    7. '[' → logprob: -7.477868556976318
    8. '\' → logprob: -8.352869033813477
    9. '<|end|>' → logprob: -8.352869033813477
    10. '\n' → logprob: -8.852869033813477

Token 319: ' point' (ID: 2438)
  Prédit: ' plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plane' → logprob: -1.2362511157989502
    2. ' triangle' → logprob: -1.4862511157989502
    3. ' vector' → logprob: -1.8612511157989502
    4. ' point' → logprob: -2.36125111579895
    5. ' area' → logprob: -2.98625111579895
    6. ' line' → logprob: -3.11125111579895
    7. ' ray' → logprob: -3.11125111579895
    8. ' bary' → logprob: -3.48625111579895
    9. ' is' → logprob: -3.73625111579895
    10. 'triangle' → logprob: -4.986250877380371

Token 320: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.7370215654373169
    2. '_plane' → logprob: -1.362021565437317
    3. '_to' → logprob: -1.612021565437317
    4. '_triangle' → logprob: -3.6120214462280273
    5. '_line' → logprob: -4.237021446228027
    6. '_distance' → logprob: -4.487021446228027
    7. '_inside' → logprob: -5.362021446228027
    8. '_on' → logprob: -5.612021446228027
    9. '_face' → logprob: -7.237021446228027
    10. '_side' → logprob: -7.362021446228027

Token 321: '_triangle' (ID: 187218)
  Prédit: '_triangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_triangle' → logprob: -0.02775648795068264
    2. 'triangle' → logprob: -4.027756690979004
    3. '_t' → logprob: -5.402756690979004
    4. 'tet' → logprob: -6.652756690979004
    5. '_polygon' → logprob: -7.277756690979004
    6. '_rectangle' → logprob: -7.527756690979004
    7. '_box' → logprob: -7.652756690979004
    8. '_plane' → logprob: -7.652756690979004
    9. '_mesh' → logprob: -8.277756690979004
    10. '_tri' → logprob: -8.652756690979004

Token 322: '_' (ID: 62)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.004936174023896456
    2. '(' → logprob: -5.629936218261719
    3. '_' → logprob: -7.004936218261719
    4. '3' → logprob: -8.254936218261719
    5. '(point' → logprob: -9.004936218261719
    6. '(P' → logprob: -11.629936218261719
    7. ' (' → logprob: -12.254936218261719
    8. 'def' → logprob: -12.629936218261719
    9. ' ' → logprob: -12.629936218261719
    10. '(pt' → logprob: -12.754936218261719

Token 323: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3821495473384857
    2. '(p' → logprob: -1.507149577140808
    3. 'p' → logprob: -4.257149696350098
    4. 'def' → logprob: -4.507149696350098
    5. 'circle' → logprob: -4.757149696350098
    6. 'polygon' → logprob: -5.007149696350098
    7. 'plane' → logprob: -5.132149696350098
    8. 'pr' → logprob: -5.132149696350098
    9. 'tet' → logprob: -5.382149696350098
    10. 'xyz' → logprob: -5.507149696350098

Token 324: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18019521236419678
    2. 'D' → logprob: -1.8051952123641968
    3. 'def' → logprob: -7.805195331573486
    4. 'f' → logprob: -11.055194854736328
    5. '(point' → logprob: -12.555194854736328
    6. '(points' → logprob: -12.555194854736328
    7. '(p' → logprob: -12.805194854736328
    8. '(a' → logprob: -13.180194854736328
    9. 'de' → logprob: -13.180194854736328
    10. '_d' → logprob: -13.680194854736328

Token 325: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00022833107504993677
    2. ' (' → logprob: -9.000227928161621
    3. '(' → logprob: -9.250227928161621
    4. '(point' → logprob: -11.750227928161621
    5. '(P' → logprob: -14.250227928161621
    6. '(px' → logprob: -16.000228881835938
    7. '(pt' → logprob: -16.125228881835938
    8. '```' → logprob: -17.625228881835938
    9. '(x' → logprob: -18.000228881835938
    10. ' ' → logprob: -18.125228881835938

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020473242329899222
    2. ' ,' → logprob: -9.125205039978027
    3. ',a' → logprob: -9.625205039978027
    4. ',p' → logprob: -10.500205039978027
    5. 'a' → logprob: -14.250205039978027
    6. 'p' → logprob: -14.375205039978027
    7. '):' → logprob: -14.875205039978027
    8. ')' → logprob: -15.125205039978027
    9. ',A' → logprob: -16.12520408630371
    10. ',
' → logprob: -17.12520408630371

Token 327: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015085549093782902
    2. ' a' → logprob: -6.501508712768555
    3. 'p' → logprob: -13.001508712768555
    4. 'triangle' → logprob: -13.251508712768555
    5. 'abc' → logprob: -14.751508712768555
    6. 'def' → logprob: -14.876508712768555
    7. '   ' → logprob: -15.001508712768555
    8. 't' → logprob: -15.501508712768555
    9. 'tri' → logprob: -15.501508712768555
    10. '	a' → logprob: -15.751508712768555

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001552665780764073
    2. ' ,' → logprob: -9.250155448913574
    3. ',b' → logprob: -9.750155448913574
    4. 'b' → logprob: -14.500155448913574
    5. '_,' → logprob: -16.250154495239258
    6. ' b' → logprob: -16.750154495239258
    7. ',
' → logprob: -17.000154495239258
    8. ',p' → logprob: -17.125154495239258
    9. ',c' → logprob: -17.125154495239258
    10. '):' → logprob: -17.750154495239258

Token 329: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024756586644798517
    2. ' b' → logprob: -6.002475738525391
    3. 'c' → logprob: -17.25247573852539
    4. '	b' → logprob: -18.37747573852539
    5. ' ' → logprob: -18.75247573852539
    6. 'p' → logprob: -19.50247573852539
    7. ',b' → logprob: -19.75247573852539
    8. '   ' → logprob: -19.87747573852539
    9. '
' → logprob: -19.87747573852539
    10. 'a' → logprob: -20.62747573852539

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001761272142175585
    2. 'c' → logprob: -9.625176429748535
    3. ',c' → logprob: -9.625176429748535
    4. ' ,' → logprob: -10.250176429748535
    5. ',
' → logprob: -11.750176429748535
    6. ',

' → logprob: -15.875176429748535
    7. '_,' → logprob: -16.00017547607422
    8. '):
' → logprob: -16.00017547607422
    9. ' c' → logprob: -16.25017547607422
    10. 's' → logprob: -17.12517547607422

Token 331: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0031777136027812958
    2. ' c' → logprob: -5.753177642822266
    3. '	c' → logprob: -18.128177642822266
    4. ')c' → logprob: -18.878177642822266
    5. ')' → logprob: -19.128177642822266
    6. ' ' → logprob: -19.753177642822266
    7. '_c' → logprob: -20.753177642822266
    8. ',c' → logprob: -21.003177642822266
    9. '   ' → logprob: -21.253177642822266
    10. '```' → logprob: -22.253177642822266

Token 332: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000919200771022588
    2. '):
' → logprob: -7.000919342041016
    3. ',' → logprob: -12.500919342041016
    4. ')' → logprob: -13.375919342041016
    5. '):
' → logprob: -13.625919342041016
    6. ' ):' → logprob: -14.500919342041016
    7. '   ' → logprob: -14.750919342041016
    8. ':' → logprob: -15.625919342041016
    9. '):

' → logprob: -16.750919342041016
    10. '}:' → logprob: -17.125919342041016

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032561463303864002
    2. '    
' → logprob: -6.628256320953369
    3. '
' → logprob: -7.128256320953369
    4. 'n' → logprob: -7.878256320953369
    5. 'plane' → logprob: -8.128255844116211
    6. 'normal' → logprob: -9.003255844116211
    7. ' normal' → logprob: -9.753255844116211
    8. ' plane' → logprob: -9.878255844116211
    9. 'plan' → logprob: -10.253255844116211
    10. ':' → logprob: -10.503255844116211

Token 334: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4432554543018341
    2. '   ' → logprob: -1.9432554244995117
    3. 'normal' → logprob: -2.0682554244995117
    4. '#' (adapté à ' #') → logprob: -2.5682554244995117
    5. 'plane' → logprob: -4.818255424499512
    6. 'ab' → logprob: -6.818255424499512
    7. 'v' → logprob: -6.943255424499512
    8. ' n' → logprob: -7.443255424499512
    9. ' normal' → logprob: -8.568255424499512
    10. 'def' → logprob: -8.693255424499512

Token 335: ' Use' (ID: 7649)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26101499795913696
    2. 'normal' → logprob: -1.6360149383544922
    3. '#' → logprob: -3.761014938354492
    4. 'ab' → logprob: -5.261014938354492
    5. 'plane' → logprob: -6.136014938354492
    6. 'def' → logprob: -6.511014938354492
    7. 'norm' → logprob: -7.136014938354492
    8. 'v' → logprob: -7.511014938354492
    9. ' normal' → logprob: -7.886014938354492
    10. ' n' → logprob: -8.136014938354492

Token 336: ' bary' (ID: 102876)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.5398977994918823
    2. 'normal' → logprob: -1.1648977994918823
    3. 'plane' → logprob: -2.789897918701172
    4. ' cross' → logprob: -4.289897918701172
    5. 'vector' → logprob: -4.789897918701172
    6. 'n' → logprob: -4.914897918701172
    7. 'is' → logprob: -5.039897918701172
    8. ' normal' → logprob: -5.289897918701172
    9. ' plane' → logprob: -6.664897918701172
    10. ' is' → logprob: -7.914897918701172

Token 337: 'centric' (ID: 192971)
  Prédit: 'centric'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'centric' → logprob: -0.01626661606132984
    2. 'center' → logprob: -4.141266822814941
    3. 'cent' → logprob: -8.766266822814941
    4. '   ' → logprob: -10.641266822814941
    5. 'p' → logprob: -10.891266822814941
    6. 'def' → logprob: -12.141266822814941
    7. 'centre' → logprob: -12.141266822814941
    8. 'point' → logprob: -12.391266822814941
    9. 'a' → logprob: -12.641266822814941
    10. '
' → logprob: -12.766266822814941

Token 338: ' coordinates' (ID: 27933)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.013407502323389053
    2. 'coords' → logprob: -4.8884077072143555
    3. ' coordinates' → logprob: -5.3884077072143555
    4. 'coordinate' → logprob: -7.1384077072143555
    5. '_coordinates' → logprob: -8.638407707214355
    6. '
' → logprob: -9.513407707214355
    7. '_coords' → logprob: -10.013407707214355
    8. 'coord' → logprob: -10.388407707214355
    9. 'method' → logprob: -10.763407707214355
    10. 'weights' → logprob: -11.013407707214355

Token 339: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008712195791304111
    2. ' to' → logprob: -5.383712291717529
    3. '
' → logprob: -6.508712291717529
    4. '    
' → logprob: -6.508712291717529
    5. 'def' → logprob: -8.258711814880371
    6. ' for' → logprob: -8.383711814880371
    7. 'n' → logprob: -9.133711814880371
    8. '    ' → logprob: -9.508711814880371
    9. ',' → logprob: -9.758711814880371
    10. '   
' → logprob: -9.883711814880371

Token 340: ' ' (ID: 220)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.6429951786994934
    2. 'the' → logprob: -1.5179951190948486
    3. 'vector' → logprob: -2.2679951190948486
    4. ' the' → logprob: -2.6429951190948486
    5. 'def' → logprob: -3.2679951190948486
    6. ' plane' → logprob: -3.7679951190948486
    7. ' vector' → logprob: -4.767995357513428
    8. '3' → logprob: -6.142995357513428
    9. 'same' → logprob: -6.392995357513428
    10. 'a' → logprob: -6.642995357513428

Token 341: '3' (ID: 18)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.8144398331642151
    2. 'the' → logprob: -0.9394398331642151
    3. 'def' → logprob: -2.3144397735595703
    4. 'vector' → logprob: -3.1894397735595703
    5. 'a' → logprob: -4.18943977355957
    6. '3' → logprob: -5.56443977355957
    7. 'p' → logprob: -5.93943977355957
    8. '2' → logprob: -6.68943977355957
    9. 'triangle' → logprob: -7.81443977355957
    10. 'same' → logprob: -7.93943977355957

Token 342: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.11072082072496414
    2. 'd' → logprob: -2.3607208728790283
    3. ' space' → logprob: -5.360720634460449
    4. 'space' → logprob: -5.360720634460449
    5. '-space' → logprob: -7.110720634460449
    6. 'def' → logprob: -9.73572063446045
    7. '   ' → logprob: -10.11072063446045
    8. ' dimensions' → logprob: -10.73572063446045
    9. ' ' → logprob: -10.73572063446045
    10. ' D' → logprob: -10.86072063446045

Token 343: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04799920320510864
    2. 'n' → logprob: -3.672999143600464
    3. 'normal' → logprob: -5.047999382019043
    4. 'plane' → logprob: -5.047999382019043
    5. '    
' → logprob: -5.922999382019043
    6. ' normal' → logprob: -6.797999382019043
    7. 'v' → logprob: -6.922999382019043
    8. '
' → logprob: -7.047999382019043
    9. ' plane' → logprob: -7.297999382019043
    10. ' n' → logprob: -7.547999382019043

Token 344: ' projecting' (ID: 164874)
  Prédit: 'checking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'checking' → logprob: -0.8873716592788696
    2. 'finding' → logprob: -1.6373716592788696
    3. 'def' → logprob: -2.51237154006958
    4. 'comput' → logprob: -2.51237154006958
    5. ' checking' → logprob: -2.63737154006958
    6. 'project' → logprob: -2.63737154006958
    7. ' finding' → logprob: -3.88737154006958
    8. 'calcul' → logprob: -3.88737154006958
    9. ' computing' → logprob: -4.38737154006958
    10. ' projecting' → logprob: -4.63737154006958

Token 345: ' to' (ID: 316)
  Prédit: ' onto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' onto' → logprob: -1.212403416633606
    2. 'onto' → logprob: -1.962403416633606
    3. 'p' → logprob: -2.0874032974243164
    4. 'n' → logprob: -2.2124032974243164
    5. 'normal' → logprob: -2.7124032974243164
    6. ' normal' → logprob: -2.8374032974243164
    7. ' to' → logprob: -2.9624032974243164
    8. ' the' → logprob: -3.3374032974243164
    9. '#' → logprob: -3.9624032974243164
    10. ' plane' → logprob: -3.9624032974243164

Token 346: ' the' (ID: 290)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.8372774124145508
    2. 'the' → logprob: -1.2122774124145508
    3. ' the' → logprob: -1.8372774124145508
    4. ' plane' → logprob: -2.337277412414551
    5. 'a' → logprob: -4.962277412414551
    6. ' a' → logprob: -5.587277412414551
    7. 'def' → logprob: -7.087277412414551
    8. 'vector' → logprob: -7.212277412414551
    9. 'triangle' → logprob: -7.962277412414551
    10. ' ' → logprob: -8.33727741241455

Token 347: ' triangle' (ID: 41487)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.25498029589653015
    2. ' plane' → logprob: -1.5049803256988525
    3. 'triangle' → logprob: -6.504980087280273
    4. 'largest' → logprob: -7.504980087280273
    5. 'normal' → logprob: -8.254980087280273
    6. 'same' → logprob: -8.379980087280273
    7. ' triangle' → logprob: -9.004980087280273
    8. 'def' → logprob: -9.379980087280273
    9. 'domin' → logprob: -9.879980087280273
    10. 'best' → logprob: -10.254980087280273

Token 348: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.2972777187824249
    2. ' plane' → logprob: -1.6722776889801025
    3. 'plane' → logprob: -2.6722776889801025
    4. '_plane' → logprob: -9.172277450561523
    5. '   ' → logprob: -9.297277450561523
    6. 'def' → logprob: -10.797277450561523
    7. ''' → logprob: -11.422277450561523
    8. 'normal' → logprob: -12.172277450561523
    9. '-plane' → logprob: -12.422277450561523
    10. 'Plane' → logprob: -12.797277450561523

Token 349: ' plane' (ID: 16499)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.1288817971944809
    2. ' plane' → logprob: -2.1288816928863525
    3. 'normal' → logprob: -6.628881931304932
    4. 'best' → logprob: -8.253881454467773
    5. 'def' → logprob: -9.128881454467773
    6. ' normal' → logprob: -9.503881454467773
    7. ' best' → logprob: -9.753881454467773
    8. ' ' → logprob: -10.503881454467773
    9. 'plan' → logprob: -11.003881454467773
    10. '   ' → logprob: -11.503881454467773

Token 350: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02641582302749157
    2. '    
' → logprob: -4.026415824890137
    3. '
' → logprob: -5.026415824890137
    4. 'n' → logprob: -7.026415824890137
    5. 'def' → logprob: -9.026415824890137
    6. '#' → logprob: -9.401415824890137
    7. ' 
' → logprob: -9.526415824890137
    8. ' normal' → logprob: -9.651415824890137
    9. '  
' → logprob: -9.651415824890137
    10. 'normal' → logprob: -9.651415824890137

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01230313815176487
    2. '
' → logprob: -5.137303352355957
    3. '    
' → logprob: -5.512303352355957
    4. 'n' → logprob: -6.387303352355957
    5. '  
' → logprob: -9.262303352355957
    6. 'def' → logprob: -9.262303352355957
    7. '    ' → logprob: -9.512303352355957
    8. 'plane' → logprob: -9.637303352355957
    9. ' 
' → logprob: -9.887303352355957
    10. 'v' → logprob: -9.887303352355957

Token 352: ' #' (ID: 1069)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.5271485447883606
    2. 'n' → logprob: -1.0271484851837158
    3. 'ab' → logprob: -3.277148485183716
    4. '#' (adapté à ' #') → logprob: -4.902148723602295
    5. '   ' → logprob: -5.277148723602295
    6. ' normal' → logprob: -8.027148246765137
    7. 'v' → logprob: -8.027148246765137
    8. 'def' → logprob: -8.402148246765137
    9. 'plane' → logprob: -8.527148246765137
    10. 'norm' → logprob: -9.277148246765137

Token 353: ' Compute' (ID: 45438)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.5445982813835144
    2. 'n' → logprob: -1.0445983409881592
    3. '#' → logprob: -3.169598340988159
    4. 'ab' → logprob: -3.919598340988159
    5. 'plane' → logprob: -6.16959810256958
    6. '   ' → logprob: -6.16959810256958
    7. ' normal' → logprob: -7.54459810256958
    8. 'def' → logprob: -7.66959810256958
    9. 'norm' → logprob: -7.91959810256958
    10. 'AB' → logprob: -8.794598579406738

Token 354: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.10897159576416016
    2. 'n' → logprob: -2.60897159576416
    3. ' normal' → logprob: -4.23397159576416
    4. 'ab' → logprob: -4.23397159576416
    5. 'norm' → logprob: -7.85897159576416
    6. ' n' → logprob: -9.23397159576416
    7. '   ' → logprob: -9.73397159576416
    8. '#' → logprob: -9.85897159576416
    9. 'abc' → logprob: -11.35897159576416
    10. 'plane' → logprob: -11.73397159576416

Token 355: ' vector' (ID: 9727)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14532969892024994
    2. '=' → logprob: -2.020329713821411
    3. 'n' → logprob: -6.520329475402832
    4. 'vector' → logprob: -7.895329475402832
    5. ' vector' → logprob: -8.395329475402832
    6. ' =
' → logprob: -9.270329475402832
    7. ':' → logprob: -9.270329475402832
    8. ' n' → logprob: -9.395329475402832
    9. '   ' → logprob: -9.395329475402832
    10. ' ' → logprob: -9.895329475402832

Token 356: ' of' (ID: 328)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08546362072229385
    2. ' n' → logprob: -2.585463523864746
    3. '   ' → logprob: -5.210463523864746
    4. 'normal' → logprob: -8.335463523864746
    5. '
' → logprob: -8.710463523864746
    6. '	n' → logprob: -9.085463523864746
    7. ' =' → logprob: -9.085463523864746
    8. 'N' → logprob: -9.210463523864746
    9. ' normal' → logprob: -9.335463523864746
    10. ' N' → logprob: -9.710463523864746

Token 357: ' triangle' (ID: 41487)
  Prédit: ' cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.9759705066680908
    2. 'cross' → logprob: -0.9759705066680908
    3. 'the' → logprob: -2.725970506668091
    4. ' the' → logprob: -2.725970506668091
    5. 'triangle' → logprob: -3.100970506668091
    6. 'vector' → logprob: -3.725970506668091
    7. ' vector' → logprob: -4.100970268249512
    8. 'abc' → logprob: -4.350970268249512
    9. ' triangle' → logprob: -4.600970268249512
    10. 'a' → logprob: -5.725970268249512

Token 358: ' plane' (ID: 16499)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08366052806377411
    2. '   ' → logprob: -3.20866060256958
    3. ' n' → logprob: -3.33366060256958
    4. 'normal' → logprob: -6.08366060256958
    5. ' normal' → logprob: -6.58366060256958
    6. 'N' → logprob: -8.833660125732422
    7. 'norm' → logprob: -8.958660125732422
    8. '
' → logprob: -9.708660125732422
    9. '    
' → logprob: -9.833660125732422
    10. ' N' → logprob: -10.208660125732422

Token 359: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.040573686361312866
    2. '   ' → logprob: -3.6655735969543457
    3. 'normal' → logprob: -4.415573596954346
    4. ' n' → logprob: -6.915573596954346
    5. ' normal' → logprob: -7.790573596954346
    6. 'norm' → logprob: -8.290574073791504
    7. 'N' → logprob: -8.540574073791504
    8. '    
' → logprob: -9.290574073791504
    9. '	n' → logprob: -9.665574073791504
    10. ' ' → logprob: -10.915574073791504

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34931397438049316
    2. 'n' → logprob: -1.3493139743804932
    3. ' n' → logprob: -3.849313974380493
    4. 'normal' → logprob: -4.724313735961914
    5. ' normal' → logprob: -5.349313735961914
    6. '	n' → logprob: -8.349313735961914
    7. 'norm' → logprob: -8.849313735961914
    8. 'ab' → logprob: -10.224313735961914
    9. ' ab' → logprob: -11.474313735961914
    10. '    
' → logprob: -11.474313735961914

Token 361: ' ab' (ID: 692)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12716999650001526
    2. 'normal' → logprob: -2.1271700859069824
    3. 'norm' → logprob: -9.002169609069824
    4. ' normal' → logprob: -9.877169609069824
    5. ' n' → logprob: -10.002169609069824
    6. 'ab' (adapté à ' ab') → logprob: -11.002169609069824
    7. 'N' → logprob: -13.127169609069824
    8. '   ' → logprob: -13.127169609069824
    9. '	n' → logprob: -14.127169609069824
    10. 'abc' → logprob: -15.877169609069824

Token 362: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602257490158081
    2. ' =' → logprob: -1.910225749015808
    3. ')' → logprob: -14.285225868225098
    4. ',' → logprob: -15.035225868225098
    5. 's' → logprob: -15.660225868225098
    6. 'vector' → logprob: -15.785225868225098
    7. '[' → logprob: -16.16022491455078
    8. ' vector' → logprob: -16.53522491455078
    9. ' ' → logprob: -16.78522491455078
    10. '=
' → logprob: -17.66022491455078

Token 363: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.0005530327325686812
    2. ' vector' → logprob: -7.500553131103516
    3. '.vector' → logprob: -20.625553131103516
    4. '	vector' → logprob: -20.625553131103516
    5. '<vector' → logprob: -22.125553131103516
    6. 'Vector' → logprob: -22.125553131103516
    7. '_vector' → logprob: -22.500553131103516
    8. '(vector' → logprob: -23.375553131103516
    9. '[' → logprob: -23.875553131103516
    10. '-vector' → logprob: -23.875553131103516

Token 364: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -4.5491004129871726e-05
    2. 'sub' → logprob: -10.000045776367188
    3. 'Sub' → logprob: -18.500045776367188
    4. 'subtract' → logprob: -18.875045776367188
    5. '_SUB' → logprob: -19.125045776367188
    6. '_' → logprob: -19.125045776367188
    7. '_cross' → logprob: -20.750045776367188
    8. ' sub' → logprob: -21.125045776367188
    9. '[' → logprob: -21.375045776367188
    10. 'vector' → logprob: -21.375045776367188

Token 365: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.06196824833750725
    2. 'b' → logprob: -2.8119683265686035
    3. ' b' → logprob: -15.061967849731445
    4. '(' → logprob: -15.186967849731445
    5. '(a' → logprob: -17.061967849731445
    6. '	b' → logprob: -17.061967849731445
    7. '[b' → logprob: -17.186967849731445
    8. ' (' → logprob: -18.686967849731445
    9. '(c' → logprob: -19.061967849731445
    10. '=b' → logprob: -19.811967849731445

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006572072859853506
    2. 'a' → logprob: -5.256572246551514
    3. ',a' → logprob: -6.631572246551514
    4. ' ,' → logprob: -11.631571769714355
    5. ' a' → logprob: -12.131571769714355
    6. ',
' → logprob: -13.006571769714355
    7. 'c' → logprob: -14.006571769714355
    8. '[' → logprob: -14.131571769714355
    9. '(' → logprob: -15.131571769714355
    10. '(a' → logprob: -15.381571769714355

Token 367: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002615742268972099
    2. ' a' → logprob: -8.250261306762695
    3. '	a' → logprob: -15.500261306762695
    4. '   ' → logprob: -17.750261306762695
    5. ' ' → logprob: -17.750261306762695
    6. 'c' → logprob: -18.500261306762695
    7. 'а' → logprob: -19.750261306762695
    8. ')a' → logprob: -19.750261306762695
    9. ''a' → logprob: -20.000261306762695
    10. '>a' → logprob: -20.125261306762695

Token 368: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07890025526285172
    2. ')' → logprob: -2.5789003372192383
    3. ')
' → logprob: -11.828900337219238
    4. ' )
' → logprob: -13.328900337219238
    5. ')

' → logprob: -13.578900337219238
    6. '   ' → logprob: -15.328900337219238
    7. ' ' → logprob: -17.328899383544922
    8. ' )' → logprob: -17.578899383544922
    9. '),' → logprob: -17.578899383544922
    10. ');
' → logprob: -17.703899383544922

Token 369: '   ' (ID: 271)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.03859207034111023
    2. ' ac' → logprob: -3.2885921001434326
    3. '   ' → logprob: -7.5385918617248535
    4. '	ac' → logprob: -11.288592338562012
    5. ' AC' → logprob: -12.538592338562012
    6. '_ac' → logprob: -13.913592338562012
    7. 'AC' → logprob: -14.663592338562012
    8. 'bc' → logprob: -15.038592338562012
    9. '    
' → logprob: -15.913592338562012
    10. ' ' → logprob: -15.913592338562012

Token 370: ' ac' (ID: 1375)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' (adapté à ' ac') → logprob: -2.1008713702030946e-06
    2. ' ac' → logprob: -13.375001907348633
    3. 'bc' → logprob: -14.750001907348633
    4. '	ac' → logprob: -16.625001907348633
    5. 'AC' → logprob: -17.125001907348633
    6. '```' → logprob: -18.250001907348633
    7. '_ac' → logprob: -18.625001907348633
    8. '
' → logprob: -19.125001907348633
    9. '   ' → logprob: -19.500001907348633
    10. '#ac' → logprob: -19.625001907348633

Token 371: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. ')' → logprob: -16.10020637512207
    4. '   ' → logprob: -16.47520637512207
    5. ' ' → logprob: -16.85020637512207
    6. '[' → logprob: -18.60020637512207
    7. '=
' → logprob: -18.85020637512207
    8. ' =
' → logprob: -19.35020637512207
    9. ' ' → logprob: -19.72520637512207
    10. ',' → logprob: -19.72520637512207

Token 372: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.5759397745132446
    2. ' vector' → logprob: -0.8259397745132446
    3. '(vector' → logprob: -15.325940132141113
    4. '	vector' → logprob: -16.200939178466797
    5. '.vector' → logprob: -17.325939178466797
    6. '_vector' → logprob: -17.700939178466797
    7. '<vector' → logprob: -18.200939178466797
    8. '[' → logprob: -19.075939178466797
    9. '   ' → logprob: -20.450939178466797
    10. 'Vector' → logprob: -21.700939178466797

Token 373: '_sub' (ID: 11572)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.6809061765670776
    2. 'sub' → logprob: -1.1809061765670776
    3. '_sub' → logprob: -1.6809061765670776
    4. 'Sub' → logprob: -7.680906295776367
    5. '[c' → logprob: -9.430906295776367
    6. ' Sub' → logprob: -10.555906295776367
    7. '.sub' → logprob: -10.680906295776367
    8. 'c' → logprob: -10.930906295776367
    9. '-sub' → logprob: -11.930906295776367
    10. '(sub' → logprob: -12.180906295776367

Token 374: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0001242772996192798
    2. 'c' → logprob: -9.000123977661133
    3. '[c' → logprob: -14.125123977661133
    4. '	c' → logprob: -16.250123977661133
    5. ' c' → logprob: -16.875123977661133
    6. '(' → logprob: -18.875123977661133
    7. '(
' → logprob: -19.375123977661133
    8. '©' → logprob: -20.000123977661133
    9. ')c' → logprob: -20.125123977661133
    10. 'def' → logprob: -20.375123977661133

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7125770449638367
    2. 'a' → logprob: -0.7125770449638367
    3. ',a' → logprob: -3.9625771045684814
    4. ' a' → logprob: -8.712576866149902
    5. '(a' → logprob: -10.462576866149902
    6. ')' → logprob: -11.087576866149902
    7. '(' → logprob: -12.087576866149902
    8. '),' → logprob: -12.337576866149902
    9. ')a' → logprob: -12.337576866149902
    10. ' ,' → logprob: -13.212576866149902

Token 376: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0013260759878903627
    2. ' a' → logprob: -6.626326084136963
    3. ')' → logprob: -16.626325607299805
    4. '(a' → logprob: -17.501325607299805
    5. ')a' → logprob: -17.501325607299805
    6. '	a' → logprob: -17.626325607299805
    7. '[' → logprob: -17.751325607299805
    8. '<|end|>' → logprob: -18.376325607299805
    9. 'а' → logprob: -19.251325607299805
    10. 'c' → logprob: -19.251325607299805

Token 377: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008624029345810413
    2. ')
' → logprob: -4.758624076843262
    3. ')

' → logprob: -12.258624076843262
    4. '   ' → logprob: -12.883624076843262
    5. ')
' → logprob: -13.133624076843262
    6. ' )' → logprob: -17.133623123168945
    7. ')`' → logprob: -17.133623123168945
    8. '),' → logprob: -18.008623123168945
    9. ' ' → logprob: -18.258623123168945
    10. ').' → logprob: -18.508623123168945

Token 378: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18126292526721954
    2. ' n' → logprob: -2.306262969970703
    3. '   ' → logprob: -2.931262969970703
    4. 'normal' → logprob: -4.806262969970703
    5. ' normal' → logprob: -5.556262969970703
    6. '    
' → logprob: -8.306262969970703
    7. '
' → logprob: -8.306262969970703
    8. '	n' → logprob: -8.681262969970703
    9. 'norm' → logprob: -9.681262969970703
    10. '  
' → logprob: -11.556262969970703

Token 379: ' normal' (ID: 6078)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0388440303504467
    2. 'normal' (adapté à ' normal') → logprob: -3.288844108581543
    3. ' n' → logprob: -7.538844108581543
    4. ' normal' → logprob: -8.663844108581543
    5. 'norm' → logprob: -9.538844108581543
    6. '   ' → logprob: -10.913844108581543
    7. '	n' → logprob: -12.538844108581543
    8. 'N' → logprob: -13.788844108581543
    9. '
' → logprob: -14.163844108581543
    10. 'nor' → logprob: -14.663844108581543

Token 380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. '=}' → logprob: -18.451414108276367
    4. ' ' → logprob: -18.701414108276367
    5. '＝' → logprob: -18.951414108276367
    6. ')' → logprob: -19.201414108276367
    7. '=

' → logprob: -19.201414108276367
    8. ',' → logprob: -19.451414108276367
    9. '[' → logprob: -19.576414108276367
    10. ' =
' → logprob: -19.701414108276367

Token 381: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.16022422909736633
    2. ' cross' → logprob: -1.910224199295044
    3. '.cross' → logprob: -17.66022491455078
    4. '   ' → logprob: -18.78522491455078
    5. '_cross' → logprob: -19.78522491455078
    6. 'Cross' → logprob: -20.53522491455078
    7. ' ' → logprob: -20.66022491455078
    8. 'c' → logprob: -20.66022491455078
    9. 'vector' → logprob: -21.28522491455078
    10. '[' → logprob: -21.41022491455078

Token 382: '(ab' (ID: 115191)
  Prédit: '(ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -2.339278580620885e-06
    2. 'ab' → logprob: -13.125001907348633
    3. '(ac' → logprob: -16.000001907348633
    4. '(' → logprob: -16.500001907348633
    5. '#ab' → logprob: -17.250001907348633
    6. ' ab' → logprob: -19.125001907348633
    7. '(a' → logprob: -20.125001907348633
    8. '_ab' → logprob: -20.375001907348633
    9. ' (' → logprob: -20.625001907348633
    10. ''ab' → logprob: -21.125001907348633

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030400342075154185
    2. '(ac' → logprob: -8.625304222106934
    3. 'ac' → logprob: -9.500304222106934
    4. ' ,' → logprob: -10.000304222106934
    5. '(' → logprob: -13.000304222106934
    6. ')' → logprob: -14.500304222106934
    7. '),' → logprob: -14.500304222106934
    8. ',
' → logprob: -15.375304222106934
    9. 'ab' → logprob: -15.750304222106934
    10. '(ab' → logprob: -16.250303268432617

Token 384: ' ac' (ID: 1375)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0007106438861228526
    2. ' ac' → logprob: -7.250710487365723
    3. 'AC' → logprob: -15.625710487365723
    4. '	ac' → logprob: -15.625710487365723
    5. '   ' → logprob: -15.750710487365723
    6. '(ac' → logprob: -16.25071144104004
    7. ')' → logprob: -16.50071144104004
    8. ' ' → logprob: -16.62571144104004
    9. '#ac' → logprob: -18.50071144104004
    10. ' AC' → logprob: -19.00071144104004

Token 385: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010754420654848218
    2. ')
' → logprob: -6.876075267791748
    3. ')

' → logprob: -10.126075744628906
    4. ')
' → logprob: -13.251075744628906
    5. ' )' → logprob: -14.626075744628906
    6. '   ' → logprob: -15.001075744628906
    7. ')

' → logprob: -17.001075744628906
    8. ')`' → logprob: -17.251075744628906
    9. ')a' → logprob: -17.626075744628906
    10. '))' → logprob: -17.751075744628906

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03511609509587288
    2. ' if' → logprob: -5.035116195678711
    3. ' p' → logprob: -5.160116195678711
    4. ' n' → logprob: -5.285116195678711
    5. 'ap' → logprob: -5.285116195678711
    6. '    
' → logprob: -6.160116195678711
    7. ' plane' → logprob: -6.285116195678711
    8. 'p' → logprob: -6.410116195678711
    9. 'n' → logprob: -6.535116195678711
    10. ' ap' → logprob: -6.910116195678711

Token 387: ' #' (ID: 1069)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.0893639549612999
    2. 'vec' → logprob: -3.2143640518188477
    3. 'normal' → logprob: -4.214364051818848
    4. 'if' → logprob: -4.464364051818848
    5. 'n' → logprob: -5.089364051818848
    6. 'p' → logprob: -5.964364051818848
    7. '   ' → logprob: -6.089364051818848
    8. 'norm' → logprob: -6.589364051818848
    9. 'vector' → logprob: -6.714364051818848
    10. '#' (adapté à ' #') → logprob: -6.839364051818848

Token 388: ' Check' (ID: 6208)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.1670563966035843
    2. 'ap' → logprob: -3.1670563220977783
    3. 'norm' → logprob: -3.4170563220977783
    4. 'n' → logprob: -3.5420563220977783
    5. 'w' → logprob: -4.417056560516357
    6. 'vec' → logprob: -4.542056560516357
    7. '#' → logprob: -4.542056560516357
    8. 'def' → logprob: -4.917056560516357
    9. 'if' → logprob: -5.792056560516357
    10. 'plane' → logprob: -6.917056560516357

Token 389: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2966121435165405
    2. 'norm' → logprob: -1.4216121435165405
    3. 'dot' → logprob: -2.17161226272583
    4. ' norm' → logprob: -2.29661226272583
    5. 'normal' → logprob: -2.54661226272583
    6. ' normal' → logprob: -2.54661226272583
    7. ' dot' → logprob: -3.29661226272583
    8. 'if' → logprob: -3.42161226272583
    9. 'len' → logprob: -4.42161226272583
    10. '   ' → logprob: -4.67161226272583

Token 390: ' p' (ID: 275)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.23011262714862823
    2. 'abs' → logprob: -1.6051126718521118
    3. 'vector' → logprob: -6.605112552642822
    4. ' abs' → logprob: -6.980112552642822
    5. 'normal' → logprob: -6.980112552642822
    6. ' dot' → logprob: -7.105112552642822
    7. '(dot' → logprob: -7.855112552642822
    8. '(abs' → logprob: -9.23011302947998
    9. 'sum' → logprob: -9.85511302947998
    10. 'point' → logprob: -10.23011302947998

Token 391: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.09977077692747116
    2. ' lies' → logprob: -3.4747707843780518
    3. ' -' → logprob: -3.5997707843780518
    4. ')' → logprob: -3.9747707843780518
    5. '-' → logprob: -4.974770545959473
    6. 'is' → logprob: -5.599770545959473
    7. ' has' → logprob: -6.724770545959473
    8. ' ' → logprob: -6.849770545959473
    9. ',' → logprob: -6.974770545959473
    10. '[' → logprob: -7.099770545959473

Token 392: ' in' (ID: 306)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.892252504825592
    2. 'None' → logprob: -1.1422524452209473
    3. ' None' → logprob: -1.7672524452209473
    4. 'close' → logprob: -3.3922524452209473
    5. 'in' → logprob: -3.7672524452209473
    6. ' on' → logprob: -4.142252445220947
    7. '[' → logprob: -5.267252445220947
    8. 'not' → logprob: -5.642252445220947
    9. ' in' → logprob: -6.017252445220947
    10. 'a' → logprob: -6.392252445220947

Token 393: ' the' (ID: 290)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.1694205105304718
    2. ' plane' → logprob: -2.5444204807281494
    3. 'triangle' → logprob: -3.6694204807281494
    4. '[' → logprob: -4.1694207191467285
    5. 'vector' → logprob: -4.4194207191467285
    6. '[a' → logprob: -4.7944207191467285
    7. 'a' → logprob: -5.2944207191467285
    8. ' triangle' → logprob: -5.9194207191467285
    9. ' vector' → logprob: -6.0444207191467285
    10. 'the' → logprob: -6.1694207191467285

Token 394: ' same' (ID: 2684)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.301490843296051
    2. ' plane' → logprob: -2.4264907836914062
    3. '[' → logprob: -2.8014907836914062
    4. 'same' → logprob: -3.0514907836914062
    5. 'vector' → logprob: -3.8014907836914062
    6. '[a' → logprob: -3.9264907836914062
    7. 'triangle' → logprob: -5.051490783691406
    8. 'def' → logprob: -6.301490783691406
    9. '[
' → logprob: -6.301490783691406
    10. ' same' → logprob: -6.676490783691406

Token 395: ' plane' (ID: 16499)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.25207388401031494
    2. ' plane' → logprob: -1.502073884010315
    3. '_plane' → logprob: -9.752074241638184
    4. ' ' → logprob: -9.877074241638184
    5. '[' → logprob: -11.252074241638184
    6. '
' → logprob: -12.502074241638184
    7. '   ' → logprob: -12.627074241638184
    8. ')' → logprob: -13.377074241638184
    9. '    

' → logprob: -13.377074241638184
    10. 'Plane' → logprob: -13.502074241638184

Token 396: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5714183449745178
    2. ' as' → logprob: -1.321418285369873
    3. ':' → logprob: -3.196418285369873
    4. ' (' → logprob: -3.446418285369873
    5. '    
' → logprob: -3.446418285369873
    6. ' with' → logprob: -4.071418285369873
    7. '
' → logprob: -4.321418285369873
    8. ' and' → logprob: -4.821418285369873
    9. ' by' → logprob: -5.071418285369873
    10. ',' → logprob: -5.196418285369873

Token 397: 'allow' (ID: 10180)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.08137855678796768
    2. ' abs' → logprob: -2.83137845993042
    3. 'dot' → logprob: -4.45637845993042
    4. ')' → logprob: -5.83137845993042
    5. ' dot' → logprob: -5.95637845993042
    6. '   ' → logprob: -6.95637845993042
    7. 'vector' → logprob: -7.20637845993042
    8. ' vector' → logprob: -8.706378936767578
    9. '(abs' → logprob: -9.081378936767578
    10. '
' → logprob: -10.456378936767578

Token 398: ' small' (ID: 3291)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.4296302795410156
    2. 'ance' → logprob: -1.4296302795410156
    3. ' a' → logprob: -2.8046302795410156
    4. ' for' → logprob: -4.304630279541016
    5. ' small' → logprob: -4.429630279541016
    6. '   ' → logprob: -4.679630279541016
    7. ' some' → logprob: -5.054630279541016
    8. ' abs' → logprob: -6.179630279541016
    9. ' an' → logprob: -6.679630279541016
    10. 'a' → logprob: -6.804630279541016

Token 399: ' tolerance' (ID: 46581)
  Prédit: ' epsilon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' epsilon' → logprob: -0.6642604470252991
    2. ' tolerance' → logprob: -0.7892604470252991
    3. 'epsilon' → logprob: -3.6642603874206543
    4. ' margin' → logprob: -5.664260387420654
    5. ' threshold' → logprob: -7.289260387420654
    6. ')' → logprob: -7.664260387420654
    7. 't' → logprob: -8.289260864257812
    8. ' eps' → logprob: -8.789260864257812
    9. ' error' → logprob: -9.164260864257812
    10. '_tol' → logprob: -9.664260864257812

Token 400: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.739476203918457
    2. '=' → logprob: -0.739476203918457
    3. '   ' → logprob: -3.489476203918457
    4. ')
' → logprob: -4.739476203918457
    5. ' )' → logprob: -6.114476203918457
    6. '):' → logprob: -6.739476203918457
    7. ' for' → logprob: -6.864476203918457
    8. '):
' → logprob: -7.864476203918457
    9. ' )
' → logprob: -8.114476203918457
    10. ' =' → logprob: -8.989476203918457

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05646298825740814
    2. '
' → logprob: -3.0564630031585693
    3. ' epsilon' → logprob: -5.68146276473999
    4. '    
' → logprob: -6.55646276473999
    5. ' tolerance' → logprob: -7.18146276473999
    6. 'epsilon' → logprob: -7.43146276473999
    7. ' eps' → logprob: -7.55646276473999
    8. 'import' → logprob: -8.056463241577148
    9. ' EPS' → logprob: -8.056463241577148
    10. ' p' → logprob: -9.431463241577148

Token 402: ' ap' (ID: 1419)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' (adapté à ' ap') → logprob: -0.2995475232601166
    2. 'tol' → logprob: -3.1745474338531494
    3. 't' → logprob: -3.2995474338531494
    4. 'from' → logprob: -3.6745474338531494
    5. 'import' → logprob: -3.7995474338531494
    6. 'vec' → logprob: -3.9245474338531494
    7. 'if' → logprob: -4.1745476722717285
    8. 'plane' → logprob: -4.1745476722717285
    9. '   ' → logprob: -4.2995476722717285
    10. ' ap' → logprob: -4.5495476722717285

Token 403: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192973017692566
    2. ' =' → logprob: -1.501929759979248
    3. ')' → logprob: -14.75192928314209
    4. ' ' → logprob: -16.126930236816406
    5. 'vector' → logprob: -16.376930236816406
    6. ' vector' → logprob: -17.251930236816406
    7. ' ' → logprob: -17.751930236816406
    8. '   ' → logprob: -18.001930236816406
    9. '=
' → logprob: -18.376930236816406
    10. '=

' → logprob: -18.376930236816406

Token 404: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.00861456897109747
    2. ' vector' → logprob: -4.758614540100098
    3. '	vector' → logprob: -17.508615493774414
    4. '.vector' → logprob: -18.008615493774414
    5. '   ' → logprob: -18.508615493774414
    6. ' ' → logprob: -18.508615493774414
    7. 'Vector' → logprob: -19.133615493774414
    8. '  ' → logprob: -20.133615493774414
    9. '(vector' → logprob: -20.133615493774414
    10. '_vector' → logprob: -20.633615493774414

Token 405: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -1.3902033970225602e-05
    2. 'sub' → logprob: -11.250014305114746
    3. 'Sub' → logprob: -15.375014305114746
    4. '_SUB' → logprob: -15.500014305114746
    5. '_' → logprob: -16.12501335144043
    6. '_s' → logprob: -16.87501335144043
    7. 's' → logprob: -17.00001335144043
    8. ' суб' → logprob: -17.00001335144043
    9. '<|end|>' → logprob: -17.25001335144043
    10. 'subtract' → logprob: -17.37501335144043

Token 406: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.981667537620524e-06
    2. 'p' → logprob: -13.500001907348633
    3. '(' → logprob: -14.500001907348633
    4. '(
' → logprob: -19.875001907348633
    5. '[p' → logprob: -20.250001907348633
    6. ' (' → logprob: -21.125001907348633
    7. '(point' → logprob: -21.125001907348633
    8. '(P' → logprob: -21.250001907348633
    9. '<p' → logprob: -21.500001907348633
    10. 'def' → logprob: -21.750001907348633

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037152846343815327
    2. 'a' → logprob: -5.628715515136719
    3. ',a' → logprob: -9.378715515136719
    4. ' ,' → logprob: -10.878715515136719
    5. ' a' → logprob: -12.003715515136719
    6. '(a' → logprob: -12.378715515136719
    7. '(' → logprob: -14.253715515136719
    8. ',
' → logprob: -14.503715515136719
    9. ')' → logprob: -16.37871551513672
    10. ' ' → logprob: -16.50371551513672

Token 408: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015024791937321424
    2. ' a' → logprob: -6.501502513885498
    3. '	a' → logprob: -16.126502990722656
    4. '   ' → logprob: -18.751502990722656
    5. ' ' → logprob: -19.126502990722656
    6. ')a' → logprob: -19.126502990722656
    7. ')' → logprob: -20.376502990722656
    8. '"a' → logprob: -20.501502990722656
    9. '  ' → logprob: -20.751502990722656
    10. '#a' → logprob: -21.126502990722656

Token 409: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5762686729431152
    2. ')' → logprob: -0.8262686729431152
    3. ')

' → logprob: -8.076269149780273
    4. ')
' → logprob: -11.076269149780273
    5. ' )
' → logprob: -13.201269149780273
    6. ' )' → logprob: -15.326269149780273
    7. ']' → logprob: -15.576269149780273
    8. '   ' → logprob: -15.701269149780273
    9. '
' → logprob: -16.451269149780273
    10. ' ' → logprob: -16.576269149780273

Token 410: '   ' (ID: 271)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.7793319821357727
    2. '   ' → logprob: -1.154331922531128
    3. 'if' → logprob: -2.279331922531128
    4. ' if' → logprob: -2.904331922531128
    5. ' dot' → logprob: -3.404331922531128
    6. 'tol' → logprob: -5.029332160949707
    7. 'import' → logprob: -5.154332160949707
    8. '
' → logprob: -5.529332160949707
    9. 'abs' → logprob: -5.779332160949707
    10. 't' → logprob: -5.904332160949707

Token 411: ' if' (ID: 538)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5507437586784363
    2. 'if' (adapté à ' if') → logprob: -1.550743818283081
    3. 'dot' → logprob: -2.425743818283081
    4. 'distance' → logprob: -2.425743818283081
    5. 'dist' → logprob: -3.800743818283081
    6. 'd' → logprob: -5.050743579864502
    7. 'plane' → logprob: -5.800743579864502
    8. '   ' → logprob: -7.425743579864502
    9. 't' → logprob: -7.675743579864502
    10. ' if' → logprob: -7.800743579864502

Token 412: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.002593969227746129
    2. ' abs' → logprob: -6.002593994140625
    3. 'dot' → logprob: -9.127593994140625
    4. '   ' → logprob: -12.377593994140625
    5. '(abs' → logprob: -12.627593994140625
    6. ' dot' → logprob: -13.377593994140625
    7. '  ' → logprob: -15.252593994140625
    8. ' ' → logprob: -15.627593994140625
    9. '(dot' → logprob: -16.127593994140625
    10. '    ' → logprob: -17.627593994140625

Token 413: '(dot' (ID: 151841)
  Prédit: '(dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dot' → logprob: -6.635164754698053e-05
    2. 'dot' → logprob: -10.500066757202148
    3. '(sum' → logprob: -10.750066757202148
    4. '(' → logprob: -11.000066757202148
    5. '(d' → logprob: -16.00006675720215
    6. ' (' → logprob: -16.12506675720215
    7. '.dot' → logprob: -16.12506675720215
    8. '((' → logprob: -16.25006675720215
    9. ' dot' → logprob: -16.50006675720215
    10. '(
' → logprob: -17.00006675720215

Token 414: '(ap' (ID: 68318)
  Prédit: '(normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(normal' → logprob: -0.31330692768096924
    2. '(ap' → logprob: -1.3133069276809692
    3. 'normal' → logprob: -10.31330680847168
    4. '(norm' → logprob: -12.31330680847168
    5. 'ap' → logprob: -12.68830680847168
    6. '(' → logprob: -13.68830680847168
    7. ')' → logprob: -14.18830680847168
    8. ' normal' → logprob: -14.68830680847168
    9. '

' → logprob: -14.68830680847168
    10. '(n' → logprob: -14.81330680847168

Token 415: ',' (ID: 11)
  Prédit: '(normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(normal' → logprob: -6.396757089532912e-05
    2. ',' → logprob: -10.1250638961792
    3. '(' → logprob: -11.6250638961792
    4. ' (' → logprob: -11.7500638961792
    5. 'normal' → logprob: -12.3750638961792
    6. ' normal' → logprob: -13.5000638961792
    7. '(norm' → logprob: -13.8750638961792
    8. ' ,' → logprob: -15.6250638961792
    9. ')' → logprob: -15.7500638961792
    10. ')(' → logprob: -16.375064849853516

Token 416: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.0002627662615850568
    2. ' normal' → logprob: -8.250263214111328
    3. '(normal' → logprob: -13.500263214111328
    4. '   ' → logprob: -18.875263214111328
    5. ')' → logprob: -20.250263214111328
    6. '.normal' → logprob: -20.625263214111328
    7. 'norm' → logprob: -21.375263214111328
    8. ' ' → logprob: -21.375263214111328
    9. 'normalized' → logprob: -22.250263214111328
    10. '  ' → logprob: -22.625263214111328

Token 417: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002230428857728839
    2. '))' → logprob: -6.877230644226074
    3. ' )' → logprob: -7.377230644226074
    4. '())' → logprob: -7.502230644226074
    5. ')>' → logprob: -11.502230644226074
    6. ')`' → logprob: -13.002230644226074
    7. ' ))' → logprob: -13.252230644226074
    8. ' ())' → logprob: -13.502230644226074
    9. '])' → logprob: -14.252230644226074
    10. ')<' → logprob: -14.377230644226074

Token 418: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6814495921134949
    2. ' >' → logprob: -0.8064495921134949
    3. '()>' → logprob: -3.1814496517181396
    4. '()' → logprob: -5.3064494132995605
    5. ')' → logprob: -7.1814494132995605
    6. '(' → logprob: -8.181449890136719
    7. ')>' → logprob: -9.306449890136719
    8. '(">' → logprob: -10.681449890136719
    9. '[' → logprob: -11.431449890136719
    10. ' ' → logprob: -11.931449890136719

Token 419: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001171056181192398
    2. ' ' → logprob: -6.751171112060547
    3. '   ' → logprob: -14.626171112060547
    4. '0' → logprob: -14.876171112060547
    5. '
' → logprob: -17.251171112060547
    6. '(' → logprob: -17.626171112060547
    7. '```' → logprob: -18.376171112060547
    8. '  ' → logprob: -18.501171112060547
    9. '=' → logprob: -18.876171112060547
    10. '１' → logprob: -19.376171112060547

Token 420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '0' → logprob: -15.750027656555176
    4. '   ' → logprob: -16.375028610229492
    5. '(' → logprob: -18.000028610229492
    6. '```' → logprob: -18.000028610229492
    7. '１' → logprob: -18.375028610229492
    8. '
' → logprob: -18.500028610229492
    9. '

' → logprob: -19.000028610229492
    10. ' ' → logprob: -19.250028610229492

Token 421: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759435296058655
    2. 'e' → logprob: -0.8259435296058655
    3. '-
' → logprob: -13.450943946838379
    4. ' -' → logprob: -14.075943946838379
    5. '
' → logprob: -14.950943946838379
    6. '```' → logprob: -15.075943946838379
    7. '   ' → logprob: -15.325943946838379
    8. '−' → logprob: -15.450943946838379
    9. 'E' → logprob: -15.575943946838379
    10. '-e' → logprob: -15.825943946838379

Token 422: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.088346359931165e-07
    2. ' -' → logprob: -14.500000953674316
    3. 'e' → logprob: -15.875000953674316
    4. '```' → logprob: -16.625
    5. '6' → logprob: -16.75
    6. '   ' → logprob: -17.5
    7. '9' → logprob: -17.75
    8. '7' → logprob: -18.125
    9. ' ' → logprob: -18.25
    10. '−' → logprob: -18.5625

Token 423: '9' (ID: 24)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.5742214918136597
    2. '6' → logprob: -0.9492214918136597
    3. '7' → logprob: -3.574221611022949
    4. '9' → logprob: -4.199221611022949
    5. '10' → logprob: -5.074221611022949
    6. '5' → logprob: -7.949221611022949
    7. '06' → logprob: -9.82422161102295
    8. '08' → logprob: -9.94922161102295
    9. '12' → logprob: -10.19922161102295
    10. '07' → logprob: -11.44922161102295

Token 424: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025017552077770233
    2. ':
' → logprob: -3.900017499923706
    3. ':return' → logprob: -5.525017738342285
    4. '   ' → logprob: -8.025017738342285
    5. ' :' → logprob: -9.150017738342285
    6. ' :
' → logprob: -10.525017738342285
    7. ':
' → logprob: -12.525017738342285
    8. '       ' → logprob: -12.650017738342285
    9. ' return' → logprob: -12.650017738342285
    10. ' or' → logprob: -13.525017738342285

Token 425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019117422634735703
    2. '   ' → logprob: -6.501911640167236
    3. ' return' → logprob: -8.376912117004395
    4. ' False' → logprob: -9.251912117004395
    5. '
' → logprob: -10.001912117004395
    6. '    ' → logprob: -11.001912117004395
    7. 'False' → logprob: -11.626912117004395
    8. '     ' → logprob: -13.001912117004395
    9. 'return' → logprob: -13.501912117004395
    10. ' 
' → logprob: -13.751912117004395

Token 426: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.011393452063202858
    2. 'return' (adapté à ' return') → logprob: -4.5113935470581055
    3. '   ' → logprob: -8.136393547058105
    4. '       ' → logprob: -10.136393547058105
    5. '    ' → logprob: -12.261393547058105
    6. ' False' → logprob: -12.386393547058105
    7. '	return' → logprob: -13.261393547058105
    8. 'False' → logprob: -13.511393547058105
    9. ':return' → logprob: -14.261393547058105
    10. ' ' → logprob: -14.886393547058105

Token 427: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.005233763717114925
    2. ' False' → logprob: -5.2552337646484375
    3. '(False' → logprob: -19.380233764648438
    4. 'false' → logprob: -20.755233764648438
    5. '=False' → logprob: -21.880233764648438
    6. ' ' → logprob: -22.505233764648438
    7. '   ' → logprob: -22.505233764648438
    8. 'True' → logprob: -23.880233764648438
    9. 'FALSE' → logprob: -23.880233764648438
    10. 'F' → logprob: -24.255233764648438

Token 428: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2346043735742569
    2. '   ' → logprob: -2.2346043586730957
    3. '    
' → logprob: -2.3596043586730957
    4. '

' → logprob: -5.234604358673096
    5. '  
' → logprob: -6.859604358673096
    6. '
    
' → logprob: -7.859604358673096
    7. '<|end|>' → logprob: -8.609604835510254
    8. '    

' → logprob: -8.734604835510254
    9. ' 
' → logprob: -8.859604835510254
    10. '    
    
' → logprob: -9.484604835510254

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006699973251670599
    2. '    
' → logprob: -5.631700038909912
    3. 'return' → logprob: -5.881700038909912
    4. '
' → logprob: -8.756699562072754
    5. ' return' → logprob: -8.881699562072754
    6. '        
' → logprob: -13.006699562072754
    7. '  
' → logprob: -13.256699562072754
    8. '

' → logprob: -13.506699562072754
    9. '   
' → logprob: -14.381699562072754
    10. '   ' → logprob: -14.381699562072754

Token 430: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0022391125094145536
    2. '#' → logprob: -6.377239227294922
    3. 'u' → logprob: -8.377239227294922
    4. '   ' → logprob: -8.877239227294922
    5. 'proj' → logprob: -9.377239227294922
    6. ' return' → logprob: -10.377239227294922
    7. 'projection' → logprob: -11.252239227294922
    8. 'project' → logprob: -11.377239227294922
    9. 'from' → logprob: -11.877239227294922
    10. 'normal' → logprob: -12.252239227294922

Token 431: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.25192946195602417
    2. ' is' → logprob: -1.501929521560669
    3. '   ' → logprob: -15.25192928314209
    4. 'True' → logprob: -17.001930236816406
    5. '(is' → logprob: -18.001930236816406
    6. ' ' → logprob: -18.126930236816406
    7. '	is' → logprob: -18.126930236816406
    8. ' ' → logprob: -18.751930236816406
    9. '```' → logprob: -19.876930236816406
    10. '  ' → logprob: -20.001930236816406

Token 432: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: 0.0
    2. '_points' → logprob: -19.875
    3. '_Point' → logprob: -21.0
    4. 'point' → logprob: -21.125
    5. '_POINT' → logprob: -21.125
    6. '_p' → logprob: -21.375
    7. '```' → logprob: -21.375
    8. '_part' → logprob: -22.0
    9. '_pt' → logprob: -22.25
    10. '_line' → logprob: -22.25

Token 433: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.7835754988482222e-05
    2. 'in' → logprob: -11.000018119812012
    3. '(p' → logprob: -14.250018119812012
    4. 'In' → logprob: -15.500018119812012
    5. '(_' → logprob: -16.875017166137695
    6. '(in' → logprob: -17.125017166137695
    7. '_point' → logprob: -17.125017166137695
    8. ' in' → logprob: -17.250017166137695
    9. '(' → logprob: -17.625017166137695
    10. ' _' → logprob: -18.000017166137695

Token 434: '_triangle' (ID: 187218)
  Prédit: '_triangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_triangle' → logprob: -0.0005530327325686812
    2. 'triangle' → logprob: -7.500553131103516
    3. '_tri' → logprob: -17.125553131103516
    4. ' triangle' → logprob: -19.125553131103516
    5. 'riangle' → logprob: -19.875553131103516
    6. 'Triangle' → logprob: -19.875553131103516
    7. '_tr' → logprob: -20.000553131103516
    8. 'iangle' → logprob: -20.125553131103516
    9. '_point' → logprob: -20.250553131103516
    10. 'a' → logprob: -20.500553131103516

Token 435: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00016265720478259027
    2. '(' → logprob: -8.750163078308105
    3. ' (' → logprob: -12.500163078308105
    4. '(
' → logprob: -16.12516212463379
    5. '(P' → logprob: -16.25016212463379
    6. '((' → logprob: -16.37516212463379
    7. '(point' → logprob: -16.75016212463379
    8. 'p' → logprob: -17.12516212463379
    9. '(px' → logprob: -18.75016212463379
    10. ' ' → logprob: -18.87516212463379

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028828566428273916
    2. 'a' → logprob: -6.752882957458496
    3. ' ,' → logprob: -6.752882957458496
    4. ',a' → logprob: -7.752882957458496
    5. ' a' → logprob: -10.002882957458496
    6. '(a' → logprob: -10.877882957458496
    7. '   ' → logprob: -11.377882957458496
    8. 'p' → logprob: -11.752882957458496
    9. ',p' → logprob: -11.877882957458496
    10. '[' → logprob: -12.127882957458496

Token 437: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004309076175559312
    2. ' a' → logprob: -7.750431060791016
    3. '   ' → logprob: -16.125431060791016
    4. '[a' → logprob: -16.625431060791016
    5. '	a' → logprob: -17.125431060791016
    6. '(a' → logprob: -18.000431060791016
    7. ')a' → logprob: -19.750431060791016
    8. '[' → logprob: -19.875431060791016
    9. '
' → logprob: -19.875431060791016
    10. '<a' → logprob: -20.000431060791016

Token 438: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036406738217920065
    2. ',b' → logprob: -8.125364303588867
    3. ' ,' → logprob: -9.750364303588867
    4. 'b' → logprob: -11.625364303588867
    5. ',
' → logprob: -14.250364303588867
    6. ' b' → logprob: -15.625364303588867
    7. '   ' → logprob: -16.875364303588867
    8. '[' → logprob: -17.625364303588867
    9. ',c' → logprob: -17.750364303588867
    10. 'c' → logprob: -18.125364303588867

Token 439: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004078401252627373
    2. ' b' → logprob: -5.504078388214111
    3. 'c' → logprob: -18.629077911376953
    4. '	b' → logprob: -20.004077911376953
    5. ',b' → logprob: -20.254077911376953
    6. '   ' → logprob: -20.379077911376953
    7. ' ' → logprob: -20.379077911376953
    8. '(b' → logprob: -20.754077911376953
    9. ')b' → logprob: -21.004077911376953
    10. '[b' → logprob: -22.629077911376953

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004844154173042625
    2. ',c' → logprob: -7.875484466552734
    3. 'c' → logprob: -9.375484466552734
    4. ' ,' → logprob: -11.000484466552734
    5. ',
' → logprob: -13.125484466552734
    6. ' c' → logprob: -15.125484466552734
    7. '[' → logprob: -15.625484466552734
    8. '   ' → logprob: -16.000484466552734
    9. ')' → logprob: -16.750484466552734
    10. '```' → logprob: -17.375484466552734

Token 441: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0015023599844425917
    2. ' c' → logprob: -6.501502513885498
    3. ')c' → logprob: -16.751502990722656
    4. '	c' → logprob: -18.126502990722656
    5. '   ' → logprob: -20.501502990722656
    6. ')' → logprob: -21.251502990722656
    7. '_c' → logprob: -21.501502990722656
    8. '[c' → logprob: -21.626502990722656
    9. ' ' → logprob: -22.001502990722656
    10. '(c' → logprob: -22.251502990722656

Token 442: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.968312951968983e-06
    2. ')
' → logprob: -11.625009536743164
    3. ' )' → logprob: -14.375009536743164
    4. '   ' → logprob: -15.125009536743164
    5. '))' → logprob: -17.125009536743164
    6. ')p' → logprob: -18.250009536743164
    7. ')a' → logprob: -18.500009536743164
    8. ')#' → logprob: -18.750009536743164
    9. ')return' → logprob: -18.875009536743164
    10. ')

' → logprob: -19.000009536743164

Token 443: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 444: ' is' (ID: 382)
  Prédit: ' point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -1.5572569370269775
    2. 'triangle' → logprob: -1.6822569370269775
    3. 'point' → logprob: -1.8072569370269775
    4. ' triangle' → logprob: -2.5572569370269775
    5. 'ray' → logprob: -2.6822569370269775
    6. ' line' → logprob: -3.4322569370269775
    7. ' main' → logprob: -3.4322569370269775
    8. 'vector' → logprob: -3.8072569370269775
    9. ' is' → logprob: -3.9322569370269775
    10. 'line' → logprob: -4.057256698608398

Token 445: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.014552687294781208
    2. '_triangle' → logprob: -5.014552593231201
    3. '_inside' → logprob: -6.139552593231201
    4. '_vector' → logprob: -6.764552593231201
    5. '_conv' → logprob: -7.014552593231201
    6. '_' → logprob: -7.264552593231201
    7. '_line' → logprob: -7.264552593231201
    8. '_close' → logprob: -8.01455307006836
    9. '_col' → logprob: -8.88955307006836
    10. '_polygon' → logprob: -9.01455307006836

Token 446: '_on' (ID: 10053)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.04343290254473686
    2. '_inside' → logprob: -3.2934329509735107
    3. '_on' → logprob: -5.293432712554932
    4. '_' → logprob: -8.29343318939209
    5. 'In' → logprob: -10.16843318939209
    6. '(' → logprob: -11.29343318939209
    7. '_IN' → logprob: -12.04343318939209
    8. 'in' → logprob: -12.29343318939209
    9. '_ins' → logprob: -12.66843318939209
    10. '_visible' → logprob: -12.79343318939209

Token 447: '_segment' (ID: 71041)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.7534789443016052
    2. '_plane' → logprob: -1.50347900390625
    3. '_edge' → logprob: -2.12847900390625
    4. '_triangle' → logprob: -2.12847900390625
    5. '_segment' → logprob: -2.87847900390625
    6. 'def' → logprob: -5.87847900390625
    7. 'line' → logprob: -5.87847900390625
    8. 'segment' → logprob: -6.25347900390625
    9. '(p' → logprob: -6.87847900390625
    10. 'edge' → logprob: -6.87847900390625

Token 448: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0003115095605608076
    2. '(a' → logprob: -8.375311851501465
    3. '(point' → logprob: -10.125311851501465
    4. '(' → logprob: -10.375311851501465
    5. ' (' → logprob: -12.375311851501465
    6. '(pt' → logprob: -12.500311851501465
    7. '_point' → logprob: -14.875311851501465
    8. '(px' → logprob: -15.500311851501465
    9. '_' → logprob: -15.750311851501465
    10. '(pi' → logprob: -15.875311851501465

Token 449: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00303380168043077
    2. '(p' → logprob: -5.878033638000488
    3. ',p' → logprob: -9.378033638000488
    4. ' ,' → logprob: -9.503033638000488
    5. '(a' → logprob: -10.003033638000488
    6. '(' → logprob: -11.003033638000488
    7. ',a' → logprob: -12.253033638000488
    8. ',
' → logprob: -13.378033638000488
    9. ')' → logprob: -14.378033638000488
    10. 'a' → logprob: -15.628033638000488

Token 450: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002955399686470628
    2. ' a' → logprob: -8.250295639038086
    3. 'def' → logprob: -10.500295639038086
    4. 'seg' → logprob: -13.000295639038086
    5. 'p' → logprob: -13.500295639038086
    6. 'segment' → logprob: -13.875295639038086
    7. '   ' → logprob: -14.375295639038086
    8. '	a' → logprob: -14.750295639038086
    9. '```' → logprob: -15.000295639038086
    10. '[a' → logprob: -15.750295639038086

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.610702363715973e-06
    2. ' ,' → logprob: -11.875009536743164
    3. ',b' → logprob: -12.875009536743164
    4. ',p' → logprob: -17.000009536743164
    5. ',
' → logprob: -17.250009536743164
    6. '_,' → logprob: -17.250009536743164
    7. ',a' → logprob: -17.500009536743164
    8. 'b' → logprob: -18.375009536743164
    9. 'a' → logprob: -18.750009536743164
    10. '   ' → logprob: -19.375009536743164

Token 452: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015023599844425917
    2. ' b' → logprob: -6.501502513885498
    3. '	b' → logprob: -19.376502990722656
    4. 'c' → logprob: -19.501502990722656
    5. ',b' → logprob: -21.376502990722656
    6. ',' → logprob: -22.001502990722656
    7. ' ' → logprob: -22.001502990722656
    8. '   ' → logprob: -22.001502990722656
    9. ')b' → logprob: -22.376502990722656
    10. '_b' → logprob: -22.626502990722656

Token 453: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008623320609331131
    2. '):
' → logprob: -4.758623123168945
    3. ')' → logprob: -12.133623123168945
    4. '):
' → logprob: -13.008623123168945
    5. '):

' → logprob: -14.258623123168945
    6. ' ):' → logprob: -15.508623123168945
    7. ':' → logprob: -16.258623123168945
    8. '   ' → logprob: -16.258623123168945
    9. ',' → logprob: -17.383623123168945
    10. ' ' → logprob: -18.383623123168945

Token 454: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007778270519338548
    2. 'def' → logprob: -7.375777721405029
    3. '#' → logprob: -9.625778198242188
    4. 'vector' → logprob: -10.625778198242188
    5. ' vector' → logprob: -11.125778198242188
    6. 'vec' → logprob: -11.375778198242188
    7. 't' → logprob: -11.500778198242188
    8. 'v' → logprob: -12.250778198242188
    9. '
' → logprob: -12.250778198242188
    10. ':
' → logprob: -13.250778198242188

Token 455: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03464685380458832
    2. '#' (adapté à ' #') → logprob: -4.534646987915039
    3. 'ap' → logprob: -4.534646987915039
    4. 'ab' → logprob: -5.159646987915039
    5. 'vec' → logprob: -5.534646987915039
    6. 'def' → logprob: -6.409646987915039
    7. 'eps' → logprob: -8.409646987915039
    8. 'v' → logprob: -8.784646987915039
    9. 'vector' → logprob: -8.784646987915039
    10. 'epsilon' → logprob: -8.784646987915039

Token 456: ' Check' (ID: 6208)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.15938661992549896
    2. 'ab' → logprob: -2.90938663482666
    3. 'vec' → logprob: -3.15938663482666
    4. '#' → logprob: -3.40938663482666
    5. 'v' → logprob: -5.03438663482666
    6. '   ' → logprob: -5.28438663482666
    7. 'if' → logprob: -6.15938663482666
    8. 'pa' → logprob: -6.15938663482666
    9. 'def' → logprob: -7.90938663482666
    10. 'min' → logprob: -7.90938663482666

Token 457: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04223576560616493
    2. 'if' → logprob: -3.292235851287842
    3. '   ' → logprob: -5.542235851287842
    4. ' vector' → logprob: -8.667235374450684
    5. 'def' → logprob: -10.167235374450684
    6. 'vector' → logprob: -10.167235374450684
    7. ' ' → logprob: -12.292235374450684
    8. '#' → logprob: -13.042235374450684
    9. ' return' → logprob: -13.167235374450684
    10. '
' → logprob: -13.667235374450684

Token 458: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9105134010314941
    2. 'abs' → logprob: -0.9105134010314941
    3. 'vector' → logprob: -2.535513401031494
    4. 'point' → logprob: -3.535513401031494
    5. ' abs' → logprob: -3.785513401031494
    6. ' p' → logprob: -3.910513401031494
    7. 'is' → logprob: -4.285513401031494
    8. 'min' → logprob: -4.285513401031494
    9. ' vector' → logprob: -4.910513401031494
    10. 'dot' → logprob: -6.410513401031494

Token 459: ' lies' (ID: 24384)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.37824589014053345
    2. ' in' → logprob: -1.2532458305358887
    3. ' lies' → logprob: -4.378245830535889
    4. ')' → logprob: -5.503245830535889
    5. 'in' → logprob: -5.503245830535889
    6. ' ' → logprob: -6.128245830535889
    7. 'is' → logprob: -6.503245830535889
    8. '   ' → logprob: -6.628245830535889
    9. ' ==' → logprob: -6.878245830535889
    10. ' vector' → logprob: -7.128245830535889

Token 460: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.5766504406929016
    2. ' on' → logprob: -0.8266504406929016
    3. ' exactly' → logprob: -8.076650619506836
    4. ' in' → logprob: -8.826650619506836
    5. 'in' → logprob: -9.076650619506836
    6. ' vector' → logprob: -9.451650619506836
    7. 'vector' → logprob: -11.326650619506836
    8. 'between' → logprob: -11.701650619506836
    9. '   ' → logprob: -11.951650619506836
    10. ' within' → logprob: -12.201650619506836

Token 461: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7277417778968811
    2. 'the' → logprob: -1.3527417182922363
    3. ' the' → logprob: -2.3527417182922363
    4. 'vector' → logprob: -2.7277417182922363
    5. ' vector' → logprob: -3.3527417182922363
    6. 'segment' → logprob: -3.6027417182922363
    7. ' segment' → logprob: -3.9777417182922363
    8. ' a' → logprob: -5.102741718292236
    9. '[a' → logprob: -5.352741718292236
    10. 'ab' → logprob: -6.102741718292236

Token 462: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.40840068459510803
    2. 'vector' → logprob: -1.9084006547927856
    3. ' segment' → logprob: -2.783400774002075
    4. '[a' → logprob: -3.033400774002075
    5. 'line' → logprob: -3.408400774002075
    6. 'def' → logprob: -4.533400535583496
    7. ' line' → logprob: -4.533400535583496
    8. 'a' → logprob: -4.658400535583496
    9. ' vector' → logprob: -5.283400535583496
    10. 'ab' → logprob: -5.783400535583496

Token 463: ' ab' (ID: 692)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.2949849367141724
    2. 'def' → logprob: -1.7949849367141724
    3. '   ' → logprob: -2.044984817504883
    4. '(a' → logprob: -2.419984817504883
    5. ' between' → logprob: -2.669984817504883
    6. ' vector' → logprob: -2.794984817504883
    7. ' p' → logprob: -3.044984817504883
    8. ' in' → logprob: -3.544984817504883
    9. ' of' → logprob: -4.044984817504883
    10. ' def' → logprob: -4.169984817504883

Token 464: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0827568769454956
    2. ':
' → logprob: -2.707756996154785
    3. ':' → logprob: -4.457756996154785
    4. ' and' → logprob: -8.207756996154785
    5. '
' → logprob: -8.332756996154785
    6. '):
' → logprob: -8.582756996154785
    7. ',' → logprob: -9.082756996154785
    8. '    
' → logprob: -9.082756996154785
    9. '(p' → logprob: -10.457756996154785
    10. ' if' → logprob: -10.457756996154785

Token 465: 'including' (ID: 26167)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.179821252822876
    2. 'vector' → logprob: -1.804821252822876
    3. ')' → logprob: -2.054821252822876
    4. 'min' → logprob: -2.429821252822876
    5. ')
' → logprob: -2.804821252822876
    6. 'p' → logprob: -2.804821252822876
    7. 'abs' → logprob: -2.929821252822876
    8. '   ' → logprob: -3.179821252822876
    9. '
' → logprob: -3.679821252822876
    10. 'a' → logprob: -3.804821252822876

Token 466: ' endpoints' (ID: 76454)
  Prédit: ' endpoints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' endpoints' → logprob: -0.28743112087249756
    2. 'a' → logprob: -2.287431240081787
    3. 'end' → logprob: -2.412431240081787
    4. 'the' → logprob: -3.537431240081787
    5. 'boundary' → logprob: -4.287431240081787
    6. ' the' → logprob: -5.287431240081787
    7. 'b' → logprob: -5.287431240081787
    8. 'bounds' → logprob: -6.912431240081787
    9. 'bound' → logprob: -7.537431240081787
    10. ' its' → logprob: -7.662431240081787

Token 467: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7479435801506042
    2. ')
' → logprob: -0.7479435801506042
    3. '):
' → logprob: -3.247943639755249
    4. '   ' → logprob: -4.49794340133667
    5. '):' → logprob: -5.74794340133667
    6. ')

' → logprob: -9.997943878173828
    7. ' )
' → logprob: -10.372943878173828
    8. '):

' → logprob: -10.497943878173828
    9. ')
' → logprob: -11.497943878173828
    10. ' )' → logprob: -11.622943878173828

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009882692247629166
    2. ' if' → logprob: -7.125988483428955
    3. '
' → logprob: -9.000988006591797
    4. 'if' → logprob: -10.125988006591797
    5. '    
' → logprob: -11.875988006591797
    6. ' vector' → logprob: -12.250988006591797
    7. 'vec' → logprob: -13.500988006591797
    8. 'v' → logprob: -14.000988006591797
    9. ' p' → logprob: -14.000988006591797
    10. ' ap' → logprob: -14.000988006591797

Token 469: ' ap' (ID: 1419)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' (adapté à ' ap') → logprob: -0.35674214363098145
    2. '   ' → logprob: -2.2317421436309814
    3. 'vec' → logprob: -2.2317421436309814
    4. 'ab' → logprob: -2.9817421436309814
    5. 'min' → logprob: -4.356741905212402
    6. 'pa' → logprob: -4.606741905212402
    7. 'cross' → logprob: -5.856741905212402
    8. 'vector' → logprob: -5.981741905212402
    9. ' ap' → logprob: -6.231741905212402
    10. 'v' → logprob: -6.731741905212402

Token 470: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692894041538239
    2. ' =' → logprob: -2.1269290447235107
    3. '=
' → logprob: -15.00192928314209
    4. 'vector' → logprob: -15.50192928314209
    5. ' vector' → logprob: -16.126928329467773
    6. '_vector' → logprob: -16.376928329467773
    7. ' =
' → logprob: -16.751928329467773
    8. ' ' → logprob: -16.876928329467773
    9. '=

' → logprob: -17.001928329467773
    10. '   ' → logprob: -17.501928329467773

Token 471: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.0024756586644798517
    2. ' vector' → logprob: -6.002475738525391
    3. '   ' → logprob: -18.50247573852539
    4. 'Vector' → logprob: -19.00247573852539
    5. '	vector' → logprob: -19.50247573852539
    6. '.vector' → logprob: -19.50247573852539
    7. '[' → logprob: -19.62747573852539
    8. ' ' → logprob: -20.25247573852539
    9. '(vector' → logprob: -20.75247573852539
    10. '_vector' → logprob: -21.75247573852539

Token 472: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0013646431034430861
    2. 'sub' → logprob: -6.626364707946777
    3. 'vector' → logprob: -10.376364707946777
    4. '[' → logprob: -12.626364707946777
    5. 'subtract' → logprob: -12.876364707946777
    6. 'Sub' → logprob: -14.626364707946777
    7. '   ' → logprob: -14.876364707946777
    8. ' vector' → logprob: -16.37636375427246
    9. ' sub' → logprob: -16.50136375427246
    10. 'def' → logprob: -16.62636375427246

Token 473: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.008129963040119e-06
    2. 'p' → logprob: -12.750003814697266
    3. '(' → logprob: -14.125003814697266
    4. '(a' → logprob: -15.500003814697266
    5. 'a' → logprob: -17.250003814697266
    6. '(
' → logprob: -18.125003814697266
    7. ' (' → logprob: -18.750003814697266
    8. '[p' → logprob: -19.125003814697266
    9. '<p' → logprob: -19.375003814697266
    10. '```' → logprob: -19.375003814697266

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018189321272075176
    2. ',a' → logprob: -6.376819133758545
    3. 'a' → logprob: -9.126818656921387
    4. ' ,' → logprob: -11.876818656921387
    5. ' a' → logprob: -14.001818656921387
    6. ',
' → logprob: -15.501818656921387
    7. ' ' → logprob: -16.251819610595703
    8. '[' → logprob: -17.376819610595703
    9. ',b' → logprob: -17.376819610595703
    10. '   ' → logprob: -17.501819610595703

Token 475: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00023083435371518135
    2. ' a' → logprob: -8.37523078918457
    3. '   ' → logprob: -15.87523078918457
    4. '	a' → logprob: -16.12523078918457
    5. ' ' → logprob: -18.12523078918457
    6. ''a' → logprob: -18.62523078918457
    7. '"a' → logprob: -19.50023078918457
    8. '[a' → logprob: -19.75023078918457
    9. ')a' → logprob: -19.87523078918457
    10. 'а' → logprob: -20.25023078918457

Token 476: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10025691986083984
    2. ')' → logprob: -2.35025691986084
    3. ')
' → logprob: -9.97525691986084
    4. ' )
' → logprob: -13.35025691986084
    5. ')

' → logprob: -13.60025691986084
    6. '   ' → logprob: -14.22525691986084
    7. ' )' → logprob: -16.725257873535156
    8. '),' → logprob: -16.850257873535156
    9. ' ' → logprob: -17.350257873535156
    10. ')`
' → logprob: -17.350257873535156

Token 477: '   ' (ID: 271)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.3147951364517212
    2. ' ab' → logprob: -1.5647951364517212
    3. 'bp' → logprob: -2.8147950172424316
    4. ' bp' → logprob: -7.564795017242432
    5. '   ' → logprob: -7.689795017242432
    6. ' ' → logprob: -11.06479549407959
    7. 'AB' → logprob: -11.93979549407959
    8. 'pb' → logprob: -11.93979549407959
    9. '(bp' → logprob: -12.43979549407959
    10. 'abs' → logprob: -13.31479549407959

Token 478: ' bp' (ID: 52357)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.1274515986442566
    2. 'bp' (adapté à ' bp') → logprob: -2.1274516582489014
    3. ' ab' → logprob: -7.627451419830322
    4. 'pb' → logprob: -10.50245189666748
    5. ' bp' → logprob: -12.62745189666748
    6. 'b' → logprob: -12.87745189666748
    7. '   ' → logprob: -12.87745189666748
    8. 'AB' → logprob: -15.62745189666748
    9. 'abr' → logprob: -16.002450942993164
    10. 'abs' → logprob: -16.252450942993164

Token 479: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023002564907074
    2. ' =' → logprob: -1.910230040550232
    3. 'b' → logprob: -12.785229682922363
    4. ' ' → logprob: -14.285229682922363
    5. '   ' → logprob: -14.410229682922363
    6. '=[' → logprob: -15.035229682922363
    7. '[' → logprob: -15.285229682922363
    8. 'def' → logprob: -15.410229682922363
    9. '=b' → logprob: -15.535229682922363
    10. ' vector' → logprob: -15.785229682922363

Token 480: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.00033546582562848926
    2. ' vector' → logprob: -8.000335693359375
    3. '	vector' → logprob: -17.625335693359375
    4. '.vector' → logprob: -17.875335693359375
    5. '   ' → logprob: -18.250335693359375
    6. '<vector' → logprob: -19.250335693359375
    7. ' ' → logprob: -19.375335693359375
    8. '(vector' → logprob: -19.500335693359375
    9. '-vector' → logprob: -20.125335693359375
    10. '  ' → logprob: -20.875335693359375

Token 481: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -7.584239938296378e-06
    2. 'sub' → logprob: -11.875007629394531
    3. '[' → logprob: -15.625007629394531
    4. 'Sub' → logprob: -16.25000762939453
    5. '=sub' → logprob: -17.00000762939453
    6. '-sub' → logprob: -17.12500762939453
    7. '=' → logprob: -17.12500762939453
    8. '_SUB' → logprob: -17.75000762939453
    9. '[sub' → logprob: -18.12500762939453
    10. ' суб' → logprob: -18.25000762939453

Token 482: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.014472680166363716
    2. '(b' → logprob: -4.264472484588623
    3. 'p' → logprob: -8.139472961425781
    4. 'b' → logprob: -11.014472961425781
    5. '(' → logprob: -15.264472961425781
    6. '(a' → logprob: -16.01447296142578
    7. ' (' → logprob: -16.38947296142578
    8. '	p' → logprob: -16.38947296142578
    9. '[p' → logprob: -16.51447296142578
    10. '(point' → logprob: -16.51447296142578

Token 483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006482214666903019
    2. ',b' → logprob: -7.375648021697998
    3. 'b' → logprob: -10.750648498535156
    4. ' b' → logprob: -16.000648498535156
    5. ' ,' → logprob: -17.125648498535156
    6. ',p' → logprob: -18.375648498535156
    7. '-' → logprob: -18.375648498535156
    8. 'p' → logprob: -18.750648498535156
    9. '_,' → logprob: -18.750648498535156
    10. '[' → logprob: -18.875648498535156

Token 484: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00317783304490149
    2. ' b' → logprob: -5.753177642822266
    3. '	b' → logprob: -16.003177642822266
    4. 'p' → logprob: -17.253177642822266
    5. '[b' → logprob: -19.753177642822266
    6. ')b' → logprob: -19.753177642822266
    7. ',b' → logprob: -20.003177642822266
    8. '_b' → logprob: -20.128177642822266
    9. ' ' → logprob: -20.128177642822266
    10. '[' → logprob: -20.753177642822266

Token 485: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014208757318556309
    2. ')
' → logprob: -4.264208793640137
    3. ')

' → logprob: -10.264208793640137
    4. ')
' → logprob: -12.139208793640137
    5. '   ' → logprob: -12.514208793640137
    6. ')[' → logprob: -14.889208793640137
    7. ' )' → logprob: -15.264208793640137
    8. ')`' → logprob: -15.264208793640137
    9. ')`
' → logprob: -16.01420783996582
    10. ' ' → logprob: -16.38920783996582

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05170450732111931
    2. 'cross' → logprob: -3.6767044067382812
    3. ' cross' → logprob: -4.176704406738281
    4. ' dot' → logprob: -5.801704406738281
    5. 'dot' → logprob: -6.176704406738281
    6. 'return' → logprob: -6.426704406738281
    7. ' if' → logprob: -6.676704406738281
    8. 'if' → logprob: -7.176704406738281
    9. ' return' → logprob: -7.301704406738281
    10. 'ab' → logprob: -9.051704406738281

Token 487: ' ab' (ID: 692)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.3958660662174225
    2. 'dot' → logprob: -1.8958660364151
    3. 'if' → logprob: -2.2708661556243896
    4. 'return' → logprob: -2.8958661556243896
    5. '   ' → logprob: -5.1458659172058105
    6. 'ab' (adapté à ' ab') → logprob: -5.3958659172058105
    7. 'for' → logprob: -5.7708659172058105
    8. 'ap' → logprob: -6.6458659172058105
    9. ' cross' → logprob: -7.1458659172058105
    10. 'dp' → logprob: -7.1458659172058105

Token 488: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. ' vector' → logprob: -17.828889846801758
    4. ' ' → logprob: -18.203889846801758
    5. 'vector' → logprob: -19.078889846801758
    6. '=

' → logprob: -19.828889846801758
    7. '＝' → logprob: -19.828889846801758
    8. '=
' → logprob: -20.328889846801758
    9. '=}' → logprob: -20.578889846801758
    10. '[' → logprob: -20.828889846801758

Token 489: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.0001584850688232109
    2. ' vector' → logprob: -8.750158309936523
    3. '	vector' → logprob: -21.500158309936523
    4. 'Vector' → logprob: -22.000158309936523
    5. '.vector' → logprob: -22.125158309936523
    6. '   ' → logprob: -23.000158309936523
    7. '(vector' → logprob: -23.000158309936523
    8. '  ' → logprob: -24.000158309936523
    9. ' ' → logprob: -24.250158309936523
    10. '_vector' → logprob: -24.625158309936523

Token 490: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -1.1637164789135568e-05
    2. 'sub' → logprob: -11.375011444091797
    3. '[' → logprob: -17.375011444091797
    4. 'def' → logprob: -17.500011444091797
    5. 'Sub' → logprob: -17.750011444091797
    6. '-sub' → logprob: -19.000011444091797
    7. 'a' → logprob: -19.250011444091797
    8. '_SUB' → logprob: -19.375011444091797
    9. '[a' → logprob: -19.875011444091797
    10. '_def' → logprob: -20.000011444091797

Token 491: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0067154900170862675
    2. 'b' → logprob: -5.006715297698975
    3. '(a' → logprob: -16.256715774536133
    4. ' b' → logprob: -17.256715774536133
    5. '	b' → logprob: -17.256715774536133
    6. '(' → logprob: -17.631715774536133
    7. '[b' → logprob: -17.756715774536133
    8. '_b' → logprob: -19.381715774536133
    9. ')b' → logprob: -20.881715774536133
    10. ' (' → logprob: -21.131715774536133

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012545911595225334
    2. 'a' → logprob: -4.512546062469482
    3. ',a' → logprob: -6.512546062469482
    4. ' a' → logprob: -11.512545585632324
    5. ' ,' → logprob: -13.137545585632324
    6. ',
' → logprob: -16.01254653930664
    7. '[' → logprob: -16.88754653930664
    8. ' ' → logprob: -17.01254653930664
    9. 's' → logprob: -18.38754653930664
    10. '	a' → logprob: -18.38754653930664

Token 493: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.547789674485102e-05
    2. ' a' → logprob: -10.250035285949707
    3. ')a' → logprob: -17.500036239624023
    4. '	a' → logprob: -17.750036239624023
    5. '"a' → logprob: -19.875036239624023
    6. '>a' → logprob: -20.250036239624023
    7. ')' → logprob: -20.375036239624023
    8. 'а' → logprob: -20.625036239624023
    9. ''a' → logprob: -20.875036239624023
    10. '#a' → logprob: -21.000036239624023

Token 494: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00040755473310127854
    2. ')
' → logprob: -8.500407218933105
    3. ')

' → logprob: -8.500407218933105
    4. '   ' → logprob: -14.750407218933105
    5. ')
' → logprob: -16.000408172607422
    6. ' )' → logprob: -16.125408172607422
    7. ')

' → logprob: -17.500408172607422
    8. ')`' → logprob: -17.750408172607422
    9. ']' → logprob: -18.625408172607422
    10. ' ' → logprob: -18.750408172607422

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029657915234565735
    2. ' dot' → logprob: -4.27965784072876
    3. 'dot' → logprob: -4.77965784072876
    4. ' if' → logprob: -5.27965784072876
    5. 'if' → logprob: -6.52965784072876
    6. 'ap' → logprob: -9.029658317565918
    7. 'dp' → logprob: -10.279658317565918
    8. 'ab' → logprob: -10.279658317565918
    9. ' return' → logprob: -10.404658317565918
    10. 'return' → logprob: -10.529658317565918

Token 496: ' cross' (ID: 8088)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7142671942710876
    2. 'dot' → logprob: -1.2142672538757324
    3. 'cross' (adapté à ' cross') → logprob: -1.7142672538757324
    4. 'ap' → logprob: -4.089267253875732
    5. 'return' → logprob: -4.589267253875732
    6. '   ' → logprob: -5.839267253875732
    7. 'ab' → logprob: -6.714267253875732
    8. 'def' → logprob: -6.714267253875732
    9. '#' → logprob: -7.339267253875732
    10. 'dp' → logprob: -8.339266777038574

Token 497: '_prod' (ID: 78031)
  Prédit: '_prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prod' → logprob: -0.29633429646492004
    2. '_ab' → logprob: -2.2963342666625977
    3. '_ap' → logprob: -2.4213342666625977
    4. '_product' → logprob: -3.5463342666625977
    5. '_p' → logprob: -3.7963342666625977
    6. '_val' → logprob: -5.046334266662598
    7. '_v' → logprob: -5.421334266662598
    8. 'p' → logprob: -5.921334266662598
    9. 'prod' → logprob: -6.921334266662598
    10. '_vec' → logprob: -7.421334266662598

Token 498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32731109857559204
    2. '=' → logprob: -1.4523110389709473
    3. '_result' → logprob: -4.202311038970947
    4. '_val' → logprob: -4.452311038970947
    5. '_ap' → logprob: -4.577311038970947
    6. '_ab' → logprob: -5.202311038970947
    7. '_res' → logprob: -6.577311038970947
    8. '_prod' → logprob: -7.702311038970947
    9. '_' → logprob: -8.577311515808105
    10. 'or' → logprob: -9.202311515808105

Token 499: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.018150178715586662
    2. ' cross' → logprob: -4.018150329589844
    3. 'vector' → logprob: -15.643150329589844
    4. 'c' → logprob: -17.018150329589844
    5. '.cross' → logprob: -17.143150329589844
    6. '   ' → logprob: -17.143150329589844
    7. '[c' → logprob: -18.143150329589844
    8. '_cross' → logprob: -18.518150329589844
    9. '[' → logprob: -18.768150329589844
    10. 'Cross' → logprob: -19.393150329589844

Token 500: '(ap' (ID: 68318)
  Prédit: '(ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ap' → logprob: -0.003938294947147369
    2. '(ab' → logprob: -5.6289381980896
    3. 'ap' → logprob: -8.003938674926758
    4. 'ab' → logprob: -13.253938674926758
    5. '```' → logprob: -14.253938674926758
    6. '	ap' → logprob: -14.503938674926758
    7. '=' → logprob: -16.003938674926758
    8. '`' → logprob: -16.003938674926758
    9. '[' → logprob: -16.128938674926758
    10. '(a' → logprob: -16.128938674926758

Token 501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002887490263674408
    2. ' ,' → logprob: -8.750288963317871
    3. '(ab' → logprob: -9.750288963317871
    4. '(ap' → logprob: -9.875288963317871
    5. '(' → logprob: -11.625288963317871
    6. 'ab' → logprob: -12.500288963317871
    7. ',b' → logprob: -13.125288963317871
    8. ',c' → logprob: -13.875288963317871
    9. ' (' → logprob: -14.000288963317871
    10. '(b' → logprob: -14.500288963317871

Token 502: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -8.180258191714529e-06
    2. ' ab' → logprob: -11.750008583068848
    3. 'bp' → logprob: -15.375008583068848
    4. 'ap' → logprob: -17.50000762939453
    5. 'b' → logprob: -17.75000762939453
    6. '   ' → logprob: -19.12500762939453
    7. '
' → logprob: -19.37500762939453
    8. ' ' → logprob: -19.62500762939453
    9. '

' → logprob: -21.62500762939453
    10. '    
' → logprob: -21.75000762939453

Token 503: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520265579223633
    2. ')
' → logprob: -1.5020265579223633
    3. ')

' → logprob: -9.502026557922363
    4. ' )
' → logprob: -12.502026557922363
    5. ')
' → logprob: -12.502026557922363
    6. ' )' → logprob: -12.502026557922363
    7. '[' → logprob: -12.752026557922363
    8. '0' → logprob: -13.002026557922363
    9. ')[' → logprob: -13.002026557922363
    10. ')==' → logprob: -13.877026557922363

Token 504: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13317079842090607
    2. '[' → logprob: -3.0081708431243896
    3. 'if' → logprob: -3.3831708431243896
    4. ' ==' → logprob: -4.2581706047058105
    5. '   ' → logprob: -4.7581706047058105
    6. ' [' → logprob: -4.7581706047058105
    7. ')' → logprob: -5.2581706047058105
    8. '==' → logprob: -5.8831706047058105
    9. ' =' → logprob: -7.7581706047058105
    10. ' !=' → logprob: -7.8831706047058105

Token 505: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008533962070941925
    2. ' if' → logprob: -5.258533954620361
    3. '   ' → logprob: -6.008533954620361
    4. 'for' → logprob: -7.508533954620361
    5. 'sum' → logprob: -9.00853443145752
    6. 'return' → logprob: -9.25853443145752
    7. 'any' → logprob: -10.50853443145752
    8. '[' → logprob: -10.75853443145752
    9. '0' → logprob: -11.63353443145752
    10. 'norm' → logprob: -12.88353443145752

Token 506: ' any' (ID: 1062)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.5761514902114868
    2. 'any' → logprob: -0.9511514902114868
    3. 'sum' → logprob: -3.8261513710021973
    4. 'dot' → logprob: -4.326151371002197
    5. ' cross' → logprob: -4.951151371002197
    6. ' any' → logprob: -4.951151371002197
    7. 'abs' → logprob: -6.826151371002197
    8. 'not' → logprob: -7.701151371002197
    9. '(any' → logprob: -8.201151847839355
    10. 'max' → logprob: -8.826151847839355

Token 507: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.25462275743484497
    2. '(c' → logprob: -1.5046226978302002
    3. '(coord' → logprob: -6.504622936248779
    4. '(x' → logprob: -6.879622936248779
    5. '([' → logprob: -9.754622459411621
    6. '(component' → logprob: -10.879622459411621
    7. '(co' → logprob: -11.129622459411621
    8. '((' → logprob: -11.254622459411621
    9. '(not' → logprob: -11.504622459411621
    10. '(lambda' → logprob: -11.629622459411621

Token 508: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4864315688610077
    2. '(c' → logprob: -0.9864315986633301
    3. '(coord' → logprob: -4.98643159866333
    4. '(cp' → logprob: -5.61143159866333
    5. '(val' → logprob: -6.98643159866333
    6. '(i' → logprob: -7.98643159866333
    7. '(v' → logprob: -8.361431121826172
    8. '(component' → logprob: -8.861431121826172
    9. '(co' → logprob: -9.611431121826172
    10. '(comp' → logprob: -10.111431121826172

Token 509: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08222854882478714
    2. ')>' → logprob: -2.707228660583496
    3. '>' → logprob: -4.457228660583496
    4. ' >' → logprob: -8.332228660583496
    5. ' ' → logprob: -9.207228660583496
    6. '   ' → logprob: -9.582228660583496
    7. '()' → logprob: -9.832228660583496
    8. 'x' → logprob: -9.957228660583496
    9. '()>' → logprob: -10.957228660583496
    10. '  ' → logprob: -11.207228660583496

Token 510: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.008790414780378342
    2. ' >' → logprob: -4.883790493011475
    3. ')>' → logprob: -7.633790493011475
    4. '()>' → logprob: -7.883790493011475
    5. '>x' → logprob: -8.258790016174316
    6. ')' → logprob: -10.258790016174316
    7. 'x' → logprob: -11.883790016174316
    8. '(x' → logprob: -11.883790016174316
    9. '   ' → logprob: -12.508790016174316
    10. ']>' → logprob: -13.008790016174316

Token 511: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015096203424036503
    2. ' ' → logprob: -6.501509666442871
    3. '   ' → logprob: -11.876509666442871
    4. '  ' → logprob: -16.251508712768555
    5. '
' → logprob: -17.251508712768555
    6. '```' → logprob: -17.376508712768555
    7. '0' → logprob: -17.626508712768555
    8. '(' → logprob: -17.876508712768555
    9. '    ' → logprob: -18.314008712768555
    10. '=' → logprob: -18.626508712768555

Token 512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -15.500000953674316
    4. '0' → logprob: -18.000001907348633
    5. '```' → logprob: -19.250001907348633
    6. '
' → logprob: -19.500001907348633
    7. '(' → logprob: -20.125001907348633
    8. '

' → logprob: -20.250001907348633
    9. '``' → logprob: -20.375001907348633
    10. 'e' → logprob: -20.375001907348633

Token 513: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4740934669971466
    2. '-' → logprob: -0.9740934371948242
    3. '1' → logprob: -11.099093437194824
    4. '2' → logprob: -14.849093437194824
    5. '0' → logprob: -14.849093437194824
    6. '3' → logprob: -15.599093437194824
    7. '```' → logprob: -15.724093437194824
    8. '-e' → logprob: -16.09909439086914
    9. '   ' → logprob: -16.47409439086914
    10. 'E' → logprob: -16.97409439086914

Token 514: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.796184723294573e-06
    2. '9' → logprob: -12.500005722045898
    3. '```' → logprob: -14.125005722045898
    4. '   ' → logprob: -14.250005722045898
    5. ' -' → logprob: -15.125005722045898
    6. '       ' → logprob: -16.3750057220459
    7. '``' → logprob: -16.5000057220459
    8. '12' → logprob: -16.7500057220459
    9. '  ' → logprob: -16.7500057220459
    10. '−' → logprob: -17.1875057220459

Token 515: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0003676324849948287
    2. '12' → logprob: -8.625367164611816
    3. '8' → logprob: -9.000367164611816
    4. '10' → logprob: -10.125367164611816
    5. '-' → logprob: -11.000367164611816
    6. '7' → logprob: -12.625367164611816
    7. '09' → logprob: -13.000367164611816
    8. '6' → logprob: -14.000367164611816
    9. '14' → logprob: -14.500367164611816
    10. '13' → logprob: -15.625367164611816

Token 516: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.006205596029758453
    2. 'for' → logprob: -5.1312055587768555
    3. ')' → logprob: -8.381205558776855
    4. ' ' → logprob: -10.256205558776855
    5. ' )' → logprob: -11.756205558776855
    6. '	for' → logprob: -13.131205558776855
    7. '   ' → logprob: -14.006205558776855
    8. '    ' → logprob: -14.131205558776855
    9. '```' → logprob: -15.006205558776855
    10. '  ' → logprob: -15.256205558776855

Token 517: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31326204538345337
    2. ' x' → logprob: -1.3132619857788086
    3. '	x' → logprob: -15.813261985778809
    4. ' cross' → logprob: -16.313262939453125
    5. 'cross' → logprob: -16.813262939453125
    6. '(x' → logprob: -17.313262939453125
    7. ' ' → logprob: -18.563262939453125
    8. ')x' → logprob: -19.438262939453125
    9. '  ' → logprob: -19.563262939453125
    10. '"x' → logprob: -19.688262939453125

Token 518: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009756443090736866
    2. 'in' → logprob: -4.634756565093994
    3. ' ' → logprob: -15.759756088256836
    4. 'x' → logprob: -16.134756088256836
    5. ' cross' → logprob: -16.134756088256836
    6. 'cross' → logprob: -16.384756088256836
    7. '	in' → logprob: -16.759756088256836
    8. '  ' → logprob: -18.509756088256836
    9. '
' → logprob: -18.759756088256836
    10. 'inx' → logprob: -19.009756088256836

Token 519: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.25192928314208984
    2. ' cross' → logprob: -1.5019292831420898
    3. '
' → logprob: -16.626930236816406
    4. '.cross' → logprob: -17.876930236816406
    5. ')' → logprob: -18.126930236816406
    6. '_cross' → logprob: -18.626930236816406
    7. '   ' → logprob: -19.126930236816406
    8. 'c' → logprob: -19.251930236816406
    9. ' ' → logprob: -19.501930236816406
    10. 'Cross' → logprob: -20.126930236816406

Token 520: '_prod' (ID: 78031)
  Prédit: '_prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prod' → logprob: -2.7729658540920354e-05
    2. 'prod' → logprob: -10.500027656555176
    3. 'Prod' → logprob: -17.000028610229492
    4. '_proc' → logprob: -17.250028610229492
    5. '(prod' → logprob: -17.250028610229492
    6. 'cross' → logprob: -18.250028610229492
    7. '-prod' → logprob: -18.375028610229492
    8. '_pro' → logprob: -18.375028610229492
    9. '_cross' → logprob: -18.750028610229492
    10. '(c' → logprob: -18.875028610229492

Token 521: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25282761454582214
    2. '):
' → logprob: -1.5028276443481445
    3. ' ):' → logprob: -7.2528276443481445
    4. ' ):
' → logprob: -9.127827644348145
    5. '):
' → logprob: -10.002827644348145
    6. '   ' → logprob: -10.502827644348145
    7. ')' → logprob: -12.377827644348145
    8. '):

' → logprob: -13.127827644348145
    9. '  ' → logprob: -13.752827644348145
    10. ' ' → logprob: -14.627827644348145

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034702493576332927
    2. '   ' → logprob: -8.375347137451172
    3. ' return' → logprob: -9.125347137451172
    4. '    ' → logprob: -13.500347137451172
    5. 'return' → logprob: -13.750347137451172
    6. ' False' → logprob: -13.750347137451172
    7. '     ' → logprob: -14.375347137451172
    8. '           ' → logprob: -14.500347137451172
    9. '	return' → logprob: -14.500347137451172
    10. '
' → logprob: -14.875347137451172

Token 523: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21903666853904724
    2. 'return' (adapté à ' return') → logprob: -2.21903657913208
    3. '       ' → logprob: -2.46903657913208
    4. '   ' → logprob: -5.71903657913208
    5. '	return' → logprob: -10.219037055969238
    6. ' ' → logprob: -12.344037055969238
    7. '    ' → logprob: -12.844037055969238
    8. '  ' → logprob: -14.719037055969238
    9. '           ' → logprob: -15.469037055969238
    10. '     ' → logprob: -15.719037055969238

Token 524: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.941850526549388e-06
    2. ' False' → logprob: -11.750007629394531
    3. '(False' → logprob: -22.25000762939453
    4. 'True' → logprob: -22.37500762939453
    5. 'false' → logprob: -23.37500762939453
    6. '0' → logprob: -24.75000762939453
    7. '=False' → logprob: -25.00000762939453
    8. 'F' → logprob: -25.25000762939453
    9. '_false' → logprob: -25.87500762939453
    10. '   ' → logprob: -26.25000762939453

Token 525: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02299865148961544
    2. '
' → logprob: -4.147998809814453
    3. '    
' → logprob: -5.022998809814453
    4. '  
' → logprob: -9.022998809814453
    5. '<|end|>' → logprob: -9.147998809814453
    6. ' 
' → logprob: -10.272998809814453
    7. '

' → logprob: -10.522998809814453
    8. '   
' → logprob: -10.647998809814453
    9. '        
' → logprob: -11.647998809814453
    10. '    
    
' → logprob: -12.397998809814453

Token 526: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014837936032563448
    2. '    
' → logprob: -6.876483917236328
    3. '
' → logprob: -7.751483917236328
    4. '  
' → logprob: -12.126483917236328
    5. '   
' → logprob: -12.376483917236328
    6. ' if' → logprob: -12.626483917236328
    7. ' 
' → logprob: -12.876483917236328
    8. '

' → logprob: -14.126483917236328
    9. '        
' → logprob: -14.251483917236328
    10. ' ' → logprob: -14.501483917236328

Token 527: ' #' (ID: 1069)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.477417528629303
    2. ' dot' → logprob: -0.977417528629303
    3. 'dp' → logprob: -5.977417469024658
    4. '   ' → logprob: -7.227417469024658
    5. ' dp' → logprob: -10.102417945861816
    6. 'ap' → logprob: -10.977417945861816
    7. 'ab' → logprob: -12.727417945861816
    8. ' ' → logprob: -12.852417945861816
    9. 'if' → logprob: -12.977417945861816
    10. '#' (adapté à ' #') → logprob: -13.102417945861816

Token 528: ' Check' (ID: 6208)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.5764355659484863
    2. ' dot' → logprob: -0.8264355659484863
    3. 'dp' → logprob: -7.701435565948486
    4. '#' → logprob: -11.201435089111328
    5. ' dp' → logprob: -11.576435089111328
    6. 'ap' → logprob: -11.951435089111328
    7. ' if' → logprob: -12.326435089111328
    8. 'if' → logprob: -12.576435089111328
    9. '   ' → logprob: -12.951435089111328
    10. ' #' → logprob: -13.076435089111328

Token 529: ' if' (ID: 538)
  Prédit: ' dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dot' → logprob: -0.03519332408905029
    2. ' if' → logprob: -4.03519344329834
    3. 'dot' → logprob: -4.16019344329834
    4. '   ' → logprob: -7.53519344329834
    5. 'if' → logprob: -8.03519344329834
    6. '(dot' → logprob: -8.53519344329834
    7. ' ' → logprob: -9.03519344329834
    8. '_dot' → logprob: -10.53519344329834
    9. ' dp' → logprob: -10.66019344329834
    10. ' ap' → logprob: -10.78519344329834

Token 530: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.005284626968204975
    2. ' dot' → logprob: -5.255284786224365
    3. '(dot' → logprob: -10.630284309387207
    4. 'min' → logprob: -11.130284309387207
    5. '0' → logprob: -11.505284309387207
    6. '   ' → logprob: -13.755284309387207
    7. ' ' → logprob: -14.130284309387207
    8. ' min' → logprob: -16.505285263061523
    9. '  ' → logprob: -16.880285263061523
    10. '.dot' → logprob: -17.505285263061523

Token 531: ' products' (ID: 3891)
  Prédit: '(ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ap' → logprob: -0.07594361156225204
    2. 'ap' → logprob: -3.0759437084198
    3. 'product' → logprob: -3.7009437084198
    4. 'prod' → logprob: -7.075943470001221
    5. 'dot' → logprob: -7.700943470001221
    6. '_product' → logprob: -7.825943470001221
    7. '_ap' → logprob: -8.700943946838379
    8. '(dot' → logprob: -9.075943946838379
    9. 'Product' → logprob: -9.325943946838379
    10. '(bp' → logprob: -9.700943946838379

Token 532: ' are' (ID: 553)
  Prédit: '(ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ap' → logprob: -0.03244220092892647
    2. 'ap' → logprob: -3.782442092895508
    3. '_ap' → logprob: -5.782442092895508
    4. '   ' → logprob: -6.532442092895508
    5. '1' → logprob: -6.657442092895508
    6. 'return' → logprob: -7.282442092895508
    7. '(bp' → logprob: -7.407442092895508
    8. '(ab' → logprob: -7.782442092895508
    9. ' ap' → logprob: -8.282442092895508
    10. '_ab' → logprob: -8.407442092895508

Token 533: ' in' (ID: 306)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029370300471782684
    2. 'ap' → logprob: -4.154370307922363
    3. ' ' → logprob: -5.279370307922363
    4. '>=' → logprob: -5.904370307922363
    5. 'all' → logprob: -6.529370307922363
    6. '(ap' → logprob: -6.779370307922363
    7. 'between' → logprob: -7.029370307922363
    8. '-' → logprob: -7.529370307922363
    9. '   ' → logprob: -7.779370307922363
    10. '(' → logprob: -8.654370307922363

Token 534: ' range' (ID: 3352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4337644577026367
    2. 'range' → logprob: -1.4337644577026367
    3. ' range' → logprob: -2.1837644577026367
    4. '   ' → logprob: -7.683764457702637
    5. ' [' → logprob: -8.308764457702637
    6. ' ' → logprob: -9.058764457702637
    7. '0' → logprob: -10.308764457702637
    8. '[
' → logprob: -10.808764457702637
    9. 'between' → logprob: -11.558764457702637
    10. '  ' → logprob: -11.933764457702637

Token 535: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02023048885166645
    2. '(ap' → logprob: -4.270230293273926
    3. '(' → logprob: -6.645230293273926
    4. '(p' → logprob: -6.645230293273926
    5. 'return' → logprob: -6.895230293273926
    6. '       ' → logprob: -8.270230293273926
    7. ' (' → logprob: -8.270230293273926
    8. ' ' → logprob: -8.520230293273926
    9. 'ap' → logprob: -8.520230293273926
    10. 'if' → logprob: -8.645230293273926

Token 536: '   ' (ID: 271)
  Prédit: '(dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dot' → logprob: -0.7578577399253845
    2. '   ' → logprob: -1.0078577995300293
    3. '(ap' → logprob: -2.3828577995300293
    4. 'dot' → logprob: -3.8828577995300293
    5. ' dot' → logprob: -3.8828577995300293
    6. '0' → logprob: -4.507857799530029
    7. ' (' → logprob: -5.007857799530029
    8. ' return' → logprob: -5.382857799530029
    9. 'return' → logprob: -5.882857799530029
    10. '(' → logprob: -6.132857799530029

Token 537: ' if' (ID: 538)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.13411571085453033
    2. ' dot' → logprob: -2.384115695953369
    3. 'dp' → logprob: -3.759115695953369
    4. '   ' → logprob: -5.634115695953369
    5. 'if' (adapté à ' if') → logprob: -5.759115695953369
    6. 'return' → logprob: -6.509115695953369
    7. 'ap' → logprob: -7.259115695953369
    8. '0' → logprob: -7.509115695953369
    9. ' if' → logprob: -8.509116172790527
    10. ' return' → logprob: -8.759116172790527

Token 538: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.03824666142463684
    2. ' dot' → logprob: -3.2882466316223145
    3. '(dot' → logprob: -8.538247108459473
    4. '   ' → logprob: -12.538247108459473
    5. '0' → logprob: -12.788247108459473
    6. ' ' → logprob: -13.413247108459473
    7. 'not' → logprob: -13.913247108459473
    8. '  ' → logprob: -15.038247108459473
    9. ' not' → logprob: -15.288247108459473
    10. '    ' → logprob: -16.913246154785156

Token 539: '(ap' (ID: 68318)
  Prédit: '(ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ap' → logprob: -4.894790981779806e-05
    2. '(ab' → logprob: -10.250048637390137
    3. 'ap' → logprob: -11.250048637390137
    4. '(bp' → logprob: -15.250048637390137
    5. ' (' → logprob: -15.750048637390137
    6. '	ap' → logprob: -16.750049591064453
    7. '(AP' → logprob: -17.750049591064453
    8. '   ' → logprob: -18.125049591064453
    9. '}(' → logprob: -18.500049591064453
    10. '(a' → logprob: -18.500049591064453

Token 540: ',' (ID: 11)
  Prédit: '(ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ap' → logprob: -0.02662978135049343
    2. '(ab' → logprob: -4.02662992477417
    3. ',' → logprob: -4.90162992477417
    4. 'ap' → logprob: -7.27662992477417
    5. ' (' → logprob: -9.026629447937012
    6. 'ab' → logprob: -10.276629447937012
    7. '(a' → logprob: -10.276629447937012
    8. ')' → logprob: -10.401629447937012
    9. '(p' → logprob: -10.526629447937012
    10. ' ,' → logprob: -10.776629447937012

Token 541: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.0002238013403257355
    2. ' ab' → logprob: -8.625224113464355
    3. 'ap' → logprob: -10.250224113464355
    4. '[' → logprob: -12.000224113464355
    5. 'bp' → logprob: -13.625224113464355
    6. ' ' → logprob: -14.375224113464355
    7. '(ab' → logprob: -14.625224113464355
    8. '   ' → logprob: -16.12522315979004
    9. ')' → logprob: -16.25022315979004
    10. '_ab' → logprob: -16.62522315979004

Token 542: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004446124075911939
    2. ')<' → logprob: -7.750444412231445
    3. '<' → logprob: -11.500444412231445
    4. ' )' → logprob: -12.875444412231445
    5. ' <' → logprob: -15.125444412231445
    6. ' ' → logprob: -15.125444412231445
    7. '[' → logprob: -15.875444412231445
    8. '   ' → logprob: -15.875444412231445
    9. '<p' → logprob: -16.625444412231445
    10. ']' → logprob: -16.875444412231445

Token 543: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.313283234834671
    2. ' <' → logprob: -1.3132832050323486
    3. '()<' → logprob: -11.06328296661377
    4. '   ' → logprob: -13.43828296661377
    5. '()' → logprob: -13.68828296661377
    6. '<p' → logprob: -14.06328296661377
    7. ' ' → logprob: -14.18828296661377
    8. '[' → logprob: -14.18828296661377
    9. ')<' → logprob: -14.93828296661377
    10. ')' → logprob: -15.81328296661377

Token 544: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861669983714819
    2. '-' → logprob: -4.758616924285889
    3. ' ' → logprob: -13.13361644744873
    4. ' -' → logprob: -15.50861644744873
    5. '   ' → logprob: -18.383617401123047
    6. '-c' → logprob: -19.008617401123047
    7. '-\' → logprob: -19.383617401123047
    8. '=' → logprob: -19.508617401123047
    9. '-_' → logprob: -19.633617401123047
    10. '-n' → logprob: -19.758617401123047

Token 545: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.750001907348633
    4. '0' → logprob: -20.875001907348633
    5. '-' → logprob: -21.250001907348633
    6. '(' → logprob: -22.000001907348633
    7. '

' → logprob: -22.250001907348633
    8. '
' → logprob: -22.250001907348633
    9. '  ' → logprob: -22.500001907348633
    10. '9' → logprob: -22.875001907348633

Token 546: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.28173694014549255
    2. '1' → logprob: -1.406736969947815
    3. '-' → logprob: -7.656736850738525
    4. '   ' → logprob: -9.906737327575684
    5. '```' → logprob: -10.656737327575684
    6. ' ' → logprob: -11.406737327575684
    7. '9' → logprob: -11.906737327575684
    8. '

' → logprob: -12.281737327575684
    9. '       ' → logprob: -12.406737327575684
    10. '
' → logprob: -12.531737327575684

Token 547: '-' (ID: 12)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0009421924478374422
    2. '12' → logprob: -7.000942230224609
    3. '10' → logprob: -11.12594223022461
    4. '15' → logprob: -12.12594223022461
    5. '14' → logprob: -12.37594223022461
    6. '-' → logprob: -12.50094223022461
    7. '13' → logprob: -14.00094223022461
    8. '09' → logprob: -14.37594223022461
    9. '11' → logprob: -15.25094223022461
    10. '   ' → logprob: -15.37594223022461

Token 548: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.000492268183734268
    2. '12' → logprob: -7.625492095947266
    3. '14' → logprob: -13.500492095947266
    4. '10' → logprob: -13.500492095947266
    5. '15' → logprob: -13.625492095947266
    6. '13' → logprob: -15.750492095947266
    7. '09' → logprob: -17.125492095947266
    8. '11' → logprob: -17.750492095947266
    9. '９' → logprob: -18.187992095947266
    10. '```' → logprob: -18.375492095947266

Token 549: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0007013569120317698
    2. 'or' → logprob: -8.000700950622559
    3. '   ' → logprob: -8.500700950622559
    4. ' ' → logprob: -9.500700950622559
    5. '    ' → logprob: -10.125700950622559
    6. '       ' → logprob: -11.000700950622559
    7. '	or' → logprob: -11.125700950622559
    8. ':' → logprob: -12.000700950622559
    9. '  ' → logprob: -12.375700950622559
    10. '        ' → logprob: -13.500700950622559

Token 550: '       ' (ID: 309)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5172795057296753
    2. '       ' → logprob: -1.6422795057296753
    3. '   ' → logprob: -2.017279624938965
    4. ' or' → logprob: -3.142279624938965
    5. 'True' → logprob: -3.892279624938965
    6. '    ' → logprob: -5.017279624938965
    7. ' False' → logprob: -5.392279624938965
    8. 'False' → logprob: -7.017279624938965
    9. ' ' → logprob: -7.392279624938965
    10. ' return' → logprob: -7.517279624938965

Token 551: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07586405426263809
    2. 'False' → logprob: -3.32586407661438
    3. ' False' → logprob: -4.075863838195801
    4. ' return' → logprob: -4.325863838195801
    5. 'return' (adapté à ' return') → logprob: -5.075863838195801
    6. '   ' → logprob: -7.575863838195801
    7. ' True' → logprob: -9.4508638381958
    8. 'True' → logprob: -10.0758638381958
    9. '    ' → logprob: -11.4508638381958
    10. ' ' → logprob: -12.2008638381958

Token 552: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.15310683415737e-05
    2. ' False' → logprob: -10.750021934509277
    3. 'True' → logprob: -20.12502098083496
    4. '(False' → logprob: -21.50002098083496
    5. 'false' → logprob: -24.25002098083496
    6. '=False' → logprob: -24.25002098083496
    7. '_false' → logprob: -25.50002098083496
    8. 'F' → logprob: -25.62502098083496
    9. '.False' → logprob: -26.00002098083496
    10. 'Fal' → logprob: -27.12502098083496

Token 553: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016337241686414927
    2. '
' → logprob: -8.750163078308105
    3. '    
' → logprob: -12.375163078308105
    4. '  ' → logprob: -16.000164031982422
    5. ' and' → logprob: -16.500164031982422
    6. '<|end|>' → logprob: -16.500164031982422
    7. ' if' → logprob: -17.000164031982422
    8. '       ' → logprob: -17.000164031982422
    9. '   
' → logprob: -17.125164031982422
    10. '```' → logprob: -17.250164031982422

Token 554: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.074907287256792e-05
    2. '
' → logprob: -9.75006103515625
    3. '    
' → logprob: -13.12506103515625
    4. ' if' → logprob: -15.62506103515625
    5. '  ' → logprob: -17.25006103515625
    6. 'if' → logprob: -17.25006103515625
    7. '```' → logprob: -17.50006103515625
    8. '       ' → logprob: -17.75006103515625
    9. '  
' → logprob: -18.62506103515625
    10. '    ' → logprob: -18.62506103515625

Token 555: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19300995767116547
    2. '   ' → logprob: -2.318009853363037
    3. ' if' → logprob: -2.568009853363037
    4. '
' → logprob: -7.943009853363037
    5. ' ' → logprob: -12.068010330200195
    6. 'return' → logprob: -13.193010330200195
    7. '	if' → logprob: -13.568010330200195
    8. '  ' → logprob: -13.568010330200195
    9. 'dot' → logprob: -13.943010330200195
    10. '```' → logprob: -13.943010330200195

Token 556: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.2519415020942688
    2. ' dot' → logprob: -1.501941442489624
    3. '(dot' → logprob: -11.376941680908203
    4. '   ' → logprob: -14.126941680908203
    5. ' ' → logprob: -15.876941680908203
    6. '.dot' → logprob: -17.001941680908203
    7. '  ' → logprob: -17.626941680908203
    8. 'not' → logprob: -17.751941680908203
    9. '_dot' → logprob: -18.126941680908203
    10. '-dot' → logprob: -18.876941680908203

Token 557: '(bp' (ID: 161694)
  Prédit: '(bp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bp' → logprob: -0.0022791961673647165
    2. '(ap' → logprob: -6.877279281616211
    3. '(vector' → logprob: -7.627279281616211
    4. 'bp' → logprob: -7.627279281616211
    5. '(ab' → logprob: -9.127279281616211
    6. 'vector' → logprob: -9.377279281616211
    7. 'ap' → logprob: -9.877279281616211
    8. '(b' → logprob: -11.377279281616211
    9. 'ab' → logprob: -12.377279281616211
    10. ' bp' → logprob: -12.877279281616211

Token 558: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014704519708175212
    2. ',b' → logprob: -9.250146865844727
    3. 'ab' → logprob: -11.125146865844727
    4. '(ap' → logprob: -11.750146865844727
    5. '(bp' → logprob: -12.125146865844727
    6. ' ,' → logprob: -12.250146865844727
    7. '(ab' → logprob: -12.375146865844727
    8. 'b' → logprob: -12.500146865844727
    9. 'ap' → logprob: -12.750146865844727
    10. '(b' → logprob: -13.750146865844727

Token 559: ' vector' (ID: 9727)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.0006850333884358406
    2. ' ab' → logprob: -7.500685214996338
    3. 'ap' → logprob: -9.37568473815918
    4. 'bp' → logprob: -10.00068473815918
    5. 'b' → logprob: -13.37568473815918
    6. ' bp' → logprob: -15.37568473815918
    7. 'ba' → logprob: -16.50068473815918
    8. ' ap' → logprob: -17.37568473815918
    9. 'a' → logprob: -17.62568473815918
    10. 'AB' → logprob: -18.50068473815918

Token 560: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -9.710618905955926e-05
    2. 'sub' → logprob: -9.250097274780273
    3. '[' → logprob: -14.250097274780273
    4. 'Sub' → logprob: -16.500097274780273
    5. '_' → logprob: -16.625097274780273
    6. '-' → logprob: -17.125097274780273
    7. '-sub' → logprob: -18.000097274780273
    8. 'a' → logprob: -18.125097274780273
    9. '_SUB' → logprob: -18.125097274780273
    10. '_add' → logprob: -18.375097274780273

Token 561: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2585850656032562
    2. '(a' → logprob: -1.5085850954055786
    3. '(b' → logprob: -5.508584976196289
    4. 'b' → logprob: -6.258584976196289
    5. '(p' → logprob: -7.883584976196289
    6. 'p' → logprob: -8.383584976196289
    7. ' a' → logprob: -10.383584976196289
    8. '_a' → logprob: -12.133584976196289
    9. '(' → logprob: -12.258584976196289
    10. '	a' → logprob: -12.633584976196289

Token 562: ',b' (ID: 17568)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01430358737707138
    2. 'b' → logprob: -4.264303684234619
    3. ',' → logprob: -9.139303207397461
    4. ' p' → logprob: -10.639303207397461
    5. ',p' → logprob: -12.264303207397461
    6. ',b' → logprob: -12.889303207397461
    7. ' b' → logprob: -14.139303207397461
    8. ')' → logprob: -15.014303207397461
    9. 'a' → logprob: -15.264303207397461
    10. '(p' → logprob: -16.38930320739746

Token 563: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010454319417476654
    2. 'a' → logprob: -7.126045227050781
    3. ')' → logprob: -8.501045227050781
    4. ' ))' → logprob: -10.751045227050781
    5. '))
' → logprob: -12.501045227050781
    6. 'b' → logprob: -12.876045227050781
    7. ')))' → logprob: -13.126045227050781
    8. '),' → logprob: -13.251045227050781
    9. ' a' → logprob: -13.501045227050781
    10. '0' → logprob: -13.501045227050781

Token 564: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6369978189468384
    2. ' >' → logprob: -1.1369978189468384
    3. ' <' → logprob: -2.261997699737549
    4. '<' → logprob: -3.136997699737549
    5. ')' → logprob: -6.386997699737549
    6. '[' → logprob: -7.761997699737549
    7. '   ' → logprob: -8.636998176574707
    8. ')>' → logprob: -8.636998176574707
    9. ' ' → logprob: -8.886998176574707
    10. '1' → logprob: -10.636998176574707

Token 565: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011052886955440044
    2. ' -' → logprob: -4.511053085327148
    3. '-e' → logprob: -13.136053085327148
    4. '-error' → logprob: -14.761053085327148
    5. '1' → logprob: -15.011053085327148
    6. '-n' → logprob: -15.386053085327148
    7. '0' → logprob: -15.386053085327148
    8. '-u' → logprob: -15.761053085327148
    9. ' ' → logprob: -15.886053085327148
    10. '-t' → logprob: -16.01105308532715

Token 566: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.380904672667384e-05
    2. ' ' → logprob: -10.750033378601074
    3. '-' → logprob: -11.625033378601074
    4. '9' → logprob: -12.875033378601074
    5. '   ' → logprob: -14.875033378601074
    6. ' -' → logprob: -15.625033378601074
    7. '
' → logprob: -16.50003433227539
    8. '  ' → logprob: -17.18753433227539
    9. '0' → logprob: -17.25003433227539
    10. '           ' → logprob: -17.31253433227539

Token 567: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.24178966879844666
    2. '9' → logprob: -1.741789698600769
    3. '-' → logprob: -3.2417895793914795
    4. '1' → logprob: -8.366789817810059
    5. '.' → logprob: -9.366789817810059
    6. '-e' → logprob: -9.866789817810059
    7. ' ' → logprob: -10.241789817810059
    8. '   ' → logprob: -10.866789817810059
    9. '```' → logprob: -11.116789817810059
    10. '.e' → logprob: -11.366789817810059

Token 568: '-' (ID: 12)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.02630726806819439
    2. '-' → logprob: -3.6513073444366455
    3. '09' → logprob: -13.151307106018066
    4. '```' → logprob: -13.651307106018066
    5. '[' → logprob: -14.276307106018066
    6. 'e' → logprob: -14.401307106018066
    7. ' ' → logprob: -14.838807106018066
    8. '   ' → logprob: -15.151307106018066
    9. '10' → logprob: -15.338807106018066
    10. '+' → logprob: -15.526307106018066

Token 569: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '09' → logprob: -19.0
    4. '```' → logprob: -19.4375
    5. '0' → logprob: -19.5625
    6. 's' → logprob: -20.125
    7. 'e' → logprob: -20.1875
    8. '-' → logprob: -20.1875
    9. '1' → logprob: -20.25
    10. 'nine' → logprob: -20.3125

Token 570: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10435800999403
    2. '   ' → logprob: -3.104357957839966
    3. '       ' → logprob: -3.604357957839966
    4. ':
' → logprob: -4.229358196258545
    5. '0' → logprob: -5.729358196258545
    6. ' :' → logprob: -5.979358196258545
    7. '):' → logprob: -6.604358196258545
    8. '(' → logprob: -6.979358196258545
    9. ' :
' → logprob: -7.229358196258545
    10. '    ' → logprob: -7.354358196258545

Token 571: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049392834305763245
    2. '   ' → logprob: -3.0493929386138916
    3. '0' → logprob: -7.2993927001953125
    4. '1' → logprob: -10.174392700195312
    5. 'return' → logprob: -10.174392700195312
    6. ' return' → logprob: -11.049392700195312
    7. 'False' → logprob: -11.299392700195312
    8. ':' → logprob: -12.299392700195312
    9. 'True' → logprob: -12.799392700195312
    10. '```' → logprob: -12.924392700195312

Token 572: ' return' (ID: 622)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07258787751197815
    2. ' False' → logprob: -3.0725879669189453
    3. '0' → logprob: -3.8225879669189453
    4. 'True' → logprob: -6.822587966918945
    5. '   ' → logprob: -8.322587966918945
    6. 'return' (adapté à ' return') → logprob: -8.572587966918945
    7. ' True' → logprob: -8.822587966918945
    8. ' ' → logprob: -9.572587966918945
    9. '       ' → logprob: -9.947587966918945
    10. ' return' → logprob: -10.197587966918945

Token 573: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0007107630372047424
    2. ' False' → logprob: -7.250710964202881
    3. 'True' → logprob: -14.000710487365723
    4. ' True' → logprob: -19.75071144104004
    5. '(False' → logprob: -21.50071144104004
    6. 'F' → logprob: -21.62571144104004
    7. '   ' → logprob: -22.75071144104004
    8. ' ' → logprob: -23.37571144104004
    9. '_false' → logprob: -24.25071144104004
    10. '0' → logprob: -24.37571144104004

Token 574: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011241630651056767
    2. '
' → logprob: -4.511241436004639
    3. '    
' → logprob: -8.761241912841797
    4. 'return' → logprob: -10.886241912841797
    5. '  
' → logprob: -12.386241912841797
    6. ' return' → logprob: -12.511241912841797
    7. '	return' → logprob: -12.761241912841797
    8. '<|end|>' → logprob: -13.011241912841797
    9. '

' → logprob: -13.761241912841797
    10. '
' → logprob: -14.261241912841797

Token 575: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001141049899160862
    2. '
' → logprob: -7.00114107131958
    3. '    
' → logprob: -8.626140594482422
    4. 'return' → logprob: -10.251140594482422
    5. '	return' → logprob: -12.001140594482422
    6. '  
' → logprob: -12.626140594482422
    7. ' return' → logprob: -13.251140594482422
    8. '<|end|>' → logprob: -14.126140594482422
    9. '        
' → logprob: -14.626140594482422
    10. '```' → logprob: -14.751140594482422

Token 576: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008876374922692776
    2. 'return' (adapté à ' return') → logprob: -7.125887870788574
    3. ' return' → logprob: -10.250887870788574
    4. '
' → logprob: -10.250887870788574
    5. '    
' → logprob: -11.500887870788574
    6. '```' → logprob: -13.750887870788574
    7. '	return' → logprob: -14.000887870788574
    8. '  
' → logprob: -16.125886917114258
    9. '       ' → logprob: -16.125886917114258
    10. ' 
' → logprob: -17.000886917114258

Token 577: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.126929372549057
    2. ' True' → logprob: -2.12692928314209
    3. '(True' → logprob: -13.62692928314209
    4. 'False' → logprob: -18.751930236816406
    5. ' ' → logprob: -19.001930236816406
    6. '   ' → logprob: -19.501930236816406
    7. 'true' → logprob: -20.251930236816406
    8. ' ' → logprob: -20.751930236816406
    9. ' Tru' → logprob: -20.751930236816406
    10. '=True' → logprob: -20.751930236816406

Token 578: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 579: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03959861025214195
    2. '<|end|>' → logprob: -3.4145987033843994
    3. ')' → logprob: -5.28959846496582
    4. ' def' → logprob: -8.16459846496582
    5. '
' → logprob: -8.41459846496582
    6. '```' → logprob: -9.16459846496582
    7. '<|end|>' → logprob: -9.78959846496582
    8. ' ' → logprob: -10.03959846496582
    9. '   ' → logprob: -10.28959846496582
    10. '#' → logprob: -10.66459846496582

Token 580: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.9491852521896362
    2. 'line' → logprob: -1.3241852521896362
    3. 'segments' → logprob: -1.8241852521896362
    4. 'triangle' → logprob: -2.449185371398926
    5. 'lines' → logprob: -3.824185371398926
    6. 'point' → logprob: -3.949185371398926
    7. 'vector' → logprob: -3.949185371398926
    8. 'is' → logprob: -4.074185371398926
    9. 'are' → logprob: -5.324185371398926
    10. 'tri' → logprob: -5.949185371398926

Token 581: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.007225716486573219
    2. '_length' → logprob: -5.632225513458252
    3. '_contains' → logprob: -6.507225513458252
    4. '_distance' → logprob: -7.007225513458252
    5. '_point' → logprob: -7.507225513458252
    6. '_on' → logprob: -8.75722599029541
    7. '_overlap' → logprob: -9.00722599029541
    8. '_touch' → logprob: -9.75722599029541
    9. '_segment' → logprob: -10.13222599029541
    10. '_to' → logprob: -10.25722599029541

Token 582: 'sects' (ID: 105681)
  Prédit: 'sects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sects' → logprob: -0.681334376335144
    2. 'section' → logprob: -1.181334376335144
    3. 'sect' → logprob: -1.681334376335144
    4. 's' → logprob: -6.931334495544434
    5. 'sec' → logprob: -10.681334495544434
    6. 'se' → logprob: -10.806334495544434
    7. 'sections' → logprob: -11.056334495544434
    8. 'ects' → logprob: -11.681334495544434
    9. '
' → logprob: -12.806334495544434
    10. 'set' → logprob: -12.806334495544434

Token 583: '_triangle' (ID: 187218)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.074156753718853
    2. '(a' → logprob: -3.0741567611694336
    3. 'segment' → logprob: -3.8241567611694336
    4. '_triangle' → logprob: -6.574156761169434
    5. '(p' → logprob: -7.074156761169434
    6. 'def' → logprob: -7.699156761169434
    7. '_line' → logprob: -7.949156761169434
    8. '(segment' → logprob: -9.074156761169434
    9. '(A' → logprob: -9.949156761169434
    10. '```' → logprob: -10.324156761169434

Token 584: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.024573199450969696
    2. '(s' → logprob: -4.39957332611084
    3. '(segment' → logprob: -5.52457332611084
    4. '(a' → logprob: -5.64957332611084
    5. '(seg' → logprob: -6.39957332611084
    6. '(' → logprob: -6.39957332611084
    7. '_' → logprob: -7.14957332611084
    8. ' (' → logprob: -9.39957332611084
    9. '_segment' → logprob: -9.52457332611084
    10. '((' → logprob: -9.89957332611084

Token 585: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6653198003768921
    2. ',' → logprob: -0.9153198003768921
    3. 'oint' → logprob: -2.6653199195861816
    4. ',a' → logprob: -4.915319919586182
    5. 'oints' → logprob: -5.415319919586182
    6. 'a' → logprob: -6.165319919586182
    7. 'r' → logprob: -7.915319919586182
    8. 'A' → logprob: -7.915319919586182
    9. '(a' → logprob: -8.290319442749023
    10. '0' → logprob: -8.665319442749023

Token 586: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001307142956648022
    2. ',p' → logprob: -9.125130653381348
    3. ' ,' → logprob: -10.875130653381348
    4. '_,' → logprob: -13.750130653381348
    5. ',
' → logprob: -14.125130653381348
    6. 'p' → logprob: -14.500130653381348
    7. 'a' → logprob: -16.250131607055664
    8. ',a' → logprob: -16.500131607055664
    9. '(p' → logprob: -16.625131607055664
    10. ',s' → logprob: -16.875131607055664

Token 587: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001170225441455841
    2. ' p' → logprob: -6.7511701583862305
    3. '   ' → logprob: -18.126171112060547
    4. 'a' → logprob: -18.126171112060547
    5. 'def' → logprob: -18.126171112060547
    6. 'q' → logprob: -19.501171112060547
    7. ' ' → logprob: -19.501171112060547
    8. '	p' → logprob: -19.751171112060547
    9. '<p' → logprob: -20.126171112060547
    10. ',' → logprob: -21.001171112060547

Token 588: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09915368258953094
    2. 'oint' → logprob: -2.599153757095337
    3. ',p' → logprob: -4.724153518676758
    4. 'oints' → logprob: -5.974153518676758
    5. '1' → logprob: -6.099153518676758
    6. ',a' → logprob: -6.349153518676758
    7. '_,' → logprob: -6.474153518676758
    8. 'p' → logprob: -7.474153518676758
    9. ' ,' → logprob: -7.599153518676758
    10. ',q' → logprob: -7.974153518676758

Token 589: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756367712223437e-05
    2. ',p' → logprob: -11.750011444091797
    3. ' ,' → logprob: -13.125011444091797
    4. '   ' → logprob: -14.375011444091797
    5. ',
' → logprob: -14.625011444091797
    6. '):' → logprob: -14.875011444091797
    7. 'p' → logprob: -16.125011444091797
    8. '_,' → logprob: -16.250011444091797
    9. '(p' → logprob: -16.375011444091797
    10. '‌,' → logprob: -16.875011444091797

Token 590: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009130131802521646
    2. ' a' → logprob: -7.000913143157959
    3. '   ' → logprob: -14.1259126663208
    4. 'p' → logprob: -14.8759126663208
    5. '	a' → logprob: -15.6259126663208
    6. '```' → logprob: -16.375913619995117
    7. 'triangle' → logprob: -16.375913619995117
    8. 'def' → logprob: -16.875913619995117
    9. ' ' → logprob: -17.750913619995117
    10. '(a' → logprob: -18.000913619995117

Token 591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006249914295040071
    2. ',b' → logprob: -7.500625133514404
    3. ' ,' → logprob: -10.500624656677246
    4. ',c' → logprob: -10.750624656677246
    5. ',a' → logprob: -11.625624656677246
    6. ',p' → logprob: -12.000624656677246
    7. ',
' → logprob: -12.625624656677246
    8. '_,' → logprob: -14.000624656677246
    9. '):' → logprob: -14.000624656677246
    10. 'c' → logprob: -14.625624656677246

Token 592: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019289902411401272
    2. ' b' → logprob: -6.251928806304932
    3. 'c' → logprob: -14.75192928314209
    4. 'p' → logprob: -19.626928329467773
    5. ',b' → logprob: -20.251928329467773
    6. ' ' → logprob: -20.376928329467773
    7. '```' → logprob: -20.376928329467773
    8. '<|end|>' → logprob: -20.376928329467773
    9. '	b' → logprob: -20.501928329467773
    10. ' c' → logprob: -20.751928329467773

Token 593: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004705914470832795
    2. ',c' → logprob: -8.250470161437988
    3. 'c' → logprob: -8.500470161437988
    4. ' ,' → logprob: -12.375470161437988
    5. ',
' → logprob: -13.750470161437988
    6. '):' → logprob: -15.750470161437988
    7. '_,' → logprob: -15.750470161437988
    8. '   ' → logprob: -16.250471115112305
    9. '):
' → logprob: -16.625471115112305
    10. ',
' → logprob: -17.000471115112305

Token 594: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00861468818038702
    2. ' c' → logprob: -4.758614540100098
    3. '	c' → logprob: -16.508615493774414
    4. '_c' → logprob: -18.383615493774414
    5. ')c' → logprob: -19.133615493774414
    6. ',c' → logprob: -20.008615493774414
    7. ' ' → logprob: -20.258615493774414
    8. '   ' → logprob: -20.258615493774414
    9. '
' → logprob: -20.633615493774414
    10. '<|end|>' → logprob: -20.758615493774414

Token 595: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003827676991932094
    2. '):
' → logprob: -7.875382900238037
    3. '):
' → logprob: -13.875382423400879
    4. '   ' → logprob: -14.125382423400879
    5. ')' → logprob: -14.500382423400879
    6. ':' → logprob: -15.125382423400879
    7. ' ):' → logprob: -16.125383377075195
    8. '):

' → logprob: -17.875383377075195
    9. '}:' → logprob: -18.625383377075195
    10. ']:' → logprob: -18.625383377075195

Token 596: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.466968650580384e-05
    2. 'def' → logprob: -11.375054359436035
    3. '```' → logprob: -11.625054359436035
    4. '#' → logprob: -11.750054359436035
    5. 'direction' → logprob: -12.000054359436035
    6. ' direction' → logprob: -12.375054359436035
    7. ' line' → logprob: -13.250054359436035
    8. '    
' → logprob: -13.375054359436035
    9. 'p' → logprob: -14.125054359436035
    10. 'dir' → logprob: -14.125054359436035

Token 597: ' d' (ID: 272)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.6739760041236877
    2. 'd' (adapté à ' d') → logprob: -1.923975944519043
    3. '#' → logprob: -2.048975944519043
    4. 'dir' → logprob: -2.173975944519043
    5. '   ' → logprob: -2.548975944519043
    6. 'direction' → logprob: -4.173975944519043
    7. 'p' → logprob: -5.798975944519043
    8. ' ab' → logprob: -7.173975944519043
    9. 'dp' → logprob: -7.298975944519043
    10. 'u' → logprob: -7.298975944519043

Token 598: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007357439957559109
    2. '=' → logprob: -5.132357597351074
    3. 'ir' → logprob: -6.632357597351074
    4. 'irection' → logprob: -10.632357597351074
    5. ' =
' → logprob: -10.882357597351074
    6. 'ef' → logprob: -11.382357597351074
    7. '1' → logprob: -12.007357597351074
    8. '=p' → logprob: -12.007357597351074
    9. ' ' → logprob: -12.257357597351074
    10. '=
' → logprob: -12.382357597351074

Token 599: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -7.493430894101039e-05
    2. ' vector' → logprob: -9.500075340270996
    3. '.vector' → logprob: -20.00007438659668
    4. '	vector' → logprob: -20.25007438659668
    5. 'Vector' → logprob: -20.62507438659668
    6. '   ' → logprob: -21.37507438659668
    7. '(vector' → logprob: -21.62507438659668
    8. '[' → logprob: -21.75007438659668
    9. 'vec' → logprob: -22.00007438659668
    10. '_vector' → logprob: -22.75007438659668

Token 600: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.00015860427811276168
    2. 'sub' → logprob: -8.750158309936523
    3. '_' → logprob: -17.000158309936523
    4. 'Sub' → logprob: -18.125158309936523
    5. '_add' → logprob: -18.750158309936523
    6. 'subtract' → logprob: -19.500158309936523
    7. '_SUB' → logprob: -19.750158309936523
    8. '	sub' → logprob: -20.000158309936523
    9. '[' → logprob: -20.250158309936523
    10. 'a' → logprob: -20.500158309936523

Token 601: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.5491004129871726e-05
    2. 'p' → logprob: -10.000045776367188
    3. '(' → logprob: -17.125045776367188
    4. ' p' → logprob: -17.375045776367188
    5. ' (' → logprob: -18.250045776367188
    6. '   ' → logprob: -18.375045776367188
    7. '2' → logprob: -18.625045776367188
    8. '(
' → logprob: -20.250045776367188
    9. '	p' → logprob: -20.375045776367188
    10. '[p' → logprob: -20.500045776367188

Token 602: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'p' → logprob: -17.25
    3. ' ' → logprob: -18.125
    4. '_' → logprob: -19.5
    5. '(p' → logprob: -19.5
    6. '(' → logprob: -20.5
    7. '２' → logprob: -20.75
    8. '```' → logprob: -20.875
    9. '۲' → logprob: -21.0
    10. 't' → logprob: -21.125

Token 603: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000837384897749871
    2. ',p' → logprob: -7.125837326049805
    3. ' ,' → logprob: -10.875837326049805
    4. 'p' → logprob: -11.625837326049805
    5. ' p' → logprob: -12.500837326049805
    6. '1' → logprob: -14.000837326049805
    7. '(p' → logprob: -15.125837326049805
    8. ',
' → logprob: -16.375837326049805
    9. '(' → logprob: -16.500837326049805
    10. ',a' → logprob: -17.625837326049805

Token 604: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.611323624383658e-05
    2. ' p' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.50006675720215
    4. '<p' → logprob: -19.75006675720215
    5. ' ' → logprob: -20.37506675720215
    6. '	p' → logprob: -20.62506675720215
    7. '_p' → logprob: -21.25006675720215
    8. '  ' → logprob: -21.62506675720215
    9. '1' → logprob: -22.25006675720215
    10. ')p' → logprob: -22.87506675720215

Token 605: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '۱' → logprob: -19.375
    3. '१' → logprob: -20.375
    4. ')' → logprob: -20.5
    5. '১' → logprob: -20.5
    6. '１' → logprob: -20.5625
    7. ' ' → logprob: -20.75
    8. 'oint' → logprob: -21.0625
    9. '' → logprob: -21.1875
    10. '```' → logprob: -21.1875

Token 606: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20143906772136688
    2. ')
' → logprob: -1.7014390230178833
    3. ')
' → logprob: -11.201438903808594
    4. ')

' → logprob: -12.451438903808594
    5. ' )' → logprob: -12.576438903808594
    6. ' )
' → logprob: -12.576438903808594
    7. '   ' → logprob: -14.451438903808594
    8. 'd' → logprob: -15.076438903808594
    9. ').' → logprob: -16.201438903808594
    10. 'def' → logprob: -16.701438903808594

Token 607: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2919124960899353
    2. 't' → logprob: -1.79191255569458
    3. 'den' → logprob: -2.66691255569458
    4. ' denom' → logprob: -5.04191255569458
    5. 'n' → logprob: -5.91691255569458
    6. 'def' → logprob: -6.16691255569458
    7. 'dir' → logprob: -6.54191255569458
    8. ' t' → logprob: -6.66691255569458
    9. 'd' → logprob: -7.29191255569458
    10. 'direction' → logprob: -7.54191255569458

Token 608: ' ab' (ID: 692)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.5945863723754883
    2. 'ab' (adapté à ' ab') → logprob: -1.3445863723754883
    3. 't' → logprob: -1.9695863723754883
    4. 'def' → logprob: -3.9695863723754883
    5. 'dir' → logprob: -5.219586372375488
    6. 'n' → logprob: -5.594586372375488
    7. 'da' → logprob: -5.719586372375488
    8. ' denom' → logprob: -5.719586372375488
    9. 'normal' → logprob: -5.969586372375488
    10. 'edge' → logprob: -6.469586372375488

Token 609: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48367029428482056
    2. '=' → logprob: -0.9836702942848206
    3. 'ac' → logprob: -5.358670234680176
    4. '_ac' → logprob: -6.733670234680176
    5. 'p' → logprob: -7.108670234680176
    6. '_cross' → logprob: -7.858670234680176
    7. 'cross' → logprob: -7.983670234680176
    8. 'c' → logprob: -8.108670234680176
    9. '   ' → logprob: -8.608670234680176
    10. '=[' → logprob: -8.733670234680176

Token 610: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.004103454295545816
    2. ' vector' → logprob: -5.504103660583496
    3. 'b' → logprob: -11.504103660583496
    4. 'cross' → logprob: -11.504103660583496
    5. '   ' → logprob: -13.129103660583496
    6. ' ' → logprob: -14.379103660583496
    7. 'segment' → logprob: -14.504103660583496
    8. '	vector' → logprob: -15.004103660583496
    9. '[' → logprob: -15.379103660583496
    10. '  ' → logprob: -15.504103660583496

Token 611: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.13940000534057617
    2. 'sub' → logprob: -2.389400005340576
    3. 'vector' → logprob: -3.264400005340576
    4. ' vector' → logprob: -9.514400482177734
    5. 'cross' → logprob: -9.764400482177734
    6. '(b' → logprob: -10.139400482177734
    7. 'def' → logprob: -11.389400482177734
    8. 'b' → logprob: -11.514400482177734
    9. 'Sub' → logprob: -12.389400482177734
    10. 'subtract' → logprob: -12.514400482177734

Token 612: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20214277505874634
    2. '(b' → logprob: -1.7021427154541016
    3. 'p' → logprob: -7.452142715454102
    4. '(p' → logprob: -9.452142715454102
    5. '(a' → logprob: -10.327142715454102
    6. 'a' → logprob: -10.452142715454102
    7. 'c' → logprob: -12.327142715454102
    8. '(c' → logprob: -13.327142715454102
    9. ' b' → logprob: -14.077142715454102
    10. 'd' → logprob: -14.577142715454102

Token 613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02984316647052765
    2. ',a' → logprob: -3.7798430919647217
    3. 'a' → logprob: -5.029843330383301
    4. ' a' → logprob: -10.6548433303833
    5. ' ,' → logprob: -11.6548433303833
    6. ',p' → logprob: -13.5298433303833
    7. '-a' → logprob: -14.1548433303833
    8. '-' → logprob: -15.0298433303833
    9. ' -' → logprob: -15.4048433303833
    10. ',c' → logprob: -15.4048433303833

Token 614: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.165027217415627e-05
    2. ' a' → logprob: -10.750021934509277
    3. '	a' → logprob: -16.37502098083496
    4. '   ' → logprob: -18.00002098083496
    5. ' ' → logprob: -19.50002098083496
    6. 'p' → logprob: -20.12502098083496
    7. '  ' → logprob: -21.00002098083496
    8. ''a' → logprob: -21.37502098083496
    9. '    ' → logprob: -21.75002098083496
    10. '
' → logprob: -22.00002098083496

Token 615: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25200507044792175
    2. ')' → logprob: -1.5020051002502441
    3. '   ' → logprob: -10.002004623413086
    4. ')
' → logprob: -11.002004623413086
    5. ')

' → logprob: -12.127004623413086
    6. 'def' → logprob: -12.877004623413086
    7. ' )
' → logprob: -13.127004623413086
    8. 'c' → logprob: -13.502004623413086
    9. '[' → logprob: -14.502004623413086
    10. '),' → logprob: -14.877004623413086

Token 616: '   ' (ID: 271)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.00021557629224844277
    2. ' ac' → logprob: -8.875215530395508
    3. '   ' → logprob: -9.500215530395508
    4. '	ac' → logprob: -14.250215530395508
    5. '
' → logprob: -15.250215530395508
    6. '```' → logprob: -17.625215530395508
    7. 'abc' → logprob: -17.750215530395508
    8. 'acd' → logprob: -17.875215530395508
    9. '_ac' → logprob: -18.375215530395508
    10. '    
' → logprob: -18.375215530395508

Token 617: ' ac' (ID: 1375)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' (adapté à ' ac') → logprob: -6.704273118884885e-07
    2. ' ac' → logprob: -14.375000953674316
    3. '	ac' → logprob: -18.25
    4. 'AC' → logprob: -19.5
    5. 'acd' → logprob: -21.0
    6. '   ' → logprob: -21.0
    7. '#ac' → logprob: -21.25
    8. '_ac' → logprob: -21.375
    9. '```' → logprob: -21.375
    10. 'abc' → logprob: -21.875

Token 618: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00023059594968799502
    2. ' =' → logprob: -8.37523078918457
    3. '=
' → logprob: -18.75023078918457
    4. '[' → logprob: -20.25023078918457
    5. ' ' → logprob: -20.75023078918457
    6. ')' → logprob: -20.87523078918457
    7. '=}' → logprob: -21.37523078918457
    8. '   ' → logprob: -21.50023078918457
    9. '=

' → logprob: -21.75023078918457
    10. '<|end|>' → logprob: -22.25023078918457

Token 619: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.07906857132911682
    2. ' vector' → logprob: -2.579068660736084
    3. '[c' → logprob: -9.204068183898926
    4. 'c' → logprob: -9.704068183898926
    5. ' c' → logprob: -11.829068183898926
    6. '[' → logprob: -12.079068183898926
    7. 'cross' → logprob: -13.329068183898926
    8. '   ' → logprob: -13.704068183898926
    9. '<vector' → logprob: -15.079068183898926
    10. '(c' → logprob: -15.329068183898926

Token 620: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.3879339396953583
    2. 'sub' → logprob: -1.1379339694976807
    3. '(c' → logprob: -7.262933731079102
    4. '[c' → logprob: -8.387933731079102
    5. 'c' → logprob: -9.387933731079102
    6. 'Sub' → logprob: -10.137933731079102
    7. 'vector' → logprob: -13.012933731079102
    8. ' Sub' → logprob: -13.262933731079102
    9. '.sub' → logprob: -13.512933731079102
    10. '[' → logprob: -13.762933731079102

Token 621: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.881560041918419e-05
    2. 'c' → logprob: -10.250039100646973
    3. '(a' → logprob: -12.750039100646973
    4. '(' → logprob: -15.375039100646973
    5. 'a' → logprob: -16.250038146972656
    6. ' c' → logprob: -16.750038146972656
    7. ' (' → logprob: -16.875038146972656
    8. '(
' → logprob: -16.875038146972656
    9. 'def' → logprob: -17.875038146972656
    10. '	c' → logprob: -18.375038146972656

Token 622: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004096327815204859
    2. ',a' → logprob: -5.504096508026123
    3. 'a' → logprob: -11.004096031188965
    4. ',p' → logprob: -14.504096031188965
    5. ' ,' → logprob: -14.629096031188965
    6. ',
' → logprob: -16.25409698486328
    7. '[' → logprob: -16.37909698486328
    8. ',c' → logprob: -16.62909698486328
    9. ' a' → logprob: -17.12909698486328
    10. 'def' → logprob: -17.87909698486328

Token 623: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004307884373702109
    2. ' a' → logprob: -7.750430583953857
    3. '	a' → logprob: -16.750431060791016
    4. '[a' → logprob: -17.625431060791016
    5. '   ' → logprob: -18.000431060791016
    6. '[' → logprob: -18.625431060791016
    7. ')a' → logprob: -19.250431060791016
    8. ''a' → logprob: -19.875431060791016
    9. '<|end|>' → logprob: -19.875431060791016
    10. ' ' → logprob: -20.000431060791016

Token 624: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12704139947891235
    2. ')' → logprob: -2.1270413398742676
    3. ')

' → logprob: -9.877041816711426
    4. '   ' → logprob: -10.127041816711426
    5. ')
' → logprob: -10.752041816711426
    6. ' )
' → logprob: -15.127041816711426
    7. '
' → logprob: -16.12704086303711
    8. ')`
' → logprob: -17.00204086303711
    9. ')

' → logprob: -17.12704086303711
    10. ' ' → logprob: -17.37704086303711

Token 625: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020447522401809692
    2. 'n' → logprob: -4.020447731018066
    3. 'normal' → logprob: -6.520447731018066
    4. ' n' → logprob: -7.395447731018066
    5. 'h' → logprob: -9.645447731018066
    6. ' normal' → logprob: -9.895447731018066
    7. 'p' → logprob: -10.270447731018066
    8. 'cross' → logprob: -10.770447731018066
    9. '  ' → logprob: -12.020447731018066
    10. '	n' → logprob: -12.395447731018066

Token 626: ' normal' (ID: 6078)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6335544586181641
    2. 'normal' (adapté à ' normal') → logprob: -0.7585544586181641
    3. 'norm' → logprob: -8.508554458618164
    4. 'h' → logprob: -8.758554458618164
    5. '   ' → logprob: -8.758554458618164
    6. ' n' → logprob: -8.758554458618164
    7. 'cross' → logprob: -9.133554458618164
    8. ' normal' → logprob: -9.633554458618164
    9. 'nor' → logprob: -10.133554458618164
    10. 'p' → logprob: -11.258554458618164

Token 627: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759395360946655
    2. '=' → logprob: -0.8259395360946655
    3. '=c' → logprob: -16.325939178466797
    4. '=cut' → logprob: -17.700939178466797
    5. ' ' → logprob: -18.200939178466797
    6. ' =
' → logprob: -18.200939178466797
    7. '=
' → logprob: -18.325939178466797
    8. ')' → logprob: -19.075939178466797
    9. ',' → logprob: -19.325939178466797
    10. 's' → logprob: -19.325939178466797

Token 628: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.3868713676929474
    2. ' cross' → logprob: -1.136871337890625
    3. '.cross' → logprob: -15.011871337890625
    4. '_cross' → logprob: -17.136871337890625
    5. '[' → logprob: -17.761871337890625
    6. 'c' → logprob: -18.511871337890625
    7. 'Cross' → logprob: -18.761871337890625
    8. ' ' → logprob: -19.011871337890625
    9. '   ' → logprob: -19.011871337890625
    10. 'vector' → logprob: -20.511871337890625

Token 629: '(ab' (ID: 115191)
  Prédit: '(ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.0005530327325686812
    2. 'ab' → logprob: -7.500553131103516
    3. '_ab' → logprob: -17.500553131103516
    4. ' ab' → logprob: -18.000553131103516
    5. '#ab' → logprob: -18.125553131103516
    6. '(' → logprob: -18.625553131103516
    7. 'AB' → logprob: -19.500553131103516
    8. 'd' → logprob: -19.875553131103516
    9. '(ac' → logprob: -19.875553131103516
    10. '(d' → logprob: -20.875553131103516

Token 630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.930552313453518e-05
    2. ' ,' → logprob: -10.000049591064453
    3. 'ac' → logprob: -13.250049591064453
    4. '(ac' → logprob: -13.375049591064453
    5. ',
' → logprob: -15.000049591064453
    6. '(' → logprob: -16.000049591064453
    7. '(),' → logprob: -17.625049591064453
    8. ',c' → logprob: -18.125049591064453
    9. ',(' → logprob: -19.000049591064453
    10. 'AC' → logprob: -19.250049591064453

Token 631: ' ac' (ID: 1375)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.03805044665932655
    2. ' ac' → logprob: -3.288050413131714
    3. '(ac' → logprob: -11.913050651550293
    4. '	ac' → logprob: -13.663050651550293
    5. 'AC' → logprob: -14.288050651550293
    6. '_ac' → logprob: -16.288049697875977
    7. '#ac' → logprob: -16.663049697875977
    8. ' ' → logprob: -16.788049697875977
    9. ' AC' → logprob: -17.038049697875977
    10. '   ' → logprob: -17.288049697875977

Token 632: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0076276883482933044
    2. ')
' → logprob: -5.007627487182617
    3. ')

' → logprob: -7.007627487182617
    4. ')
' → logprob: -13.007627487182617
    5. ' )' → logprob: -13.507627487182617
    6. 'd' → logprob: -13.757627487182617
    7. '   ' → logprob: -13.757627487182617
    8. ')

' → logprob: -15.132627487182617
    9. 'def' → logprob: -15.882627487182617
    10. ' ' → logprob: -16.132627487182617

Token 633: '   ' (ID: 271)
  Prédit: ' denom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' denom' → logprob: -0.7921545505523682
    2. 'den' → logprob: -1.1671545505523682
    3. '   ' → logprob: -2.292154550552368
    4. 'nd' → logprob: -2.792154550552368
    5. ' nd' → logprob: -3.042154550552368
    6. 'n' → logprob: -4.917154312133789
    7. ' denominator' → logprob: -5.167154312133789
    8. 'dn' → logprob: -5.542154312133789
    9. 'dot' → logprob: -5.542154312133789
    10. 'd' → logprob: -6.292154312133789

Token 634: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0971287414431572
    2. 'nd' → logprob: -2.7221286296844482
    3. ' denom' → logprob: -3.8471286296844482
    4. 'n' → logprob: -6.097128868103027
    5. 'dn' → logprob: -6.597128868103027
    6. 'dot' → logprob: -6.722128868103027
    7. ' nd' → logprob: -8.097128868103027
    8. 'd' → logprob: -9.222128868103027
    9. ' denominator' → logprob: -9.597128868103027
    10. '   ' → logprob: -10.097128868103027

Token 635: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759396553039551
    2. '=' → logprob: -0.8259396553039551
    3. ')' → logprob: -15.700939178466797
    4. ',' → logprob: -17.825939178466797
    5. ' ' → logprob: -17.825939178466797
    6. ' =
' → logprob: -17.950939178466797
    7. '.' → logprob: -18.200939178466797
    8. '=
' → logprob: -18.450939178466797
    9. '   ' → logprob: -18.825939178466797
    10. '=

' → logprob: -19.075939178466797

Token 636: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.0013380973832681775
    2. ' dot' → logprob: -6.626338005065918
    3. '(dot' → logprob: -11.751338005065918
    4. '.dot' → logprob: -12.751338005065918
    5. '-dot' → logprob: -14.001338005065918
    6. '-' → logprob: -15.501338005065918
    7. '_dot' → logprob: -15.626338005065918
    8. '   ' → logprob: -16.501338958740234
    9. 'd' → logprob: -16.876338958740234
    10. 'den' → logprob: -17.376338958740234

Token 637: '(normal' (ID: 100011)
  Prédit: '(normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(normal' → logprob: -0.00020246754866093397
    2. '(d' → logprob: -8.750202178955078
    3. '(' → logprob: -10.500202178955078
    4. 'normal' → logprob: -11.125202178955078
    5. '(norm' → logprob: -13.875202178955078
    6. 'd' → logprob: -14.875202178955078
    7. '(n' → logprob: -15.000202178955078
    8. ' normal' → logprob: -17.250202178955078
    9. ' (' → logprob: -18.750202178955078
    10. '(
' → logprob: -19.250202178955078

Token 638: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019253721460700035
    2. '(d' → logprob: -4.644253730773926
    3. ',d' → logprob: -4.894253730773926
    4. 'd' → logprob: -6.519253730773926
    5. '(normal' → logprob: -8.519253730773926
    6. ' ,' → logprob: -8.894253730773926
    7. 'normal' → logprob: -9.269253730773926
    8. '(' → logprob: -10.894253730773926
    9. ')' → logprob: -11.394253730773926
    10. ' d' → logprob: -12.144253730773926

Token 639: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00673218397423625
    2. ' d' → logprob: -5.006731986999512
    3. '   ' → logprob: -11.381731986999512
    4. '	d' → logprob: -12.881731986999512
    5. ')' → logprob: -13.631731986999512
    6. ')d' → logprob: -13.756731986999512
    7. ' ' → logprob: -15.006731986999512
    8. 'normal' → logprob: -16.756732940673828
    9. '  ' → logprob: -16.881732940673828
    10. ')
' → logprob: -17.006732940673828

Token 640: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014752219431102276
    2. ')
' → logprob: -6.6264753341674805
    3. ' )' → logprob: -8.87647533416748
    4. ')

' → logprob: -12.37647533416748
    5. ' )
' → logprob: -12.87647533416748
    6. ')
' → logprob: -14.00147533416748
    7. '()' → logprob: -15.00147533416748
    8. ')`' → logprob: -15.00147533416748
    9. '())' → logprob: -15.12647533416748
    10. '=' → logprob: -15.50147533416748

Token 641: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08962541818618774
    2. ' if' → logprob: -2.464625358581543
    3. ' None' → logprob: -8.214625358581543
    4. ' ==' → logprob: -8.964625358581543
    5. '=' → logprob: -9.214625358581543
    6. ' =' → logprob: -9.839625358581543
    7. 'if' → logprob: -10.214625358581543
    8. ' is' → logprob: -11.214625358581543
    9. 'If' → logprob: -11.339625358581543
    10. '==' → logprob: -11.464625358581543

Token 642: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16295865178108215
    2. ' if' → logprob: -1.9129586219787598
    3. '   ' → logprob: -5.91295862197876
    4. 'If' → logprob: -11.162959098815918
    5. '```' → logprob: -12.412959098815918
    6. '	if' → logprob: -12.912959098815918
    7. '    
' → logprob: -13.412959098815918
    8. '0' → logprob: -13.912959098815918
    9. ';if' → logprob: -14.037959098815918
    10. '=' → logprob: -14.412959098815918

Token 643: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.01416398212313652
    2. ' abs' → logprob: -4.264163970947266
    3. '(abs' → logprob: -14.764163970947266
    4. '   ' → logprob: -16.764163970947266
    5. ' ' → logprob: -17.764163970947266
    6. 'den' → logprob: -18.139163970947266
    7. '  ' → logprob: -18.889163970947266
    8. ' denom' → logprob: -19.639163970947266
    9. '    ' → logprob: -20.764163970947266
    10. '```' → logprob: -21.139163970947266

Token 644: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. 'den' → logprob: -14.250000953674316
    3. '(
' → logprob: -18.25
    4. '```' → logprob: -20.5
    5. '(

' → logprob: -21.25
    6. '((' → logprob: -21.375
    7. '   ' → logprob: -21.875
    8. '-den' → logprob: -22.0
    9. ')' → logprob: -22.25
    10. '(normal' → logprob: -22.625

Token 645: 'den' (ID: 1660)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018151583150029182
    2. 'den' → logprob: -4.018151760101318
    3. ')' → logprob: -13.51815128326416
    4. ' denom' → logprob: -15.64315128326416
    5. 'Den' → logprob: -18.143152236938477
    6. '-den' → logprob: -18.268152236938477
    7. '   ' → logprob: -18.393152236938477
    8. '(
' → logprob: -18.768152236938477
    9. '```' → logprob: -19.018152236938477
    10. 'deny' → logprob: -19.643152236938477

Token 646: 'om' (ID: 310)
  Prédit: 'om'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -0.0017632400849834085
    2. 'orm' → logprob: -7.001763343811035
    3. 'o' → logprob: -7.876763343811035
    4. ')' → logprob: -8.251763343811035
    5. 'ormal' → logprob: -9.876763343811035
    6. 'or' → logprob: -10.126763343811035
    7. 'on' → logprob: -10.501763343811035
    8. ' ' → logprob: -10.626763343811035
    9. 'm' → logprob: -11.001763343811035
    10. '   ' → logprob: -11.126763343811035

Token 647: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1875571544806007e-05
    2. ')<' → logprob: -11.500011444091797
    3. '[' → logprob: -13.875011444091797
    4. '<' → logprob: -15.000011444091797
    5. ' )' → logprob: -15.250011444091797
    6. '）' → logprob: -16.625011444091797
    7. ')<=' → logprob: -16.750011444091797
    8. ')>' → logprob: -17.000011444091797
    9. ')
' → logprob: -17.375011444091797
    10. '```' → logprob: -18.000011444091797

Token 648: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10029961913824081
    2. ' <' → logprob: -2.350299596786499
    3. ')' → logprob: -10.225299835205078
    4. '<=' → logprob: -10.600299835205078
    5. '>' → logprob: -11.225299835205078
    6. '[' → logprob: -12.350299835205078
    7. ')<' → logprob: -12.850299835205078
    8. ' <=' → logprob: -12.975299835205078
    9. '==' → logprob: -13.350299835205078
    10. ' ' → logprob: -13.850299835205078

Token 649: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.375011444091797
    4. '```' → logprob: -19.125011444091797
    5. '=' → logprob: -20.000011444091797
    6. '
' → logprob: -20.250011444091797
    7. '(' → logprob: -20.375011444091797
    8. '[' → logprob: -20.625011444091797
    9. '  ' → logprob: -20.750011444091797
    10. '`' → logprob: -21.125011444091797

Token 650: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -16.125001907348633
    4. '```' → logprob: -19.125001907348633
    5. '
' → logprob: -19.750001907348633
    6. '(' → logprob: -20.125001907348633
    7. '[' → logprob: -20.500001907348633
    8. '=' → logprob: -20.562501907348633
    9. '`' → logprob: -20.625001907348633
    10. '１' → logprob: -20.875001907348633

Token 651: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011727249948307872
    2. 'e' → logprob: -6.7511725425720215
    3. '1' → logprob: -13.12617301940918
    4. '```' → logprob: -15.87617301940918
    5. '-e' → logprob: -16.50117301940918
    6. '
' → logprob: -16.62617301940918
    7. ' -' → logprob: -17.00117301940918
    8. '**' → logprob: -17.12617301940918
    9. '9' → logprob: -17.50117301940918
    10. '   ' → logprob: -17.62617301940918

Token 652: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. '9' → logprob: -15.75
    3. ' -' → logprob: -17.125
    4. 'e' → logprob: -17.5
    5. '```' → logprob: -17.75
    6. '   ' → logprob: -18.6875
    7. '-
' → logprob: -19.125
    8. '``' → logprob: -19.125
    9. '12' → logprob: -19.375
    10. '{-' → logprob: -19.75

Token 653: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.021373536437749863
    2. '12' → logprob: -3.8963735103607178
    3. '15' → logprob: -7.646373748779297
    4. '14' → logprob: -8.271373748779297
    5. '10' → logprob: -9.521373748779297
    6. '13' → logprob: -10.896373748779297
    7. '09' → logprob: -13.396373748779297
    8. '-' → logprob: -13.646373748779297
    9. '11' → logprob: -13.646373748779297
    10. '16' → logprob: -14.271373748779297

Token 654: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017472924664616585
    2. ':return' → logprob: -6.751747131347656
    3. ':
' → logprob: -7.501747131347656
    4. ' :' → logprob: -11.376747131347656
    5. '   ' → logprob: -11.876747131347656
    6. ' and' → logprob: -13.251747131347656
    7. ' or' → logprob: -13.376747131347656
    8. '):' → logprob: -14.376747131347656
    9. ':
' → logprob: -15.001747131347656
    10. ' return' → logprob: -15.126747131347656

Token 655: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08236096054315567
    2. '   ' → logprob: -2.5823609828948975
    3. ' return' → logprob: -5.832360744476318
    4. '    ' → logprob: -8.582361221313477
    5. '    
' → logprob: -9.207361221313477
    6. '        
' → logprob: -9.582361221313477
    7. ' #' → logprob: -9.832361221313477
    8. '
' → logprob: -10.582361221313477
    9. '=' → logprob: -11.082361221313477
    10. '#' → logprob: -11.082361221313477

Token 656: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.620076060295105
    2. '#' (adapté à ' #') → logprob: -1.245076060295105
    3. ' return' → logprob: -1.870076060295105
    4. ' #' → logprob: -4.1200761795043945
    5. '   ' → logprob: -5.6200761795043945
    6. 't' → logprob: -9.120076179504395
    7. ' ' → logprob: -10.495076179504395
    8. ' t' → logprob: -11.245076179504395
    9. '       ' → logprob: -11.245076179504395
    10. '	return' → logprob: -12.120076179504395

Token 657: ' Line' (ID: 11342)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2256983071565628
    2. 'return' → logprob: -1.6006983518600464
    3. ' return' → logprob: -8.975698471069336
    4. ' #' → logprob: -9.225698471069336
    5. 'Return' → logprob: -10.350698471069336
    6. '   ' → logprob: -11.850698471069336
    7. 'parallel' → logprob: -12.475698471069336
    8. 'vec' → logprob: -12.725698471069336
    9. 'if' → logprob: -12.850698471069336
    10. 'Vector' → logprob: -13.100698471069336

Token 658: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0737270936369896
    2. ' parallel' → logprob: -3.8237271308898926
    3. ' direction' → logprob: -4.073727130889893
    4. 'is' → logprob: -4.698727130889893
    5. 'dir' → logprob: -5.698727130889893
    6. ' vector' → logprob: -5.698727130889893
    7. 'parallel' → logprob: -5.948727130889893
    8. '_dir' → logprob: -6.323727130889893
    9. 'direction' → logprob: -6.448727130889893
    10. ' has' → logprob: -6.573727130889893

Token 659: ' parallel' (ID: 26697)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -0.12703751027584076
    2. ' parallel' → logprob: -2.127037525177002
    3. ' None' → logprob: -9.877037048339844
    4. 'None' → logprob: -10.377037048339844
    5. '_parallel' → logprob: -11.502037048339844
    6. 'par' → logprob: -12.752037048339844
    7. ' paralle' → logprob: -13.127037048339844
    8. '
' → logprob: -13.127037048339844
    9. ' paralelo' → logprob: -13.252037048339844
    10. ' ' → logprob: -13.502037048339844

Token 660: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.002882380038499832
    2. '   ' → logprob: -6.377882480621338
    3. ' or' → logprob: -7.502882480621338
    4. 'to' → logprob: -7.627882480621338
    5. ' return' → logprob: -9.25288200378418
    6. 'return' → logprob: -10.62788200378418
    7. 'or' → logprob: -11.75288200378418
    8. ' with' → logprob: -13.12788200378418
    9. '
' → logprob: -13.25288200378418
    10. '    ' → logprob: -13.50288200378418

Token 661: ' plane' (ID: 16499)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.0017451542662456632
    2. ' normal' → logprob: -6.376745223999023
    3. 'ab' → logprob: -10.876745223999023
    4. 'segment' → logprob: -11.501745223999023
    5. 'the' → logprob: -11.626745223999023
    6. '(normal' → logprob: -13.501745223999023
    7. '0' → logprob: -14.376745223999023
    8. 'vector' → logprob: -14.501745223999023
    9. 'plane' → logprob: -14.501745223999023
    10. 'norm' → logprob: -15.001745223999023

Token 662: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27232205867767334
    2. '       ' → logprob: -1.5223220586776733
    3. ' return' → logprob: -4.397322177886963
    4. 'return' → logprob: -5.147322177886963
    5. ' if' → logprob: -6.647322177886963
    6. '    
' → logprob: -8.397321701049805
    7. '        
' → logprob: -9.022321701049805
    8. '
' → logprob: -9.022321701049805
    9. 'if' → logprob: -9.397321701049805
    10. '    ' → logprob: -9.522321701049805

Token 663: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08117193728685379
    2. '   ' → logprob: -2.581171989440918
    3. '        
' → logprob: -6.581171989440918
    4. '    
' → logprob: -7.581171989440918
    5. ',' → logprob: -8.706171989440918
    6. '
' → logprob: -10.081171989440918
    7. ' return' → logprob: -10.081171989440918
    8. '    ' → logprob: -10.581171989440918
    9. 'return' → logprob: -10.706171989440918
    10. ' and' → logprob: -11.081171989440918

Token 664: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11330012232065201
    2. '#' (adapté à ' #') → logprob: -2.488300085067749
    3. 'ap' → logprob: -4.613300323486328
    4. 'if' → logprob: -4.738300323486328
    5. 't' → logprob: -5.613300323486328
    6. 'ab' → logprob: -7.488300323486328
    7. '   ' → logprob: -8.613300323486328
    8. 'vec' → logprob: -8.613300323486328
    9. 'diff' → logprob: -8.613300323486328
    10. 'plane' → logprob: -8.738300323486328

Token 665: ' Check' (ID: 6208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6156294941902161
    2. 't' → logprob: -0.9906294941902161
    3. 'return' → logprob: -2.6156294345855713
    4. 'ap' → logprob: -4.99062967300415
    5. 'if' → logprob: -5.74062967300415
    6. 'diff' → logprob: -6.99062967300415
    7. 'dist' → logprob: -7.36562967300415
    8. 'vec' → logprob: -7.74062967300415
    9. 'plane' → logprob: -7.74062967300415
    10. 'proj' → logprob: -7.74062967300415

Token 666: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31391745805740356
    2. ' if' → logprob: -1.4389173984527588
    3. 'if' → logprob: -3.438917398452759
    4. 'p' → logprob: -10.31391716003418
    5. ' p' → logprob: -10.31391716003418
    6. '    
' → logprob: -11.06391716003418
    7. '#' → logprob: -11.06391716003418
    8. '    ' → logprob: -11.56391716003418
    9. ' ' → logprob: -12.43891716003418
    10. '   ' → logprob: -12.81391716003418

Token 667: ' segment' (ID: 14806)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.005494257435202599
    2. 'point' → logprob: -5.755494117736816
    3. '(' → logprob: -7.005494117736816
    4. '(is' → logprob: -7.755494117736816
    5. 'any' → logprob: -7.880494117736816
    6. ' is' → logprob: -8.380494117736816
    7. 'abs' → logprob: -9.130494117736816
    8. 'all' → logprob: -9.130494117736816
    9. '(
' → logprob: -9.380494117736816
    10. ' (' → logprob: -10.380494117736816

Token 668: ' lies' (ID: 24384)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0958203598856926
    2. 'lies' → logprob: -3.095820426940918
    3. 'on' → logprob: -4.345820426940918
    4. '_inter' → logprob: -4.845820426940918
    5. 'inter' → logprob: -5.220820426940918
    6. '_is' → logprob: -5.345820426940918
    7. ' is' → logprob: -5.470820426940918
    8. '_on' → logprob: -6.095820426940918
    9. 'p' → logprob: -6.095820426940918
    10. 'point' → logprob: -6.595820426940918

Token 669: ' in' (ID: 306)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.7665938138961792
    2. 'in' → logprob: -1.3915938138961792
    3. ' in' → logprob: -1.6415938138961792
    4. ' on' → logprob: -2.3915939331054688
    5. ' ' → logprob: -7.391593933105469
    6. ' entirely' → logprob: -8.141593933105469
    7. '   ' → logprob: -8.641593933105469
    8. 'inside' → logprob: -9.141593933105469
    9. ' exactly' → logprob: -9.266593933105469
    10. 'within' → logprob: -9.391593933105469

Token 670: ' the' (ID: 290)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.21589155495166779
    2. 'the' → logprob: -2.3408915996551514
    3. ' plane' → logprob: -2.4658915996551514
    4. ' the' → logprob: -4.465891361236572
    5. 'segment' → logprob: -7.090891361236572
    6. 'vector' → logprob: -7.965891361236572
    7. 'triangle' → logprob: -9.71589183807373
    8. 'point' → logprob: -9.84089183807373
    9. ' segment' → logprob: -9.96589183807373
    10. ' vector' → logprob: -10.34089183807373

Token 671: ' plane' (ID: 16499)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.0028225891292095184
    2. ' plane' → logprob: -6.127822399139404
    3. 'segment' → logprob: -8.377822875976562
    4. 'triangle' → logprob: -8.627822875976562
    5. 'plan' → logprob: -10.002822875976562
    6. 'None' → logprob: -10.127822875976562
    7. 'p' → logprob: -10.627822875976562
    8. 'same' → logprob: -10.752822875976562
    9. 'vector' → logprob: -10.877822875976562
    10. '[' → logprob: -11.002822875976562

Token 672: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022883310914039612
    2. '       ' → logprob: -3.897883415222168
    3. '    
' → logprob: -6.522883415222168
    4. '        
' → logprob: -7.772883415222168
    5. ',' → logprob: -8.772883415222168
    6. ' if' → logprob: -9.147883415222168
    7. '    ' → logprob: -9.147883415222168
    8. '
' → logprob: -11.022883415222168
    9. ' and' → logprob: -11.272883415222168
    10. '   
' → logprob: -11.647883415222168

Token 673: ' intersects' (ID: 198484)
  Prédit: '(is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.6944186687469482
    2. '(
' → logprob: -1.0694186687469482
    3. '(' → logprob: -2.4444186687469482
    4. '(any' → logprob: -3.5694186687469482
    5. 'is' → logprob: -3.8194186687469482
    6. 'any' → logprob: -4.194418907165527
    7. '(

' → logprob: -6.694418907165527
    8. ' (' → logprob: -6.944418907165527
    9. 'return' → logprob: -7.069418907165527
    10. 'all' → logprob: -7.319418907165527

Token 674: ' triangle' (ID: 41487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14318540692329407
    2. 'triangle' → logprob: -3.3931853771209717
    3. ' triangle' → logprob: -4.268185615539551
    4. ' with' → logprob: -4.268185615539551
    5. 'if' → logprob: -4.393185615539551
    6. ' if' → logprob: -4.768185615539551
    7. 'a' → logprob: -4.893185615539551
    8. ' the' → logprob: -5.018185615539551
    9. 'with' → logprob: -5.143185615539551
    10. 'abc' → logprob: -5.268185615539551

Token 675: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024744702968746424
    2. '    
' → logprob: -6.377474308013916
    3. ' if' → logprob: -8.127474784851074
    4. '
' → logprob: -9.127474784851074
    5. 'if' → logprob: -9.377474784851074
    6. 'ap' → logprob: -9.627474784851074
    7. 'p' → logprob: -9.627474784851074
    8. ' ap' → logprob: -10.127474784851074
    9. '        
' → logprob: -11.252474784851074
    10. '       ' → logprob: -11.377474784851074

Token 676: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3135361671447754
    2. '   ' → logprob: -1.3135361671447754
    3. '        
' → logprob: -9.313535690307617
    4. ',' → logprob: -9.438535690307617
    5. '    
' → logprob: -10.188535690307617
    6. '    ' → logprob: -10.688535690307617
    7. '<|end|>' → logprob: -11.563535690307617
    8. '
' → logprob: -12.438535690307617
    9. '	   ' → logprob: -12.688535690307617
    10. ':' → logprob: -12.813535690307617

Token 677: ' ap' (ID: 1419)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' (adapté à ' ap') → logprob: -0.06222345307469368
    2. 'if' → logprob: -2.812223434448242
    3. 'p' → logprob: -9.687223434448242
    4. ' ap' → logprob: -9.937223434448242
    5. '#' → logprob: -10.187223434448242
    6. 'ab' → logprob: -10.562223434448242
    7. ' if' → logprob: -10.562223434448242
    8. '   ' → logprob: -10.562223434448242
    9. 'plane' → logprob: -11.312223434448242
    10. 't' → logprob: -12.312223434448242

Token 678: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975349873304367
    2. ' =' → logprob: -3.5297534465789795
    3. 'p' → logprob: -13.029753684997559
    4. '=
' → logprob: -14.904753684997559
    5. 'd' → logprob: -15.904753684997559
    6. ' ' → logprob: -16.779752731323242
    7. 'c' → logprob: -17.154752731323242
    8. '0' → logprob: -17.529752731323242
    9. 's' → logprob: -17.529752731323242
    10. 'a' → logprob: -17.529752731323242

Token 679: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868713080883026
    2. ' =' → logprob: -1.136871337890625
    3. '=
' → logprob: -16.136871337890625
    4. 'p' → logprob: -16.386871337890625
    5. ' ' → logprob: -16.511871337890625
    6. ' =
' → logprob: -17.386871337890625
    7. ',' → logprob: -17.386871337890625
    8. '=

' → logprob: -17.386871337890625
    9. ')' → logprob: -17.636871337890625
    10. ' ' → logprob: -17.761871337890625

Token 680: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.04858873412013054
    2. ' vector' → logprob: -3.048588752746582
    3. '   ' → logprob: -14.548588752746582
    4. ' ' → logprob: -15.423588752746582
    5. '	vector' → logprob: -15.423588752746582
    6. 'segment' → logprob: -16.048587799072266
    7. 'Vector' → logprob: -16.173587799072266
    8. '  ' → logprob: -16.923587799072266
    9. '.vector' → logprob: -16.923587799072266
    10. '(vector' → logprob: -17.423587799072266

Token 681: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.02324850670993328
    2. 'sub' → logprob: -3.7732484340667725
    3. 'Sub' → logprob: -13.398248672485352
    4. '(p' → logprob: -14.773248672485352
    5. 'subtract' → logprob: -15.023248672485352
    6. '(sub' → logprob: -15.523248672485352
    7. 'vector' → logprob: -15.648248672485352
    8. 's' → logprob: -16.27324867248535
    9. '=sub' → logprob: -16.52324867248535
    10. ' sub' → logprob: -16.52324867248535

Token 682: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.1602339744567871
    2. 'p' → logprob: -1.910233974456787
    3. ' p' → logprob: -11.910234451293945
    4. '(' → logprob: -12.910234451293945
    5. 'a' → logprob: -15.660234451293945
    6. ' (' → logprob: -15.910234451293945
    7. '<p' → logprob: -16.910234451293945
    8. ',p' → logprob: -16.910234451293945
    9. '(a' → logprob: -16.910234451293945
    10. '(
' → logprob: -16.910234451293945

Token 683: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '۱' → logprob: -18.375
    4. 'a' → logprob: -18.625
    5. '2' → logprob: -19.0
    6. '１' → logprob: -19.125
    7. 'p' → logprob: -19.625
    8. '১' → logprob: -19.625
    9. '```' → logprob: -19.875
    10. '[' → logprob: -20.25

Token 684: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012011249782517552
    2. ',a' → logprob: -9.125120162963867
    3. ' ,' → logprob: -12.000120162963867
    4. 'a' → logprob: -12.500120162963867
    5. 'p' → logprob: -15.000120162963867
    6. ',
' → logprob: -15.125120162963867
    7. ',p' → logprob: -15.375120162963867
    8. ' a' → logprob: -15.375120162963867
    9. ')' → logprob: -17.875120162963867
    10. '‌,' → logprob: -18.500120162963867

Token 685: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.4121114822482923e-06
    2. ' a' → logprob: -12.625003814697266
    3. '	a' → logprob: -16.875003814697266
    4. '   ' → logprob: -20.750003814697266
    5. '#a' → logprob: -21.125003814697266
    6. '"a' → logprob: -21.375003814697266
    7. '[a' → logprob: -21.625003814697266
    8. ''a' → logprob: -21.875003814697266
    9. '_a' → logprob: -22.000003814697266
    10. 'а' → logprob: -22.500003814697266

Token 686: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.018205663189291954
    2. ')' → logprob: -4.018205642700195
    3. '       ' → logprob: -10.393205642700195
    4. ')
' → logprob: -10.768205642700195
    5. '   ' → logprob: -13.018205642700195
    6. ')

' → logprob: -13.768205642700195
    7. ' )
' → logprob: -15.393205642700195
    8. ',' → logprob: -15.393205642700195
    9. '=' → logprob: -16.768205642700195
    10. ')**' → logprob: -17.143205642700195

Token 687: '       ' (ID: 309)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.056684460490942
    2. 'if' → logprob: -3.3066844940185547
    3. '   ' → logprob: -4.181684494018555
    4. 'dot' → logprob: -6.556684494018555
    5. 'dp' → logprob: -6.806684494018555
    6. ' ap' → logprob: -7.806684494018555
    7. ' if' → logprob: -9.556684494018555
    8. 'd' → logprob: -10.181684494018555
    9. 'apot' → logprob: -10.806684494018555
    10. 'ip' → logprob: -10.931684494018555

Token 688: ' if' (ID: 538)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.007187495473772287
    2. 'if' (adapté à ' if') → logprob: -5.007187366485596
    3. ' ap' → logprob: -8.132187843322754
    4. '   ' → logprob: -8.882187843322754
    5. 'abs' → logprob: -11.007187843322754
    6. ' if' → logprob: -11.632187843322754
    7. '       ' → logprob: -12.507187843322754
    8. 'dot' → logprob: -12.757187843322754
    9. '	ap' → logprob: -13.382187843322754
    10. 'dp' → logprob: -13.882187843322754

Token 689: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00011677479778882116
    2. ' abs' → logprob: -9.125116348266602
    3. '   ' → logprob: -12.000116348266602
    4. '
' → logprob: -14.750116348266602
    5. 'dot' → logprob: -15.000116348266602
    6. ' ' → logprob: -15.250116348266602
    7. '(abs' → logprob: -15.250116348266602
    8. 'is' → logprob: -16.1251163482666
    9. '  ' → logprob: -16.2501163482666
    10. '    ' → logprob: -16.6251163482666

Token 690: '(dot' (ID: 151841)
  Prédit: '(dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dot' → logprob: -2.5776860184123507e-06
    2. 'dot' → logprob: -13.00000286102295
    3. '(' → logprob: -15.50000286102295
    4. '.dot' → logprob: -18.125001907348633
    5. '(
' → logprob: -19.375001907348633
    6. ' dot' → logprob: -20.250001907348633
    7. '(d' → logprob: -21.125001907348633
    8. '(abs' → logprob: -21.125001907348633
    9. '((' → logprob: -21.125001907348633
    10. '_dot' → logprob: -21.625001907348633

Token 691: '(normal' (ID: 100011)
  Prédit: '(ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ap' → logprob: -0.007645679172128439
    2. '(normal' → logprob: -4.882645606994629
    3. 'ap' → logprob: -10.382645606994629
    4. 'normal' → logprob: -12.382645606994629
    5. '	ap' → logprob: -13.257645606994629
    6. '(' → logprob: -13.757645606994629
    7. ' ap' → logprob: -14.257645606994629
    8. '(n' → logprob: -15.757645606994629
    9. '(norm' → logprob: -15.757645606994629
    10. ')' → logprob: -16.382646560668945

Token 692: ',' (ID: 11)
  Prédit: '(ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ap' → logprob: -0.011768757365643978
    2. ',' → logprob: -4.761768817901611
    3. 'ap' → logprob: -5.761768817901611
    4. ' ap' → logprob: -13.761768341064453
    5. '	ap' → logprob: -14.011768341064453
    6. '/ap' → logprob: -14.511768341064453
    7. ' ,' → logprob: -14.761768341064453
    8. '(' → logprob: -15.011768341064453
    9. ')' → logprob: -15.511768341064453
    10. ' (' → logprob: -16.261768341064453

Token 693: ' ap' (ID: 1419)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.0001596771035110578
    2. ' ap' → logprob: -8.75015926361084
    3. '(ap' → logprob: -13.75015926361084
    4. '	ap' → logprob: -15.62515926361084
    5. '   ' → logprob: -18.250160217285156
    6. 'p' → logprob: -19.750160217285156
    7. ' ' → logprob: -20.000160217285156
    8. 'Ap' → logprob: -20.250160217285156
    9. 'ab' → logprob: -20.250160217285156
    10. ')' → logprob: -20.625160217285156

Token 694: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ')' → logprob: -17.875
    3. '१' → logprob: -20.8125
    4. '১' → logprob: -21.0
    5. '۱' → logprob: -21.0
    6. '[' → logprob: -21.25
    7. ',' → logprob: -21.375
    8. ' ' → logprob: -21.5
    9. 'p' → logprob: -21.6875
    10. '2' → logprob: -21.875

Token 695: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001735870959237218
    2. ')' → logprob: -6.376735687255859
    3. ' ))' → logprob: -10.50173568725586
    4. ')>' → logprob: -13.50173568725586
    5. 'p' → logprob: -14.00173568725586
    6. ')))' → logprob: -14.25173568725586
    7. '(p' → logprob: -14.62673568725586
    8. '))
' → logprob: -14.62673568725586
    9. '()))' → logprob: -15.00173568725586
    10. ' ' → logprob: -15.25173568725586

Token 696: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.18825370073318481
    2. ' >' → logprob: -1.81325364112854
    3. '<' → logprob: -5.938253879547119
    4. ')' → logprob: -6.063253879547119
    5. ' <' → logprob: -6.938253879547119
    6. '(' → logprob: -7.063253879547119
    7. '()>' → logprob: -7.688253879547119
    8. '<=' → logprob: -7.813253879547119
    9. ')>' → logprob: -8.438253402709961
    10. '()' → logprob: -8.688253402709961

Token 697: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043162284418940544
    2. ' ' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.375432014465332
    4. '
' → logprob: -16.437931060791016
    5. '(' → logprob: -17.000431060791016
    6. '

' → logprob: -17.187931060791016
    7. '  ' → logprob: -17.375431060791016
    8. '0' → logprob: -17.500431060791016
    9. '2' → logprob: -17.812931060791016
    10. '5' → logprob: -18.687931060791016

Token 698: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.375051498413086
    4. '(' → logprob: -17.437551498413086
    5. '
' → logprob: -17.875051498413086
    6. '2' → logprob: -18.187551498413086
    7. '  ' → logprob: -18.312551498413086
    8. '0' → logprob: -18.562551498413086
    9. '

' → logprob: -18.750051498413086
    10. '5' → logprob: -18.812551498413086

Token 699: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.4987974029500037e-05
    2. 'e' → logprob: -10.750024795532227
    3. '15' → logprob: -14.000024795532227
    4. ' -' → logprob: -14.125024795532227
    5. '```' → logprob: -14.625024795532227
    6. '9' → logprob: -15.312524795532227
    7. '{-' → logprob: -15.500024795532227
    8. '   ' → logprob: -15.812524795532227
    9. '
' → logprob: -15.875024795532227
    10. '−' → logprob: -16.312524795532227

Token 700: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.180258191714529e-06
    2. '15' → logprob: -12.125008583068848
    3. '9' → logprob: -13.500008583068848
    4. '```' → logprob: -15.562508583068848
    5. ' -' → logprob: -15.750008583068848
    6. 'e' → logprob: -15.937508583068848
    7. '−' → logprob: -16.18750762939453
    8. '16' → logprob: -16.56250762939453
    9. '14' → logprob: -16.56250762939453
    10. '12' → logprob: -16.62500762939453

Token 701: '9' (ID: 24)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.07005324959754944
    2. '9' → logprob: -2.8200533390045166
    3. '12' → logprob: -5.1950531005859375
    4. '14' → logprob: -6.1950531005859375
    5. '10' → logprob: -8.320053100585938
    6. '13' → logprob: -8.445053100585938
    7. '11' → logprob: -12.070053100585938
    8. '8' → logprob: -13.257553100585938
    9. '09' → logprob: -14.507553100585938
    10. '{' → logprob: -14.820053100585938

Token 702: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15579353272914886
    2. '       ' → logprob: -2.5307934284210205
    3. ':' → logprob: -3.1557934284210205
    4. '   ' → logprob: -4.1557936668396
    5. '           ' → logprob: -6.0307936668396
    6. ':return' → logprob: -6.2807936668396
    7. ' :
' → logprob: -6.5307936668396
    8. ' return' → logprob: -8.280793190002441
    9. '):
' → logprob: -8.905793190002441
    10. ' :' → logprob: -9.905793190002441

Token 703: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00804935023188591
    2. '           ' → logprob: -4.883049488067627
    3. ':' → logprob: -8.633049011230469
    4. ':
' → logprob: -8.883049011230469
    5. '
' → logprob: -10.008049011230469
    6. ' return' → logprob: -10.508049011230469
    7. '   ' → logprob: -11.383049011230469
    8. ':return' → logprob: -11.508049011230469
    9. 'return' → logprob: -11.758049011230469
    10. '	' → logprob: -12.133049011230469

Token 704: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38085776567459106
    2. ' return' → logprob: -1.6308577060699463
    3. 'return' (adapté à ' return') → logprob: -2.1308577060699463
    4. '           ' → logprob: -6.505857944488525
    5. '   ' → logprob: -7.255857944488525
    6. '	return' → logprob: -11.005857467651367
    7. '               ' → logprob: -12.505857467651367
    8. ':return' → logprob: -13.005857467651367
    9. ' ' → logprob: -13.255857467651367
    10. '
' → logprob: -13.880857467651367

Token 705: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.632542913896032e-05
    2. ' False' → logprob: -10.000046730041504
    3. 'None' → logprob: -14.500046730041504
    4. '[]' → logprob: -15.250046730041504
    5. '(False' → logprob: -16.250045776367188
    6. '0' → logprob: -17.625045776367188
    7. 'True' → logprob: -20.000045776367188
    8. 'false' → logprob: -21.125045776367188
    9. '[]
' → logprob: -22.250045776367188
    10. '[' → logprob: -22.500045776367188

Token 706: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23105071485042572
    2. '
' → logprob: -1.606050729751587
    3. '        
' → logprob: -5.356050491333008
    4. '   ' → logprob: -8.356050491333008
    5. '    
' → logprob: -8.856050491333008
    6. 'return' → logprob: -8.856050491333008
    7. '
' → logprob: -9.231050491333008
    8. '

' → logprob: -9.981050491333008
    9. 's' → logprob: -10.481050491333008
    10. ',' → logprob: -10.856050491333008

Token 707: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07716961950063705
    2. '
' → logprob: -2.70216965675354
    3. '   ' → logprob: -5.577169418334961
    4. '        
' → logprob: -6.077169418334961
    5. '    
' → logprob: -7.577169418334961
    6. 'p' → logprob: -8.952169418334961
    7. '
' → logprob: -9.202169418334961
    8. 'return' → logprob: -9.577169418334961
    9. 's' → logprob: -10.077169418334961
    10. '    ' → logprob: -10.827169418334961

Token 708: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.34842103719711304
    2. '#' (adapté à ' #') → logprob: -1.8484210968017578
    3. 'if' → logprob: -2.348421096801758
    4. 'return' → logprob: -3.598421096801758
    5. '   ' → logprob: -4.848421096801758
    6. 'u' → logprob: -5.598421096801758
    7. 's' → logprob: -7.098421096801758
    8. 'ap' → logprob: -7.473421096801758
    9. 'for' → logprob: -8.473421096801758
    10. 'd' → logprob: -8.723421096801758

Token 709: ' Segment' (ID: 64922)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14469778537750244
    2. 't' → logprob: -2.144697666168213
    3. 'return' → logprob: -4.519697666168213
    4. 'if' → logprob: -5.644697666168213
    5. 'u' → logprob: -7.144697666168213
    6. 'Check' → logprob: -7.394697666168213
    7. 'for' → logprob: -7.519697666168213
    8. 'Return' → logprob: -8.144698143005371
    9. ' #' → logprob: -8.394698143005371
    10. 'ap' → logprob: -8.519698143005371

Token 710: ' lies' (ID: 24384)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.9175639152526855
    2. 'direction' → logprob: -1.7925639152526855
    3. '_dir' → logprob: -2.6675639152526855
    4. 'vector' → logprob: -2.7925639152526855
    5. 'd' → logprob: -3.0425639152526855
    6. 'vec' → logprob: -3.1675639152526855
    7. 't' → logprob: -3.2925639152526855
    8. 'v' → logprob: -3.6675639152526855
    9. '_direction' → logprob: -3.6675639152526855
    10. '_vec' → logprob: -3.7925639152526855

Token 711: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.009118515066802502
    2. ' in' → logprob: -4.759118556976318
    3. '   ' → logprob: -8.50911808013916
    4. 'on' → logprob: -8.63411808013916
    5. 'inside' → logprob: -10.50911808013916
    6. 'p' → logprob: -11.50911808013916
    7. 'def' → logprob: -11.63411808013916
    8. ' entirely' → logprob: -11.88411808013916
    9. ' on' → logprob: -11.88411808013916
    10. 'ent' → logprob: -12.00911808013916

Token 712: ' the' (ID: 290)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.03366414085030556
    2. 'the' → logprob: -3.6586642265319824
    3. ' plane' → logprob: -5.033664226531982
    4. 'triangle' → logprob: -7.658664226531982
    5. ' the' → logprob: -8.658663749694824
    6. 'a' → logprob: -9.658663749694824
    7. 'p' → logprob: -10.158663749694824
    8. 'segment' → logprob: -10.658663749694824
    9. '-plane' → logprob: -12.158663749694824
    10. 'vector' → logprob: -12.158663749694824

Token 713: ' plane' (ID: 16499)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.000831782293971628
    2. ' plane' → logprob: -7.125831604003906
    3. 'ab' → logprob: -11.250831604003906
    4. 'plan' → logprob: -12.750831604003906
    5. 'line' → logprob: -12.875831604003906
    6. 'a' → logprob: -13.000831604003906
    7. '
' → logprob: -13.625831604003906
    8. '   ' → logprob: -13.625831604003906
    9. 'segment' → logprob: -14.250831604003906
    10. 'None' → logprob: -14.500831604003906

Token 714: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04808294028043747
    2. '#' → logprob: -3.6730828285217285
    3. '       ' → logprob: -4.4230828285217285
    4. 'return' → logprob: -6.0480828285217285
    5. 'if' → logprob: -6.2980828285217285
    6. '
' → logprob: -6.6730828285217285
    7. ' if' → logprob: -6.9230828285217285
    8. 's' → logprob: -7.5480828285217285
    9. 't' → logprob: -7.5480828285217285
    10. ' #' → logprob: -7.7980828285217285

Token 715: ' check' (ID: 2371)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10741505771875381
    2. 't' → logprob: -2.607414960861206
    3. 'return' → logprob: -4.107415199279785
    4. 'for' → logprob: -5.232415199279785
    5. ' #' → logprob: -6.607415199279785
    6. 'u' → logprob: -6.732415199279785
    7. 'proj' → logprob: -7.107415199279785
    8. '   ' → logprob: -7.357415199279785
    9. ' t' → logprob: -7.732415199279785
    10. 'points' → logprob: -8.482415199279785

Token 716: ' overlap' (ID: 56631)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.062309253960847855
    2. '#' → logprob: -3.4373092651367188
    3. 'for' → logprob: -4.312309265136719
    4. 'is' → logprob: -5.687309265136719
    5. 'return' → logprob: -5.812309265136719
    6. 'segments' → logprob: -5.937309265136719
    7. 'points' → logprob: -6.187309265136719
    8. 'on' → logprob: -6.687309265136719
    9. 'segment' → logprob: -6.937309265136719
    10. ' if' → logprob: -7.062309265136719

Token 717: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048481982201337814
    2. ' with' → logprob: -3.6734819412231445
    3. 'with' → logprob: -4.6734819412231445
    4. '       ' → logprob: -5.9234819412231445
    5. 'def' → logprob: -6.0484819412231445
    6. 'return' → logprob: -6.4234819412231445
    7. ' for' → logprob: -6.6734819412231445
    8. 'for' → logprob: -7.0484819412231445
    9. 's' → logprob: -7.1734819412231445
    10. ' if' → logprob: -7.7984819412231445

Token 718: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020848527550697327
    2. '#' → logprob: -5.020848751068115
    3. 'p' → logprob: -5.395848751068115
    4. '
' → logprob: -5.645848751068115
    5. '    
' → logprob: -6.645848751068115
    6. 't' → logprob: -6.895848751068115
    7. 'def' → logprob: -7.145848751068115
    8. 's' → logprob: -7.520848751068115
    9. ' p' → logprob: -7.520848751068115
    10. '       ' → logprob: -7.895848751068115

Token 719: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.9348391890525818
    2. 'for' → logprob: -0.9348391890525818
    3. 'if' → logprob: -1.9348392486572266
    4. 't' → logprob: -2.9348392486572266
    5. 'return' → logprob: -4.309839248657227
    6. 'def' → logprob: -6.059839248657227
    7. 'u' → logprob: -7.684839248657227
    8. 'dir' → logprob: -8.809839248657227
    9. '   ' → logprob: -9.309839248657227
    10. ' #' → logprob: -9.309839248657227

Token 720: ' Project' (ID: 8761)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7834124565124512
    2. 'for' → logprob: -1.0334124565124512
    3. 'if' → logprob: -2.283412456512451
    4. 't' → logprob: -2.908412456512451
    5. 'return' → logprob: -3.783412456512451
    6. 'def' → logprob: -5.158412456512451
    7. 'u' → logprob: -7.908412456512451
    8. 'edges' → logprob: -7.908412456512451
    9. 'proj' → logprob: -8.03341293334961
    10. 'dir' → logprob: -8.28341293334961

Token 721: ' to' (ID: 316)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5315365791320801
    2. 'def' → logprob: -1.40653657913208
    3. '#' → logprob: -3.03153657913208
    4. 'points' → logprob: -3.53153657913208
    5. 'd' → logprob: -3.78153657913208
    6. 'ab' → logprob: -4.40653657913208
    7. 't' → logprob: -4.40653657913208
    8. 'segment' → logprob: -4.65653657913208
    9. 'line' → logprob: -5.15653657913208
    10. 'onto' → logprob: -5.40653657913208

Token 722: ' ' (ID: 220)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.5859441161155701
    2. '2' → logprob: -2.085944175720215
    3. 'a' → logprob: -2.085944175720215
    4. '[' → logprob: -2.960944175720215
    5. 'def' → logprob: -3.585944175720215
    6. '[a' → logprob: -3.960944175720215
    7. '3' → logprob: -4.085944175720215
    8. 'plane' → logprob: -4.210944175720215
    9. 'the' → logprob: -4.210944175720215
    10. 'any' → logprob: -4.460944175720215

Token 723: '2' (ID: 17)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.8968000411987305
    2. 'ab' → logprob: -1.2718000411987305
    3. 'a' → logprob: -1.8968000411987305
    4. '[' → logprob: -2.2718000411987305
    5. 'def' → logprob: -3.8968000411987305
    6. '2' → logprob: -4.6468000411987305
    7. 'plane' → logprob: -5.0218000411987305
    8. '3' → logprob: -5.7718000411987305
    9. 'vector' → logprob: -6.0218000411987305
    10. 'the' → logprob: -6.0218000411987305

Token 724: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.25254982709884644
    2. 'D' → logprob: -1.5025498867034912
    3. 'def' → logprob: -7.502549648284912
    4. '0' → logprob: -11.00255012512207
    5. '1' → logprob: -11.75255012512207
    6. ' d' → logprob: -12.00255012512207
    7. ' D' → logprob: -12.25255012512207
    8. ' ' → logprob: -12.50255012512207
    9. '[' → logprob: -12.62755012512207
    10. '#' → logprob: -12.62755012512207

Token 725: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5056049823760986
    2. '
' → logprob: -1.7556049823760986
    3. '    
' → logprob: -2.3806049823760986
    4. '#' → logprob: -3.5056049823760986
    5. 'def' → logprob: -3.7556049823760986
    6. '       ' → logprob: -3.8806049823760986
    7. ' #' → logprob: -4.7556047439575195
    8. ':' → logprob: -5.0056047439575195
    9. ' 
' → logprob: -5.5056047439575195
    10. ' def' → logprob: -5.5056047439575195

Token 726: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -1.3635878562927246
    2. 'def' → logprob: -1.6135878562927246
    3. 'check' → logprob: -1.8635878562927246
    4. ' find' → logprob: -1.8635878562927246
    5. 'find' → logprob: -1.9885878562927246
    6. 'det' → logprob: -3.3635878562927246
    7. ' def' → logprob: -4.863587856292725
    8. 'get' → logprob: -4.988587856292725
    9. 'return' → logprob: -4.988587856292725
    10. '#' → logprob: -5.113587856292725

Token 727: ' intersection' (ID: 42002)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31378403306007385
    2. 'def' → logprob: -2.938784122467041
    3. ' ab' → logprob: -2.938784122467041
    4. ' points' → logprob: -3.313784122467041
    5. ' def' → logprob: -3.563784122467041
    6. '#' → logprob: -3.563784122467041
    7. ' return' → logprob: -4.313784122467041
    8. ' u' → logprob: -4.563784122467041
    9. 'ab' → logprob: -4.938784122467041
    10. ' vertices' → logprob: -5.063784122467041

Token 728: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3726732134819031
    2. '   ' → logprob: -1.4976732730865479
    3. '        
' → logprob: -2.747673273086548
    4. '    
' → logprob: -4.497673034667969
    5. '
' → logprob: -4.997673034667969
    6. '<|end|>' → logprob: -6.372673034667969
    7. ',' → logprob: -7.247673034667969
    8. '       
' → logprob: -7.872673034667969
    9. 'def' → logprob: -7.997673034667969
    10. '    ' → logprob: -7.997673034667969

Token 729: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15401673316955566
    2. '       ' → logprob: -2.1540167331695557
    3. '    
' → logprob: -4.779016494750977
    4. '
' → logprob: -4.904016494750977
    5. '        
' → logprob: -5.029016494750977
    6. '#' → logprob: -6.529016494750977
    7. '    ' → logprob: -7.279016494750977
    8. '        

' → logprob: -8.654016494750977
    9. 'def' → logprob: -8.716516494750977
    10. ',' → logprob: -8.716516494750977

Token 730: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.323495477437973
    2. '#' (adapté à ' #') → logprob: -1.8234955072402954
    3. 'def' → logprob: -3.073495388031006
    4. ' #' → logprob: -4.323495388031006
    5. 'plane' → logprob: -4.698495388031006
    6. 'axis' → logprob: -4.948495388031006
    7. 'normal' → logprob: -5.323495388031006
    8. ' plane' → logprob: -5.448495388031006
    9. 'u' → logprob: -5.573495388031006
    10. ' def' → logprob: -5.698495388031006

Token 731: ' Because' (ID: 13602)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2493920475244522
    2. '   ' → logprob: -2.499392032623291
    3. 'axis' → logprob: -3.249392032623291
    4. 'axes' → logprob: -3.749392032623291
    5. 'max' → logprob: -3.874392032623291
    6. 'return' → logprob: -4.624392032623291
    7. 'proj' → logprob: -4.874392032623291
    8. 'plane' → logprob: -4.874392032623291
    9. 'normal' → logprob: -4.999392032623291
    10. 'def' → logprob: -5.249392032623291

Token 732: ' the' (ID: 290)
  Prédit: ' normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' normal' → logprob: -0.3706226944923401
    2. 'normal' → logprob: -1.3706226348876953
    3. '   ' → logprob: -3.9956226348876953
    4. 'def' → logprob: -4.245622634887695
    5. '#' → logprob: -4.495622634887695
    6. ' the' → logprob: -5.620622634887695
    7. 'ab' → logprob: -6.620622634887695
    8. 'the' → logprob: -6.745622634887695
    9. ' plane' → logprob: -7.620622634887695
    10. ' def' → logprob: -7.620622634887695

Token 733: ' problem' (ID: 4792)
  Prédit: 'triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'triangle' → logprob: -0.5879170894622803
    2. 'normal' → logprob: -1.4629170894622803
    3. 'def' → logprob: -2.4629170894622803
    4. '#' → logprob: -2.5879170894622803
    5. 'plane' → logprob: -4.087917327880859
    6. ' normal' → logprob: -5.212917327880859
    7. ' triangle' → logprob: -5.212917327880859
    8. 'ab' → logprob: -5.587917327880859
    9. 'code' → logprob: -5.712917327880859
    10. ' code' → logprob: -5.962917327880859

Token 734: ' states' (ID: 9407)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.18043877184391022
    2. 'is' → logprob: -2.555438756942749
    3. ' continues' → logprob: -3.805438756942749
    4. '#' → logprob: -5.180438995361328
    5. 'def' → logprob: -5.430438995361328
    6. ' was' → logprob: -5.430438995361328
    7. ' of' → logprob: -5.555438995361328
    8. ':' → logprob: -5.680438995361328
    9. ' ends' → logprob: -5.805438995361328
    10. 'contin' → logprob: -5.930438995361328

Token 735: ' no' (ID: 860)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.2112605571746826
    2. ' that' → logprob: -1.3362605571746826
    3. 'the' → logprob: -1.4612605571746826
    4. 'that' → logprob: -2.7112605571746826
    5. ' we' → logprob: -3.3362605571746826
    6. '"' → logprob: -4.086260795593262
    7. ' "' → logprob: -4.336260795593262
    8. 'we' → logprob: -4.461260795593262
    9. 'def' → logprob: -4.711260795593262
    10. ' to' → logprob: -4.711260795593262

Token 736: ' deg' (ID: 5597)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' col' → logprob: -1.4173780679702759
    2. ' further' → logprob: -1.6673780679702759
    3. ' cop' → logprob: -2.1673779487609863
    4. ' more' → logprob: -2.1673779487609863
    5. 'col' → logprob: -3.0423779487609863
    6. 'more' → logprob: -3.5423779487609863
    7. 'intersection' → logprob: -3.9173779487609863
    8. ' additional' → logprob: -4.042377948760986
    9. 't' → logprob: -4.167377948760986
    10. ' intersection' → logprob: -4.292377948760986

Token 737: 'enerate' (ID: 15481)
  Prédit: 'enerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enerate' → logprob: -0.01197090558707714
    2. 'er' → logprob: -4.5119709968566895
    3. '```' → logprob: -8.011970520019531
    4. 'def' → logprob: -8.636970520019531
    5. 'enerated' → logprob: -9.136970520019531
    6. 'generate' → logprob: -9.761970520019531
    7. '   ' → logprob: -9.886970520019531
    8. '#' → logprob: -10.386970520019531
    9. 'f' → logprob: -10.511970520019531
    10. 'ate' → logprob: -10.886970520019531

Token 738: ' cases' (ID: 7911)
  Prédit: ' triangles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triangles' → logprob: -0.15667463839054108
    2. ' triangle' → logprob: -2.15667462348938
    3. 'tri' → logprob: -4.406674861907959
    4. 'triangle' → logprob: -4.531674861907959
    5. ' cases' → logprob: -5.281674861907959
    6. 'cases' → logprob: -7.406674861907959
    7. ' edges' → logprob: -8.4066743850708
    8. ' case' → logprob: -9.4066743850708
    9. ' tri' → logprob: -9.9066743850708
    10. '_triangle' → logprob: -10.1566743850708

Token 739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08155085146427155
    2. '   ' → logprob: -2.7065508365631104
    3. ' ,' → logprob: -5.4565510749816895
    4. '       ' → logprob: -5.9565510749816895
    5. '<|end|>' → logprob: -6.2065510749816895
    6. '    ' → logprob: -7.8315510749816895
    7. '.' → logprob: -7.8315510749816895
    8. ' we' → logprob: -8.206550598144531
    9. '    
' → logprob: -8.456550598144531
    10. '
' → logprob: -8.456550598144531

Token 740: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1705881357192993
    2. 'return' → logprob: -1.2955881357192993
    3. '#' → logprob: -1.5455881357192993
    4. ' return' → logprob: -1.6705881357192993
    5. ' #' → logprob: -5.42058801651001
    6. '       ' → logprob: -5.92058801651001
    7. ' u' → logprob: -6.67058801651001
    8. 'pass' → logprob: -6.79558801651001
    9. 'def' → logprob: -6.92058801651001
    10. ' raise' → logprob: -7.17058801651001

Token 741: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.35377734899520874
    2. 'can' → logprob: -1.2287774085998535
    3. 'return' → logprob: -5.8537774085998535
    4. ' return' → logprob: -7.4787774085998535
    5. 'continue' → logprob: -7.9787774085998535
    6. '   ' → logprob: -8.478776931762695
    7. ' assume' → logprob: -8.603776931762695
    8. 'raise' → logprob: -8.853776931762695
    9. 'project' → logprob: -9.228776931762695
    10. 'def' → logprob: -9.478776931762695

Token 742: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4394744336605072
    2. 'project' → logprob: -1.9394744634628296
    3. 'raise' → logprob: -2.43947434425354
    4. 'choose' → logprob: -2.68947434425354
    5. '   ' → logprob: -4.314474582672119
    6. '#' → logprob: -4.564474582672119
    7. 'def' → logprob: -4.689474582672119
    8. ' return' → logprob: -4.939474582672119
    9. 'use' → logprob: -5.564474582672119
    10. ' project' → logprob: -5.564474582672119

Token 743: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.14670582115650177
    2. 'True' → logprob: -2.0217058658599854
    3. 'is' → logprob: -6.771705627441406
    4. ' False' → logprob: -6.896705627441406
    5. 'None' → logprob: -6.896705627441406
    6. 'segment' → logprob: -7.646705627441406
    7. ' True' → logprob: -8.646705627441406
    8. 'not' → logprob: -9.521705627441406
    9. 'point' → logprob: -10.146705627441406
    10. 'any' → logprob: -10.521705627441406

Token 744: ' here' (ID: 2105)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006206889171153307
    2. '   ' → logprob: -5.13120698928833
    3. '	return' → logprob: -9.381206512451172
    4. '	' → logprob: -9.756206512451172
    5. '
' → logprob: -10.131206512451172
    6. 'return' → logprob: -10.506206512451172
    7. '        
' → logprob: -11.006206512451172
    8. '           ' → logprob: -11.381206512451172
    9. '	   ' → logprob: -11.506206512451172
    10. '    
' → logprob: -11.506206512451172

Token 745: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003930192324332893
    2. '   ' → logprob: -8.37539291381836
    3. '
' → logprob: -9.25039291381836
    4. '	' → logprob: -10.62539291381836
    5. '	return' → logprob: -11.12539291381836
    6. 'return' → logprob: -11.37539291381836
    7. '        
' → logprob: -11.87539291381836
    8. '           ' → logprob: -13.12539291381836
    9. '    
' → logprob: -13.37539291381836
    10. '	       ' → logprob: -13.75039291381836

Token 746: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004090274218469858
    2. '   ' → logprob: -5.504090309143066
    3. 'return' → logprob: -11.629090309143066
    4. '           ' → logprob: -13.754090309143066
    5. '	return' → logprob: -13.879090309143066
    6. ' return' → logprob: -15.129090309143066
    7. '	   ' → logprob: -15.254090309143066
    8. '	' → logprob: -15.254090309143066
    9. '    
' → logprob: -16.50408935546875
    10. '        
' → logprob: -16.62908935546875

Token 747: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06222323328256607
    2. '       ' → logprob: -2.812223196029663
    3. ' return' → logprob: -8.437223434448242
    4. '   ' → logprob: -10.187223434448242
    5. '	return' → logprob: -14.562223434448242
    6. '           ' → logprob: -15.437223434448242
    7. '
' → logprob: -15.437223434448242
    8. '        
' → logprob: -15.687223434448242
    9. '{return' → logprob: -15.812223434448242
    10. ' ' → logprob: -16.937223434448242

Token 748: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001234428636962548
    2. ' False' → logprob: -9.000123023986816
    3. 'True' → logprob: -19.375123977661133
    4. 'false' → logprob: -19.875123977661133
    5. 'None' → logprob: -20.500123977661133
    6. '(False' → logprob: -21.125123977661133
    7. '   ' → logprob: -21.750123977661133
    8. '[]' → logprob: -22.000123977661133
    9. '    ' → logprob: -23.375123977661133
    10. '=False' → logprob: -23.500123977661133

Token 749: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12034137547016144
    2. '
' → logprob: -2.3703413009643555
    3. '    
' → logprob: -4.1203413009643555
    4. 'p' → logprob: -6.7453413009643555
    5. '  
' → logprob: -7.9953413009643555
    6. 't' → logprob: -8.120341300964355
    7. 'n' → logprob: -8.620341300964355
    8. '' → logprob: -8.870341300964355
    9. 'import' → logprob: -8.995341300964355
    10. '

' → logprob: -9.245341300964355

Token 750: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0028279386460781097
    2. '   ' → logprob: -5.877828121185303
    3. ' t' → logprob: -11.252827644348145
    4. '```' → logprob: -12.627827644348145
    5. 'else' → logprob: -12.752827644348145
    6. '
' → logprob: -13.627827644348145
    7. 'numer' → logprob: -14.502827644348145
    8. 'num' → logprob: -14.502827644348145
    9. '    
' → logprob: -14.752827644348145
    10. '

' → logprob: -14.877827644348145

Token 751: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -1.3856492842023727e-06
    2. 'num' → logprob: -13.750000953674316
    3. ' t' → logprob: -15.500000953674316
    4. 'w' → logprob: -17.000001907348633
    5. 'numer' → logprob: -17.250001907348633
    6. '```' → logprob: -17.250001907348633
    7. 'u' → logprob: -17.375001907348633
    8. 'n' → logprob: -18.625001907348633
    9. '   ' → logprob: -19.250001907348633
    10. 'r' → logprob: -19.750001907348633

Token 752: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022484004497528
    2. '=' → logprob: -1.9102247953414917
    3. ')' → logprob: -14.910224914550781
    4. '=int' → logprob: -16.53522491455078
    5. 's' → logprob: -17.03522491455078
    6. '=float' → logprob: -17.16022491455078
    7. ' =
' → logprob: -17.41022491455078
    8. ' ' → logprob: -17.41022491455078
    9. '=}' → logprob: -17.41022491455078
    10. '0' → logprob: -18.16022491455078

Token 753: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.6215595006942749
    2. '(dot' → logprob: -1.121559500694275
    3. ' dot' → logprob: -2.3715596199035645
    4. ' (' → logprob: -3.9965596199035645
    5. '-dot' → logprob: -4.1215596199035645
    6. '-(' → logprob: -5.7465596199035645
    7. '-' → logprob: -6.1215596199035645
    8. ' -' → logprob: -6.7465596199035645
    9. '(' → logprob: -6.8715596199035645
    10. '(-' → logprob: -7.1215596199035645

Token 754: '(normal' (ID: 100011)
  Prédit: '(normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(normal' → logprob: -0.03912676125764847
    2. '(vector' → logprob: -3.6641268730163574
    3. 'normal' → logprob: -4.539126873016357
    4. 'vector' → logprob: -6.289126873016357
    5. '(' → logprob: -8.5391263961792
    6. '(
' → logprob: -12.6641263961792
    7. ' normal' → logprob: -12.9141263961792
    8. ' vector' → logprob: -13.2891263961792
    9. ' (' → logprob: -14.7891263961792
    10. '(norm' → logprob: -15.0391263961792

Token 755: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004758818540722132
    2. '(vector' → logprob: -5.629758834838867
    3. 'vector' → logprob: -6.879758834838867
    4. '(' → logprob: -10.004758834838867
    5. ',[' → logprob: -10.254758834838867
    6. ' ,' → logprob: -10.879758834838867
    7. ',
' → logprob: -11.754758834838867
    8. ' vector' → logprob: -12.129758834838867
    9. ',(' → logprob: -12.254758834838867
    10. '[' → logprob: -12.754758834838867

Token 756: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.00026407750556245446
    2. ' vector' → logprob: -8.250264167785645
    3. '(vector' → logprob: -12.875264167785645
    4. '   ' → logprob: -16.375263214111328
    5. ' ' → logprob: -16.625263214111328
    6. ')' → logprob: -16.625263214111328
    7. '[' → logprob: -17.750263214111328
    8. '(' → logprob: -18.125263214111328
    9. '.vector' → logprob: -18.500263214111328
    10. '	vector' → logprob: -18.625263214111328

Token 757: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -6.2729995988775045e-06
    2. 'sub' → logprob: -12.000006675720215
    3. '_' → logprob: -16.6250057220459
    4. 'Sub' → logprob: -18.0000057220459
    5. 'vector' → logprob: -18.5000057220459
    6. '[' → logprob: -19.1250057220459
    7. '[sub' → logprob: -19.8750057220459
    8. 's' → logprob: -20.2500057220459
    9. '[](' → logprob: -20.2500057220459
    10. '(vector' → logprob: -20.2500057220459

Token 758: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00012237003829795867
    2. 'a' → logprob: -9.5001220703125
    3. '(p' → logprob: -10.0001220703125
    4. '(' → logprob: -13.2501220703125
    5. ' (' → logprob: -16.1251220703125
    6. 'p' → logprob: -16.3751220703125
    7. '(
' → logprob: -16.7501220703125
    8. '((' → logprob: -17.0001220703125
    9. '[a' → logprob: -17.6251220703125
    10. '   ' → logprob: -17.8751220703125

Token 759: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20899192988872528
    2. 'p' → logprob: -2.2089920043945312
    3. ',p' → logprob: -2.5839920043945312
    4. '(p' → logprob: -5.958992004394531
    5. ' ,' → logprob: -7.458992004394531
    6. ' p' → logprob: -9.458992004394531
    7. '(' → logprob: -10.333992004394531
    8. ')' → logprob: -11.583992004394531
    9. '```' → logprob: -11.833992004394531
    10. ' ' → logprob: -12.333992004394531

Token 760: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007099286303855479
    2. ' p' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.750709533691406
    4. '(p' → logprob: -19.750709533691406
    5. '<p' → logprob: -20.250709533691406
    6. '	p' → logprob: -20.375709533691406
    7. ')p' → logprob: -20.500709533691406
    8. '[p' → logprob: -20.750709533691406
    9. ',p' → logprob: -22.125709533691406
    10. ')' → logprob: -22.125709533691406

Token 761: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ')' → logprob: -21.0
    3. '۱' → logprob: -21.75
    4. '১' → logprob: -22.0
    5. ' ' → logprob: -22.125
    6. '１' → logprob: -22.125
    7. '```' → logprob: -22.125
    8. 'p' → logprob: -22.25
    9. '१' → logprob: -22.875
    10. '[' → logprob: -23.625

Token 762: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003210627008229494
    2. '))' → logprob: -5.753210544586182
    3. ' )' → logprob: -10.62821102142334
    4. ')/' → logprob: -11.87821102142334
    5. '   ' → logprob: -15.12821102142334
    6. '])' → logprob: -15.12821102142334
    7. ')
' → logprob: -15.25321102142334
    8. '`)' → logprob: -15.37821102142334
    9. '))/' → logprob: -15.75321102142334
    10. ')`' → logprob: -15.75321102142334

Token 763: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.03415250778198242
    2. '/' → logprob: -3.4091525077819824
    3. ')' → logprob: -7.659152507781982
    4. '/d' → logprob: -10.53415298461914
    5. ' /
' → logprob: -13.03415298461914
    6. ')/' → logprob: -13.15915298461914
    7. '   ' → logprob: -13.53415298461914
    8. ' )' → logprob: -13.78415298461914
    9. '/
' → logprob: -14.65915298461914
    10. '()' → logprob: -15.03415298461914

Token 764: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.00012368128227535635
    2. ' denom' → logprob: -9.000123977661133
    3. 'dot' → logprob: -16.000123977661133
    4. '   ' → logprob: -17.125123977661133
    5. 'd' → logprob: -18.000123977661133
    6. ' den' → logprob: -18.250123977661133
    7. 'float' → logprob: -18.625123977661133
    8. ' ' → logprob: -20.000123977661133
    9. 'deny' → logprob: -20.000123977661133
    10. '-den' → logprob: -20.500123977661133

Token 765: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0213181059807539
    2. '
' → logprob: -4.021317958831787
    3. ' if' → logprob: -6.021317958831787
    4. '    
' → logprob: -8.521318435668945
    5. 'if' → logprob: -8.771318435668945
    6. ')' → logprob: -9.521318435668945
    7. ' ' → logprob: -10.021318435668945
    8. '<|end|>' → logprob: -10.146318435668945
    9. '  ' → logprob: -10.396318435668945
    10. '\n' → logprob: -10.646318435668945

Token 766: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021646082401275635
    2. ' if' → logprob: -3.896646022796631
    3. 'if' → logprob: -7.396646022796631
    4. '<|end|>' → logprob: -8.021646499633789
    5. '  ' → logprob: -10.146646499633789
    6. ')' → logprob: -10.146646499633789
    7. '	if' → logprob: -10.271646499633789
    8. '    
' → logprob: -11.396646499633789
    9. ' ' → logprob: -11.521646499633789
    10. '    ' → logprob: -12.271646499633789

Token 767: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0012218938209116459
    2. ' if' → logprob: -6.751221656799316
    3. '   ' → logprob: -9.876221656799316
    4. '0' → logprob: -16.126222610473633
    5. ')' → logprob: -16.251222610473633
    6. 't' → logprob: -17.001222610473633
    7. 'None' → logprob: -17.001222610473633
    8. 'If' → logprob: -17.501222610473633
    9. ' ' → logprob: -17.626222610473633
    10. '	if' → logprob: -18.626222610473633

Token 768: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.011114437133073807
    2. ' t' → logprob: -4.636114597320557
    3. '(t' → logprob: -6.636114597320557
    4. '   ' → logprob: -11.386114120483398
    5. ' not' → logprob: -11.386114120483398
    6. 'not' → logprob: -11.511114120483398
    7. ' (' → logprob: -11.761114120483398
    8. '(' → logprob: -13.261114120483398
    9. ' ' → logprob: -13.761114120483398
    10. '`t' → logprob: -14.136114120483398

Token 769: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04858759790658951
    2. '<' → logprob: -3.0485875606536865
    3. ' ' → logprob: -16.173587799072266
    4. ' >' → logprob: -16.798587799072266
    5. '<t' → logprob: -17.423587799072266
    6. '[' → logprob: -17.673587799072266
    7. ' <=' → logprob: -17.798587799072266
    8. '>' → logprob: -18.673587799072266
    9. ')' → logprob: -18.798587799072266
    10. '   ' → logprob: -19.173587799072266

Token 770: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03821201249957085
    2. '0' → logprob: -3.2882120609283447
    3. ' -' → logprob: -8.913211822509766
    4. ' ' → logprob: -10.413211822509766
    5. '-\' → logprob: -12.413211822509766
    6. '-.' → logprob: -14.163211822509766
    7. '   ' → logprob: -15.788211822509766
    8. '[' → logprob: -15.913211822509766
    9. '−' → logprob: -16.038211822509766
    10. '-_' → logprob: -16.163211822509766

Token 771: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.5000057220459
    4. '0' → logprob: -18.6250057220459
    5. '  ' → logprob: -19.0000057220459
    6. '-' → logprob: -19.0000057220459
    7. '2' → logprob: -19.2500057220459
    8. '9' → logprob: -19.5000057220459
    9. '(' → logprob: -19.6875057220459
    10. '```' → logprob: -20.0000057220459

Token 772: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11154410988092422
    2. '1' → logprob: -2.361544132232666
    3. '-' → logprob: -4.486544132232666
    4. ' ' → logprob: -11.861543655395508
    5. '   ' → logprob: -13.361543655395508
    6. '```' → logprob: -13.611543655395508
    7. ' -' → logprob: -13.736543655395508
    8. '9' → logprob: -13.861543655395508
    9. '
' → logprob: -14.861543655395508
    10. '``' → logprob: -14.986543655395508

Token 773: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02976194955408573
    2. '9' → logprob: -3.529762029647827
    3. '15' → logprob: -12.029762268066406
    4. '10' → logprob: -13.029762268066406
    5. '12' → logprob: -13.654762268066406
    6. '   ' → logprob: -14.529762268066406
    7. '```' → logprob: -14.779762268066406
    8. ' -' → logprob: -15.154762268066406
    9. '14' → logprob: -15.404762268066406
    10. ' ' → logprob: -15.779762268066406

Token 774: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0005610156804323196
    2. '15' → logprob: -7.875561237335205
    3. '12' → logprob: -8.750560760498047
    4. '10' → logprob: -11.000560760498047
    5. '14' → logprob: -12.250560760498047
    6. '-' → logprob: -14.750560760498047
    7. '13' → logprob: -14.875560760498047
    8. '11' → logprob: -15.875560760498047
    9. '09' → logprob: -16.125560760498047
    10. '8' → logprob: -16.375560760498047

Token 775: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.002637726254761219
    2. 'or' → logprob: -6.00263786315918
    3. '	or' → logprob: -9.87763786315918
    4. ':' → logprob: -10.12763786315918
    5. '   ' → logprob: -10.75263786315918
    6. ' ' → logprob: -10.75263786315918
    7. '<|end|>' → logprob: -11.37763786315918
    8. ':return' → logprob: -11.75263786315918
    9. '    ' → logprob: -13.00263786315918
    10. '  ' → logprob: -13.25263786315918

Token 776: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.000575432030018419
    2. ' t' → logprob: -7.500575542449951
    3. '   ' → logprob: -10.750575065612793
    4. '  ' → logprob: -14.875575065612793
    5. ' ' → logprob: -15.375575065612793
    6. '	t' → logprob: -15.750575065612793
    7. '1' → logprob: -16.00057601928711
    8. '(t' → logprob: -16.25057601928711
    9. '`t' → logprob: -17.00057601928711
    10. '    ' → logprob: -18.12557601928711

Token 777: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3133203387260437
    2. ' >' → logprob: -1.3133203983306885
    3. ' ' → logprob: -10.43832015991211
    4. '   ' → logprob: -11.18832015991211
    5. '1' → logprob: -11.56332015991211
    6. '-' → logprob: -12.93832015991211
    7. '[' → logprob: -14.06332015991211
    8. '    ' → logprob: -14.18832015991211
    9. '  ' → logprob: -14.18832015991211
    10. ' -' → logprob: -15.43832015991211

Token 778: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9743012671824545e-05
    2. ' ' → logprob: -11.125020027160645
    3. '(' → logprob: -12.500020027160645
    4. '   ' → logprob: -13.625020027160645
    5. '  ' → logprob: -18.375019073486328
    6. ' (' → logprob: -19.875019073486328
    7. '{' → logprob: -20.750019073486328
    8. '```' → logprob: -20.750019073486328
    9. '    ' → logprob: -20.875019073486328
    10. '	' → logprob: -21.125019073486328

Token 779: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.875036239624023
    3. '(' → logprob: -11.125036239624023
    4. '   ' → logprob: -13.125036239624023
    5. '  ' → logprob: -17.125036239624023
    6. '{' → logprob: -18.000036239624023
    7. ' (' → logprob: -18.250036239624023
    8. '    ' → logprob: -19.375036239624023
    9. '`' → logprob: -19.625036239624023
    10. '	' → logprob: -20.125036239624023

Token 780: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00248909555375576
    2. ' +' → logprob: -6.00248908996582
    3. 'e' → logprob: -11.25248908996582
    4. '1' → logprob: -15.25248908996582
    5. '0' → logprob: -17.12748908996582
    6. '   ' → logprob: -17.12748908996582
    7. '＋' → logprob: -17.12748908996582
    8. '```' → logprob: -17.12748908996582
    9. '	' → logprob: -17.25248908996582
    10. '.' → logprob: -17.25248908996582

Token 781: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008615635335445404
    2. ' ' → logprob: -4.758615493774414
    3. '   ' → logprob: -14.008615493774414
    4. '  ' → logprob: -15.508615493774414
    5. '-' → logprob: -17.508615493774414
    6. '	' → logprob: -18.633615493774414
    7. '
' → logprob: -18.883615493774414
    8. '```' → logprob: -19.258615493774414
    9. ' ' → logprob: -19.633615493774414
    10. '+' → logprob: -19.633615493774414

Token 782: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.888114098226652e-05
    2. ' ' → logprob: -9.375088691711426
    3. '-' → logprob: -12.500088691711426
    4. '   ' → logprob: -15.375088691711426
    5. '  ' → logprob: -17.250089645385742
    6. ' -' → logprob: -19.625089645385742
    7. '```' → logprob: -19.750089645385742
    8. '
' → logprob: -20.625089645385742
    9. '(' → logprob: -21.000089645385742
    10. '	' → logprob: -21.250089645385742

Token 783: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5760552883148193
    2. '-' → logprob: -0.8260552883148193
    3. '1' → logprob: -9.826055526733398
    4. '-e' → logprob: -9.826055526733398
    5. '
' → logprob: -12.701055526733398
    6. '   ' → logprob: -13.576055526733398
    7. '.e' → logprob: -14.326055526733398
    8. ' -' → logprob: -14.326055526733398
    9. '[-' → logprob: -14.576055526733398
    10. '[' → logprob: -14.701055526733398

Token 784: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. '9' → logprob: -16.875
    3. ' -' → logprob: -17.25
    4. '{-' → logprob: -18.375
    5. '```' → logprob: -18.375
    6. '   ' → logprob: -19.625
    7. '−' → logprob: -20.25
    8. '``' → logprob: -20.375
    9. 'e' → logprob: -20.9375
    10. '0' → logprob: -21.4375

Token 785: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.704273118884885e-07
    2. '-' → logprob: -14.750000953674316
    3. '09' → logprob: -15.500000953674316
    4. '15' → logprob: -16.5
    5. '10' → logprob: -17.1875
    6. '12' → logprob: -17.75
    7. '```' → logprob: -17.75
    8. '8' → logprob: -18.1875
    9. '6' → logprob: -18.4375
    10. ' ' → logprob: -18.75

Token 786: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0059343669563531876
    2. ':
' → logprob: -5.630934238433838
    3. ':return' → logprob: -6.130934238433838
    4. '   ' → logprob: -8.880934715270996
    5. '       ' → logprob: -11.880934715270996
    6. ':
' → logprob: -12.255934715270996
    7. ' :' → logprob: -12.630934715270996
    8. ':

' → logprob: -14.255934715270996
    9. '):' → logprob: -14.630934715270996
    10. 'return' → logprob: -14.880934715270996

Token 787: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28293219208717346
    2. ':' → logprob: -1.532932162284851
    3. '   ' → logprob: -3.6579322814941406
    4. ':return' → logprob: -5.782932281494141
    5. ':
' → logprob: -6.532932281494141
    6. ' return' → logprob: -9.65793228149414
    7. '    ' → logprob: -10.78293228149414
    8. '	' → logprob: -11.15793228149414
    9. '.' → logprob: -11.15793228149414
    10. ' :' → logprob: -11.28293228149414

Token 788: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18646296858787537
    2. 'return' (adapté à ' return') → logprob: -2.436462879180908
    3. ' return' → logprob: -3.186462879180908
    4. '       ' → logprob: -3.186462879180908
    5. '	return' → logprob: -12.311463356018066
    6. '           ' → logprob: -15.561463356018066
    7. '  ' → logprob: -15.686463356018066
    8. ' ' → logprob: -15.686463356018066
    9. '    ' → logprob: -15.936463356018066
    10. '{return' → logprob: -16.18646240234375

Token 789: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.941850526549388e-06
    2. ' False' → logprob: -11.750007629394531
    3. '(False' → logprob: -22.00000762939453
    4. 'True' → logprob: -22.75000762939453
    5. '_false' → logprob: -23.75000762939453
    6. 'false' → logprob: -24.12500762939453
    7. '=False' → logprob: -25.12500762939453
    8. '.False' → logprob: -26.87500762939453
    9. 'None' → logprob: -27.87500762939453
    10. 'FALSE' → logprob: -27.87500762939453

Token 790: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08082816749811172
    2. '
' → logprob: -3.0808281898498535
    3. '    
' → logprob: -3.4558281898498535
    4. '

' → logprob: -10.080827713012695
    5. '
' → logprob: -10.330827713012695
    6. 'p' → logprob: -10.830827713012695
    7. '  
' → logprob: -10.955827713012695
    8. '        
' → logprob: -11.455827713012695
    9. '    

' → logprob: -11.580827713012695
    10. '
    
' → logprob: -11.955827713012695

Token 791: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4073192775249481
    2. 'p' → logprob: -1.5323193073272705
    3. 'intersection' → logprob: -2.6573193073272705
    4. 'inter' → logprob: -4.032319068908691
    5. 'point' → logprob: -4.282319068908691
    6. '    
' → logprob: -4.282319068908691
    7. 'ip' → logprob: -6.657319068908691
    8. 'I' → logprob: -7.532319068908691
    9. 'i' → logprob: -7.907319068908691
    10. 'q' → logprob: -8.407319068908691

Token 792: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' (adapté à ' intersection') → logprob: -0.024448730051517487
    2. 'inter' → logprob: -4.274448871612549
    3. 'p' → logprob: -4.774448871612549
    4. 'point' → logprob: -6.524448871612549
    5. 'ip' → logprob: -8.64944839477539
    6. 'i' → logprob: -9.89944839477539
    7. 'pi' → logprob: -10.27444839477539
    8. 'int' → logprob: -11.14944839477539
    9. 'I' → logprob: -11.27444839477539
    10. 'q' → logprob: -11.52444839477539

Token 793: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48113104701042175
    2. '=' → logprob: -0.9811310768127441
    3. '_point' → logprob: -4.981131076812744
    4. '_' → logprob: -8.856130599975586
    5. '_=' → logprob: -11.606130599975586
    6. '_pt' → logprob: -12.606130599975586
    7. '=_' → logprob: -13.481130599975586
    8. 'Point' → logprob: -13.481130599975586
    9. 'point' → logprob: -13.731130599975586
    10. '_p' → logprob: -13.981130599975586

Token 794: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.001474271877668798
    2. '[' → logprob: -7.251474380493164
    3. ' [' → logprob: -7.501474380493164
    4. '[a' → logprob: -8.501474380493164
    5. '[t' → logprob: -12.251474380493164
    6. '[v' → logprob: -14.001474380493164
    7. '[u' → logprob: -14.126474380493164
    8. '[i' → logprob: -14.626474380493164
    9. '[x' → logprob: -14.626474380493164
    10. '[
' → logprob: -14.876474380493164

Token 795: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9361264946837764e-07
    2. ' p' → logprob: -15.75
    3. '   ' → logprob: -17.875
    4. '	p' → logprob: -19.75
    5. '<p' → logprob: -20.75
    6. '```' → logprob: -20.875
    7. '
' → logprob: -21.0
    8. '[p' → logprob: -21.875
    9. '    
' → logprob: -21.875
    10. '(p' → logprob: -21.875

Token 796: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0802738870552275e-05
    2. 'p' → logprob: -11.50001049041748
    3. 'i' → logprob: -15.12501049041748
    4. '[i' → logprob: -15.87501049041748
    5. '[' → logprob: -16.625011444091797
    6. '[p' → logprob: -17.125011444091797
    7. '   ' → logprob: -17.375011444091797
    8. ' p' → logprob: -17.500011444091797
    9. '```' → logprob: -18.875011444091797
    10. ' ' → logprob: -19.000011444091797

Token 797: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5332478142227046e-05
    2. 'i' → logprob: -11.250015258789062
    3. '[j' → logprob: -13.500015258789062
    4. '[' → logprob: -14.250015258789062
    5. '[k' → logprob: -16.250015258789062
    6. '_i' → logprob: -18.625015258789062
    7. '[idx' → logprob: -19.125015258789062
    8. '   ' → logprob: -19.500015258789062
    9. '[
' → logprob: -19.625015258789062
    10. '[index' → logprob: -19.750015258789062

Token 798: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06995176523923874
    2. ' +' → logprob: -2.6949517726898193
    3. ']' → logprob: -11.944952011108398
    4. ']+' → logprob: -12.444952011108398
    5. '+i' → logprob: -13.194952011108398
    6. ' plus' → logprob: -14.569952011108398
    7. '<|end|>' → logprob: -14.569952011108398
    8. '+t' → logprob: -15.194952011108398
    9. '[' → logprob: -15.319952011108398
    10. '+p' → logprob: -15.319952011108398

Token 799: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0052526104263961315
    2. ' +' → logprob: -5.255252838134766
    3. '+d' → logprob: -11.005252838134766
    4. '+i' → logprob: -13.380252838134766
    5. '+t' → logprob: -14.755252838134766
    6. '+p' → logprob: -15.755252838134766
    7. '+c' → logprob: -17.130252838134766
    8. '+D' → logprob: -17.130252838134766
    9. '+r' → logprob: -17.380252838134766
    10. ' plus' → logprob: -17.630252838134766

Token 800: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1627892702817917
    2. 'd' → logprob: -1.912789225578308
    3. ' t' → logprob: -6.037789344787598
    4. ' d' → logprob: -8.662789344787598
    5. '   ' → logprob: -13.162789344787598
    6. ' ' → logprob: -16.03778839111328
    7. '	d' → logprob: -16.78778839111328
    8. 'td' → logprob: -16.78778839111328
    9. '	t' → logprob: -17.53778839111328
    10. 'dt' → logprob: -18.03778839111328

Token 801: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14107707142829895
    2. '*d' → logprob: -2.1410770416259766
    3. ' *' → logprob: -4.266077041625977
    4. 'd' → logprob: -11.516077041625977
    5. '[d' → logprob: -13.391077041625977
    6. '[i' → logprob: -15.391077041625977
    7. '*i' → logprob: -15.641077041625977
    8. '   ' → logprob: -16.141077041625977
    9. '**' → logprob: -16.266077041625977
    10. ' d' → logprob: -16.516077041625977

Token 802: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.494741632603109e-05
    2. ' d' → logprob: -9.37508487701416
    3. '	d' → logprob: -16.625085830688477
    4. '(d' → logprob: -17.125085830688477
    5. ')d' → logprob: -18.625085830688477
    6. '   ' → logprob: -19.250085830688477
    7. '_d' → logprob: -19.375085830688477
    8. '$d' → logprob: -20.375085830688477
    9. '"d' → logprob: -20.375085830688477
    10. '*d' → logprob: -20.625085830688477

Token 803: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -18.0
    3. ' [' → logprob: -20.875
    4. 'i' → logprob: -22.375
    5. '[
' → logprob: -22.75
    6. '[I' → logprob: -22.875
    7. ' i' → logprob: -23.125
    8. '(i' → logprob: -24.375
    9. '```' → logprob: -25.0
    10. '*i' → logprob: -25.75

Token 804: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2132076472043991
    2. ' for' → logprob: -1.7132076025009155
    3. 'for' → logprob: -4.463207721710205
    4. '   ' → logprob: -9.588207244873047
    5. '[i' → logprob: -9.963207244873047
    6. ' ]' → logprob: -10.338207244873047
    7. '	for' → logprob: -10.838207244873047
    8. ' ' → logprob: -11.213207244873047
    9. ')' → logprob: -11.963207244873047
    10. '<|end|>' → logprob: -12.588207244873047

Token 805: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029756510630249977
    2. 'for' → logprob: -3.529756546020508
    3. '   ' → logprob: -12.279756546020508
    4. '	for' → logprob: -14.154756546020508
    5. '[i' → logprob: -15.154756546020508
    6. ' ' → logprob: -15.279756546020508
    7. '    ' → logprob: -17.029756546020508
    8. ']' → logprob: -17.154756546020508
    9. ' i' → logprob: -17.404756546020508
    10. '  ' → logprob: -17.529756546020508

Token 806: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000737442634999752
    2. ' range' → logprob: -7.25073766708374
    3. 'i' → logprob: -10.500737190246582
    4. ' i' → logprob: -18.7507381439209
    5. '(range' → logprob: -21.1257381439209
    6. ' ' → logprob: -21.1257381439209
    7. '   ' → logprob: -22.2507381439209
    8. '
' → logprob: -22.7507381439209
    9. '  ' → logprob: -23.0007381439209
    10. 'Range' → logprob: -23.3757381439209

Token 807: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.024575643241405487
    2. 'in' → logprob: -3.774575710296631
    3. ' range' → logprob: -7.024575710296631
    4. ' in' → logprob: -7.774575710296631
    5. '3' → logprob: -11.149575233459473
    6. '(range' → logprob: -12.399575233459473
    7. '(' → logprob: -14.524575233459473
    8. '0' → logprob: -15.774575233459473
    9. ' ' → logprob: -16.27457618713379
    10. 'ange' → logprob: -17.14957618713379

Token 808: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: 0.0
    2. ' range' → logprob: -17.0
    3. '3' → logprob: -21.5
    4. '(range' → logprob: -23.375
    5. '
' → logprob: -23.875
    6. '(' → logprob: -25.25
    7. 'Range' → logprob: -25.75
    8. '0' → logprob: -26.25
    9. 'r' → logprob: -26.25
    10. '```' → logprob: -26.75

Token 809: '(' (ID: 7)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.003177952254191041
    2. '(' → logprob: -5.753178119659424
    3. ' ' → logprob: -15.878177642822266
    4. '   ' → logprob: -16.503177642822266
    5. '(
' → logprob: -17.628177642822266
    6. ' (' → logprob: -19.128177642822266
    7. '[' → logprob: -20.253177642822266
    8. '(len' → logprob: -20.503177642822266
    9. '```' → logprob: -20.628177642822266
    10. '`' → logprob: -21.128177642822266

Token 810: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -18.875
    4. '３' → logprob: -21.5
    5. '۳' → logprob: -21.75
    6. '
' → logprob: -22.375
    7. 'len' → logprob: -22.875
    8. '  ' → logprob: -22.875
    9. '```' → logprob: -23.0
    10. '(' → logprob: -23.25

Token 811: ')]

' (ID: 56882)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015099779702723026
    2. ')]' → logprob: -6.501510143280029
    3. ')' → logprob: -12.001509666442871
    4. '   ' → logprob: -14.251509666442871
    5. ']
' → logprob: -14.751509666442871
    6. ' ]' → logprob: -14.876509666442871
    7. '])' → logprob: -17.751510620117188
    8. ']]' → logprob: -18.376510620117188
    9. '()]' → logprob: -18.626510620117188
    10. ']

' → logprob: -18.626510620117188

Token 812: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024109920486807823
    2. 'return' → logprob: -3.7741098403930664
    3. 'if' → logprob: -7.399109840393066
    4. ' return' → logprob: -8.524109840393066
    5. ' if' → logprob: -10.399109840393066
    6. '    
' → logprob: -11.024109840393066
    7. '	return' → logprob: -12.649109840393066
    8. '
' → logprob: -13.399109840393066
    9. '```' → logprob: -14.774109840393066
    10. '{return' → logprob: -15.024109840393066

Token 813: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.018153687939047813
    2. 'if' → logprob: -4.018153667449951
    3. ' return' → logprob: -12.64315414428711
    4. '   ' → logprob: -14.51815414428711
    5. ' if' → logprob: -16.64315414428711
    6. '	return' → logprob: -18.01815414428711
    7. 'Return' → logprob: -18.39315414428711
    8. '```' → logprob: -18.76815414428711
    9. '{return' → logprob: -18.76815414428711
    10. 'for' → logprob: -19.26815414428711

Token 814: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.023276928812265396
    2. 'if' → logprob: -3.7732770442962646
    3. ' return' → logprob: -10.773277282714844
    4. '   ' → logprob: -11.648277282714844
    5. ' if' → logprob: -13.898277282714844
    6. '#' → logprob: -15.023277282714844
    7. 'result' → logprob: -15.648277282714844
    8. 'Return' → logprob: -15.773277282714844
    9. '	return' → logprob: -16.773277282714844
    10. '```' → logprob: -17.648277282714844

Token 815: ' intersection' (ID: 42002)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.04347866773605347
    2. 'point' → logprob: -3.2934787273406982
    3. ' is' → logprob: -5.543478488922119
    4. 'not' → logprob: -6.543478488922119
    5. ' point' → logprob: -10.418478965759277
    6. ' not' → logprob: -10.543478965759277
    7. '(is' → logprob: -12.043478965759277
    8. '
' → logprob: -13.043478965759277
    9. 'p' → logprob: -13.793478965759277
    10. '(point' → logprob: -14.168478965759277

Token 816: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7620652318000793
    2. 'in' → logprob: -1.3870651721954346
    3. ')' → logprob: -2.1370651721954346
    4. ' is' → logprob: -2.5120651721954346
    5. ' not' → logprob: -3.1370651721954346
    6. 'is' → logprob: -4.137065410614014
    7. 'not' → logprob: -4.262065410614014
    8. '_in' → logprob: -6.637065410614014
    9. '   ' → logprob: -7.012065410614014
    10. '):
' → logprob: -7.012065410614014

Token 817: ' at' (ID: 540)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -1.0585659742355347
    2. ' not' → logprob: -1.1835659742355347
    3. 'not' → logprob: -1.3085659742355347
    4. ' point' → logprob: -3.558566093444824
    5. 'in' → logprob: -3.683566093444824
    6. 'inside' → logprob: -4.808566093444824
    7. 'None' → logprob: -5.308566093444824
    8. ' in' → logprob: -5.433566093444824
    9. ' None' → logprob: -6.058566093444824
    10. 'on' → logprob: -6.933566093444824

Token 818: ' endpoints' (ID: 76454)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07081618160009384
    2. 'vertices' → logprob: -3.9458162784576416
    3. 'vertex' → logprob: -4.0708160400390625
    4. 'point' → logprob: -4.5708160400390625
    5. 'is' → logprob: -4.6958160400390625
    6. 'p' → logprob: -5.6958160400390625
    7. 'endpoint' → logprob: -6.6958160400390625
    8. 'the' → logprob: -6.8208160400390625
    9. 'None' → logprob: -7.0708160400390625
    10. 'one' → logprob: -7.0708160400390625

Token 819: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.059219203889369965
    2. 'or' → logprob: -2.9342191219329834
    3. '   ' → logprob: -5.6842193603515625
    4. ':
' → logprob: -8.684219360351562
    5. ' and' → logprob: -8.809219360351562
    6. ':' → logprob: -8.934219360351562
    7. '==' → logprob: -9.309219360351562
    8. 'return' → logprob: -9.434219360351562
    9. ' return' → logprob: -9.684219360351562
    10. 'and' → logprob: -9.934219360351562

Token 820: ' it' (ID: 480)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4027171730995178
    2. 'if' → logprob: -1.402717113494873
    3. ' return' → logprob: -3.152717113494873
    4. ' if' → logprob: -3.277717113494873
    5. '   ' → logprob: -5.277717113494873
    6. 'or' → logprob: -12.277717590332031
    7. ' or' → logprob: -12.777717590332031
    8. 'for' → logprob: -13.152717590332031
    9. ' ' → logprob: -13.652717590332031
    10. '
' → logprob: -13.652717590332031

Token 821: ' counts' (ID: 28991)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6183193325996399
    2. ' is' → logprob: -1.8683192729949951
    3. ' return' → logprob: -1.8683192729949951
    4. '   ' → logprob: -2.368319272994995
    5. '       ' → logprob: -4.493319511413574
    6. 's' → logprob: -4.868319511413574
    7. 'is' → logprob: -5.243319511413574
    8. ' may' → logprob: -5.493319511413574
    9. '=' → logprob: -5.618319511413574
    10. ' might' → logprob: -5.618319511413574

Token 822: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3363962173461914
    2. ' and' → logprob: -1.9613962173461914
    3. 'and' → logprob: -2.2113962173461914
    4. 'return' → logprob: -3.5863962173461914
    5. 'if' → logprob: -6.086396217346191
    6. ' if' → logprob: -6.086396217346191
    7. ' or' → logprob: -6.586396217346191
    8. ' return' → logprob: -6.836396217346191
    9. 'or' → logprob: -8.586396217346191
    10. ',' → logprob: -9.336396217346191

Token 823: ' hitting' (ID: 34749)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01888272911310196
    2. ' True' → logprob: -4.018882751464844
    3. 'intersection' → logprob: -7.643882751464844
    4. 'on' → logprob: -8.768882751464844
    5. 'inter' → logprob: -9.393882751464844
    6. 'return' → logprob: -12.018882751464844
    7. 'inside' → logprob: -12.768882751464844
    8. 'segment' → logprob: -12.768882751464844
    9. ' intersection' → logprob: -13.643882751464844
    10. 'touch' → logprob: -14.768882751464844

Token 824: ' barrier' (ID: 38358)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9106807708740234
    2. 'return' → logprob: -1.0356807708740234
    3. ' if' → logprob: -2.1606807708740234
    4. ' return' → logprob: -2.4106807708740234
    5. 'if' → logprob: -3.2856807708740234
    6. '
' → logprob: -8.410680770874023
    7. '    
' → logprob: -10.785680770874023
    8. '  ' → logprob: -10.910680770874023
    9. ' ' → logprob: -11.285680770874023
    10. ' True' → logprob: -11.410680770874023

Token 825: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003189832204952836
    2. ' if' → logprob: -5.878190040588379
    3. ' and' → logprob: -8.753190040588379
    4. 'return' → logprob: -9.878190040588379
    5. ',' → logprob: -10.128190040588379
    6. 'if' → logprob: -10.253190040588379
    7. ' or' → logprob: -10.378190040588379
    8. ' return' → logprob: -10.878190040588379
    9. '
' → logprob: -11.378190040588379
    10. '       ' → logprob: -11.878190040588379

Token 826: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012727351859211922
    2. ' if' → logprob: -6.751272678375244
    3. '
' → logprob: -10.001273155212402
    4. 'if' → logprob: -10.501273155212402
    5. '    
' → logprob: -11.251273155212402
    6. ',' → logprob: -12.001273155212402
    7. ' and' → logprob: -12.376273155212402
    8. ' or' → logprob: -13.251273155212402
    9. 'return' → logprob: -14.001273155212402
    10. '       ' → logprob: -14.251273155212402

Token 827: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.958042562007904
    2. 'if' (adapté à ' if') → logprob: -0.958042562007904
    3. ' if' → logprob: -1.4580426216125488
    4. 'for' → logprob: -11.58304214477539
    5. 'return' → logprob: -11.95804214477539
    6. ' for' → logprob: -12.08304214477539
    7. ' return' → logprob: -14.08304214477539
    8. '	if' → logprob: -16.33304214477539
    9. '
' → logprob: -16.58304214477539
    10. ' ' → logprob: -17.20804214477539

Token 828: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.8649977445602417
    2. 'is' → logprob: -1.9899977445602417
    3. '(any' → logprob: -2.1149978637695312
    4. 'any' → logprob: -2.2399978637695312
    5. '(is' → logprob: -2.6149978637695312
    6. '(t' → logprob: -2.7399978637695312
    7. ' is' → logprob: -2.8649978637695312
    8. '(' → logprob: -2.8649978637695312
    9. 't' → logprob: -2.9899978637695312
    10. ' (' → logprob: -2.9899978637695312

Token 829: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.00232581770978868
    2. '(inter' → logprob: -6.377326011657715
    3. 'abs' → logprob: -7.877326011657715
    4. '((' → logprob: -9.002326011657715
    5. '([' → logprob: -9.377326011657715
    6. '(p' → logprob: -10.877326011657715
    7. '(' → logprob: -11.752326011657715
    8. '(
' → logprob: -13.002326011657715
    9. '(math' → logprob: -13.252326011657715
    10. 'intersection' → logprob: -13.377326011657715

Token 830: '(inter' (ID: 62819)
  Prédit: '(inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inter' → logprob: -0.000250491953920573
    2. 'intersection' → logprob: -8.500250816345215
    3. '(x' → logprob: -10.500250816345215
    4. '(p' → logprob: -11.125250816345215
    5. '(i' → logprob: -13.250250816345215
    6. '((' → logprob: -13.375250816345215
    7. '(coord' → logprob: -15.000250816345215
    8. '(' → logprob: -15.250250816345215
    9. '(co' → logprob: -15.375250816345215
    10. '(t' → logprob: -16.3752498626709

Token 831: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.000770436367020011
    2. 'ection' → logprob: -7.250770568847656
    3. 'sections' → logprob: -10.750770568847656
    4. 's' → logprob: -11.875770568847656
    5. 'ction' → logprob: -11.875770568847656
    6. 'estion' → logprob: -12.125770568847656
    7. '(section' → logprob: -12.375770568847656
    8. '<section' → logprob: -12.500770568847656
    9. 'action' → logprob: -12.625770568847656
    10. 'ese' → logprob: -12.875770568847656

Token 832: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -12.87500286102295
    3. '[
' → logprob: -15.75000286102295
    4. 'i' → logprob: -16.000003814697266
    5. '
' → logprob: -17.375003814697266
    6. '[j' → logprob: -17.625003814697266
    7. '_i' → logprob: -18.125003814697266
    8. '[index' → logprob: -18.875003814697266
    9. '[_' → logprob: -19.000003814697266
    10. ' [' → logprob: -19.000003814697266

Token 833: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31604859232902527
    2. ' -' → logprob: -1.3160486221313477
    3. ')' → logprob: -6.691048622131348
    4. '[i' → logprob: -7.066048622131348
    5. '[' → logprob: -8.066048622131348
    6. ']' → logprob: -9.191048622131348
    7. ' p' → logprob: -9.816048622131348
    8. '[p' → logprob: -9.816048622131348
    9. ' ' → logprob: -10.066048622131348
    10. '   ' → logprob: -10.441048622131348

Token 834: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0834306851029396
    2. ' -' → logprob: -2.583430767059326
    3. ')' → logprob: -5.583430767059326
    4. '-p' → logprob: -7.333430767059326
    5. '   ' → logprob: -10.333430290222168
    6. ' p' → logprob: -11.333430290222168
    7. 'p' → logprob: -11.583430290222168
    8. '[' → logprob: -11.708430290222168
    9. ' ' → logprob: -11.833430290222168
    10. ']' → logprob: -11.833430290222168

Token 835: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00041816019802354276
    2. 'endpoint' → logprob: -8.625417709350586
    3. 'point' → logprob: -9.500417709350586
    4. 'pi' → logprob: -10.000417709350586
    5. 'coord' → logprob: -10.125417709350586
    6. 'val' → logprob: -10.625417709350586
    7. 'x' → logprob: -11.000417709350586
    8. ' p' → logprob: -11.875417709350586
    9. 'v' → logprob: -12.000417709350586
    10. 'pt' → logprob: -12.250417709350586

Token 836: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008017649524845183
    2. 'oint' → logprob: -7.7508015632629395
    3. '[i' → logprob: -8.875802040100098
    4. 'oints' → logprob: -9.250802040100098
    5. 'i' → logprob: -9.750802040100098
    6. '2' → logprob: -10.250802040100098
    7. 'a' → logprob: -10.750802040100098
    8. 'p' → logprob: -12.625802040100098
    9. '[' → logprob: -12.750802040100098
    10. '   ' → logprob: -13.000802040100098

Token 837: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.250000953674316
    3. '[
' → logprob: -16.625001907348633
    4. ' [' → logprob: -16.625001907348633
    5. 'i' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.500001907348633
    7. ')' → logprob: -18.375001907348633
    8. ' ' → logprob: -18.625001907348633
    9. '[I' → logprob: -19.000001907348633
    10. '  ' → logprob: -19.500001907348633

Token 838: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001530693843960762
    2. ')>' → logprob: -6.876530647277832
    3. '[i' → logprob: -7.626530647277832
    4. ' )' → logprob: -12.001530647277832
    5. '])' → logprob: -13.501530647277832
    6. ']' → logprob: -14.501530647277832
    7. ')`' → logprob: -14.626530647277832
    8. '[])' → logprob: -15.001530647277832
    9. ')<' → logprob: -15.001530647277832
    10. '>)' → logprob: -15.251530647277832

Token 839: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.36602991819381714
    2. '<' → logprob: -1.741029977798462
    3. '[i' → logprob: -3.116029977798462
    4. ' >' → logprob: -3.366029977798462
    5. ' <' → logprob: -3.866029977798462
    6. ')' → logprob: -3.991029977798462
    7. '<=' → logprob: -4.616029739379883
    8. ')>' → logprob: -6.991029739379883
    9. ' <=' → logprob: -7.491029739379883
    10. ' ' → logprob: -7.866029739379883

Token 840: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.542423165636137e-05
    2. ' ' → logprob: -9.875085830688477
    3. '=' → logprob: -10.375085830688477
    4. '   ' → logprob: -13.000085830688477
    5. '  ' → logprob: -16.250085830688477
    6. '```' → logprob: -16.500085830688477
    7. '-' → logprob: -16.625085830688477
    8. '(' → logprob: -17.000085830688477
    9. '`' → logprob: -17.312585830688477
    10. '0' → logprob: -17.375085830688477

Token 841: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3199920178740285e-05
    2. '=' → logprob: -11.250022888183594
    3. ' ' → logprob: -11.625022888183594
    4. '-' → logprob: -15.125022888183594
    5. '   ' → logprob: -15.125022888183594
    6. '2' → logprob: -15.875022888183594
    7. '0' → logprob: -15.875022888183594
    8. '`' → logprob: -16.687522888183594
    9. '(' → logprob: -16.812522888183594
    10. '
' → logprob: -16.812522888183594

Token 842: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5759579539299011
    2. '-' → logprob: -0.8259579539299011
    3. '1' → logprob: -11.325958251953125
    4. '[-' → logprob: -13.950958251953125
    5. '2' → logprob: -14.075958251953125
    6. '0' → logprob: -14.450958251953125
    7. '``' → logprob: -14.450958251953125
    8. '3' → logprob: -14.575958251953125
    9. '```' → logprob: -14.575958251953125
    10. '-e' → logprob: -14.700958251953125

Token 843: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.5776860184123507e-06
    2. '9' → logprob: -13.75000286102295
    3. ' -' → logprob: -15.12500286102295
    4. 'e' → logprob: -15.25000286102295
    5. '```' → logprob: -16.062501907348633
    6. '
' → logprob: -16.312501907348633
    7. '``' → logprob: -16.500001907348633
    8. '1' → logprob: -16.562501907348633
    9. '   ' → logprob: -16.687501907348633
    10. '#' → logprob: -17.062501907348633

Token 844: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0019122191006317735
    2. '-' → logprob: -6.7519121170043945
    3. '12' → logprob: -7.5019121170043945
    4. '15' → logprob: -8.876912117004395
    5. '10' → logprob: -10.501912117004395
    6. '14' → logprob: -11.376912117004395
    7. '11' → logprob: -12.876912117004395
    8. '09' → logprob: -13.126912117004395
    9. '13' → logprob: -13.251912117004395
    10. '8' → logprob: -13.876912117004395

Token 845: ' for' (ID: 395)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.037994205951690674
    2. 'or' → logprob: -4.412994384765625
    3. ' and' → logprob: -4.662994384765625
    4. ' for' → logprob: -4.912994384765625
    5. 'and' → logprob: -4.912994384765625
    6. 'for' → logprob: -7.287994384765625
    7. ')' → logprob: -8.787994384765625
    8. '   ' → logprob: -9.037994384765625
    9. ' ' → logprob: -10.537994384765625
    10. '    ' → logprob: -11.037994384765625

Token 846: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00018065694894175977
    2. ' i' → logprob: -8.6251802444458
    3. 'range' → logprob: -14.0001802444458
    4. '[i' → logprob: -16.375181198120117
    5. '	i' → logprob: -16.750181198120117
    6. ' ' → logprob: -16.875181198120117
    7. '   ' → logprob: -17.000181198120117
    8. '_i' → logprob: -17.000181198120117
    9. ' range' → logprob: -17.125181198120117
    10. '  ' → logprob: -17.375181198120117

Token 847: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2979254722595215
    2. ' in' → logprob: -1.7979254722595215
    3. 'range' → logprob: -2.6729254722595215
    4. ' range' → logprob: -3.7979254722595215
    5. '[' → logprob: -7.7979254722595215
    6. '(' → logprob: -10.29792594909668
    7. ' ' → logprob: -10.42292594909668
    8. 'i' → logprob: -11.04792594909668
    9. ')' → logprob: -11.67292594909668
    10. '0' → logprob: -11.92292594909668

Token 848: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.2233183042553719e-05
    2. ' range' → logprob: -11.375012397766113
    3. '[' → logprob: -14.250012397766113
    4. '(range' → logprob: -18.000011444091797
    5. '
' → logprob: -18.375011444091797
    6. '0' → logprob: -19.125011444091797
    7. '(' → logprob: -19.250011444091797
    8. '   ' → logprob: -19.625011444091797
    9. '	range' → logprob: -19.875011444091797
    10. '```' → logprob: -20.875011444091797

Token 849: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21302278339862823
    2. '3' → logprob: -1.7130228281021118
    3. 'range' → logprob: -4.463022708892822
    4. '(range' → logprob: -11.71302318572998
    5. ' range' → logprob: -12.08802318572998
    6. '(
' → logprob: -14.96302318572998
    7. '
' → logprob: -15.21302318572998
    8. ' ' → logprob: -16.088022232055664
    9. '```' → logprob: -16.338022232055664
    10. '   ' → logprob: -16.338022232055664

Token 850: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.375001907348633
    4. ')' → logprob: -16.375001907348633
    5. '```' → logprob: -16.750001907348633
    6. '
' → logprob: -17.000001907348633
    7. '(' → logprob: -17.500001907348633
    8. '  ' → logprob: -18.625001907348633
    9. 'range' → logprob: -18.625001907348633
    10. 'len' → logprob: -18.687501907348633

Token 851: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004163164179772139
    2. '):
' → logprob: -5.6291632652282715
    3. '):' → logprob: -8.254162788391113
    4. ' )' → logprob: -8.629162788391113
    5. '   ' → logprob: -9.129162788391113
    6. '):

' → logprob: -12.379162788391113
    7. ')\
' → logprob: -13.254162788391113
    8. ' ' → logprob: -13.379162788391113
    9. ' ):
' → logprob: -13.379162788391113
    10. '):
' → logprob: -13.754162788391113

Token 852: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0016191228060051799
    2. 'or' → logprob: -6.626619338989258
    3. '   ' → logprob: -8.501619338989258
    4. '       ' → logprob: -10.626619338989258
    5. ':' → logprob: -10.751619338989258
    6. '	or' → logprob: -11.001619338989258
    7. ' and' → logprob: -11.876619338989258
    8. ':
' → logprob: -12.126619338989258
    9. ' ' → logprob: -12.126619338989258
    10. '  ' → logprob: -12.626619338989258

Token 853: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.0576448030769825
    2. ' any' → logprob: -2.932644844055176
    3. '   ' → logprob: -5.932644844055176
    4. '    ' → logprob: -10.682644844055176
    5. 'all' → logprob: -10.682644844055176
    6. '  ' → logprob: -10.807644844055176
    7. 'abs' → logprob: -10.932644844055176
    8. '(any' → logprob: -11.182644844055176
    9. ' all' → logprob: -12.932644844055176
    10. ' ' → logprob: -13.057644844055176

Token 854: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -9.088346359931165e-07
    2. 'abs' → logprob: -14.000000953674316
    3. '(' → logprob: -19.125
    4. ' abs' → logprob: -19.875
    5. '(
' → logprob: -20.625
    6. 'Abs' → logprob: -20.875
    7. '.abs' → logprob: -21.25
    8. '(inter' → logprob: -21.375
    9. '((' → logprob: -22.0
    10. '_abs' → logprob: -23.75

Token 855: '(inter' (ID: 62819)
  Prédit: '(inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inter' → logprob: -2.117345684382599e-05
    2. '(abs' → logprob: -11.125020980834961
    3. 'intersection' → logprob: -12.250020980834961
    4. '(' → logprob: -13.875020980834961
    5. '(
' → logprob: -15.500020980834961
    6. '((' → logprob: -16.12502098083496
    7. 'inter' → logprob: -16.25002098083496
    8. '(ind' → logprob: -16.37502098083496
    9. '(in' → logprob: -16.75002098083496
    10. '(i' → logprob: -17.25002098083496

Token 856: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.0009419540292583406
    2. 'ection' → logprob: -7.250941753387451
    3. 'intersection' → logprob: -9.12594223022461
    4. '(inter' → logprob: -9.37594223022461
    5. '(section' → logprob: -11.12594223022461
    6. '<section' → logprob: -11.87594223022461
    7. 'action' → logprob: -11.87594223022461
    8. 'ction' → logprob: -12.87594223022461
    9. 'sections' → logprob: -12.87594223022461
    10. 'tion' → logprob: -13.87594223022461

Token 857: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.500000953674316
    3. '(i' → logprob: -14.625000953674316
    4. '[
' → logprob: -16.625001907348633
    5. '   ' → logprob: -16.750001907348633
    6. '[j' → logprob: -17.625001907348633
    7. ' [' → logprob: -18.125001907348633
    8. '```' → logprob: -18.125001907348633
    9. 'i' → logprob: -18.875001907348633
    10. '[...]' → logprob: -19.250001907348633

Token 858: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2850477397441864
    2. ' -' → logprob: -1.4100477695465088
    3. '[i' → logprob: -6.28504753112793
    4. '[' → logprob: -6.28504753112793
    5. ' ' → logprob: -9.66004753112793
    6. ')' → logprob: -10.16004753112793
    7. ']' → logprob: -11.03504753112793
    8. '(i' → logprob: -11.66004753112793
    9. '>' → logprob: -12.16004753112793
    10. '(' → logprob: -12.28504753112793

Token 859: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.575956404209137
    2. ' -' → logprob: -0.825956404209137
    3. ' ' → logprob: -12.075956344604492
    4. '[' → logprob: -12.325956344604492
    5. '[i' → logprob: -12.700956344604492
    6. '   ' → logprob: -13.950956344604492
    7. '-p' → logprob: -14.200956344604492
    8. ')' → logprob: -14.950956344604492
    9. ' ' → logprob: -15.075956344604492
    10. '-i' → logprob: -15.450956344604492

Token 860: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.033655378967523575
    2. ' p' → logprob: -3.4086554050445557
    3. '   ' → logprob: -11.658655166625977
    4. ' ' → logprob: -14.408655166625977
    5. '    ' → logprob: -15.783655166625977
    6. '  ' → logprob: -15.783655166625977
    7. '	p' → logprob: -16.408655166625977
    8. '       ' → logprob: -17.346155166625977
    9. '(p' → logprob: -17.408655166625977
    10. '           ' → logprob: -18.221155166625977

Token 861: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0076065086759626865
    2. '1' → logprob: -4.882606506347656
    3. '[' → logprob: -15.382606506347656
    4. '```' → logprob: -15.882606506347656
    5. '
' → logprob: -17.757606506347656
    6. 'oint' → logprob: -17.882606506347656
    7. '``' → logprob: -18.445106506347656
    8. '   ' → logprob: -18.507606506347656
    9. ' ' → logprob: -18.570106506347656
    10. 'oints' → logprob: -18.570106506347656

Token 862: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.0339031834737398e-05
    2. '[' → logprob: -10.875020027160645
    3. ' [' → logprob: -14.875020027160645
    4. '```' → logprob: -14.875020027160645
    5. 'i' → logprob: -15.875020027160645
    6. '[
' → logprob: -16.00002098083496
    7. '(i' → logprob: -16.25002098083496
    8. '   ' → logprob: -16.37502098083496
    9. ')' → logprob: -16.75002098083496
    10. '<|end|>' → logprob: -18.00002098083496

Token 863: '])' (ID: 4636)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02997494488954544
    2. '])' → logprob: -3.779974937438965
    3. ']' → logprob: -5.029974937438965
    4. '[' → logprob: -9.279974937438965
    5. ')' → logprob: -9.779974937438965
    6. '][' → logprob: -12.529974937438965
    7. '[j' → logprob: -12.654974937438965
    8. '```' → logprob: -12.779974937438965
    9. '(i' → logprob: -13.404974937438965
    10. '   ' → logprob: -13.404974937438965

Token 864: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.30077630281448364
    2. '<' → logprob: -2.050776243209839
    3. '[i' → logprob: -2.050776243209839
    4. '<i' → logprob: -6.675776481628418
    5. '[' → logprob: -8.300776481628418
    6. ')' → logprob: -8.550776481628418
    7. '>' → logprob: -8.800776481628418
    8. ')<' → logprob: -8.925776481628418
    9. '<p' → logprob: -9.050776481628418
    10. '()<' → logprob: -9.550776481628418

Token 865: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005929154809564352
    2. ' ' → logprob: -5.130928993225098
    3. '   ' → logprob: -14.755928993225098
    4. '9' → logprob: -17.380929946899414
    5. ' ' → logprob: -17.380929946899414
    6. '```' → logprob: -17.505929946899414
    7. '=' → logprob: -17.630929946899414
    8. '  ' → logprob: -17.818429946899414
    9. '
' → logprob: -18.068429946899414
    10. '`' → logprob: -18.130929946899414

Token 866: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2855416066013277e-05
    2. ' ' → logprob: -10.375032424926758
    3. '9' → logprob: -13.750032424926758
    4. '   ' → logprob: -15.375032424926758
    5. '```' → logprob: -16.625032424926758
    6. '=' → logprob: -17.437532424926758
    7. '
' → logprob: -17.562532424926758
    8. '`' → logprob: -17.875032424926758
    9. '**' → logprob: -18.125032424926758
    10. '           ' → logprob: -18.312532424926758

Token 867: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2573106288909912
    2. '-' → logprob: -1.5073106288909912
    3. '**' → logprob: -5.25731086730957
    4. '[' → logprob: -10.25731086730957
    5. '[-' → logprob: -10.25731086730957
    6. '*' → logprob: -10.50731086730957
    7. '-e' → logprob: -10.88231086730957
    8. '```' → logprob: -10.88231086730957
    9. '[e' → logprob: -12.13231086730957
    10. '9' → logprob: -12.50731086730957

Token 868: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.320199877838604e-07
    2. '9' → logprob: -15.0
    3. ' -' → logprob: -17.5
    4. '```' → logprob: -17.75
    5. '−' → logprob: -18.75
    6. '-
' → logprob: -19.25
    7. '``' → logprob: -19.75
    8. '   ' → logprob: -19.75
    9. '**' → logprob: -20.25
    10. ' ' → logprob: -20.625

Token 869: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.8624639324116288e-06
    2. '```' → logprob: -14.000001907348633
    3. ' ' → logprob: -14.875001907348633
    4. '-' → logprob: -15.375001907348633
    5. '09' → logprob: -16.125001907348633
    6. '``' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.250001907348633
    8. '
' → logprob: -18.125001907348633
    9. '0' → logprob: -18.187501907348633
    10. '1' → logprob: -18.500001907348633

Token 870: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.038055144250392914
    2. 'for' → logprob: -3.288055181503296
    3. ')' → logprob: -11.538055419921875
    4. ' ' → logprob: -13.538055419921875
    5. '	for' → logprob: -13.788055419921875
    6. '   ' → logprob: -14.038055419921875
    7. '       ' → logprob: -14.663055419921875
    8. '    ' → logprob: -16.288055419921875
    9. '()' → logprob: -16.913055419921875
    10. '           ' → logprob: -17.038055419921875

Token 871: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001502598519437015
    2. ' i' → logprob: -6.501502513885498
    3. 'range' → logprob: -16.001502990722656
    4. ' range' → logprob: -16.626502990722656
    5. '[i' → logprob: -17.251502990722656
    6. '
' → logprob: -18.001502990722656
    7. ' ' → logprob: -18.126502990722656
    8. '  ' → logprob: -18.376502990722656
    9. '(i' → logprob: -18.376502990722656
    10. '   ' → logprob: -18.626502990722656

Token 872: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4770001471042633
    2. 'in' → logprob: -0.9770001173019409
    3. 'i' → logprob: -6.3520002365112305
    4. 'range' → logprob: -7.4770002365112305
    5. '(i' → logprob: -7.9770002365112305
    6. '[i' → logprob: -8.60200023651123
    7. '(range' → logprob: -10.60200023651123
    8. ' range' → logprob: -10.72700023651123
    9. ' i' → logprob: -11.60200023651123
    10. '(' → logprob: -11.60200023651123

Token 873: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.872261317563243e-05
    2. ' range' → logprob: -9.750059127807617
    3. '(range' → logprob: -14.750059127807617
    4. '(' → logprob: -19.625059127807617
    5. '[' → logprob: -20.375059127807617
    6. '
' → logprob: -20.750059127807617
    7. '   ' → logprob: -20.875059127807617
    8. '3' → logprob: -21.125059127807617
    9. '	range' → logprob: -21.125059127807617
    10. '```' → logprob: -21.250059127807617

Token 874: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7013343572616577
    2. 'range' → logprob: -0.7013343572616577
    3. ' range' → logprob: -5.326334476470947
    4. '(range' → logprob: -6.201334476470947
    5. '(i' → logprob: -6.701334476470947
    6. 'i' → logprob: -10.576333999633789
    7. ')' → logprob: -12.951333999633789
    8. '[' → logprob: -13.326333999633789
    9. 'in' → logprob: -13.701333999633789
    10. ' (' → logprob: -13.701333999633789

Token 875: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.000916935910936445
    2. 'range' → logprob: -7.000916957855225
    3. ' range' → logprob: -12.250916481018066
    4. '(' → logprob: -15.375916481018066
    5. '
' → logprob: -15.500916481018066
    6. ' ' → logprob: -15.500916481018066
    7. '   ' → logprob: -17.125917434692383
    8. '(range' → logprob: -17.500917434692383
    9. '```' → logprob: -17.875917434692383
    10. '[' → logprob: -19.375917434692383

Token 876: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06594657897949219
    2. ')' → logprob: -3.065946578979492
    3. '):
' → logprob: -4.065946578979492
    4. '   ' → logprob: -10.065946578979492
    5. '):

' → logprob: -11.190946578979492
    6. '):
' → logprob: -13.315946578979492
    7. ':' → logprob: -13.440946578979492
    8. ' ):' → logprob: -13.440946578979492
    9. ')):' → logprob: -14.940946578979492
    10. ')**' → logprob: -15.315946578979492

Token 877: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005382588133215904
    2. '   ' → logprob: -7.625538349151611
    3. ':' → logprob: -10.500537872314453
    4. ':
' → logprob: -11.625537872314453
    5. '
' → logprob: -12.625537872314453
    6. ' return' → logprob: -13.500537872314453
    7. '     ' → logprob: -13.500537872314453
    8. ',' → logprob: -13.500537872314453
    9. '      ' → logprob: -13.625537872314453
    10. '<|end|>' → logprob: -13.625537872314453

Token 878: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07722865790128708
    2. 'return' (adapté à ' return') → logprob: -2.827228546142578
    3. '       ' → logprob: -4.577228546142578
    4. ' return' → logprob: -5.327228546142578
    5. '	return' → logprob: -13.327228546142578
    6. '   ' → logprob: -14.202228546142578
    7. ' ' → logprob: -14.702228546142578
    8. '
' → logprob: -14.827228546142578
    9. '  ' → logprob: -14.827228546142578
    10. '    ' → logprob: -14.827228546142578

Token 879: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001585793448612094
    2. ' True' → logprob: -6.876585960388184
    3. 'False' → logprob: -7.501585960388184
    4. ' False' → logprob: -15.376585960388184
    5. '(True' → logprob: -15.501585960388184
    6. '1' → logprob: -16.376585006713867
    7. 'Tr' → logprob: -16.876585006713867
    8. 'None' → logprob: -17.001585006713867
    9. '"' → logprob: -17.626585006713867
    10. '=True' → logprob: -18.001585006713867

Token 880: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038503292948007584
    2. '
' → logprob: -3.288503408432007
    3. '    
' → logprob: -7.788503170013428
    4. '

' → logprob: -11.288503646850586
    5. 'return' → logprob: -11.788503646850586
    6. '<|end|>' → logprob: -11.788503646850586
    7. '
' → logprob: -12.038503646850586
    8. '```' → logprob: -12.163503646850586
    9. '
    
' → logprob: -13.413503646850586
    10. '  
' → logprob: -13.663503646850586

Token 881: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1803581565618515
    2. 'if' → logprob: -1.9303581714630127
    3. '   ' → logprob: -3.9303581714630127
    4. '
' → logprob: -8.555357933044434
    5. ' return' → logprob: -9.805357933044434
    6. '```' → logprob: -10.805357933044434
    7. ' if' → logprob: -11.055357933044434
    8. '    
' → logprob: -11.430357933044434
    9. '	return' → logprob: -15.305357933044434
    10. '  ' → logprob: -15.430357933044434

Token 882: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.033658839762210846
    2. 'return' (adapté à ' return') → logprob: -3.408658742904663
    3. '   ' → logprob: -11.908658981323242
    4. ' if' → logprob: -12.283658981323242
    5. '#' → logprob: -14.408658981323242
    6. ' return' → logprob: -14.658658981323242
    7. 'result' → logprob: -15.283658981323242
    8. '    
' → logprob: -15.658658981323242
    9. '
' → logprob: -16.408658981323242
    10. 'for' → logprob: -16.658658981323242

Token 883: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.01433720625936985
    2. ' point' → logprob: -4.264337062835693
    3. 'is' → logprob: -8.764337539672852
    4. ' is' → logprob: -11.014337539672852
    5. '(point' → logprob: -14.764337539672852
    6. '	point' → logprob: -15.139337539672852
    7. 'Point' → logprob: -16.13933753967285
    8. 'return' → logprob: -16.63933753967285
    9. '   ' → logprob: -16.88933753967285
    10. 'points' → logprob: -17.76433753967285

Token 884: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: 0.0
    2. 's' → logprob: -17.25
    3. '_on' → logprob: -17.75
    4. 'In' → logprob: -17.75
    5. '_inter' → logprob: -19.0
    6. '_to' → logprob: -19.375
    7. 'in' → logprob: -19.5
    8. '_IN' → logprob: -20.25
    9. '_for' → logprob: -20.375
    10. '_' → logprob: -20.375

Token 885: '_triangle' (ID: 187218)
  Prédit: '_triangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_triangle' → logprob: -6.0868278524139896e-05
    2. 'triangle' → logprob: -9.75006103515625
    3. '_' → logprob: -13.62506103515625
    4. '_tri' → logprob: -13.75006103515625
    5. '_inter' → logprob: -17.00006103515625
    6. 'Triangle' → logprob: -17.50006103515625
    7. '_point' → logprob: -17.75006103515625
    8. '_t' → logprob: -17.87506103515625
    9. 's' → logprob: -18.12506103515625
    10. '_tr' → logprob: -18.12506103515625

Token 886: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0096586924046278
    2. '(inter' → logprob: -4.7596588134765625
    3. '3' → logprob: -6.8846588134765625
    4. '(' → logprob: -11.759658813476562
    5. '_(' → logprob: -12.509658813476562
    6. '_inter' → logprob: -12.634658813476562
    7. 'intersection' → logprob: -13.884658813476562
    8. '(p' → logprob: -14.134658813476562
    9. ' (' → logprob: -14.134658813476562
    10. '_three' → logprob: -14.634658813476562

Token 887: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.420598219847307e-05
    2. '(inter' → logprob: -10.2500638961792
    3. 'intersection' → logprob: -10.5000638961792
    4. 'triangle' → logprob: -14.3750638961792
    5. '_' → logprob: -15.6250638961792
    6. ' ' → logprob: -15.7500638961792
    7. 'inter' → logprob: -16.125064849853516
    8. '```' → logprob: -16.500064849853516
    9. ' intersection' → logprob: -17.125064849853516
    10. '
' → logprob: -17.250064849853516

Token 888: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2664456789934775e-06
    2. '_d' → logprob: -14.250000953674316
    3. '(p' → logprob: -14.875000953674316
    4. '3' → logprob: -17.000001907348633
    5. ' d' → logprob: -17.000001907348633
    6. '(d' → logprob: -17.250001907348633
    7. 'д' → logprob: -18.000001907348633
    8. '4' → logprob: -19.125001907348633
    9. 'D' → logprob: -19.500001907348633
    10. '1' → logprob: -19.625001907348633

Token 889: '(inter' (ID: 62819)
  Prédit: '(inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inter' → logprob: -3.7697225252486533e-06
    2. ' (' → logprob: -12.875003814697266
    3. '(' → logprob: -13.875003814697266
    4. '(
' → logprob: -16.125003814697266
    5. 'intersection' → logprob: -16.250003814697266
    6. '(interval' → logprob: -18.375003814697266
    7. '(in' → logprob: -18.500003814697266
    8. '(iter' → logprob: -19.125003814697266
    9. '(ind' → logprob: -19.250003814697266
    10. '((' → logprob: -20.125003814697266

Token 890: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.001243920880369842
    2. 'ection' → logprob: -6.751244068145752
    3. 'er' → logprob: -9.626243591308594
    4. 's' → logprob: -12.751243591308594
    5. 'estion' → logprob: -13.376243591308594
    6. '<section' → logprob: -13.751243591308594
    7. 'action' → logprob: -14.001243591308594
    8. 'ese' → logprob: -15.251243591308594
    9. 'ction' → logprob: -15.501243591308594
    10. 'intersection' → logprob: -15.876243591308594

Token 891: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44372421503067017
    2. '(' → logprob: -1.4437241554260254
    3. '(inter' → logprob: -2.1937241554260254
    4. '(p' → logprob: -5.193724155426025
    5. ')' → logprob: -5.943724155426025
    6. '(a' → logprob: -6.443724155426025
    7. ' ,' → logprob: -8.068724632263184
    8. '(
' → logprob: -8.068724632263184
    9. '(i' → logprob: -9.068724632263184
    10. ' (,' → logprob: -9.818724632263184

Token 892: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007114782347343862
    2. ' a' → logprob: -7.250711441040039
    3. '   ' → logprob: -13.875711441040039
    4. '
' → logprob: -15.125711441040039
    5. '	a' → logprob: -15.875711441040039
    6. '(a' → logprob: -16.50071144104004
    7. ' ' → logprob: -17.25071144104004
    8. ')a' → logprob: -17.50071144104004
    9. ')' → logprob: -17.62571144104004
    10. '    ' → logprob: -17.87571144104004

Token 893: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003322318894788623
    2. ',b' → logprob: -5.753322124481201
    3. 'b' → logprob: -9.37832260131836
    4. ' ,' → logprob: -10.50332260131836
    5. ',c' → logprob: -11.25332260131836
    6. ',
' → logprob: -11.25332260131836
    7. 'c' → logprob: -12.25332260131836
    8. '[' → logprob: -13.87832260131836
    9. '   ' → logprob: -14.75332260131836
    10. ')' → logprob: -16.00332260131836

Token 894: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.676292231422849e-05
    2. ' b' → logprob: -11.000017166137695
    3. 'c' → logprob: -21.500017166137695
    4. ')b' → logprob: -22.875017166137695
    5. '	b' → logprob: -23.000017166137695
    6. 'B' → logprob: -23.000017166137695
    7. '   ' → logprob: -23.750017166137695
    8. ',b' → logprob: -24.625017166137695
    9. '>b' → logprob: -24.750017166137695
    10. 'bc' → logprob: -24.750017166137695

Token 895: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015057147480547428
    2. ',c' → logprob: -4.26505708694458
    3. 'c' → logprob: -7.14005708694458
    4. ' ,' → logprob: -9.640057563781738
    5. ',
' → logprob: -10.265057563781738
    6. ' c' → logprob: -15.265057563781738
    7. '   ' → logprob: -15.765057563781738
    8. ')' → logprob: -17.140056610107422
    9. ',\
' → logprob: -17.140056610107422
    10. ',
' → logprob: -17.390056610107422

Token 896: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01815006136894226
    2. ' c' → logprob: -4.0181498527526855
    3. '	c' → logprob: -15.768150329589844
    4. ')c' → logprob: -17.018150329589844
    5. '_c' → logprob: -19.643150329589844
    6. '   ' → logprob: -20.393150329589844
    7. ' ' → logprob: -21.143150329589844
    8. '[c' → logprob: -22.518150329589844
    9. '$c' → logprob: -22.518150329589844
    10. ')' → logprob: -22.643150329589844

Token 897: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -12.750003814697266
    3. '   ' → logprob: -15.250003814697266
    4. ' )' → logprob: -16.000003814697266
    5. '))' → logprob: -16.375003814697266
    6. ')`' → logprob: -18.125003814697266
    7. ')

' → logprob: -18.250003814697266
    8. ')return' → logprob: -18.375003814697266
    9. ')#' → logprob: -19.000003814697266
    10. '),' → logprob: -19.125003814697266

Token 898: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 899: ' main' (ID: 2758)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -1.5464354753494263
    2. 'can' → logprob: -1.5464354753494263
    3. 'segment' → logprob: -1.5464354753494263
    4. 'is' → logprob: -2.7964353561401367
    5. 'does' → logprob: -2.9214353561401367
    6. 'line' → logprob: -2.9214353561401367
    7. 'check' → logprob: -3.1714353561401367
    8. 'point' → logprob: -3.5464353561401367
    9. ' path' → logprob: -4.046435356140137
    10. 'segments' → logprob: -4.296435356140137

Token 900: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00021569548698607832
    2. '():
' → logprob: -8.500215530395508
    3. ' ():' → logprob: -11.625215530395508
    4. '()' → logprob: -14.000215530395508
    5. '():
' → logprob: -14.000215530395508
    6. '_' → logprob: -14.250215530395508
    7. '(' → logprob: -14.875215530395508
    8. '(p' → logprob: -15.625215530395508
    9. '():

' → logprob: -15.625215530395508
    10. '()>' → logprob: -16.500215530395508

Token 901: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01962399296462536
    2. ' n' → logprob: -4.769623756408691
    3. 'n' → logprob: -5.144623756408691
    4. ' import' → logprob: -5.894623756408691
    5. 'import' → logprob: -6.269623756408691
    6. ' t' → logprob: -8.644623756408691
    7. 't' → logprob: -9.269623756408691
    8. ' input' → logprob: -9.394623756408691
    9. '```' → logprob: -10.644623756408691
    10. 'input' → logprob: -11.019623756408691

Token 902: ' U' (ID: 601)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03847300633788109
    2. '   ' → logprob: -4.163473129272461
    3. 'import' → logprob: -4.788473129272461
    4. 't' → logprob: -5.163473129272461
    5. 'N' → logprob: -5.413473129272461
    6. 'T' → logprob: -6.413473129272461
    7. ' n' → logprob: -6.538473129272461
    8. ' import' → logprob: -8.413473129272461
    9. 'input' → logprob: -9.288473129272461
    10. 'num' → logprob: -9.413473129272461

Token 903: 'AZ' (ID: 24583)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2899190187454224
    2. ' =' → logprob: -1.2899190187454224
    3. '=' → logprob: -2.164918899536133
    4. 'ser' → logprob: -2.789918899536133
    5. '=int' → logprob: -3.039918899536133
    6. 's' → logprob: -3.164918899536133
    7. 'int' → logprob: -3.289918899536133
    8. 'se' → logprob: -3.664918899536133
    9. 'p' → logprob: -3.914918899536133
    10. 'V' → logprob: -3.914918899536133

Token 904: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34666794538497925
    2. ',' → logprob: -1.846668004989624
    3. '=' → logprob: -2.846668004989624
    4. '_points' → logprob: -4.221667766571045
    5. '   ' → logprob: -4.721667766571045
    6. 'P' → logprob: -4.846667766571045
    7. '_' → logprob: -5.971667766571045
    8. 'S' → logprob: -6.096667766571045
    9. 'X' → logprob: -6.221667766571045
    10. '_input' → logprob: -6.221667766571045

Token 905: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6382277011871338
    2. 'list' → logprob: -1.0132277011871338
    3. '[int' → logprob: -3.138227701187134
    4. '[list' → logprob: -3.138227701187134
    5. ' list' → logprob: -4.888227462768555
    6. '[]' → logprob: -5.013227462768555
    7. ' [' → logprob: -5.763227462768555
    8. '(list' → logprob: -7.263227462768555
    9. 'int' → logprob: -7.263227462768555
    10. 'tuple' → logprob: -7.388227462768555

Token 906: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00038896629121154547
    2. '(' → logprob: -8.000389099121094
    3. 'map' → logprob: -10.875389099121094
    4. '()' → logprob: -11.500389099121094
    5. '(input' → logprob: -11.500389099121094
    6. '(range' → logprob: -11.750389099121094
    7. '(int' → logprob: -13.625389099121094
    8. '(eval' → logprob: -13.750389099121094
    9. '(
' → logprob: -14.000389099121094
    10. '(float' → logprob: -14.000389099121094

Token 907: '(int' (ID: 2742)
  Prédit: '(float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.030001908540725708
    2. '(int' → logprob: -3.5300018787384033
    3. 'float' → logprob: -8.780001640319824
    4. '(' → logprob: -9.280001640319824
    5. ',float' → logprob: -13.530001640319824
    6. 'int' → logprob: -13.655001640319824
    7. '=float' → logprob: -14.405001640319824
    8. ' float' → logprob: -15.155001640319824
    9. '(
' → logprob: -15.155001640319824
    10. '<float' → logprob: -15.530001640319824

Token 908: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.13776779174804688
    2. ',input' → logprob: -2.137767791748047
    3. ',' → logprob: -5.012767791748047
    4. 'input' → logprob: -5.512767791748047
    5. '(' → logprob: -10.137767791748047
    6. ' input' → logprob: -10.137767791748047
    7. '=input' → logprob: -11.887767791748047
    8. '))' → logprob: -13.512767791748047
    9. '[input' → logprob: -13.512767791748047
    10. '<input' → logprob: -13.887767791748047

Token 909: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.662937372922897e-05
    2. ' input' → logprob: -9.250096321105957
    3. 'open' → logprob: -14.875096321105957
    4. '   ' → logprob: -17.125097274780273
    5. ' ' → logprob: -17.500097274780273
    6. '(input' → logprob: -18.750097274780273
    7. '=input' → logprob: -19.125097274780273
    8. ',input' → logprob: -19.250097274780273
    9. '```' → logprob: -19.750097274780273
    10. '<input' → logprob: -19.750097274780273

Token 910: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.200166469876422e-06
    2. '()' → logprob: -12.250004768371582
    3. '()))' → logprob: -15.500004768371582
    4. ' ().' → logprob: -17.2500057220459
    5. '(' → logprob: -17.5000057220459
    6. '()[' → logprob: -18.2500057220459
    7. '.split' → logprob: -18.3750057220459
    8. '()));' → logprob: -19.2500057220459
    9. 'split' → logprob: -19.3750057220459
    10. '()
' → logprob: -19.5000057220459

Token 911: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020461321400944144
    2. 'strip' → logprob: -8.500205039978027
    3. '(split' → logprob: -14.375205039978027
    4. ' split' → logprob: -14.750205039978027
    5. '().' → logprob: -16.75020408630371
    6. 'rstrip' → logprob: -16.75020408630371
    7. 'spl' → logprob: -18.12520408630371
    8. 's' → logprob: -18.62520408630371
    9. 'plit' → logprob: -18.62520408630371
    10. '.split' → logprob: -18.87520408630371

Token 912: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00462841521948576
    2. '()' → logprob: -5.6296281814575195
    3. '()))
' → logprob: -7.0046281814575195
    4. '))' → logprob: -9.75462818145752
    5. '(' → logprob: -10.12962818145752
    6. '()));' → logprob: -11.75462818145752
    7. '())' → logprob: -11.87962818145752
    8. '()))

' → logprob: -12.87962818145752
    9. '()))
' → logprob: -13.87962818145752
    10. '()
' → logprob: -14.12962818145752

Token 913: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07807566225528717
    2. 'R' → logprob: -4.703075885772705
    3. ' B' → logprob: -5.203075885772705
    4. ' R' → logprob: -5.453075885772705
    5. ' D' → logprob: -5.578075885772705
    6. 'D' → logprob: -5.578075885772705
    7. ' S' → logprob: -5.703075885772705
    8. ' M' → logprob: -5.828075885772705
    9. ' L' → logprob: -5.890575885772705
    10. 'B' → logprob: -5.890575885772705

Token 914: ' enemy' (ID: 20935)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.7935914993286133
    2. 'B' → logprob: -3.0435914993286133
    3. 'U' → logprob: -3.0435914993286133
    4. 'D' → logprob: -3.0435914993286133
    5. 'V' → logprob: -3.1685914993286133
    6. 'n' → logprob: -3.2310914993286133
    7. 'L' → logprob: -3.3560914993286133
    8. 'A' → logprob: -3.4185914993286133
    9. 'S' → logprob: -3.5435914993286133
    10. 'UA' → logprob: -3.7935914993286133

Token 915: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16192959249019623
    2. '_pos' → logprob: -2.1619296073913574
    3. '_positions' → logprob: -4.286929607391357
    4. '=' → logprob: -4.786929607391357
    5. '_position' → logprob: -5.411929607391357
    6. '_path' → logprob: -6.411929607391357
    7. 's' → logprob: -6.661929607391357
    8. '_base' → logprob: -6.911929607391357
    9. 'pos' → logprob: -7.536929607391357
    10. '_start' → logprob: -8.0369291305542

Token 916: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0017274183919653296
    2. ' list' → logprob: -6.37672758102417
    3. '[' → logprob: -10.751727104187012
    4. 'tuple' → logprob: -14.126727104187012
    5. '[]' → logprob: -14.126727104187012
    6. '[list' → logprob: -14.376727104187012
    7. 'U' → logprob: -14.626727104187012
    8. ' [' → logprob: -14.626727104187012
    9. 'List' → logprob: -16.251728057861328
    10. '   ' → logprob: -16.251728057861328

Token 917: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -8.061054359131958e-06
    2. 'map' → logprob: -11.875007629394531
    3. '(' → logprob: -14.250007629394531
    4. ' map' → logprob: -16.37500762939453
    5. '(int' → logprob: -16.50000762939453
    6. '_map' → logprob: -17.00000762939453
    7. '.map' → logprob: -17.25000762939453
    8. ',map' → logprob: -17.37500762939453
    9. '	map' → logprob: -17.62500762939453
    10. '()' → logprob: -18.12500762939453

Token 918: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001899511698866263
    2. 'int' → logprob: -8.625189781188965
    3. '(float' → logprob: -11.875189781188965
    4. '(' → logprob: -13.375189781188965
    5. '=int' → logprob: -14.375189781188965
    6. '[int' → logprob: -14.625189781188965
    7. '```' → logprob: -15.375189781188965
    8. ' int' → logprob: -15.875189781188965
    9. ',int' → logprob: -16.00019073486328
    10. '(in' → logprob: -16.62519073486328

Token 919: ',' (ID: 11)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.35979074239730835
    2. ',' → logprob: -2.359790802001953
    3. '(input' → logprob: -2.609790802001953
    4. '(int' → logprob: -2.859790802001953
    5. ',input' → logprob: -3.109790802001953
    6. '(' → logprob: -3.609790802001953
    7. '()' → logprob: -6.109790802001953
    8. ',int' → logprob: -6.359790802001953
    9. '   ' → logprob: -7.859790802001953
    10. '=input' → logprob: -8.359790802001953

Token 920: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0003709701995830983
    2. ' input' → logprob: -8.000370979309082
    3. 'int' → logprob: -10.250370979309082
    4. '(input' → logprob: -16.125370025634766
    5. 'float' → logprob: -19.125370025634766
    6. ' ' → logprob: -19.250370025634766
    7. 'str' → logprob: -19.750370025634766
    8. '=input' → logprob: -20.000370025634766
    9. '<input' → logprob: -20.250370025634766
    10. 'output' → logprob: -20.500370025634766

Token 921: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -15.375
    3. ' ().' → logprob: -16.5
    4. '.' → logprob: -19.625
    5. '()).' → logprob: -20.5
    6. ' .' → logprob: -21.25
    7. '()
' → logprob: -21.625
    8. '(' → logprob: -21.75
    9. '()[' → logprob: -21.75
    10. '(.' → logprob: -21.75

Token 922: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. '(split' → logprob: -17.0
    3. ' split' → logprob: -17.25
    4. 'strip' → logprob: -19.625
    5. 'spl' → logprob: -20.375
    6. '.split' → logprob: -20.75
    7. 's' → logprob: -22.5
    8. 'plit' → logprob: -22.5
    9. '().' → logprob: -22.5
    10. ')' → logprob: -23.375

Token 923: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.014497014693915844
    2. '()))
' → logprob: -4.264496803283691
    3. '()' → logprob: -8.264496803283691
    4. '))' → logprob: -9.764496803283691
    5. '()));' → logprob: -12.014496803283691
    6. '())' → logprob: -12.514496803283691
    7. '()))
' → logprob: -12.764496803283691
    8. '()))

' → logprob: -13.139496803283691
    9. '(' → logprob: -13.139496803283691
    10. '())).' → logprob: -14.264496803283691

Token 924: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00437042536213994
    2. 'bar' → logprob: -7.379370212554932
    3. 't' → logprob: -7.629370212554932
    4. ' barrier' → logprob: -7.754370212554932
    5. 'def' → logprob: -8.12937068939209
    6. 'n' → logprob: -8.75437068939209
    7. 'b' → logprob: -8.87937068939209
    8. 'B' → logprob: -8.87937068939209
    9. 's' → logprob: -8.87937068939209
    10. 'p' → logprob: -9.00437068939209

Token 925: ' v' (ID: 323)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8507878184318542
    2. 'n' → logprob: -1.350787878036499
    3. 'bar' → logprob: -1.475787878036499
    4. 'B' → logprob: -4.10078763961792
    5. '   ' → logprob: -4.72578763961792
    6. 'U' → logprob: -4.97578763961792
    7. 'num' → logprob: -4.97578763961792
    8. 'b' → logprob: -5.10078763961792
    9. 'M' → logprob: -5.22578763961792
    10. 'W' → logprob: -5.72578763961792

Token 926: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6331404447555542
    2. 'ictim' → logprob: -1.8831404447555542
    3. 'ector' → logprob: -2.5081405639648438
    4. 'ehicle' → logprob: -2.6331405639648438
    5. 'ectors' → logprob: -3.3831405639648438
    6. 'is' → logprob: -3.3831405639648438
    7. 'iew' → logprob: -3.5081405639648438
    8. 'ill' → logprob: -3.6331405639648438
    9. 'el' → logprob: -3.6331405639648438
    10. 'ict' → logprob: -3.7581405639648438

Token 927: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.036821406334638596
    2. '1' → logprob: -3.7868213653564453
    3. 'ector' → logprob: -4.661821365356445
    4. '=' → logprob: -6.286821365356445
    5. 'al' → logprob: -8.036821365356445
    6. 'iew' → logprob: -8.036821365356445
    7. 'alid' → logprob: -8.161821365356445
    8. 'ectors' → logprob: -8.911821365356445
    9. 'ehicle' → logprob: -8.911821365356445
    10. 'v' → logprob: -9.161821365356445

Token 928: ' list' (ID: 1562)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.024843480437994003
    2. ' vector' → logprob: -3.774843454360962
    3. '[' → logprob: -6.899843692779541
    4. 'list' → logprob: -8.649843215942383
    5. ' [' → logprob: -9.149843215942383
    6. '[u' → logprob: -9.649843215942383
    7. '[
' → logprob: -10.149843215942383
    8. 'segment' → logprob: -10.274843215942383
    9. '[]' → logprob: -10.774843215942383
    10. '[v' → logprob: -10.899843215942383

Token 929: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.429896944202483e-05
    2. 'map' → logprob: -10.125043869018555
    3. '(' → logprob: -13.750043869018555
    4. ',map' → logprob: -14.250043869018555
    5. '	map' → logprob: -14.500043869018555
    6. '.map' → logprob: -14.500043869018555
    7. ' map' → logprob: -14.500043869018555
    8. '=' → logprob: -15.250043869018555
    9. '(int' → logprob: -16.125043869018555
    10. '(range' → logprob: -16.375043869018555

Token 930: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006417844560928643
    2. 'int' → logprob: -7.375641822814941
    3. '(float' → logprob: -11.375641822814941
    4. '[int' → logprob: -12.875641822814941
    5. '=int' → logprob: -14.125641822814941
    6. '<int' → logprob: -16.250640869140625
    7. ' int' → logprob: -16.500640869140625
    8. 'float' → logprob: -16.500640869140625
    9. ',int' → logprob: -16.875640869140625
    10. '```' → logprob: -17.375640869140625

Token 931: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5775898098945618
    2. ',' → logprob: -0.8275898098945618
    3. '(input' → logprob: -6.702589988708496
    4. '(' → logprob: -8.827589988708496
    5. '(),' → logprob: -9.202589988708496
    6. ',int' → logprob: -9.577589988708496
    7. '   ' → logprob: -10.202589988708496
    8. ' ,' → logprob: -10.202589988708496
    9. 'input' → logprob: -11.077589988708496
    10. ',(' → logprob: -11.577589988708496

Token 932: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00033581978641450405
    2. ' input' → logprob: -8.000335693359375
    3. '(input' → logprob: -15.125335693359375
    4. 'int' → logprob: -16.375335693359375
    5. '   ' → logprob: -17.875335693359375
    6. 'output' → logprob: -20.125335693359375
    7. ' ' → logprob: -20.125335693359375
    8. 'import' → logprob: -20.500335693359375
    9. '=input' → logprob: -20.500335693359375
    10. ')' → logprob: -20.875335693359375

Token 933: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0023855185136198997
    2. '(),' → logprob: -6.50238561630249
    3. '()' → logprob: -7.62738561630249
    4. '(' → logprob: -8.502385139465332
    5. ',' → logprob: -9.627385139465332
    6. '()))' → logprob: -9.627385139465332
    7. '())' → logprob: -10.252385139465332
    8. '()[' → logprob: -12.377385139465332
    9. '   ' → logprob: -12.502385139465332
    10. '()
' → logprob: -12.752385139465332

Token 934: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -15.375000953674316
    3. ')' → logprob: -15.875000953674316
    4. '.split' → logprob: -16.375
    5. '(split' → logprob: -17.75
    6. 'plit' → logprob: -18.625
    7. ').' → logprob: -18.875
    8. 'strip' → logprob: -19.125
    9. ')
' → logprob: -19.625
    10. '```' → logprob: -19.625

Token 935: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2836071252822876
    2. '()))
' → logprob: -1.4086071252822876
    3. '))' → logprob: -6.283607006072998
    4. '()' → logprob: -7.908607006072998
    5. '))
' → logprob: -10.033607482910156
    6. '()));' → logprob: -10.033607482910156
    7. '()))
' → logprob: -10.033607482910156
    8. '())' → logprob: -10.158607482910156
    9. '(' → logprob: -10.658607482910156
    10. '()))

' → logprob: -11.408607482910156

Token 936: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0488472618162632
    2. 'v' → logprob: -3.048847198486328
    3. '	v' → logprob: -8.798847198486328
    4. ' v' → logprob: -9.673847198486328
    5. '
' → logprob: -10.298847198486328
    6. '  ' → logprob: -12.298847198486328
    7. '    
' → logprob: -13.548847198486328
    8. ')v' → logprob: -13.673847198486328
    9. ' ' → logprob: -13.923847198486328
    10. ',v' → logprob: -14.048847198486328

Token 937: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0008104594890028238
    2. '   ' → logprob: -7.125810623168945
    3. ' v' → logprob: -12.250810623168945
    4. '	v' → logprob: -15.375810623168945
    5. '    
' → logprob: -15.625810623168945
    6. '
' → logprob: -15.625810623168945
    7. ' ' → logprob: -15.750810623168945
    8. '  ' → logprob: -15.750810623168945
    9. '3' → logprob: -16.500810623168945
    10. 'b' → logprob: -16.625810623168945

Token 938: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20208317041397095
    2. '2' → logprob: -1.7020831108093262
    3. '(' → logprob: -8.077083587646484
    4. '3' → logprob: -8.327083587646484
    5. 'v' → logprob: -10.452083587646484
    6. 'ectors' → logprob: -10.952083587646484
    7. 'ector' → logprob: -11.202083587646484
    8. '(v' → logprob: -11.202083587646484
    9. '[' → logprob: -11.827083587646484
    10. '([' → logprob: -12.202083587646484

Token 939: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. '＝' → logprob: -15.938261985778809
    4. '=list' → logprob: -17.188261032104492
    5. '   ' → logprob: -17.563261032104492
    6. '=
' → logprob: -17.688261032104492
    7. ' =
' → logprob: -18.438261032104492
    8. ' ' → logprob: -18.688261032104492
    9. '=v' → logprob: -18.688261032104492
    10. '=line' → logprob: -19.188261032104492

Token 940: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20141927897930145
    2. ' list' → logprob: -1.7014192342758179
    3. '(list' → logprob: -12.07641887664795
    4. '=list' → logprob: -15.45141887664795
    5. 'int' → logprob: -17.451419830322266
    6. '	list' → logprob: -17.826419830322266
    7. 'List' → logprob: -17.826419830322266
    8. '[list' → logprob: -18.451419830322266
    9. ':list' → logprob: -19.576419830322266
    10. '.list' → logprob: -19.701419830322266

Token 941: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.004649064969271421
    2. 'map' → logprob: -5.6296491622924805
    3. '(int' → logprob: -7.1296491622924805
    4. '(list' → logprob: -8.50464916229248
    5. '.map' → logprob: -11.50464916229248
    6. 'int' → logprob: -12.00464916229248
    7. '	map' → logprob: -12.12964916229248
    8. ',map' → logprob: -12.12964916229248
    9. ' map' → logprob: -12.50464916229248
    10. '(' → logprob: -12.62964916229248

Token 942: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3133162558078766
    2. '(int' → logprob: -1.3133162260055542
    3. '[int' → logprob: -10.313316345214844
    4. '=int' → logprob: -10.938316345214844
    5. ',int' → logprob: -13.438316345214844
    6. ' int' → logprob: -14.063316345214844
    7. '<int' → logprob: -14.188316345214844
    8. ']int' → logprob: -14.938316345214844
    9. ':int' → logprob: -16.063316345214844
    10. 'ints' → logprob: -16.688316345214844

Token 943: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6221134066581726
    2. 'int' → logprob: -1.1221134662628174
    3. ',int' → logprob: -2.1221134662628174
    4. '(int' → logprob: -4.372113227844238
    5. ',input' → logprob: -5.997113227844238
    6. '[int' → logprob: -6.622113227844238
    7. '=int' → logprob: -7.247113227844238
    8. '<int' → logprob: -8.122113227844238
    9. ' int' → logprob: -9.497113227844238
    10. 'input' → logprob: -9.747113227844238

Token 944: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002003580564633012
    2. ' input' → logprob: -6.2520036697387695
    3. 'int' → logprob: -9.50200366973877
    4. 'list' → logprob: -15.62700366973877
    5. '(input' → logprob: -16.002002716064453
    6. '=input' → logprob: -18.502002716064453
    7. '0' → logprob: -19.127002716064453
    8. '   ' → logprob: -19.627002716064453
    9. ' ' → logprob: -19.627002716064453
    10. '...' → logprob: -19.752002716064453

Token 945: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0017418164061382413
    2. '.split' → logprob: -6.376741886138916
    3. '()[' → logprob: -11.001741409301758
    4. '()' → logprob: -11.876741409301758
    5. '()))' → logprob: -12.376741409301758
    6. '[].' → logprob: -12.751741409301758
    7. '.input' → logprob: -13.751741409301758
    8. '()))
' → logprob: -13.876741409301758
    9. ' .' → logprob: -14.251741409301758
    10. '[]' → logprob: -14.376741409301758

Token 946: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.173704271830502e-06
    2. '.split' → logprob: -12.87500286102295
    3. ' split' → logprob: -15.50000286102295
    4. '().' → logprob: -16.125003814697266
    5. '0' → logprob: -16.625003814697266
    6. 'spl' → logprob: -16.625003814697266
    7. 'int' → logprob: -16.750003814697266
    8. '(split' → logprob: -17.250003814697266
    9. 'input' → logprob: -17.375003814697266
    10. '3' → logprob: -17.625003814697266

Token 947: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3910309076309204
    2. '()))' → logprob: -1.1410309076309204
    3. '()' → logprob: -6.016030788421631
    4. '()))
' → logprob: -6.641030788421631
    5. '))
' → logprob: -8.141031265258789
    6. '())' → logprob: -9.766031265258789
    7. ')' → logprob: -10.641031265258789
    8. '[]' → logprob: -11.391031265258789
    9. '(' → logprob: -12.266031265258789
    10. '   ' → logprob: -12.516031265258789

Token 948: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012986564077436924
    2. 'v' → logprob: -4.387986660003662
    3. '```' → logprob: -8.012986183166504
    4. ' v' → logprob: -10.387986183166504
    5. '
' → logprob: -10.637986183166504
    6. 'p' → logprob: -10.762986183166504
    7. '    
' → logprob: -11.012986183166504
    8. '	v' → logprob: -11.137986183166504
    9. ')' → logprob: -12.512986183166504
    10. '``' → logprob: -12.637986183166504

Token 949: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.03640975058078766
    2. '   ' → logprob: -3.786409854888916
    3. 'bar' → logprob: -4.786409854888916
    4. 'p' → logprob: -6.161409854888916
    5. 'plane' → logprob: -7.786409854888916
    6. 'wall' → logprob: -8.536409378051758
    7. 'b' → logprob: -8.661409378051758
    8. 'U' → logprob: -8.786409378051758
    9. 'vc' → logprob: -8.786409378051758
    10. 'n' → logprob: -8.911409378051758

Token 950: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.0722858102526516e-05
    2. 'ert' → logprob: -11.125041007995605
    3. 'ector' → logprob: -11.625041007995605
    4. 'ectors' → logprob: -11.750041007995605
    5. '1' → logprob: -12.625041007995605
    6. ' =' → logprob: -13.125041007995605
    7. '2' → logprob: -14.750041007995605
    8. 'ersion' → logprob: -14.875041007995605
    9. 'ect' → logprob: -15.125041007995605
    10. 'er' → logprob: -15.250041007995605

Token 951: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020667314529419
    2. ' =' → logprob: -2.3502066135406494
    3. '=list' → logprob: -17.85020637512207
    4. ')' → logprob: -18.22520637512207
    5. '＝' → logprob: -18.72520637512207
    6. ' ' → logprob: -19.35020637512207
    7. '=[]' → logprob: -19.35020637512207
    8. '(' → logprob: -19.72520637512207
    9. ')=' → logprob: -19.85020637512207
    10. '=line' → logprob: -20.22520637512207

Token 952: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.001170225441455841
    2. ' list' → logprob: -6.7511701583862305
    3. '=list' → logprob: -20.501171112060547
    4. '(list' → logprob: -21.376171112060547
    5. '[list' → logprob: -23.251171112060547
    6. '	list' → logprob: -23.751171112060547
    7. 'List' → logprob: -24.251171112060547
    8. '.list' → logprob: -24.251171112060547
    9. 'int' → logprob: -24.751171112060547
    10. ':list' → logprob: -24.876171112060547

Token 953: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2039518505334854
    2. '(list' → logprob: -1.7039518356323242
    3. '=list' → logprob: -6.578951835632324
    4. '(' → logprob: -7.703951835632324
    5. '(input' → logprob: -8.578951835632324
    6. '(int' → logprob: -8.703951835632324
    7. '=' → logprob: -9.328951835632324
    8. 'map' → logprob: -9.953951835632324
    9. '(tuple' → logprob: -10.328951835632324
    10. '(
' → logprob: -10.453951835632324

Token 954: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3133554756641388
    2. 'int' → logprob: -1.3133554458618164
    3. '=int' → logprob: -9.438355445861816
    4. '[int' → logprob: -11.688355445861816
    5. ',int' → logprob: -13.313355445861816
    6. ' int' → logprob: -13.438355445861816
    7. '<int' → logprob: -13.563355445861816
    8. ']int' → logprob: -15.063355445861816
    9. '	int' → logprob: -15.188355445861816
    10. 'ints' → logprob: -15.688355445861816

Token 955: ',' (ID: 11)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.037612657994031906
    2. '(int' → logprob: -3.7876126766204834
    3. 'input' → logprob: -5.537612438201904
    4. ',' → logprob: -5.537612438201904
    5. '=int' → logprob: -5.912612438201904
    6. ',int' → logprob: -6.537612438201904
    7. '))' → logprob: -7.037612438201904
    8. '=input' → logprob: -8.162612915039062
    9. ',input' → logprob: -8.537612915039062
    10. '(input' → logprob: -8.537612915039062

Token 956: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008774462155997753
    2. 'list' → logprob: -4.758774280548096
    3. ' input' → logprob: -8.758774757385254
    4. 'int' → logprob: -13.258774757385254
    5. ' list' → logprob: -14.133774757385254
    6. '(input' → logprob: -15.258774757385254
    7. '   ' → logprob: -16.883773803710938
    8. 'import' → logprob: -17.258773803710938
    9. '=input' → logprob: -17.508773803710938
    10. '<input' → logprob: -18.258773803710938

Token 957: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.436450636712834e-05
    2. '.split' → logprob: -10.000094413757324
    3. '()' → logprob: -10.250094413757324
    4. '[].' → logprob: -12.625094413757324
    5. '()[' → logprob: -13.375094413757324
    6. 's' → logprob: -13.625094413757324
    7. '())' → logprob: -13.750094413757324
    8. '(),' → logprob: -13.875094413757324
    9. '()))' → logprob: -14.375094413757324
    10. '[]' → logprob: -14.375094413757324

Token 958: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.07035508006811142
    2. '3' → logprob: -2.695355176925659
    3. 'int' → logprob: -8.445355415344238
    4. '0' → logprob: -9.320355415344238
    5. '2' → logprob: -10.445355415344238
    6. '```' → logprob: -10.570355415344238
    7. '1' → logprob: -10.820355415344238
    8. 'list' → logprob: -11.320355415344238
    9. '.split' → logprob: -11.695355415344238
    10. 'input' → logprob: -12.445355415344238

Token 959: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.049967486411333084
    2. '()))' → logprob: -3.0499675273895264
    3. '()' → logprob: -7.049967288970947
    4. ')' → logprob: -7.799967288970947
    5. '())' → logprob: -9.549967765808105
    6. '))
' → logprob: -11.424967765808105
    7. '()))
' → logprob: -11.549967765808105
    8. '   ' → logprob: -12.299967765808105
    9. ')))' → logprob: -13.049967765808105
    10. ' ))' → logprob: -14.424967765808105

Token 960: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002788826823234558
    2. 'd' → logprob: -7.00278902053833
    3. 'p' → logprob: -7.25278902053833
    4. 'direction' → logprob: -8.127788543701172
    5. '```' → logprob: -8.252788543701172
    6. 'dx' → logprob: -9.002788543701172
    7. 'v' → logprob: -9.252788543701172
    8. 'dp' → logprob: -9.502788543701172
    9. '    
' → logprob: -10.002788543701172
    10. 'def' → logprob: -10.002788543701172

Token 961: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8470520377159119
    2. 'direction' → logprob: -1.3470520973205566
    3. 'dir' → logprob: -2.0970520973205566
    4. 'if' → logprob: -3.0970520973205566
    5. 'dp' → logprob: -3.4720520973205566
    6. 'diff' → logprob: -4.347052097320557
    7. 'p' → logprob: -4.347052097320557
    8. 'vec' → logprob: -4.347052097320557
    9. 'v' → logprob: -4.597052097320557
    10. 'delta' → logprob: -5.097052097320557

Token 962: ' If' (ID: 1843)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -1.0628076791763306
    2. 'd' → logprob: -1.3128076791763306
    3. 'if' → logprob: -2.187807559967041
    4. '#' → logprob: -2.437807559967041
    5. 'dir' → logprob: -2.937807559967041
    6. 'bar' → logprob: -3.562807559967041
    7. 'v' → logprob: -4.187807559967041
    8. 'vector' → logprob: -4.437807559967041
    9. 'vec' → logprob: -4.937807559967041
    10. 'p' → logprob: -4.937807559967041

Token 963: ' enemy' (ID: 20935)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.4702077805995941
    2. 'is' → logprob: -1.5952078104019165
    3. ' segment' → logprob: -2.970207691192627
    4. 'vector' → logprob: -3.095207691192627
    5. ' is' → logprob: -3.470207691192627
    6. 'point' → logprob: -3.970207691192627
    7. ' vector' → logprob: -4.595207691192627
    8. 'U' → logprob: -5.220207691192627
    9. 'dot' → logprob: -6.720207691192627
    10. 'v' → logprob: -6.845207691192627

Token 964: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47795239090919495
    2. 'in' → logprob: -2.977952480316162
    3. '==' → logprob: -2.977952480316162
    4. 'and' → logprob: -3.352952480316162
    5. 'is' → logprob: -3.602952480316162
    6. 'on' → logprob: -3.852952480316162
    7. '_on' → logprob: -3.852952480316162
    8. 'lies' → logprob: -4.102952480316162
    9. ' ==' → logprob: -4.477952480316162
    10. 's' → logprob: -4.602952480316162

Token 965: ' inside' (ID: 6772)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.7773890495300293
    2. 'inside' → logprob: -1.9023890495300293
    3. 'on' → logprob: -2.0273890495300293
    4. ' is' → logprob: -2.4023890495300293
    5. 'vector' → logprob: -2.7773890495300293
    6. ' vector' → logprob: -3.2773890495300293
    7. 'point' → logprob: -4.152389049530029
    8. ' inside' → logprob: -4.402389049530029
    9. ' on' → logprob: -4.402389049530029
    10. 'in' → logprob: -5.027389049530029

Token 966: ' triangle' (ID: 41487)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.4211922287940979
    2. 'is' → logprob: -1.6711921691894531
    3. 'if' → logprob: -2.671192169189453
    4. 'triangle' → logprob: -3.421192169189453
    5. 'vector' → logprob: -3.546192169189453
    6. 'or' → logprob: -4.671192169189453
    7. 'v' → logprob: -5.671192169189453
    8. ' is' → logprob: -6.171192169189453
    9. ' or' → logprob: -6.421192169189453
    10. 'the' → logprob: -6.421192169189453

Token 967: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002003218833124265
    2. ' if' → logprob: -9.250200271606445
    3. ' or' → logprob: -10.750200271606445
    4. ',' → logprob: -11.000200271606445
    5. 'if' → logprob: -11.125200271606445
    6. '<|end|>' → logprob: -11.125200271606445
    7. ':' → logprob: -11.250200271606445
    8. '
' → logprob: -12.000200271606445
    9. '    
' → logprob: -12.500200271606445
    10. '(' → logprob: -12.625200271606445

Token 968: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.619311974034645e-05
    2. ' if' → logprob: -11.125036239624023
    3. ' and' → logprob: -12.000036239624023
    4. ' or' → logprob: -12.375036239624023
    5. '<|end|>' → logprob: -12.750036239624023
    6. 'and' → logprob: -13.250036239624023
    7. 'if' → logprob: -13.250036239624023
    8. ':' → logprob: -13.375036239624023
    9. ')' → logprob: -14.250036239624023
    10. ',' → logprob: -14.250036239624023

Token 969: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.038459811359643936
    2. '   ' → logprob: -3.2884597778320312
    3. ' if' → logprob: -7.788459777832031
    4. '```' → logprob: -13.038459777832031
    5. '	if' → logprob: -13.788459777832031
    6. 'If' → logprob: -15.288459777832031
    7. '    
' → logprob: -16.28845977783203
    8. '`' → logprob: -16.66345977783203
    9. '``' → logprob: -17.41345977783203
    10. ')' → logprob: -17.78845977783203

Token 970: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.32014524936676025
    2. ' point' → logprob: -1.5701452493667603
    3. 'is' → logprob: -3.1951451301574707
    4. ' is' → logprob: -3.6951451301574707
    5. '   ' → logprob: -9.695145606994629
    6. 'vector' → logprob: -10.695145606994629
    7. '(point' → logprob: -11.445145606994629
    8. ' vector' → logprob: -11.695145606994629
    9. ' ' → logprob: -11.945145606994629
    10. '	point' → logprob: -12.195145606994629

Token 971: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.2664456789934775e-06
    2. '_on' → logprob: -15.500000953674316
    3. '(_' → logprob: -15.500000953674316
    4. '_' → logprob: -15.750000953674316
    5. '_inside' → logprob: -15.875000953674316
    6. 'in' → logprob: -16.000001907348633
    7. '(' → logprob: -16.125001907348633
    8. ')_' → logprob: -16.375001907348633
    9. '(point' → logprob: -17.125001907348633
    10. 's' → logprob: -17.250001907348633

Token 972: '_triangle' (ID: 187218)
  Prédit: '_triangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_triangle' → logprob: -0.0008451257599517703
    2. 'triangle' → logprob: -7.125844955444336
    3. '_' → logprob: -10.625844955444336
    4. '_tri' → logprob: -11.250844955444336
    5. '_rectangle' → logprob: -14.000844955444336
    6. '_tr' → logprob: -14.750844955444336
    7. '3' → logprob: -14.750844955444336
    8. '_polygon' → logprob: -14.875844955444336
    9. '_t' → logprob: -15.125844955444336
    10. ' triangle' → logprob: -15.750844955444336

Token 973: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.4121114822482923e-06
    2. '3' → logprob: -13.000003814697266
    3. '(' → logprob: -14.500003814697266
    4. ' _' → logprob: -15.250003814697266
    5. 's' → logprob: -16.375003814697266
    6. '(_' → logprob: -17.625003814697266
    7. '```' → logprob: -17.750003814697266
    8. '‌' → logprob: -17.875003814697266
    9. ' (' → logprob: -17.875003814697266
    10. '1' → logprob: -18.062503814697266

Token 974: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.011049231514334679
    2. '_' → logprob: -4.511049270629883
    3. 'triangle' → logprob: -15.011049270629883
    4. '
' → logprob: -15.136049270629883
    5. '```' → logprob: -15.386049270629883
    6. '۳' → logprob: -16.448549270629883
    7. 'def' → logprob: -16.448549270629883
    8. '_
' → logprob: -17.136049270629883
    9. '

' → logprob: -17.198549270629883
    10. ' ' → logprob: -17.448549270629883

Token 975: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00044651966891251504
    2. '3' → logprob: -7.750446319580078
    3. '_d' → logprob: -11.375446319580078
    4. 'D' → logprob: -13.125446319580078
    5. '(p' → logprob: -14.250446319580078
    6. 'д' → logprob: -15.250446319580078
    7. ' d' → logprob: -15.375446319580078
    8. '(d' → logprob: -15.875446319580078
    9. '(' → logprob: -16.000446319580078
    10. '
' → logprob: -16.125446319580078

Token 976: '(enemy' (ID: 133101)
  Prédit: '(enemy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(enemy' → logprob: -1.1756367712223437e-05
    2. ' (' → logprob: -11.750011444091797
    3. '(en' → logprob: -13.375011444091797
    4. '(' → logprob: -13.375011444091797
    5. 'enemy' → logprob: -15.000011444091797
    6. '(employee' → logprob: -15.750011444091797
    7. '(
' → logprob: -15.875011444091797
    8. ' enemy' → logprob: -16.500011444091797
    9. '(e' → logprob: -17.500011444091797
    10. '   ' → logprob: -17.875011444091797

Token 977: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035773839335888624
    2. '(v' → logprob: -6.00357723236084
    3. ' ,' → logprob: -7.00357723236084
    4. '(' → logprob: -9.25357723236084
    5. ',v' → logprob: -10.00357723236084
    6. '(U' → logprob: -10.62857723236084
    7. 'v' → logprob: -11.25357723236084
    8. ',U' → logprob: -12.37857723236084
    9. ',
' → logprob: -12.75357723236084
    10. ' (' → logprob: -13.00357723236084

Token 978: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007151735480874777
    2. ' v' → logprob: -7.250715255737305
    3. '   ' → logprob: -13.000715255737305
    4. 'u' → logprob: -14.000715255737305
    5. '(v' → logprob: -15.000715255737305
    6. '	v' → logprob: -15.000715255737305
    7. '
' → logprob: -15.000715255737305
    8. ')' → logprob: -15.750715255737305
    9. 'U' → logprob: -16.125715255737305
    10. 'V' → logprob: -16.250715255737305

Token 979: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. '3' → logprob: -13.250001907348633
    3. '[' → logprob: -16.000001907348633
    4. '2' → logprob: -18.250001907348633
    5. '   ' → logprob: -18.312501907348633
    6. '```' → logprob: -18.437501907348633
    7. ' ' → logprob: -18.562501907348633
    8. '
' → logprob: -18.625001907348633
    9. 'a' → logprob: -19.375001907348633
    10. '(' → logprob: -19.437501907348633

Token 980: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009753053891472518
    2. ',v' → logprob: -7.000975131988525
    3. ' ,' → logprob: -9.875975608825684
    4. 'v' → logprob: -11.875975608825684
    5. ',
' → logprob: -12.750975608825684
    6. ')' → logprob: -13.625975608825684
    7. '   ' → logprob: -15.000975608825684
    8. '[' → logprob: -15.250975608825684
    9. ' v' → logprob: -16.000974655151367
    10. '
' → logprob: -17.063474655151367

Token 981: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00020354038861114532
    2. ' v' → logprob: -8.500203132629395
    3. 'V' → logprob: -17.37520408630371
    4. '	v' → logprob: -18.25020408630371
    5. '
' → logprob: -18.50020408630371
    6. '   ' → logprob: -19.37520408630371
    7. ',v' → logprob: -19.62520408630371
    8. ')v' → logprob: -19.62520408630371
    9. '_v' → logprob: -20.25020408630371
    10. 'u' → logprob: -20.25020408630371

Token 982: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011796683247666806
    2. ',' → logprob: -9.125118255615234
    3. '3' → logprob: -12.250118255615234
    4. '1' → logprob: -13.125118255615234
    5. ',v' → logprob: -14.250118255615234
    6. ' ' → logprob: -14.500118255615234
    7. '   ' → logprob: -15.375118255615234
    8. ')' → logprob: -15.375118255615234
    9. ' ,' → logprob: -16.000118255615234
    10. 'a' → logprob: -16.250118255615234

Token 983: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007195535581558943
    2. ',v' → logprob: -5.007195472717285
    3. 'v' → logprob: -7.757195472717285
    4. ' ,' → logprob: -10.007195472717285
    5. ',
' → logprob: -12.257195472717285
    6. ')' → logprob: -13.757195472717285
    7. ' v' → logprob: -14.632195472717285
    8. '
' → logprob: -16.2571964263916
    9. ',\
' → logprob: -16.2571964263916
    10. '_,' → logprob: -16.3821964263916

Token 984: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0004307884373702109
    2. ' v' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.875431060791016
    4. '	v' → logprob: -18.000431060791016
    5. '    ' → logprob: -18.500431060791016
    6. '
' → logprob: -18.750431060791016
    7. ')' → logprob: -18.750431060791016
    8. ' ' → logprob: -19.125431060791016
    9. ')v' → logprob: -19.125431060791016
    10. '  ' → logprob: -19.625431060791016

Token 985: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00043686782009899616
    2. ',' → logprob: -7.750436782836914
    3. '   ' → logprob: -13.125436782836914
    4. ')' → logprob: -13.750436782836914
    5. 'v' → logprob: -14.000436782836914
    6. 'c' → logprob: -14.250436782836914
    7. ' ' → logprob: -14.375436782836914
    8. ',v' → logprob: -14.500436782836914
    9. ' ,' → logprob: -15.875436782836914
    10. 'a' → logprob: -16.500436782836914

Token 986: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12771685421466827
    2. '):
' → logprob: -2.1277167797088623
    3. ')' → logprob: -7.377717018127441
    4. ',' → logprob: -9.252717018127441
    5. '   ' → logprob: -10.752717018127441
    6. ' ):' → logprob: -11.377717018127441
    7. '):

' → logprob: -11.377717018127441
    8. '):
' → logprob: -11.377717018127441
    9. ':' → logprob: -13.002717018127441
    10. ')==' → logprob: -13.377717018127441

Token 987: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005687602679245174
    2. ':' → logprob: -7.625568866729736
    3. ':
' → logprob: -9.750568389892578
    4. '   ' → logprob: -12.000568389892578
    5. ' and' → logprob: -12.625568389892578
    6. ':return' → logprob: -12.625568389892578
    7. ' or' → logprob: -12.875568389892578
    8. ' return' → logprob: -13.000568389892578
    9. 'return' → logprob: -14.000568389892578
    10. '      ' → logprob: -14.250568389892578

Token 988: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0024882610887289047
    2. '   ' → logprob: -6.002488136291504
    3. ' print' → logprob: -11.627488136291504
    4. '
' → logprob: -13.127488136291504
    5. 'return' → logprob: -13.752488136291504
    6. '	print' → logprob: -15.502488136291504
    7. '       ' → logprob: -16.00248908996582
    8. '```' → logprob: -16.25248908996582
    9. '    
' → logprob: -16.62748908996582
    10. 'Print' → logprob: -16.87748908996582

Token 989: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.13707715272903442
    2. '(' → logprob: -2.1370770931243896
    3. '('' → logprob: -5.012077331542969
    4. '(-' → logprob: -5.762077331542969
    5. '0' → logprob: -8.762077331542969
    6. '"' → logprob: -10.012077331542969
    7. '("-' → logprob: -10.887077331542969
    8. '(":' → logprob: -10.887077331542969
    9. '("#' → logprob: -11.637077331542969
    10. '(
' → logprob: -12.262077331542969

Token 990: 'MISS' (ID: 113585)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.4006834030151367
    2. 'YES' → logprob: -2.0256834030151367
    3. 'B' → logprob: -2.6506834030151367
    4. 'Barrier' → logprob: -3.7756834030151367
    5. '0' → logprob: -4.275683403015137
    6. 'BRO' → logprob: -4.275683403015137
    7. 'Yes' → logprob: -4.400683403015137
    8. 'H' → logprob: -4.650683403015137
    9. '"' → logprob: -4.900683403015137
    10. 'No' → logprob: -5.150683403015137

Token 991: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.25204581022262573
    2. '")
' → logprob: -1.5020458698272705
    3. '")
' → logprob: -9.252045631408691
    4. ')' → logprob: -12.502045631408691
    5. '")

' → logprob: -12.502045631408691
    6. 's' → logprob: -12.877045631408691
    7. '"' → logprob: -13.002045631408691
    8. 'E' → logprob: -13.252045631408691
    9. 'e' → logprob: -13.752045631408691
    10. 'S' → logprob: -13.877045631408691

Token 992: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015053401002660394
    2. '   ' → logprob: -6.501505374908447
    3. '```' → logprob: -13.376504898071289
    4. '<|end|>' → logprob: -15.251504898071289
    5. '    
' → logprob: -15.376504898071289
    6. '           ' → logprob: -15.626504898071289
    7. ',' → logprob: -16.37650489807129
    8. '     ' → logprob: -16.50150489807129
    9. '
' → logprob: -16.62650489807129
    10. ')' → logprob: -16.75150489807129

Token 993: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009637462790124118
    2. '   ' → logprob: -7.0009636878967285
    3. 'return' (adapté à ' return') → logprob: -10.750964164733887
    4. ' return' → logprob: -10.875964164733887
    5. '
' → logprob: -12.375964164733887
    6. '	return' → logprob: -12.750964164733887
    7. '	' → logprob: -13.625964164733887
    8. '    
' → logprob: -14.000964164733887
    9. ' ' → logprob: -14.125964164733887
    10. '```' → logprob: -15.125964164733887

Token 994: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1568940430879593
    2. '
' → logprob: -2.4068939685821533
    3. '    
' → logprob: -2.9068939685821533
    4. '```' → logprob: -8.781893730163574
    5. '    
    
' → logprob: -9.906893730163574
    6. '<|end|>' → logprob: -9.906893730163574
    7. '  
' → logprob: -9.906893730163574
    8. '        
' → logprob: -10.031893730163574
    9. '   
' → logprob: -10.281893730163574
    10. 'if' → logprob: -10.906893730163574

Token 995: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003813376184552908
    2. '
' → logprob: -6.12881326675415
    3. '    
' → logprob: -6.75381326675415
    4. '```' → logprob: -8.128813743591309
    5. 'if' → logprob: -9.003813743591309
    6. ' if' → logprob: -11.003813743591309
    7. '  
' → logprob: -11.628813743591309
    8. 'p' → logprob: -12.378813743591309
    9. '   
' → logprob: -12.378813743591309
    10. '        
' → logprob: -13.128813743591309

Token 996: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09691788256168365
    2. 'for' → logprob: -3.4719178676605225
    3. 'd' → logprob: -3.7219178676605225
    4. 'direction' → logprob: -4.471918106079102
    5. '   ' → logprob: -4.596918106079102
    6. 'dir' → logprob: -4.971918106079102
    7. '#' (adapté à ' #') → logprob: -6.596918106079102
    8. 't' → logprob: -6.846918106079102
    9. 'dp' → logprob: -7.096918106079102
    10. 'path' → logprob: -7.221918106079102

Token 997: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05287197604775429
    2. '#' → logprob: -3.6778719425201416
    3. 'dire' → logprob: -4.552872180938721
    4. 'for' → logprob: -5.052872180938721
    5. 'segments' → logprob: -5.677872180938721
    6. 'd' → logprob: -6.427872180938721
    7. 'bar' → logprob: -6.677872180938721
    8. 'direction' → logprob: -6.927872180938721
    9. 'dir' → logprob: -7.552872180938721
    10. 'edges' → logprob: -8.052871704101562

Token 998: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1356506049633026
    2. 'for' → logprob: -2.635650634765625
    3. ' if' → logprob: -3.885650634765625
    4. 'segments' → logprob: -4.260650634765625
    5. 'all' → logprob: -5.385650634765625
    6. 'segment' → logprob: -5.510650634765625
    7. '#' → logprob: -6.135650634765625
    8. ' for' → logprob: -6.510650634765625
    9. 'dire' → logprob: -6.635650634765625
    10. 'line' → logprob: -6.885650634765625

Token 999: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.00016706773021724075
    2. ' segment' → logprob: -8.750166893005371
    3. '(segment' → logprob: -12.750166893005371
    4. 'not' → logprob: -12.875166893005371
    5. 'any' → logprob: -13.625166893005371
    6. '   ' → logprob: -14.125166893005371
    7. 'point' → logprob: -14.750166893005371
    8. 'is' → logprob: -15.500166893005371
    9. 'line' → logprob: -15.875166893005371
    10. 'segments' → logprob: -16.625167846679688

Token 1000: ' U' (ID: 601)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.3248126208782196
    2. 'inter' → logprob: -1.449812650680542
    3. 'segment' → logprob: -3.949812650680542
    4. '(segment' → logprob: -3.949812650680542
    5. ' intersects' → logprob: -6.199812412261963
    6. '(p' → logprob: -6.699812412261963
    7. '(' → logprob: -8.824812889099121
    8. ' segment' → logprob: -8.949812889099121
    9. '(inter' → logprob: -9.199812889099121
    10. '_segment' → logprob: -9.449812889099121

Token 1001: 'AZ' (ID: 24583)
  Prédit: 'AZ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AZ' → logprob: -3.190178904333152e-05
    2. 'Z' → logprob: -10.875031471252441
    3. 'AZY' → logprob: -11.875031471252441
    4. '_A' → logprob: -13.625031471252441
    5. 'АЗ' → logprob: -14.625031471252441
    6. '_Z' → logprob: -14.750031471252441
    7. 'AS' → logprob: -14.875031471252441
    8. 'ZA' → logprob: -14.875031471252441
    9. ' AZ' → logprob: -15.000031471252441
    10. ',' → logprob: -15.250031471252441

Token 1002: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.806896448135376
    2. 'enemy' → logprob: -1.556896448135376
    3. '(enemy' → logprob: -1.556896448135376
    4. ' enemy' → logprob: -2.806896448135376
    5. 'from' → logprob: -4.181896209716797
    6. ' intersects' → logprob: -4.556896209716797
    7. '_inter' → logprob: -4.806896209716797
    8. 'between' → logprob: -4.931896209716797
    9. '_enemy' → logprob: -5.056896209716797
    10. 'inter' → logprob: -5.431896209716797

Token 1003: 'enemy' (ID: 69748)
  Prédit: 'enemy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enemy' → logprob: -0.003601140109822154
    2. ' enemy' → logprob: -5.62860107421875
    3. '(enemy' → logprob: -15.00360107421875
    4. 'segment' → logprob: -15.75360107421875
    5. 'enem' → logprob: -16.25360107421875
    6. 'e' → logprob: -16.62860107421875
    7. '
' → logprob: -16.62860107421875
    8. '   ' → logprob: -16.75360107421875
    9. '```' → logprob: -16.87860107421875
    10. 'en' → logprob: -17.00360107421875

Token 1004: ' intersects' (ID: 198484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08409494906663895
    2. 'inter' → logprob: -3.584095001220703
    3. ' intersects' → logprob: -3.959095001220703
    4. ' if' → logprob: -4.084095001220703
    5. 'if' → logprob: -4.209095001220703
    6. '_inter' → logprob: -6.709095001220703
    7. ' is' → logprob: -8.709095001220703
    8. ',' → logprob: -8.834095001220703
    9. 'hits' → logprob: -9.084095001220703
    10. ' hits' → logprob: -9.834095001220703

Token 1005: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3626330494880676
    2. '(v' → logprob: -2.112632989883423
    3. ' the' → logprob: -2.237632989883423
    4. 'with' → logprob: -3.612632989883423
    5. 'triangle' → logprob: -3.862632989883423
    6. ' with' → logprob: -4.487633228302002
    7. '   ' → logprob: -4.487633228302002
    8. 'segment' → logprob: -5.987633228302002
    9. 'v' → logprob: -7.237633228302002
    10. '(u' → logprob: -7.362633228302002

Token 1006: ' barrier' (ID: 38358)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.16638749837875366
    2. ' segment' → logprob: -2.9163875579833984
    3. 'v' → logprob: -3.0413875579833984
    4. 'triangle' → logprob: -3.0413875579833984
    5. ' triangle' → logprob: -6.041387557983398
    6. '[v' → logprob: -8.416387557983398
    7. ' v' → logprob: -8.541387557983398
    8. 'def' → logprob: -8.916387557983398
    9. 'point' → logprob: -9.041387557983398
    10. '(v' → logprob: -9.291387557983398

Token 1007: ' triangle' (ID: 41487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00196645874530077
    2. 'if' → logprob: -6.37696647644043
    3. ' if' → logprob: -8.25196647644043
    4. '    
' → logprob: -13.50196647644043
    5. '```' → logprob: -13.75196647644043
    6. '	if' → logprob: -14.62696647644043
    7. '
' → logprob: -15.87696647644043
    8. '`' → logprob: -16.12696647644043
    9. ',' → logprob: -16.87696647644043
    10. '       ' → logprob: -17.00196647644043

Token 1008: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00039849523454904556
    2. 'if' → logprob: -7.875398635864258
    3. ' if' → logprob: -11.125398635864258
    4. '    
' → logprob: -13.250398635864258
    5. '```' → logprob: -13.875398635864258
    6. '
' → logprob: -14.375398635864258
    7. '	if' → logprob: -16.125398635864258
    8. '`' → logprob: -16.500398635864258
    9. '<|end|>' → logprob: -16.625398635864258
    10. 'for' → logprob: -16.875398635864258

Token 1009: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006372620700858533
    2. 'if' → logprob: -7.375637054443359
    3. ' if' → logprob: -12.00063705444336
    4. '```' → logprob: -12.50063705444336
    5. '    
' → logprob: -14.50063705444336
    6. '
' → logprob: -15.50063705444336
    7. '`' → logprob: -16.50063705444336
    8. 'for' → logprob: -17.25063705444336
    9. '	if' → logprob: -17.37563705444336
    10. '       ' → logprob: -17.75063705444336

Token 1010: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011107249185442924
    2. '   ' → logprob: -4.511107444763184
    3. ' if' → logprob: -9.761107444763184
    4. '    
' → logprob: -13.886107444763184
    5. 'inter' → logprob: -14.386107444763184
    6. '```' → logprob: -15.886107444763184
    7. '	if' → logprob: -16.636106491088867
    8. '
' → logprob: -16.886106491088867
    9. 'result' → logprob: -17.011106491088867
    10. 'p' → logprob: -18.136106491088867

Token 1011: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.023245826363563538
    2. ' segment' → logprob: -3.7732458114624023
    3. '(segment' → logprob: -15.023245811462402
    4. '   ' → logprob: -20.64824676513672
    5. '.segment' → logprob: -20.89824676513672
    6. 'not' → logprob: -21.52324676513672
    7. '_segment' → logprob: -21.89824676513672
    8. ' segmento' → logprob: -22.27324676513672
    9. 'Segment' → logprob: -22.52324676513672
    10. 'section' → logprob: -22.64824676513672

Token 1012: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -1.9361264946837764e-07
    2. '_in' → logprob: -16.375
    3. '_INTER' → logprob: -18.125
    4. '_' → logprob: -18.25
    5. '_int' → logprob: -18.875
    6. 's' → logprob: -19.375
    7. '_im' → logprob: -19.5
    8. '_integr' → logprob: -19.625
    9. 'inter' → logprob: -19.75
    10. '_interrupt' → logprob: -19.75

Token 1013: 'sects' (ID: 105681)
  Prédit: 'sects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sects' → logprob: -0.005253918468952179
    2. 'ects' → logprob: -5.255253791809082
    3. 'sect' → logprob: -11.505253791809082
    4. 'cts' → logprob: -12.880253791809082
    5. 's' → logprob: -13.255253791809082
    6. '```' → logprob: -13.380253791809082
    7. '(' → logprob: -14.255253791809082
    8. 'erse' → logprob: -14.505253791809082
    9. 'ts' → logprob: -14.630253791809082
    10. '[' → logprob: -15.130253791809082

Token 1014: '_triangle' (ID: 187218)
  Prédit: '_triangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_triangle' → logprob: -0.03214407339692116
    2. '(p' → logprob: -4.282144069671631
    3. 'triangle' → logprob: -4.907144069671631
    4. '(U' → logprob: -5.157144069671631
    5. '_segment' → logprob: -5.657144069671631
    6. '(u' → logprob: -7.657144069671631
    7. '_' → logprob: -8.532144546508789
    8. '_tri' → logprob: -8.907144546508789
    9. 'segment' → logprob: -9.157144546508789
    10. '(' → logprob: -9.282144546508789

Token 1015: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.750001907348633
    3. '(
' → logprob: -15.375001907348633
    4. 'U' → logprob: -15.875001907348633
    5. '((' → logprob: -16.875001907348633
    6. ' (' → logprob: -16.875001907348633
    7. '(u' → logprob: -17.250001907348633
    8. '   ' → logprob: -17.750001907348633
    9. '```' → logprob: -18.500001907348633
    10. '[' → logprob: -18.500001907348633

Token 1016: 'AZ' (ID: 24583)
  Prédit: 'AZ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AZ' → logprob: -1.2113979209971149e-05
    2. 'Z' → logprob: -12.625012397766113
    3. 'A' → logprob: -13.375012397766113
    4. 'AZY' → logprob: -13.375012397766113
    5. 'АЗ' → logprob: -13.375012397766113
    6. ',' → logprob: -13.625012397766113
    7. 'Az' → logprob: -14.125012397766113
    8. 'az' → logprob: -14.500012397766113
    9. ' AZ' → logprob: -14.625012397766113
    10. 'enemy' → logprob: -15.875012397766113

Token 1017: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001843485952122137
    2. ' ,' → logprob: -8.875184059143066
    3. '(enemy' → logprob: -10.375184059143066
    4. 'enemy' → logprob: -12.125184059143066
    5. ',
' → logprob: -12.500184059143066
    6. ',en' → logprob: -13.500184059143066
    7. '   ' → logprob: -14.375184059143066
    8. ' enemy' → logprob: -14.750184059143066
    9. '(' → logprob: -15.000184059143066
    10. '[' → logprob: -15.125184059143066

Token 1018: ' enemy' (ID: 20935)
  Prédit: 'enemy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enemy' → logprob: -0.00033558503491804004
    2. ' enemy' → logprob: -8.000335693359375
    3. '(enemy' → logprob: -16.625335693359375
    4. '   ' → logprob: -17.375335693359375
    5. '.enemy' → logprob: -19.875335693359375
    6. 'employee' → logprob: -20.250335693359375
    7. 'Enemy' → logprob: -20.625335693359375
    8. '[' → logprob: -20.875335693359375
    9. ' ' → logprob: -20.875335693359375
    10. 'enem' → logprob: -21.250335693359375

Token 1019: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010008628305513412
    2. ',v' → logprob: -9.500100135803223
    3. ' ,' → logprob: -11.125100135803223
    4. ',
' → logprob: -12.000100135803223
    5. 'v' → logprob: -12.750100135803223
    6. '(' → logprob: -14.625100135803223
    7. ',

' → logprob: -15.375100135803223
    8. '(v' → logprob: -15.500100135803223
    9. '   ' → logprob: -16.000099182128906
    10. ')' → logprob: -16.250099182128906

Token 1020: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0001242772996192798
    2. ' v' → logprob: -9.000123977661133
    3. '	v' → logprob: -14.500123977661133
    4. '   ' → logprob: -15.125123977661133
    5. '    ' → logprob: -18.750123977661133
    6. '(v' → logprob: -19.000123977661133
    7. ')v' → logprob: -20.250123977661133
    8. ',v' → logprob: -20.375123977661133
    9. 'vq' → logprob: -20.625123977661133
    10. '*v' → logprob: -20.875123977661133

Token 1021: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.47495681833243e-05
    2. '3' → logprob: -11.250024795532227
    3. '2' → logprob: -11.500024795532227
    4. '[' → logprob: -13.875024795532227
    5. 'ectors' → logprob: -15.250024795532227
    6. 'ector' → logprob: -15.875024795532227
    7. '```' → logprob: -17.000024795532227
    8. 'ect' → logprob: -17.125024795532227
    9. 'alue' → logprob: -17.875024795532227
    10. '   ' → logprob: -17.875024795532227

Token 1022: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004125575942452997
    2. ',v' → logprob: -7.875412464141846
    3. ' ,' → logprob: -10.375412940979004
    4. ',
' → logprob: -14.125412940979004
    5. 'v' → logprob: -14.875412940979004
    6. '   ' → logprob: -16.000411987304688
    7. ')' → logprob: -18.125411987304688
    8. ' ' → logprob: -18.875411987304688
    9. ',u' → logprob: -18.875411987304688
    10. '[' → logprob: -19.000411987304688

Token 1023: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00033546582562848926
    2. ' v' → logprob: -8.000335693359375
    3. '	v' → logprob: -19.250335693359375
    4. ',v' → logprob: -20.750335693359375
    5. '   ' → logprob: -21.375335693359375
    6. ')v' → logprob: -21.375335693359375
    7. '
' → logprob: -21.625335693359375
    8. '<v' → logprob: -22.625335693359375
    9. '    ' → logprob: -23.125335693359375
    10. '[v' → logprob: -23.250335693359375

Token 1024: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34879547357559204
    2. '3' → logprob: -1.2237954139709473
    3. ',' → logprob: -8.223795890808105
    4. ' ' → logprob: -9.848795890808105
    5. '[' → logprob: -11.723795890808105
    6. 'v' → logprob: -12.223795890808105
    7. ')' → logprob: -12.473795890808105
    8. '23' → logprob: -12.598795890808105
    9. '   ' → logprob: -13.098795890808105
    10. ',v' → logprob: -14.098795890808105

Token 1025: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004074354947078973
    2. ',v' → logprob: -7.8754072189331055
    3. ' ,' → logprob: -11.250407218933105
    4. 'v' → logprob: -11.875407218933105
    5. ',
' → logprob: -12.125407218933105
    6. ')' → logprob: -14.500407218933105
    7. '   ' → logprob: -14.625407218933105
    8. '_,' → logprob: -15.375407218933105
    9. '[' → logprob: -16.125408172607422
    10. '3' → logprob: -16.125408172607422

Token 1026: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001170225441455841
    2. ' v' → logprob: -6.7511701583862305
    3. '   ' → logprob: -18.126171112060547
    4. '	v' → logprob: -18.376171112060547
    5. '3' → logprob: -20.001171112060547
    6. ' ' → logprob: -20.251171112060547
    7. '    ' → logprob: -20.376171112060547
    8. ')v' → logprob: -20.376171112060547
    9. '[v' → logprob: -20.501171112060547
    10. '
' → logprob: -20.751171112060547

Token 1027: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.6240566083070007e-06
    2. '   ' → logprob: -14.500001907348633
    3. ')' → logprob: -15.375001907348633
    4. 'v' → logprob: -15.625001907348633
    5. 'c' → logprob: -15.750001907348633
    6. ' ' → logprob: -16.125001907348633
    7. '2' → logprob: -16.250001907348633
    8. '[' → logprob: -16.750001907348633
    9. '۳' → logprob: -17.000001907348633
    10. 's' → logprob: -17.250001907348633

Token 1028: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009350438485853374
    2. '):
' → logprob: -7.000935077667236
    3. ':' → logprob: -10.875934600830078
    4. '   ' → logprob: -12.875934600830078
    5. ' ):' → logprob: -13.750934600830078
    6. ')' → logprob: -14.375934600830078
    7. '():' → logprob: -16.000934600830078
    8. '):
' → logprob: -16.250934600830078
    9. '}:' → logprob: -16.875934600830078
    10. '[]):' → logprob: -17.375934600830078

Token 1029: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.3226136767771095e-05
    2. '   ' → logprob: -10.125042915344238
    3. '```' → logprob: -13.750042915344238
    4. 'print' → logprob: -14.125042915344238
    5. '<|end|>' → logprob: -15.000042915344238
    6. '	   ' → logprob: -15.625042915344238
    7. '	' → logprob: -15.750042915344238
    8. '
' → logprob: -15.750042915344238
    9. '[' → logprob: -15.750042915344238
    10. '           ' → logprob: -16.000043869018555

Token 1030: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.40778765082359314
    2. '   ' → logprob: -1.1577876806259155
    3. '       ' → logprob: -3.907787561416626
    4. ' print' → logprob: -7.407787799835205
    5. '	print' → logprob: -11.907787322998047
    6. '```' → logprob: -14.407787322998047
    7. ' ' → logprob: -14.532787322998047
    8. '           ' → logprob: -17.032787322998047
    9. '  ' → logprob: -17.032787322998047
    10. '	' → logprob: -17.782787322998047

Token 1031: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. '('' → logprob: -18.0000057220459
    4. '("\"' → logprob: -19.8750057220459
    5. '(
' → logprob: -20.2500057220459
    6. '("""' → logprob: -20.6250057220459
    7. '("")' → logprob: -20.8750057220459
    8. '('"' → logprob: -20.8750057220459
    9. '("("' → logprob: -20.8750057220459
    10. '("'' → logprob: -21.6250057220459

Token 1032: 'MISS' (ID: 113585)
  Prédit: '"H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"H' → logprob: -1.0525262355804443
    2. '"' → logprob: -1.3025262355804443
    3. 'H' → logprob: -1.8025262355804443
    4. 'BLOCK' → logprob: -2.4275262355804443
    5. 'MISS' → logprob: -2.6775262355804443
    6. '"B' → logprob: -3.1775262355804443
    7. 'B' → logprob: -5.302526473999023
    8. 'STOP' → logprob: -6.427526473999023
    9. 'BAR' → logprob: -6.552526473999023
    10. 'FAIL' → logprob: -6.552526473999023

Token 1033: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.8526411056518555
    2. '   ' → logprob: -1.4776411056518555
    3. '")
' → logprob: -1.4776411056518555
    4. '       ' → logprob: -2.2276411056518555
    5. ')' → logprob: -4.8526411056518555
    6. ')
' → logprob: -6.8526411056518555
    7. '()' → logprob: -8.102641105651855
    8. ')return' → logprob: -8.977641105651855
    9. ')")
' → logprob: -9.477641105651855
    10. '")
' → logprob: -9.852641105651855

Token 1034: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054962292313575745
    2. '       ' → logprob: -2.929962396621704
    3. 'else' → logprob: -9.804962158203125
    4. ' else' → logprob: -11.304962158203125
    5. '<|end|>' → logprob: -11.679962158203125
    6. '	else' → logprob: -13.179962158203125
    7. '```' → logprob: -14.679962158203125
    8. '    
' → logprob: -14.679962158203125
    9. '
' → logprob: -16.054962158203125
    10. ')' → logprob: -16.054962158203125

Token 1035: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12746703624725342
    2. '   ' → logprob: -2.127467155456543
    3. 'return' (adapté à ' return') → logprob: -7.627467155456543
    4. 'else' → logprob: -10.002467155456543
    5. ' ' → logprob: -13.252467155456543
    6. ' return' → logprob: -13.877467155456543
    7. '	return' → logprob: -14.127467155456543
    8. '  ' → logprob: -14.252467155456543
    9. '	' → logprob: -14.377467155456543
    10. '           ' → logprob: -14.502467155456543

Token 1036: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008714676834642887
    2. 'print' → logprob: -4.75871467590332
    3. '
' → logprob: -9.75871467590332
    4. '    
' → logprob: -10.13371467590332
    5. '  
' → logprob: -13.88371467590332
    6. ' print' → logprob: -14.13371467590332
    7. '```' → logprob: -14.50871467590332
    8. '	print' → logprob: -15.00871467590332
    9. '        
' → logprob: -15.75871467590332
    10. '       ' → logprob: -17.38371467590332

Token 1037: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2014157623052597
    2. 'print' → logprob: -1.701415777206421
    3. '    
' → logprob: -14.076416015625
    4. '
' → logprob: -14.201416015625
    5. '```' → logprob: -14.326416015625
    6. ' print' → logprob: -15.076416015625
    7. '	print' → logprob: -15.701416015625
    8. '       ' → logprob: -17.951416015625
    9. '  
' → logprob: -18.326416015625
    10. '``' → logprob: -19.701416015625

Token 1038: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.7729658540920354e-05
    2. '   ' → logprob: -10.500027656555176
    3. ' print' → logprob: -15.750027656555176
    4. '	print' → logprob: -17.375028610229492
    5. '```' → logprob: -20.000028610229492
    6. 'Print' → logprob: -21.250028610229492
    7. '    
' → logprob: -21.750028610229492
    8. 'printf' → logprob: -21.750028610229492
    9. '(print' → logprob: -21.875028610229492
    10. '#print' → logprob: -21.875028610229492

Token 1039: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.004090508911758661
    2. '(' → logprob: -5.504090309143066
    3. '('' → logprob: -11.629090309143066
    4. '("("' → logprob: -13.879090309143066
    5. '('"' → logprob: -14.004090309143066
    6. '(
' → logprob: -14.879090309143066
    7. '"' → logprob: -15.004090309143066
    8. '("\"' → logprob: -15.129090309143066
    9. '(("' → logprob: -15.379090309143066
    10. '("'' → logprob: -16.004091262817383

Token 1040: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.010834281332790852
    2. '"H' → logprob: -5.135834217071533
    3. '"' → logprob: -6.135834217071533
    4. 'YES' → logprob: -6.385834217071533
    5. 'SHOT' → logprob: -8.135834693908691
    6. 'SH' → logprob: -9.010834693908691
    7. 'SUCCESS' → logprob: -9.135834693908691
    8. 'F' → logprob: -9.510834693908691
    9. 'WIN' → logprob: -9.635834693908691
    10. 'SAFE' → logprob: -9.635834693908691

Token 1041: 'IT' (ID: 1468)
  Prédit: 'IT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IT' → logprob: -1.6240566083070007e-06
    2. 'I' → logprob: -14.000001907348633
    3. 'it' → logprob: -15.125001907348633
    4. 'It' → logprob: -15.125001907348633
    5. 'ITS' → logprob: -16.750001907348633
    6. ' IT' → logprob: -16.750001907348633
    7. 'ITT' → logprob: -18.375001907348633
    8. 'ITLE' → logprob: -18.625001907348633
    9. '
' → logprob: -19.000001907348633
    10. 'A' → logprob: -19.125001907348633

Token 1042: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.2519674599170685
    2. ')' → logprob: -1.501967430114746
    3. ')")' → logprob: -10.501967430114746
    4. '')' → logprob: -12.501967430114746
    5. '")
' → logprob: -13.376967430114746
    6. ')
' → logprob: -13.376967430114746
    7. '```' → logprob: -13.376967430114746
    8. '"' → logprob: -14.376967430114746
    9. ' )' → logprob: -14.501967430114746
    10. '()' → logprob: -14.626967430114746

Token 1043: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08841769397258759
    2. '<|end|>' → logprob: -3.2134177684783936
    3. '```' → logprob: -3.5884177684783936
    4. '
' → logprob: -4.3384175300598145
    5. '#' → logprob: -6.7134175300598145
    6. ' if' → logprob: -7.5884175300598145
    7. 'main' → logprob: -7.8384175300598145
    8. '[' → logprob: -7.9634175300598145
    9. '<|end|>' → logprob: -8.463418006896973
    10. '...' → logprob: -8.838418006896973

Token 1044: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6326697468757629
    2. ' __' → logprob: -0.7576697468757629
    3. '_' → logprob: -10.382669448852539
    4. '_name' → logprob: -10.757669448852539
    5. 'name' → logprob: -11.507669448852539
    6. '/__' → logprob: -12.882669448852539
    7. '___' → logprob: -13.882669448852539
    8. 'Name' → logprob: -14.007669448852539
    9. '.__' → logprob: -15.007669448852539
    10. ''' → logprob: -15.257669448852539

Token 1045: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03636445850133896
    2. '==' → logprob: -3.4113645553588867
    3. ' ==' → logprob: -6.786364555358887
    4. '.__' → logprob: -7.411364555358887
    5. '__.__' → logprob: -7.661364555358887
    6. '[' → logprob: -9.161364555358887
    7. '=="' → logprob: -9.286364555358887
    8. '__.' → logprob: -9.286364555358887
    9. 'if' → logprob: -9.661364555358887
    10. '```' → logprob: -10.411364555358887

Token 1046: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.8550976164988242e-05
    2. '__.__' → logprob: -11.125018119812012
    3. '==' → logprob: -13.125018119812012
    4. '___' → logprob: -14.750018119812012
    5. '__["' → logprob: -15.000018119812012
    6. '____' → logprob: -15.375018119812012
    7. '__('' → logprob: -15.625018119812012
    8. '```' → logprob: -15.625018119812012
    9. '__
' → logprob: -15.750018119812012
    10. '=="' → logprob: -15.750018119812012

Token 1047: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.26925206184387207
    2. '==' → logprob: -1.519252061843872
    3. ' ==' → logprob: -4.644251823425293
    4. '=="' → logprob: -4.894251823425293
    5. '=='' → logprob: -10.394251823425293
    6. '__.__' → logprob: -11.519251823425293
    7. '==
' → logprob: -11.894251823425293
    8. '=' → logprob: -12.519251823425293
    9. '___' → logprob: -12.769251823425293
    10. '_' → logprob: -12.894251823425293

Token 1048: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023247109726071358
    2. ''' → logprob: -3.773247003555298
    3. ' "__' → logprob: -13.648246765136719
    4. '__' → logprob: -15.023246765136719
    5. '"user' → logprob: -16.89824676513672
    6. ''"' → logprob: -17.64824676513672
    7. '"'' → logprob: -17.77324676513672
    8. ' '__' → logprob: -17.89824676513672
    9. '"name' → logprob: -18.27324676513672
    10. '"is' → logprob: -18.64824676513672

Token 1049: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2327103614807129
    2. 'main' → logprob: -1.607710361480713
    3. '"' → logprob: -5.482710361480713
    4. ''' → logprob: -5.857710361480713
    5. 'python' → logprob: -9.607709884643555
    6. '__":
' → logprob: -9.607709884643555
    7. 'name' → logprob: -9.732709884643555
    8. '_main' → logprob: -11.607709884643555
    9. '__':
' → logprob: -11.857709884643555
    10. '```' → logprob: -12.482709884643555

Token 1050: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.4765024483203888
    2. '__' → logprob: -0.9765024185180664
    3. '__':
' → logprob: -6.476502418518066
    4. '__.__' → logprob: -7.976502418518066
    5. '__["' → logprob: -8.101502418518066
    6. '__.' → logprob: -8.976502418518066
    7. '__[' → logprob: -9.976502418518066
    8. '__
' → logprob: -10.726502418518066
    9. '__
' → logprob: -11.601502418518066
    10. '__",' → logprob: -11.851502418518066

Token 1051: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00028731857310049236
    2. ' main' → logprob: -8.750287055969238
    3. '   ' → logprob: -9.875287055969238
    4. '__' → logprob: -10.375287055969238
    5. '_main' → logprob: -11.000287055969238
    6. '	main' → logprob: -11.000287055969238
    7. '    
' → logprob: -12.125287055969238
    8. 'run' → logprob: -13.250287055969238
    9. '(main' → logprob: -13.500287055969238
    10. '```' → logprob: -13.625287055969238

Token 1052: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -18.5
    4. '   ' → logprob: -22.375
    5. '_main' → logprob: -24.25
    6. '(main' → logprob: -24.5
    7. '
' → logprob: -24.75
    8. 'import' → logprob: -25.0
    9. '.main' → logprob: -25.0
    10. 'mainwindow' → logprob: -26.375

Token 1053: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1051
Tokens correctement prédits (1ère position, stricte): 472
Tokens correctement prédits (1ère position, avec adaptation): 506
Tokens correctement prédits (top 10): 935
Précision stricte (1ère position): 44.91%
Précision adaptée (1ère position): 48.14%
Précision (top 10): 88.96%
================================================================================
