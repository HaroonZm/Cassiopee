================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

# On cherche le temps minimum (en secondes) pour atteindre le temps t de la scène à VITESSE NORMALE.
# Chaque seconde, on peut choisir d'appuyer sur [3x], sur [1/3x] ou ne rien faire.
# Ces boutons modifient la vitesse de lecture à partir de la seconde suivante (vitesse est multipliée par 3 ou divisée par 3, sauf si la vitesse est déjà normale et on presse [1/3x], elle ne change pas).
#
# On veut minimiser le temps total passé, sachant que le temps "réel" parcouru dans la vidéo est égal à la somme des (secondes écoulées * vitesse au moment de ces secondes).
# La vitesse initiale est normale (1x), et on démarre à la position 0 (millisecondes dans la vidéo).
#
# L'approche est de faire un DFS avec mémorisation pour essayer tous les chemins.
# 
# Arguments clés :
# - pos : position actuelle en secondes dans la vidéo (float ou int)
# - speed : vitesse actuelle (uniquement puissance de 3^n, avec n entier)
# 
# Objectif : atteindre pos == t (la position souhaitée),
# en ayant la position normale de lecture, i.e vitesse == 1 (vitesse normale),
# en minimisant la durée écoulée (en secondes).
#
# On modélise la recherche du temps minimal.
#
# Pour réduire l'état et la mémoire, on note que la vitesse est toujours 3^k pour un entier k (k peut être négatif, 0, ou positif).
# De plus, pos est la distance restante vers t.
#
# Le problème devient : minimiser le temps pour parcourir une distance t avec vitesse pouvant être multipliée ou divisée par 3 aux secondes entières (après le 1er sec, 2nd sec, ...).
# 
# On travaille en distance restante (reste). Comme on peut avancer à vitesse v pendant 1 seconde, puis changer la vitesse.
#
# On utilise une fonction récursive f(remaining_distance, speed_exponent)
#
# On implémente seulement pour distances entières (car t entier), et speed est puissance de 3 (donc on peut stocker l'exposant).
#
# Pour l'exposant : vitesse = 3^k, k entier, vitesse = position avancée par seconde.
#
# On applique aussi un cache (memo) pour éviter recomputations.
#
# Cas de base : if remaining_distance == 0 and speed == 1 -> on a fini, temps = 0
# Si remaining_distance < 0, impossible.
#
# À chaque étape, on peut avancer 1 seconde à la vitesse actuelle (avancer d speed unité),
# puis au prochain instant (dans la prochaine récursion), on peut soit :
# - ne rien faire (garder speed),
# - multiplier speed par 3 (exposant k+1),
# - diviser speed par 3 (exposant k-1), sauf si speed == 1 (exposant == 0) alors on ne peut pas diviser plus bas.
#
# On cherche minimal temps total = 1 + min(f(remaining_distance - speed, speed_modifié))
#
# Restrictions : 
# - remaining_distance et speed sont entiers.
# - remaining_distance >= 0
#
# On limite les exposants car la vitesse peut rapidement devenir énorme ou fragmentée.
#
# Implémentation : une fonction récursive avec cache.

t = int(sys.stdin.readline())

from functools import lru_cache

# On définit la fonction récursive
@lru_cache(None)
def dfs(remaining_distance, speed_exp):
    # remaining_distance >= 0 est un entier
    # vitesse = 3^speed_exp
    if remaining_distance == 0:
        # On doit être à vitesse normale (speed_exp == 0) pour pouvoir "start watching"
        if speed_exp == 0:
            return 0  # on a fini, pas de temps supplémentaire
        else:
            # on doit ramener la vitesse à normale (speed_exp=0) en accélérant ou ralentissant
            # on ne peut rien avancer en avançant vitesse != 1 -> on doit "perdre" du temps à modifier la vitesse
            # Mais comme avancer 1s = avancer 3^k secondes vidéo, on ne peut pas atteindre exact 0 (si vitesse !=1).
            # Donc il faut décomposer le problème:
            # Pour ramener speed_exp à 0, on doit presser le bouton plusieurs fois sans avancer, ce n'est pas possible car chaque pression agit sur la vitesse à la seconde suivante.
            # Donc, pas possible d'être sur une position correcte sauf si on est vitesse normale.
            return 10**18  # infini éloigné

    if remaining_distance < 0:
        # impossible
        return 10**18

    # vitesse réelle
    speed = pow(3, speed_exp)

    res = 10**18

    # On peut prendre 1 seconde à la vitesse actuelle (avancer d'une distance speed)
    # Puis, au moment suivant, on peut choisir d'appuyer sur [3x], [1/3x] ou rien.
    # Mais si on divise la vitesse par 3 alors qu'on est à vitesse normale, ça ne change rien.

    # Option 1: ne rien changer (garder speed_exp)
    temp = dfs(remaining_distance - speed, speed_exp)
    if temp != 10**18:
        res = min(res, 1 + temp)

    # Option 2: appuyer sur [3x] -> vitesse *=3 => speed_exp + 1
    temp = dfs(remaining_distance - speed, speed_exp + 1)
    if temp != 10**18:
        res = min(res, 1 + temp)

    # Option 3: appuyer sur [1/3x] -> vitesse /=3 sauf si vitesse normale (speed_exp==0)
    if speed_exp > 0:
        temp = dfs(remaining_distance - speed, speed_exp - 1)
        if temp != 10**18:
            res = min(res, 1 + temp)
    elif speed_exp == 0:
        # vitesse normale, diviser par 3 ne change rien, on peut essayer
        # mais c'est inutile, le problème dit que on ne change pas vitesse si la vitesse normale
        # donc ne rien faire est équivalent
        pass

    return res

print(dfs(t, 0))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.133198283147067e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.375051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7549012303352356
    2. 's' → logprob: -1.1299011707305908
    3. 't' → logprob: -3.004901170730591
    4. 'sys' → logprob: -3.254901170730591
    5. 'set' → logprob: -3.629901170730591
    6. 'soft' → logprob: -4.00490140914917
    7. 'default' → logprob: -4.25490140914917
    8. '_' → logprob: -5.00490140914917
    9. 'ex' → logprob: -5.00490140914917
    10. 'suffix' → logprob: -5.12990140914917

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037507908418774605
    2. 'ursive' → logprob: -6.378750801086426
    3. 'limit' → logprob: -7.003750801086426
    4. 'ur' → logprob: -7.503750801086426
    5. 'urse' → logprob: -9.253750801086426
    6. 'urs' → logprob: -9.503750801086426
    7. '_limit' → logprob: -9.628750801086426
    8. 'ut' → logprob: -9.753750801086426
    9. 'u' → logprob: -10.003750801086426
    10. 't' → logprob: -10.128750801086426

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.5439815521240234
    2. 'limit' → logprob: -1.1689815521240234
    3. '_depth' → logprob: -2.2939815521240234
    4. '_' → logprob: -5.918981552124023
    5. 'depth' → logprob: -5.918981552124023
    6. 'error' → logprob: -6.918981552124023
    7. '_error' → logprob: -7.543981552124023
    8. '_limits' → logprob: -8.793981552124023
    9. '('_' → logprob: -8.918981552124023
    10. '_stack' → logprob: -9.168981552124023

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.375066757202148
    6. '```' → logprob: -12.750066757202148
    7. '((' → logprob: -12.875066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '("("' → logprob: -13.375066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20221766829490662
    2. '100' → logprob: -1.702217698097229
    3. ' ' → logprob: -7.5772175788879395
    4. '300' → logprob: -9.077218055725098
    5. '500' → logprob: -9.202218055725098
    6. '999' → logprob: -10.702218055725098
    7. '1' → logprob: -11.202218055725098
    8. '150' → logprob: -11.327218055725098
    9. '200' → logprob: -11.577218055725098
    10. '  ' → logprob: -12.077218055725098

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6215817928314209
    2. '000' → logprob: -1.246581792831421
    3. '00' → logprob: -1.746581792831421
    4. '4' → logprob: -7.49658203125
    5. '6' → logprob: -7.87158203125
    6. '**' → logprob: -10.49658203125
    7. '5' → logprob: -10.49658203125
    8. '2' → logprob: -11.12158203125
    9. '```' → logprob: -11.12158203125
    10. '3' → logprob: -11.62158203125

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0017988269682973623
    2. '6' → logprob: -7.001798629760742
    3. '9' → logprob: -7.501798629760742
    4. '8' → logprob: -8.001798629760742
    5. ' ' → logprob: -17.751798629760742
    6. '```' → logprob: -18.751798629760742
    7. '5' → logprob: -20.001798629760742
    8. ')' → logprob: -20.876798629760742
    9. '10' → logprob: -21.001798629760742
    10. '``' → logprob: -21.376798629760742

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.37501335144043

Token 13: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.046520017087459564
    2. '
' → logprob: -3.5465199947357178
    3. '

' → logprob: -4.921520233154297
    4. '```' → logprob: -5.296520233154297
    5. '\' → logprob: -6.421520233154297
    6. '
' → logprob: -7.046520233154297
    7. 'class' → logprob: -7.546520233154297
    8. '\n' → logprob: -7.671520233154297
    9. 'import' → logprob: -8.046520233154297
    10. ')' → logprob: -8.921520233154297

Token 14: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9525535106658936
    2. ' def' → logprob: -1.9525535106658936
    3. ' stack' → logprob: -2.3275535106658936
    4. 'stack' → logprob: -2.4525535106658936
    5. 'rec' → logprob: -2.5775535106658936
    6. ' sys' → logprob: -2.9525535106658936
    7. 'd' → logprob: -2.9525535106658936
    8. ' recursion' → logprob: -3.5775535106658936
    9. 'Rec' → logprob: -4.452553749084473
    10. 'sys' → logprob: -4.452553749084473

Token 15: ' cherche' (ID: 52345)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.081908218562603
    2. 'line' → logprob: -2.7069082260131836
    3. 'eline' → logprob: -4.706908226013184
    4. 'el' → logprob: -6.456908226013184
    5. 'ly' → logprob: -8.331908226013184
    6. 'l' → logprob: -8.331908226013184
    7. ' e' → logprob: -8.456908226013184
    8. '_e' → logprob: -8.706908226013184
    9. 'elin' → logprob: -9.081908226013184
    10. '_' → logprob: -9.581908226013184

Token 16: ' le' (ID: 505)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4339291453361511
    2. 'à' → logprob: -1.058929204940796
    3. ' ' → logprob: -6.683928966522217
    4. '```' → logprob: -7.058928966522217
    5. '#' → logprob: -7.558928966522217
    6. ' ' → logprob: -7.683928966522217
    7. ' a' → logprob: -7.808928966522217
    8. 'a' → logprob: -8.308929443359375
    9. ' une' → logprob: -8.808929443359375
    10. ' un' → logprob: -8.808929443359375

Token 17: ' temps' (ID: 11160)
  Prédit: ' meilleur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' meilleur' → logprob: -1.0363863706588745
    2. ' nombre' → logprob: -1.6613863706588745
    3. ' maximum' → logprob: -2.036386489868164
    4. ' plus' → logprob: -2.661386489868164
    5. ' moyen' → logprob: -2.911386489868164
    6. 's' → logprob: -2.911386489868164
    7. 'nombre' → logprob: -3.786386489868164
    8. 'me' → logprob: -3.786386489868164
    9. 'plus' → logprob: -4.286386489868164
    10. ' code' → logprob: -4.536386489868164

Token 18: ' minimum' (ID: 11085)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04349818453192711
    2. '_de' → logprob: -3.9184982776641846
    3. ' de' → logprob: -4.7934980392456055
    4. ' d' → logprob: -5.4184980392456055
    5. ' ' → logprob: -5.9184980392456055
    6. 'de' → logprob: -6.1684980392456055
    7. '_total' → logprob: -6.2934980392456055
    8. 'd' → logprob: -7.4184980392456055
    9. ' 
' → logprob: -8.043498039245605
    10. '\' → logprob: -8.043498039245605

Token 19: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6493175029754639
    2. ' d' → logprob: -1.5243175029754639
    3. '  
' → logprob: -2.524317502975464
    4. '  ' → logprob: -2.899317502975464
    5. ' 
' → logprob: -3.649317502975464
    6. ' de' → logprob: -3.899317502975464
    7. '_' → logprob: -4.024317741394043
    8. ' nécessaire' → logprob: -4.149317741394043
    9. ' pour' → logprob: -5.149317741394043
    10. ' à' → logprob: -5.524317741394043

Token 20: 'en' (ID: 262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025910532101988792
    2. ' )' → logprob: -3.7759106159210205
    3. ' d' → logprob: -6.275910377502441
    4. 'pour' → logprob: -8.650910377502441
    5. ' pour' → logprob: -9.025910377502441
    6. ' nécessaire' → logprob: -9.025910377502441
    7. 'd' → logprob: -9.400910377502441
    8. ' de' → logprob: -9.400910377502441
    9. ')d' → logprob: -9.650910377502441
    10. ' que' → logprob: -10.400910377502441

Token 21: ' secondes' (ID: 109098)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -1.2528058290481567
    2. ' secondes' → logprob: -1.3778058290481567
    3. ')' → logprob: -2.252805709838867
    4. '```' → logprob: -2.377805709838867
    5. 'mill' → logprob: -2.627805709838867
    6. 'minutes' → logprob: -3.377805709838867
    7. '#' → logprob: -3.377805709838867
    8. 's' → logprob: -3.627805709838867
    9. 'se' → logprob: -3.752805709838867
    10. 'jours' → logprob: -4.002805709838867

Token 22: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020609159022569656
    2. ' )' → logprob: -3.895609140396118
    3. 'pour' → logprob: -10.020608901977539
    4. ' pour' → logprob: -11.520608901977539
    5. ' ' → logprob: -12.895608901977539
    6. ',' → logprob: -13.270608901977539
    7. ' ' → logprob: -13.395608901977539
    8. ' nécessaire' → logprob: -13.520608901977539
    9. '#' → logprob: -14.270608901977539
    10. ')d' → logprob: -14.520608901977539

Token 23: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7435087561607361
    2. '_' → logprob: -1.1185088157653809
    3. '\' → logprob: -2.618508815765381
    4. ' 
' → logprob: -3.993508815765381
    5. '  
' → logprob: -4.243508815765381
    6. 'pour' → logprob: -4.243508815765381
    7. ',' → logprob: -4.368508815765381
    8. '#' → logprob: -4.493508815765381
    9. 's' → logprob: -4.743508815765381
    10. ')' → logprob: -5.118508815765381

Token 24: ' atteindre' (ID: 95734)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -1.0167332887649536
    2. ' que' → logprob: -1.8917332887649536
    3. 'tr' → logprob: -2.641733169555664
    4. ' atteindre' → logprob: -3.391733169555664
    5. ' travers' → logprob: -3.641733169555664
    6. ' parcour' → logprob: -3.641733169555664
    7. 'r' → logprob: -3.766733169555664
    8. ' effectuer' → logprob: -3.891733169555664
    9. ' terminer' → logprob: -3.891733169555664
    10. ' sauver' → logprob: -3.891733169555664

Token 25: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8143362998962402
    2. 'le' → logprob: -2.0643362998962402
    3. ' une' → logprob: -2.1893362998962402
    4. ' un' → logprob: -2.4393362998962402
    5. 'la' → logprob: -2.6893362998962402
    6. 'une' → logprob: -2.9393362998962402
    7. ' le' → logprob: -3.3143362998962402
    8. ' l' → logprob: -3.8143362998962402
    9. 'un' → logprob: -4.18933629989624
    10. 'l' → logprob: -4.31433629989624

Token 26: ' temps' (ID: 11160)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.050099700689315796
    2. ' prochain' → logprob: -4.425099849700928
    3. ' n' → logprob: -4.925099849700928
    4. 's' → logprob: -5.050099849700928
    5. ' but' → logprob: -5.550099849700928
    6. ' niveau' → logprob: -6.050099849700928
    7. 'som' → logprob: -6.175099849700928
    8. ' point' → logprob: -6.425099849700928
    9. 'but' → logprob: -6.550099849700928
    10. 'c' → logprob: -6.800099849700928

Token 27: ' t' (ID: 260)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16043899953365326
    2. ' ' → logprob: -3.2854390144348145
    3. '_max' → logprob: -3.7854390144348145
    4. ' de' → logprob: -4.4104390144348145
    5. 'max' → logprob: -4.4104390144348145
    6. ' d' → logprob: -4.5354390144348145
    7. 'minimum' → logprob: -4.6604390144348145
    8. ')' → logprob: -5.5354390144348145
    9. ',' → logprob: -5.7854390144348145
    10. ' maximum' → logprob: -5.9104390144348145

Token 28: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8096333146095276
    2. '.' → logprob: -2.309633255004883
    3. '=' → logprob: -2.434633255004883
    4. '_' → logprob: -2.559633255004883
    5. ' ' → logprob: -2.559633255004883
    6. 'def' → logprob: -2.934633255004883
    7. ' =' → logprob: -3.059633255004883
    8. '\' → logprob: -3.309633255004883
    9. ':' → logprob: -3.934633255004883
    10. 't' → logprob: -4.559633255004883

Token 29: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9212815761566162
    2. ' l' → logprob: -2.171281576156616
    3. ' simulation' → logprob: -2.546281576156616
    4. ' jeu' → logprob: -3.171281576156616
    5. ' travail' → logprob: -3.546281576156616
    6. ' la' → logprob: -3.671281576156616
    7. 'd' → logprob: -4.046281814575195
    8. 'trav' → logprob: -4.358781814575195
    9. 'simulation' → logprob: -4.358781814575195
    10. 's' → logprob: -4.421281814575195

Token 30: ' scène' (ID: 56266)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.454133003950119
    2. 'simulation' → logprob: -2.4541330337524414
    3. 'f' → logprob: -2.8291330337524414
    4. 'jour' → logprob: -3.3291330337524414
    5. 'part' → logprob: -3.3291330337524414
    6. 'function' → logprob: -4.079133033752441
    7. 'course' → logprob: -4.329133033752441
    8. 'd' → logprob: -4.704133033752441
    9. 'mé' → logprob: -4.704133033752441
    10. ' fonction' → logprob: -4.829133033752441

Token 31: ' à' (ID: 1221)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.4959483742713928
    2. ':' → logprob: -2.370948314666748
    3. ',' → logprob: -2.495948314666748
    4. 'def' → logprob: -2.620948314666748
    5. '\n' → logprob: -3.370948314666748
    6. '.' → logprob: -3.870948314666748
    7. '_' → logprob: -3.995948314666748
    8. 's' → logprob: -4.245948314666748
    9. '
' → logprob: -4.870948314666748
    10. '#' → logprob: -4.995948314666748

Token 32: ' V' (ID: 631)
  Prédit: ' partir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.9226589202880859
    2. 'l' → logprob: -1.797658920288086
    3. ' jouer' → logprob: -3.047658920288086
    4. ' l' → logprob: -3.172658920288086
    5. 'part' → logprob: -3.172658920288086
    6. ' atteindre' → logprob: -3.422658920288086
    7. ' réaliser' → logprob: -3.922658920288086
    8. 'jou' → logprob: -4.172658920288086
    9. ' tourner' → logprob: -4.547658920288086
    10. 'p' → logprob: -4.547658920288086

Token 33: 'ITES' (ID: 84062)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5836498737335205
    2. ' ' → logprob: -1.7086498737335205
    3. ',' → logprob: -2.3336498737335205
    4. '=' → logprob: -2.4586498737335205
    5. '_' → logprob: -2.4586498737335205
    6. 'a' → logprob: -2.4586498737335205
    7. '.' → logprob: -3.0836498737335205
    8. '#' → logprob: -3.3336498737335205
    9. 'e' → logprob: -3.5836498737335205
    10. ')' → logprob: -3.5836498737335205

Token 34: 'SE' (ID: 1529)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9007970690727234
    2. 'I' → logprob: -1.2757971286773682
    3. 'E' → logprob: -1.5257971286773682
    4. ',' → logprob: -4.025796890258789
    5. ' ' → logprob: -4.150796890258789
    6. '=' → logprob: -4.275796890258789
    7. '.' → logprob: -4.900796890258789
    8. '#' → logprob: -5.150796890258789
    9. 'A' → logprob: -5.275796890258789
    10. ':' → logprob: -5.400796890258789

Token 35: ' NOR' (ID: 95851)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.048992227762937546
    2. ' ' → logprob: -3.798992156982422
    3. ' =' → logprob: -4.923992156982422
    4. ',' → logprob: -5.173992156982422
    5. ' _' → logprob: -5.423992156982422
    6. '=' → logprob: -6.423992156982422
    7. '\' → logprob: -6.923992156982422
    8. 's' → logprob: -7.173992156982422
    9. ')' → logprob: -7.173992156982422
    10. 'def' → logprob: -7.423992156982422

Token 36: 'MA' (ID: 8131)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.10820330679416656
    2. '```' → logprob: -3.483203411102295
    3. 'E' → logprob: -4.483203411102295
    4. '_' → logprob: -4.983203411102295
    5. 'A' → logprob: -5.108203411102295
    6. 'V' → logprob: -5.358203411102295
    7. '=' → logprob: -5.483203411102295
    8. 'AL' → logprob: -5.608203411102295
    9. ')' → logprob: -5.733203411102295
    10. 'MA' → logprob: -5.858203411102295

Token 37: 'LE' (ID: 1400)
  Prédit: 'LE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LE' → logprob: -0.12808442115783691
    2. 'L' → logprob: -2.378084421157837
    3. 'ALE' → logprob: -4.128084182739258
    4. '```' → logprob: -5.878084182739258
    5. 'U' → logprob: -6.628084182739258
    6. '=' → logprob: -7.128084182739258
    7. 'LA' → logprob: -7.628084182739258
    8. 'AL' → logprob: -7.628084182739258
    9. '\' → logprob: -7.628084182739258
    10. 'A' → logprob: -7.753084182739258

Token 38: '.
' (ID: 558)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8092319369316101
    2. '
' → logprob: -1.4342319965362549
    3. '#' → logprob: -2.059231996536255
    4. '\n' → logprob: -3.309231996536255
    5. ' 
' → logprob: -3.434231996536255
    6. ' 

' → logprob: -3.809231996536255
    7. '

' → logprob: -3.809231996536255
    8. ' ' → logprob: -4.059231758117676
    9. 'def' → logprob: -4.309231758117676
    10. '' → logprob: -4.809231758117676

Token 39: '#' (ID: 2)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9876274466514587
    2. ' 

' → logprob: -1.9876275062561035
    3. '#' → logprob: -2.1126275062561035
    4. '\' → logprob: -2.3626275062561035
    5. '
' → logprob: -2.7376275062561035
    6. 't' → logprob: -2.9876275062561035
    7. 'd' → logprob: -3.1126275062561035
    8. 'def' → logprob: -3.1126275062561035
    9. '' → logprob: -4.3626275062561035
    10. 'n' → logprob: -4.4876275062561035

Token 40: ' Chaque' (ID: 94758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2635829448699951
    2. ' 

' → logprob: -1.7635829448699951
    3. ' 
' → logprob: -2.013582944869995
    4. '
' → logprob: -2.138582944869995
    5. '\' → logprob: -2.263582944869995
    6. 'def' → logprob: -2.388582944869995
    7. ' ' → logprob: -3.513582944869995
    8. '

' → logprob: -4.138583183288574
    9. 'import' → logprob: -4.638583183288574
    10. 't' → logprob: -4.763583183288574

Token 41: ' seconde' (ID: 66204)
  Prédit: ' déplacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' déplacement' → logprob: -1.6155098676681519
    2. ' mouvement' → logprob: -2.7405099868774414
    3. ' morceau' → logprob: -2.9905099868774414
    4. ' saut' → logprob: -3.3030099868774414
    5. ' scène' → logprob: -3.3030099868774414
    6. ' ' → logprob: -3.3655099868774414
    7. ' action' → logprob: -3.5530099868774414
    8. ' t' → logprob: -3.5530099868774414
    9. 'é' → logprob: -3.8655099868774414
    10. ' scénario' → logprob: -3.8655099868774414

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7026144862174988
    2. ' ' → logprob: -0.9526144862174988
    3. ' ,' → logprob: -2.7026145458221436
    4. ' on' → logprob: -4.3276143074035645
    5. ' a' → logprob: -4.8276143074035645
    6. '<|end|>' → logprob: -5.0776143074035645
    7. ')' → logprob: -5.8276143074035645
    8. 's' → logprob: -5.9526143074035645
    9. '#' → logprob: -6.3276143074035645
    10. ' )' → logprob: -6.5776143074035645

Token 43: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.07389947772026062
    2. ' la' → logprob: -3.573899507522583
    3. 'on' → logprob: -3.823899507522583
    4. 'le' → logprob: -5.448899269104004
    5. 'la' → logprob: -5.573899269104004
    6. ' le' → logprob: -5.948899269104004
    7. ' il' → logprob: -6.573899269104004
    8. ' une' → logprob: -6.823899269104004
    9. ' nous' → logprob: -6.823899269104004
    10. 'il' → logprob: -7.073899269104004

Token 44: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.2090429961681366
    2. 'a' → logprob: -2.334043025970459
    3. ' peut' → logprob: -2.959043025970459
    4. 'avance' → logprob: -5.084043025970459
    5. ' a' → logprob: -5.334043025970459
    6. 'p' → logprob: -5.459043025970459
    7. 'pour' → logprob: -5.709043025970459
    8. 'acc' → logprob: -5.834043025970459
    9. ' peux' → logprob: -6.709043025970459
    10. 'can' → logprob: -6.709043025970459

Token 45: ' choisir' (ID: 47004)
  Prédit: ' avancer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avancer' → logprob: -0.41577133536338806
    2. ' continuer' → logprob: -2.165771245956421
    3. ' either' → logprob: -3.040771245956421
    4. ' soit' → logprob: -3.790771245956421
    5. ' accél' → logprob: -4.040771484375
    6. ' rester' → logprob: -4.290771484375
    7. ' choisir' → logprob: -4.415771484375
    8. ' ' → logprob: -4.790771484375
    9. ' augmenter' → logprob: -4.915771484375
    10. ' changer' → logprob: -5.040771484375

Token 46: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.42854878306388855
    2. ' ' → logprob: -2.553548812866211
    3. ' d' → logprob: -2.553548812866211
    4. 'd' → logprob: -2.803548812866211
    5. ' soit' → logprob: -3.178548812866211
    6. 'de' → logprob: -3.803548812866211
    7. ' entre' → logprob: -3.803548812866211
    8. ' either' → logprob: -4.428548812866211
    9. ' between' → logprob: -4.928548812866211
    10. ':' → logprob: -5.053548812866211

Token 47: ''app' (ID: 41670)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6331951022148132
    2. 'e' → logprob: -1.008195161819458
    3. ''acc' → logprob: -3.883195161819458
    4. ''aller' → logprob: -3.883195161819458
    5. 'u' → logprob: -4.133194923400879
    6. ''effect' → logprob: -4.633194923400879
    7. ''utiliser' → logprob: -5.258194923400879
    8. ' '' → logprob: -5.383194923400879
    9. 'a' → logprob: -5.508194923400879
    10. ''avoir' → logprob: -6.133194923400879

Token 48: 'uyer' (ID: 78614)
  Prédit: 'uyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uyer' → logprob: -0.4500693380832672
    2. 'eler' → logprob: -1.8250693082809448
    3. 'end' → logprob: -2.8250694274902344
    4. 'l' → logprob: -3.5750694274902344
    5. 'endre' → logprob: -3.5750694274902344
    6. 'ender' → logprob: -4.200069427490234
    7. 'ar' → logprob: -5.075069427490234
    8. '.py' → logprob: -5.075069427490234
    9. 'ler' → logprob: -5.200069427490234
    10. 'ly' → logprob: -5.325069427490234

Token 49: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -1.1041313409805298
    2. 'sur' → logprob: -1.1041313409805298
    3. ' ' → logprob: -1.2291313409805298
    4. '<|end|>' → logprob: -4.47913122177124
    5. ' soit' → logprob: -5.10413122177124
    6. '```' → logprob: -5.35413122177124
    7. '  ' → logprob: -5.60413122177124
    8. 's' → logprob: -6.22913122177124
    9. ' ' → logprob: -6.35413122177124
    10. ''' → logprob: -6.35413122177124

Token 50: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7140136361122131
    2. ' '' → logprob: -2.2140135765075684
    3. ' "' → logprob: -2.3390135765075684
    4. ''' → logprob: -2.7140135765075684
    5. '"' → logprob: -3.3390135765075684
    6. ' la' → logprob: -3.4640135765075684
    7. ' un' → logprob: -3.7140135765075684
    8. ' le' → logprob: -3.9640135765075684
    9. ' l' → logprob: -4.089013576507568
    10. ' une' → logprob: -4.464013576507568

Token 51: '3' (ID: 18)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3757207691669464
    2. 'es' → logprob: -2.750720739364624
    3. ' ]' → logprob: -3.000720739364624
    4. ''' → logprob: -3.125720739364624
    5. '+' → logprob: -3.375720739364624
    6. ']' → logprob: -3.875720739364624
    7. 'space' → logprob: -4.500720977783203
    8. ' espace' → logprob: -4.750720977783203
    9. ' '' → logprob: -5.000720977783203
    10. '"' → logprob: -5.125720977783203

Token 52: 'x' (ID: 87)
  Prédit: ' ]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ]' → logprob: -0.7426127791404724
    2. ']' → logprob: -1.3676128387451172
    3. '+' → logprob: -2.367612838745117
    4. ' ' → logprob: -2.992612838745117
    5. '-' → logprob: -3.242612838745117
    6. '+]' → logprob: -3.492612838745117
    7. ',' → logprob: -3.867612838745117
    8. ' +' → logprob: -5.867612838745117
    9. ':' → logprob: -5.992612838745117
    10. ' ,' → logprob: -6.242612838745117

Token 53: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4106450378894806
    2. '+' → logprob: -1.7856450080871582
    3. ' ]' → logprob: -2.285645008087158
    4. '+]' → logprob: -4.035645008087158
    5. '-' → logprob: -4.160645008087158
    6. ' ' → logprob: -4.535645008087158
    7. ',' → logprob: -5.535645008087158
    8. '[' → logprob: -6.598145008087158
    9. '>]' → logprob: -6.598145008087158
    10. ' +' → logprob: -6.723145008087158

Token 54: ' sur' (ID: 1512)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35574737191200256
    2. ' [' → logprob: -1.6057473421096802
    3. ' ' → logprob: -3.1057474613189697
    4. ',' → logprob: -4.855747222900391
    5. ' or' → logprob: -4.855747222900391
    6. 'import' → logprob: -5.230747222900391
    7. ' ,' → logprob: -5.605747222900391
    8. '  ' → logprob: -6.043247222900391
    9. '#' → logprob: -6.230747222900391
    10. '...' → logprob: -6.418247222900391

Token 55: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7540042996406555
    2. ' [' → logprob: -2.1290042400360107
    3. '+' → logprob: -2.3790042400360107
    4. '[' → logprob: -2.3790042400360107
    5. ' ]' → logprob: -2.7540042400360107
    6. ' +' → logprob: -3.7540042400360107
    7. ' la' → logprob: -4.06650447845459
    8. '3' → logprob: -4.50400447845459
    9. ']' → logprob: -4.87900447845459
    10. ' l' → logprob: -5.19150447845459

Token 56: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5602200627326965
    2. '-' → logprob: -2.5602200031280518
    3. '1' → logprob: -2.6852200031280518
    4. '+]' → logprob: -2.9352200031280518
    5. '2' → logprob: -3.0602200031280518
    6. ']' → logprob: -3.4352200031280518
    7. '4' → logprob: -3.5602200031280518
    8. ' ' → logprob: -3.8102200031280518
    9. '>]' → logprob: -4.310220241546631
    10. 'pause' → logprob: -4.435220241546631

Token 57: '/' (ID: 14)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1795472949743271
    2. ']' → logprob: -2.3045473098754883
    3. 's' → logprob: -3.0545473098754883
    4. ' ]' → logprob: -4.804547309875488
    5. '+]' → logprob: -6.054547309875488
    6. '-' → logprob: -6.804547309875488
    7. '+' → logprob: -7.304547309875488
    8. '/' → logprob: -7.554547309875488
    9. '],' → logprob: -7.679547309875488
    10. ' ' → logprob: -7.679547309875488

Token 58: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04041066765785217
    2. '3' → logprob: -3.2904107570648193
    3. '4' → logprob: -7.04041051864624
    4. '1' → logprob: -7.91541051864624
    5. ']' → logprob: -7.91541051864624
    6. '5' → logprob: -8.790410995483398
    7. 'x' → logprob: -8.790410995483398
    8. '6' → logprob: -9.665410995483398
    9. '7' → logprob: -10.227910995483398
    10. '60' → logprob: -10.290410995483398

Token 59: 'x' (ID: 87)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25987595319747925
    2. 'x' → logprob: -1.759876012802124
    3. '],' → logprob: -2.884876012802124
    4. '*' → logprob: -8.634876251220703
    5. ' ]' → logprob: -8.634876251220703
    6. ']*' → logprob: -9.134876251220703
    7. ' ],' → logprob: -9.634876251220703
    8. ' x' → logprob: -9.884876251220703
    9. 't' → logprob: -10.009876251220703
    10. '*x' → logprob: -10.134876251220703

Token 60: ']' (ID: 60)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.3493027687072754
    2. ']' → logprob: -1.2243027687072754
    3. ' ],' → logprob: -7.849302768707275
    4. ' ]' → logprob: -9.224302291870117
    5. ',' → logprob: -9.224302291870117
    6. 'x' → logprob: -10.224302291870117
    7. ']

' → logprob: -10.224302291870117
    8. ' ' → logprob: -11.099302291870117
    9. '*' → logprob: -11.349302291870117
    10. 't' → logprob: -11.349302291870117

Token 61: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0544162318110466
    2. ' ou' → logprob: -4.679416179656982
    3. ' ' → logprob: -4.804416179656982
    4. '#' → logprob: -4.804416179656982
    5. ' or' → logprob: -4.929416179656982
    6. '
' → logprob: -5.304416179656982
    7. ',
' → logprob: -5.804416179656982
    8. '

' → logprob: -6.179416179656982
    9. '\' → logprob: -6.179416179656982
    10. ')' → logprob: -6.554416179656982

Token 62: ' ne' (ID: 453)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9260441064834595
    2. ' rester' → logprob: -1.0510441064834595
    3. ' rien' → logprob: -2.92604398727417
    4. '[' → logprob: -2.92604398727417
    5. 'sur' → logprob: -3.17604398727417
    6. ' sur' → logprob: -3.30104398727417
    7. ' ne' → logprob: -4.42604398727417
    8. ' continuer' → logprob: -4.80104398727417
    9. ' on' → logprob: -4.92604398727417
    10. ' ' → logprob: -5.17604398727417

Token 63: ' rien' (ID: 23082)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7615809440612793
    2. ' rien' → logprob: -0.8865809440612793
    3. ' pas' → logprob: -2.1365809440612793
    4. 'pas' → logprob: -6.136580944061279
    5. ' r' → logprob: -7.761580944061279
    6. ' ' → logprob: -9.136581420898438
    7. '_r' → logprob: -9.511581420898438
    8. '_pas' → logprob: -10.011581420898438
    9. ' Rien' → logprob: -10.511581420898438
    10. ' plus' → logprob: -11.011581420898438

Token 64: ' faire' (ID: 8119)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.9186586737632751
    2. ' app' → logprob: -1.04365873336792
    3. ' faire' → logprob: -2.04365873336792
    4. 'faire' → logprob: -2.29365873336792
    5. '<|end|>' → logprob: -5.29365873336792
    6. '_app' → logprob: -6.29365873336792
    7. 'f' → logprob: -6.41865873336792
    8. '.' → logprob: -6.54365873336792
    9. ' ' → logprob: -6.66865873336792
    10. '.app' → logprob: -7.41865873336792

Token 65: '.
' (ID: 558)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.42616605758667
    2. '\n' → logprob: -1.80116605758667
    3. '
' → logprob: -1.92616605758667
    4. '.' → logprob: -2.05116605758667
    5. '#' → logprob: -2.30116605758667
    6. '

' → logprob: -3.05116605758667
    7. 'def' → logprob: -3.05116605758667
    8. 'import' → logprob: -3.05116605758667
    9. ',' → logprob: -3.80116605758667
    10. '```' → logprob: -3.92616605758667

Token 66: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008219270966947079
    2. '\' → logprob: -5.258219242095947
    3. 't' → logprob: -6.133219242095947
    4. 'import' → logprob: -8.008219718933105
    5. '
' → logprob: -8.758219718933105
    6. '#' → logprob: -9.383219718933105
    7. '```' → logprob: -9.883219718933105
    8. ' def' → logprob: -10.008219718933105
    9. '\n' → logprob: -10.008219718933105
    10. 'd' → logprob: -11.008219718933105

Token 67: ' Ces' (ID: 35720)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13340553641319275
    2. 't' → logprob: -2.3834054470062256
    3. '#' → logprob: -4.633405685424805
    4. 'import' → logprob: -5.008405685424805
    5. '\' → logprob: -5.383405685424805
    6. ' def' → logprob: -5.758405685424805
    7. 'd' → logprob: -5.758405685424805
    8. 'n' → logprob: -6.383405685424805
    9. ' t' → logprob: -7.133405685424805
    10. 'from' → logprob: -7.258405685424805

Token 68: ' boutons' (ID: 169489)
  Prédit: ' temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' temps' → logprob: -1.167009711265564
    2. ' actions' → logprob: -1.792009711265564
    3. ' ' → logprob: -2.4170098304748535
    4. ' trois' → logprob: -2.9170098304748535
    5. ' ' → logprob: -3.2920098304748535
    6. 't' → logprob: -3.2920098304748535
    7. '#' → logprob: -3.8545098304748535
    8. 'actions' → logprob: -3.9170098304748535
    9. ' mouvements' → logprob: -3.9170098304748535
    10. 'temps' → logprob: -4.0420098304748535

Token 69: ' mod' (ID: 1812)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08859783411026001
    2. 'ifiés' → logprob: -3.2135977745056152
    3. 'ifié' → logprob: -4.588597774505615
    4. 'ifi' → logprob: -5.088597774505615
    5. 'ifiées' → logprob: -5.088597774505615
    6. 'ified' → logprob: -5.088597774505615
    7. 'ifier' → logprob: -6.088597774505615
    8. 'ify' → logprob: -6.213597774505615
    9. 'ifies' → logprob: -6.713597774505615
    10. 'ulent' → logprob: -6.838597774505615

Token 71: 'ient' (ID: 773)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24928802251815796
    2. 'ient' → logprob: -1.9992880821228027
    3. 'ifie' → logprob: -3.7492880821228027
    4. '```' → logprob: -4.374288082122803
    5. '#' → logprob: -4.499288082122803
    6. 'f' → logprob: -4.624288082122803
    7. 'ifiant' → logprob: -4.999288082122803
    8. 'ifier' → logprob: -5.624288082122803
    9. 'ent' → logprob: -5.624288082122803
    10. 'èrent' → logprob: -5.874288082122803

Token 72: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.15572814643383026
    2. ' le' → logprob: -2.4057281017303467
    3. 'le' → logprob: -3.7807281017303467
    4. ' ' → logprob: -4.780728340148926
    5. ' ' → logprob: -5.280728340148926
    6. 'la' → logprob: -5.405728340148926
    7. ' l' → logprob: -6.155728340148926
    8. ' the' → logprob: -6.155728340148926
    9. ' vitesse' → logprob: -6.155728340148926
    10. '<|end|>' → logprob: -6.530728340148926

Token 73: ' vitesse' (ID: 71752)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.44427332282066345
    2. ' vitesse' → logprob: -1.0692733526229858
    3. 'temps' → logprob: -4.819273471832275
    4. ' v' → logprob: -7.194273471832275
    5. 'dur' → logprob: -7.194273471832275
    6. 'tempo' → logprob: -7.319273471832275
    7. ' temps' → logprob: -7.319273471832275
    8. 'vit' → logprob: -7.444273471832275
    9. ' durée' → logprob: -7.694273471832275
    10. ' vit' → logprob: -7.819273471832275

Token 74: ' de' (ID: 334)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8523700833320618
    2. ' de' → logprob: -1.102370023727417
    3. ',' → logprob: -1.977370023727417
    4. 'de' → logprob: -3.227370023727417
    5. 'current' → logprob: -4.352370262145996
    6. ' actuelle' → logprob: -4.352370262145996
    7. 'import' → logprob: -4.602370262145996
    8. 'v' → logprob: -5.602370262145996
    9. 'd' → logprob: -5.727370262145996
    10. ':' → logprob: -6.102370262145996

Token 75: ' lecture' (ID: 31993)
  Prédit: 'lecture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lecture' → logprob: -0.4942297339439392
    2. ' lecture' → logprob: -1.244229793548584
    3. ' la' → logprob: -3.369229793548584
    4. 'la' → logprob: -3.369229793548584
    5. 'l' → logprob: -4.869229793548584
    6. ' jeu' → logprob: -5.119229793548584
    7. 'Lecture' → logprob: -5.744229793548584
    8. ' l' → logprob: -5.994229793548584
    9. 'jeu' → logprob: -6.119229793548584
    10. 'play' → logprob: -6.369229793548584

Token 76: ' à' (ID: 1221)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.4279059171676636
    2. '.' → logprob: -1.5529059171676636
    3. 'def' → logprob: -1.5529059171676636
    4. ',' → logprob: -1.9279059171676636
    5. '\' → logprob: -2.927906036376953
    6. '\n' → logprob: -3.552906036376953
    7. '#' → logprob: -3.927906036376953
    8. '
' → logprob: -4.052906036376953
    9. ':' → logprob: -4.427906036376953
    10. '```' → logprob: -4.552906036376953

Token 77: ' partir' (ID: 12100)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.615564227104187
    2. '1' → logprob: -1.115564227104187
    3. '3' → logprob: -2.7405643463134766
    4. '```' → logprob: -3.9905643463134766
    5. ' la' → logprob: -4.490564346313477
    6. 'multip' → logprob: -5.115564346313477
    7. ' multiplier' → logprob: -5.490564346313477
    8. '+' → logprob: -5.615564346313477
    9. ' un' → logprob: -6.365564346313477
    10. ' multip' → logprob: -6.365564346313477

Token 78: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.39714187383651733
    2. 'de' → logprob: -2.022141933441162
    3. ' du' → logprob: -2.397141933441162
    4. ' d' → logprob: -2.772141933441162
    5. 'd' → logprob: -3.647141933441162
    6. 'du' → logprob: -4.397141933441162
    7. ' ' → logprob: -6.647141933441162
    8. ' des' → logprob: -7.397141933441162
    9. 'del' → logprob: -8.647141456604004
    10. '=' → logprob: -9.147141456604004

Token 79: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8363101482391357
    2. 'la' → logprob: -1.0863101482391357
    3. ' ' → logprob: -2.9613101482391357
    4. '1' → logprob: -3.2113101482391357
    5. 'l' → logprob: -3.3363101482391357
    6. ' ce' → logprob: -3.9613101482391357
    7. ' laquelle' → logprob: -4.211310386657715
    8. ' l' → logprob: -4.336310386657715
    9. '```' → logprob: -4.711310386657715
    10. 'c' → logprob: -4.961310386657715

Token 80: ' seconde' (ID: 66204)
  Prédit: ' prochaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prochaine' → logprob: -0.9913021326065063
    2. ' ' → logprob: -1.8663021326065063
    3. 'pro' → logprob: -1.9913021326065063
    4. 'v' → logprob: -2.616302013397217
    5. '```' → logprob: -3.616302013397217
    6. ' seconde' → logprob: -3.616302013397217
    7. 's' → logprob: -3.741302013397217
    8. 'se' → logprob: -3.866302013397217
    9. ' pro' → logprob: -4.116302013397217
    10. 'lecture' → logprob: -4.116302013397217

Token 81: ' suivante' (ID: 107439)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1506364494562149
    2. 'import' → logprob: -3.6506364345550537
    3. 't' → logprob: -4.025636672973633
    4. '
' → logprob: -4.150636672973633
    5. '#' → logprob: -4.275636672973633
    6. '\' → logprob: -4.400636672973633
    7. ':' → logprob: -4.525636672973633
    8. ' def' → logprob: -4.900636672973633
    9. '

' → logprob: -5.400636672973633
    10. 'd' → logprob: -5.650636672973633

Token 82: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.38016802072525024
    2. 'def' → logprob: -2.1301679611206055
    3. 't' → logprob: -2.7551679611206055
    4. '#' → logprob: -3.0051679611206055
    5. 'import' → logprob: -3.7551679611206055
    6. '\' → logprob: -4.0051679611206055
    7. '
' → logprob: -4.6301679611206055
    8. 'n' → logprob: -5.2551679611206055
    9. ' 
' → logprob: -5.2551679611206055
    10. '```' → logprob: -5.3801679611206055

Token 83: 'v' (ID: 85)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18598413467407227
    2. ' )' → logprob: -1.9359841346740723
    3. ').' → logprob: -4.810984134674072
    4. ',' → logprob: -5.685984134674072
    5. ' la' → logprob: -5.685984134674072
    6. '#' → logprob: -6.560984134674072
    7. '.' → logprob: -6.685984134674072
    8. ' ' → logprob: -6.935984134674072
    9. ' ).' → logprob: -7.060984134674072
    10. '),' → logprob: -7.435984134674072

Token 84: 'itesse' (ID: 58831)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.45092326402664185
    2. 'e' → logprob: -1.700923204421997
    3. 'é' → logprob: -2.825923204421997
    4. ')' → logprob: -3.200923204421997
    5. 'v' → logprob: -3.325923204421997
    6. 'él' → logprob: -3.950923204421997
    7. 'itesse' → logprob: -4.825923442840576
    8. '#' → logprob: -5.825923442840576
    9. 'o' → logprob: -5.950923442840576
    10. 'a' → logprob: -6.200923442840576

Token 85: ' est' (ID: 893)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.4576698541641235
    2. ' )' → logprob: -1.4576698541641235
    3. ' actuelle' → logprob: -1.8326698541641235
    4. ')' → logprob: -2.207669734954834
    5. ' =' → logprob: -3.207669734954834
    6. ' normale' → logprob: -3.332669734954834
    7. ' ).' → logprob: -3.582669734954834
    8. ' *' → logprob: -3.957669734954834
    9. '*' → logprob: -3.957669734954834
    10. ' ' → logprob: -4.332669734954834

Token 86: ' multip' (ID: 17524)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6719310879707336
    2. ' ' → logprob: -1.4219310283660889
    3. ' multip' → logprob: -3.296931028366089
    4. ' toujours' → logprob: -3.421931028366089
    5. ' initial' → logprob: -3.546931028366089
    6. '=' → logprob: -3.671931028366089
    7. 'initial' → logprob: -3.796931028366089
    8. ' une' → logprob: -4.671931266784668
    9. ' mod' → logprob: -4.671931266784668
    10. ' un' → logprob: -4.921931266784668

Token 87: 'li' (ID: 1307)
  Prédit: 'li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.3195478022098541
    2. 'lié' → logprob: -1.3195477724075317
    3. 'lic' → logprob: -5.569547653198242
    4. 'liable' → logprob: -7.694547653198242
    5. 'lication' → logprob: -7.944547653198242
    6. 'lique' → logprob: -8.319547653198242
    7. '<li' → logprob: -8.444547653198242
    8. 'l' → logprob: -8.569547653198242
    9. '­li' → logprob: -8.569547653198242
    10. 'ли' → logprob: -9.444547653198242

Token 88: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.229448601603508
    2. 'é' → logprob: -1.6044485569000244
    3. 'e' → logprob: -6.7294487953186035
    4. 'er' → logprob: -7.2294487953186035
    5. 'quée' → logprob: -7.8544487953186035
    6. '�' → logprob: -8.729448318481445
    7. 'uée' → logprob: -9.041948318481445
    8. '*' → logprob: -9.166948318481445
    9. 'és' → logprob: -9.229448318481445
    10. 'ées' → logprob: -9.604448318481445

Token 89: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.23707906901836395
    2. 'par' → logprob: -1.6120790243148804
    3. '<|end|>' → logprob: -4.98707914352417
    4. ')' → logprob: -6.23707914352417
    5. '_par' → logprob: -6.86207914352417
    6. '*' → logprob: -7.48707914352417
    7. '<|end|>' → logprob: -8.737078666687012
    8. ' ' → logprob: -8.737078666687012
    9. ' or' → logprob: -8.862078666687012
    10. ' ou' → logprob: -9.362078666687012

Token 90: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.17984291911125183
    2. ' ' → logprob: -1.8048429489135742
    3. ' ' → logprob: -10.679842948913574
    4. '1' → logprob: -11.304842948913574
    5. '```' → logprob: -11.304842948913574
    6. ' trois' → logprob: -11.929842948913574
    7. ')' → logprob: -12.054842948913574
    8. ' )' → logprob: -12.304842948913574
    9. ' `' → logprob: -12.429842948913574
    10. '<|end|>' → logprob: -12.554842948913574

Token 91: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0016668500611558557
    2. ' ' → logprob: -6.501667022705078
    3. '1' → logprob: -8.876667022705078
    4. '2' → logprob: -11.626667022705078
    5. '/' → logprob: -13.126667022705078
    6. '```' → logprob: -13.251667022705078
    7. ')' → logprob: -13.501667022705078
    8. ' trois' → logprob: -13.876667022705078
    9. '   ' → logprob: -14.251667022705078
    10. '  ' → logprob: -14.314167022705078

Token 92: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001081279362551868
    2. '*' → logprob: -7.126081466674805
    3. '*)' → logprob: -8.751081466674805
    4. ' )' → logprob: -10.126081466674805
    5. '**' → logprob: -11.501081466674805
    6. ')
' → logprob: -11.751081466674805
    7. ',' → logprob: -11.876081466674805
    8. 'import' → logprob: -11.876081466674805
    9. ' ' → logprob: -11.876081466674805
    10. ')*' → logprob: -12.001081466674805

Token 93: ' divis' (ID: 37826)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.1844940185546875
    2. 'div' → logprob: -2.3094940185546875
    3. ' divis' → logprob: -3.3094940185546875
    4. ' /' → logprob: -3.8094940185546875
    5. ' div' → logprob: -6.0594940185546875
    6. '/div' → logprob: -6.3094940185546875
    7. '1' → logprob: -6.6844940185546875
    8. ' divisible' → logprob: -6.6844940185546875
    9. ' ' → logprob: -6.9344940185546875
    10. ' '/'' → logprob: -7.9344940185546875

Token 94: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.2839357554912567
    2. 'ée' → logprob: -1.408935785293579
    3. 'er' → logprob: -6.908935546875
    4. 'e' → logprob: -7.408935546875
    5. 'par' → logprob: -8.158935546875
    6. 'ed' → logprob: -8.783935546875
    7. 'u' → logprob: -9.158935546875
    8. 'éer' → logprob: -9.283935546875
    9. '3' → logprob: -9.408935546875
    10. 'ées' → logprob: -9.908935546875

Token 95: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.5127894282341003
    2. ' par' → logprob: -1.2627894878387451
    3. '3' → logprob: -2.137789487838745
    4. ' ' → logprob: -8.637789726257324
    5. '```' → logprob: -9.887789726257324
    6. '<|end|>' → logprob: -10.637789726257324
    7. ' ' → logprob: -10.887789726257324
    8. '​' → logprob: -11.325289726257324
    9. '=' → logprob: -11.637789726257324
    10. '_par' → logprob: -11.950289726257324

Token 96: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005239683669060469
    2. ' ' → logprob: -5.255239486694336
    3. ' ' → logprob: -12.755239486694336
    4. ' trois' → logprob: -13.630239486694336
    5. '```' → logprob: -13.880239486694336
    6. '1' → logprob: -15.755239486694336
    7. '<|end|>' → logprob: -15.755239486694336
    8. '   ' → logprob: -16.442739486694336
    9. '  ' → logprob: -16.692739486694336
    10. ' Trois' → logprob: -16.942739486694336

Token 97: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '```' → logprob: -15.375051498413086
    4. '1' → logprob: -16.125051498413086
    5. ' ' → logprob: -17.625051498413086
    6. ' trois' → logprob: -18.000051498413086
    7. '  ' → logprob: -18.000051498413086
    8. '   ' → logprob: -18.500051498413086
    9. '2' → logprob: -18.875051498413086
    10. ')' → logprob: -19.187551498413086

Token 98: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000344640837283805
    2. '*' → logprob: -9.625344276428223
    3. '.' → logprob: -10.125344276428223
    4. ')
' → logprob: -10.125344276428223
    5. ').' → logprob: -10.250344276428223
    6. ' )' → logprob: -10.250344276428223
    7. ')*' → logprob: -10.750344276428223
    8. '.)' → logprob: -10.750344276428223
    9. ')**' → logprob: -10.875344276428223
    10. '*)' → logprob: -11.250344276428223

Token 99: ' sauf' (ID: 87919)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7770400047302246
    2. ')' → logprob: -0.9020400047302246
    3. ' )' → logprob: -3.1520400047302246
    4. ' ou' → logprob: -4.152040004730225
    5. ' mais' → logprob: -4.402040004730225
    6. 'ou' → logprob: -4.902040004730225
    7. ' or' → logprob: -5.027040004730225
    8. ' puis' → logprob: -5.152040004730225
    9. 'et' → logprob: -5.402040004730225
    10. ' et' → logprob: -5.402040004730225

Token 100: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.26539599895477295
    2. 'si' → logprob: -2.0153961181640625
    3. ' if' → logprob: -3.3903961181640625
    4. 'if' → logprob: -4.2653961181640625
    5. ' que' → logprob: -4.6403961181640625
    6. 'qu' → logprob: -4.8903961181640625
    7. ')' → logprob: -5.0153961181640625
    8. 'que' → logprob: -5.0153961181640625
    9. ' qu' → logprob: -5.7653961181640625
    10. ' ' → logprob: -6.1403961181640625

Token 101: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.4349888563156128
    2. ' cela' → logprob: -1.6849888563156128
    3. ' elle' → logprob: -1.8099888563156128
    4. ' on' → logprob: -2.1849889755249023
    5. 'cela' → logprob: -2.1849889755249023
    6. 'la' → logprob: -2.5599889755249023
    7. 'v' → logprob: -3.8099889755249023
    8. ' ce' → logprob: -3.9349889755249023
    9. 'celle' → logprob: -4.434988975524902
    10. ' celle' → logprob: -4.684988975524902

Token 102: ' vitesse' (ID: 71752)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07682789862155914
    2. ' vitesse' → logprob: -2.7018280029296875
    3. '#' → logprob: -5.7018280029296875
    4. ' v' → logprob: -6.7018280029296875
    5. 'vit' → logprob: -8.201828002929688
    6. 'current' → logprob: -8.326828002929688
    7. '```' → logprob: -8.576828002929688
    8. 'import' → logprob: -8.576828002929688
    9. ' ' → logprob: -8.701828002929688
    10. ' #' → logprob: -8.701828002929688

Token 103: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.9115617871284485
    2. 'est' → logprob: -1.7865617275238037
    3. ' is' → logprob: -1.9115617275238037
    4. '>' → logprob: -2.5365617275238037
    5. ' dépasse' → logprob: -2.5365617275238037
    6. 'is' → logprob: -4.161561965942383
    7. '#' → logprob: -4.161561965942383
    8. 'ex' → logprob: -4.536561965942383
    9. '>=' → logprob: -4.786561965942383
    10. ' exceeds' → logprob: -4.786561965942383

Token 104: ' déjà' (ID: 21229)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3080029785633087
    2. ' déjà' → logprob: -2.1830029487609863
    3. 'inf' → logprob: -3.3080029487609863
    4. 'already' → logprob: -3.6830029487609863
    5. 'de' → logprob: -3.8080029487609863
    6. 'dé' → logprob: -3.9330029487609863
    7. ' ' → logprob: -4.558002948760986
    8. ' ég' → logprob: -5.058002948760986
    9. 'au' → logprob: -5.183002948760986
    10. ' already' → logprob: -5.308002948760986

Token 105: ' normale' (ID: 57494)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030693447217345238
    2. '3' → logprob: -4.405693531036377
    3. ' ' → logprob: -4.530693531036377
    4. 'à' → logprob: -6.405693531036377
    5. 'au' → logprob: -6.530693531036377
    6. ' at' → logprob: -6.905693531036377
    7. ' à' → logprob: -7.030693531036377
    8. '100' → logprob: -7.905693531036377
    9. '9' → logprob: -8.280693054199219
    10. '==' → logprob: -8.405693054199219

Token 106: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023098846431821585
    2. ' )' → logprob: -7.877309799194336
    3. ').' → logprob: -8.002309799194336
    4. ',' → logprob: -8.002309799194336
    5. '),' → logprob: -8.002309799194336
    6. '):' → logprob: -8.377309799194336
    7. ')
' → logprob: -8.627309799194336
    8. '.)' → logprob: -9.127309799194336
    9. 'v' → logprob: -9.377309799194336
    10. ')

' → logprob: -10.127309799194336

Token 107: ' on' (ID: 402)
  Prédit: ' qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qu' → logprob: -0.7582978010177612
    2. ' on' → logprob: -1.8832978010177612
    3. 'qu' → logprob: -2.133297920227051
    4. 'app' → logprob: -2.633297920227051
    5. 'on' → logprob: -2.883297920227051
    6. 'que' → logprob: -3.008297920227051
    7. ' app' → logprob: -3.883297920227051
    8. ' que' → logprob: -4.383297920227051
    9. 'ne' → logprob: -5.133297920227051
    10. ' ne' → logprob: -5.383297920227051

Token 108: ' presse' (ID: 62849)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.19030055403709412
    2. ' app' → logprob: -2.190300464630127
    3. 'n' → logprob: -3.940300464630127
    4. ' ne' → logprob: -4.190300464630127
    5. 'ne' → logprob: -4.815300464630127
    6. ' n' → logprob: -5.940300464630127
    7. 'cho' → logprob: -6.190300464630127
    8. 've' → logprob: -6.190300464630127
    9. ''app' → logprob: -6.565300464630127
    10. 'veux' → logprob: -6.815300464630127

Token 109: ' [' (ID: 723)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.9506072402000427
    2. 'le' → logprob: -1.4506072998046875
    3. ' ' → logprob: -2.2006072998046875
    4. '[' → logprob: -2.3256072998046875
    5. ' [' → logprob: -3.3256072998046875
    6. ' un' → logprob: -3.3256072998046875
    7. 'un' → logprob: -3.9506072998046875
    8. '3' → logprob: -3.9506072998046875
    9. ' l' → logprob: -4.7006072998046875
    10. 'l' → logprob: -5.0756072998046875

Token 110: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.15895485877990723
    2. '1' → logprob: -2.6589548587799072
    3. ' ' → logprob: -3.0339548587799072
    4. '[' → logprob: -4.408954620361328
    5. ']' → logprob: -5.033954620361328
    6. '/' → logprob: -6.783954620361328
    7. ' rien' → logprob: -6.908954620361328
    8. ' ]' → logprob: -7.033954620361328
    9. ' [' → logprob: -7.283954620361328
    10. 'r' → logprob: -7.346454620361328

Token 111: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0008160584256984293
    2. '3' → logprob: -8.125816345214844
    3. '/x' → logprob: -8.125816345214844
    4. 'x' → logprob: -9.000816345214844
    5. '/]' → logprob: -10.625816345214844
    6. '/
' → logprob: -10.875816345214844
    7. ' /' → logprob: -11.000816345214844
    8. '/

' → logprob: -11.625816345214844
    9. ']' → logprob: -12.625816345214844
    10. '/s' → logprob: -12.875816345214844

Token 112: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.1054253011243418e-05
    2. ' ' → logprob: -11.250020980834961
    3. '1' → logprob: -12.500020980834961
    4. '```' → logprob: -13.625020980834961
    5. '³' → logprob: -14.875020980834961
    6. ')' → logprob: -15.562520980834961
    7. 'import' → logprob: -15.625020980834961
    8. ' ' → logprob: -15.687520980834961
    9. 'x' → logprob: -15.687520980834961
    10. '
' → logprob: -15.875020980834961

Token 113: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.019571509212255478
    2. '])' → logprob: -4.644571304321289
    3. ']' → logprob: -4.894571304321289
    4. ']),' → logprob: -6.394571304321289
    5. ']))' → logprob: -8.519571304321289
    6. '])

' → logprob: -9.769571304321289
    7. '],' → logprob: -9.769571304321289
    8. '])
' → logprob: -10.269571304321289
    9. ']).' → logprob: -10.394571304321289
    10. '])]' → logprob: -10.894571304321289

Token 114: '],' (ID: 2155)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0348564013838768
    2. ']' → logprob: -4.28485631942749
    3. ')' → logprob: -5.15985631942749
    4. '])
' → logprob: -5.40985631942749
    5. ']),' → logprob: -5.53485631942749
    6. '])

' → logprob: -5.90985631942749
    7. ']).' → logprob: -7.53485631942749
    8. ')])' → logprob: -7.53485631942749
    9. ')]' → logprob: -7.65985631942749
    10. ']):' → logprob: -8.034856796264648

Token 115: ' elle' (ID: 11451)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2034992128610611
    2. ' donc' → logprob: -2.7034993171691895
    3. ' or' → logprob: -3.2034993171691895
    4. ' ce' → logprob: -4.3284993171691895
    5. ' on' → logprob: -4.5784993171691895
    6. ' #' → logprob: -5.0784993171691895
    7. ' which' → logprob: -5.4534993171691895
    8. ' car' → logprob: -5.5784993171691895
    9. ' so' → logprob: -5.8284993171691895
    10. 'ou' → logprob: -5.9534993171691895

Token 116: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.8334354162216187
    2. 'n' → logprob: -1.4584354162216187
    3. ' est' → logprob: -2.083435535430908
    4. ' n' → logprob: -2.208435535430908
    5. 'ne' → logprob: -3.958435535430908
    6. ' faut' → logprob: -4.083435535430908
    7. 'est' → logprob: -4.333435535430908
    8. 'f' → logprob: -5.083435535430908
    9. ' reste' → logprob: -5.083435535430908
    10. ' peut' → logprob: -5.333435535430908

Token 117: ' change' (ID: 3343)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.4152902662754059
    2. 'n' → logprob: -1.7902902364730835
    3. ' pas' → logprob: -3.540290355682373
    4. 'est' → logprob: -3.540290355682373
    5. 'pe' → logprob: -4.040290355682373
    6. 's' → logprob: -4.165290355682373
    7. 'f' → logprob: -4.540290355682373
    8. ''est' → logprob: -4.540290355682373
    9. ' peut' → logprob: -4.665290355682373
    10. 'a' → logprob: -4.915290355682373

Token 118: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.5256919264793396
    2. ' pas' → logprob: -0.9006919264793396
    3. ' jamais' → logprob: -6.775691986083984
    4. 'import' → logprob: -7.150691986083984
    5. ' rien' → logprob: -8.775691986083984
    6. 'r' → logprob: -9.025691986083984
    7. 's' → logprob: -9.525691986083984
    8. 'a' → logprob: -10.400691986083984
    9. 'not' → logprob: -10.900691986083984
    10. '```' → logprob: -10.900691986083984

Token 119: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001875563059002161
    2. ')
' → logprob: -7.501875400543213
    3. ' )' → logprob: -7.751875400543213
    4. ':' → logprob: -8.751875877380371
    5. ')

' → logprob: -9.001875877380371
    6. ',' → logprob: -9.126875877380371
    7. '```' → logprob: -9.251875877380371
    8. '.' → logprob: -9.501875877380371
    9. 'import' → logprob: -9.751875877380371
    10. '\n' → logprob: -9.876875877380371

Token 120: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08045315742492676
    2. 'd' → logprob: -3.2054531574249268
    3. 't' → logprob: -3.8304531574249268
    4. 'v' → logprob: -5.330452919006348
    5. 'from' → logprob: -5.455452919006348
    6. 'import' → logprob: -6.330452919006348
    7. 'n' → logprob: -6.705452919006348
    8. '#' → logprob: -6.830452919006348
    9. 'dp' → logprob: -7.455452919006348
    10. 'V' → logprob: -8.455452919006348

Token 121: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01662003993988037
    2. 'from' → logprob: -4.39162015914917
    3. 'import' → logprob: -6.01662015914917
    4. 't' → logprob: -7.26662015914917
    5. '#' → logprob: -7.76662015914917
    6. 'class' → logprob: -8.016619682312012
    7. 'dp' → logprob: -9.891619682312012
    8. 'n' → logprob: -10.141619682312012
    9. '
' → logprob: -10.641619682312012
    10. 'd' → logprob: -11.141619682312012

Token 122: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02440103143453598
    2. 'from' → logprob: -3.7744009494781494
    3. 'import' → logprob: -7.1494011878967285
    4. 'class' → logprob: -8.89940071105957
    5. '#' → logprob: -9.14940071105957
    6. 't' → logprob: -10.02440071105957
    7. 'dp' → logprob: -10.02440071105957
    8. 'n' → logprob: -10.64940071105957
    9. ' def' → logprob: -12.39940071105957
    10. ' from' → logprob: -13.14940071105957

Token 123: ' veut' (ID: 41653)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24514701962471008
    2. 'from' → logprob: -1.8701469898223877
    3. 'import' → logprob: -3.1201469898223877
    4. 'veux' → logprob: -5.245147228240967
    5. ' from' → logprob: -5.370147228240967
    6. 'pe' → logprob: -5.995147228240967
    7. 'n' → logprob: -6.870147228240967
    8. 'cherche' → logprob: -7.120147228240967
    9. 'continue' → logprob: -7.245147228240967
    10. ' veux' → logprob: -7.370147228240967

Token 124: ' minim' (ID: 23874)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04479776695370674
    2. 'import' → logprob: -3.919797658920288
    3. 'dé' → logprob: -5.169797897338867
    4. 'from' → logprob: -5.669797897338867
    5. 't' → logprob: -5.794797897338867
    6. '#' → logprob: -6.544797897338867
    7. ' trouver' → logprob: -6.794797897338867
    8. 'min' → logprob: -6.794797897338867
    9. ' déterminer' → logprob: -7.294797897338867
    10. 'd' → logprob: -7.419797897338867

Token 125: 'iser' (ID: 7466)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.0005041812546551228
    2. 'iser' → logprob: -8.000504493713379
    3. '#' → logprob: -10.125504493713379
    4. 'm' → logprob: -10.250504493713379
    5. 'zer' → logprob: -10.250504493713379
    6. 'er' → logprob: -10.375504493713379
    7. 'se' → logprob: -12.250504493713379
    8. 'mer' → logprob: -12.500504493713379
    9. 'user' → logprob: -12.875504493713379
    10. ' ser' → logprob: -12.875504493713379

Token 126: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.039848823100328445
    2. 'le' → logprob: -3.289848804473877
    3. ' l' → logprob: -7.289848804473877
    4. '_le' → logprob: -7.414848804473877
    5. ' la' → logprob: -8.914849281311035
    6. 'l' → logprob: -9.289849281311035
    7. ' ' → logprob: -9.289849281311035
    8. '#' → logprob: -9.414849281311035
    9. '_' → logprob: -9.664849281311035
    10. ' les' → logprob: -10.789849281311035

Token 127: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.019631706178188324
    2. 'nombre' → logprob: -4.269631862640381
    3. ' temps' → logprob: -5.894631862640381
    4. 'tem' → logprob: -7.519631862640381
    5. 'import' → logprob: -7.644631862640381
    6. ' nombre' → logprob: -7.644631862640381
    7. 't' → logprob: -7.644631862640381
    8. 'temp' → logprob: -8.269631385803223
    9. 'time' → logprob: -8.644631385803223
    10. '#' → logprob: -9.019631385803223

Token 128: ' total' (ID: 3609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1761921644210815
    2. '=' → logprob: -1.5511921644210815
    3. '#' → logprob: -2.426192283630371
    4. 'pour' → logprob: -2.551192283630371
    5. ',' → logprob: -2.801192283630371
    6. 'import' → logprob: -3.301192283630371
    7. '.' → logprob: -3.551192283630371
    8. 'def' → logprob: -3.676192283630371
    9. ' ' → logprob: -3.801192283630371
    10. ' =' → logprob: -3.926192283630371

Token 129: ' passé' (ID: 40520)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2631062269210815
    2. 'import' → logprob: -1.5131062269210815
    3. ' t' → logprob: -2.513106346130371
    4. 'def' → logprob: -2.638106346130371
    5. ' ' → logprob: -2.888106346130371
    6. '#' → logprob: -3.263106346130371
    7. '_' → logprob: -3.388106346130371
    8. ')' → logprob: -3.888106346130371
    9. '\' → logprob: -4.013106346130371
    10. '<|end|>' → logprob: -4.138106346130371

Token 130: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06369639933109283
    2. 'import' → logprob: -3.5636963844299316
    3. '
' → logprob: -3.8136963844299316
    4. 'from' → logprob: -5.688696384429932
    5. 'class' → logprob: -6.188696384429932
    6. 't' → logprob: -6.188696384429932
    7. '#' → logprob: -6.938696384429932
    8. '\' → logprob: -7.813696384429932
    9. '```' → logprob: -7.813696384429932
    10. '

' → logprob: -8.06369686126709

Token 131: ' sachant' (ID: 174239)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3706490099430084
    2. 'import' → logprob: -1.495648980140686
    3. '#' → logprob: -2.9956490993499756
    4. 't' → logprob: -4.2456488609313965
    5. ' 
' → logprob: -5.7456488609313965
    6. ' #' → logprob: -6.3706488609313965
    7. ' en' → logprob: -6.3706488609313965
    8. ' def' → logprob: -6.4956488609313965
    9. 'n' → logprob: -6.7456488609313965
    10. 'while' → logprob: -6.8706488609313965

Token 132: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.3732449412345886
    2. 'que' → logprob: -1.8732450008392334
    3. ' qu' → logprob: -2.7482450008392334
    4. 'qu' → logprob: -3.1232450008392334
    5. 't' → logprob: -4.373244762420654
    6. '#' → logprob: -4.373244762420654
    7. 'du' → logprob: -5.248244762420654
    8. ' du' → logprob: -5.498244762420654
    9. '_' → logprob: -5.748244762420654
    10. 'import' → logprob: -6.123244762420654

Token 133: ' le' (ID: 505)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.323974370956421
    2. ' la' → logprob: -1.573974370956421
    3. 'le' → logprob: -1.573974370956421
    4. 'la' → logprob: -1.823974370956421
    5. ' t' → logprob: -2.823974370956421
    6. ' le' → logprob: -3.198974370956421
    7. 'que' → logprob: -4.448974609375
    8. 'l' → logprob: -4.823974609375
    9. 'v' → logprob: -5.198974609375
    10. '0' → logprob: -5.323974609375

Token 134: ' temps' (ID: 11160)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8198143839836121
    2. 'v' → logprob: -1.3198144435882568
    3. 'temps' → logprob: -1.4448144435882568
    4. '#' → logprob: -3.444814443588257
    5. ' t' → logprob: -5.069814205169678
    6. ' temps' → logprob: -5.569814205169678
    7. 'def' → logprob: -5.819814205169678
    8. 'target' → logprob: -6.319814205169678
    9. 'code' → logprob: -6.694814205169678
    10. 'import' → logprob: -6.694814205169678

Token 135: ' "' (ID: 392)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6664495468139648
    2. ' t' → logprob: -1.1664495468139648
    3. 'total' → logprob: -3.041449546813965
    4. 'c' → logprob: -3.541449546813965
    5. ' cible' → logprob: -3.791449546813965
    6. ' total' → logprob: -4.291449546813965
    7. 'final' → logprob: -4.291449546813965
    8. 'target' → logprob: -4.541449546813965
    9. 'max' → logprob: -4.791449546813965
    10. ' maximal' → logprob: -5.291449546813965

Token 136: 'ré' (ID: 22830)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6978361010551453
    2. 'c' → logprob: -1.94783616065979
    3. ' =' → logprob: -2.69783616065979
    4. '=' → logprob: -2.94783616065979
    5. 'target' → logprob: -3.19783616065979
    6. '_target' → logprob: -3.32283616065979
    7. ' t' → logprob: -3.57283616065979
    8. '_' → logprob: -3.57283616065979
    9. 'final' → logprob: -3.57283616065979
    10. ' cible' → logprob: -4.197835922241211

Token 137: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.013418675400316715
    2. 'al' → logprob: -4.888418674468994
    3. 'él' → logprob: -6.013418674468994
    4. 'alis' → logprob: -7.638418674468994
    5. 'alit' → logprob: -8.138419151306152
    6. 'alité' → logprob: -8.388419151306152
    7. 'sum' → logprob: -8.638419151306152
    8. 'a' → logprob: -8.763419151306152
    9. 'é' → logprob: -8.763419151306152
    10. 'f' → logprob: -8.888419151306152

Token 138: '"' (ID: 1)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.9172592163085938
    2. '_' → logprob: -1.0422592163085938
    3. ')' → logprob: -2.2922592163085938
    4. ' ' → logprob: -3.1672592163085938
    5. ' "' → logprob: -4.292259216308594
    6. ' ' → logprob: -4.542259216308594
    7. ',' → logprob: -4.917259216308594
    8. 't' → logprob: -5.042259216308594
    9. ' =' → logprob: -5.042259216308594
    10. ' de' → logprob: -5.292259216308594

Token 139: ' parcour' (ID: 130642)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31312695145606995
    2. ',' → logprob: -3.188127040863037
    3. ' de' → logprob: -3.188127040863037
    4. ' =' → logprob: -3.813127040863037
    5. ' t' → logprob: -3.938127040863037
    6. ' ,' → logprob: -3.938127040863037
    7. ' est' → logprob: -4.438127040863037
    8. ' à' → logprob: -4.438127040863037
    9. ')' → logprob: -4.563127040863037
    10. 's' → logprob: -4.938127040863037

Token 140: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -6.360996485454962e-05
    2. 'ue' → logprob: -10.3750638961792
    3. 'ut' → logprob: -11.8750638961792
    4. 'us' → logprob: -12.2500638961792
    5. 't' → logprob: -12.5000638961792
    6. '#' → logprob: -12.7500638961792
    7. 'ru' → logprob: -13.0000638961792
    8. '=' → logprob: -13.6250638961792
    9. '```' → logprob: -13.8750638961792
    10. 'i' → logprob: -14.0000638961792

Token 141: ' dans' (ID: 2671)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.6549392938613892
    2. ' ' → logprob: -1.9049392938613892
    3. ',' → logprob: -2.1549391746520996
    4. ' est' → logprob: -2.1549391746520996
    5. 't' → logprob: -2.5299391746520996
    6. '_' → logprob: -2.6549391746520996
    7. ' jusqu' → logprob: -3.0299391746520996
    8. ' (' → logprob: -3.5299391746520996
    9. '=' → logprob: -3.5299391746520996
    10. ' en' → logprob: -3.6549391746520996

Token 142: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.31802353262901306
    2. ' la' → logprob: -2.068023443222046
    3. 'l' → logprob: -2.443023443222046
    4. 'le' → logprob: -3.818023443222046
    5. 't' → logprob: -4.068023681640625
    6. 'une' → logprob: -4.568023681640625
    7. ' l' → logprob: -5.568023681640625
    8. ' le' → logprob: -7.068023681640625
    9. '#' → logprob: -7.318023681640625
    10. ' une' → logprob: -7.318023681640625

Token 143: ' vidéo' (ID: 42292)
  Prédit: 'scene'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scene' → logprob: -1.2304898500442505
    2. ' scène' → logprob: -1.9804898500442505
    3. 'sc' → logprob: -2.230489730834961
    4. 'vid' → logprob: -2.355489730834961
    5. ' vidéo' → logprob: -2.355489730834961
    6. 'code' → logprob: -2.980489730834961
    7. '#' → logprob: -2.980489730834961
    8. 'video' → logprob: -3.105489730834961
    9. 'film' → logprob: -3.355489730834961
    10. 'lecture' → logprob: -3.605489730834961

Token 144: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1756119281053543
    2. ',' → logprob: -3.425611972808838
    3. ' est' → logprob: -4.050611972808838
    4. '<|end|>' → logprob: -4.300611972808838
    5. ' =' → logprob: -4.425611972808838
    6. 's' → logprob: -4.425611972808838
    7. ')' → logprob: -4.550611972808838
    8. '#' → logprob: -4.675611972808838
    9. ' (' → logprob: -4.800611972808838
    10. ' s' → logprob: -5.050611972808838

Token 145: ' égal' (ID: 15059)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.633929967880249
    2. ' t' → logprob: -0.758929967880249
    3. ' ' → logprob: -7.883930206298828
    4. '0' → logprob: -8.508930206298828
    5. ' equal' → logprob: -8.508930206298828
    6. ' égal' → logprob: -9.258930206298828
    7. 'au' → logprob: -10.258930206298828
    8. ' =' → logprob: -10.258930206298828
    9. ' exactement' → logprob: -10.258930206298828
    10. ' toujours' → logprob: -10.758930206298828

Token 146: ' à' (ID: 1221)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.31283605098724365
    2. 'au' → logprob: -1.8128360509872437
    3. ' à' → logprob: -2.312836170196533
    4. 'à' → logprob: -6.187836170196533
    5. ' ' → logprob: -6.312836170196533
    6. ' t' → logprob: -6.812836170196533
    7. ' a' → logprob: -7.937836170196533
    8. ' to' → logprob: -8.312835693359375
    9. ' =' → logprob: -8.437835693359375
    10. '  ' → logprob: -8.937835693359375

Token 147: ' la' (ID: 557)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.6425052285194397
    2. 't' → logprob: -1.017505168914795
    3. ' la' → logprob: -2.892505168914795
    4. 'temps' → logprob: -4.017505168914795
    5. ' le' → logprob: -4.767505168914795
    6. ' temps' → logprob: -5.142505168914795
    7. 'v' → logprob: -5.267505168914795
    8. ' v' → logprob: -5.892505168914795
    9. 'le' → logprob: -5.892505168914795
    10. ' the' → logprob: -6.017505168914795

Token 148: ' somme' (ID: 64484)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7965450286865234
    2. 'temps' → logprob: -0.9215450286865234
    3. 'v' → logprob: -2.1715450286865234
    4. ' t' → logprob: -4.921545028686523
    5. ' temps' → logprob: -4.921545028686523
    6. 'time' → logprob: -5.046545028686523
    7. 'current' → logprob: -5.921545028686523
    8. ' vitesse' → logprob: -6.046545028686523
    9. 'int' → logprob: -6.546545028686523
    10. 'dur' → logprob: -6.796545028686523

Token 149: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0532588958740234
    2. '_' → logprob: -1.1782588958740234
    3. ' ' → logprob: -2.3032588958740234
    4. ' des' → logprob: -2.6782588958740234
    5. ')' → logprob: -3.1782588958740234
    6. ' of' → logprob: -3.3032588958740234
    7. 'import' → logprob: -4.178258895874023
    8. ' d' → logprob: -4.178258895874023
    9. ' ' → logprob: -4.428258895874023
    10. ' _' → logprob: -4.553258895874023

Token 150: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7552140355110168
    2. ' v' → logprob: -2.130213975906372
    3. 'temps' → logprob: -2.380213975906372
    4. ' t' → logprob: -3.005213975906372
    5. 'range' → logprob: -3.130213975906372
    6. ' vit' → logprob: -3.255213975906372
    7. 't' → logprob: -3.380213975906372
    8. ' range' → logprob: -3.380213975906372
    9. ' temps' → logprob: -4.255214214324951
    10. '[' → logprob: -4.255214214324951

Token 151: 'second' (ID: 13901)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4861895442008972
    2. '1' → logprob: -2.111189603805542
    3. 'vit' → logprob: -2.861189603805542
    4. 'temps' → logprob: -2.861189603805542
    5. ' v' → logprob: -3.986189603805542
    6. 'la' → logprob: -3.986189603805542
    7. ' vit' → logprob: -4.486189365386963
    8. ' la' → logprob: -4.486189365386963
    9. ' ' → logprob: -4.861189365386963
    10. ' vitesse' → logprob: -5.361189365386963

Token 152: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15319208800792694
    2. ')' → logprob: -2.2781920433044434
    3. 'es' → logprob: -4.028192043304443
    4. '_' → logprob: -4.903192043304443
    5. ' )' → logprob: -4.903192043304443
    6. ' s' → logprob: -6.028192043304443
    7. ' ' → logprob: -7.153192043304443
    8. 'import' → logprob: -7.153192043304443
    9. '#' → logprob: -7.528192043304443
    10. 'def' → logprob: -8.403192520141602

Token 153: ' éc' (ID: 44439)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2188409566879272
    2. '#' → logprob: -1.5938409566879272
    3. ' #' → logprob: -2.093841075897217
    4. ' )' → logprob: -3.218841075897217
    5. ' ' → logprob: -3.343841075897217
    6. ' *' → logprob: -3.343841075897217
    7. '*' → logprob: -3.468841075897217
    8. ' pass' → logprob: -3.593841075897217
    9. 'import' → logprob: -3.718841075897217
    10. ' parcour' → logprob: -3.718841075897217

Token 154: 'oul' (ID: 9826)
  Prédit: 'oul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oul' → logprob: -0.0006478638388216496
    2. 'ou' → logprob: -7.625648021697998
    3. 'oule' → logprob: -9.50064754486084
    4. 'r' → logprob: -11.12564754486084
    5. 'oula' → logprob: -11.37564754486084
    6. '#' → logprob: -12.25064754486084
    7. '```' → logprob: -12.25064754486084
    8. 'oué' → logprob: -12.25064754486084
    9. '``' → logprob: -12.37564754486084
    10. 'ul' → logprob: -12.62564754486084

Token 155: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.018961574882268906
    2. 'é' → logprob: -4.268961429595947
    3. 'es' → logprob: -6.268961429595947
    4. 'ues' → logprob: -6.893961429595947
    5. 'és' → logprob: -7.018961429595947
    6. '#' → logprob: -8.143961906433105
    7. 'u' → logprob: -8.518961906433105
    8. 'ée' → logprob: -9.143961906433105
    9. 'e' → logprob: -9.393961906433105
    10. 'ees' → logprob: -9.768961906433105

Token 156: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42724403738975525
    2. ' )' → logprob: -1.1772440671920776
    3. ',' → logprob: -4.427244186401367
    4. ' plus' → logprob: -5.302244186401367
    5. '+' → logprob: -5.427244186401367
    6. ' dans' → logprob: -5.552244186401367
    7. ' +' → logprob: -5.552244186401367
    8. ' ' → logprob: -6.052244186401367
    9. 's' → logprob: -7.052244186401367
    10. ' ' → logprob: -7.177244186401367

Token 157: ' vitesse' (ID: 71752)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.21359661221504211
    2. 'v' → logprob: -2.2135965824127197
    3. 'la' → logprob: -3.0885965824127197
    4. ' vitesse' → logprob: -4.338596820831299
    5. ' v' → logprob: -4.588596820831299
    6. ' current' → logprob: -5.713596820831299
    7. 'current' → logprob: -5.838596820831299
    8. ' the' → logprob: -5.838596820831299
    9. 'the' → logprob: -7.338596820831299
    10. '#' → logprob: -7.588596820831299

Token 158: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021010141354054213
    2. ' )' → logprob: -6.502100944519043
    3. '*' → logprob: -8.252100944519043
    4. ').' → logprob: -8.877100944519043
    5. '),' → logprob: -10.252100944519043
    6. 's' → logprob: -10.377100944519043
    7. '.' → logprob: -11.252100944519043
    8. ' ' → logprob: -11.377100944519043
    9. ']' → logprob: -11.627100944519043
    10. '(' → logprob: -11.627100944519043

Token 159: ' moment' (ID: 4205)
  Prédit: 'quel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quel' → logprob: -0.4036460220813751
    2. 'temps' → logprob: -2.2786459922790527
    3. 'quelle' → logprob: -2.9036459922790527
    4. ' départ' → logprob: -3.6536459922790527
    5. 'pr' → logprob: -4.278645992279053
    6. 'cours' → logprob: -4.528645992279053
    7. 'code' → logprob: -4.653645992279053
    8. 'dé' → logprob: -4.778645992279053
    9. 'su' → logprob: -4.903645992279053
    10. 'which' → logprob: -4.903645992279053

Token 160: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4999220669269562
    2. 'de' → logprob: -1.9999220371246338
    3. 'su' → logprob: -2.499922037124634
    4. '=' → logprob: -3.249922037124634
    5. ' )' → logprob: -3.374922037124634
    6. ' de' → logprob: -3.374922037124634
    7. ' suivant' → logprob: -3.874922037124634
    8. 'où' → logprob: -4.374922275543213
    9. 'd' → logprob: -5.249922275543213
    10. ' où' → logprob: -5.374922275543213

Token 161: ' ces' (ID: 10532)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2097020149230957
    2. 'c' → logprob: -1.8347020149230957
    3. 'which' → logprob: -1.8347020149230957
    4. 'ce' → logprob: -2.7097020149230957
    5. 'ch' → logprob: -2.9597020149230957
    6. 'la' → logprob: -3.3347020149230957
    7. 'éc' → logprob: -3.7097020149230957
    8. 'lecture' → logprob: -3.9597020149230957
    9. 'le' → logprob: -4.084702014923096
    10. 'qui' → logprob: -4.209702014923096

Token 162: ' secondes' (ID: 109098)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.15371409058570862
    2. 'quel' → logprob: -3.403714179992676
    3. ']' → logprob: -4.153714179992676
    4. '#' → logprob: -4.403714179992676
    5. 'import' → logprob: -4.653714179992676
    6. 'app' → logprob: -5.028714179992676
    7. ')' → logprob: -5.153714179992676
    8. 'second' → logprob: -5.778714179992676
    9. ' )' → logprob: -5.903714179992676
    10. ' temps' → logprob: -5.903714179992676

Token 163: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00710724014788866
    2. ' )' → logprob: -5.382107257843018
    3. 's' → logprob: -7.132107257843018
    4. ')
' → logprob: -7.882107257843018
    5. '.' → logprob: -8.13210678100586
    6. ',' → logprob: -8.25710678100586
    7. ').' → logprob: -8.88210678100586
    8. ')

' → logprob: -9.13210678100586
    9. 'e' → logprob: -9.38210678100586
    10. ' ' → logprob: -9.50710678100586

Token 164: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08692110329866409
    2. 'import' → logprob: -2.961921215057373
    3. 'from' → logprob: -4.461921215057373
    4. ':' → logprob: -4.461921215057373
    5. 'd' → logprob: -5.836921215057373
    6. 't' → logprob: -6.586921215057373
    7. '#' → logprob: -7.211921215057373
    8. '\' → logprob: -7.336921215057373
    9. 'n' → logprob: -7.586921215057373
    10. '```' → logprob: -7.711921215057373

Token 165: ' La' (ID: 3038)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017754659056663513
    2. 'from' → logprob: -4.767754554748535
    3. 'import' → logprob: -5.392754554748535
    4. 't' → logprob: -5.892754554748535
    5. 'd' → logprob: -7.767754554748535
    6. 'v' → logprob: -8.017754554748535
    7. 'class' → logprob: -8.517754554748535
    8. '#' → logprob: -8.642754554748535
    9. 'de' → logprob: -8.892754554748535
    10. 'n' → logprob: -9.392754554748535

Token 166: ' vitesse' (ID: 71752)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4537641704082489
    2. ' from' → logprob: -1.9537642002105713
    3. '#' → logprob: -2.3287642002105713
    4. ' code' → logprob: -3.2037642002105713
    5. 'def' → logprob: -3.2037642002105713
    6. 'import' → logprob: -4.203763961791992
    7. ' def' → logprob: -4.703763961791992
    8. ' #' → logprob: -5.203763961791992
    9. ' import' → logprob: -5.328763961791992
    10. ' next' → logprob: -5.953763961791992

Token 167: ' initial' (ID: 4871)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.0497031211853027
    2. ' de' → logprob: -1.7997031211853027
    3. 's' → logprob: -2.0497031211853027
    4. ' ' → logprob: -3.0497031211853027
    5. ' ' → logprob: -3.0497031211853027
    6. ' =' → logprob: -3.2997031211853027
    7. '#' → logprob: -3.4247031211853027
    8. '<|end|>' → logprob: -3.5497031211853027
    9. ' actuelle' → logprob: -3.7997031211853027
    10. ')' → logprob: -3.7997031211853027

Token 168: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.23053927719593048
    2. '=' → logprob: -2.355539321899414
    3. ' =' → logprob: -2.355539321899414
    4. ' est' → logprob: -4.355539321899414
    5. 'é' → logprob: -6.605539321899414
    6. 'est' → logprob: -7.730539321899414
    7. '_' → logprob: -8.105539321899414
    8. ' de' → logprob: -8.355539321899414
    9. 'es' → logprob: -8.480539321899414
    10. ' e' → logprob: -8.605539321899414

Token 169: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.7625446319580078
    2. ' =' → logprob: -1.0125446319580078
    3. '=' → logprob: -2.637544631958008
    4. 'est' → logprob: -2.637544631958008
    5. 'initial' → logprob: -4.137544631958008
    6. ' initial' → logprob: -6.012544631958008
    7. ' de' → logprob: -6.137544631958008
    8. 's' → logprob: -6.137544631958008
    9. ' is' → logprob: -6.387544631958008
    10. ' ' → logprob: -7.387544631958008

Token 170: ' normale' (ID: 57494)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006449731532484293
    2. ' ' → logprob: -5.2564496994018555
    3. 'norm' → logprob: -7.6314496994018555
    4. ' normale' → logprob: -7.6314496994018555
    5. 'normal' → logprob: -8.506449699401855
    6. ' normal' → logprob: -10.881449699401855
    7. ' norm' → logprob: -11.506449699401855
    8. ' normales' → logprob: -11.881449699401855
    9. '```' → logprob: -13.631449699401855
    10. 'NORMAL' → logprob: -14.006449699401855

Token 171: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014146821573376656
    2. 't' → logprob: -4.88914680480957
    3. 'import' → logprob: -5.38914680480957
    4. 'from' → logprob: -7.88914680480957
    5. 'n' → logprob: -8.01414680480957
    6. '
' → logprob: -8.26414680480957
    7. 'v' → logprob: -8.51414680480957
    8. '\' → logprob: -8.51414680480957
    9. '```' → logprob: -8.51414680480957
    10. '#' → logprob: -9.63914680480957

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005034506320953369
    2. ')' → logprob: -6.130034446716309
    3. ' ' → logprob: -6.380034446716309
    4. 'normal' → logprob: -7.630034446716309
    5. ' )' → logprob: -8.880034446716309
    6. ' normal' → logprob: -9.255034446716309
    7. 'v' → logprob: -9.380034446716309
    8. '),' → logprob: -9.880034446716309
    9. '3' → logprob: -10.005034446716309
    10. ',' → logprob: -10.130034446716309

Token 173: 'x' (ID: 87)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024568685330450535
    2. ',' → logprob: -7.6274566650390625
    3. ' )' → logprob: -7.7524566650390625
    4. '])' → logprob: -8.002456665039062
    5. ']' → logprob: -8.502456665039062
    6. '),' → logprob: -8.752456665039062
    7. ').' → logprob: -8.752456665039062
    8. ')
' → logprob: -8.877456665039062
    9. 'import' → logprob: -9.002456665039062
    10. '.' → logprob: -9.002456665039062

Token 174: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007356545538641512
    2. ').' → logprob: -7.625735759735107
    3. ')
' → logprob: -8.75073528289795
    4. '),' → logprob: -10.62573528289795
    5. ')

' → logprob: -10.87573528289795
    6. ',' → logprob: -11.12573528289795
    7. 'import' → logprob: -11.62573528289795
    8. '#' → logprob: -12.50073528289795
    9. ' )' → logprob: -12.75073528289795
    10. '```' → logprob: -13.12573528289795

Token 175: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5384443402290344
    2. 't' → logprob: -1.4134442806243896
    3. '#' → logprob: -2.6634442806243896
    4. 'from' → logprob: -2.9134442806243896
    5. 'import' → logprob: -3.6634442806243896
    6. 'v' → logprob: -4.663444519042969
    7. ' t' → logprob: -5.788444519042969
    8. 'target' → logprob: -5.913444519042969
    9. 'class' → logprob: -6.038444519042969
    10. ' from' → logprob: -6.413444519042969

Token 176: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0327032804489136
    2. 'le' → logprob: -1.0327032804489136
    3. 't' → logprob: -2.407703399658203
    4. 'la' → logprob: -2.657703399658203
    5. 'on' → logprob: -2.782703399658203
    6. 'l' → logprob: -4.282703399658203
    7. 'il' → logprob: -4.282703399658203
    8. 'the' → logprob: -4.407703399658203
    9. 'import' → logprob: -4.657703399658203
    10. ' le' → logprob: -5.282703399658203

Token 177: ' démar' (ID: 72663)
  Prédit: 'veux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'veux' → logprob: -0.0954885259270668
    2. 've' → logprob: -2.9704885482788086
    3. 'pe' → logprob: -3.8454885482788086
    4. 'cherche' → logprob: -5.470488548278809
    5. ' veux' → logprob: -5.845488548278809
    6. 'voud' → logprob: -6.345488548278809
    7. 'f' → logprob: -6.470488548278809
    8. 'v' → logprob: -6.595488548278809
    9. 'vais' → logprob: -7.220488548278809
    10. 'n' → logprob: -7.345488548278809

Token 178: 're' (ID: 264)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8892711997032166
    2. 're' → logprob: -1.0142712593078613
    3. 'rer' → logprob: -1.7642712593078613
    4. '```' → logprob: -4.139271259307861
    5. '=' → logprob: -4.639271259307861
    6. 'e' → logprob: -5.014271259307861
    7. 'rr' → logprob: -5.389271259307861
    8. 'rant' → logprob: -5.639271259307861
    9. 'rage' → logprob: -6.264271259307861
    10. '
' → logprob: -6.389271259307861

Token 179: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.49199867248535156
    2. 'à' → logprob: -1.3669986724853516
    3. 'au' → logprob: -2.7419986724853516
    4. 'le' → logprob: -3.7419986724853516
    5. 'la' → logprob: -4.116998672485352
    6. 'from' → logprob: -4.866998672485352
    7. ' la' → logprob: -5.116998672485352
    8. 'l' → logprob: -5.991998672485352
    9. 'sur' → logprob: -5.991998672485352
    10. ' au' → logprob: -6.116998672485352

Token 180: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012853829190135002
    2. 'temps' → logprob: -5.012853622436523
    3. 't' → logprob: -5.887853622436523
    4. ' ' → logprob: -6.137853622436523
    5. 'time' → logprob: -7.137853622436523
    6. ' t' → logprob: -8.762853622436523
    7. 'le' → logprob: -9.387853622436523
    8. ' time' → logprob: -10.387853622436523
    9. ' temps' → logprob: -10.762853622436523
    10. 'l' → logprob: -11.137853622436523

Token 181: ' position' (ID: 4010)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.17620021104812622
    2. 'temps' → logprob: -2.4262001514434814
    3. '0' → logprob: -2.8012001514434814
    4. 'second' → logprob: -4.8012003898620605
    5. 't' → logprob: -6.3012003898620605
    6. 'dé' → logprob: -6.5512003898620605
    7. 'time' → logprob: -7.6762003898620605
    8. 'de' → logprob: -9.051199913024902
    9. 'start' → logprob: -9.426199913024902
    10. ' seconde' → logprob: -9.926199913024902

Token 182: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04416792839765549
    2. ' ' → logprob: -3.294167995452881
    3. ' =' → logprob: -5.419167995452881
    4. '=' → logprob: -6.544167995452881
    5. '_' → logprob: -9.544167518615723
    6. ' de' → logprob: -10.419167518615723
    7. 'de' → logprob: -10.419167518615723
    8. ',' → logprob: -10.794167518615723
    9. ' initial' → logprob: -11.169167518615723
    10. ' ,' → logprob: -11.419167518615723

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.432518421206623e-05
    2. ' ' → logprob: -9.7500638961792
    3. 't' → logprob: -13.0000638961792
    4. '(' → logprob: -13.6250638961792
    5. '00' → logprob: -14.7500638961792
    6. '1' → logprob: -14.7500638961792
    7. 'initial' → logprob: -15.2500638961792
    8. '=' → logprob: -15.3750638961792
    9. 'de' → logprob: -16.250064849853516
    10. 'time' → logprob: -16.375064849853516

Token 184: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006370136048644781
    2. 't' → logprob: -5.8813700675964355
    3. '```' → logprob: -6.3813700675964355
    4. 'import' → logprob: -7.1313700675964355
    5. ':' → logprob: -7.5063700675964355
    6. 'from' → logprob: -8.631370544433594
    7. 'n' → logprob: -8.881370544433594
    8. 'class' → logprob: -10.006370544433594
    9. '\' → logprob: -10.256370544433594
    10. '#' → logprob: -10.631370544433594

Token 185: 'mill' (ID: 40223)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7896584272384644
    2. 't' → logprob: -0.9146584272384644
    3. '0' → logprob: -3.039658546447754
    4. 'position' → logprob: -3.414658546447754
    5. ' )' → logprob: -3.789658546447754
    6. ',' → logprob: -4.164658546447754
    7. ')t' → logprob: -5.164658546447754
    8. ' t' → logprob: -5.414658546447754
    9. 'pos' → logprob: -5.664658546447754
    10. ' position' → logprob: -6.164658546447754

Token 186: 'isecond' (ID: 96953)
  Prédit: 'isecond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isecond' → logprob: -0.3166515529155731
    2. 'iseconds' → logprob: -1.3166515827178955
    3. 'i' → logprob: -6.066651344299316
    4. 'is' → logprob: -7.441651344299316
    5. 'e' → logprob: -8.691651344299316
    6. 'ise' → logprob: -9.066651344299316
    7. 'es' → logprob: -9.691651344299316
    8. 'ies' → logprob: -10.316651344299316
    9. 'ions' → logprob: -11.066651344299316
    10. 'seconds' → logprob: -11.441651344299316

Token 187: 'es' (ID: 268)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5327484607696533
    2. 'es' → logprob: -0.9077484607696533
    3. 's' → logprob: -4.782748222351074
    4. ')' → logprob: -6.782748222351074
    5. 'se' → logprob: -11.532748222351074
    6. 'ec' → logprob: -11.782748222351074
    7. '```' → logprob: -11.782748222351074
    8. 'isecond' → logprob: -12.532748222351074
    9. 'esp' → logprob: -12.782748222351074
    10. 'iseconds' → logprob: -12.782748222351074

Token 188: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031055594445206225
    2. ').' → logprob: -9.125310897827148
    3. ' )' → logprob: -9.625310897827148
    4. ')
' → logprob: -10.125310897827148
    5. '):' → logprob: -11.500310897827148
    6. ',' → logprob: -11.625310897827148
    7. ')

' → logprob: -11.750310897827148
    8. 'import' → logprob: -12.000310897827148
    9. '=' → logprob: -12.125310897827148
    10. ')...' → logprob: -12.125310897827148

Token 189: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7019141912460327
    2. 'la' → logprob: -0.7019141912460327
    3. 'le' → logprob: -5.576914310455322
    4. 'the' → logprob: -6.326914310455322
    5. ' the' → logprob: -6.951914310455322
    6. 'l' → logprob: -6.951914310455322
    7. ')' → logprob: -8.201913833618164
    8. ' le' → logprob: -8.451913833618164
    9. ' l' → logprob: -8.576913833618164
    10. 'video' → logprob: -9.326913833618164

Token 190: ' vidéo' (ID: 42292)
  Prédit: 'vid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vid' → logprob: -0.6342418789863586
    2. 'video' → logprob: -1.0092418193817139
    3. ' vidéo' → logprob: -2.384241819381714
    4. ' video' → logprob: -4.634242057800293
    5. 'film' → logprob: -6.509242057800293
    6. 'vide' → logprob: -7.509242057800293
    7. ' vid' → logprob: -7.884242057800293
    8. 'lecture' → logprob: -8.134242057800293
    9. 'scene' → logprob: -9.634242057800293
    10. 'code' → logprob: -9.884242057800293

Token 191: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000477620807942003
    2. ')
' → logprob: -8.62547779083252
    3. '):' → logprob: -8.75047779083252
    4. ').' → logprob: -9.75047779083252
    5. ':' → logprob: -10.62547779083252
    6. ')

' → logprob: -10.87547779083252
    7. '```' → logprob: -11.62547779083252
    8. '0' → logprob: -12.25047779083252
    9. ',' → logprob: -12.75047779083252
    10. '#' → logprob: -12.75047779083252

Token 192: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005601192358881235
    2. 'from' → logprob: -5.880601406097412
    3. 'import' → logprob: -6.255601406097412
    4. '```' → logprob: -7.380601406097412
    5. ':' → logprob: -9.255600929260254
    6. 't' → logprob: -10.505600929260254
    7. 'n' → logprob: -10.630600929260254
    8. '
' → logprob: -10.755600929260254
    9. '\' → logprob: -11.380600929260254
    10. ')' → logprob: -11.505600929260254

Token 193: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008591406978666782
    2. 't' → logprob: -5.883591175079346
    3. 'import' → logprob: -5.883591175079346
    4. 'from' → logprob: -6.008591175079346
    5. 'class' → logprob: -7.758591175079346
    6. 'n' → logprob: -9.883591651916504
    7. '#' → logprob: -11.008591651916504
    8. '
' → logprob: -11.758591651916504
    9. '```' → logprob: -12.508591651916504
    10. ' def' → logprob: -12.758591651916504

Token 194: ' L' (ID: 451)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002505743643268943
    2. 't' → logprob: -7.252505779266357
    3. 'import' → logprob: -7.252505779266357
    4. 'from' → logprob: -7.252505779266357
    5. 'class' → logprob: -8.2525053024292
    6. '#' → logprob: -9.7525053024292
    7. 'n' → logprob: -10.5025053024292
    8. '```' → logprob: -11.3775053024292
    9. ' def' → logprob: -11.5025053024292
    10. 'd' → logprob: -13.6275053024292

Token 195: ''appro' (ID: 134343)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.3267507553100586
    2. '#' → logprob: -1.5767507553100586
    3. 'import' → logprob: -1.5767507553100586
    4. 'i' → logprob: -2.0767507553100586
    5. 'def' → logprob: -3.2017507553100586
    6. 't' → logprob: -3.7017507553100586
    7. 'from' → logprob: -4.076750755310059
    8. 'f' → logprob: -4.451750755310059
    9. '_' → logprob: -4.451750755310059
    10. '=' → logprob: -4.576750755310059

Token 196: 'che' (ID: 926)
  Prédit: 'fond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fond' → logprob: -0.20206837356090546
    2. 'x' → logprob: -2.077068328857422
    3. '#' → logprob: -3.952068328857422
    4. 'che' → logprob: -4.327068328857422
    5. 'xi' → logprob: -4.452068328857422
    6. 'f' → logprob: -5.327068328857422
    7. 'xim' → logprob: -6.202068328857422
    8. 'visionnement' → logprob: -6.577068328857422
    9. '```' → logprob: -6.827068328857422
    10. 'xima' → logprob: -7.702068328857422

Token 197: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14842255413532257
    2. '=' → logprob: -2.2734224796295166
    3. ':' → logprob: -4.023422718048096
    4. 'import' → logprob: -4.898422718048096
    5. 'de' → logprob: -6.523422718048096
    6. 'est' → logprob: -6.523422718048096
    7. 'dfs' → logprob: -6.523422718048096
    8. ' de' → logprob: -7.273422718048096
    9. 'from' → logprob: -7.523422718048096
    10. 'possible' → logprob: -7.773422718048096

Token 198: ' de' (ID: 334)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.9172468781471252
    2. 'd' → logprob: -1.5422468185424805
    3. 'de' → logprob: -2.0422468185424805
    4. 'import' → logprob: -2.4172468185424805
    5. 'b' → logprob: -3.1672468185424805
    6. 'from' → logprob: -3.4172468185424805
    7. 'dp' → logprob: -3.4172468185424805
    8. 'par' → logprob: -4.4172468185424805
    9. 'def' → logprob: -4.5422468185424805
    10. 'une' → logprob: -5.1672468185424805

Token 199: ' faire' (ID: 8119)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.9020077586174011
    2. 'b' → logprob: -1.402007818222046
    3. 'import' → logprob: -2.027007818222046
    4. 'util' → logprob: -2.277007818222046
    5. 'def' → logprob: -3.527007818222046
    6. 'dfs' → logprob: -3.652007818222046
    7. ' utiliser' → logprob: -4.277007579803467
    8. 'from' → logprob: -4.652007579803467
    9. 'sim' → logprob: -5.027007579803467
    10. '#' → logprob: -5.027007579803467

Token 200: ' un' (ID: 537)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5408798456192017
    2. 'une' → logprob: -1.2908798456192017
    3. ' une' → logprob: -2.915879726409912
    4. 'def' → logprob: -3.415879726409912
    5. 'import' → logprob: -3.665879726409912
    6. 'dfs' → logprob: -4.415879726409912
    7. 'deque' → logprob: -4.790879726409912
    8. 'un' → logprob: -6.040879726409912
    9. 'de' → logprob: -6.415879726409912
    10. 'b' → logprob: -6.540879726409912

Token 201: ' DFS' (ID: 115767)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6453903317451477
    2. ' BFS' → logprob: -1.770390272140503
    3. 'b' → logprob: -2.395390272140503
    4. ' breadth' → logprob: -3.145390272140503
    5. ' bfs' → logprob: -3.395390272140503
    6. 'a' → logprob: -3.645390272140503
    7. 'from' → logprob: -3.645390272140503
    8. 'dfs' → logprob: -3.895390272140503
    9. 'B' → logprob: -4.395390510559082
    10. 'import' → logprob: -4.520390510559082

Token 202: ' avec' (ID: 3937)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6451424956321716
    2. 'def' → logprob: -0.8951424956321716
    3. ' :' → logprob: -3.8951425552368164
    4. ' ' → logprob: -4.020142555236816
    5. 'import' → logprob: -5.145142555236816
    6. ',' → logprob: -5.520142555236816
    7. '(' → logprob: -5.645142555236816
    8. ' def' → logprob: -5.770142555236816
    9. '.' → logprob: -6.020142555236816
    10. '#' → logprob: -6.020142555236816

Token 203: ' mém' (ID: 136981)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.08217650651931763
    2. 'from' → logprob: -3.707176446914673
    3. ' memo' → logprob: -3.707176446914673
    4. 'l' → logprob: -3.957176446914673
    5. 'import' → logprob: -6.207176685333252
    6. 'sys' → logprob: -6.582176685333252
    7. 'deque' → logprob: -6.707176685333252
    8. 'visited' → logprob: -6.707176685333252
    9. 'stack' → logprob: -6.957176685333252
    10. 'memor' → logprob: -6.957176685333252

Token 204: 'or' (ID: 267)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.00906417891383171
    2. 'or' → logprob: -6.009064197540283
    3. 'oir' → logprob: -6.259064197540283
    4. 'oire' → logprob: -6.384064197540283
    5. 'ois' → logprob: -7.384064197540283
    6. '
' → logprob: -7.884064197540283
    7. '```' → logprob: -8.009063720703125
    8. '%' → logprob: -8.259063720703125
    9. 'oz' → logprob: -8.509063720703125
    10. '{}' → logprob: -8.509063720703125

Token 205: 'isation' (ID: 6993)
  Prédit: 'ization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.19627389311790466
    2. 'y' → logprob: -2.4462738037109375
    3. 'ry' → logprob: -2.6962738037109375
    4. 'ized' → logprob: -4.8212738037109375
    5. 'ize' → logprob: -5.4462738037109375
    6. 'ï' → logprob: -5.4462738037109375
    7. 'i' → logprob: -6.1962738037109375
    8. 'ire' → logprob: -7.0712738037109375
    9. 'isation' → logprob: -7.0712738037109375
    10. '#' → logprob: -7.5712738037109375

Token 206: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19483062624931335
    2. 'import' → logprob: -2.4448306560516357
    3. 'from' → logprob: -3.3198306560516357
    4. ':' → logprob: -3.8198306560516357
    5. '(' → logprob: -4.194830417633057
    6. '(
' → logprob: -4.944830417633057
    7. '
' → logprob: -5.944830417633057
    8. '```' → logprob: -6.819830417633057
    9. 'd' → logprob: -6.944830417633057
    10. ':
' → logprob: -7.069830417633057

Token 207: ' essayer' (ID: 92713)
  Prédit: ' trouver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -1.1936019659042358
    2. ' éviter' → logprob: -1.1936019659042358
    3. 'expl' → logprob: -2.1936020851135254
    4. ' explorer' → logprob: -2.3186020851135254
    5. 'év' → logprob: -2.3186020851135254
    6. 'min' → logprob: -4.068602085113525
    7. 'tr' → logprob: -4.193602085113525
    8. ' gérer' → logprob: -4.818602085113525
    9. 'chercher' → logprob: -5.068602085113525
    10. ' continuer' → logprob: -5.318602085113525

Token 208: ' tous' (ID: 10688)
  Prédit: ' toutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' toutes' → logprob: -0.7308549284934998
    2. ' de' → logprob: -1.6058549880981445
    3. ' d' → logprob: -1.9808549880981445
    4. ':' → logprob: -2.4808549880981445
    5. 'de' → logprob: -3.1058549880981445
    6. ' différentes' → logprob: -3.8558549880981445
    7. '_' → logprob: -4.4808549880981445
    8. 'd' → logprob: -5.1058549880981445
    9. ' chaque' → logprob: -5.6058549880981445
    10. ' les' → logprob: -6.6058549880981445

Token 209: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.2104131579399109
    2. 'les' → logprob: -1.7104132175445557
    3. 'possible' → logprob: -5.960412979125977
    4. ' possible' → logprob: -6.585412979125977
    5. 's' → logprob: -6.710412979125977
    6. 'es' → logprob: -6.835412979125977
    7. ' possibles' → logprob: -6.960412979125977
    8. 'poss' → logprob: -7.710412979125977
    9. '#' → logprob: -7.835412979125977
    10. ' ' → logprob: -8.710412979125977

Token 210: ' chemins' (ID: 192063)
  Prédit: ' états'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' états' → logprob: -0.20273728668689728
    2. 'poss' → logprob: -2.452737331390381
    3. 'ét' → logprob: -3.077737331390381
    4. 'states' → logprob: -4.577737331390381
    5. 'possible' → logprob: -4.702737331390381
    6. 'actions' → logprob: -5.452737331390381
    7. ' possibles' → logprob: -6.077737331390381
    8. ' chemins' → logprob: -6.077737331390381
    9. 'che' → logprob: -6.202737331390381
    10. 'cases' → logprob: -6.452737331390381

Token 211: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10843779891729355
    2. ':' → logprob: -2.3584377765655518
    3. '(' → logprob: -5.733438014984131
    4. ')' → logprob: -6.608438014984131
    5. ':
' → logprob: -6.733438014984131
    6. '(
' → logprob: -7.108438014984131
    7. ':def' → logprob: -8.108437538146973
    8. ',' → logprob: -8.358437538146973
    9. 'import' → logprob: -8.483437538146973
    10. '
' → logprob: -9.108437538146973

Token 212: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019608212634921074
    2. '
' → logprob: -4.394608020782471
    3. '```' → logprob: -6.019608020782471
    4. '\' → logprob: -6.769608020782471
    5. ' 
' → logprob: -7.144608020782471
    6. '(
' → logprob: -7.269608020782471
    7. '_' → logprob: -7.894608020782471
    8. '(' → logprob: -8.019608497619629
    9. 'd' → logprob: -8.644608497619629
    10. 'de' → logprob: -8.769608497619629

Token 213: ' 
' (ID: 793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004260276327840984
    2. 'dfs' → logprob: -9.375426292419434
    3. '\' → logprob: -9.625426292419434
    4. 'from' → logprob: -9.750426292419434
    5. 'import' → logprob: -9.750426292419434
    6. 'dp' → logprob: -9.875426292419434
    7. '
' → logprob: -10.625426292419434
    8. '```' → logprob: -10.625426292419434
    9. '@' → logprob: -11.000426292419434
    10. '(' → logprob: -12.000426292419434

Token 214: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003843173326458782
    2. 'from' → logprob: -8.000384330749512
    3. 'import' → logprob: -10.625384330749512
    4. 'dp' → logprob: -11.500384330749512
    5. 'memo' → logprob: -12.125384330749512
    6. 'visited' → logprob: -13.375384330749512
    7. 'dfs' → logprob: -13.500384330749512
    8. 't' → logprob: -13.500384330749512
    9. 'cache' → logprob: -13.625384330749512
    10. '@' → logprob: -14.125384330749512

Token 215: ' Arguments' (ID: 63373)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005487264133989811
    2. 'from' → logprob: -5.255487442016602
    3. 'import' → logprob: -8.505487442016602
    4. 'dp' → logprob: -11.130487442016602
    5. '@' → logprob: -11.505487442016602
    6. 'memo' → logprob: -11.505487442016602
    7. 'cache' → logprob: -12.130487442016602
    8. 'de' → logprob: -12.880487442016602
    9. ' def' → logprob: -13.255487442016602
    10. 'visited' → logprob: -13.380487442016602

Token 216: ' clés' (ID: 96616)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3245871365070343
    2. ':' → logprob: -1.449587106704712
    3. '(' → logprob: -4.574587345123291
    4. ' :' → logprob: -4.949587345123291
    5. 't' → logprob: -5.199587345123291
    6. '(
' → logprob: -5.574587345123291
    7. '[' → logprob: -5.574587345123291
    8. ')' → logprob: -6.574587345123291
    9. ' (' → logprob: -6.949587345123291
    10. ' def' → logprob: -7.074587345123291

Token 217: ' :
' (ID: 10039)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3930886685848236
    2. ':' → logprob: -1.768088698387146
    3. 't' → logprob: -3.2680885791778564
    4. ' (' → logprob: -3.5180885791778564
    5. '(' → logprob: -3.6430885791778564
    6. ' :' → logprob: -3.7680885791778564
    7. ' def' → logprob: -4.8930888175964355
    8. ' t' → logprob: -5.1430888175964355
    9. '(
' → logprob: -5.3930888175964355
    10. '(t' → logprob: -5.8930888175964355

Token 218: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5330424308776855
    2. 't' → logprob: -1.1580424308776855
    3. 'v' → logprob: -3.7830424308776855
    4. ' def' → logprob: -4.1580424308776855
    5. ' t' → logprob: -4.1580424308776855
    6. '(' → logprob: -5.1580424308776855
    7. 'position' → logprob: -5.2830424308776855
    8. ' (' → logprob: -5.7830424308776855
    9. '#' → logprob: -6.0330424308776855
    10. 'target' → logprob: -6.1580424308776855

Token 219: ' -' (ID: 533)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0775288343429565
    2. 'def' → logprob: -1.0775288343429565
    3. 'position' → logprob: -2.327528953552246
    4. 'v' → logprob: -2.577528953552246
    5. 'pos' → logprob: -3.327528953552246
    6. ' position' → logprob: -3.577528953552246
    7. 'target' → logprob: -4.452528953552246
    8. ' def' → logprob: -4.702528953552246
    9. 'time' → logprob: -4.702528953552246
    10. 'current' → logprob: -4.827528953552246

Token 220: ' pos' (ID: 1253)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05804421007633209
    2. ' t' → logprob: -3.558044195175171
    3. 'def' → logprob: -3.683044195175171
    4. 'target' → logprob: -6.68304443359375
    5. ' def' → logprob: -7.43304443359375
    6. 'from' → logprob: -8.80804443359375
    7. 'time' → logprob: -8.80804443359375
    8. ' target' → logprob: -9.55804443359375
    9. 'sys' → logprob: -9.80804443359375
    10. 'import' → logprob: -9.80804443359375

Token 221: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09595704078674316
    2. '=' → logprob: -3.595957040786743
    3. ')' → logprob: -4.345956802368164
    4. ' :' → logprob: -4.345956802368164
    5. ' ,' → logprob: -4.720956802368164
    6. ' )' → logprob: -4.845956802368164
    7. ',' → logprob: -4.845956802368164
    8. ':' → logprob: -4.845956802368164
    9. ' ' → logprob: -6.595956802368164
    10. ' ):' → logprob: -7.345956802368164

Token 222: ' position' (ID: 4010)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7196343541145325
    2. ' current' → logprob: -1.3446342945098877
    3. 'int' → logprob: -1.5946342945098877
    4. 'pos' → logprob: -4.344634532928467
    5. 'current' → logprob: -4.344634532928467
    6. ' pos' → logprob: -4.469634532928467
    7. ' position' → logprob: -5.344634532928467
    8. ' ' → logprob: -5.594634532928467
    9. 'position' → logprob: -6.594634532928467
    10. '0' → logprob: -6.844634532928467

Token 223: ' actuelle' (ID: 104951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.58458411693573
    2. ',' → logprob: -2.4595842361450195
    3. '+' → logprob: -2.5845842361450195
    4. ' +' → logprob: -2.9595842361450195
    5. '<|end|>' → logprob: -2.9595842361450195
    6. '_' → logprob: -3.0845842361450195
    7. ' )' → logprob: -3.4595842361450195
    8. ' ' → logprob: -3.9595842361450195
    9. ' =' → logprob: -4.0845842361450195
    10. ' ,' → logprob: -4.3345842361450195

Token 224: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13571763038635254
    2. ',' → logprob: -2.8857176303863525
    3. ')' → logprob: -3.7607176303863525
    4. '_
' → logprob: -4.135717391967773
    5. '<|end|>' → logprob: -4.260717391967773
    6. ' _' → logprob: -5.635717391967773
    7. '_next' → logprob: -6.260717391967773
    8. ',
' → logprob: -6.510717391967773
    9. '<|end|>' → logprob: -6.635717391967773
    10. ' (' → logprob: -6.760717391967773

Token 225: ' secondes' (ID: 109098)
  Prédit: 'mill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mill' → logprob: -0.3800995647907257
    2. 'ms' → logprob: -2.0050995349884033
    3. ' mill' → logprob: -2.0050995349884033
    4. 'milliseconds' → logprob: -3.5050995349884033
    5. ' milliseconds' → logprob: -5.005099773406982
    6. 'vid' → logprob: -6.380099773406982
    7. 'video' → logprob: -6.380099773406982
    8. ' ms' → logprob: -7.005099773406982
    9. ' video' → logprob: -7.005099773406982
    10. 'int' → logprob: -7.005099773406982

Token 226: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43103429675102234
    2. ',
' → logprob: -1.9310343265533447
    3. 'def' → logprob: -2.9310343265533447
    4. ' =' → logprob: -3.4310343265533447
    5. ' (' → logprob: -3.4310343265533447
    6. ')' → logprob: -3.6810343265533447
    7. ' ,' → logprob: -4.556034088134766
    8. '\' → logprob: -4.806034088134766
    9. '#' → logprob: -5.056034088134766
    10. '
' → logprob: -5.306034088134766

Token 227: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3410252034664154
    2. 'la' → logprob: -1.3410252332687378
    3. 'pos' → logprob: -4.466025352478027
    4. 'le' → logprob: -4.591025352478027
    5. ' le' → logprob: -6.341025352478027
    6. 'vid' → logprob: -7.216025352478027
    7. 'l' → logprob: -7.466025352478027
    8. 'video' → logprob: -7.466025352478027
    9. ' pos' → logprob: -7.966025352478027
    10. ' video' → logprob: -8.091025352478027

Token 228: ' vidéo' (ID: 42292)
  Prédit: 'vid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vid' → logprob: -0.2368870973587036
    2. ' vidéo' → logprob: -1.7368870973587036
    3. 'video' → logprob: -3.611886978149414
    4. ' video' → logprob: -5.361886978149414
    5. ' vid' → logprob: -6.236886978149414
    6. ' code' → logprob: -8.111886978149414
    7. 'code' → logprob: -8.236886978149414
    8. 'vide' → logprob: -8.486886978149414
    9. '#' → logprob: -9.236886978149414
    10. 'lecture' → logprob: -9.861886978149414

Token 229: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8708376288414001
    2. ',
' → logprob: -1.745837688446045
    3. '#' → logprob: -1.995837688446045
    4. 'def' → logprob: -1.995837688446045
    5. ')' → logprob: -2.870837688446045
    6. '
' → logprob: -3.620837688446045
    7. ':' → logprob: -5.120837688446045
    8. ' (' → logprob: -5.120837688446045
    9. ' #' → logprob: -5.745837688446045
    10. '<|end|>' → logprob: -5.745837688446045

Token 230: 'float' (ID: 7829)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02314182184636593
    2. ',' → logprob: -4.273141860961914
    3. ' )' → logprob: -4.898141860961914
    4. ' ,' → logprob: -7.898141860961914
    5. ')
' → logprob: -8.023141860961914
    6. '),' → logprob: -8.898141860961914
    7. 'pos' → logprob: -9.273141860961914
    8. ',
' → logprob: -9.773141860961914
    9. 'int' → logprob: -9.898141860961914
    10. ' ' → logprob: -9.898141860961914

Token 231: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00238242675550282
    2. ' )' → logprob: -6.127382278442383
    3. ',' → logprob: -9.377382278442383
    4. ')
' → logprob: -10.252382278442383
    5. '),' → logprob: -11.377382278442383
    6. '):' → logprob: -11.627382278442383
    7. '[' → logprob: -12.002382278442383
    8. '')' → logprob: -12.002382278442383
    9. ' ' → logprob: -12.502382278442383
    10. ',
' → logprob: -12.502382278442383

Token 232: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01640581712126732
    2. ' int' → logprob: -4.1414055824279785
    3. ')' → logprob: -8.266406059265137
    4. 'None' → logprob: -10.266406059265137
    5. 'float' → logprob: -10.391406059265137
    6. ''int' → logprob: -10.891406059265137
    7. ' None' → logprob: -11.266406059265137
    8. '[int' → logprob: -12.266406059265137
    9. ' float' → logprob: -13.141406059265137
    10. '<int' → logprob: -13.516406059265137

Token 233: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016300749266520143
    2. ')
' → logprob: -7.0016303062438965
    3. '):' → logprob: -7.7516303062438965
    4. '):
' → logprob: -9.126629829406738
    5. '),' → logprob: -9.876629829406738
    6. ',' → logprob: -10.001629829406738
    7. ' )' → logprob: -10.001629829406738
    8. ':' → logprob: -12.001629829406738
    9. ').' → logprob: -12.501629829406738
    10. ')

' → logprob: -12.751629829406738

Token 234: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3999943733215332
    2. 'def' → logprob: -1.8999943733215332
    3. ',' → logprob: -2.774994373321533
    4. '-' → logprob: -3.149994373321533
    5. ',
' → logprob: -3.774994373321533
    6. ' -' → logprob: -3.899994373321533
    7. '
' → logprob: -4.149994373321533
    8. '\' → logprob: -5.774994373321533
    9. ' #' → logprob: -5.774994373321533
    10. ')' → logprob: -6.524994373321533

Token 235: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18781986832618713
    2. ',' → logprob: -2.9378199577331543
    3. '#' → logprob: -3.3128199577331543
    4. 'v' → logprob: -4.062819957733154
    5. ' def' → logprob: -4.437819957733154
    6. ')' → logprob: -4.437819957733154
    7. ' #' → logprob: -4.562819957733154
    8. ',
' → logprob: -4.687819957733154
    9. ' -' → logprob: -5.937819957733154
    10. ' v' → logprob: -6.062819957733154

Token 236: ' speed' (ID: 7733)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.41239529848098755
    2. 'speed' → logprob: -2.2873952388763428
    3. 'time' → logprob: -3.4123952388763428
    4. ' speed' → logprob: -3.5373952388763428
    5. 'max' → logprob: -3.7873952388763428
    6. 'pos' → logprob: -3.9123952388763428
    7. 'current' → logprob: -3.9123952388763428
    8. ' v' → logprob: -4.162395477294922
    9. 'visited' → logprob: -4.662395477294922
    10. ' vitesse' → logprob: -4.662395477294922

Token 237: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8195053339004517
    2. ':' → logprob: -1.0695053339004517
    3. ',' → logprob: -2.569505214691162
    4. ' :' → logprob: -2.819505214691162
    5. '):' → logprob: -3.194505214691162
    6. '=' → logprob: -4.069505214691162
    7. ')' → logprob: -4.194505214691162
    8. ' ,' → logprob: -5.944505214691162
    9. ' ' → logprob: -6.944505214691162
    10. '):
' → logprob: -7.194505214691162

Token 238: ' vitesse' (ID: 71752)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04290110245347023
    2. 'float' → logprob: -3.917901039123535
    3. ' int' → logprob: -4.042901039123535
    4. 'current' → logprob: -5.917901039123535
    5. ' float' → logprob: -6.792901039123535
    6. ' current' → logprob: -7.292901039123535
    7. 'speed' → logprob: -11.542901039123535
    8. '1' → logprob: -11.667901039123535
    9. 'str' → logprob: -11.917901039123535
    10. ' ' → logprob: -11.917901039123535

Token 239: ' actuelle' (ID: 104951)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5212538242340088
    2. ')' → logprob: -1.8962538242340088
    3. '<|end|>' → logprob: -2.521253824234009
    4. 'def' → logprob: -2.646253824234009
    5. ':' → logprob: -3.271253824234009
    6. ',' → logprob: -3.771253824234009
    7. '\' → logprob: -4.39625358581543
    8. '<|end|>' → logprob: -5.27125358581543
    9. '=' → logprob: -5.39625358581543
    10. '_
' → logprob: -5.39625358581543

Token 241: 'uni' (ID: 6500)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.015664424747228622
    2. ')' → logprob: -4.765664577484131
    3. ' int' → logprob: -5.265664577484131
    4. 'float' → logprob: -6.390664577484131
    5. ',int' → logprob: -10.015664100646973
    6. ' float' → logprob: -10.765664100646973
    7. ':int' → logprob: -10.765664100646973
    8. ' )' → logprob: -11.015664100646973
    9. '[int' → logprob: -11.015664100646973
    10. ',' → logprob: -11.265664100646973

Token 242: 'quement' (ID: 42437)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0005931860650889575
    2. 'ts' → logprob: -8.000593185424805
    3. 'nt' → logprob: -8.875593185424805
    4. 'q' → logprob: -9.875593185424805
    5. 'n' → logprob: -11.500593185424805
    6. ' t' → logprob: -11.625593185424805
    7. '=' → logprob: -11.625593185424805
    8. 'token' → logprob: -11.750593185424805
    9. 'que' → logprob: -12.125593185424805
    10. ')' → logprob: -12.625593185424805

Token 243: ' puissance' (ID: 63494)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7543483376502991
    2. ' int' → logprob: -0.7543483376502991
    3. '1' → logprob: -3.5043482780456543
    4. '=int' → logprob: -4.754348278045654
    5. ')' → logprob: -5.254348278045654
    6. '=' → logprob: -5.879348278045654
    7. '[int' → logprob: -6.129348278045654
    8. ' ' → logprob: -6.379348278045654
    9. '3' → logprob: -6.504348278045654
    10. '{' → logprob: -6.629348278045654

Token 244: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.19810254871845245
    2. '3' → logprob: -2.1981024742126465
    3. 'de' → logprob: -3.9481024742126465
    4. ')' → logprob: -4.8231024742126465
    5. ' ' → logprob: -5.0731024742126465
    6. ' of' → logprob: -5.1981024742126465
    7. '_of' → logprob: -5.1981024742126465
    8. '_' → logprob: -5.5731024742126465
    9. 'of' → logprob: -5.5731024742126465
    10. '_de' → logprob: -5.5731024742126465

Token 245: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004488038830459118
    2. ' ' → logprob: -5.504487991333008
    3. '-' → logprob: -8.004487991333008
    4. ' trois' → logprob: -11.004487991333008
    5. '```' → logprob: -11.004487991333008
    6. ' ' → logprob: -11.254487991333008
    7. '  ' → logprob: -12.504487991333008
    8. ' -' → logprob: -12.504487991333008
    9. '   ' → logprob: -12.629487991333008
    10. '2' → logprob: -12.754487991333008

Token 246: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0006171276327222586
    2. '-' → logprob: -7.500617027282715
    3. ' ' → logprob: -9.875617027282715
    4. '```' → logprob: -12.000617027282715
    5. 'tro' → logprob: -13.500617027282715
    6. ' trois' → logprob: -13.750617027282715
    7. 't' → logprob: -14.125617027282715
    8. 'three' → logprob: -14.375617027282715
    9. 'int' → logprob: -15.125617027282715
    10. '   ' → logprob: -15.125617027282715

Token 247: '^' (ID: 61)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018567692022770643
    2. '[' → logprob: -7.251856803894043
    3. '**' → logprob: -8.001856803894043
    4. ',' → logprob: -8.751856803894043
    5. '*' → logprob: -9.626856803894043
    6. '`)' → logprob: -9.876856803894043
    7. ' )' → logprob: -9.876856803894043
    8. '```' → logprob: -10.001856803894043
    9. '^)' → logprob: -10.376856803894043
    10. '^' → logprob: -10.376856803894043

Token 248: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6063545942306519
    2. '-' → logprob: -1.2313545942306519
    3. ' -' → logprob: -2.2313547134399414
    4. '1' → logprob: -3.9813547134399414
    5. ' )' → logprob: -4.356354713439941
    6. ' ' → logprob: -4.856354713439941
    7. '0' → logprob: -5.356354713439941
    8. ' ' → logprob: -5.856354713439941
    9. '```' → logprob: -7.106354713439941
    10. '+' → logprob: -7.106354713439941

Token 249: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028410146478563547
    2. ' )' → logprob: -7.002840995788574
    3. '**' → logprob: -7.877840995788574
    4. ',' → logprob: -8.127840995788574
    5. '+' → logprob: -8.877840995788574
    6. '),' → logprob: -9.127840995788574
    7. '*' → logprob: -9.252840995788574
    8. '<|end|>' → logprob: -9.377840995788574
    9. '**)' → logprob: -9.752840995788574
    10. '`)' → logprob: -9.752840995788574

Token 250: ' avec' (ID: 3937)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03972487896680832
    2. ' )' → logprob: -3.539724826812744
    3. ' n' → logprob: -5.414724826812744
    4. ',' → logprob: -6.789724826812744
    5. ' ' → logprob: -7.039724826812744
    6. '#' → logprob: -7.289724826812744
    7. 'n' → logprob: -7.664724826812744
    8. ' ' → logprob: -8.039725303649902
    9. ' pos' → logprob: -8.039725303649902
    10. ' ,' → logprob: -8.289725303649902

Token 251: ' n' (ID: 297)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.18925723433494568
    2. 'n' → logprob: -2.3142571449279785
    3. ' n' → logprob: -3.8142571449279785
    4. ' int' → logprob: -4.3142571449279785
    5. 'abs' → logprob: -4.9392571449279785
    6. '-' → logprob: -5.3142571449279785
    7. '1' → logprob: -5.4392571449279785
    8. ')' → logprob: -5.5642571449279785
    9. 'type' → logprob: -5.6892571449279785
    10. '3' → logprob: -5.6892571449279785

Token 252: ' entier' (ID: 80473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05184996873140335
    2. ')' → logprob: -3.3018500804901123
    3. ' =' → logprob: -5.426849842071533
    4. '=-' → logprob: -5.426849842071533
    5. '**' → logprob: -6.551849842071533
    6. '+' → logprob: -6.801849842071533
    7. '-' → logprob: -8.051850318908691
    8. ',' → logprob: -8.176850318908691
    9. '```' → logprob: -8.926850318908691
    10. '[-' → logprob: -9.051850318908691

Token 253: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009190816199406981
    2. ' )' → logprob: -8.000919342041016
    3. ',' → logprob: -9.250919342041016
    4. '*)' → logprob: -9.500919342041016
    5. '+)' → logprob: -10.125919342041016
    6. '**' → logprob: -10.500919342041016
    7. ')**' → logprob: -10.625919342041016
    8. '+' → logprob: -10.750919342041016
    9. ')n' → logprob: -10.750919342041016
    10. '**)' → logprob: -10.750919342041016

Token 254: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07038229703903198
    2. ':' → logprob: -3.5703823566436768
    3. ')' → logprob: -3.9453823566436768
    4. ',' → logprob: -4.945382118225098
    5. '_' → logprob: -5.445382118225098
    6. '
' → logprob: -6.195382118225098
    7. '\' → logprob: -6.945382118225098
    8. ',
' → logprob: -6.945382118225098
    9. '_
' → logprob: -7.070382118225098
    10. 'import' → logprob: -7.320382118225098

Token 255: ' 
' (ID: 793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0900387316942215
    2. ')' → logprob: -3.715038776397705
    3. '
' → logprob: -3.965038776397705
    4. '_' → logprob: -4.590038776397705
    5. ',' → logprob: -5.090038776397705
    6. ',
' → logprob: -5.215038776397705
    7. ':' → logprob: -5.590038776397705
    8. '\' → logprob: -5.715038776397705
    9. '(
' → logprob: -6.215038776397705
    10. '_
' → logprob: -6.215038776397705

Token 256: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003594184236135334
    2. 'from' → logprob: -8.250359535217285
    3. 'import' → logprob: -9.500359535217285
    4. 'dp' → logprob: -12.375359535217285
    5. '@' → logprob: -12.750359535217285
    6. '```' → logprob: -12.750359535217285
    7. '\' → logprob: -12.875359535217285
    8. '
' → logprob: -12.875359535217285
    9. ' def' → logprob: -13.375359535217285
    10. 'dfs' → logprob: -13.500359535217285

Token 257: ' Object' (ID: 4677)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0035751264076679945
    2. 'from' → logprob: -5.753575325012207
    3. 'import' → logprob: -8.128575325012207
    4. '@' → logprob: -9.753575325012207
    5. ')' → logprob: -10.878575325012207
    6. 'memo' → logprob: -12.003575325012207
    7. 'dp' → logprob: -12.003575325012207
    8. '#' → logprob: -12.753575325012207
    9. 'de' → logprob: -13.003575325012207
    10. 'cache' → logprob: -13.253575325012207

Token 258: 'if' (ID: 366)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15643468499183655
    2. '.' → logprob: -2.4064347743988037
    3. ')' → logprob: -4.531434535980225
    4. '
' → logprob: -4.781434535980225
    5. '=' → logprob: -5.406434535980225
    6. ''' → logprob: -5.406434535980225
    7. 'def' → logprob: -5.406434535980225
    8. '[' → logprob: -5.531434535980225
    9. '```' → logprob: -5.781434535980225
    10. ' =' → logprob: -6.281434535980225

Token 259: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11157631874084473
    2. ' =' → logprob: -3.1115763187408447
    3. '=' → logprob: -3.2365763187408447
    4. ' :' → logprob: -4.611576080322266
    5. ' est' → logprob: -4.861576080322266
    6. '_' → logprob: -7.111576080322266
    7. 'def' → logprob: -7.361576080322266
    8. '_est' → logprob: -7.361576080322266
    9. 'est' → logprob: -7.486576080322266
    10. ':
' → logprob: -7.486576080322266

Token 260: ' atteindre' (ID: 95734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007481802720576525
    2. 'min' → logprob: -5.757481575012207
    3. 'return' → logprob: -6.257481575012207
    4. ' def' → logprob: -7.382481575012207
    5. '#' → logprob: -7.632481575012207
    6. 'find' → logprob: -7.882481575012207
    7. 'import' → logprob: -8.257481575012207
    8. 'dé' → logprob: -9.007481575012207
    9. '
' → logprob: -9.132481575012207
    10. ' trouver' → logprob: -9.382481575012207

Token 261: ' pos' (ID: 1253)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3251919448375702
    2. ' t' → logprob: -1.4501919746398926
    3. 'pos' → logprob: -3.4501919746398926
    4. ' la' → logprob: -5.325191974639893
    5. 'target' → logprob: -6.075191974639893
    6. 'la' → logprob: -6.575191974639893
    7. ' le' → logprob: -7.200191974639893
    8. ' pos' → logprob: -7.200191974639893
    9. 'le' → logprob: -7.200191974639893
    10. ' target' → logprob: -8.700191497802734

Token 262: ' ==' (ID: 951)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9798026084899902
    2. '<|end|>' → logprob: -1.2298026084899902
    3. '+' → logprob: -2.1048026084899902
    4. '_next' → logprob: -2.8548026084899902
    5. ' +' → logprob: -4.22980260848999
    6. '_target' → logprob: -4.22980260848999
    7. '==' → logprob: -4.60480260848999
    8. '>=' → logprob: -4.60480260848999
    9. 't' → logprob: -4.60480260848999
    10. '=' → logprob: -4.72980260848999

Token 263: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1797572672367096
    2. ' t' → logprob: -1.8047572374343872
    3. ' ' → logprob: -12.554757118225098
    4. '`t' → logprob: -12.679757118225098
    5. ' ' → logprob: -13.304757118225098
    6. '   ' → logprob: -13.679757118225098
    7. '_t' → logprob: -14.804757118225098
    8. 'target' → logprob: -14.929757118225098
    9. ' sys' → logprob: -15.179757118225098
    10. 'int' → logprob: -15.179757118225098

Token 264: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1649310290813446
    2. 'def' → logprob: -2.289931058883667
    3. '(' → logprob: -3.664931058883667
    4. ':
' → logprob: -5.164930820465088
    5. '(
' → logprob: -5.664930820465088
    6. '```' → logprob: -5.914930820465088
    7. ':def' → logprob: -6.039930820465088
    8. ')' → logprob: -6.039930820465088
    9. ',' → logprob: -6.289930820465088
    10. '):' → logprob: -6.789930820465088

Token 265: 'la' (ID: 1675)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05024413764476776
    2. ' )' → logprob: -3.050244092941284
    3. ' ' → logprob: -7.425244331359863
    4. '_' → logprob: -8.800244331359863
    5. ':' → logprob: -9.300244331359863
    6. ' ' → logprob: -9.425244331359863
    7. 't' → logprob: -9.550244331359863
    8. 'int' → logprob: -9.550244331359863
    9. ').' → logprob: -9.675244331359863
    10. ',' → logprob: -9.925244331359863

Token 266: ' position' (ID: 4010)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9441051483154297
    2. ' )' → logprob: -1.0691051483154297
    3. ' ' → logprob: -2.1941051483154297
    4. '_' → logprob: -2.3191051483154297
    5. ' ' → logprob: -3.6941051483154297
    6. 'r' → logprob: -5.19410514831543
    7. ' space' → logprob: -5.44410514831543
    8. ''' → logprob: -5.44410514831543
    9. 'space' → logprob: -5.56910514831543
    10. ' _' → logprob: -5.69410514831543

Token 267: ' souhait' (ID: 45344)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5480170249938965
    2. ')' → logprob: -1.2980170249938965
    3. ' +' → logprob: -3.0480170249938965
    4. '+' → logprob: -3.1730170249938965
    5. ' finale' → logprob: -4.6730170249938965
    6. '_final' → logprob: -4.7980170249938965
    7. 'final' → logprob: -4.9230170249938965
    8. ' suivante' → logprob: -4.9230170249938965
    9. '_target' → logprob: -5.4230170249938965
    10. '_c' → logprob: -5.7980170249938965

Token 268: 'ée' (ID: 2894)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018656468018889427
    2. '_' → logprob: -4.893656253814697
    3. 'u' → logprob: -5.893656253814697
    4. '=' → logprob: -6.268656253814697
    5. ' )' → logprob: -7.143656253814697
    6. ')_' → logprob: -7.143656253814697
    7. 'e' → logprob: -7.518656253814697
    8. ' ' → logprob: -7.768656253814697
    9. ']' → logprob: -8.018656730651855
    10. '```' → logprob: -8.143656730651855

Token 269: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07387479394674301
    2. ' )' → logprob: -2.6988747119903564
    3. ',' → logprob: -6.6988749504089355
    4. ')
' → logprob: -8.448874473571777
    5. ' ' → logprob: -8.573874473571777
    6. '),' → logprob: -8.698874473571777
    7. ').' → logprob: -8.698874473571777
    8. '.' → logprob: -8.698874473571777
    9. '
' → logprob: -8.948874473571777
    10. '):' → logprob: -9.198874473571777

Token 270: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5573005676269531
    2. '#' → logprob: -1.9323005676269531
    3. 'def' → logprob: -2.057300567626953
    4. ')' → logprob: -2.432300567626953
    5. ' \' → logprob: -2.682300567626953
    6. '\n' → logprob: -2.682300567626953
    7. ' ' → logprob: -3.057300567626953
    8. ' #' → logprob: -3.182300567626953
    9. '   ' → logprob: -3.432300567626953
    10. ' :' → logprob: -3.682300567626953

Token 271: ' en' (ID: 469)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05527196452021599
    2. ' #' → logprob: -3.180271863937378
    3. 'def' → logprob: -5.055272102355957
    4. ')' → logprob: -6.680272102355957
    5. 'et' → logprob: -7.555272102355957
    6. 'pos' → logprob: -7.680272102355957
    7. ',' → logprob: -7.680272102355957
    8. ' pos' → logprob: -8.555272102355957
    9. ' en' → logprob: -8.555272102355957
    10. 't' → logprob: -8.805272102355957

Token 272: ' ayant' (ID: 45436)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9146591424942017
    2. 'app' → logprob: -1.0396591424942017
    3. ' app' → logprob: -2.914659023284912
    4. ' minim' → logprob: -3.414659023284912
    5. 'util' → logprob: -4.414659023284912
    6. 'augment' → logprob: -4.414659023284912
    7. 'optim' → logprob: -4.539659023284912
    8. ' essay' → logprob: -4.664659023284912
    9. ' utilisant' → logprob: -4.789659023284912
    10. 'continu' → logprob: -5.164659023284912

Token 273: ' la' (ID: 557)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.6990833878517151
    2. 'un' → logprob: -2.1990833282470703
    3. 'pos' → logprob: -2.3240833282470703
    4. ' une' → logprob: -3.3240833282470703
    5. 'la' → logprob: -3.4490833282470703
    6. 'min' → logprob: -3.4490833282470703
    7. 'au' → logprob: -3.4490833282470703
    8. 'le' → logprob: -4.07408332824707
    9. ' un' → logprob: -4.32408332824707
    10. 'tout' → logprob: -4.32408332824707

Token 274: ' position' (ID: 4010)
  Prédit: ' même'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.20887315273284912
    2. 'temps' → logprob: -2.8338732719421387
    3. 'v' → logprob: -4.458873271942139
    4. 'me' → logprob: -4.833873271942139
    5. ' temps' → logprob: -4.833873271942139
    6. ' meilleure' → logprob: -4.833873271942139
    7. ' vitesse' → logprob: -4.958873271942139
    8. ' meilleur' → logprob: -5.083873271942139
    9. 'm' → logprob: -5.083873271942139
    10. ' limite' → logprob: -5.083873271942139

Token 275: ' normale' (ID: 57494)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.1670037508010864
    2. ' suivante' → logprob: -1.6670037508010864
    3. ' ==' → logprob: -2.042003631591797
    4. ' +=' → logprob: -2.542003631591797
    5. ' <=' → logprob: -2.792003631591797
    6. '==' → logprob: -3.042003631591797
    7. '>=' → logprob: -3.167003631591797
    8. '+' → logprob: -3.292003631591797
    9. ' +' → logprob: -4.292003631591797
    10. ' =' → logprob: -4.542003631591797

Token 276: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18848279118537903
    2. '```' → logprob: -3.6884827613830566
    3. ' _' → logprob: -3.8134827613830566
    4. ')' → logprob: -3.8134827613830566
    5. '_t' → logprob: -4.313482761383057
    6. 't' → logprob: -4.438482761383057
    7. 'def' → logprob: -4.438482761383057
    8. ' =' → logprob: -4.688482761383057
    9. '
' → logprob: -4.813482761383057
    10. '=' → logprob: -5.063482761383057

Token 277: ' lecture' (ID: 31993)
  Prédit: ' lecture'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lecture' → logprob: -0.6848124861717224
    2. 'lecture' → logprob: -1.0598125457763672
    3. 'la' → logprob: -2.809812545776367
    4. 't' → logprob: -3.184812545776367
    5. ' la' → logprob: -3.434812545776367
    6. 'pos' → logprob: -4.684812545776367
    7. 'l' → logprob: -6.434812545776367
    8. ' t' → logprob: -6.684812545776367
    9. 'Lecture' → logprob: -7.309812545776367
    10. 'vid' → logprob: -7.684812545776367

Token 278: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025820041075348854
    2. 't' → logprob: -4.150820255279541
    3. '_' → logprob: -5.525820255279541
    4. ')' → logprob: -6.900820255279541
    5. '```' → logprob: -6.900820255279541
    6. '_t' → logprob: -7.025820255279541
    7. ':' → logprob: -7.150820255279541
    8. ',' → logprob: -8.275819778442383
    9. '#' → logprob: -8.275819778442383
    10. '\' → logprob: -8.400819778442383

Token 279: ' i' (ID: 575)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.727394938468933
    2. '<|end|>' → logprob: -1.977394938468933
    3. '#' → logprob: -2.1023950576782227
    4. '.' → logprob: -2.3523950576782227
    5. ',' → logprob: -2.7273950576782227
    6. ' #' → logprob: -2.9773950576782227
    7. ' ' → logprob: -3.2273950576782227
    8. ' 
' → logprob: -3.4773950576782227
    9. ' ' → logprob: -3.4773950576782227
    10. ' not' → logprob: -3.6023950576782227

Token 280: '.e' (ID: 2560)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2764385938644409
    2. 'm' → logprob: -2.2764387130737305
    3. '=' → logprob: -2.7764387130737305
    4. 't' → logprob: -3.2764387130737305
    5. 'nt' → logprob: -4.2764387130737305
    6. 's' → logprob: -5.1514387130737305
    7. 'mp' → logprob: -5.5264387130737305
    8. '#' → logprob: -6.1514387130737305
    9. 'gnore' → logprob: -6.2764387130737305
    10. 'nd' → logprob: -6.4014387130737305

Token 281: ' vitesse' (ID: 71752)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38275250792503357
    2. ' =' → logprob: -2.0077524185180664
    3. ' ==' → logprob: -2.6327524185180664
    4. '==' → logprob: -3.1327524185180664
    5. ''' → logprob: -3.2577524185180664
    6. 'e' → logprob: -4.257752418518066
    7. ' ' → logprob: -6.507752418518066
    8. '`' → logprob: -6.507752418518066
    9. ' ég' → logprob: -6.632752418518066
    10. '='' → logprob: -7.132752418518066

Token 282: ' ==' (ID: 951)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.027402210980653763
    2. ')' → logprob: -5.402402400970459
    3. '=' → logprob: -5.402402400970459
    4. 'def' → logprob: -5.777402400970459
    5. ' _' → logprob: -5.902402400970459
    6. ':' → logprob: -6.152402400970459
    7. '```' → logprob: -6.402402400970459
    8. '_normal' → logprob: -6.652402400970459
    9. ' =' → logprob: -6.902402400970459
    10. ',' → logprob: -7.402402400970459

Token 283: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003361774142831564
    2. ' ' → logprob: -8.000336647033691
    3. '```' → logprob: -15.000336647033691
    4. '`' → logprob: -16.000335693359375
    5. '0' → logprob: -16.375335693359375
    6. '3' → logprob: -16.375335693359375
    7. ' ' → logprob: -16.375335693359375
    8. '   ' → logprob: -17.000335693359375
    9. '  ' → logprob: -17.750335693359375
    10. 'normal' → logprob: -18.187835693359375

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.000017166137695
    3. '3' → logprob: -15.750017166137695
    4. '```' → logprob: -17.000017166137695
    5. '`' → logprob: -17.375017166137695
    6. '   ' → logprob: -17.500017166137695
    7. '{' → logprob: -18.250017166137695
    8. '(' → logprob: -18.312517166137695
    9. '0' → logprob: -18.500017166137695
    10. '
' → logprob: -18.625017166137695

Token 285: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6500679850578308
    2. ':' → logprob: -1.5250680446624756
    3. ')' → logprob: -2.7750680446624756
    4. ',' → logprob: -3.1500680446624756
    5. '_' → logprob: -3.2750680446624756
    6. '\' → logprob: -3.2750680446624756
    7. '(' → logprob: -4.0250678062438965
    8. '
' → logprob: -4.4000678062438965
    9. '(
' → logprob: -5.0250678062438965
    10. '```' → logprob: -5.0250678062438965

Token 286: 'v' (ID: 85)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010582479648292065
    2. ').' → logprob: -5.135582447052002
    3. ')
' → logprob: -6.510582447052002
    4. ' )' → logprob: -6.760582447052002
    5. '),' → logprob: -7.760582447052002
    6. 'x' → logprob: -8.13558292388916
    7. ',' → logprob: -8.38558292388916
    8. '0' → logprob: -8.63558292388916
    9. '.' → logprob: -9.13558292388916
    10. ')t' → logprob: -9.38558292388916

Token 287: 'itesse' (ID: 58831)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05239662155508995
    2. ')' → logprob: -3.302396535873413
    3. '**' → logprob: -4.927396774291992
    4. '0' → logprob: -5.677396774291992
    5. '=' → logprob: -6.927396774291992
    6. '^' → logprob: -7.302396774291992
    7. '*' → logprob: -8.052396774291992
    8. 'e' → logprob: -8.177396774291992
    9. 'u' → logprob: -8.427396774291992
    10. 't' → logprob: -8.802396774291992

Token 288: ' normale' (ID: 57494)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5566800236701965
    2. ' )' → logprob: -1.1816799640655518
    3. ' ==' → logprob: -2.4316799640655518
    4. '==' → logprob: -4.556680202484131
    5. ' normale' → logprob: -5.431680202484131
    6. ' =' → logprob: -6.056680202484131
    7. ' ),' → logprob: -6.181680202484131
    8. '=' → logprob: -6.556680202484131
    9. ' ' → logprob: -6.931680202484131
    10. '_' → logprob: -7.056680202484131

Token 289: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016821451485157013
    2. '):' → logprob: -4.391821384429932
    3. ').' → logprob: -6.891821384429932
    4. ')
' → logprob: -6.891821384429932
    5. '):
' → logprob: -7.141821384429932
    6. '),' → logprob: -7.516821384429932
    7. '```' → logprob: -9.01682186126709
    8. '_' → logprob: -9.26682186126709
    9. ' )' → logprob: -9.26682186126709
    10. ':' → logprob: -9.39182186126709

Token 290: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.924959123134613
    2. ')' → logprob: -1.4249591827392578
    3. 'def' → logprob: -2.799959182739258
    4. ' #' → logprob: -3.049959182739258
    5. 't' → logprob: -3.174959182739258
    6. '\' → logprob: -3.674959182739258
    7. ''' → logprob: -3.924959182739258
    8. ':' → logprob: -4.174959182739258
    9. '\n' → logprob: -4.174959182739258
    10. ' 
' → logprob: -4.424959182739258

Token 291: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3273095488548279
    2. '#' → logprob: -1.3273096084594727
    3. 't' → logprob: -5.452309608459473
    4. ' #' → logprob: -6.327309608459473
    5. '#
' → logprob: -6.577309608459473
    6. ',' → logprob: -6.702309608459473
    7. ' def' → logprob: -6.827309608459473
    8. ',
' → logprob: -7.202309608459473
    9. '
' → logprob: -7.327309608459473
    10. 'et' → logprob: -7.952309608459473

Token 292: ' minim' (ID: 23874)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.2082595825195312
    2. 'pos' → logprob: -1.9582595825195312
    3. 'ret' → logprob: -2.5832595825195312
    4. 'continu' → logprob: -2.7082595825195312
    5. ' return' → logprob: -2.9582595825195312
    6. 'min' → logprob: -3.2082595825195312
    7. ' pos' → logprob: -3.3332595825195312
    8. 'temps' → logprob: -3.4582595825195312
    9. '
' → logprob: -3.7082595825195312
    10. ' continu' → logprob: -4.083259582519531

Token 293: 'isant' (ID: 56111)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.7748007774353027
    2. 'ze' → logprob: -1.7748007774353027
    3. 'z' → logprob: -2.2748007774353027
    4. 'ser' → logprob: -2.3998007774353027
    5. 's' → logprob: -2.7748007774353027
    6. 'iser' → logprob: -3.0248007774353027
    7. 'a' → logprob: -3.1498007774353027
    8. '#' → logprob: -3.1498007774353027
    9. '```' → logprob: -3.1498007774353027
    10. 'er' → logprob: -3.5248007774353027

Token 294: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.05048682540655136
    2. 'le' → logprob: -3.0504868030548096
    3. ' l' → logprob: -6.925487041473389
    4. '_le' → logprob: -8.05048656463623
    5. 'l' → logprob: -8.42548656463623
    6. ' ' → logprob: -8.80048656463623
    7. ' la' → logprob: -9.17548656463623
    8. ' total' → logprob: -10.67548656463623
    9. '_' → logprob: -10.92548656463623
    10. ' ' → logprob: -11.05048656463623

Token 295: ' durée' (ID: 57595)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.6000673770904541
    2. ' temps' → logprob: -0.8500673770904541
    3. ' total' → logprob: -4.350067138671875
    4. 'total' → logprob: -6.100067138671875
    5. ' time' → logprob: -6.225067138671875
    6. 'time' → logprob: -6.850067138671875
    7. 'tem' → logprob: -6.975067138671875
    8. ' ' → logprob: -6.975067138671875
    9. 'temp' → logprob: -7.100067138671875
    10. ' t' → logprob: -7.475067138671875

Token 296: ' éc' (ID: 44439)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34579533338546753
    2. '_' → logprob: -1.5957953929901123
    3. ':' → logprob: -3.3457953929901123
    4. ')' → logprob: -4.345795154571533
    5. ',' → logprob: -4.720795154571533
    6. '(' → logprob: -5.095795154571533
    7. '```' → logprob: -5.220795154571533
    8. ' def' → logprob: -5.970795154571533
    9. '
' → logprob: -5.970795154571533
    10. '\' → logprob: -6.095795154571533

Token 297: 'oul' (ID: 9826)
  Prédit: 'oul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oul' → logprob: -0.023088587448000908
    2. 'c' → logprob: -4.898088455200195
    3. 'oule' → logprob: -5.648088455200195
    4. 'al' → logprob: -5.898088455200195
    5. 'ou' → logprob: -6.398088455200195
    6. 'o' → logprob: -6.898088455200195
    7. 'r' → logprob: -7.023088455200195
    8. 'ul' → logprob: -7.148088455200195
    9. 'lée' → logprob: -7.148088455200195
    10. 'l' → logprob: -7.273088455200195

Token 298: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.014753800816833973
    2. 'é' → logprob: -4.639753818511963
    3. 'e' → logprob: -5.389753818511963
    4. 'ee' → logprob: -8.139753341674805
    5. 'ue' → logprob: -10.639753341674805
    6. 'ed' → logprob: -10.889753341674805
    7. 'lée' → logprob: -11.514753341674805
    8. 'rée' → logprob: -11.639753341674805
    9. '#' → logprob: -12.014753341674805
    10. '**' → logprob: -12.014753341674805

Token 299: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08049143105745316
    2. ':' → logprob: -3.455491542816162
    3. '(' → logprob: -4.705491542816162
    4. '\' → logprob: -4.830491542816162
    5. '(
' → logprob: -5.205491542816162
    6. ',' → logprob: -5.205491542816162
    7. ')' → logprob: -5.830491542816162
    8. 't' → logprob: -5.830491542816162
    9. '
' → logprob: -5.830491542816162
    10. '```' → logprob: -6.330491542816162

Token 300: 'en' (ID: 262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0564274936914444
    2. ' )' → logprob: -2.931427478790283
    3. 't' → logprob: -7.806427478790283
    4. ' ' → logprob: -8.181427955627441
    5. ' ' → logprob: -8.556427955627441
    6. '_' → logprob: -8.806427955627441
    7. 'def' → logprob: -10.181427955627441
    8. ' t' → logprob: -10.306427955627441
    9. ':' → logprob: -10.306427955627441
    10. ').' → logprob: -10.431427955627441

Token 301: ' secondes' (ID: 109098)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40004485845565796
    2. ' secondes' → logprob: -2.2750449180603027
    3. ' _' → logprob: -2.9000449180603027
    4. '_seconds' → logprob: -3.4000449180603027
    5. ')' → logprob: -3.7750449180603027
    6. ' )' → logprob: -4.150044918060303
    7. ' seconds' → logprob: -4.275044918060303
    8. '_second' → logprob: -4.275044918060303
    9. 's' → logprob: -4.525044918060303
    10. 'temps' → logprob: -4.650044918060303

Token 302: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003165360540151596
    2. ':' → logprob: -6.628165245056152
    3. '):' → logprob: -7.253165245056152
    4. ')
' → logprob: -7.753165245056152
    5. ' )' → logprob: -8.003165245056152
    6. ',' → logprob: -9.253165245056152
    7. 'def' → logprob: -10.128165245056152
    8. ',
' → logprob: -10.378165245056152
    9. '.' → logprob: -10.628165245056152
    10. '):
' → logprob: -10.878165245056152

Token 303: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03872075304389
    2. '```' → logprob: -3.5387208461761475
    3. 't' → logprob: -5.913720607757568
    4. ':' → logprob: -6.288720607757568
    5. '
' → logprob: -7.288720607757568
    6. '\' → logprob: -7.288720607757568
    7. '(
' → logprob: -7.413720607757568
    8. '(' → logprob: -7.913720607757568
    9. ':def' → logprob: -8.038721084594727
    10. ')' → logprob: -8.038721084594727

Token 304: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002330992283532396
    2. 't' → logprob: -8.375232696533203
    3. '```' → logprob: -13.875232696533203
    4. 'import' → logprob: -14.000232696533203
    5. ' def' → logprob: -14.625232696533203
    6. 'dfs' → logprob: -15.750232696533203
    7. 'from' → logprob: -15.875232696533203
    8. '#' → logprob: -17.875232696533203
    9. 'dp' → logprob: -18.250232696533203
    10. 'T' → logprob: -18.375232696533203

Token 305: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001843485952122137
    2. 'from' → logprob: -9.375184059143066
    3. 't' → logprob: -9.750184059143066
    4. 'import' → logprob: -10.375184059143066
    5. '
' → logprob: -12.625184059143066
    6. ' def' → logprob: -13.000184059143066
    7. '```' → logprob: -13.125184059143066
    8. 'dfs' → logprob: -13.500184059143066
    9. '#' → logprob: -15.125184059143066
    10. 'dp' → logprob: -15.375184059143066

Token 306: ' mod' (ID: 1812)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006368712987750769
    2. ' def' → logprob: -5.131368637084961
    3. 't' → logprob: -9.256368637084961
    4. 'import' → logprob: -9.381368637084961
    5. 'define' → logprob: -9.631368637084961
    6. ' wants' → logprob: -10.256368637084961
    7. ' want' → logprob: -10.631368637084961
    8. 'continue' → logprob: -11.256368637084961
    9. ' veut' → logprob: -11.381368637084961
    10. '#' → logprob: -11.506368637084961

Token 307: 'él' (ID: 6778)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2964603304862976
    2. 'él' → logprob: -2.6714603900909424
    3. 'def' → logprob: -2.6714603900909424
    4. 'r' → logprob: -2.9214603900909424
    5. 'l' → logprob: -3.5464603900909424
    6. 'f' → logprob: -4.671460151672363
    7. 'if' → logprob: -4.921460151672363
    8. '```' → logprob: -5.421460151672363
    9. 'lf' → logprob: -6.296460151672363
    10. 'ifie' → logprob: -6.671460151672363

Token 308: 'ise' (ID: 1096)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.23403088748455048
    2. '=' → logprob: -2.4840309619903564
    3. 'é' → logprob: -2.6090309619903564
    4. ' =' → logprob: -4.109030723571777
    5. '#' → logprob: -4.984030723571777
    6. 'er' → logprob: -5.359030723571777
    7. 'ize' → logprob: -5.609030723571777
    8. '_' → logprob: -5.859030723571777
    9. 'isé' → logprob: -5.984030723571777
    10. 'è' → logprob: -6.234030723571777

Token 309: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0033626044169068336
    2. ' la' → logprob: -7.253362655639648
    3. 'pos' → logprob: -7.628362655639648
    4. ' def' → logprob: -7.878362655639648
    5. '#' → logprob: -8.128362655639648
    6. 'the' → logprob: -8.128362655639648
    7. 'from' → logprob: -8.253362655639648
    8. 'd' → logprob: -8.253362655639648
    9. 'dfs' → logprob: -8.503362655639648
    10. 'le' → logprob: -9.128362655639648

Token 310: ' recherche' (ID: 24975)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38718223571777344
    2. 'pos' → logprob: -2.2621822357177734
    3. 'dp' → logprob: -3.0121822357177734
    4. 'dfs' → logprob: -3.0121822357177734
    5. 'state' → logprob: -3.2621822357177734
    6. 'position' → logprob: -3.7621822357177734
    7. ' def' → logprob: -5.012182235717773
    8. '#' → logprob: -5.262182235717773
    9. 'distance' → logprob: -5.512182235717773
    10. ' state' → logprob: -5.637182235717773

Token 311: ' du' (ID: 1462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00961677823215723
    2. 'd' → logprob: -6.134616851806641
    3. 'import' → logprob: -6.634616851806641
    4. '_' → logprob: -6.884616851806641
    5. 'de' → logprob: -7.009616851806641
    6. ' def' → logprob: -7.009616851806641
    7. ' de' → logprob: -7.634616851806641
    8. '#' → logprob: -7.884616851806641
    9. 'from' → logprob: -8.00961685180664
    10. ' =' → logprob: -8.38461685180664

Token 312: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -1.2650283575057983
    2. 'next' → logprob: -2.015028476715088
    3. ' next' → logprob: -2.140028476715088
    4. 'pro' → logprob: -3.015028476715088
    5. 'def' → logprob: -3.140028476715088
    6. 'dp' → logprob: -3.140028476715088
    7. '```' → logprob: -3.140028476715088
    8. ' prochain' → logprob: -3.390028476715088
    9. ' temps' → logprob: -3.765028476715088
    10. 'dfs' → logprob: -3.765028476715088

Token 313: ' minimal' (ID: 19957)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4539130926132202
    2. 'def' → logprob: -1.5789130926132202
    3. 'minimum' → logprob: -3.0789132118225098
    4. '_min' → logprob: -3.4539132118225098
    5. 'min' → logprob: -4.20391321182251
    6. 'import' → logprob: -4.70391321182251
    7. '=' → logprob: -4.70391321182251
    8. ')' → logprob: -4.70391321182251
    9. '
' → logprob: -5.45391321182251
    10. '_next' → logprob: -5.70391321182251

Token 314: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06362984329462051
    2. '_' → logprob: -3.5636298656463623
    3. 't' → logprob: -3.9386298656463623
    4. ':' → logprob: -5.563629627227783
    5. ',' → logprob: -6.688629627227783
    6. ')' → logprob: -6.813629627227783
    7. ' def' → logprob: -7.063629627227783
    8. '(' → logprob: -7.188629627227783
    9. '.' → logprob: -7.313629627227783
    10. '
' → logprob: -7.313629627227783

Token 315: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5094070477061905e-05
    2. '```' → logprob: -12.625015258789062
    3. 't' → logprob: -12.875015258789062
    4. 'import' → logprob: -13.250015258789062
    5. ' def' → logprob: -13.625015258789062
    6. 'from' → logprob: -13.625015258789062
    7. '\' → logprob: -13.750015258789062
    8. ':def' → logprob: -13.875015258789062
    9. ')' → logprob: -14.125015258789062
    10. '@' → logprob: -15.000015258789062

Token 316: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.209963900502771e-05
    2. 't' → logprob: -9.625092506408691
    3. '```' → logprob: -11.500092506408691
    4. 'import' → logprob: -11.875092506408691
    5. ' def' → logprob: -11.875092506408691
    6. 'dfs' → logprob: -14.125092506408691
    7. '\' → logprob: -14.875092506408691
    8. 'from' → logprob: -15.500092506408691
    9. ':def' → logprob: -15.500092506408691
    10. '
' → logprob: -15.875092506408691

Token 317: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006015266408212483
    2. 't' → logprob: -8.125601768493652
    3. '(' → logprob: -8.375601768493652
    4. '(
' → logprob: -10.750601768493652
    5. 'import' → logprob: -10.875601768493652
    6. ' def' → logprob: -11.375601768493652
    7. 'dfs' → logprob: -12.000601768493652
    8. ')' → logprob: -12.125601768493652
    9. '@' → logprob: -13.000601768493652
    10. 'd' → logprob: -13.375601768493652

Token 318: ' réduire' (ID: 78295)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.7763518691062927
    2. 't' → logprob: -0.9013518691062927
    3. ' atteindre' → logprob: -3.5263519287109375
    4. 'def' → logprob: -3.6513519287109375
    5. ' continuer' → logprob: -3.9013519287109375
    6. 're' → logprob: -4.4013519287109375
    7. 'pos' → logprob: -4.7763519287109375
    8. ' la' → logprob: -5.4013519287109375
    9. 'la' → logprob: -6.1513519287109375
    10. ' def' → logprob: -6.4013519287109375

Token 319: ' l' (ID: 305)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.3237152099609375
    2. 'l' → logprob: -1.4487152099609375
    3. ' la' → logprob: -1.6987152099609375
    4. 'la' → logprob: -1.9487152099609375
    5. ' l' → logprob: -2.0737152099609375
    6. ' le' → logprob: -3.4487152099609375
    7. 'les' → logprob: -5.3237152099609375
    8. ' ' → logprob: -5.8237152099609375
    9. ' les' → logprob: -6.1987152099609375
    10. '_le' → logprob: -6.8237152099609375

Token 320: ''état' (ID: 116357)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.22252175211906433
    2. '#' → logprob: -3.8475217819213867
    3. 'def' → logprob: -3.9725217819213867
    4. 'sys' → logprob: -3.9725217819213867
    5. ' t' → logprob: -4.097521781921387
    6. 'import' → logprob: -4.097521781921387
    7. 's' → logprob: -4.097521781921387
    8. 'e' → logprob: -4.597521781921387
    9. '```' → logprob: -4.597521781921387
    10. '_' → logprob: -4.847521781921387

Token 321: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6117066144943237
    2. 'space' → logprob: -1.8617066144943237
    3. ' space' → logprob: -2.2367067337036133
    4. ',' → logprob: -2.8617067337036133
    5. '_space' → logprob: -2.9867067337036133
    6. ' d' → logprob: -3.9867067337036133
    7. ' ,' → logprob: -4.236706733703613
    8. 'es' → logprob: -4.736706733703613
    9. '_' → logprob: -4.736706733703613
    10. ' de' → logprob: -5.111706733703613

Token 322: ' la' (ID: 557)
  Prédit: 'optim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'optim' → logprob: -1.436055064201355
    2. 'lim' → logprob: -1.561055064201355
    3. ' limiter' → logprob: -2.0610551834106445
    4. 'l' → logprob: -2.3110551834106445
    5. 'simpl' → logprob: -2.8110551834106445
    6. 'év' → logprob: -3.1860551834106445
    7. 'g' → logprob: -3.4360551834106445
    8. ' éviter' → logprob: -3.5610551834106445
    9. ' optimiser' → logprob: -3.5610551834106445
    10. 'acc' → logprob: -3.9360551834106445

Token 323: ' mémoire' (ID: 79071)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -1.0092663764953613
    2. 'pr' → logprob: -1.1342663764953613
    3. 'tail' → logprob: -2.1342663764953613
    4. '#' → logprob: -3.0092663764953613
    5. 'import' → logprob: -3.3842663764953613
    6. 'lim' → logprob: -3.7592663764953613
    7. 'coder' → logprob: -4.634266376495361
    8. 'optim' → logprob: -5.009266376495361
    9. 'mé' → logprob: -5.259266376495361
    10. 'repr' → logprob: -5.259266376495361

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10026974976062775
    2. ' ,' → logprob: -4.100269794464111
    3. '_' → logprob: -4.225269794464111
    4. ',
' → logprob: -4.975269794464111
    5. ')' → logprob: -5.225269794464111
    6. 'import' → logprob: -5.475269794464111
    7. '_,' → logprob: -5.600269794464111
    8. ':' → logprob: -5.725269794464111
    9. '_com' → logprob: -5.850269794464111
    10. 's' → logprob: -5.975269794464111

Token 325: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.2621007561683655
    2. '#' → logprob: -1.6371006965637207
    3. ' on' → logprob: -4.012100696563721
    4. 'max' → logprob: -5.512100696563721
    5. 't' → logprob: -6.012100696563721
    6. 'import' → logprob: -6.262100696563721
    7. 'pos' → logprob: -6.387100696563721
    8. 'pass' → logprob: -6.762100696563721
    9. ' #' → logprob: -6.887100696563721
    10. 'nous' → logprob: -6.887100696563721

Token 326: ' note' (ID: 7477)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.1306180953979492
    2. 'dis' → logprob: -1.3806180953979492
    3. 'mod' → logprob: -3.005618095397949
    4. 'n' → logprob: -3.130618095397949
    5. 'quant' → logprob: -3.630618095397949
    6. 'pe' → logprob: -3.755618095397949
    7. ' arr' → logprob: -3.755618095397949
    8. 'util' → logprob: -3.880618095397949
    9. 'round' → logprob: -4.005618095397949
    10. 'tr' → logprob: -4.255618095397949

Token 327: ' que' (ID: 661)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.48009589314460754
    2. 't' → logprob: -1.8550958633422852
    3. ' que' → logprob: -2.730095863342285
    4. 'd' → logprob: -2.730095863342285
    5. 'que' → logprob: -3.605095863342285
    6. ' pos' → logprob: -4.730095863342285
    7. 'l' → logprob: -5.480095863342285
    8. 'def' → logprob: -5.605095863342285
    9. ' t' → logprob: -5.730095863342285
    10. ' la' → logprob: -5.730095863342285

Token 328: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.14024893939495087
    2. ' la' → logprob: -2.890249013900757
    3. 'pos' → logprob: -3.140249013900757
    4. 'on' → logprob: -4.765248775482178
    5. '#' → logprob: -5.265248775482178
    6. 'le' → logprob: -5.390248775482178
    7. 'les' → logprob: -5.640248775482178
    8. 't' → logprob: -5.765248775482178
    9. 'l' → logprob: -6.140248775482178
    10. 'v' → logprob: -6.515248775482178

Token 329: ' vitesse' (ID: 71752)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9187168478965759
    2. 'v' → logprob: -1.2937169075012207
    3. 'position' → logprob: -1.7937169075012207
    4. 'state' → logprob: -3.6687169075012207
    5. 'distance' → logprob: -3.9187169075012207
    6. ' vitesse' → logprob: -4.043716907501221
    7. 't' → logprob: -4.293716907501221
    8. '#' → logprob: -4.418716907501221
    9. 'max' → logprob: -4.668716907501221
    10. 'def' → logprob: -4.918716907501221

Token 330: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.755020797252655
    2. ' n' → logprob: -2.1300208568573
    3. 'max' → logprob: -3.3800208568573
    4. 'est' → logprob: -3.6300208568573
    5. ' ne' → logprob: -3.6300208568573
    6. '```' → logprob: -3.6300208568573
    7. '=' → logprob: -3.8800208568573
    8. '_max' → logprob: -3.8800208568573
    9. ' <=' → logprob: -3.8800208568573
    10. '_' → logprob: -3.8800208568573

Token 331: ' toujours' (ID: 16867)
  Prédit: 'tou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tou' → logprob: -0.3159996569156647
    2. ' toujours' → logprob: -1.6909996271133423
    3. 'une' → logprob: -3.440999746322632
    4. 'con' → logprob: -5.065999507904053
    5. 'enc' → logprob: -5.065999507904053
    6. 'stock' → logprob: -5.565999507904053
    7. ' limitée' → logprob: -5.565999507904053
    8. 'limit' → logprob: -5.690999507904053
    9. 'un' → logprob: -5.690999507904053
    10. 're' → logprob: -5.815999507904053

Token 332: ' ' (ID: 220)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.22888882458209991
    2. ' une' → logprob: -2.978888750076294
    3. '3' → logprob: -3.103888750076294
    4. 'un' → logprob: -3.353888750076294
    5. 'pu' → logprob: -3.353888750076294
    6. ' ' → logprob: -4.978888988494873
    7. ' puissance' → logprob: -5.228888988494873
    8. 'import' → logprob: -5.853888988494873
    9. '```' → logprob: -6.353888988494873
    10. ' un' → logprob: -6.353888988494873

Token 333: '3' (ID: 18)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.16458970308303833
    2. 'pu' → logprob: -2.4145896434783936
    3. '3' → logprob: -3.6645896434783936
    4. 'un' → logprob: -4.039589881896973
    5. '1' → logprob: -5.664589881896973
    6. 'dans' → logprob: -5.789589881896973
    7. 'import' → logprob: -6.039589881896973
    8. ' une' → logprob: -6.414589881896973
    9. 'de' → logprob: -6.789589881896973
    10. '```' → logprob: -6.914589881896973

Token 334: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1883230209350586
    2. ' **' → logprob: -1.8133230209350586
    3. ')' → logprob: -5.188323020935059
    4. ' -' → logprob: -6.813323020935059
    5. ',' → logprob: -7.938323020935059
    6. ']' → logprob: -8.313323020935059
    7. '^' → logprob: -8.313323020935059
    8. ''s' → logprob: -8.688323020935059
    9. '```' → logprob: -9.313323020935059
    10. '-' → logprob: -9.438323020935059

Token 335: 'k' (ID: 74)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01308246050029993
    2. 'k' → logprob: -4.638082504272461
    3. '**' → logprob: -6.513082504272461
    4. ' n' → logprob: -7.013082504272461
    5. '0' → logprob: -8.013082504272461
    6. '```' → logprob: -8.638082504272461
    7. 'int' → logprob: -8.888082504272461
    8. '^' → logprob: -9.763082504272461
    9. 'pow' → logprob: -9.888082504272461
    10. 'i' → logprob: -9.888082504272461

Token 336: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8391236066818237
    2. '**' → logprob: -1.7141236066818237
    3. ')' → logprob: -2.7141237258911133
    4. '```' → logprob: -3.0891237258911133
    5. '
' → logprob: -3.3391237258911133
    6. '

' → logprob: -3.5891237258911133
    7. ',' → logprob: -3.5891237258911133
    8. '(' → logprob: -3.7141237258911133
    9. ':' → logprob: -3.8391237258911133
    10. '_token' → logprob: -4.339123725891113

Token 337: ' un' (ID: 537)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6445520520210266
    2. ' k' → logprob: -0.7695520520210266
    3. ' un' → logprob: -5.019552230834961
    4. 'un' → logprob: -5.894552230834961
    5. 'une' → logprob: -6.894552230834961
    6. 'some' → logprob: -7.644552230834961
    7. ' des' → logprob: -8.019552230834961
    8. '{k' → logprob: -9.019552230834961
    9. ' some' → logprob: -9.269552230834961
    10. ' une' → logprob: -9.644552230834961

Token 338: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7379211783409119
    2. 'k' → logprob: -0.8629211783409119
    3. 'int' → logprob: -2.9879212379455566
    4. ' k' → logprob: -3.9879212379455566
    5. ' entier' → logprob: -4.112921237945557
    6. 'nombre' → logprob: -4.737921237945557
    7. 'certain' → logprob: -6.487921237945557
    8. 'n' → logprob: -6.862921237945557
    9. ' nombre' → logprob: -6.987921237945557
    10. ' ' → logprob: -8.112920761108398

Token 339: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2781347632408142
    2. ' k' → logprob: -2.028134822845459
    3. '_k' → logprob: -3.528134822845459
    4. ')' → logprob: -3.778134822845459
    5. '<|end|>' → logprob: -4.153134822845459
    6. ',' → logprob: -4.528134822845459
    7. '_' → logprob: -5.153134822845459
    8. '^' → logprob: -5.278134822845459
    9. '^{' → logprob: -5.403134822845459
    10. '^\' → logprob: -6.278134822845459

Token 340: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5442575216293335
    2. ',' → logprob: -1.4192575216293335
    3. '.' → logprob: -2.044257640838623
    4. ')' → logprob: -4.544257640838623
    5. ':' → logprob: -4.794257640838623
    6. 'import' → logprob: -5.544257640838623
    7. '#' → logprob: -5.919257640838623
    8. 'k' → logprob: -6.169257640838623
    9. '
' → logprob: -6.169257640838623
    10. ',
' → logprob: -6.169257640838623

Token 341: 'k' (ID: 74)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.622207522392273
    2. '),' → logprob: -1.872207522392273
    3. ').' → logprob: -1.872207522392273
    4. 'k' → logprob: -2.6222076416015625
    5. ',' → logprob: -3.4972076416015625
    6. ' k' → logprob: -3.4972076416015625
    7. ' )' → logprob: -5.6222076416015625
    8. 'import' → logprob: -6.3722076416015625
    9. ').
' → logprob: -6.4972076416015625
    10. '>=' → logprob: -6.4972076416015625

Token 342: ' peut' (ID: 9216)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6002646088600159
    2. ' =' → logprob: -1.100264549255371
    3. ')' → logprob: -2.850264549255371
    4. '+' → logprob: -4.475264549255371
    5. '**' → logprob: -5.100264549255371
    6. ',' → logprob: -5.225264549255371
    7. ':' → logprob: -5.600264549255371
    8. '=-' → logprob: -5.725264549255371
    9. 'import' → logprob: -5.850264549255371
    10. '<=' → logprob: -5.975264549255371

Token 343: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -1.0912327766418457
    2. ' être' → logprob: -1.2162327766418457
    3. ' aller' → logprob: -2.7162327766418457
    4. ' varier' → logprob: -2.8412327766418457
    5. ' be' → logprob: -3.0912327766418457
    6. ' range' → logprob: -3.2162327766418457
    7. 'range' → logprob: -3.3412327766418457
    8. '=' → logprob: -3.8412327766418457
    9. ''être' → logprob: -4.341232776641846
    10. 'de' → logprob: -4.466232776641846

Token 344: ' nég' (ID: 55805)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9360571503639221
    2. ' nég' → logprob: -0.9360571503639221
    3. 'negative' → logprob: -2.1860570907592773
    4. 'any' → logprob: -3.9360570907592773
    5. ' negative' → logprob: -4.186057090759277
    6. ' negatif' → logprob: -4.561057090759277
    7. 'neg' → logprob: -4.686057090759277
    8. ' positif' → logprob: -5.186057090759277
    9. '0' → logprob: -5.311057090759277
    10. '
' → logprob: -5.561057090759277

Token 345: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.6645455360412598
    2. '1' → logprob: -1.2895455360412598
    3. 'aire' → logprob: -2.7895455360412598
    4. 'é' → logprob: -2.7895455360412598
    5. ')' → logprob: -3.1645455360412598
    6. 'i' → logprob: -5.03954553604126
    7. 'e' → logprob: -5.28954553604126
    8. '+' → logprob: -5.53954553604126
    9. 't' → logprob: -5.78954553604126
    10. '_' → logprob: -6.16454553604126

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5559847950935364
    2. ')' → logprob: -0.9309847950935364
    3. ' or' → logprob: -4.305984973907471
    4. ' ou' → logprob: -4.930984973907471
    5. '),' → logprob: -5.930984973907471
    6. 'import' → logprob: -6.305984973907471
    7. 'or' → logprob: -6.430984973907471
    8. 'k' → logprob: -7.305984973907471
    9. ')
' → logprob: -7.430984973907471
    10. ' ,' → logprob: -7.430984973907471

Token 347: ' ' (ID: 220)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4609602391719818
    2. 'k' → logprob: -1.0859602689743042
    3. '#' → logprob: -4.460960388183594
    4. '0' → logprob: -5.710960388183594
    5. ',' → logprob: -6.210960388183594
    6. ' ' → logprob: -6.585960388183594
    7. '1' → logprob: -6.585960388183594
    8. ' #' → logprob: -6.710960388183594
    9. '```' → logprob: -6.835960388183594
    10. 'et' → logprob: -6.960960388183594

Token 348: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.44279512763023376
    2. ' k' → logprob: -1.1927951574325562
    3. '0' → logprob: -3.3177950382232666
    4. 'inf' → logprob: -4.567795276641846
    5. ' ' → logprob: -5.817795276641846
    6. '...' → logprob: -6.817795276641846
    7. '1' → logprob: -7.317795276641846
    8. ',' → logprob: -7.442795276641846
    9. 'pos' → logprob: -8.067794799804688
    10. 'None' → logprob: -8.317794799804688

Token 349: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.756415843963623
    2. ',' → logprob: -0.756415843963623
    3. ' ou' → logprob: -2.881415843963623
    4. 'ou' → logprob: -6.506415843963623
    5. ' or' → logprob: -6.506415843963623
    6. ').' → logprob: -7.756415843963623
    7. 'or' → logprob: -7.881415843963623
    8. '),' → logprob: -8.006416320800781
    9. ' )' → logprob: -9.006416320800781
    10. '...' → logprob: -9.256416320800781

Token 350: ' ou' (ID: 2031)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7976047992706299
    2. ' ou' → logprob: -1.1726047992706299
    3. '1' → logprob: -2.29760479927063
    4. ' or' → logprob: -3.04760479927063
    5. 'ou' → logprob: -3.42260479927063
    6. 'k' → logprob: -3.42260479927063
    7. 'or' → logprob: -4.672604560852051
    8. ' ' → logprob: -4.922604560852051
    9. '...' → logprob: -5.797604560852051
    10. ' positive' → logprob: -6.797604560852051

Token 351: ' positif' (ID: 89008)
  Prédit: ' positif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positif' → logprob: -0.22484183311462402
    2. 'posit' → logprob: -1.974841833114624
    3. 'positive' → logprob: -2.974841833114624
    4. ' positive' → logprob: -4.599842071533203
    5. '1' → logprob: -8.099842071533203
    6. 'pos' → logprob: -8.349842071533203
    7. '```' → logprob: -8.724842071533203
    8. 'k' → logprob: -8.724842071533203
    9. ' ' → logprob: -8.974842071533203
    10. 'positivo' → logprob: -9.099842071533203

Token 352: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006469102227129042
    2. ').' → logprob: -7.875647068023682
    3. ' )' → logprob: -9.125646591186523
    4. ',' → logprob: -10.000646591186523
    5. '):' → logprob: -10.375646591186523
    6. '),' → logprob: -10.500646591186523
    7. '**' → logprob: -12.125646591186523
    8. 'import' → logprob: -12.250646591186523
    9. ')
' → logprob: -12.500646591186523
    10. ')**' → logprob: -12.500646591186523

Token 353: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012494471855461597
    2. ':' → logprob: -5.2624945640563965
    3. '```' → logprob: -5.5124945640563965
    4. '
' → logprob: -7.5124945640563965
    5. ':
' → logprob: -7.6374945640563965
    6. ')' → logprob: -7.8874945640563965
    7. 'dfs' → logprob: -8.012494087219238
    8. 'import' → logprob: -8.137494087219238
    9. '(' → logprob: -8.637494087219238
    10. ':def' → logprob: -8.762494087219238

Token 354: ' De' (ID: 1516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00042412037146277726
    2. 'from' → logprob: -8.0004243850708
    3. '@' → logprob: -9.8754243850708
    4. 't' → logprob: -11.0004243850708
    5. 'import' → logprob: -11.5004243850708
    6. '
' → logprob: -13.0004243850708
    7. '```' → logprob: -13.2504243850708
    8. ' def' → logprob: -13.6254243850708
    9. 'dfs' → logprob: -13.7504243850708
    10. ')' → logprob: -14.2504243850708

Token 355: ' plus' (ID: 2932)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0019119807984679937
    2. 'fin' → logprob: -7.0019121170043945
    3. '#' → logprob: -8.251912117004395
    4. 'def' → logprob: -8.376912117004395
    5. 'fine' → logprob: -8.876912117004395
    6. 'l' → logprob: -9.626912117004395
    7. '```' → logprob: -9.626912117004395
    8. 'import' → logprob: -9.626912117004395
    9. 'from' → logprob: -10.126912117004395
    10. '
' → logprob: -11.001912117004395

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4226069450378418
    2. '#' → logprob: -1.4226069450378418
    3. ' la' → logprob: -3.297606945037842
    4. ' on' → logprob: -3.547606945037842
    5. 'on' → logprob: -4.547606945037842
    6. 'la' → logprob: -5.422606945037842
    7. ' #' → logprob: -5.672606945037842
    8. 'le' → logprob: -5.922606945037842
    9. ' ,' → logprob: -6.172606945037842
    10. ' ' → logprob: -6.297606945037842

Token 357: ' pos' (ID: 1253)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5507182478904724
    2. 'on' → logprob: -1.3007183074951172
    3. ' on' → logprob: -2.175718307495117
    4. 'le' → logprob: -4.550718307495117
    5. ' la' → logprob: -4.925718307495117
    6. 'la' → logprob: -5.175718307495117
    7. 'import' → logprob: -5.300718307495117
    8. ' #' → logprob: -5.925718307495117
    9. 'nous' → logprob: -6.925718307495117
    10. 'il' → logprob: -6.925718307495117

Token 358: ' est' (ID: 893)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1536240130662918
    2. ' =' → logprob: -3.1536240577697754
    3. '+=' → logprob: -3.9036240577697754
    4. ' <=' → logprob: -4.028624057769775
    5. ' est' → logprob: -4.278624057769775
    6. ' >=' → logprob: -4.653624057769775
    7. ',' → logprob: -4.778624057769775
    8. ')' → logprob: -4.903624057769775
    9. ' ,' → logprob: -5.528624057769775
    10. '=' → logprob: -5.653624057769775

Token 359: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7678841352462769
    2. ' toujours' → logprob: -1.8928841352462769
    3. 'arr' → logprob: -2.1428842544555664
    4. ' arr' → logprob: -2.1428842544555664
    5. ' int' → logprob: -2.5178842544555664
    6. ' un' → logprob: -3.6428842544555664
    7. ' always' → logprob: -4.517884254455566
    8. 'round' → logprob: -5.017884254455566
    9. 'tou' → logprob: -5.517884254455566
    10. 'un' → logprob: -5.642884254455566

Token 360: ' distance' (ID: 9324)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6437220573425293
    2. ' int' → logprob: -0.8937220573425293
    3. ' ' → logprob: -4.643722057342529
    4. ' float' → logprob: -4.643722057342529
    5. 'n' → logprob: -5.018722057342529
    6. 'round' → logprob: -5.393722057342529
    7. 'r' → logprob: -5.518722057342529
    8. 't' → logprob: -5.893722057342529
    9. ' ' → logprob: -5.893722057342529
    10. 'ent' → logprob: -6.143722057342529

Token 361: ' restante' (ID: 130202)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.256635069847107
    2. '+' → logprob: -1.756635069847107
    3. ' +' → logprob: -2.3816351890563965
    4. ' )' → logprob: -2.3816351890563965
    5. ',' → logprob: -2.8816351890563965
    6. ' +=' → logprob: -3.0066351890563965
    7. '_' → logprob: -3.1316351890563965
    8. ' actuelle' → logprob: -3.5066351890563965
    9. '_act' → logprob: -3.7566351890563965
    10. ' ' → logprob: -3.7566351890563965

Token 362: ' vers' (ID: 3640)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0513620376586914
    2. ' -' → logprob: -1.6763620376586914
    3. ',' → logprob: -2.4263620376586914
    4. '_' → logprob: -2.6763620376586914
    5. '_to' → logprob: -2.6763620376586914
    6. '_remaining' → logprob: -3.0513620376586914
    7. '-' → logprob: -4.051362037658691
    8. ' ,' → logprob: -4.051362037658691
    9. 'to' → logprob: -4.176362037658691
    10. ' )' → logprob: -4.176362037658691

Token 363: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7208006381988525
    2. ' t' → logprob: -1.3458006381988525
    3. ' atteindre' → logprob: -2.7208006381988525
    4. 'atte' → logprob: -2.8458006381988525
    5. ' la' → logprob: -2.9708006381988525
    6. 'le' → logprob: -4.095800399780273
    7. 'la' → logprob: -4.095800399780273
    8. ' ' → logprob: -4.220800399780273
    9. 'l' → logprob: -4.720800399780273
    10. ' le' → logprob: -5.345800399780273

Token 364: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14214809238910675
    2. ':' → logprob: -2.892148017883301
    3. '
' → logprob: -3.892148017883301
    4. '```' → logprob: -4.392148017883301
    5. '

' → logprob: -4.517148017883301
    6. ',' → logprob: -4.892148017883301
    7. ' def' → logprob: -5.267148017883301
    8. 't' → logprob: -5.892148017883301
    9. ')' → logprob: -5.892148017883301
    10. '\' → logprob: -5.892148017883301

Token 365: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0622599720954895
    2. ':
' → logprob: -3.1872599124908447
    3. ':' → logprob: -4.437260150909424
    4. '
' → logprob: -5.937260150909424
    5. '```' → logprob: -6.812260150909424
    6. ',
' → logprob: -7.062260150909424
    7. ':def' → logprob: -7.687260150909424
    8. '@' → logprob: -8.062259674072266
    9. '@
' → logprob: -8.187259674072266
    10. '\' → logprob: -8.437259674072266

Token 366: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00024631983251310885
    2. '
' → logprob: -9.125246047973633
    3. 't' → logprob: -9.875246047973633
    4. '```' → logprob: -9.875246047973633
    5. ':' → logprob: -11.750246047973633
    6. 'import' → logprob: -12.250246047973633
    7. '\' → logprob: -12.250246047973633
    8. ':def' → logprob: -12.375246047973633
    9. ' def' → logprob: -12.625246047973633
    10. 'from' → logprob: -13.125246047973633

Token 367: ' Le' (ID: 2018)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003323665587231517
    2. 't' → logprob: -8.375332832336426
    3. 'from' → logprob: -10.250332832336426
    4. '@' → logprob: -10.625332832336426
    5. 'import' → logprob: -10.625332832336426
    6. 'dfs' → logprob: -12.250332832336426
    7. '```' → logprob: -12.500332832336426
    8. '
' → logprob: -12.500332832336426
    9. ' def' → logprob: -13.000332832336426
    10. '\' → logprob: -14.250332832336426

Token 368: ' problème' (ID: 35630)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26495862007141113
    2. ' next' → logprob: -2.639958620071411
    3. 't' → logprob: -2.889958620071411
    4. ' code' → logprob: -3.014958620071411
    5. ' def' → logprob: -3.264958620071411
    6. ' t' → logprob: -5.639958381652832
    7. ' memo' → logprob: -5.889958381652832
    8. 'pos' → logprob: -6.264958381652832
    9. 'next' → logprob: -6.514958381652832
    10. '#' → logprob: -6.514958381652832

Token 369: ' devient' (ID: 63488)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6577118039131165
    2. '=' → logprob: -1.7827117443084717
    3. '#' → logprob: -2.4077117443084717
    4. '<|end|>' → logprob: -2.6577117443084717
    5. 't' → logprob: -3.5327117443084717
    6. 'import' → logprob: -3.9077117443084717
    7. ')' → logprob: -3.9077117443084717
    8. ',' → logprob: -4.157711982727051
    9. ' is' → logprob: -4.407711982727051
    10. '.' → logprob: -4.782711982727051

Token 370: ' :' (ID: 712)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8884240388870239
    2. 'd' → logprob: -2.0134239196777344
    3. 'une' → logprob: -2.1384239196777344
    4. 'un' → logprob: -2.1384239196777344
    5. '#' → logprob: -3.2634239196777344
    6. 'pos' → logprob: -3.7634239196777344
    7. 'def' → logprob: -4.013423919677734
    8. 'le' → logprob: -4.013423919677734
    9. ' de' → logprob: -4.138423919677734
    10. '```' → logprob: -4.138423919677734

Token 371: ' minim' (ID: 23874)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03188083693385124
    2. 'from' → logprob: -3.6568808555603027
    3. '```' → logprob: -5.531880855560303
    4. 'import' → logprob: -7.781880855560303
    5. '#' → logprob: -7.906880855560303
    6. '
' → logprob: -8.281880378723145
    7. 'min' → logprob: -8.781880378723145
    8. 'dé' → logprob: -9.656880378723145
    9. '``' → logprob: -9.781880378723145
    10. 't' → logprob: -9.906880378723145

Token 372: 'iser' (ID: 7466)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.228937029838562
    2. 'zer' → logprob: -1.603937029838562
    3. 'izer' → logprob: -1.728937029838562
    4. 'ze' → logprob: -2.6039371490478516
    5. 'ize' → logprob: -2.6039371490478516
    6. 'iser' → logprob: -2.6039371490478516
    7. 't' → logprob: -3.2289371490478516
    8. 'um' → logprob: -3.3539371490478516
    9. 'z' → logprob: -5.103937149047852
    10. '#' → logprob: -5.228937149047852

Token 373: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.050396837294101715
    2. 'le' → logprob: -3.3003969192504883
    3. ' la' → logprob: -4.925396919250488
    4. ' ' → logprob: -6.550396919250488
    5. ' l' → logprob: -7.050396919250488
    6. 'temps' → logprob: -7.300396919250488
    7. 'pos' → logprob: -7.425396919250488
    8. ' temps' → logprob: -7.925396919250488
    9. ' pos' → logprob: -8.675396919250488
    10. 'l' → logprob: -8.675396919250488

Token 374: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.018247341737151146
    2. ' temps' → logprob: -4.143247127532959
    3. 'nombre' → logprob: -6.768247127532959
    4. 'temp' → logprob: -7.768247127532959
    5. ' nombre' → logprob: -8.393247604370117
    6. 'time' → logprob: -8.393247604370117
    7. 'tem' → logprob: -9.268247604370117
    8. 't' → logprob: -11.018247604370117
    9. 'tmp' → logprob: -11.268247604370117
    10. 'total' → logprob: -11.643247604370117

Token 375: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.322543203830719
    2. '_total' → logprob: -2.322543144226074
    3. ')' → logprob: -3.572543144226074
    4. ',' → logprob: -3.947543144226074
    5. '_util' → logprob: -4.072543144226074
    6. 'pour' → logprob: -4.322543144226074
    7. '+' → logprob: -4.822543144226074
    8. 'total' → logprob: -4.947543144226074
    9. 'import' → logprob: -5.197543144226074
    10. '_pass' → logprob: -5.197543144226074

Token 376: ' parcour' (ID: 130642)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.05372970178723335
    2. ' atteindre' → logprob: -3.428729772567749
    3. 'aller' → logprob: -4.42872953414917
    4. 're' → logprob: -5.92872953414917
    5. 'arr' → logprob: -6.17872953414917
    6. ' arriver' → logprob: -7.17872953414917
    7. 'att' → logprob: -7.55372953414917
    8. 'reach' → logprob: -7.55372953414917
    9. ' aller' → logprob: -8.678730010986328
    10. ' atte' → logprob: -8.803730010986328

Token 377: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.00497342087328434
    2. 're' → logprob: -6.004973411560059
    3. 'rir' → logprob: -6.379973411560059
    4. 'u' → logprob: -8.254973411560059
    5. 'ire' → logprob: -8.629973411560059
    6. 'r' → logprob: -9.254973411560059
    7. 'er' → logprob: -9.504973411560059
    8. ' ' → logprob: -10.379973411560059
    9. 'oir' → logprob: -10.754973411560059
    10. '__' → logprob: -10.754973411560059

Token 378: ' une' (ID: 2463)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.552857518196106
    2. ' t' → logprob: -1.677857518196106
    3. 'pos' → logprob: -1.677857518196106
    4. 't' → logprob: -3.4278573989868164
    5. ' la' → logprob: -4.552857398986816
    6. ' le' → logprob: -5.927857398986816
    7. 'le' → logprob: -6.677857398986816
    8. ' (' → logprob: -7.177857398986816
    9. '(pos' → logprob: -7.177857398986816
    10. ' ' → logprob: -7.677857398986816

Token 379: ' distance' (ID: 9324)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segment' → logprob: -1.2609001398086548
    2. 'segment' → logprob: -1.6359001398086548
    3. ' espace' → logprob: -2.5109000205993652
    4. 'pos' → logprob: -2.8859000205993652
    5. ' morceau' → logprob: -3.2609000205993652
    6. 'space' → logprob: -3.3859000205993652
    7. 'pas' → logprob: -3.6359000205993652
    8. ' pas' → logprob: -3.6359000205993652
    9. ' space' → logprob: -4.010900020599365
    10. 'distance' → logprob: -4.260900020599365

Token 380: ' t' (ID: 260)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.5573146939277649
    2. ' restante' → logprob: -1.3073146343231201
    3. '_rest' → logprob: -2.68231463432312
    4. '_remaining' → logprob: -3.55731463432312
    5. 'pos' → logprob: -4.182314872741699
    6. '_' → logprob: -4.182314872741699
    7. ' rest' → logprob: -4.807314872741699
    8. 'remaining' → logprob: -5.307314872741699
    9. ' restant' → logprob: -5.807314872741699
    10. ' suivante' → logprob: -6.307314872741699

Token 381: ' avec' (ID: 3937)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024144820868968964
    2. '
' → logprob: -5.024144649505615
    3. ',' → logprob: -5.649144649505615
    4. ':' → logprob: -6.024144649505615
    5. ' def' → logprob: -6.149144649505615
    6. '```' → logprob: -6.524144649505615
    7. '_' → logprob: -6.774144649505615
    8. '

' → logprob: -6.899144649505615
    9. ' =' → logprob: -7.149144649505615
    10. '\' → logprob: -7.149144649505615

Token 382: ' vitesse' (ID: 71752)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.9392542839050293
    2. 'v' → logprob: -1.4392542839050293
    3. ' une' → logprob: -1.9392542839050293
    4. 'la' → logprob: -2.3142542839050293
    5. ' la' → logprob: -3.3142542839050293
    6. ' des' → logprob: -3.5642542839050293
    7. 'des' → logprob: -4.189254283905029
    8. 'vit' → logprob: -4.689254283905029
    9. ' vitesse' → logprob: -4.814254283905029
    10. 'pos' → logprob: -4.939254283905029

Token 383: ' pouvant' (ID: 104840)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9819990396499634
    2. ' =' → logprob: -1.3569990396499634
    3. ' ' → logprob: -2.231998920440674
    4. ' normale' → logprob: -3.231998920440674
    5. ' normal' → logprob: -3.356998920440674
    6. ',' → logprob: -3.481998920440674
    7. ' )' → logprob: -3.606998920440674
    8. ')' → logprob: -3.981998920440674
    9. ' ,' → logprob: -4.356998920440674
    10. '```' → logprob: -4.481998920440674

Token 384: ' être' (ID: 9104)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.896386981010437
    2. 'être' → logprob: -1.271386981010437
    3. ' ' → logprob: -2.8963871002197266
    4. ' varier' → logprob: -2.8963871002197266
    5. 'prendre' → logprob: -3.2713871002197266
    6. ' être' → logprob: -3.2713871002197266
    7. 'changer' → logprob: -3.3963871002197266
    8. ' changer' → logprob: -3.7713871002197266
    9. 'etre' → logprob: -4.271387100219727
    10. ' multiplier' → logprob: -4.521387100219727

Token 385: ' multip' (ID: 17524)
  Prédit: ' multip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multip' → logprob: -0.5916683673858643
    2. 'multip' → logprob: -1.5916683673858643
    3. '3' → logprob: -1.9666683673858643
    4. 'mult' → logprob: -3.0916683673858643
    5. 'mod' → logprob: -3.9666683673858643
    6. ' ' → logprob: -4.091668128967285
    7. 'div' → logprob: -5.341668128967285
    8. ' mod' → logprob: -5.466668128967285
    9. '1' → logprob: -5.716668128967285
    10. '{' → logprob: -5.966668128967285

Token 386: 'li' (ID: 1307)
  Prédit: 'lié'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.634475827217102
    2. 'li' → logprob: -0.759475827217102
    3. '*' → logprob: -7.6344757080078125
    4. 'lied' → logprob: -8.134475708007812
    5. 'lication' → logprob: -8.384475708007812
    6. 'lic' → logprob: -9.009475708007812
    7. 'l' → logprob: -9.634475708007812
    8. 'liable' → logprob: -9.759475708007812
    9. 'licated' → logprob: -10.384475708007812
    10. 'lique' → logprob: -10.384475708007812

Token 387: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.10859373211860657
    2. 'é' → logprob: -2.358593702316284
    3. 'er' → logprob: -5.983593940734863
    4. 'ed' → logprob: -6.108593940734863
    5. '#' → logprob: -7.483593940734863
    6. '**' → logprob: -7.608593940734863
    7. '3' → logprob: -8.358593940734863
    8. 'és' → logprob: -8.608593940734863
    9. '*' → logprob: -8.733593940734863
    10. '-' → logprob: -8.858593940734863

Token 388: ' ou' (ID: 2031)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6302241683006287
    2. ' ou' → logprob: -1.5052242279052734
    3. 'ou' → logprob: -1.5052242279052734
    4. ' par' → logprob: -3.8802242279052734
    5. 'or' → logprob: -7.005224227905273
    6. ' or' → logprob: -7.005224227905273
    7. '_par' → logprob: -8.130224227905273
    8. '/par' → logprob: -9.005224227905273
    9. '/' → logprob: -9.130224227905273
    10. '```' → logprob: -9.380224227905273

Token 389: ' divis' (ID: 37826)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.027632879093289375
    2. ' divis' → logprob: -4.652632713317871
    3. '/' → logprob: -4.777632713317871
    4. '/div' → logprob: -4.777632713317871
    5. ' div' → logprob: -8.027632713317871
    6. ' /' → logprob: -8.777632713317871
    7. '	div' → logprob: -9.402632713317871
    8. '<div' → logprob: -9.402632713317871
    9. '/
' → logprob: -10.152632713317871
    10. '
' → logprob: -10.527632713317871

Token 390: 'ée' (ID: 2894)
  Prédit: 'uée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uée' → logprob: -0.37206321954727173
    2. 'ée' → logprob: -1.372063159942627
    3. 'uer' → logprob: -3.122063159942627
    4. 'er' → logprob: -5.497063159942627
    5. 'u' → logprob: -5.872063159942627
    6. 'ué' → logprob: -6.122063159942627
    7. 'id' → logprob: -6.372063159942627
    8. 'é' → logprob: -6.872063159942627
    9. 'ue' → logprob: -8.497063636779785
    10. 'isée' → logprob: -9.122063636779785

Token 391: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.13634400069713593
    2. '_par' → logprob: -2.5113439559936523
    3. ' par' → logprob: -3.1363439559936523
    4. '_' → logprob: -6.136343955993652
    5. '<|end|>' → logprob: -9.011343955993652
    6. ' _' → logprob: -9.511343955993652
    7. ' ' → logprob: -9.511343955993652
    8. 'sur' → logprob: -9.886343955993652
    9. '```' → logprob: -10.011343955993652
    10. '_sur' → logprob: -10.011343955993652

Token 392: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16028758883476257
    2. ' ' → logprob: -1.910287618637085
    3. ' ' → logprob: -10.285287857055664
    4. ' trois' → logprob: -11.160287857055664
    5. '1' → logprob: -13.035287857055664
    6. '```' → logprob: -13.222787857055664
    7. 'space' → logprob: -13.785287857055664
    8. ' Trois' → logprob: -14.222787857055664
    9. '<|end|>' → logprob: -14.222787857055664
    10. '³' → logprob: -14.222787857055664

Token 393: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004622137639671564
    2. ' ' → logprob: -5.379621982574463
    3. ' ' → logprob: -13.754622459411621
    4. ' trois' → logprob: -15.129622459411621
    5. '```' → logprob: -15.129622459411621
    6. '³' → logprob: -16.629621505737305
    7. ' three' → logprob: -17.129621505737305
    8. '1' → logprob: -17.567121505737305
    9. 'import' → logprob: -17.817121505737305
    10. ' Trois' → logprob: -17.817121505737305

Token 394: ' aux' (ID: 5850)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46988919377326965
    2. ',' → logprob: -1.8448891639709473
    3. ')' → logprob: -2.9698891639709473
    4. ':' → logprob: -3.2198891639709473
    5. '**' → logprob: -3.2198891639709473
    6. '
' → logprob: -4.469889163970947
    7. '```' → logprob: -4.844889163970947
    8. '_' → logprob: -5.094889163970947
    9. '[' → logprob: -5.219889163970947
    10. '(' → logprob: -5.219889163970947

Token 395: ' secondes' (ID: 109098)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -1.248461365699768
    2. 'next' → logprob: -1.873461365699768
    3. 'each' → logprob: -2.4984612464904785
    4. 'cha' → logprob: -2.7484612464904785
    5. ' prochaines' → logprob: -2.7484612464904785
    6. 'cho' → logprob: -2.8734612464904785
    7. ' prochains' → logprob: -2.8734612464904785
    8. 'ch' → logprob: -2.8734612464904785
    9. 'su' → logprob: -3.2484612464904785
    10. 'pas' → logprob: -3.2484612464904785

Token 396: ' ent' (ID: 1121)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1725276708602905
    2. ' suivantes' → logprob: -1.1725276708602905
    3. 'def' → logprob: -2.42252779006958
    4. ' suivants' → logprob: -2.79752779006958
    5. ' suivante' → logprob: -2.92252779006958
    6. ' suivant' → logprob: -4.04752779006958
    7. '**' → logprob: -4.04752779006958
    8. '.' → logprob: -4.29752779006958
    9. ' siguientes' → logprob: -4.42252779006958
    10. ' ' → logprob: -4.79752779006958

Token 397: 'ières' (ID: 44864)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.23952889442443848
    2. 'ières' → logprob: -2.2395288944244385
    3. 'iers' → logprob: -2.8645288944244385
    4. 'ier' → logprob: -3.7395288944244385
    5. 'ière' → logprob: -4.239528656005859
    6. 'rée' → logprob: -5.864528656005859
    7. 'r' → logprob: -6.239528656005859
    8. 'éro' → logprob: -6.489528656005859
    9. 'é' → logprob: -7.114528656005859
    10. 'e' → logprob: -7.114528656005859

Token 398: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3338300287723541
    2. ':' → logprob: -1.9588299989700317
    3. ',' → logprob: -2.7088301181793213
    4. ')' → logprob: -3.4588301181793213
    5. ':
' → logprob: -4.583829879760742
    6. ',
' → logprob: -5.083829879760742
    7. '):' → logprob: -5.083829879760742
    8. ' def' → logprob: -5.833829879760742
    9. '\' → logprob: -5.833829879760742
    10. '
' → logprob: -6.333829879760742

Token 399: 'ap' (ID: 403)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0399949811398983
    2. ' )' → logprob: -3.789994955062866
    3. ',' → logprob: -4.414995193481445
    4. '),' → logprob: -6.539995193481445
    5. ').' → logprob: -6.789995193481445
    6. '.' → logprob: -7.289995193481445
    7. '):' → logprob: -8.539995193481445
    8. ' ' → logprob: -9.039995193481445
    9. ',
' → logprob: -9.164995193481445
    10. ' ),' → logprob: -9.289995193481445

Token 400: 'rès' (ID: 48817)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.23438240587711334
    2. 'pend' → logprob: -2.484382390975952
    3. 'os' → logprob: -3.359382390975952
    4. 'prox' → logprob: -3.734382390975952
    5. 'r' → logprob: -3.859382390975952
    6. 'i' → logprob: -4.484382629394531
    7. 'ply' → logprob: -4.484382629394531
    8. ')' → logprob: -5.109382629394531
    9. '#' → logprob: -5.984382629394531
    10. 'pos' → logprob: -6.109382629394531

Token 401: ' le' (ID: 505)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.3746456205844879
    2. 'each' → logprob: -1.7496455907821655
    3. ' each' → logprob: -3.249645709991455
    4. 'le' → logprob: -4.124645709991455
    5. 'ch' → logprob: -4.249645709991455
    6. ' la' → logprob: -4.624645709991455
    7. ' avoir' → logprob: -5.124645709991455
    8. 'la' → logprob: -5.499645709991455
    9. 'app' → logprob: -5.499645709991455
    10. 'avoir' → logprob: -5.499645709991455

Token 402: ' ' (ID: 220)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -2.1305501461029053
    2. 'temps' → logprob: -2.5055501461029053
    3. 'prem' → logprob: -2.6305501461029053
    4. ' )' → logprob: -2.8805501461029053
    5. 'next' → logprob: -2.8805501461029053
    6. 'second' → logprob: -2.8805501461029053
    7. 'current' → logprob: -2.8805501461029053
    8. 's' → logprob: -3.1305501461029053
    9. '_' → logprob: -3.1305501461029053
    10. ' next' → logprob: -3.3805501461029053

Token 403: '1' (ID: 16)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.8232184648513794
    2. 'current' → logprob: -2.19821834564209
    3. 't' → logprob: -2.94821834564209
    4. ')' → logprob: -2.94821834564209
    5. 'next' → logprob: -3.19821834564209
    6. 's' → logprob: -3.19821834564209
    7. 'prem' → logprob: -3.19821834564209
    8. 'pas' → logprob: -3.32321834564209
    9. 'second' → logprob: -3.82321834564209
    10. 'pass' → logprob: -3.82321834564209

Token 404: 'er' (ID: 259)
  Prédit: 'ère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.5282167792320251
    2. 'e' → logprob: -1.52821683883667
    3. '0' → logprob: -2.90321683883667
    4. ')' → logprob: -3.40321683883667
    5. '**' → logprob: -3.52821683883667
    6. 'er' → logprob: -3.52821683883667
    7. 'ere' → logprob: -3.77821683883667
    8. 're' → logprob: -5.15321683883667
    9. 'è' → logprob: -5.27821683883667
    10. 's' → logprob: -6.15321683883667

Token 405: ' sec' (ID: 6312)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.642937183380127
    2. ' )' → logprob: -1.642937183380127
    3. '_' → logprob: -1.892937183380127
    4. 's' → logprob: -3.142937183380127
    5. ' ' → logprob: -3.892937183380127
    6. ' pas' → logprob: -4.142937183380127
    7. 'e' → logprob: -4.392937183380127
    8. 'pas' → logprob: -5.642937183380127
    9. ' ' → logprob: -5.892937183380127
    10. '0' → logprob: -6.142937183380127

Token 406: ',' (ID: 11)
  Prédit: 'onde'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'onde' → logprob: -0.051002856343984604
    2. ')' → logprob: -3.1760027408599854
    3. 'ond' → logprob: -6.3010029792785645
    4. '}' → logprob: -6.3010029792785645
    5. 'e' → logprob: -6.5510029792785645
    6. 'ode' → logprob: -7.6760029792785645
    7. 'conde' → logprob: -8.051002502441406
    8. '```' → logprob: -8.051002502441406
    9. '\' → logprob: -8.551002502441406
    10. 'de' → logprob: -8.676002502441406

Token 407: ' ' (ID: 220)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.8374724984169006
    2. ')' → logprob: -1.7124724388122559
    3. 'on' → logprob: -2.212472438812256
    4. '#' → logprob: -2.337472438812256
    5. '...' → logprob: -3.712472438812256
    6. '),' → logprob: -3.837472438812256
    7. ' or' → logprob: -4.587472438812256
    8. ',' → logprob: -4.712472438812256
    9. 'et' → logprob: -4.837472438812256
    10. ' ' → logprob: -4.837472438812256

Token 408: '2' (ID: 17)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.0612505674362183
    2. ' on' → logprob: -1.3112505674362183
    3. '#' → logprob: -1.5612505674362183
    4. ')' → logprob: -3.311250686645508
    5. '...' → logprob: -4.061250686645508
    6. 'et' → logprob: -4.061250686645508
    7. 'ou' → logprob: -4.436250686645508
    8. 'pos' → logprob: -4.686250686645508
    9. ' #' → logprob: -4.936250686645508
    10. ' la' → logprob: -4.936250686645508

Token 409: 'nd' (ID: 301)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5535557866096497
    2. '**' → logprob: -0.9285557866096497
    3. '3' → logprob: -5.053555965423584
    4. '*' → logprob: -5.428555965423584
    5. '^' → logprob: -6.053555965423584
    6. ')' → logprob: -6.053555965423584
    7. ' **' → logprob: -6.053555965423584
    8. '+' → logprob: -6.303555965423584
    9. '**)' → logprob: -6.428555965423584
    10. '4' → logprob: -6.678555965423584

Token 410: ' sec' (ID: 6312)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27752962708473206
    2. ' )' → logprob: -1.6525295972824097
    3. ',' → logprob: -4.902529716491699
    4. ' ,' → logprob: -5.027529716491699
    5. '**' → logprob: -5.152529716491699
    6. ' ' → logprob: -5.277529716491699
    7. ' ),' → logprob: -5.652529716491699
    8. '0' → logprob: -5.777529716491699
    9. '),' → logprob: -6.152529716491699
    10. '^' → logprob: -6.152529716491699

Token 411: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03546132892370224
    2. 'onde' → logprob: -3.78546142578125
    3. 'ond' → logprob: -5.53546142578125
    4. '}' → logprob: -6.03546142578125
    5. 'e' → logprob: -6.53546142578125
    6. 'onds' → logprob: -7.03546142578125
    7. 'ondes' → logprob: -7.16046142578125
    8. ',' → logprob: -8.28546142578125
    9. '),' → logprob: -8.28546142578125
    10. 'on' → logprob: -8.53546142578125

Token 412: ' ...' (ID: 2550)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -1.0841665267944336
    2. '3' → logprob: -1.4591665267944336
    3. ' etc' → logprob: -1.8341665267944336
    4. ' ...' → logprob: -2.4591665267944336
    5. ',' → logprob: -2.8341665267944336
    6. ' ' → logprob: -2.9591665267944336
    7. ')' → logprob: -3.4591665267944336
    8. '...)' → logprob: -4.834166526794434
    9. 'etc' → logprob: -4.959166526794434
    10. ' ou' → logprob: -5.209166526794434

Token 413: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009748768992722034
    2. ' )' → logprob: -5.634748935699463
    3. ')
' → logprob: -6.134748935699463
    4. ',' → logprob: -6.759748935699463
    5. '#' → logprob: -8.134748458862305
    6. ',
' → logprob: -8.384748458862305
    7. 'def' → logprob: -8.384748458862305
    8. '**' → logprob: -8.759748458862305
    9. '):' → logprob: -8.759748458862305
    10. '*' → logprob: -8.884748458862305

Token 414: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023190733045339584
    2. '(
' → logprob: -5.148190498352051
    3. ':' → logprob: -5.273190498352051
    4. ')' → logprob: -5.898190498352051
    5. '(' → logprob: -6.398190498352051
    6. '
' → logprob: -6.648190498352051
    7. '\' → logprob: -7.023190498352051
    8. '_' → logprob: -7.148190498352051
    9. ':
' → logprob: -7.273190498352051
    10. ',' → logprob: -7.273190498352051

Token 415: ' 
' (ID: 793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00045902872807346284
    2. 't' → logprob: -8.375458717346191
    3. '\' → logprob: -9.500458717346191
    4. 'import' → logprob: -10.250458717346191
    5. '```' → logprob: -10.250458717346191
    6. ')' → logprob: -10.500458717346191
    7. 'dfs' → logprob: -11.750458717346191
    8. '
' → logprob: -11.750458717346191
    9. ' def' → logprob: -11.875458717346191
    10. 'from' → logprob: -12.375458717346191

Token 416: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00024500858853571117
    2. 't' → logprob: -8.500245094299316
    3. '```' → logprob: -10.500245094299316
    4. 'import' → logprob: -12.125245094299316
    5. 'from' → logprob: -12.875245094299316
    6. ' def' → logprob: -13.000245094299316
    7. '
' → logprob: -13.125245094299316
    8. '#' → logprob: -14.625245094299316
    9. 'dfs' → logprob: -14.875245094299316
    10. '\' → logprob: -15.250245094299316

Token 417: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007107630372047424
    2. 'from' → logprob: -7.375710964202881
    3. 'import' → logprob: -10.625710487365723
    4. '@' → logprob: -11.250710487365723
    5. 't' → logprob: -11.250710487365723
    6. '```' → logprob: -11.250710487365723
    7. '
' → logprob: -11.750710487365723
    8. 'dfs' → logprob: -11.875710487365723
    9. 'dp' → logprob: -12.875710487365723
    10. ' def' → logprob: -14.375710487365723

Token 418: ' travaille' (ID: 92596)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024031365290284157
    2. 'continue' → logprob: -5.024031162261963
    3. 'import' → logprob: -6.024031162261963
    4. '
' → logprob: -6.149031162261963
    5. ' def' → logprob: -6.524031162261963
    6. 'contin' → logprob: -6.774031162261963
    7. ' continue' → logprob: -6.899031162261963
    8. '#' → logprob: -7.024031162261963
    9. '```' → logprob: -7.774031162261963
    10. 'n' → logprob: -7.774031162261963

Token 419: ' en' (ID: 469)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.46188321709632874
    2. 'with' → logprob: -2.461883306503296
    3. 'dans' → logprob: -2.711883306503296
    4. '=' → logprob: -2.961883306503296
    5. 'avec' → logprob: -3.086883306503296
    6. '_sur' → logprob: -3.211883306503296
    7. '```' → logprob: -3.836883306503296
    8. 'on' → logprob: -4.711883068084717
    9. ' avec' → logprob: -4.711883068084717
    10. 'à' → logprob: -5.211883068084717

Token 420: ' distance' (ID: 9324)
  Prédit: 'mill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mill' → logprob: -1.5912433862686157
    2. 'pos' → logprob: -2.341243267059326
    3. 'float' → logprob: -2.341243267059326
    4. 'seconds' → logprob: -2.341243267059326
    5. 'def' → logprob: -2.966243267059326
    6. 'ms' → logprob: -3.216243267059326
    7. 'milliseconds' → logprob: -3.341243267059326
    8. 'python' → logprob: -3.466243267059326
    9. ' secondes' → logprob: -3.466243267059326
    10. 'temps' → logprob: -3.466243267059326

Token 421: ' restante' (ID: 130202)
  Prédit: '_remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -0.23598961532115936
    2. '_' → logprob: -2.360989570617676
    3. '_rest' → logprob: -3.235989570617676
    4. '_to' → logprob: -3.360989570617676
    5. ' =' → logprob: -4.360989570617676
    6. '=' → logprob: -4.985989570617676
    7. ',' → logprob: -5.735989570617676
    8. ')' → logprob: -5.735989570617676
    9. '_left' → logprob: -6.485989570617676
    10. 'import' → logprob: -6.485989570617676

Token 422: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014832140877842903
    2. '```' → logprob: -5.264832019805908
    3. '
' → logprob: -5.514832019805908
    4. 't' → logprob: -6.014832019805908
    5. ':' → logprob: -7.014832019805908
    6. ':
' → logprob: -8.014832496643066
    7. '\' → logprob: -8.264832496643066
    8. ')' → logprob: -8.264832496643066
    9. '(
' → logprob: -8.514832496643066
    10. '

' → logprob: -8.514832496643066

Token 423: 'reste' (ID: 84661)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1625268459320068
    2. '=' → logprob: -1.2875268459320068
    3. ')' → logprob: -1.7875268459320068
    4. ' =' → logprob: -2.662526845932007
    5. '),' → logprob: -3.162526845932007
    6. ' t' → logprob: -3.662526845932007
    7. 'rest' → logprob: -3.912526845932007
    8. ',' → logprob: -3.912526845932007
    9. 'pos' → logprob: -4.537527084350586
    10. '=t' → logprob: -5.287527084350586

Token 424: ').' (ID: 741)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3170030415058136
    2. ' =' → logprob: -1.6920030117034912
    3. '=' → logprob: -3.067003011703491
    4. ')' → logprob: -3.942003011703491
    5. ' _' → logprob: -5.56700325012207
    6. '_remaining' → logprob: -5.94200325012207
    7. '_)' → logprob: -6.44200325012207
    8. '_d' → logprob: -6.69200325012207
    9. '_=' → logprob: -6.69200325012207
    10. 'd' → logprob: -6.81700325012207

Token 425: ' Comme' (ID: 53252)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0021325370762497187
    2. ':' → logprob: -7.002132415771484
    3. '```' → logprob: -7.627132415771484
    4. '
' → logprob: -8.877132415771484
    5. ':def' → logprob: -9.002132415771484
    6. 't' → logprob: -9.127132415771484
    7. '\' → logprob: -9.752132415771484
    8. ')' → logprob: -9.752132415771484
    9. ':
' → logprob: -10.002132415771484
    10. ' def' → logprob: -10.127132415771484

Token 426: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.320792317390442
    2. ' la' → logprob: -1.820792317390442
    3. 'la' → logprob: -1.945792317390442
    4. 'on' → logprob: -2.5707921981811523
    5. 'le' → logprob: -2.5707921981811523
    6. 'reste' → logprob: -2.5707921981811523
    7. 't' → logprob: -3.4457921981811523
    8. 'rest' → logprob: -3.6957921981811523
    9. 'def' → logprob: -3.9457921981811523
    10. '#' → logprob: -4.070792198181152

Token 427: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.8357322812080383
    2. 've' → logprob: -1.7107322216033936
    3. 'reste' → logprob: -2.0857322216033936
    4. 'veux' → logprob: -3.0857322216033936
    5. 'est' → logprob: -3.4607322216033936
    6. 's' → logprob: -3.5857322216033936
    7. 'continue' → logprob: -3.8357322216033936
    8. 'part' → logprob: -3.9607322216033936
    9. 'n' → logprob: -4.085732460021973
    10. 'trav' → logprob: -4.460732460021973

Token 428: ' avancer' (ID: 151163)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -1.3398796319961548
    2. 'faire' → logprob: -2.0898795127868652
    3. 're' → logprob: -2.3398795127868652
    4. 'contin' → logprob: -2.5898795127868652
    5. 'aller' → logprob: -2.5898795127868652
    6. 'repr' → logprob: -2.7148795127868652
    7. 'arr' → logprob: -3.0898795127868652
    8. 'part' → logprob: -3.4648795127868652
    9. 'tr' → logprob: -3.8398795127868652
    10. 'penser' → logprob: -4.339879512786865

Token 429: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.5739078521728516
    2. 'de' → logprob: -1.6989078521728516
    3. '=' → logprob: -1.9489078521728516
    4. ' d' → logprob: -2.1989078521728516
    5. 'd' → logprob: -3.0739078521728516
    6. ' à' → logprob: -3.0739078521728516
    7. 'à' → logprob: -3.4489078521728516
    8. 'dans' → logprob: -3.5739078521728516
    9. ',' → logprob: -3.8239078521728516
    10. '-' → logprob: -3.9489078521728516

Token 430: ' vitesse' (ID: 71752)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cha' → logprob: -1.3184982538223267
    2. 'tout' → logprob: -1.9434982538223267
    3. 'n' → logprob: -2.068498134613037
    4. 't' → logprob: -2.193498134613037
    5. 'une' → logprob: -2.443498134613037
    6. ' chaque' → logprob: -2.568498134613037
    7. 'la' → logprob: -2.818498134613037
    8. 'pas' → logprob: -3.443498134613037
    9. 'v' → logprob: -4.318498134613037
    10. 'l' → logprob: -4.318498134613037

Token 431: ' v' (ID: 323)
  Prédit: ' normale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' normale' → logprob: -0.3384591341018677
    2. ' normal' → logprob: -2.713459014892578
    3. '=' → logprob: -3.588459014892578
    4. ' *' → logprob: -3.963459014892578
    5. ' /' → logprob: -3.963459014892578
    6. '3' → logprob: -4.088459014892578
    7. ' =' → logprob: -4.338459014892578
    8. '*' → logprob: -4.338459014892578
    9. ' +' → logprob: -4.463459014892578
    10. '+' → logprob: -4.588459014892578

Token 432: ' pendant' (ID: 22611)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4637306034564972
    2. ',' → logprob: -1.9637305736541748
    3. ' =' → logprob: -2.713730573654175
    4. '*' → logprob: -3.463730573654175
    5. ',
' → logprob: -4.088730812072754
    6. ')' → logprob: -4.088730812072754
    7. 'e' → logprob: -4.463730812072754
    8. 'al' → logprob: -4.713730812072754
    9. '+' → logprob: -4.963730812072754
    10. 'alue' → logprob: -5.463730812072754

Token 433: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6446173787117004
    2. 'une' → logprob: -1.8946173191070557
    3. ' une' → logprob: -1.8946173191070557
    4. ' ' → logprob: -2.2696173191070557
    5. ' chaque' → logprob: -3.8946173191070557
    6. ' la' → logprob: -4.269617557525635
    7. 'le' → logprob: -4.394617557525635
    8. 'la' → logprob: -5.269617557525635
    9. 'l' → logprob: -5.644617557525635
    10. ' le' → logprob: -5.894617557525635

Token 434: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04192328453063965
    2. 'une' → logprob: -3.5419232845306396
    3. 'la' → logprob: -5.541923522949219
    4. 'le' → logprob: -6.291923522949219
    5. ' ' → logprob: -6.291923522949219
    6. 'cha' → logprob: -6.541923522949219
    7. 'each' → logprob: -7.541923522949219
    8. 'ch' → logprob: -7.791923522949219
    9. 'reste' → logprob: -7.791923522949219
    10. ' chaque' → logprob: -8.041923522949219

Token 435: ' seconde' (ID: 66204)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9145224094390869
    2. ' *' → logprob: -2.039522409439087
    3. ' ' → logprob: -2.289522409439087
    4. ' seconde' → logprob: -2.539522409439087
    5. 'se' → logprob: -3.539522409439087
    6. '*' → logprob: -3.539522409439087
    7. ' _' → logprob: -3.664522409439087
    8. ' ' → logprob: -3.664522409439087
    9. ' -' → logprob: -3.789522409439087
    10. '```' → logprob: -4.039522171020508

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045929621905088425
    2. ',
' → logprob: -3.7959296703338623
    3. ' ,' → logprob: -5.045929431915283
    4. ')' → logprob: -5.420929431915283
    5. ':' → logprob: -5.545929431915283
    6. '),' → logprob: -6.045929431915283
    7. '```' → logprob: -6.295929431915283
    8. '.' → logprob: -7.545929431915283
    9. '=' → logprob: -8.170929908752441
    10. 'def' → logprob: -8.545929908752441

Token 437: ' puis' (ID: 18766)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.42716601490974426
    2. '#' → logprob: -2.177165985107422
    3. ' on' → logprob: -2.177165985107422
    4. ' reste' → logprob: -2.427165985107422
    5. 'on' → logprob: -4.552165985107422
    6. ' #' → logprob: -4.677165985107422
    7. 'rest' → logprob: -5.677165985107422
    8. ' il' → logprob: -5.927165985107422
    9. 'def' → logprob: -6.427165985107422
    10. 'le' → logprob: -6.927165985107422

Token 438: ' changer' (ID: 47099)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.3468351364135742
    2. 'changer' → logprob: -1.9718351364135742
    3. 're' → logprob: -2.346835136413574
    4. ' changer' → logprob: -2.721835136413574
    5. 'faire' → logprob: -2.721835136413574
    6. 'cho' → logprob: -2.846835136413574
    7. ' app' → logprob: -3.096835136413574
    8. 'pass' → logprob: -3.221835136413574
    9. 'on' → logprob: -3.221835136413574
    10. ' choisir' → logprob: -3.971835136413574

Token 439: ' la' (ID: 557)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0693464279174805
    2. 'de' → logprob: -1.4443464279174805
    3. '_' → logprob: -2.3193464279174805
    4. 'v' → logprob: -2.4443464279174805
    5. '_v' → logprob: -2.5693464279174805
    6. ' la' → logprob: -3.0693464279174805
    7. '_de' → logprob: -3.0693464279174805
    8. ' _' → logprob: -4.3193464279174805
    9. ' ' → logprob: -4.8193464279174805
    10. ' vitesse' → logprob: -5.0693464279174805

Token 440: ' vitesse' (ID: 71752)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04025322571396828
    2. ' vitesse' → logprob: -4.040253162384033
    3. 'reste' → logprob: -4.540253162384033
    4. '_v' → logprob: -5.790253162384033
    5. ' reste' → logprob: -5.915253162384033
    6. ' v' → logprob: -6.540253162384033
    7. 'rest' → logprob: -7.165253162384033
    8. '```' → logprob: -7.540253162384033
    9. 're' → logprob: -7.790253162384033
    10. ' ' → logprob: -7.790253162384033

Token 441: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07597553730010986
    2. ' ou' → logprob: -3.7009754180908203
    3. ' ,' → logprob: -4.32597541809082
    4. ',
' → logprob: -5.20097541809082
    5. '.' → logprob: -5.45097541809082
    6. ' pour' → logprob: -6.07597541809082
    7. '#' → logprob: -6.32597541809082
    8. '```' → logprob: -6.32597541809082
    9. '=' → logprob: -6.45097541809082
    10. ' ' → logprob: -6.57597541809082

Token 442: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35141444206237793
    2. ':' → logprob: -1.476414442062378
    3. ':
' → logprob: -2.976414442062378
    4. ')' → logprob: -5.226414680480957
    5. ',' → logprob: -6.351414680480957
    6. '(
' → logprob: -6.351414680480957
    7. '_' → logprob: -6.476414680480957
    8. ',
' → logprob: -6.601414680480957
    9. ':def' → logprob: -7.226414680480957
    10. ' def' → logprob: -7.476414680480957

Token 443: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000696111936122179
    2. '```' → logprob: -7.375696182250977
    3. 'from' → logprob: -10.500696182250977
    4. 't' → logprob: -10.750696182250977
    5. '
' → logprob: -11.625696182250977
    6. 'import' → logprob: -12.625696182250977
    7. '@' → logprob: -13.125696182250977
    8. ')' → logprob: -13.750696182250977
    9. '``' → logprob: -13.875696182250977
    10. ' def' → logprob: -14.000696182250977

Token 444: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012734467163681984
    2. '@' → logprob: -8.251273155212402
    3. 't' → logprob: -8.376273155212402
    4. '```' → logprob: -8.376273155212402
    5. ':' → logprob: -8.626273155212402
    6. ')' → logprob: -9.001273155212402
    7. '(' → logprob: -9.876273155212402
    8. '(
' → logprob: -10.251273155212402
    9. 'import' → logprob: -10.501273155212402
    10. '\' → logprob: -10.501273155212402

Token 445: ' utilise' (ID: 70283)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004090747330337763
    2. ' def' → logprob: -5.629090785980225
    3. 'continue' → logprob: -9.379090309143066
    4. '_continue' → logprob: -10.004090309143066
    5. 'define' → logprob: -10.379090309143066
    6. '_' → logprob: -10.379090309143066
    7. 'import' → logprob: -10.754090309143066
    8. ' veut' → logprob: -10.754090309143066
    9. '
' → logprob: -10.754090309143066
    10. ' =' → logprob: -10.879090309143066

Token 446: ' une' (ID: 2463)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.14676767587661743
    2. '@' → logprob: -2.1467676162719727
    3. 'import' → logprob: -5.021767616271973
    4. 'l' → logprob: -5.271767616271973
    5. 'fun' → logprob: -5.521767616271973
    6. 'un' → logprob: -6.271767616271973
    7. '```' → logprob: -7.646767616271973
    8. ' from' → logprob: -7.896767616271973
    9. 'def' → logprob: -8.271767616271973
    10. ' une' → logprob: -8.521767616271973

Token 447: ' fonction' (ID: 17610)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.153158038854599
    2. '@' → logprob: -2.778157949447632
    3. 'def' → logprob: -3.028157949447632
    4. 'import' → logprob: -4.528158187866211
    5. 'cache' → logprob: -4.528158187866211
    6. 'd' → logprob: -5.278158187866211
    7. ' from' → logprob: -6.278158187866211
    8. 'l' → logprob: -6.903158187866211
    9. 'memo' → logprob: -7.278158187866211
    10. 'dict' → logprob: -7.653158187866211

Token 448: ' réc' (ID: 36254)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05727068707346916
    2. 'dfs' → logprob: -3.0572707653045654
    3. 'memo' → logprob: -5.932270526885986
    4. '@' → logprob: -5.932270526885986
    5. '
' → logprob: -6.682270526885986
    6. 'dp' → logprob: -7.682270526885986
    7. 'cache' → logprob: -7.807270526885986
    8. ' dfs' → logprob: -7.932270526885986
    9. 'min' → logprob: -8.557271003723145
    10. 'from' → logprob: -8.932271003723145

Token 449: 'ursive' (ID: 30543)
  Prédit: 'ursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursive' → logprob: -0.26093196868896484
    2. 'def' → logprob: -1.6359319686889648
    3. 'ursion' → logprob: -3.760931968688965
    4. 'u' → logprob: -5.510931968688965
    5. 'urs' → logprob: -5.510931968688965
    6. 'ur' → logprob: -6.010931968688965
    7. 'urse' → logprob: -8.260931968688965
    8. '_' → logprob: -8.510931968688965
    9. '
' → logprob: -8.510931968688965
    10. '   ' → logprob: -9.385931968688965

Token 450: ' f' (ID: 285)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01614651083946228
    2. '(
' → logprob: -4.641146659851074
    3. '(' → logprob: -6.016146659851074
    4. '```' → logprob: -6.266146659851074
    5. ')' → logprob: -7.766146659851074
    6. ':' → logprob: -8.016146659851074
    7. '
' → logprob: -8.266146659851074
    8. ':def' → logprob: -9.391146659851074
    9. ',' → logprob: -9.516146659851074
    10. 'dfs' → logprob: -9.516146659851074

Token 451: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6876091361045837
    2. '(rest' → logprob: -0.9376091361045837
    3. '(re' → logprob: -3.1876091957092285
    4. 'def' → logprob: -3.3126091957092285
    5. 'reste' → logprob: -5.0626091957092285
    6. 'rest' → logprob: -5.1876091957092285
    7. '(n' → logprob: -5.4376091957092285
    8. 'unct' → logprob: -6.5626091957092285
    9. ' (' → logprob: -6.9376091957092285
    10. '(ro' → logprob: -7.5626091957092285

Token 452: 'remaining' (ID: 83570)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.016586389392614365
    2. 'rest' → logprob: -4.5165863037109375
    3. ')' → logprob: -6.2665863037109375
    4. ',' → logprob: -6.7665863037109375
    5. '),' → logprob: -7.6415863037109375
    6. ' reste' → logprob: -7.6415863037109375
    7. 'pos' → logprob: -8.266586303710938
    8. '   ' → logprob: -8.516586303710938
    9. 't' → logprob: -8.891586303710938
    10. 're' → logprob: -9.016586303710938

Token 453: '_distance' (ID: 45537)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37056422233581543
    2. '_' → logprob: -2.2455642223358154
    3. ',' → logprob: -2.3705642223358154
    4. '_time' → logprob: -3.1205642223358154
    5. '_distance' → logprob: -3.7455642223358154
    6. '_remaining' → logprob: -4.6205644607543945
    7. '_rest' → logprob: -5.1205644607543945
    8. '_,' → logprob: -5.4955644607543945
    9. '_re' → logprob: -5.7455644607543945
    10. ')_' → logprob: -5.8705644607543945

Token 454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053928300738334656
    2. ')' → logprob: -3.3039283752441406
    3. ',
' → logprob: -4.803928375244141
    4. ' ,' → logprob: -5.803928375244141
    5. '[' → logprob: -7.053928375244141
    6. '):' → logprob: -7.553928375244141
    7. '):
' → logprob: -7.553928375244141
    8. '```' → logprob: -7.803928375244141
    9. '_remaining' → logprob: -7.803928375244141
    10. '),' → logprob: -8.05392837524414

Token 455: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.3784898817539215
    2. ' speed' → logprob: -1.3784898519515991
    3. 'k' → logprob: -3.6284899711608887
    4. 'current' → logprob: -4.128489971160889
    5. ' current' → logprob: -5.003489971160889
    6. 'remaining' → logprob: -5.003489971160889
    7. ' k' → logprob: -6.128489971160889
    8. 'v' → logprob: -6.128489971160889
    9. ' remaining' → logprob: -6.753489971160889
    10. 'curr' → logprob: -8.37848949432373

Token 456: '_ex' (ID: 5724)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6234493255615234
    2. ')' → logprob: -0.8734493255615234
    3. '):' → logprob: -3.2484493255615234
    4. '):
' → logprob: -5.248449325561523
    5. '),' → logprob: -7.373449325561523
    6. ' ,' → logprob: -7.998449325561523
    7. ')=' → logprob: -8.123449325561523
    8. ')**' → logprob: -8.873449325561523
    9. '):

' → logprob: -8.998449325561523
    10. ')
' → logprob: -9.248449325561523

Token 457: 'ponent' (ID: 1758)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03856901079416275
    2. 'ponent' → logprob: -3.2885689735412598
    3. 'pos' → logprob: -9.038569450378418
    4. 'pon' → logprob: -9.288569450378418
    5. 'po' → logprob: -9.538569450378418
    6. '```' → logprob: -10.163569450378418
    7. 'pr' → logprob: -10.663569450378418
    8. '=' → logprob: -10.663569450378418
    9. 'pow' → logprob: -10.788569450378418
    10. ')' → logprob: -11.288569450378418

Token 458: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07110145688056946
    2. ',' → logprob: -3.571101427078247
    3. '):' → logprob: -3.821101427078247
    4. '):
' → logprob: -4.946101665496826
    5. 's' → logprob: -6.196101665496826
    6. ')=' → logprob: -6.446101665496826
    7. '[' → logprob: -6.821101665496826
    8. ')**' → logprob: -6.946101665496826
    9. '),' → logprob: -7.071101665496826
    10. '_' → logprob: -7.696101665496826

Token 459: '#
' (ID: 11240)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9405456781387329
    2. ':
' → logprob: -0.9405456781387329
    3. 'def' → logprob: -1.690545678138733
    4. '(
' → logprob: -4.440545558929443
    5. '):' → logprob: -5.315545558929443
    6. '```' → logprob: -5.315545558929443
    7. ')' → logprob: -5.565545558929443
    8. '(' → logprob: -6.315545558929443
    9. '):
' → logprob: -6.315545558929443
    10. ':def' → logprob: -6.690545558929443

Token 460: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2838922441005707
    2. ':' → logprob: -1.783892273902893
    3. ':
' → logprob: -3.0338921546936035
    4. '```' → logprob: -4.9088921546936035
    5. '(
' → logprob: -5.0338921546936035
    6. '):' → logprob: -5.1588921546936035
    7. ':def' → logprob: -5.6588921546936035
    8. ')' → logprob: -5.6588921546936035
    9. '):
' → logprob: -7.0338921546936035
    10. '(' → logprob: -7.2838921546936035

Token 461: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11404014378786087
    2. ':' → logprob: -2.8640401363372803
    3. ')' → logprob: -3.8640401363372803
    4. '(
' → logprob: -4.239040374755859
    5. ':
' → logprob: -4.989040374755859
    6. '(' → logprob: -6.114040374755859
    7. '):' → logprob: -6.739040374755859
    8. '\' → logprob: -6.739040374755859
    9. ':def' → logprob: -7.489040374755859
    10. '```' → logprob: -7.614040374755859

Token 462: ' impl' (ID: 15443)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6503127217292786
    2. '(
' → logprob: -1.5253126621246338
    3. 'def' → logprob: -1.6503126621246338
    4. '_' → logprob: -3.525312662124634
    5. 'f' → logprob: -4.025312900543213
    6. ' (' → logprob: -5.525312900543213
    7. '[' → logprob: -5.775312900543213
    8. ' def' → logprob: -5.900312900543213
    9. '
' → logprob: -6.150312900543213
    10. '(f' → logprob: -6.150312900543213

Token 463: 'é' (ID: 377)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.4667532444000244
    2. 'def' → logprob: -2.0917532444000244
    3. 'mente' → logprob: -2.2167532444000244
    4. 'ément' → logprob: -2.7167532444000244
    5. 'ement' → logprob: -3.2167532444000244
    6. 'é' → logprob: -4.091753005981445
    7. 'm' → logprob: -5.841753005981445
    8. 'ments' → logprob: -6.091753005981445
    9. 'men' → logprob: -6.466753005981445
    10. 't' → logprob: -6.841753005981445

Token 464: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0665353462100029
    2. 'def' → logprob: -3.691535234451294
    3. 'men' → logprob: -4.816535472869873
    4. 'nt' → logprob: -4.816535472869873
    5. 'mente' → logprob: -4.941535472869873
    6. 'ments' → logprob: -4.941535472869873
    7. 'm' → logprob: -6.066535472869873
    8. '```' → logprob: -6.441535472869873
    9. 'n' → logprob: -7.191535472869873
    10. 'mented' → logprob: -7.441535472869873

Token 465: ' seulement' (ID: 32072)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007136124651879072
    2. '```' → logprob: -5.507136344909668
    3. '
' → logprob: -6.257136344909668
    4. 'import' → logprob: -7.507136344909668
    5. 'from' → logprob: -7.882136344909668
    6. '``' → logprob: -10.382136344909668
    7. ' def' → logprob: -10.507136344909668
    8. '@' → logprob: -10.632136344909668
    9. '(
' → logprob: -10.757136344909668
    10. 'f' → logprob: -11.007136344909668

Token 466: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00014609156642109156
    2. '
' → logprob: -9.25014591217041
    3. ' def' → logprob: -11.12514591217041
    4. '```' → logprob: -11.37514591217041
    5. 'import' → logprob: -11.50014591217041
    6. 'from' → logprob: -12.25014591217041
    7. ')' → logprob: -12.87514591217041
    8. ':def' → logprob: -13.25014591217041
    9. ':' → logprob: -13.75014591217041
    10. 'f' → logprob: -14.25014591217041

Token 467: ' distances' (ID: 48294)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5630195736885071
    2. 't' → logprob: -1.9380195140838623
    3. 'remaining' → logprob: -2.0630195140838623
    4. 'pos' → logprob: -2.8130195140838623
    5. 'rest' → logprob: -3.5630195140838623
    6. 'int' → logprob: -4.438019752502441
    7. 'reste' → logprob: -4.563019752502441
    8. ' t' → logprob: -5.063019752502441
    9. 'f' → logprob: -5.063019752502441
    10. ' def' → logprob: -5.188019752502441

Token 468: ' ent' (ID: 1121)
  Prédit: '_remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -0.6433669328689575
    2. 'def' → logprob: -1.8933669328689575
    3. '_rest' → logprob: -2.643366813659668
    4. '_int' → logprob: -3.143366813659668
    5. '_' → logprob: -3.268366813659668
    6. ')' → logprob: -3.768366813659668
    7. 'rest' → logprob: -3.893366813659668
    8. ' =' → logprob: -4.018366813659668
    9. 'import' → logprob: -4.143366813659668
    10. '=' → logprob: -4.393366813659668

Token 469: 'ières' (ID: 44864)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.9555522203445435
    2. 'iers' → logprob: -1.8305522203445435
    3. 'ière' → logprob: -1.9555522203445435
    4. 'er' → logprob: -2.580552101135254
    5. 'e' → logprob: -3.455552101135254
    6. 'def' → logprob: -3.830552101135254
    7. '```' → logprob: -3.830552101135254
    8. 'ire' → logprob: -3.830552101135254
    9. 't' → logprob: -4.080552101135254
    10. ']' → logprob: -4.080552101135254

Token 470: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23044942319393158
    2. ':' → logprob: -2.4804494380950928
    3. '```' → logprob: -3.3554494380950928
    4. '(
' → logprob: -3.6054494380950928
    5. ':
' → logprob: -3.8554494380950928
    6. '
' → logprob: -3.9804494380950928
    7. ')' → logprob: -5.355449199676514
    8. '):' → logprob: -5.730449199676514
    9. '(' → logprob: -6.105449199676514
    10. ':def' → logprob: -6.230449199676514

Token 471: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030282748863101006
    2. ' )' → logprob: -4.530282974243164
    3. 'int' → logprob: -4.780282974243164
    4. 'def' → logprob: -5.655282974243164
    5. '[int' → logprob: -6.155282974243164
    6. '):' → logprob: -7.030282974243164
    7. ',' → logprob: -7.280282974243164
    8. ':' → logprob: -7.780282974243164
    9. '_' → logprob: -8.155282974243164
    10. '(int' → logprob: -8.405282974243164

Token 472: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.6747775673866272
    2. 't' → logprob: -1.0497775077819824
    3. ')' → logprob: -2.5497775077819824
    4. ' )' → logprob: -4.299777507781982
    5. ' la' → logprob: -4.549777507781982
    6. ' ' → logprob: -4.549777507781982
    7. ' the' → logprob: -5.549777507781982
    8. ' le' → logprob: -5.674777507781982
    9. ' pos' → logprob: -6.049777507781982
    10. 'pos' → logprob: -6.174777507781982

Token 473: ' entier' (ID: 80473)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6829622387886047
    2. ')' → logprob: -0.9329622387886047
    3. '=' → logprob: -3.30796217918396
    4. ' =' → logprob: -4.682962417602539
    5. '```' → logprob: -4.932962417602539
    6. ' _' → logprob: -5.182962417602539
    7. 'def' → logprob: -5.307962417602539
    8. '**' → logprob: -5.682962417602539
    9. '[' → logprob: -5.682962417602539
    10. ',' → logprob: -5.807962417602539

Token 474: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03690575063228607
    2. 'def' → logprob: -3.9119057655334473
    3. '):' → logprob: -6.036905765533447
    4. ':' → logprob: -6.161905765533447
    5. '_' → logprob: -6.161905765533447
    6. '```' → logprob: -6.536905765533447
    7. ',' → logprob: -6.661905765533447
    8. '**' → logprob: -6.786905765533447
    9. '
' → logprob: -7.161905765533447
    10. 's' → logprob: -7.536905765533447

Token 475: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15587443113327026
    2. ')' → logprob: -2.655874490737915
    3. ':' → logprob: -3.280874490737915
    4. '):' → logprob: -4.405874252319336
    5. '```' → logprob: -4.405874252319336
    6. ' def' → logprob: -6.530874252319336
    7. ')\' → logprob: -6.655874252319336
    8. ',' → logprob: -6.655874252319336
    9. ' :' → logprob: -6.780874252319336
    10. 't' → logprob: -7.280874252319336

Token 476: ' speed' (ID: 7733)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9877368211746216
    2. '#' → logprob: -1.4877368211746216
    3. 'pos' → logprob: -1.9877368211746216
    4. 'on' → logprob: -2.487736701965332
    5. 'speed' → logprob: -3.112736701965332
    6. 'reste' → logprob: -3.612736701965332
    7. 'v' → logprob: -3.862736701965332
    8. 't' → logprob: -4.612736701965332
    9. 'pour' → logprob: -4.612736701965332
    10. 'la' → logprob: -5.112736701965332

Token 477: ' est' (ID: 893)
  Prédit: '_ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ex' → logprob: -0.0030630340334028006
    2. '_' → logprob: -7.003063201904297
    3. '_exp' → logprob: -7.503063201904297
    4. ')' → logprob: -7.503063201904297
    5. ')_' → logprob: -7.878063201904297
    6. ' _' → logprob: -9.378063201904297
    7. ']_' → logprob: -9.378063201904297
    8. 'ex' → logprob: -9.753063201904297
    9. ' =' → logprob: -10.253063201904297
    10. '**' → logprob: -10.503063201904297

Token 478: ' puissance' (ID: 63494)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' an' → logprob: -1.447774887084961
    2. ' un' → logprob: -1.572774887084961
    3. 'int' → logprob: -2.322774887084961
    4. 'an' → logprob: -2.572774887084961
    5. 'represented' → logprob: -2.572774887084961
    6. ' toujours' → logprob: -2.697774887084961
    7. ' represented' → logprob: -2.947774887084961
    8. 'un' → logprob: -3.197774887084961
    9. ' always' → logprob: -3.322774887084961
    10. ' int' → logprob: -3.822774887084961

Token 479: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5746310353279114
    2. 'of' → logprob: -2.1996309757232666
    3. ' de' → logprob: -2.3246309757232666
    4. '_de' → logprob: -3.0746309757232666
    5. ')' → logprob: -3.1996309757232666
    6. '**' → logprob: -3.6996309757232666
    7. '```' → logprob: -3.8246309757232666
    8. '_' → logprob: -3.9496309757232666
    9. '_of' → logprob: -3.9496309757232666
    10. '(
' → logprob: -4.449631214141846

Token 480: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0012632098514586687
    2. '-' → logprob: -7.12626314163208
    3. ' ' → logprob: -7.75126314163208
    4. ' trois' → logprob: -11.501263618469238
    5. '```' → logprob: -12.251263618469238
    6. ' -' → logprob: -12.501263618469238
    7. ' Trois' → logprob: -13.001263618469238
    8. 'three' → logprob: -13.251263618469238
    9. 't' → logprob: -13.751263618469238
    10. 'tro' → logprob: -13.876263618469238

Token 481: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0003243798855692148
    2. '-' → logprob: -8.125324249267578
    3. ' ' → logprob: -10.625324249267578
    4. '```' → logprob: -13.500324249267578
    5. ' -' → logprob: -14.250324249267578
    6. ' trois' → logprob: -14.625324249267578
    7. 'three' → logprob: -14.625324249267578
    8. ' Trois' → logprob: -15.000324249267578
    9. 't' → logprob: -15.875324249267578
    10. '`' → logprob: -16.375324249267578

Token 482: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3436524569988251
    2. ':' → logprob: -1.8436524868011475
    3. ':
' → logprob: -2.9686524868011475
    4. '(
' → logprob: -3.5936524868011475
    5. '```' → logprob: -3.8436524868011475
    6. '(' → logprob: -4.843652248382568
    7. ')' → logprob: -4.968652248382568
    8. '):' → logprob: -5.468652248382568
    9. '
' → logprob: -5.843652248382568
    10. ':def' → logprob: -5.968652248382568

Token 483: 'don' (ID: 22130)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06263412535190582
    2. '**' → logprob: -3.812634229660034
    3. ').' → logprob: -4.812633991241455
    4. ',' → logprob: -4.937633991241455
    5. 'def' → logprob: -5.312633991241455
    6. ')**' → logprob: -5.812633991241455
    7. '```' → logprob: -5.937633991241455
    8. ' )' → logprob: -5.937633991241455
    9. '.' → logprob: -7.187633991241455
    10. '])' → logprob: -7.187633991241455

Token 484: 'c' (ID: 66)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.18895214796066284
    2. 't' → logprob: -1.8139522075653076
    3. 'é' → logprob: -5.1889519691467285
    4. 'ée' → logprob: -6.4389519691467285
    5. 'nées' → logprob: -6.8139519691467285
    6. ')' → logprob: -8.438952445983887
    7. 'née' → logprob: -9.438952445983887
    8. '')' → logprob: -9.563952445983887
    9. 'ées' → logprob: -9.813952445983887
    10. ''t' → logprob: -9.938952445983887

Token 485: ' on' (ID: 402)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4281900227069855
    2. ' int' → logprob: -1.178189992904663
    3. ')' → logprob: -3.928189992904663
    4. 'integer' → logprob: -5.178190231323242
    5. ' an' → logprob: -5.803190231323242
    6. ' integer' → logprob: -6.178190231323242
    7. 'def' → logprob: -7.303190231323242
    8. 'n' → logprob: -7.553190231323242
    9. 'inte' → logprob: -7.553190231323242
    10. 'ex' → logprob: -7.678190231323242

Token 486: ' peut' (ID: 9216)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08201079070568085
    2. ' )' → logprob: -3.3320107460021973
    3. '_' → logprob: -4.832010746002197
    4. ' can' → logprob: -5.082010746002197
    5. '**' → logprob: -5.707010746002197
    6. ' **' → logprob: -5.707010746002197
    7. ' _' → logprob: -5.832010746002197
    8. ' def' → logprob: -5.957010746002197
    9. ' continue' → logprob: -6.207010746002197
    10. '```' → logprob: -6.332010746002197

Token 487: ' stock' (ID: 6546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5608697533607483
    2. 'def' → logprob: -1.0608696937561035
    3. ' def' → logprob: -4.8108696937561035
    4. ']' → logprob: -4.8108696937561035
    5. '])' → logprob: -5.1858696937561035
    6. 'import' → logprob: -5.4358696937561035
    7. ' )' → logprob: -5.4358696937561035
    8. '   ' → logprob: -5.8108696937561035
    9. 'pas' → logprob: -5.9358696937561035
    10. 'cache' → logprob: -5.9358696937561035

Token 488: 'er' (ID: 259)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3864809274673462
    2. '_' → logprob: -1.5114809274673462
    3. 'e' → logprob: -2.1364808082580566
    4. ')' → logprob: -2.1364808082580566
    5. ']' → logprob: -2.2614808082580566
    6. 'er' → logprob: -2.2614808082580566
    7. '=' → logprob: -2.8864808082580566
    8. 'é' → logprob: -4.386480808258057
    9. ' =' → logprob: -5.636480808258057
    10. '[
' → logprob: -6.136480808258057

Token 489: ' l' (ID: 305)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06587806344032288
    2. '[' → logprob: -3.56587815284729
    3. '[
' → logprob: -4.815877914428711
    4. '{' → logprob: -4.940877914428711
    5. ']' → logprob: -5.440877914428711
    6. '_' → logprob: -5.565877914428711
    7. ' )' → logprob: -6.940877914428711
    8. '(
' → logprob: -6.940877914428711
    9. '(' → logprob: -7.065877914428711
    10. ',' → logprob: -7.065877914428711

Token 490: ''ex' (ID: 23472)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7849431037902832
    2. ')' → logprob: -1.6599431037902832
    3. 'e' → logprob: -1.6599431037902832
    4. ']' → logprob: -3.409943103790283
    5. 'ine' → logprob: -3.909943103790283
    6. '')' → logprob: -4.159943103790283
    7. 'n' → logprob: -4.659943103790283
    8. 'a' → logprob: -4.784943103790283
    9. '_
' → logprob: -5.409943103790283
    10. '}' → logprob: -5.409943103790283

Token 491: 'pos' (ID: 1103)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011066801846027374
    2. 'ponent' → logprob: -5.136066913604736
    3. '_' → logprob: -6.011066913604736
    4. ')' → logprob: -6.636066913604736
    5. '-' → logprob: -8.761066436767578
    6. '}' → logprob: -9.011066436767578
    7. '```' → logprob: -9.011066436767578
    8. 'pr' → logprob: -9.136066436767578
    9. 'e' → logprob: -9.386066436767578
    10. 't' → logprob: -9.761066436767578

Token 492: 'ant' (ID: 493)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.31426289677619934
    2. ')' → logprob: -1.564262866973877
    3. 'ant' → logprob: -3.189262866973877
    4. '}' → logprob: -5.689262866973877
    5. 'ponent' → logprob: -5.814262866973877
    6. 'onent' → logprob: -5.814262866973877
    7. 'ient' → logprob: -6.314262866973877
    8. 't' → logprob: -6.814262866973877
    9. 'e' → logprob: -6.814262866973877
    10. '```' → logprob: -7.314262866973877

Token 493: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1361023336648941
    2. '_' → logprob: -2.3861024379730225
    3. '_)' → logprob: -4.636102199554443
    4. ')_' → logprob: -4.886102199554443
    5. ']' → logprob: -5.761102199554443
    6. ',' → logprob: -5.761102199554443
    7. '])' → logprob: -6.261102199554443
    8. 's' → logprob: -6.886102199554443
    9. '_
' → logprob: -6.886102199554443
    10. '```' → logprob: -7.136102199554443

Token 494: '#
' (ID: 11240)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5279312133789062
    2. 'def' → logprob: -1.1529312133789062
    3. ':
' → logprob: -2.5279312133789062
    4. ':def' → logprob: -4.652931213378906
    5. '```' → logprob: -5.777931213378906
    6. '
' → logprob: -7.652931213378906
    7. '):' → logprob: -8.027931213378906
    8. '(
' → logprob: -8.652931213378906
    9. '(' → logprob: -9.027931213378906
    10. ')' → logprob: -9.152931213378906

Token 495: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00155223673209548
    2. '```' → logprob: -6.751552104949951
    3. ':def' → logprob: -9.12655258178711
    4. '\' → logprob: -9.37655258178711
    5. ':' → logprob: -9.75155258178711
    6. '(
' → logprob: -10.25155258178711
    7. '(' → logprob: -10.87655258178711
    8. ' def' → logprob: -10.87655258178711
    9. '
' → logprob: -10.87655258178711
    10. '``' → logprob: -12.12655258178711

Token 496: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010556964843999594
    2. '```' → logprob: -9.500105857849121
    3. ':def' → logprob: -11.625105857849121
    4. '\' → logprob: -12.500105857849121
    5. ' def' → logprob: -12.500105857849121
    6. 'import' → logprob: -12.875105857849121
    7. ':' → logprob: -13.000105857849121
    8. 'd' → logprob: -13.000105857849121
    9. ')' → logprob: -13.625105857849121
    10. '0' → logprob: -13.750105857849121

Token 497: ' l' (ID: 305)
  Prédit: 'impl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'impl' → logprob: -1.2885104417800903
    2. 'f' → logprob: -1.6635104417800903
    3. 'l' → logprob: -2.038510322570801
    4. 'optim' → logprob: -2.538510322570801
    5. 'memo' → logprob: -2.538510322570801
    6. 'la' → logprob: -3.413510322570801
    7. '#' → logprob: -3.663510322570801
    8. 'def' → logprob: -4.413510322570801
    9. ' éviter' → logprob: -4.413510322570801
    10. 'contin' → logprob: -4.663510322570801

Token 498: ''ex' (ID: 23472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04893966764211655
    2. 'f' → logprob: -3.9239397048950195
    3. 't' → logprob: -3.9239397048950195
    4. 'i' → logprob: -5.4239397048950195
    5. '#' → logprob: -6.9239397048950195
    6. 'int' → logprob: -7.0489397048950195
    7. 'b' → logprob: -8.42393970489502
    8. 'm' → logprob: -8.54893970489502
    9. 'import' → logprob: -8.92393970489502
    10. 'x' → logprob: -9.04893970489502

Token 499: 'pos' (ID: 1103)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.13571418821811676
    2. 't' → logprob: -2.135714292526245
    3. 'e' → logprob: -6.135714054107666
    4. 'c' → logprob: -6.135714054107666
    5. '_' → logprob: -6.760714054107666
    6. '#' → logprob: -7.385714054107666
    7. 'r' → logprob: -7.635714054107666
    8. 'def' → logprob: -7.635714054107666
    9. 'cept' → logprob: -8.135714530944824
    10. '-' → logprob: -8.760714530944824

Token 500: 'ant' (ID: 493)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.244118794798851
    2. 't' → logprob: -3.1191186904907227
    3. 'e' → logprob: -3.3691186904907227
    4. 'n' → logprob: -3.4941186904907227
    5. 'def' → logprob: -3.7441186904907227
    6. 'ed' → logprob: -3.8691186904907227
    7. 'p' → logprob: -3.8691186904907227
    8. '#' → logprob: -3.9941186904907227
    9. ')' → logprob: -5.369118690490723
    10. 'm' → logprob: -5.494118690490723

Token 501: ' :' (ID: 712)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6975966095924377
    2. 's' → logprob: -1.947596549987793
    3. ' =' → logprob: -2.072596549987793
    4. 'k' → logprob: -2.822596549987793
    5. '=-' → logprob: -2.947596549987793
    6. 'max' → logprob: -3.322596549987793
    7. ',' → logprob: -4.197596549987793
    8. ' de' → logprob: -5.197596549987793
    9. 'de' → logprob: -5.322596549987793
    10. ' s' → logprob: -5.447596549987793

Token 502: ' vitesse' (ID: 71752)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6711469888687134
    2. '#' → logprob: -1.9211469888687134
    3. 'k' → logprob: -2.171146869659424
    4. 'def' → logprob: -2.296146869659424
    5. ' -' → logprob: -3.046146869659424
    6. ' k' → logprob: -4.421146869659424
    7. '0' → logprob: -4.921146869659424
    8. 'from' → logprob: -4.921146869659424
    9. 'max' → logprob: -5.171146869659424
    10. 'import' → logprob: -5.421146869659424

Token 503: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4415349066257477
    2. '=' → logprob: -1.8165348768234253
    3. '_ex' → logprob: -2.191534996032715
    4. '_max' → logprob: -3.941534996032715
    5. '_min' → logprob: -4.191534996032715
    6. '_range' → logprob: -4.566534996032715
    7. 's' → logprob: -4.816534996032715
    8. 'max' → logprob: -5.566534996032715
    9. '_' → logprob: -5.941534996032715
    10. '_s' → logprob: -6.191534996032715

Token 504: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0013396469876170158
    2. ' ' → logprob: -6.626339435577393
    3. '0' → logprob: -11.75133991241455
    4. 'pow' → logprob: -12.62633991241455
    5. 'speed' → logprob: -14.12633991241455
    6. '```' → logprob: -14.75133991241455
    7. '`' → logprob: -15.25133991241455
    8. '(' → logprob: -15.62633991241455
    9. '   ' → logprob: -15.75133991241455
    10. '1' → logprob: -15.87633991241455

Token 505: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -12.250009536743164
    3. 'pow' → logprob: -12.500009536743164
    4. '```' → logprob: -14.750009536743164
    5. 'speed' → logprob: -16.000009536743164
    6. '**' → logprob: -16.375009536743164
    7. '(' → logprob: -16.375009536743164
    8. '`' → logprob: -16.875009536743164
    9. 'lambda' → logprob: -17.875009536743164
    10. '{' → logprob: -17.875009536743164

Token 506: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.018235981464385986
    2. ' **' → logprob: -4.14323616027832
    3. '_ex' → logprob: -6.76823616027832
    4. ')' → logprob: -8.01823616027832
    5. ')**' → logprob: -8.01823616027832
    6. '_k' → logprob: -8.89323616027832
    7. '^' → logprob: -10.01823616027832
    8. 'ex' → logprob: -10.39323616027832
    9. '**)' → logprob: -10.51823616027832
    10. '```' → logprob: -10.51823616027832

Token 507: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06660348176956177
    2. 'speed' → logprob: -2.816603422164917
    3. '0' → logprob: -5.941603660583496
    4. 'ex' → logprob: -6.941603660583496
    5. '(speed' → logprob: -7.316603660583496
    6. 'exp' → logprob: -9.316603660583496
    7. ' k' → logprob: -9.816603660583496
    8. ' speed' → logprob: -10.316603660583496
    9. '-ex' → logprob: -10.816603660583496
    10. 'score' → logprob: -11.066603660583496

Token 508: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003087993711233139
    2. ':' → logprob: -6.378087997436523
    3. ':def' → logprob: -7.878087997436523
    4. '(
' → logprob: -8.128087997436523
    5. '
' → logprob: -8.253087997436523
    6. '(' → logprob: -9.003087997436523
    7. '```' → logprob: -9.003087997436523
    8. ':
' → logprob: -9.378087997436523
    9. ' def' → logprob: -9.878087997436523
    10. ')' → logprob: -10.878087997436523

Token 509: ' k' (ID: 372)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00195979792624712
    2. 'k' → logprob: -7.251959800720215
    3. '#' → logprob: -7.376959800720215
    4. ' def' → logprob: -8.376959800720215
    5. '
' → logprob: -9.126959800720215
    6. 'import' → logprob: -9.126959800720215
    7. ')' → logprob: -9.626959800720215
    8. ' k' → logprob: -10.751959800720215
    9. 'from' → logprob: -11.001959800720215
    10. 'de' → logprob: -11.126959800720215

Token 510: ' entier' (ID: 80473)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30575457215309143
    2. '=' → logprob: -1.555754542350769
    3. ' +=' → logprob: -4.305754661560059
    4. 'import' → logprob: -4.555754661560059
    5. ' can' → logprob: -5.430754661560059
    6. 'k' → logprob: -5.430754661560059
    7. ')' → logprob: -5.680754661560059
    8. 's' → logprob: -6.055754661560059
    9. '+=' → logprob: -6.180754661560059
    10. '_range' → logprob: -6.305754661560059

Token 511: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05821820721030235
    2. ':' → logprob: -3.183218240737915
    3. ':
' → logprob: -4.808218002319336
    4. '
' → logprob: -5.808218002319336
    5. ')' → logprob: -6.808218002319336
    6. '(
' → logprob: -7.183218002319336
    7. ':def' → logprob: -7.308218002319336
    8. '):' → logprob: -8.058218002319336
    9. ' def' → logprob: -8.183218002319336
    10. ')
' → logprob: -9.058218002319336

Token 512: ' vitesse' (ID: 71752)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014307470060884953
    2. '#' → logprob: -4.764307498931885
    3. ':' → logprob: -6.264307498931885
    4. 'import' → logprob: -6.389307498931885
    5. ')' → logprob: -6.889307498931885
    6. '```' → logprob: -8.139307022094727
    7. 'cache' → logprob: -9.014307022094727
    8. ' def' → logprob: -9.014307022094727
    9. '):' → logprob: -9.139307022094727
    10. 'k' → logprob: -9.639307022094727

Token 513: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5812703371047974
    2. ' =' → logprob: -0.8312703371047974
    3. 'import' → logprob: -7.331270217895508
    4. ')' → logprob: -7.581270217895508
    5. 'max' → logprob: -7.581270217895508
    6. '>=' → logprob: -7.706270217895508
    7. '<=' → logprob: -7.706270217895508
    8. ' <=' → logprob: -7.831270217895508
    9. 'def' → logprob: -8.206270217895508
    10. ' can' → logprob: -8.206270217895508

Token 514: ' position' (ID: 4010)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49828964471817017
    2. 'k' → logprob: -0.9982896447181702
    3. ' k' → logprob: -4.123289585113525
    4. ' ' → logprob: -5.748289585113525
    5. 'speed' → logprob: -5.873289585113525
    6. 'int' → logprob: -7.123289585113525
    7. ' speed' → logprob: -8.248290061950684
    8. '3' → logprob: -8.873290061950684
    9. '1' → logprob: -9.373290061950684
    10. 'pow' → logprob: -9.498290061950684

Token 515: ' avanc' (ID: 87985)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39145219326019287
    2. '=' → logprob: -2.1414523124694824
    3. ')' → logprob: -3.0164523124694824
    4. ',' → logprob: -3.7664523124694824
    5. '_remaining' → logprob: -4.016452312469482
    6. '<|end|>' → logprob: -4.016452312469482
    7. 'import' → logprob: -4.266452312469482
    8. 's' → logprob: -4.391452312469482
    9. 'def' → logprob: -4.516452312469482
    10. ' +=' → logprob: -5.016452312469482

Token 516: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.03650744631886482
    2. 'é' → logprob: -3.5365073680877686
    3. 'e' → logprob: -5.536507606506348
    4. '+' → logprob: -6.786507606506348
    5. ')' → logprob: -7.536507606506348
    6. ']' → logprob: -8.286507606506348
    7. 'ement' → logprob: -8.536507606506348
    8. '=' → logprob: -9.161507606506348
    9. 'és' → logprob: -9.411507606506348
    10. 'ee' → logprob: -9.536507606506348

Token 517: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2407517433166504
    2. '_' → logprob: -1.6157517433166504
    3. ' =' → logprob: -1.8657517433166504
    4. 'def' → logprob: -1.9907517433166504
    5. '=' → logprob: -2.6157517433166504
    6. ',' → logprob: -3.2407517433166504
    7. 's' → logprob: -3.8657517433166504
    8. ' _' → logprob: -4.49075174331665
    9. ']' → logprob: -4.61575174331665
    10. '_remaining' → logprob: -5.49075174331665

Token 518: ' seconde' (ID: 66204)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.036097731441259384
    2. 'second' → logprob: -4.411097526550293
    3. '1' → logprob: -4.661097526550293
    4. ' seconde' → logprob: -5.161097526550293
    5. 'une' → logprob: -5.911097526550293
    6. ' ' → logprob: -6.036097526550293
    7. 'un' → logprob: -7.411097526550293
    8. 's' → logprob: -7.786097526550293
    9. 'pas' → logprob: -7.911097526550293
    10. 'sec' → logprob: -7.911097526550293

Token 519: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.039772067219018936
    2. ':' → logprob: -4.164772033691406
    3. ':
' → logprob: -4.289772033691406
    4. '
' → logprob: -5.789772033691406
    5. ':def' → logprob: -5.914772033691406
    6. '```' → logprob: -6.539772033691406
    7. ')' → logprob: -7.289772033691406
    8. ')
' → logprob: -7.789772033691406
    9. '):' → logprob: -8.164772033691406
    10. ' def' → logprob: -8.289772033691406

Token 520: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015769802033901215
    2. '```' → logprob: -4.390769958496094
    3. '
' → logprob: -6.390769958496094
    4. ':' → logprob: -7.265769958496094
    5. ':def' → logprob: -8.015769958496094
    6. '\' → logprob: -8.890769958496094
    7. ' def' → logprob: -8.890769958496094
    8. '(
' → logprob: -10.140769958496094
    9. ':
' → logprob: -10.140769958496094
    10. '

' → logprob: -10.265769958496094

Token 521: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.147740689106286e-05
    2. '```' → logprob: -9.87507152557373
    3. '
' → logprob: -12.12507152557373
    4. '\' → logprob: -12.12507152557373
    5. 'd' → logprob: -12.62507152557373
    6. ' def' → logprob: -13.25007152557373
    7. ':def' → logprob: -13.62507152557373
    8. 'import' → logprob: -14.37507152557373
    9. '@' → logprob: -14.50007152557373
    10. ' 
' → logprob: -14.75007152557373

Token 522: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00017469677550252527
    2. '```' → logprob: -9.125174522399902
    3. 'import' → logprob: -10.000174522399902
    4. ' def' → logprob: -12.375174522399902
    5. ')' → logprob: -12.500174522399902
    6. '10' → logprob: -13.125174522399902
    7. 'from' → logprob: -13.375174522399902
    8. '0' → logprob: -13.375174522399902
    9. '
' → logprob: -13.500174522399902
    10. ':def' → logprob: -13.750174522399902

Token 523: ' applique' (ID: 180579)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0027485268656164408
    2. ' def' → logprob: -6.002748489379883
    3. 'import' → logprob: -9.002748489379883
    4. '
' → logprob: -9.627748489379883
    5. 'define' → logprob: -11.127748489379883
    6. 'd' → logprob: -11.377748489379883
    7. 'from' → logprob: -11.502748489379883
    8. 'de' → logprob: -11.627748489379883
    9. 'dé' → logprob: -11.627748489379883
    10. ' define' → logprob: -12.627748489379883

Token 524: ' aussi' (ID: 9894)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10638667643070221
    2. 'f' → logprob: -3.106386661529541
    3. ' la' → logprob: -3.856386661529541
    4. ' une' → logprob: -4.481386661529541
    5. ' f' → logprob: -4.981386661529541
    6. ' def' → logprob: -5.106386661529541
    7. 'une' → logprob: -6.106386661529541
    8. 'l' → logprob: -6.231386661529541
    9. 'la' → logprob: -6.856386661529541
    10. ' l' → logprob: -6.856386661529541

Token 525: ' un' (ID: 537)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.1257543563842773
    2. 'l' → logprob: -1.2507543563842773
    3. 'def' → logprob: -1.7507543563842773
    4. 'f' → logprob: -2.6257543563842773
    5. '@' → logprob: -3.6257543563842773
    6. 'import' → logprob: -3.7507543563842773
    7. 'from' → logprob: -4.000754356384277
    8. 'memo' → logprob: -4.125754356384277
    9. ' une' → logprob: -4.500754356384277
    10. ' la' → logprob: -4.500754356384277

Token 526: ' cache' (ID: 11956)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1198346614837646
    2. 'max' → logprob: -1.3698346614837646
    3. 'import' → logprob: -1.8698346614837646
    4. 'def' → logprob: -2.1198346614837646
    5. 'lim' → logprob: -2.9948346614837646
    6. 'cache' → logprob: -3.6198346614837646
    7. 'MAX' → logprob: -4.369834899902344
    8. 'limit' → logprob: -4.369834899902344
    9. '
' → logprob: -4.869834899902344
    10. '#' → logprob: -4.994834899902344

Token 527: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2232673615217209
    2. '
' → logprob: -2.3482673168182373
    3. '_cache' → logprob: -3.3482673168182373
    4. '```' → logprob: -4.223267555236816
    5. ':
' → logprob: -4.348267555236816
    6. ':' → logprob: -4.598267555236816
    7. '@' → logprob: -4.848267555236816
    8. 'import' → logprob: -5.473267555236816
    9. '_
' → logprob: -5.848267555236816
    10. ' =' → logprob: -5.848267555236816

Token 528: 'memo' (ID: 113822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4240856468677521
    2. '{})' → logprob: -1.6740856170654297
    3. '{}' → logprob: -3.1740856170654297
    4. 'import' → logprob: -3.1740856170654297
    5. '{' → logprob: -3.5490856170654297
    6. '=' → logprob: -3.7990856170654297
    7. ' =' → logprob: -5.67408561706543
    8. 'd' → logprob: -5.79908561706543
    9. 'cache' → logprob: -5.92408561706543
    10. 'dict' → logprob: -6.17408561706543

Token 529: ')' (ID: 8)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6947311758995056
    2. '=' → logprob: -1.5697312355041504
    3. '}' → logprob: -1.9447312355041504
    4. ')' → logprob: -2.6947312355041504
    5. ':' → logprob: -3.8197312355041504
    6. 'ry' → logprob: -4.56973123550415
    7. 'r' → logprob: -4.56973123550415
    8. '_' → logprob: -4.69473123550415
    9. 'd' → logprob: -4.81973123550415
    10. '{' → logprob: -5.06973123550415

Token 530: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022006144747138023
    2. '
' → logprob: -4.522006034851074
    3. '```' → logprob: -4.897006034851074
    4. ':' → logprob: -6.397006034851074
    5. ':def' → logprob: -7.897006034851074
    6. ':
' → logprob: -8.022006034851074
    7. '(
' → logprob: -8.272006034851074
    8. 'import' → logprob: -8.772006034851074
    9. ')' → logprob: -9.147006034851074
    10. '(' → logprob: -9.522006034851074

Token 531: ' éviter' (ID: 64013)
  Prédit: ' éviter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.9098978638648987
    2. 'év' → logprob: -1.284897804260254
    3. 'stock' → logprob: -2.909897804260254
    4. 'f' → logprob: -3.034897804260254
    5. 'optim' → logprob: -3.784897804260254
    6. 'min' → logprob: -4.034897804260254
    7. 'memo' → logprob: -4.034897804260254
    8. 'cache' → logprob: -4.284897804260254
    9. 'l' → logprob: -4.284897804260254
    10. 'import' → logprob: -4.409897804260254

Token 532: ' recom' (ID: 19119)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.340311050415039
    2. 'de' → logprob: -1.965311050415039
    3. ' d' → logprob: -2.840311050415039
    4. ' de' → logprob: -2.840311050415039
    5. ' recal' → logprob: -2.840311050415039
    6. 'une' → logprob: -2.965311050415039
    7. ' une' → logprob: -2.965311050415039
    8. 'l' → logprob: -3.465311050415039
    9. 'les' → logprob: -3.715311050415039
    10. ' les' → logprob: -3.715311050415039

Token 533: 'put' (ID: 772)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1095786094665527
    2. 'pl' → logprob: -1.2345786094665527
    3. 'pletion' → logprob: -1.9845786094665527
    4. 'm' → logprob: -3.3595786094665527
    5. '#' → logprob: -3.4845786094665527
    6. 'n' → logprob: -3.6095786094665527
    7. 'f' → logprob: -3.6095786094665527
    8. 'r' → logprob: -3.8595786094665527
    9. 'pleted' → logprob: -4.234578609466553
    10. 'd' → logprob: -4.234578609466553

Token 534: 'ations' (ID: 929)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.044136445969343185
    2. 'er' → logprob: -3.4191365242004395
    3. 'e' → logprob: -5.0441365242004395
    4. 'ition' → logprob: -6.9191365242004395
    5. 'cache' → logprob: -7.7941365242004395
    6. 'é' → logprob: -8.044136047363281
    7. 'ion' → logprob: -8.044136047363281
    8. ')' → logprob: -8.419136047363281
    9. 'tion' → logprob: -8.544136047363281
    10. 'lation' → logprob: -8.794136047363281

Token 535: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28023236989974976
    2. ':' → logprob: -2.1552324295043945
    3. ':
' → logprob: -2.7802324295043945
    4. '```' → logprob: -3.5302324295043945
    5. '
' → logprob: -4.5302324295043945
    6. '(
' → logprob: -5.0302324295043945
    7. '(' → logprob: -5.4052324295043945
    8. '):' → logprob: -5.4052324295043945
    9. ')' → logprob: -5.5302324295043945
    10. ':def' → logprob: -6.5302324295043945

Token 536: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08523485064506531
    2. '```' → logprob: -2.5852348804473877
    3. '
' → logprob: -6.085234642028809
    4. ':' → logprob: -6.085234642028809
    5. '``' → logprob: -8.085234642028809
    6. ':def' → logprob: -8.085234642028809
    7. ')' → logprob: -8.460234642028809
    8. '\' → logprob: -8.460234642028809
    9. '(
' → logprob: -8.710234642028809
    10. ':
' → logprob: -9.460234642028809

Token 537: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011965400772169232
    2. '```' → logprob: -7.001196384429932
    3. '
' → logprob: -8.25119686126709
    4. '\' → logprob: -11.87619686126709
    5. '``' → logprob: -12.00119686126709
    6. 'import' → logprob: -13.50119686126709
    7. ':def' → logprob: -13.50119686126709
    8. ' def' → logprob: -13.50119686126709
    9. '@' → logprob: -13.62619686126709
    10. ' 
' → logprob: -13.87619686126709

Token 538: ' Cas' (ID: 8066)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000936355150770396
    2. '```' → logprob: -7.750936508178711
    3. 'import' → logprob: -9.000936508178711
    4. ')' → logprob: -9.250936508178711
    5. '(' → logprob: -9.875936508178711
    6. ':' → logprob: -10.125936508178711
    7. '(
' → logprob: -10.250936508178711
    8. 'dfs' → logprob: -10.375936508178711
    9. ' def' → logprob: -10.625936508178711
    10. 'f' → logprob: -10.875936508178711

Token 539: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6555137634277344
    2. 's' → logprob: -2.1555137634277344
    3. ' =' → logprob: -2.2805137634277344
    4. ':' → logprob: -2.7805137634277344
    5. '_base' → logprob: -3.4055137634277344
    6. 'base' → logprob: -3.5305137634277344
    7. 't' → logprob: -3.9055137634277344
    8. 'rest' → logprob: -4.155513763427734
    9. '=' → logprob: -4.405513763427734
    10. ')' → logprob: -4.405513763427734

Token 540: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0011728443205356598
    2. 'fin' → logprob: -7.87617301940918
    3. 'bord' → logprob: -7.87617301940918
    4. 'b' → logprob: -8.25117301940918
    5. 'termin' → logprob: -10.37617301940918
    6. 'termination' → logprob: -10.62617301940918
    7. 't' → logprob: -11.00117301940918
    8. 'dé' → logprob: -11.12617301940918
    9. 'border' → logprob: -11.75117301940918
    10. 'term' → logprob: -12.00117301940918

Token 541: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15381252765655518
    2. 'def' → logprob: -2.4038124084472656
    3. ':
' → logprob: -3.0288124084472656
    4. 'if' → logprob: -5.903812408447266
    5. ':def' → logprob: -7.778812408447266
    6. '```' → logprob: -7.903812408447266
    7. '
' → logprob: -9.903812408447266
    8. ' :' → logprob: -9.903812408447266
    9. ':

' → logprob: -10.028812408447266
    10. ':return' → logprob: -10.653812408447266

Token 542: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08007041364908218
    2. 'def' → logprob: -2.5800704956054688
    3. ' if' → logprob: -7.080070495605469
    4. '```' → logprob: -8.080070495605469
    5. 'for' → logprob: -12.580070495605469
    6. '#' → logprob: -12.705070495605469
    7. '
' → logprob: -12.830070495605469
    8. ' def' → logprob: -12.830070495605469
    9. '0' → logprob: -12.830070495605469
    10. 'memo' → logprob: -12.955070495605469

Token 543: ' remaining' (ID: 15448)
  Prédit: ' reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.40250518918037415
    2. 'reste' → logprob: -1.1525051593780518
    3. 'rest' → logprob: -5.402505397796631
    4. 'remaining' → logprob: -5.527505397796631
    5. ' remaining' → logprob: -6.027505397796631
    6. 'remain' → logprob: -6.402505397796631
    7. ' restante' → logprob: -7.277505397796631
    8. 're' → logprob: -7.402505397796631
    9. ' rest' → logprob: -7.652505397796631
    10. ' remain' → logprob: -7.652505397796631

Token 544: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.01308246050029993
    2. '_' → logprob: -4.638082504272461
    3. '_dist' → logprob: -5.888082504272461
    4. '==' → logprob: -8.638082504272461
    5. '_remaining' → logprob: -8.763082504272461
    6. ' ==' → logprob: -9.388082504272461
    7. 'distance' → logprob: -9.763082504272461
    8. '_d' → logprob: -10.638082504272461
    9. '_rest' → logprob: -12.388082504272461
    10. '\' → logprob: -12.513082504272461

Token 545: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6466742157936096
    2. '==' → logprob: -1.1466741561889648
    3. ' <=' → logprob: -2.271674156188965
    4. '<=' → logprob: -2.896674156188965
    5. '=' → logprob: -9.146674156188965
    6. '0' → logprob: -10.896674156188965
    7. '```' → logprob: -11.521674156188965
    8. ' ' → logprob: -11.646674156188965
    9. ' =' → logprob: -12.271674156188965
    10. '>=' → logprob: -13.021674156188965

Token 546: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.875059127807617
    4. '1' → logprob: -20.375059127807617
    5. '  ' → logprob: -20.500059127807617
    6. '```' → logprob: -20.500059127807617
    7. ' ' → logprob: -20.625059127807617
    8. '000' → logprob: -21.000059127807617
    9. '=' → logprob: -21.125059127807617
    10. '00' → logprob: -21.125059127807617

Token 547: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.250001907348633
    4. '000' → logprob: -20.000001907348633
    5. '```' → logprob: -20.375001907348633
    6. '1' → logprob: -20.375001907348633
    7. '
' → logprob: -20.625001907348633
    8. '00' → logprob: -21.000001907348633
    9. 't' → logprob: -21.000001907348633
    10. '۰' → logprob: -21.250001907348633

Token 548: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02609683945775032
    2. ':
' → logprob: -3.776096820831299
    3. 'def' → logprob: -6.651096820831299
    4. '   ' → logprob: -7.526096820831299
    5. ' :' → logprob: -8.276097297668457
    6. ':return' → logprob: -8.526097297668457
    7. ',' → logprob: -8.651097297668457
    8. ' and' → logprob: -8.776097297668457
    9. '):' → logprob: -9.901097297668457
    10. ':def' → logprob: -10.151097297668457

Token 549: ' speed' (ID: 7733)
  Prédit: ' speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' speed' → logprob: -0.4745510220527649
    2. 'speed' → logprob: -0.9745510220527649
    3. 'k' → logprob: -8.5995512008667
    4. ' k' → logprob: -8.5995512008667
    5. 'ex' → logprob: -10.0995512008667
    6. '	speed' → logprob: -11.3495512008667
    7. '(speed' → logprob: -11.5995512008667
    8. ' abs' → logprob: -12.1620512008667
    9. 'abs' → logprob: -12.2870512008667
    10. ' ' → logprob: -12.2870512008667

Token 550: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3868979513645172
    2. '==' → logprob: -1.1368979215621948
    3. '=' → logprob: -11.511898040771484
    4. ']==' → logprob: -12.511898040771484
    5. ')==' → logprob: -12.761898040771484
    6. '```' → logprob: -13.386898040771484
    7. ' ' → logprob: -13.886898040771484
    8. '()==' → logprob: -13.886898040771484
    9. '==-' → logprob: -13.886898040771484
    10. 'def' → logprob: -13.886898040771484

Token 551: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038241007132455707
    2. ' ' → logprob: -7.875382423400879
    3. '1' → logprob: -13.500382423400879
    4. '{' → logprob: -14.625382423400879
    5. '(' → logprob: -15.500382423400879
    6. '```' → logprob: -17.625381469726562
    7. '[' → logprob: -17.750381469726562
    8. '=' → logprob: -17.812881469726562
    9. ' ' → logprob: -18.000381469726562
    10. '  ' → logprob: -18.000381469726562

Token 552: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.129266067640856e-05
    2. ' ' → logprob: -11.000020980834961
    3. '1' → logprob: -12.500020980834961
    4. '{' → logprob: -14.375020980834961
    5. '(' → logprob: -16.75002098083496
    6. '[' → logprob: -17.06252098083496
    7. '000' → logprob: -17.06252098083496
    8. '=' → logprob: -18.31252098083496
    9. '```' → logprob: -18.68752098083496
    10. '00' → logprob: -18.75002098083496

Token 553: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028293756768107414
    2. ':
' → logprob: -3.6532938480377197
    3. 'def' → logprob: -7.278293609619141
    4. '):' → logprob: -8.02829360961914
    5. '```' → logprob: -8.27829360961914
    6. '():' → logprob: -9.02829360961914
    7. '**' → logprob: -9.02829360961914
    8. ':def' → logprob: -9.27829360961914
    9. ':
' → logprob: -9.40329360961914
    10. '_:' → logprob: -10.27829360961914

Token 554: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04924248531460762
    2. ' return' → logprob: -3.0492424964904785
    3. '0' → logprob: -7.4242424964904785
    4. '   ' → logprob: -10.04924201965332
    5. ':return' → logprob: -12.54924201965332
    6. '```' → logprob: -12.79924201965332
    7. '	return' → logprob: -12.79924201965332
    8. '1' → logprob: -12.92424201965332
    9. ' ' → logprob: -13.17424201965332
    10. '
' → logprob: -14.79924201965332

Token 555: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01881195791065693
    2. ' return' → logprob: -4.01881217956543
    3. 'ret' → logprob: -7.51881217956543
    4. ' retourne' → logprob: -9.26881217956543
    5. ':return' → logprob: -11.89381217956543
    6. 'eturn' → logprob: -12.14381217956543
    7. '_return' → logprob: -12.26881217956543
    8. '{return' → logprob: -13.01881217956543
    9. 'r' → logprob: -14.14381217956543
    10. 'est' → logprob: -14.14381217956543

Token 556: ' fini' (ID: 63561)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08752590417861938
    2. 'ret' → logprob: -2.9625258445739746
    3. ' return' → logprob: -3.4625258445739746
    4. 'returned' → logprob: -8.962526321411133
    5. 'ren' → logprob: -9.337526321411133
    6. 're' → logprob: -9.837526321411133
    7. '
' → logprob: -9.837526321411133
    8. ' ' → logprob: -10.087526321411133
    9. ':return' → logprob: -10.087526321411133
    10. 'f' → logprob: -10.087526321411133

Token 557: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4329351484775543
    2. 'def' → logprob: -1.307935118675232
    3. ':
' → logprob: -2.6829352378845215
    4. '
' → logprob: -5.8079352378845215
    5. ':def' → logprob: -6.1829352378845215
    6. '):' → logprob: -6.4329352378845215
    7. '```' → logprob: -6.8079352378845215
    8. ')' → logprob: -6.8079352378845215
    9. ',' → logprob: -7.5579352378845215
    10. '(' → logprob: -7.8079352378845215

Token 558: ' temps' (ID: 11160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09019134938716888
    2. '   ' → logprob: -3.21519136428833
    3. ':return' → logprob: -3.96519136428833
    4. 'return' → logprob: -4.21519136428833
    5. ' return' → logprob: -4.84019136428833
    6. ' :' → logprob: -5.96519136428833
    7. ':
' → logprob: -7.21519136428833
    8. 'def' → logprob: -7.71519136428833
    9. ':\' → logprob: -9.090190887451172
    10. '    ' → logprob: -9.090190887451172

Token 559: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1511819213628769
    2. ' =' → logprob: -2.026181936264038
    3. 'return' → logprob: -6.276181697845459
    4. '   ' → logprob: -6.401181697845459
    5. ':' → logprob: -6.401181697845459
    6. '==' → logprob: -6.776181697845459
    7. '_return' → logprob: -7.276181697845459
    8. '_elapsed' → logprob: -8.026182174682617
    9. ' ==' → logprob: -8.151182174682617
    10. '+=' → logprob: -8.401182174682617

Token 560: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.12507438659668
    4. ' ' → logprob: -19.00007438659668
    5. '1' → logprob: -19.87507438659668
    6. '
' → logprob: -20.87507438659668
    7. '000' → logprob: -21.00007438659668
    8. '۰' → logprob: -21.25007438659668
    9. '```' → logprob: -21.25007438659668
    10. '00' → logprob: -21.37507438659668

Token 561: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -19.5000057220459
    4. '1' → logprob: -19.6250057220459
    5. '000' → logprob: -21.1250057220459
    6. '
' → logprob: -21.3750057220459
    7. '00' → logprob: -21.6250057220459
    8. '```' → logprob: -21.8750057220459
    9. ' ' → logprob: -22.0000057220459
    10. 'return' → logprob: -22.2500057220459

Token 562: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45716267824172974
    2. 'def' → logprob: -1.207162618637085
    3. ':
' → logprob: -2.832162618637085
    4. ':def' → logprob: -6.082162857055664
    5. '```' → logprob: -6.082162857055664
    6. '
' → logprob: -6.207162857055664
    7. ' def' → logprob: -7.707162857055664
    8. '):' → logprob: -7.957162857055664
    9. '(
' → logprob: -7.957162857055664
    10. '(' → logprob: -8.332162857055664

Token 563: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7081392407417297
    2. 'def' → logprob: -1.083139181137085
    3. '
' → logprob: -2.583139181137085
    4. ':
' → logprob: -3.458139181137085
    5. '```' → logprob: -3.833139181137085
    6. '\' → logprob: -4.333139419555664
    7. '\n' → logprob: -4.333139419555664
    8. '

' → logprob: -5.083139419555664
    9. ':def' → logprob: -6.208139419555664
    10. 'import' → logprob: -7.333139419555664

Token 564: ' Si' (ID: 7832)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5392887592315674
    2. ':' → logprob: -1.0392887592315674
    3. ':
' → logprob: -3.5392887592315674
    4. '```' → logprob: -4.539288520812988
    5. '
' → logprob: -5.164288520812988
    6. '(' → logprob: -5.289288520812988
    7. '(
' → logprob: -5.414288520812988
    8. '\' → logprob: -6.039288520812988
    9. ':def' → logprob: -6.289288520812988
    10. '\n' → logprob: -6.539288520812988

Token 565: ' remaining' (ID: 15448)
  Prédit: ' remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remaining' → logprob: -0.10069410502910614
    2. 'remaining' → logprob: -2.350694179534912
    3. ' reste' → logprob: -9.100693702697754
    4. ' speed' → logprob: -9.600693702697754
    5. ' remainder' → logprob: -9.725693702697754
    6. ' restante' → logprob: -10.225693702697754
    7. ' restant' → logprob: -10.475693702697754
    8. ' ' → logprob: -10.475693702697754
    9. 're' → logprob: -10.600693702697754
    10. ' rest' → logprob: -10.975693702697754

Token 566: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.005284746177494526
    2. '_' → logprob: -5.505284786224365
    3. '_dist' → logprob: -6.880284786224365
    4. '==' → logprob: -10.005284309387207
    5. '_d' → logprob: -10.255284309387207
    6. ' _' → logprob: -11.005284309387207
    7. ' ==' → logprob: -11.630284309387207
    8. 'distance' → logprob: -11.630284309387207
    9. '_remaining' → logprob: -11.630284309387207
    10. '_code' → logprob: -11.880284309387207

Token 567: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3763280212879181
    2. ' <=' → logprob: -2.1263279914855957
    3. '==' → logprob: -2.2513279914855957
    4. ' >' → logprob: -3.1263279914855957
    5. ' <' → logprob: -3.6263279914855957
    6. '<=' → logprob: -4.626327991485596
    7. '>' → logprob: -5.126327991485596
    8. '<' → logprob: -6.126327991485596
    9. '=' → logprob: -8.501328468322754
    10. ' >=' → logprob: -8.751328468322754

Token 568: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0796675905585289
    2. '0' → logprob: -2.579667568206787
    3. ' ' → logprob: -7.954667568206787
    4. '1' → logprob: -8.079668045043945
    5. ' =' → logprob: -9.329668045043945
    6. '=
' → logprob: -12.454668045043945
    7. '=int' → logprob: -12.454668045043945
    8. '```' → logprob: -12.454668045043945
    9. '==' → logprob: -12.829668045043945
    10. '=

' → logprob: -13.579668045043945

Token 569: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6329312324523926
    2. '0' → logprob: -0.7579312324523926
    3. '1' → logprob: -8.382930755615234
    4. ' ' → logprob: -9.882930755615234
    5. ' =' → logprob: -10.882930755615234
    6. '```' → logprob: -11.257930755615234
    7. '=
' → logprob: -12.257930755615234
    8. '
' → logprob: -12.632930755615234
    9. '==' → logprob: -13.382930755615234
    10. '   ' → logprob: -13.507930755615234

Token 570: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005079818423837423
    2. ' :' → logprob: -6.255079746246338
    3. ':return' → logprob: -6.755079746246338
    4. ' or' → logprob: -7.130079746246338
    5. ':
' → logprob: -7.505079746246338
    6. ',' → logprob: -8.380080223083496
    7. ' and' → logprob: -9.255080223083496
    8. ')' → logprob: -9.755080223083496
    9. ' return' → logprob: -9.880080223083496
    10. '   ' → logprob: -10.005080223083496

Token 571: ' impossible' (ID: 19786)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1582029014825821
    2. 'return' → logprob: -2.033202886581421
    3. '   ' → logprob: -4.908203125
    4. ' on' → logprob: -5.033203125
    5. '	return' → logprob: -7.408203125
    6. '       ' → logprob: -8.033203125
    7. ' retour' → logprob: -8.783203125
    8. ' retourner' → logprob: -9.283203125
    9. ':return' → logprob: -9.533203125
    10. ' retourne' → logprob: -9.658203125

Token 572: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21208277344703674
    2. 'def' → logprob: -1.9620827436447144
    3. '
' → logprob: -3.962082862854004
    4. ':
' → logprob: -4.462082862854004
    5. '(' → logprob: -5.712082862854004
    6. '```' → logprob: -5.712082862854004
    7. ')' → logprob: -5.962082862854004
    8. ':def' → logprob: -6.087082862854004
    9. '):' → logprob: -6.212082862854004
    10. '

' → logprob: -6.712082862854004

Token 573: '#
' (ID: 11240)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7204345464706421
    2. 'def' → logprob: -0.9704345464706421
    3. ':
' → logprob: -2.9704346656799316
    4. '
' → logprob: -3.0954346656799316
    5. '```' → logprob: -4.095434665679932
    6. ':def' → logprob: -5.095434665679932
    7. '\' → logprob: -5.720434665679932
    8. '(
' → logprob: -5.845434665679932
    9. '\n' → logprob: -6.220434665679932
    10. '):' → logprob: -6.345434665679932

Token 574: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44032981991767883
    2. '
' → logprob: -1.0653297901153564
    3. '\' → logprob: -5.0653300285339355
    4. '

' → logprob: -6.4403300285339355
    5. 'd' → logprob: -7.4403300285339355
    6. ':' → logprob: -7.4403300285339355
    7. '\n' → logprob: -7.5653300285339355
    8. '(
' → logprob: -7.9403300285339355
    9. ':def' → logprob: -8.315329551696777
    10. '
' → logprob: -8.565329551696777

Token 575: ' À' (ID: 27643)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00031746976310387254
    2. '
' → logprob: -8.250317573547363
    3. '```' → logprob: -10.250317573547363
    4. '\' → logprob: -11.000317573547363
    5. ' def' → logprob: -14.125317573547363
    6. '\n' → logprob: -14.250317573547363
    7. ':def' → logprob: -14.250317573547363
    8. ' 
' → logprob: -14.750317573547363
    9. '

' → logprob: -14.875317573547363
    10. 'import' → logprob: -15.125317573547363

Token 576: ' chaque' (ID: 21194)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37860989570617676
    2. 'part' → logprob: -1.8786098957061768
    3. ' continuer' → logprob: -2.7536098957061768
    4. ' partir' → logprob: -3.6286098957061768
    5. ' def' → logprob: -4.128609657287598
    6. 'contin' → logprob: -4.878609657287598
    7. ' suivre' → logprob: -5.128609657287598
    8. ' part' → logprob: -5.503609657287598
    9. ' la' → logprob: -5.878609657287598
    10. 'return' → logprob: -6.003609657287598

Token 577: ' étape' (ID: 83661)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9919042587280273
    2. 'appel' → logprob: -1.8669042587280273
    3. ' étape' → logprob: -2.1169042587280273
    4. ' _' → logprob: -2.3669042587280273
    5. ' appel' → logprob: -2.7419042587280273
    6. ' step' → logprob: -2.9919042587280273
    7. 'app' → logprob: -3.3669042587280273
    8. ' pas' → logprob: -3.7419042587280273
    9. 'step' → logprob: -3.8669042587280273
    10. 'pas' → logprob: -3.9919042587280273

Token 578: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7479870915412903
    2. ':' → logprob: -0.7479870915412903
    3. ' :' → logprob: -3.6229870319366455
    4. '   ' → logprob: -4.872987270355225
    5. 'def' → logprob: -5.122987270355225
    6. ' ,' → logprob: -5.247987270355225
    7. '#' → logprob: -6.372987270355225
    8. ' ' → logprob: -7.247987270355225
    9. ':
' → logprob: -7.622987270355225
    10. ' =' → logprob: -7.622987270355225

Token 579: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.023189567029476166
    2. '   ' → logprob: -4.648189544677734
    3. 'def' → logprob: -5.398189544677734
    4. ' ' → logprob: -5.898189544677734
    5. 'on' → logprob: -6.148189544677734
    6. ' def' → logprob: -6.398189544677734
    7. '    ' → logprob: -7.898189544677734
    8. ' je' → logprob: -8.523189544677734
    9. ' voici' → logprob: -8.523189544677734
    10. ' #' → logprob: -8.648189544677734

Token 580: ' peut' (ID: 9216)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.624236822128296
    2. 'def' → logprob: -1.624236822128296
    3. ' continue' → logprob: -1.624236822128296
    4. ' peux' → logprob: -2.499236822128296
    5. ' peut' → logprob: -3.249236822128296
    6. ' ' → logprob: -3.749236822128296
    7. ' continuer' → logprob: -3.749236822128296
    8. ' chois' → logprob: -3.874236822128296
    9. ' doit' → logprob: -3.999236822128296
    10. 'continue' → logprob: -4.124237060546875

Token 581: ' avancer' (ID: 151163)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.35853311419487
    2. ' app' → logprob: -2.4835331439971924
    3. 'faire' → logprob: -2.8585331439971924
    4. ' choisir' → logprob: -3.3585331439971924
    5. ' avancer' → logprob: -3.4835331439971924
    6. 'contin' → logprob: -3.8585331439971924
    7. 'prendre' → logprob: -3.8585331439971924
    8. ' continuer' → logprob: -3.9835331439971924
    9. 'cho' → logprob: -4.608532905578613
    10. ' faire' → logprob: -5.358532905578613

Token 582: ' ' (ID: 220)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3175117075443268
    2. 'd' → logprob: -1.5675116777420044
    3. ' de' → logprob: -4.067511558532715
    4. ' ' → logprob: -4.192511558532715
    5. 'de' → logprob: -4.442511558532715
    6. ',' → logprob: -5.692511558532715
    7. ' (' → logprob: -6.192511558532715
    8. '(' → logprob: -6.567511558532715
    9. '_' → logprob: -6.567511558532715
    10. '   ' → logprob: -6.817511558532715

Token 583: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.22189949452877045
    2. ' d' → logprob: -1.7218995094299316
    3. 'de' → logprob: -4.846899509429932
    4. 'of' → logprob: -5.596899509429932
    5. 'à' → logprob: -6.346899509429932
    6. ',' → logprob: -6.346899509429932
    7. ' of' → logprob: -6.721899509429932
    8. '   ' → logprob: -6.971899509429932
    9. '1' → logprob: -7.096899509429932
    10. ' ' → logprob: -7.471899509429932

Token 584: ' seconde' (ID: 66204)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06072254851460457
    2. ')' → logprob: -3.435722589492798
    3. ' _' → logprob: -4.685722351074219
    4. ',' → logprob: -5.435722351074219
    5. ' )' → logprob: -6.060722351074219
    6. ' ,' → logprob: -6.060722351074219
    7. ' *' → logprob: -6.310722351074219
    8. ' ' → logprob: -6.435722351074219
    9. '<|end|>' → logprob: -6.560722351074219
    10. '*' → logprob: -6.810722351074219

Token 585: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.801298975944519
    2. ')' → logprob: -1.051298975944519
    3. '_' → logprob: -2.0512990951538086
    4. ':' → logprob: -3.8012990951538086
    5. ' ,' → logprob: -4.551299095153809
    6. '
' → logprob: -5.301299095153809
    7. 'def' → logprob: -5.426299095153809
    8. '<|end|>' → logprob: -5.551299095153809
    9. '),' → logprob: -5.801299095153809
    10. ',
' → logprob: -5.926299095153809

Token 586: ' la' (ID: 557)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2981018126010895
    2. ' vitesse' → logprob: -2.6731019020080566
    3. ' la' → logprob: -3.4231019020080566
    4. 'une' → logprob: -3.5481019020080566
    5. 'la' → logprob: -3.5481019020080566
    6. ' une' → logprob: -3.5481019020080566
    7. 'speed' → logprob: -4.423101902008057
    8. 'pos' → logprob: -4.548101902008057
    9. '3' → logprob: -4.673101902008057
    10. ' v' → logprob: -4.798101902008057

Token 587: ' vitesse' (ID: 71752)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0371793769299984
    2. ' vitesse' → logprob: -3.787179470062256
    3. 'vit' → logprob: -5.412179470062256
    4. ' ' → logprob: -5.662179470062256
    5. '3' → logprob: -6.287179470062256
    6. ' v' → logprob: -6.537179470062256
    7. '1' → logprob: -7.662179470062256
    8. 'speed' → logprob: -7.912179470062256
    9. ' vit' → logprob: -8.537178993225098
    10. 'pas' → logprob: -8.662178993225098

Token 588: ' actuelle' (ID: 104951)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5002171993255615
    2. ' *' → logprob: -2.5002171993255615
    3. ',' → logprob: -2.6252171993255615
    4. '*' → logprob: -3.1252171993255615
    5. '**' → logprob: -3.1252171993255615
    6. ' _' → logprob: -3.2502171993255615
    7. ' **' → logprob: -3.6252171993255615
    8. '_ex' → logprob: -4.375217437744141
    9. ' ,' → logprob: -4.500217437744141
    10. ' ' → logprob: -4.625217437744141

Token 589: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19720683991909027
    2. 'def' → logprob: -2.822206735610962
    3. ')' → logprob: -3.322206735610962
    4. ',' → logprob: -3.697206735610962
    5. ' :' → logprob: -3.822206735610962
    6. '(' → logprob: -4.822206974029541
    7. ':
' → logprob: -5.447206974029541
    8. '):' → logprob: -5.572206974029541
    9. '[' → logprob: -5.822206974029541
    10. '.' → logprob: -6.197206974029541

Token 590: 'av' (ID: 407)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3051488399505615
    2. '),' → logprob: -1.6801488399505615
    3. ')' → logprob: -2.0551488399505615
    4. ' ),' → logprob: -2.0551488399505615
    5. ' ,' → logprob: -2.4301488399505615
    6. ' )' → logprob: -2.9301488399505615
    7. ' *' → logprob: -3.1801488399505615
    8. '*' → logprob: -3.3051488399505615
    9. 'pos' → logprob: -3.9301488399505615
    10. ' pos' → logprob: -4.930149078369141

Token 591: 'ancer' (ID: 13358)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.7740110754966736
    2. 'ancer' → logprob: -1.5240111351013184
    3. 'ancé' → logprob: -2.1490111351013184
    4. 'ancée' → logprob: -2.6490111351013184
    5. 'anc' → logprob: -3.3990111351013184
    6. '_' → logprob: -3.7740111351013184
    7. 'anç' → logprob: -4.024011135101318
    8. ')' → logprob: -4.274011135101318
    9. 'e' → logprob: -4.774011135101318
    10. 'ancement' → logprob: -5.274011135101318

Token 592: ' d' (ID: 272)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5441405177116394
    2. ')' → logprob: -2.044140577316284
    3. ' +' → logprob: -2.669140577316284
    4. '*' → logprob: -3.169140577316284
    5. ',' → logprob: -3.294140577316284
    6. ' )' → logprob: -3.419140577316284
    7. ' ' → logprob: -3.544140577316284
    8. '_' → logprob: -3.919140577316284
    9. ' ,' → logprob: -4.044140338897705
    10. '),' → logprob: -4.669140338897705

Token 593: ' speed' (ID: 7733)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1641780585050583
    2. ' ' → logprob: -2.0391781330108643
    3. 'remaining' → logprob: -5.664177894592285
    4. ' remaining' → logprob: -5.789177894592285
    5. ' )' → logprob: -6.289177894592285
    6. ' speed' → logprob: -6.414177894592285
    7. ' la' → logprob: -6.664177894592285
    8. ')' → logprob: -6.789177894592285
    9. 'speed' → logprob: -6.914177894592285
    10. ' ' → logprob: -7.539177894592285

Token 594: ' unité' (ID: 181741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9734529852867126
    2. ' )' → logprob: -0.9734529852867126
    3. ' ),' → logprob: -1.8484530448913574
    4. '),' → logprob: -2.9734530448913574
    5. ' ' → logprob: -4.473453044891357
    6. '_ex' → logprob: -5.223453044891357
    7. ' *' → logprob: -5.473453044891357
    8. '**' → logprob: -6.223453044891357
    9. '*' → logprob: -6.598453044891357
    10. ' )
' → logprob: -6.723453044891357

Token 595: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06694760918617249
    2. '*' → logprob: -4.0669474601745605
    3. ',' → logprob: -4.6919474601745605
    4. ' )' → logprob: -4.8169474601745605
    5. '),' → logprob: -4.8169474601745605
    6. 's' → logprob: -5.1919474601745605
    7. '+' → logprob: -6.0669474601745605
    8. ' +' → logprob: -6.3169474601745605
    9. ' *' → logprob: -6.5669474601745605
    10. 'e' → logprob: -6.6919474601745605

Token 596: '#' (ID: 2)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.1770307868719101
    2. '#' → logprob: -2.5520308017730713
    3. ',' → logprob: -3.4270308017730713
    4. '   ' → logprob: -4.052030563354492
    5. 'p' → logprob: -4.177030563354492
    6. ' then' → logprob: -5.427030563354492
    7. ' #' → logprob: -6.052030563354492
    8. ' ou' → logprob: -6.302030563354492
    9. 'ou' → logprob: -6.552030563354492
    10. ' or' → logprob: -6.552030563354492

Token 597: ' puis' (ID: 18766)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0363595187664032
    2. ' puis' → logprob: -3.6613595485687256
    3. '   ' → logprob: -5.5363593101501465
    4. ' #' → logprob: -6.2863593101501465
    5. 'p' → logprob: -6.9113593101501465
    6. 'et' → logprob: -6.9113593101501465
    7. ',' → logprob: -8.036359786987305
    8. ' et' → logprob: -8.161359786987305
    9. 'ou' → logprob: -8.286359786987305
    10. ' then' → logprob: -8.786359786987305

Token 598: ' au' (ID: 2791)
  Prédit: 'changer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'changer' → logprob: -0.7578743100166321
    2. 'cho' → logprob: -1.7578742504119873
    3. 'app' → logprob: -2.3828742504119873
    4. '#' → logprob: -2.7578742504119873
    5. ' changer' → logprob: -2.8828742504119873
    6. ' choisir' → logprob: -4.007874488830566
    7. 'on' → logprob: -4.007874488830566
    8. 'mettre' → logprob: -4.132874488830566
    9. 'p' → logprob: -4.507874488830566
    10. 'faire' → logprob: -4.507874488830566

Token 599: ' prochain' (ID: 52413)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7002825736999512
    2. '_' → logprob: -2.575282573699951
    3. ' ' → logprob: -2.575282573699951
    4. 'près' → logprob: -2.950282573699951
    5. 'u' → logprob: -3.075282573699951
    6. 'n' → logprob: -3.450282573699951
    7. 't' → logprob: -4.075282573699951
    8. ' _' → logprob: -4.075282573699951
    9. '-' → logprob: -4.200282573699951
    10. 'c' → logprob: -4.200282573699951

Token 600: ' instant' (ID: 12823)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20992381870746613
    2. ' _' → logprob: -2.20992374420166
    3. ' pas' → logprob: -4.08492374420166
    4. '_token' → logprob: -4.58492374420166
    5. '\n' → logprob: -5.08492374420166
    6. ' \' → logprob: -5.08492374420166
    7. 'token' → logprob: -5.33492374420166
    8. ' ' → logprob: -5.45992374420166
    9. 'pas' → logprob: -5.58492374420166
    10. '\' → logprob: -5.83492374420166

Token 601: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07791092991828918
    2. ' ,' → logprob: -3.202910900115967
    3. ' on' → logprob: -3.827910900115967
    4. ':' → logprob: -5.077910900115967
    5. 'on' → logprob: -6.327910900115967
    6. ',on' → logprob: -7.077910900115967
    7. ' ' → logprob: -7.327910900115967
    8. ' ' → logprob: -7.702910900115967
    9. ' suivant' → logprob: -7.702910900115967
    10. '_on' → logprob: -7.827910900115967

Token 602: 'dans' (ID: 108151)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39871758222579956
    2. '),' → logprob: -1.6487176418304443
    3. ' )' → logprob: -2.7737176418304443
    4. ' ),' → logprob: -3.2737176418304443
    5. '+' → logprob: -3.8987176418304443
    6. ',' → logprob: -5.523717403411865
    7. 'n' → logprob: -6.773717403411865
    8. '
' → logprob: -6.898717403411865
    9. ' 
' → logprob: -6.898717403411865
    10. ' ' → logprob: -7.023717403411865

Token 603: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6411022543907166
    2. ' la' → logprob: -1.7661023139953613
    3. ' ' → logprob: -2.3911023139953613
    4. ')' → logprob: -3.3911023139953613
    5. 'range' → logprob: -3.5161023139953613
    6. 'la' → logprob: -3.6411023139953613
    7. 'le' → logprob: -4.016102313995361
    8. '```' → logprob: -4.391102313995361
    9. ' le' → logprob: -4.766102313995361
    10. 'speed' → logprob: -5.141102313995361

Token 604: ' prochaine' (ID: 78876)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.6513772010803223
    2. ')' → logprob: -2.1513772010803223
    3. 'next' → logprob: -2.2763772010803223
    4. '
' → logprob: -2.9013772010803223
    5. '```' → logprob: -2.9013772010803223
    6. 'second' → logprob: -3.2763772010803223
    7. ' next' → logprob: -3.4013772010803223
    8. 'pro' → logprob: -3.6513772010803223
    9. 'temps' → logprob: -3.6513772010803223
    10. '`' → logprob: -3.6513772010803223

Token 605: ' réc' (ID: 36254)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -1.5794270038604736
    2. ' seconde' → logprob: -1.7044270038604736
    3. ')' → logprob: -1.8294270038604736
    4. '\n' → logprob: -2.5794270038604736
    5. 'ligne' → logprob: -2.5794270038604736
    6. '_' → logprob: -2.8294270038604736
    7. ' _' → logprob: -3.0794270038604736
    8. '  
' → logprob: -3.7044270038604736
    9. ' )' → logprob: -3.7044270038604736
    10. ' line' → logprob: -4.0794267654418945

Token 606: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.28488072752952576
    2. 'ur' → logprob: -1.6598807573318481
    3. 'urrence' → logprob: -3.4098806381225586
    4. 'urs' → logprob: -4.034880638122559
    5. 'urse' → logprob: -5.159880638122559
    6. 'urrent' → logprob: -8.284880638122559
    7. 'u' → logprob: -8.284880638122559
    8. 'ursive' → logprob: -9.034880638122559
    9. '#' → logprob: -9.534880638122559
    10. ')' → logprob: -9.909880638122559

Token 607: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.28621339797973633
    2. ')' → logprob: -2.1612133979797363
    3. ',' → logprob: -2.1612133979797363
    4. '):
' → logprob: -5.286213397979736
    5. '):' → logprob: -5.661213397979736
    6. 'n' → logprob: -5.786213397979736
    7. '   ' → logprob: -6.161213397979736
    8. ',
' → logprob: -7.161213397979736
    9. ' suivante' → logprob: -7.536213397979736
    10. 'ion' → logprob: -7.536213397979736

Token 608: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.5069335103034973
    2. ' on' → logprob: -1.6319334506988525
    3. '#' → logprob: -1.7569334506988525
    4. 'cho' → logprob: -5.256933689117432
    5. 'return' → logprob: -5.506933689117432
    6. ' choisir' → logprob: -5.631933689117432
    7. 'app' → logprob: -5.756933689117432
    8. ' #' → logprob: -6.381933689117432
    9. '   ' → logprob: -6.506933689117432
    10. 'def' → logprob: -6.756933689117432

Token 609: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.9325056672096252
    2. ' peux' → logprob: -1.5575056076049805
    3. ' can' → logprob: -1.9325056076049805
    4. ')' → logprob: -2.6825056076049805
    5. ' pourra' → logprob: -3.5575056076049805
    6. ' chois' → logprob: -4.1825056076049805
    7. '   ' → logprob: -4.4325056076049805
    8. '#' → logprob: -4.4325056076049805
    9. ' continue' → logprob: -4.6825056076049805
    10. ' choisir' → logprob: -4.6825056076049805

Token 610: ' soit' (ID: 17293)
  Prédit: ' choisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -0.7330400943756104
    2. ' changer' → logprob: -0.9830400943756104
    3. ' continuer' → logprob: -2.7330400943756104
    4. 'changer' → logprob: -3.1080400943756104
    5. 'cho' → logprob: -4.608039855957031
    6. ' rester' → logprob: -5.358039855957031
    7. ' ' → logprob: -5.483039855957031
    8. 'contin' → logprob: -6.108039855957031
    9. 'modifier' → logprob: -6.858039855957031
    10. ' soit' → logprob: -6.983039855957031

Token 611: ' :
' (ID: 10039)
  Prédit: ' rester'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rester' → logprob: -0.3284837603569031
    2. ' continuer' → logprob: -2.453483819961548
    3. ' changer' → logprob: -3.828483819961548
    4. 'pres' → logprob: -4.078483581542969
    5. 'changer' → logprob: -4.078483581542969
    6. 'ne' → logprob: -4.203483581542969
    7. ' ne' → logprob: -4.328483581542969
    8. ' garder' → logprob: -4.578483581542969
    9. 'app' → logprob: -4.578483581542969
    10. 'r' → logprob: -4.578483581542969

Token 612: '#' (ID: 2)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.1316430568695068
    2. ' app' → logprob: -1.3816430568695068
    3. '1' → logprob: -2.756643056869507
    4. '*' → logprob: -2.881643056869507
    5. '-' → logprob: -3.006643056869507
    6. ' ' → logprob: -3.256643056869507
    7. ' rester' → logprob: -3.756643056869507
    8. ''app' → logprob: -4.006643295288086
    9. ' None' → logprob: -4.131643295288086
    10. '[' → logprob: -4.131643295288086

Token 613: ' -' (ID: 533)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -1.5694986581802368
    2. 'None' → logprob: -1.8194986581802368
    3. '   ' → logprob: -2.3194985389709473
    4. ' continuer' → logprob: -2.3194985389709473
    5. ' ne' → logprob: -2.8194985389709473
    6. ' rester' → logprob: -3.0694985389709473
    7. ' ' → logprob: -3.0694985389709473
    8. '1' → logprob: -3.6944985389709473
    9. ' multiplier' → logprob: -3.6944985389709473
    10. ' app' → logprob: -3.8194985389709473

Token 614: ' ne' (ID: 453)
  Prédit: ' rester'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rester' → logprob: -0.8095921874046326
    2. ' multiplier' → logprob: -1.5595922470092773
    3. ' avancer' → logprob: -2.6845922470092773
    4. 'mult' → logprob: -3.0595922470092773
    5. ' continuer' → logprob: -3.3095922470092773
    6. ' stay' → logprob: -3.5595922470092773
    7. ' ne' → logprob: -4.059592247009277
    8. 'keep' → logprob: -4.434592247009277
    9. 'speed' → logprob: -4.934592247009277
    10. 'ne' → logprob: -5.059592247009277

Token 615: ' rien' (ID: 23082)
  Prédit: ' rien'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rien' → logprob: -0.6419730186462402
    2. 'r' → logprob: -0.7669730186462402
    3. ' pas' → logprob: -5.64197301864624
    4. '```' → logprob: -5.76697301864624
    5. ' r' → logprob: -7.26697301864624
    6. 'pas' → logprob: -7.39197301864624
    7. ' ' → logprob: -8.391973495483398
    8. ' Rien' → logprob: -8.641973495483398
    9. '_r' → logprob: -8.891973495483398
    10. ' plus' → logprob: -8.891973495483398

Token 616: ' faire' (ID: 8119)
  Prédit: ' changer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' changer' → logprob: -0.478700190782547
    2. ' faire' → logprob: -1.6037001609802246
    3. 'faire' → logprob: -2.3537001609802246
    4. 'changer' → logprob: -2.6037001609802246
    5. 'change' → logprob: -5.978700160980225
    6. ' change' → logprob: -6.228700160980225
    7. '   ' → logprob: -6.353700160980225
    8. 'do' → logprob: -7.103700160980225
    9. '```' → logprob: -7.103700160980225
    10. ',' → logprob: -7.728700160980225

Token 617: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.061552129685878754
    2. ',
' → logprob: -3.186552047729492
    3. ' ,' → logprob: -5.311552047729492
    4. ' or' → logprob: -5.311552047729492
    5. '<|end|>' → logprob: -6.311552047729492
    6. ' (' → logprob: -6.561552047729492
    7. ' ' → logprob: -7.186552047729492
    8. '_' → logprob: -7.311552047729492
    9. ')' → logprob: -7.811552047729492
    10. '  
' → logprob: -7.936552047729492

Token 618: 'g' (ID: 70)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2463335990905762
    2. '),' → logprob: -1.2463335990905762
    3. 'None' → logprob: -1.7463335990905762
    4. ' None' → logprob: -2.996333599090576
    5. ' ),' → logprob: -3.121333599090576
    6. 'pass' → logprob: -3.496333599090576
    7. 'continue' → logprob: -3.496333599090576
    8. ' continue' → logprob: -3.621333599090576
    9. ',' → logprob: -4.121333599090576
    10. ' ' → logprob: -4.871333599090576

Token 619: 'arder' (ID: 59603)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.6439095139503479
    2. ')' → logprob: -2.143909454345703
    3. 'enerate' → logprob: -2.768909454345703
    4. ' )' → logprob: -2.893909454345703
    5. 'u' → logprob: -3.018909454345703
    6. ' rien' → logprob: -3.768909454345703
    7. 'ard' → logprob: -3.893909454345703
    8. 'et' → logprob: -4.393909454345703
    9. 'e' → logprob: -4.393909454345703
    10. '=' → logprob: -4.393909454345703

Token 620: ' speed' (ID: 7733)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4197719097137451
    2. ' )' → logprob: -1.7947719097137451
    3. ')' → logprob: -2.169771909713745
    4. 'la' → logprob: -3.669771909713745
    5. ' ),' → logprob: -4.544772148132324
    6. 'le' → logprob: -4.794772148132324
    7. ' l' → logprob: -5.044772148132324
    8. ' le' → logprob: -5.294772148132324
    9. ' ' → logprob: -6.544772148132324
    10. '),' → logprob: -6.669772148132324

Token 621: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.8301659822463989
    2. ')' → logprob: -1.330165982246399
    3. ')
' → logprob: -1.705165982246399
    4. '),
' → logprob: -3.2051658630371094
    5. ',' → logprob: -3.5801658630371094
    6. ' ),' → logprob: -4.455165863037109
    7. ' )
' → logprob: -4.455165863037109
    8. '
' → logprob: -4.580165863037109
    9. ' )' → logprob: -5.580165863037109
    10. '_' → logprob: -5.830165863037109

Token 622: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.002328790258616209
    2. ' #' → logprob: -6.252328872680664
    3. ' or' → logprob: -8.627328872680664
    4. 'or' → logprob: -9.127328872680664
    5. '-' → logprob: -10.127328872680664
    6. ' ' → logprob: -10.377328872680664
    7. '```' → logprob: -11.377328872680664
    8. ',' → logprob: -11.627328872680664
    9. '   ' → logprob: -11.877328872680664
    10. ' -' → logprob: -13.002328872680664

Token 623: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06082911416888237
    2. '#' → logprob: -3.0608291625976562
    3. ' -' → logprob: -4.435829162597656
    4. ' #' → logprob: -8.685829162597656
    5. 'or' → logprob: -10.185829162597656
    6. ' or' → logprob: -10.185829162597656
    7. ' ' → logprob: -10.560829162597656
    8. ',' → logprob: -11.310829162597656
    9. '   ' → logprob: -11.560829162597656
    10. '```' → logprob: -12.185829162597656

Token 624: ' multiplier' (ID: 61814)
  Prédit: ' multiplier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiplier' → logprob: -0.671302080154419
    2. 'mult' → logprob: -0.796302080154419
    3. '-' → logprob: -3.921302080154419
    4. 'speed' → logprob: -5.67130184173584
    5. ' augmenter' → logprob: -5.92130184173584
    6. ' speed' → logprob: -6.54630184173584
    7. ' accél' → logprob: -6.54630184173584
    8. 'multip' → logprob: -6.92130184173584
    9. 'div' → logprob: -7.17130184173584
    10. '           ' → logprob: -7.17130184173584

Token 625: ' speed' (ID: 7733)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6981969475746155
    2. 'par' → logprob: -0.6981969475746155
    3. '_par' → logprob: -5.948196887969971
    4. ' ' → logprob: -6.823196887969971
    5. 'by' → logprob: -8.323197364807129
    6. '	par' → logprob: -8.448197364807129
    7. ' by' → logprob: -8.573197364807129
    8. 'sur' → logprob: -9.073197364807129
    9. '*' → logprob: -9.198197364807129
    10. '(par' → logprob: -10.323197364807129

Token 626: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.26230588555336
    2. 'par' → logprob: -2.012305974960327
    3. '_par' → logprob: -2.387305974960327
    4. '*' → logprob: -5.637305736541748
    5. ' *' → logprob: -8.012306213378906
    6. '_by' → logprob: -8.387306213378906
    7. 'by' → logprob: -8.512306213378906
    8. ' by' → logprob: -9.012306213378906
    9. ',' → logprob: -9.137306213378906
    10. '	par' → logprob: -9.262306213378906

Token 627: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.043022483587265015
    2. ' ' → logprob: -3.168022394180298
    3. ' ' → logprob: -11.043022155761719
    4. '```' → logprob: -12.918022155761719
    5. '`' → logprob: -13.918022155761719
    6. '   ' → logprob: -13.918022155761719
    7. '  ' → logprob: -14.418022155761719
    8. '	' → logprob: -15.043022155761719
    9. ' trois' → logprob: -15.293022155761719
    10. '³' → logprob: -15.480522155761719

Token 628: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.872261317563243e-05
    2. ' ' → logprob: -9.750059127807617
    3. '```' → logprob: -15.750059127807617
    4. '   ' → logprob: -17.000059127807617
    5. '`' → logprob: -17.250059127807617
    6. '
' → logprob: -17.375059127807617
    7. '³' → logprob: -17.625059127807617
    8. ' ' → logprob: -17.875059127807617
    9. '  ' → logprob: -18.000059127807617
    10. 'three' → logprob: -18.437559127807617

Token 629: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04687793180346489
    2. '),' → logprob: -3.546877861022949
    3. ')' → logprob: -4.921877861022949
    4. '**' → logprob: -5.921877861022949
    5. ',
' → logprob: -6.296877861022949
    6. '<|end|>' → logprob: -6.296877861022949
    7. ' ,' → logprob: -6.546877861022949
    8. '*' → logprob: -7.296877861022949
    9. '**,' → logprob: -7.921877861022949
    10. ' or' → logprob: -8.42187786102295

Token 630: 'ex' (ID: 490)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.8804104328155518
    2. '),
' → logprob: -1.6304104328155518
    3. '3' → logprob: -2.1304104328155518
    4. '\n' → logprob: -2.7554104328155518
    5. ' or' → logprob: -3.0054104328155518
    6. ',' → logprob: -3.0054104328155518
    7. ' ' → logprob: -3.6304104328155518
    8. ')' → logprob: -3.8804104328155518
    9. ' ),
' → logprob: -4.130410194396973
    10. ' ),' → logprob: -4.255410194396973

Token 631: 'pos' (ID: 1103)
  Prédit: 'ponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.2649271488189697
    2. 'p' → logprob: -1.6399271488189697
    3. '**' → logprob: -3.8899271488189697
    4. '*' → logprob: -5.764926910400391
    5. '3' → logprob: -5.764926910400391
    6. 'pow' → logprob: -6.264926910400391
    7. 'pon' → logprob: -6.264926910400391
    8. ')' → logprob: -6.639926910400391
    9. '```' → logprob: -7.264926910400391
    10. 'ponente' → logprob: -7.514926910400391

Token 632: 'ant' (ID: 493)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7491559982299805
    2. 'onent' → logprob: -0.8741559982299805
    3. ')' → logprob: -3.4991559982299805
    4. 'ient' → logprob: -4.1241559982299805
    5. 'ponent' → logprob: -4.3741559982299805
    6. 'nent' → logprob: -4.3741559982299805
    7. 'on' → logprob: -5.2491559982299805
    8. 'ont' → logprob: -5.4991559982299805
    9. '_ent' → logprob: -5.4991559982299805
    10. '_' → logprob: -5.8741559982299805

Token 633: ' k' (ID: 372)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14464518427848816
    2. '+' → logprob: -2.0196452140808105
    3. ' -' → logprob: -6.6446452140808105
    4. '-' → logprob: -8.144644737243652
    5. ' +=' → logprob: -8.644644737243652
    6. '+k' → logprob: -10.019644737243652
    7. 'k' → logprob: -10.644644737243652
    8. ')' → logprob: -11.144644737243652
    9. '=' → logprob: -11.269644737243652
    10. ' plus' → logprob: -11.519644737243652

Token 634: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3932127356529236
    2. '+' → logprob: -1.1432127952575684
    3. ' -' → logprob: -5.768212795257568
    4. '-' → logprob: -6.143212795257568
    5. ')' → logprob: -7.893212795257568
    6. ' +=' → logprob: -8.76821231842041
    7. ')+' → logprob: -9.26821231842041
    8. '+=' → logprob: -9.51821231842041
    9. ' plus' → logprob: -9.76821231842041
    10. '=' → logprob: -10.01821231842041

Token 635: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.73314929776825e-05
    2. ' ' → logprob: -9.37508773803711
    3. '=' → logprob: -13.87508773803711
    4. '   ' → logprob: -15.00008773803711
    5. '
' → logprob: -15.87508773803711
    6. ' =' → logprob: -15.87508773803711
    7. 'import' → logprob: -16.00008773803711
    8. ' ' → logprob: -16.00008773803711
    9. '```' → logprob: -16.25008773803711
    10. ')' → logprob: -16.25008773803711

Token 636: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.6519040465354919
    2. '),' → logprob: -0.7769040465354919
    3. ')' → logprob: -4.026904106140137
    4. '),

' → logprob: -7.651904106140137
    5. '),
' → logprob: -8.151904106140137
    6. '#' → logprob: -9.151904106140137
    7. '+' → logprob: -9.151904106140137
    8. ' or' → logprob: -9.651904106140137
    9. ',' → logprob: -9.901904106140137
    10. ' ),
' → logprob: -10.026904106140137

Token 637: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.00125880294945091
    2. ' #' → logprob: -7.001258850097656
    3. ' or' → logprob: -8.876258850097656
    4. '-' → logprob: -8.876258850097656
    5. 'or' → logprob: -10.001258850097656
    6. '   ' → logprob: -11.751258850097656
    7. ' ' → logprob: -12.251258850097656
    8. ',' → logprob: -12.626258850097656
    9. ' -' → logprob: -13.001258850097656
    10. '       ' → logprob: -13.501258850097656

Token 638: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10191351920366287
    2. '#' → logprob: -2.6019134521484375
    3. 'or' → logprob: -4.7269134521484375
    4. ' -' → logprob: -4.7269134521484375
    5. ' or' → logprob: -5.9769134521484375
    6. ' #' → logprob: -6.8519134521484375
    7. ',' → logprob: -6.8519134521484375
    8. ' ' → logprob: -8.351913452148438
    9. ' ou' → logprob: -9.851913452148438
    10. 'ou' → logprob: -10.601913452148438

Token 639: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.4379971921443939
    2. ' div' → logprob: -1.0629972219467163
    3. ' divider' → logprob: -5.437997341156006
    4. ' multiplier' → logprob: -6.937997341156006
    5. ' divide' → logprob: -6.937997341156006
    6. 'divider' → logprob: -7.062997341156006
    7. 'mult' → logprob: -7.812997341156006
    8. '-' → logprob: -7.937997341156006
    9. 'divide' → logprob: -8.062996864318848
    10. ' divisor' → logprob: -8.187996864318848

Token 640: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.011186810210347176
    2. 'ider' → logprob: -4.511186599731445
    3. 'er' → logprob: -9.636186599731445
    4. '\' → logprob: -11.886186599731445
    5. '   ' → logprob: -11.886186599731445
    6. 'ise' → logprob: -12.011186599731445
    7. 'id' → logprob: -12.011186599731445
    8. '#' → logprob: -12.386186599731445
    9. '```' → logprob: -12.386186599731445
    10. '}' → logprob: -12.761186599731445

Token 641: ' speed' (ID: 7733)
  Prédit: ' speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' speed' → logprob: -0.47499728202819824
    2. 'speed' → logprob: -0.9749972820281982
    3. 'par' → logprob: -7.599997520446777
    4. ' par' → logprob: -8.724997520446777
    5. 'by' → logprob: -9.474997520446777
    6. 'v' → logprob: -10.474997520446777
    7. ' vitesse' → logprob: -10.474997520446777
    8. '	speed' → logprob: -10.974997520446777
    9. '_speed' → logprob: -11.224997520446777
    10. 'le' → logprob: -11.224997520446777

Token 642: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.4193074703216553
    2. 'par' → logprob: -1.6693074703216553
    3. ' by' → logprob: -2.6693074703216553
    4. '_par' → logprob: -3.5443074703216553
    5. 'by' → logprob: -3.6693074703216553
    6. ' _' → logprob: -4.544307708740234
    7. ' k' → logprob: -5.044307708740234
    8. '_k' → logprob: -5.669307708740234
    9. '_ex' → logprob: -6.169307708740234
    10. '_by' → logprob: -6.669307708740234

Token 643: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.05488848686218262
    2. ' ' → logprob: -2.9298884868621826
    3. ' ' → logprob: -12.554888725280762
    4. '```' → logprob: -13.679888725280762
    5. '1' → logprob: -13.929888725280762
    6. '   ' → logprob: -16.179887771606445
    7. '``' → logprob: -16.554887771606445
    8. '`' → logprob: -16.554887771606445
    9. '  ' → logprob: -16.679887771606445
    10. '2' → logprob: -16.679887771606445

Token 644: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.001502598519437015
    2. ' ' → logprob: -6.501502513885498
    3. '1' → logprob: -15.876502990722656
    4. '```' → logprob: -16.251502990722656
    5. ' ' → logprob: -17.001502990722656
    6. '2' → logprob: -17.876502990722656
    7. '   ' → logprob: -18.001502990722656
    8. '-' → logprob: -18.751502990722656
    9. '  ' → logprob: -18.876502990722656
    10. '{' → logprob: -19.126502990722656

Token 645: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26924970746040344
    2. ':' → logprob: -1.769249677658081
    3. ':
' → logprob: -2.769249677658081
    4. ':def' → logprob: -7.26924991607666
    5. '
' → logprob: -7.51924991607666
    6. '```' → logprob: -7.64424991607666
    7. '):' → logprob: -8.14424991607666
    8. ' def' → logprob: -8.64424991607666
    9. 'import' → logprob: -8.64424991607666
    10. ':

' → logprob: -8.89424991607666

Token 646: 'ex' (ID: 490)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.18062527477741241
    2. ' k' → logprob: -1.805625319480896
    3. '-' → logprob: -8.055624961853027
    4. '(k' → logprob: -8.180624961853027
    5. ' (' → logprob: -9.430624961853027
    6. '{k' → logprob: -10.180624961853027
    7. ')' → logprob: -10.430624961853027
    8. ' ' → logprob: -10.555624961853027
    9. 'speed' → logprob: -10.680624961853027
    10. '1' → logprob: -10.930624961853027

Token 647: 'pos' (ID: 1103)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01414670143276453
    2. 'ponent' → logprob: -5.51414680480957
    3. 'pos' → logprob: -6.13914680480957
    4. '`' → logprob: -7.01414680480957
    5. 'xp' → logprob: -7.38914680480957
    6. '{' → logprob: -7.51414680480957
    7. '|' → logprob: -7.63914680480957
    8. '   ' → logprob: -7.63914680480957
    9. '_x' → logprob: -7.63914680480957
    10. '```' → logprob: -7.63914680480957

Token 648: 'ant' (ID: 493)
  Prédit: 'onent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onent' → logprob: -0.7526727914810181
    2. '}' → logprob: -2.2526726722717285
    3. 'ant' → logprob: -2.2526726722717285
    4. 'ent' → logprob: -2.7526726722717285
    5. '+' → logprob: -2.8776726722717285
    6. ')' → logprob: -3.0026726722717285
    7. 'ont' → logprob: -3.2526726722717285
    8. '^' → logprob: -3.5026726722717285
    9. 'ponent' → logprob: -4.3776726722717285
    10. ']' → logprob: -4.6276726722717285

Token 649: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.11288193613290787
    2. 'k' → logprob: -2.237881898880005
    3. '{k' → logprob: -10.237881660461426
    4. ' (' → logprob: -12.112881660461426
    5. '(k' → logprob: -12.487881660461426
    6. '	k' → logprob: -12.612881660461426
    7. ' ' → logprob: -12.737881660461426
    8. ' ' → logprob: -13.237881660461426
    9. '[k' → logprob: -13.362881660461426
    10. ')' → logprob: -14.362881660461426

Token 650: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00039825684507377446
    2. ' -' → logprob: -7.8753981590271
    3. '+' → logprob: -11.000398635864258
    4. '1' → logprob: -14.375398635864258
    5. '−' → logprob: -15.750398635864258
    6. 'def' → logprob: -16.000398635864258
    7. '–' → logprob: -16.125398635864258
    8. ')-' → logprob: -16.250398635864258
    9. '-
' → logprob: -16.375398635864258
    10. '#' → logprob: -16.500398635864258

Token 651: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -15.625011444091797
    4. '   ' → logprob: -17.750011444091797
    5. '``' → logprob: -18.250011444091797
    6. '<|end|>' → logprob: -18.250011444091797
    7. ')' → logprob: -18.250011444091797
    8. '+' → logprob: -18.500011444091797
    9. '
' → logprob: -18.875011444091797
    10. ' ' → logprob: -19.000011444091797

Token 652: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2937769293785095
    2. ')' → logprob: -1.4187769889831543
    3. '):
' → logprob: -4.543776988983154
    4. ':' → logprob: -6.543776988983154
    5. '):
' → logprob: -8.668776512145996
    6. '```' → logprob: -9.418776512145996
    7. '):

' → logprob: -9.543776512145996
    8. ')
' → logprob: -10.043776512145996
    9. ',' → logprob: -10.293776512145996
    10. 'def' → logprob: -10.918776512145996

Token 653: ' sauf' (ID: 87919)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.031403739005327225
    2. ':' → logprob: -3.7814037799835205
    3. ')' → logprob: -5.406403541564941
    4. '):' → logprob: -6.031403541564941
    5. ' def' → logprob: -8.031403541564941
    6. 'import' → logprob: -8.406403541564941
    7. ':def' → logprob: -8.906403541564941
    8. '   ' → logprob: -9.031403541564941
    9. ' :' → logprob: -9.031403541564941
    10. '```' → logprob: -9.406403541564941

Token 654: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6304802298545837
    2. 'if' → logprob: -1.1304802894592285
    3. ' si' → logprob: -2.0054802894592285
    4. 'si' → logprob: -4.6304802894592285
    5. ' que' → logprob: -9.25547981262207
    6. ' k' → logprob: -9.88047981262207
    7. ' s' → logprob: -9.88047981262207
    8. 'que' → logprob: -9.88047981262207
    9. ' speed' → logprob: -10.00547981262207
    10. ' quand' → logprob: -10.63047981262207

Token 655: ' speed' (ID: 7733)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07108480483293533
    2. 'speed' → logprob: -2.69608473777771
    3. ' speed' → logprob: -6.946084976196289
    4. 'remaining' → logprob: -9.321084976196289
    5. ' k' → logprob: -9.446084976196289
    6. 'not' → logprob: -11.946084976196289
    7. 'current' → logprob: -13.696084976196289
    8. '	speed' → logprob: -13.821084976196289
    9. 'the' → logprob: -14.071084976196289
    10. ' vitesse' → logprob: -14.196084976196289

Token 656: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7663899660110474
    2. ' ==' → logprob: -0.7663899660110474
    3. '_ex' → logprob: -3.141389846801758
    4. ' !=' → logprob: -4.016389846801758
    5. '!=' → logprob: -5.641389846801758
    6. '>' → logprob: -6.266389846801758
    7. ' >' → logprob: -6.766389846801758
    8. '_k' → logprob: -7.391389846801758
    9. '==-' → logprob: -7.516389846801758
    10. '=' → logprob: -7.891389846801758

Token 657: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009339710813947022
    2. ' ' → logprob: -7.00093412399292
    3. '1' → logprob: -11.125933647155762
    4. '-' → logprob: -12.125933647155762
    5. ' -' → logprob: -14.375933647155762
    6. '{' → logprob: -15.438433647155762
    7. '```' → logprob: -15.438433647155762
    8. '  ' → logprob: -15.563433647155762
    9. 'k' → logprob: -15.563433647155762
    10. '=' → logprob: -15.563433647155762

Token 658: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030936390976421535
    2. ' ' → logprob: -8.250308990478516
    3. '1' → logprob: -10.500308990478516
    4. '-' → logprob: -11.000308990478516
    5. ' -' → logprob: -14.375308990478516
    6. '{' → logprob: -15.125308990478516
    7. '  ' → logprob: -15.250308990478516
    8. '000' → logprob: -15.250308990478516
    9. '```' → logprob: -15.375308990478516
    10. '=' → logprob: -15.437808990478516

Token 659: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7903069853782654
    2. ':' → logprob: -1.2903070449829102
    3. ':
' → logprob: -1.4153070449829102
    4. '```' → logprob: -4.41530704498291
    5. 'import' → logprob: -5.04030704498291
    6. 'from' → logprob: -5.16530704498291
    7. ':def' → logprob: -6.41530704498291
    8. '
' → logprob: -7.41530704498291
    9. ':

' → logprob: -7.54030704498291
    10. '@' → logprob: -8.29030704498291

Token 660: 'ex' (ID: 490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30260175466537476
    2. '0' → logprob: -2.6776018142700195
    3. '-' → logprob: -3.0526018142700195
    4. '):' → logprob: -3.0526018142700195
    5. '1' → logprob: -3.9276018142700195
    6. ' -' → logprob: -4.0526018142700195
    7. ' ' → logprob: -4.3026018142700195
    8. ':' → logprob: -4.4276018142700195
    9. ' k' → logprob: -4.8026018142700195
    10. ' )' → logprob: -4.9276018142700195

Token 661: 'pos' (ID: 1103)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1288430243730545
    2. 'ponent' → logprob: -2.628843069076538
    3. 'p' → logprob: -3.503843069076538
    4. 'xp' → logprob: -5.378842830657959
    5. '3' → logprob: -6.128842830657959
    6. 'q' → logprob: -6.753842830657959
    7. '0' → logprob: -6.753842830657959
    8. '=' → logprob: -6.878842830657959
    9. '1' → logprob: -7.128842830657959
    10. 'xit' → logprob: -7.628842830657959

Token 662: 'ant' (ID: 493)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.5363084673881531
    2. 'ant' → logprob: -1.5363085269927979
    3. 'nt' → logprob: -2.911308526992798
    4. 'onent' → logprob: -3.036308526992798
    5. 'itant' → logprob: -4.036308288574219
    6. 'ponent' → logprob: -4.036308288574219
    7. 'it' → logprob: -4.411308288574219
    8. 'p' → logprob: -4.911308288574219
    9. ')' → logprob: -5.036308288574219
    10. 't' → logprob: -5.036308288574219

Token 663: ' ==' (ID: 951)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6229619979858398
    2. '==' → logprob: -1.6229619979858398
    3. ' ==' → logprob: -1.8729619979858398
    4. ' ' → logprob: -2.49796199798584
    5. '>' → logprob: -4.87296199798584
    6. ' !=' → logprob: -4.87296199798584
    7. '!=' → logprob: -5.37296199798584
    8. ' >' → logprob: -5.62296199798584
    9. '-' → logprob: -5.99796199798584
    10. ' -' → logprob: -6.62296199798584

Token 664: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.656383680412546e-05
    2. ' ' → logprob: -10.000046730041504
    3. '1' → logprob: -13.875046730041504
    4. '-' → logprob: -16.125045776367188
    5. '  ' → logprob: -18.500045776367188
    6. '   ' → logprob: -18.875045776367188
    7. '```' → logprob: -19.375045776367188
    8. '۰' → logprob: -19.625045776367188
    9. '	' → logprob: -20.000045776367188
    10. '>' → logprob: -20.000045776367188

Token 665: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.64708495605737e-05
    2. ' ' → logprob: -9.625066757202148
    3. '1' → logprob: -15.125066757202148
    4. '```' → logprob: -18.12506675720215
    5. '-' → logprob: -18.25006675720215
    6. '  ' → logprob: -18.62506675720215
    7. '   ' → logprob: -18.75006675720215
    8. '۰' → logprob: -18.81256675720215
    9. 'import' → logprob: -20.00006675720215
    10. '000' → logprob: -20.06256675720215

Token 666: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2174210399389267
    2. '):
' → logprob: -2.217421054840088
    3. ')' → logprob: -2.592421054840088
    4. ':' → logprob: -5.467421054840088
    5. '),' → logprob: -5.467421054840088
    6. '):

' → logprob: -6.842421054840088
    7. '):
' → logprob: -7.092421054840088
    8. '#' → logprob: -8.09242057800293
    9. '```' → logprob: -8.59242057800293
    10. ' or' → logprob: -8.84242057800293

Token 667: ' alors' (ID: 17971)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020867440849542618
    2. ':
' → logprob: -4.145867347717285
    3. 'def' → logprob: -5.520867347717285
    4. ':def' → logprob: -8.020867347717285
    5. '):' → logprob: -8.645867347717285
    6. ')' → logprob: -10.145867347717285
    7. ' def' → logprob: -10.145867347717285
    8. '(
' → logprob: -10.270867347717285
    9. ' :' → logprob: -10.520867347717285
    10. '(' → logprob: -10.770867347717285

Token 668: ' on' (ID: 402)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3193452060222626
    2. 'on' → logprob: -2.194345235824585
    3. ' k' → logprob: -2.319345235824585
    4. ' on' → logprob: -3.444345235824585
    5. 'pass' → logprob: -3.944345235824585
    6. 'continue' → logprob: -5.194344997406006
    7. 'ex' → logprob: -6.444344997406006
    8. 'we' → logprob: -7.069344997406006
    9. 'return' → logprob: -7.319344997406006
    10. ' continuer' → logprob: -7.319344997406006

Token 669: ' ne' (ID: 453)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.43016836047172546
    2. 'continue' → logprob: -2.055168390274048
    3. ' ne' → logprob: -2.305168390274048
    4. 'n' → logprob: -3.180168390274048
    5. ' n' → logprob: -3.680168390274048
    6. ' continues' → logprob: -4.305168151855469
    7. 'div' → logprob: -4.430168151855469
    8. 'contin' → logprob: -4.430168151855469
    9. 'ne' → logprob: -5.055168151855469
    10. 'reste' → logprob: -5.930168151855469

Token 670: ' peut' (ID: 9216)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0375613309442997
    2. 'pas' → logprob: -3.7875614166259766
    3. ' div' → logprob: -4.537561416625977
    4. 'pe' → logprob: -7.162561416625977
    5. 'change' → logprob: -7.662561416625977
    6. '_div' → logprob: -7.662561416625977
    7. ' pas' → logprob: -7.912561416625977
    8. 'p' → logprob: -8.162561416625977
    9. '-' → logprob: -8.787561416625977
    10. 'divide' → logprob: -8.787561416625977

Token 671: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.1446235179901123
    2. ' pas' → logprob: -2.0196235179901123
    3. 'not' → logprob: -7.269623756408691
    4. 'div' → logprob: -8.394623756408691
    5. 'plus' → logprob: -8.519623756408691
    6. '_pas' → logprob: -8.894623756408691
    7. 'pres' → logprob: -9.019623756408691
    8. ' plus' → logprob: -9.394623756408691
    9. '           ' → logprob: -9.519623756408691
    10. '               ' → logprob: -9.769623756408691

Token 672: ' div' (ID: 4223)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4148673117160797
    2. 'def' → logprob: -1.4148672819137573
    3. ':
' → logprob: -2.539867401123047
    4. ')' → logprob: -5.039867401123047
    5. ':def' → logprob: -5.289867401123047
    6. '):' → logprob: -6.039867401123047
    7. ' def' → logprob: -6.914867401123047
    8. '):
' → logprob: -7.789867401123047
    9. ')
' → logprob: -7.914867401123047
    10. 'import' → logprob: -8.039867401123047

Token 673: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.012585700489580631
    2. 'er' → logprob: -6.012585639953613
    3. 'ider' → logprob: -6.137585639953613
    4. '   ' → logprob: -6.262585639953613
    5. '       ' → logprob: -6.387585639953613
    6. 'ser' → logprob: -6.637585639953613
    7. ')' → logprob: -7.387585639953613
    8. 'oser' → logprob: -7.762585639953613
    9. 'érer' → logprob: -8.512585639953613
    10. 'imer' → logprob: -8.762585639953613

Token 674: ' plus' (ID: 2932)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019787635654211044
    2. 'from' → logprob: -4.644787788391113
    3. 'import' → logprob: -4.769787788391113
    4. 't' → logprob: -7.144787788391113
    5. ':' → logprob: -8.769787788391113
    6. ')' → logprob: -9.019787788391113
    7. '```' → logprob: -9.144787788391113
    8. '@' → logprob: -9.269787788391113
    9. '
' → logprob: -10.519787788391113
    10. ':
' → logprob: -10.644787788391113

Token 675: ' bas' (ID: 3222)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7016420960426331
    2. ':' → logprob: -0.8266420960426331
    3. 'def' → logprob: -2.8266420364379883
    4. ':def' → logprob: -6.201642036437988
    5. ':

' → logprob: -6.451642036437988
    6. 'import' → logprob: -7.201642036437988
    7. '
' → logprob: -7.451642036437988
    8. ')' → logprob: -7.451642036437988
    9. '(
' → logprob: -8.451642036437988
    10. '```' → logprob: -8.451642036437988

Token 676: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008528049103915691
    2. 'from' → logprob: -5.133528232574463
    3. 'import' → logprob: -6.133528232574463
    4. '```' → logprob: -8.008527755737305
    5. '@' → logprob: -10.008527755737305
    6. ':' → logprob: -11.633527755737305
    7. ':def' → logprob: -11.883527755737305
    8. ')' → logprob: -12.008527755737305
    9. 'memo' → logprob: -12.258527755737305
    10. '
' → logprob: -12.508527755737305

Token 677: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016539260745048523
    2. ':' → logprob: -4.891539096832275
    3. '```' → logprob: -5.016539096832275
    4. 'import' → logprob: -6.766539096832275
    5. ':
' → logprob: -7.641539096832275
    6. ':def' → logprob: -7.891539096832275
    7. 'from' → logprob: -8.766539573669434
    8. '
' → logprob: -11.016539573669434
    9. ' def' → logprob: -11.141539573669434
    10. '``' → logprob: -11.516539573669434

Token 678: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.466968650580384e-05
    2. 'from' → logprob: -10.625054359436035
    3. 'import' → logprob: -10.875054359436035
    4. '@' → logprob: -12.500054359436035
    5. '```' → logprob: -13.125054359436035
    6. ':def' → logprob: -13.250054359436035
    7. ' def' → logprob: -13.750054359436035
    8. ')' → logprob: -13.750054359436035
    9. ':' → logprob: -14.625054359436035
    10. '#' → logprob: -15.125054359436035

Token 679: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005480298423208296
    2. 'import' → logprob: -8.125548362731934
    3. 'from' → logprob: -8.500548362731934
    4. '
' → logprob: -11.000548362731934
    5. '```' → logprob: -11.500548362731934
    6. ' def' → logprob: -12.500548362731934
    7. ':def' → logprob: -12.625548362731934
    8. ')' → logprob: -12.875548362731934
    9. '\' → logprob: -12.875548362731934
    10. '@' → logprob: -13.375548362731934

Token 680: ' cherche' (ID: 52345)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3792112171649933
    2. '_' → logprob: -2.004211187362671
    3. ' def' → logprob: -2.504211187362671
    4. ' =' → logprob: -3.629211187362671
    5. ' can' → logprob: -4.25421142578125
    6. ':' → logprob: -4.62921142578125
    7. ' ' → logprob: -4.62921142578125
    8. '=' → logprob: -4.62921142578125
    9. ' _' → logprob: -5.00421142578125
    10. '
' → logprob: -5.75421142578125

Token 681: ' minimal' (ID: 19957)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.1733039617538452
    2. 'def' → logprob: -1.6733039617538452
    3. ' à' → logprob: -1.7983039617538452
    4. 'for' → logprob: -2.0483040809631348
    5. ' to' → logprob: -2.9233040809631348
    6. 'to' → logprob: -2.9233040809631348
    7. '_' → logprob: -3.7983040809631348
    8. ':' → logprob: -4.548304080963135
    9. ' ' → logprob: -4.673304080963135
    10. 'f' → logprob: -5.173304080963135

Token 682: ' temps' (ID: 11160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1917666494846344
    2. 'e' → logprob: -1.941766619682312
    3. 'import' → logprob: -3.8167667388916016
    4. ')' → logprob: -6.191766738891602
    5. '_' → logprob: -6.441766738891602
    6. ' def' → logprob: -6.566766738891602
    7. ' =' → logprob: -7.566766738891602
    8. '=' → logprob: -7.566766738891602
    9. ' ' → logprob: -8.066766738891602
    10. ':' → logprob: -8.191766738891602

Token 683: ' total' (ID: 3609)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27085480093955994
    2. ':
' → logprob: -1.8958548307418823
    3. 'def' → logprob: -2.5208547115325928
    4. ':def' → logprob: -5.145854949951172
    5. 'import' → logprob: -8.895854949951172
    6. '```' → logprob: -9.145854949951172
    7. '):' → logprob: -9.520854949951172
    8. '(
' → logprob: -9.520854949951172
    9. ')' → logprob: -9.645854949951172
    10. '(' → logprob: -9.645854949951172

Token 684: ' =' (ID: 314)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016003867611289024
    2. 'import' → logprob: -5.1410040855407715
    3. 'from' → logprob: -5.5160040855407715
    4. ':' → logprob: -5.8910040855407715
    5. '```' → logprob: -6.7660040855407715
    6. ':
' → logprob: -7.1410040855407715
    7. '\' → logprob: -8.016003608703613
    8. '
' → logprob: -8.391003608703613
    9. ':def' → logprob: -8.766003608703613
    10. '(
' → logprob: -8.766003608703613

Token 685: ' ' (ID: 220)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0459777116775513
    2. 'remaining' → logprob: -1.2959777116775513
    3. ' f' → logprob: -2.1709775924682617
    4. ' min' → logprob: -2.4209775924682617
    5. 'min' → logprob: -2.5459775924682617
    6. ' remaining' → logprob: -3.0459775924682617
    7. 'def' → logprob: -4.920977592468262
    8. 'float' → logprob: -5.045977592468262
    9. ' def' → logprob: -5.670977592468262
    10. 'pos' → logprob: -5.795977592468262

Token 686: '1' (ID: 16)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5266914367675781
    2. 'remaining' → logprob: -1.5266914367675781
    3. 'min' → logprob: -2.776691436767578
    4. 'float' → logprob: -2.776691436767578
    5. 'def' → logprob: -3.651691436767578
    6. 'pos' → logprob: -4.776691436767578
    7. 'dfs' → logprob: -5.401691436767578
    8. 'lambda' → logprob: -5.401691436767578
    9. 'int' → logprob: -5.526691436767578
    10. 'sys' → logprob: -5.651691436767578

Token 687: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09896646440029144
    2. '
' → logprob: -3.098966360092163
    3. '+' → logprob: -4.348966598510742
    4. '<|end|>' → logprob: -4.723966598510742
    5. 'def' → logprob: -4.973966598510742
    6. '<|end|>' → logprob: -5.098966598510742
    7. ':' → logprob: -6.098966598510742
    8. '\n' → logprob: -6.348966598510742
    9. ' +' → logprob: -6.723966598510742
    10. ',' → logprob: -6.973966598510742

Token 688: ' min' (ID: 1349)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.328676700592041
    2. 'min' → logprob: -1.328676700592041
    3. 'dfs' → logprob: -4.578676700592041
    4. ' f' → logprob: -6.578676700592041
    5. ' min' → logprob: -6.828676700592041
    6. 'memo' → logprob: -6.953676700592041
    7. 'sys' → logprob: -7.828676700592041
    8. 'cache' → logprob: -8.203676223754883
    9. 'def' → logprob: -8.703676223754883
    10. ' dfs' → logprob: -9.078676223754883

Token 689: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6355812549591064
    2. '(
' → logprob: -1.5105812549591064
    3. '_' → logprob: -2.1355812549591064
    4. '[' → logprob: -3.1355812549591064
    5. '_time' → logprob: -3.7605812549591064
    6. 'f' → logprob: -4.010581016540527
    7. '_f' → logprob: -4.510581016540527
    8. '(f' → logprob: -4.635581016540527
    9. '[
' → logprob: -4.760581016540527
    10. 'def' → logprob: -6.260581016540527

Token 690: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.037717580795288086
    2. ')' → logprob: -3.787717580795288
    3. ',' → logprob: -5.662717819213867
    4. '(
' → logprob: -6.162717819213867
    5. '_remaining' → logprob: -6.287717819213867
    6. ' (' → logprob: -6.412717819213867
    7. 'remaining' → logprob: -6.912717819213867
    8. '_' → logprob: -7.037717819213867
    9. '(f' → logprob: -7.787717819213867
    10. '(rest' → logprob: -8.162717819213867

Token 691: 'remaining' (ID: 83570)
  Prédit: 'remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.6307134032249451
    2. 'reste' → logprob: -0.8807134032249451
    3. 'remain' → logprob: -4.00571346282959
    4. ' reste' → logprob: -4.38071346282959
    5. ' remaining' → logprob: -4.50571346282959
    6. 'rest' → logprob: -5.25571346282959
    7. '(' → logprob: -6.50571346282959
    8. 're' → logprob: -7.13071346282959
    9. ')' → logprob: -7.38071346282959
    10. ' (' → logprob: -7.38071346282959

Token 692: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.6701411604881287
    2. '_' → logprob: -1.1701412200927734
    3. '_remaining' → logprob: -1.9201412200927734
    4. ')_' → logprob: -4.170141220092773
    5. ')' → logprob: -4.670141220092773
    6. '_dist' → logprob: -5.795141220092773
    7. '_)' → logprob: -6.295141220092773
    8. '_),' → logprob: -8.295141220092773
    9. '))' → logprob: -8.420141220092773
    10. '_,' → logprob: -8.795141220092773

Token 693: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028691032901406288
    2. ' ,' → logprob: -3.903691053390503
    3. ',
' → logprob: -5.903690814971924
    4. '[' → logprob: -6.153690814971924
    5. ')' → logprob: -7.528690814971924
    6. '),' → logprob: -7.653690814971924
    7. '+' → logprob: -8.028691291809082
    8. ' +' → logprob: -8.028691291809082
    9. '   ' → logprob: -8.278691291809082
    10. ' -' → logprob: -8.903691291809082

Token 694: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.31973952054977417
    2. ' speed' → logprob: -1.319739580154419
    3. 'abs' → logprob: -6.56973934173584
    4. ' abs' → logprob: -6.56973934173584
    5. '1' → logprob: -6.69473934173584
    6. '(speed' → logprob: -7.06973934173584
    7. ' (' → logprob: -7.56973934173584
    8. ' ' → logprob: -7.81973934173584
    9. ' max' → logprob: -9.31973934173584
    10. '3' → logprob: -9.31973934173584

Token 695: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0651216208934784
    2. ' ,' → logprob: -3.315121650695801
    3. '),' → logprob: -4.440121650695801
    4. ',
' → logprob: -5.065121650695801
    5. '**' → logprob: -6.565121650695801
    6. '[' → logprob: -6.815121650695801
    7. ')' → logprob: -7.065121650695801
    8. ')),' → logprob: -7.190121650695801
    9. '))' → logprob: -7.690121650695801
    10. ' ,
' → logprob: -7.815121650695801

Token 696: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.4580944776535034
    2. ' speed' → logprob: -1.5830944776535034
    3. 'k' → logprob: -2.208094596862793
    4. ' k' → logprob: -3.333094596862793
    5. 'max' → logprob: -5.833094596862793
    6. ' ' → logprob: -6.083094596862793
    7. 'ex' → logprob: -6.583094596862793
    8. ' (' → logprob: -6.708094596862793
    9. '1' → logprob: -6.708094596862793
    10. ' max' → logprob: -6.958094596862793

Token 697: '_mod' (ID: 15325)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5279316306114197
    2. ')' → logprob: -1.1529316902160645
    3. '))' → logprob: -3.7779316902160645
    4. ',' → logprob: -3.9029316902160645
    5. '+' → logprob: -4.6529316902160645
    6. '_ex' → logprob: -5.0279316902160645
    7. ')),' → logprob: -5.2779316902160645
    8. ')))' → logprob: -5.2779316902160645
    9. '**' → logprob: -5.4029316902160645
    10. '),
' → logprob: -5.4029316902160645

Token 698: 'ifié' (ID: 49927)
  Prédit: 'ifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -1.0726854801177979
    2. ')' → logprob: -1.4476854801177979
    3. '))' → logprob: -1.9476854801177979
    4. '),' → logprob: -2.822685480117798
    5. '_ex' → logprob: -2.822685480117798
    6. 'ificate' → logprob: -3.072685480117798
    7. 'if' → logprob: -3.447685480117798
    8. 'ex' → logprob: -3.447685480117798
    9. ')),' → logprob: -4.947685241699219
    10. ')))' → logprob: -5.072685241699219

Token 699: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5467230677604675
    2. '),' → logprob: -1.4217231273651123
    3. ')' → logprob: -2.9217231273651123
    4. '+' → logprob: -3.0467231273651123
    5. ' +' → logprob: -3.2967231273651123
    6. ')))' → logprob: -4.171722888946533
    7. '-' → logprob: -4.921722888946533
    8. ')),' → logprob: -5.671722888946533
    9. ',' → logprob: -5.671722888946533
    10. ' -' → logprob: -6.046722888946533

Token 700: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07269563525915146
    2. ':
' → logprob: -3.322695732116699
    3. ':' → logprob: -3.572695732116699
    4. ':def' → logprob: -5.822695732116699
    5. '
' → logprob: -6.697695732116699
    6. '(
' → logprob: -7.072695732116699
    7. '```' → logprob: -8.0726957321167
    8. ' def' → logprob: -8.8226957321167
    9. '(' → logprob: -9.1976957321167
    10. '\' → logprob: -9.4476957321167

Token 701: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0113596236333251
    2. '```' → logprob: -5.511359691619873
    3. ':' → logprob: -5.636359691619873
    4. 'import' → logprob: -6.636359691619873
    5. ')' → logprob: -7.136359691619873
    6. ':def' → logprob: -7.636359691619873
    7. '
' → logprob: -8.386359214782715
    8. 'from' → logprob: -8.511359214782715
    9. '):' → logprob: -8.761359214782715
    10. '(
' → logprob: -9.511359214782715

Token 702: ' Restrictions' (ID: 150420)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20479543507099152
    2. ':' → logprob: -1.954795479774475
    3. ':
' → logprob: -3.5797953605651855
    4. ':def' → logprob: -4.5797953605651855
    5. '```' → logprob: -5.7047953605651855
    6. 'import' → logprob: -6.5797953605651855
    7. 'from' → logprob: -8.204795837402344
    8. '(
' → logprob: -8.954795837402344
    9. '(' → logprob: -9.704795837402344
    10. ')' → logprob: -10.079795837402344

Token 703: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5700896978378296
    2. 'def' → logprob: -2.070089817047119
    3. '=' → logprob: -2.320089817047119
    4. '[' → logprob: -3.195089817047119
    5. '{' → logprob: -3.195089817047119
    6. '```' → logprob: -3.320089817047119
    7. 'import' → logprob: -3.820089817047119
    8. ' =' → logprob: -3.945089817047119
    9. '.' → logprob: -4.570089817047119
    10. ',' → logprob: -4.945089817047119

Token 704: ' 
' (ID: 793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2429160624742508
    2. '{' → logprob: -2.8679161071777344
    3. '```' → logprob: -3.3679161071777344
    4. '<|end|>' → logprob: -3.8679161071777344
    5. ')' → logprob: -3.9929161071777344
    6. 'import' → logprob: -4.117916107177734
    7. '#' → logprob: -4.742916107177734
    8. ':' → logprob: -4.992916107177734
    9. '[' → logprob: -5.117916107177734
    10. '0' → logprob: -5.242916107177734

Token 705: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10894978791475296
    2. 'def' → logprob: -3.733949899673462
    3. 'None' → logprob: -3.983949899673462
    4. '```' → logprob: -4.108949661254883
    5. '<|end|>' → logprob: -4.358949661254883
    6. 'from' → logprob: -4.733949661254883
    7. '{' → logprob: -5.108949661254883
    8. 'import' → logprob: -6.358949661254883
    9. '10' → logprob: -6.358949661254883
    10. '1' → logprob: -6.608949661254883

Token 706: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08445774763822556
    2. 'k' → logprob: -3.7094576358795166
    3. 'from' → logprob: -3.8344576358795166
    4. 'max' → logprob: -4.834457874298096
    5. 'def' → logprob: -5.084457874298096
    6. 'import' → logprob: -5.584457874298096
    7. 'None' → logprob: -5.959457874298096
    8. '-' → logprob: -6.209457874298096
    9. '```' → logprob: -6.209457874298096
    10. '<|end|>' → logprob: -6.459457874298096

Token 707: ' remaining' (ID: 15448)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6078315377235413
    2. 'from' → logprob: -1.2328314781188965
    3. 'import' → logprob: -2.7328314781188965
    4. '#' → logprob: -3.3578314781188965
    5. 'max' → logprob: -3.8578314781188965
    6. 't' → logprob: -4.3578314781188965
    7. 'MAX' → logprob: -4.7328314781188965
    8. 'None' → logprob: -5.8578314781188965
    9. 'remaining' → logprob: -5.8578314781188965
    10. ' def' → logprob: -5.9828314781188965

Token 708: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.019081229344010353
    2. '_' → logprob: -4.019081115722656
    3. '_dist' → logprob: -8.019081115722656
    4. '_remaining' → logprob: -8.519081115722656
    5. ')_' → logprob: -9.144081115722656
    6. ' _' → logprob: -9.519081115722656
    7. ')' → logprob: -9.894081115722656
    8. '_d' → logprob: -10.644081115722656
    9. '_range' → logprob: -10.644081115722656
    10. '_
' → logprob: -11.394081115722656

Token 709: ' et' (ID: 859)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.28621968626976013
    2. '<=' → logprob: -2.911219596862793
    3. ' >=' → logprob: -2.911219596862793
    4. ' >' → logprob: -3.161219596862793
    5. ' <' → logprob: -3.161219596862793
    6. ' =' → logprob: -3.786219596862793
    7. '>=' → logprob: -4.536219596862793
    8. '=' → logprob: -4.661219596862793
    9. '>' → logprob: -5.286219596862793
    10. ' ≤' → logprob: -6.786219596862793

Token 710: ' speed' (ID: 7733)
  Prédit: ' speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' speed' → logprob: -0.43179401755332947
    2. 'speed' → logprob: -1.0567940473556519
    3. 'abs' → logprob: -7.056794166564941
    4. 'k' → logprob: -7.431794166564941
    5. ' abs' → logprob: -7.556794166564941
    6. ' k' → logprob: -7.681794166564941
    7. 'remaining' → logprob: -9.056794166564941
    8. ' remaining' → logprob: -9.181794166564941
    9. 'pos' → logprob: -9.306794166564941
    10. '_speed' → logprob: -9.306794166564941

Token 711: ' sont' (ID: 5242)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.41242676973342896
    2. '_ex' → logprob: -2.162426710128784
    3. ' =' → logprob: -3.162426710128784
    4. ')' → logprob: -3.287426710128784
    5. ' <=' → logprob: -3.662426710128784
    6. '_remaining' → logprob: -3.787426710128784
    7. ',' → logprob: -4.287426948547363
    8. '=' → logprob: -4.287426948547363
    9. ' _' → logprob: -4.412426948547363
    10. ' >=' → logprob: -4.662426948547363

Token 712: ' ent' (ID: 1121)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2927091121673584
    2. ' >=' → logprob: -2.4177091121673584
    3. ' non' → logprob: -3.1677091121673584
    4. ' integers' → logprob: -3.4177091121673584
    5. '<=' → logprob: -3.6677091121673584
    6. 'int' → logprob: -4.2927093505859375
    7. ' positive' → logprob: -4.4177093505859375
    8. 'inte' → logprob: -4.7927093505859375
    9. 'non' → logprob: -5.1677093505859375
    10. ' <=' → logprob: -5.4177093505859375

Token 713: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8101328015327454
    2. 'ier' → logprob: -0.8101328015327454
    3. 'iers' → logprob: -3.1851327419281006
    4. 'ière' → logprob: -4.18513298034668
    5. 'i' → logprob: -4.56013298034668
    6. 'ire' → logprob: -4.68513298034668
    7. '```' → logprob: -4.93513298034668
    8. 'ières' → logprob: -5.68513298034668
    9. ']' → logprob: -5.81013298034668
    10. ',' → logprob: -6.18513298034668

Token 714: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028082242235541344
    2. 'from' → logprob: -4.778082370758057
    3. ':' → logprob: -4.903082370758057
    4. '
' → logprob: -5.278082370758057
    5. 'import' → logprob: -5.778082370758057
    6. ':
' → logprob: -5.903082370758057
    7. ')' → logprob: -8.528081893920898
    8. ':def' → logprob: -8.903081893920898
    9. '```' → logprob: -9.028081893920898
    10. '1' → logprob: -9.903081893920898

Token 715: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22185003757476807
    2. ':
' → logprob: -2.2218499183654785
    3. 'def' → logprob: -2.5968499183654785
    4. ':def' → logprob: -4.3468499183654785
    5. '```' → logprob: -6.0968499183654785
    6. 'import' → logprob: -8.346850395202637
    7. '):' → logprob: -8.346850395202637
    8. ':

' → logprob: -9.596850395202637
    9. '):
' → logprob: -10.471850395202637
    10. '":' → logprob: -10.596850395202637

Token 716: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5595671534538269
    2. ':' → logprob: -1.1845672130584717
    3. ':
' → logprob: -2.4345672130584717
    4. '```' → logprob: -4.559566974639893
    5. 'import' → logprob: -4.684566974639893
    6. 'from' → logprob: -4.809566974639893
    7. ':def' → logprob: -5.684566974639893
    8. '):' → logprob: -6.809566974639893
    9. ')' → logprob: -7.309566974639893
    10. '":' → logprob: -7.559566974639893

Token 717: ' remaining' (ID: 15448)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1933799386024475
    2. 'from' → logprob: -1.8183798789978027
    3. 'import' → logprob: -4.443379878997803
    4. 'memo' → logprob: -7.193379878997803
    5. '```' → logprob: -8.193380355834961
    6. 'MAX' → logprob: -8.818380355834961
    7. 't' → logprob: -8.943380355834961
    8. 'max' → logprob: -9.068380355834961
    9. '#' → logprob: -9.193380355834961
    10. 'cache' → logprob: -9.568380355834961

Token 718: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.005189755465835333
    2. '_' → logprob: -5.755189895629883
    3. '_dist' → logprob: -7.505189895629883
    4. '_remaining' → logprob: -7.630189895629883
    5. ' _' → logprob: -7.880189895629883
    6. '_position' → logprob: -8.630189895629883
    7. ')_' → logprob: -9.380189895629883
    8. ')' → logprob: -9.505189895629883
    9. '_d' → logprob: -10.255189895629883
    10. '_range' → logprob: -10.755189895629883

Token 719: ' >=' (ID: 5064)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.32042694091796875
    2. '<=' → logprob: -2.4454269409179688
    3. ' >=' → logprob: -2.5704269409179688
    4. ' >' → logprob: -3.3204269409179688
    5. '>=' → logprob: -3.8204269409179688
    6. ' =' → logprob: -4.195426940917969
    7. '>' → logprob: -4.320426940917969
    8. ' <' → logprob: -4.695426940917969
    9. '=' → logprob: -4.695426940917969
    10. ' ==' → logprob: -6.945426940917969

Token 720: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01507547590881586
    2. ' ' → logprob: -4.26507568359375
    3. '1' → logprob: -7.01507568359375
    4. '=' → logprob: -12.51507568359375
    5. '   ' → logprob: -13.07757568359375
    6. ' ' → logprob: -13.57757568359375
    7. '  ' → logprob: -13.76507568359375
    8. ',' → logprob: -14.20257568359375
    9. 'remaining' → logprob: -14.82757568359375
    10. '```' → logprob: -14.95257568359375

Token 721: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002124806633219123
    2. '1' → logprob: -8.500212669372559
    3. ' ' → logprob: -11.750212669372559
    4. '```' → logprob: -15.000212669372559
    5. '   ' → logprob: -15.250212669372559
    6. 'import' → logprob: -16.000211715698242
    7. 'remaining' → logprob: -16.125211715698242
    8. 'from' → logprob: -16.562711715698242
    9. '
' → logprob: -17.062711715698242
    10. '=' → logprob: -17.375211715698242

Token 722: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8029050230979919
    2. 'def' → logprob: -1.0529050827026367
    3. ':' → logprob: -1.6779050827026367
    4. 'from' → logprob: -5.427905082702637
    5. 'import' → logprob: -5.552905082702637
    6. ':def' → logprob: -5.677905082702637
    7. '```' → logprob: -6.302905082702637
    8. '":' → logprob: -7.552905082702637
    9. ')' → logprob: -7.927905082702637
    10. '):' → logprob: -8.177905082702637

Token 723: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009950276464223862
    2. 'from' → logprob: -4.884950160980225
    3. 'import' → logprob: -6.259950160980225
    4. ':' → logprob: -8.384950637817383
    5. '```' → logprob: -9.384950637817383
    6. ':def' → logprob: -10.134950637817383
    7. 't' → logprob: -10.759950637817383
    8. ')' → logprob: -11.259950637817383
    9. '@' → logprob: -12.009950637817383
    10. '#' → logprob: -12.009950637817383

Token 724: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007014083210378885
    2. 'import' → logprob: -5.882014274597168
    3. '```' → logprob: -6.132014274597168
    4. 'from' → logprob: -6.257014274597168
    5. 't' → logprob: -9.382014274597168
    6. '``' → logprob: -11.882014274597168
    7. ' def' → logprob: -12.257014274597168
    8. '#' → logprob: -13.132014274597168
    9. '10' → logprob: -13.132014274597168
    10. ':def' → logprob: -13.507014274597168

Token 725: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022181648761034012
    2. 'from' → logprob: -4.022181510925293
    3. 'import' → logprob: -5.647181510925293
    4. 't' → logprob: -8.272181510925293
    5. '```' → logprob: -8.522181510925293
    6. 'memo' → logprob: -11.272181510925293
    7. '#' → logprob: -12.272181510925293
    8. '10' → logprob: -12.272181510925293
    9. ' def' → logprob: -12.897181510925293
    10. 'class' → logprob: -13.272181510925293

Token 726: ' limite' (ID: 48939)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022806990891695023
    2. 'import' → logprob: -4.5228071212768555
    3. 'from' → logprob: -5.3978071212768555
    4. ' def' → logprob: -5.5228071212768555
    5. ' =' → logprob: -7.2728071212768555
    6. '_cache' → logprob: -7.2728071212768555
    7. '=' → logprob: -7.3978071212768555
    8. '_' → logprob: -8.022807121276855
    9. ')' → logprob: -8.772807121276855
    10. ':' → logprob: -8.897807121276855

Token 727: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.4213210344314575
    2. 'e' → logprob: -2.171320915222168
    3. '#' → logprob: -2.421320915222168
    4. 'd' → logprob: -2.671320915222168
    5. 'def' → logprob: -2.671320915222168
    6. 'max' → logprob: -2.921320915222168
    7. '_' → logprob: -3.296320915222168
    8. ' =' → logprob: -3.296320915222168
    9. '_max' → logprob: -3.296320915222168
    10. 'import' → logprob: -3.421320915222168

Token 728: ' expos' (ID: 10300)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5233526825904846
    2. 't' → logprob: -1.5233526229858398
    3. 'remaining' → logprob: -3.39835262298584
    4. '#' → logprob: -3.64835262298584
    5. ' remaining' → logprob: -3.89835262298584
    6. 'import' → logprob: -4.02335262298584
    7. 'MAX' → logprob: -4.14835262298584
    8. '```' → logprob: -4.39835262298584
    9. 'max' → logprob: -4.52335262298584
    10. ' def' → logprob: -4.52335262298584

Token 729: 'ants' (ID: 2027)
  Prédit: 'ort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ort' → logprob: -1.358923316001892
    2. 'port' → logprob: -2.1089234352111816
    3. 'import' → logprob: -2.4839234352111816
    4. 't' → logprob: -2.6089234352111816
    5. 'it' → logprob: -2.7339234352111816
    6. ')' → logprob: -2.7339234352111816
    7. 'licit' → logprob: -2.8589234352111816
    8. 'def' → logprob: -3.4839234352111816
    9. 'n' → logprob: -4.108923435211182
    10. 'rt' → logprob: -4.108923435211182

Token 730: ' car' (ID: 1669)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29167211055755615
    2. 'import' → logprob: -2.4166722297668457
    3. 'MAX' → logprob: -2.7916722297668457
    4. 'from' → logprob: -3.4166722297668457
    5. ':' → logprob: -4.041672229766846
    6. '```' → logprob: -4.166672229766846
    7. ':
' → logprob: -4.416672229766846
    8. 'LIMIT' → logprob: -4.791672229766846
    9. ')' → logprob: -6.041672229766846
    10. 'max' → logprob: -6.416672229766846

Token 731: ' la' (ID: 557)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.3043090105056763
    2. ' abs' → logprob: -1.4293090105056763
    3. 'abs' → logprob: -1.5543090105056763
    4. ' ils' → logprob: -2.6793088912963867
    5. ' k' → logprob: -2.8043088912963867
    6. '-' → logprob: -3.3043088912963867
    7. 'k' → logprob: -3.4293088912963867
    8. ' les' → logprob: -3.8043088912963867
    9. 'on' → logprob: -4.679308891296387
    10. ' -' → logprob: -4.679308891296387

Token 732: ' vitesse' (ID: 71752)
  Prédit: ' vitesse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vitesse' → logprob: -1.4375550746917725
    2. ' range' → logprob: -1.8125550746917725
    3. ' distance' → logprob: -2.8125550746917725
    4. ' code' → logprob: -3.0625550746917725
    5. ' ' → logprob: -3.3125550746917725
    6. '7' → logprob: -3.3125550746917725
    7. ' remaining' → logprob: -3.3125550746917725
    8. ' k' → logprob: -3.4375550746917725
    9. '#' → logprob: -3.5625550746917725
    10. 't' → logprob: -3.8125550746917725

Token 733: ' peut' (ID: 9216)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3928055167198181
    2. ' n' → logprob: -2.392805576324463
    3. ' is' → logprob: -3.267805576324463
    4. ' ne' → logprob: -3.392805576324463
    5. 'n' → logprob: -3.642805576324463
    6. '#' → logprob: -4.017805576324463
    7. 'k' → logprob: -4.142805576324463
    8. ' =' → logprob: -4.392805576324463
    9. ' de' → logprob: -4.392805576324463
    10. 'max' → logprob: -4.517805576324463

Token 734: ' rapidement' (ID: 43157)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.4649730622768402
    2. ' être' → logprob: -1.0899730920791626
    3. ' augmenter' → logprob: -5.464972972869873
    4. ' dépasser' → logprob: -5.464972972869873
    5. 'augment' → logprob: -5.589972972869873
    6. '#' → logprob: -5.714972972869873
    7. ' aller' → logprob: -5.839972972869873
    8. ' varier' → logprob: -5.839972972869873
    9. ''être' → logprob: -6.214972972869873
    10. ' monter' → logprob: -6.839972972869873

Token 735: ' devenir' (ID: 58346)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.3420664370059967
    2. 'de' → logprob: -2.342066526412964
    3. 'cro' → logprob: -3.342066526412964
    4. 's' → logprob: -3.717066526412964
    5. 'augment' → logprob: -3.717066526412964
    6. 'dé' → logprob: -3.842066526412964
    7. 'explode' → logprob: -4.217066287994385
    8. 'ex' → logprob: -4.217066287994385
    9. 'import' → logprob: -4.967066287994385
    10. 'grow' → logprob: -5.092066287994385

Token 736: ' énorme' (ID: 132565)
  Prédit: 'too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'too' → logprob: -0.9696694612503052
    2. 't' → logprob: -1.9696694612503052
    3. 'import' → logprob: -1.9696694612503052
    4. 'ex' → logprob: -2.0946693420410156
    5. ' trop' → logprob: -2.7196693420410156
    6. '3' → logprob: -3.4696693420410156
    7. 'ext' → logprob: -3.7196693420410156
    8. 'tr' → logprob: -3.9696693420410156
    9. ' très' → logprob: -4.344669342041016
    10. 'un' → logprob: -4.469669342041016

Token 737: ' ou' (ID: 2031)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34533071517944336
    2. ':' → logprob: -1.9703307151794434
    3. ':
' → logprob: -2.3453307151794434
    4. 'import' → logprob: -3.7203307151794434
    5. 'from' → logprob: -3.9703307151794434
    6. '
' → logprob: -4.720330715179443
    7. '```' → logprob: -7.220330715179443
    8. ':def' → logprob: -7.720330715179443
    9. ' def' → logprob: -7.970330715179443
    10. 'MAX' → logprob: -8.220331192016602

Token 738: ' fragment' (ID: 19018)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2845321893692017
    2. ' basse' → logprob: -1.9095321893692017
    3. ' faible' → logprob: -2.034532070159912
    4. 'inf' → logprob: -2.659532070159912
    5. ' nég' → logprob: -2.909532070159912
    6. ' petite' → logprob: -3.034532070159912
    7. 'abs' → logprob: -3.159532070159912
    8. 'negative' → logprob: -3.659532070159912
    9. '
' → logprob: -3.784532070159912
    10. ' trop' → logprob: -4.034532070159912

Token 739: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.3934669494628906
    2. 'érée' → logprob: -1.8934669494628906
    3. 'é' → logprob: -2.5184669494628906
    4. 'ed' → logprob: -3.8934669494628906
    5. 'éré' → logprob: -4.393466949462891
    6. 'er' → logprob: -4.893466949462891
    7. 'rée' → logprob: -4.893466949462891
    8. 't' → logprob: -5.268466949462891
    9. 'e' → logprob: -5.393466949462891
    10. 'érés' → logprob: -5.518466949462891

Token 740: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.650290846824646
    2. ':' → logprob: -1.275290846824646
    3. ':
' → logprob: -1.775290846824646
    4. 'import' → logprob: -4.0252909660339355
    5. 'from' → logprob: -4.9002909660339355
    6. ':def' → logprob: -6.1502909660339355
    7. '
' → logprob: -7.7752909660339355
    8. ')' → logprob: -8.150290489196777
    9. '```' → logprob: -8.525290489196777
    10. ':

' → logprob: -8.775290489196777

Token 741: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004164353013038635
    2. 'from' → logprob: -5.629164218902588
    3. 'import' → logprob: -8.129164695739746
    4. '@' → logprob: -8.754164695739746
    5. '```' → logprob: -9.504164695739746
    6. ')' → logprob: -10.879164695739746
    7. 'memo' → logprob: -12.004164695739746
    8. 'cache' → logprob: -13.129164695739746
    9. ' def' → logprob: -13.254164695739746
    10. ':def' → logprob: -13.379164695739746

Token 742: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005317481700330973
    2. 'from' → logprob: -5.755317687988281
    3. '```' → logprob: -6.755317687988281
    4. '@' → logprob: -7.880317687988281
    5. 'import' → logprob: -8.130317687988281
    6. 'MAX' → logprob: -9.005317687988281
    7. 'max' → logprob: -9.880317687988281
    8. ')' → logprob: -10.630317687988281
    9. 'k' → logprob: -10.755317687988281
    10. 'memo' → logprob: -11.505317687988281

Token 743: ' Impl' (ID: 144563)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02141670696437359
    2. 'from' → logprob: -4.271416664123535
    3. 'import' → logprob: -5.896416664123535
    4. '@' → logprob: -6.146416664123535
    5. '```' → logprob: -6.896416664123535
    6. 'MAX' → logprob: -7.646416664123535
    7. 'max' → logprob: -8.646416664123535
    8. ')' → logprob: -9.021416664123535
    9. 'memo' → logprob: -9.271416664123535
    10. '10' → logprob: -9.271416664123535

Token 744: 'ément' (ID: 17645)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.998192548751831
    2. 'def' → logprob: -0.998192548751831
    3. 'ément' → logprob: -1.373192548751831
    4. 'import' → logprob: -5.12319278717041
    5. 'ements' → logprob: -7.12319278717041
    6. '```' → logprob: -7.12319278717041
    7. 'é' → logprob: -7.62319278717041
    8. '#' → logprob: -8.12319278717041
    9. 'ented' → logprob: -8.49819278717041
    10. 'ment' → logprob: -8.49819278717041

Token 745: 'ation' (ID: 387)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.350125253200531
    2. 'def' → logprob: -1.3501253128051758
    3. 'MAX' → logprob: -4.350125312805176
    4. 'import' → logprob: -4.475125312805176
    5. 'memo' → logprob: -4.850125312805176
    6. 't' → logprob: -6.475125312805176
    7. '```' → logprob: -6.850125312805176
    8. 'max' → logprob: -7.850125312805176
    9. 'cache' → logprob: -7.850125312805176
    10. '@' → logprob: -8.600125312805176

Token 746: ' :' (ID: 712)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7119249105453491
    2. 'def' → logprob: -1.0869249105453491
    3. 'import' → logprob: -2.4619250297546387
    4. 't' → logprob: -2.7119250297546387
    5. 'MAX' → logprob: -4.336925029754639
    6. 'memo' → logprob: -5.211925029754639
    7. 'sys' → logprob: -7.836925029754639
    8. '```' → logprob: -7.961925029754639
    9. 'INF' → logprob: -8.21192455291748
    10. 'max' → logprob: -8.46192455291748

Token 747: ' une' (ID: 2463)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5348032116889954
    2. 'def' → logprob: -1.0348031520843506
    3. 'memo' → logprob: -3.4098031520843506
    4. 'import' → logprob: -4.28480339050293
    5. 't' → logprob: -5.03480339050293
    6. 'MAX' → logprob: -5.90980339050293
    7. '```' → logprob: -6.15980339050293
    8. 'max' → logprob: -8.15980339050293
    9. 'cache' → logprob: -8.78480339050293
    10. 'sys' → logprob: -9.03480339050293

Token 748: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15371295809745789
    2. 'from' → logprob: -2.2787129878997803
    3. 'import' → logprob: -3.2787129878997803
    4. 'memo' → logprob: -6.903712749481201
    5. 'd' → logprob: -8.40371322631836
    6. '=' → logprob: -8.77871322631836
    7. ' =' → logprob: -9.02871322631836
    8. '#' → logprob: -9.40371322631836
    9. ' from' → logprob: -9.40371322631836
    10. ' def' → logprob: -9.52871322631836

Token 749: ' réc' (ID: 36254)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008620307198725641
    2. '```' → logprob: -7.125862121582031
    3. '
' → logprob: -11.125862121582031
    4. 'from' → logprob: -11.625862121582031
    5. ':def' → logprob: -11.875862121582031
    6. ')' → logprob: -11.875862121582031
    7. 'import' → logprob: -12.250862121582031
    8. ':' → logprob: -12.250862121582031
    9. 'de' → logprob: -12.875862121582031
    10. ' def' → logprob: -13.125862121582031

Token 750: 'ursive' (ID: 30543)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35648712515830994
    2. 'ursive' → logprob: -1.2314871549606323
    3. 'ursion' → logprob: -5.606487274169922
    4. 'urs' → logprob: -6.231487274169922
    5. 'ur' → logprob: -6.481487274169922
    6. 'import' → logprob: -9.106487274169922
    7. 'urse' → logprob: -9.106487274169922
    8. ' def' → logprob: -9.356487274169922
    9. 'ursively' → logprob: -9.481487274169922
    10. '```' → logprob: -9.606487274169922

Token 751: ' avec' (ID: 3937)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0900387316942215
    2. ':' → logprob: -2.715038776397705
    3. '```' → logprob: -4.340038776397705
    4. ':def' → logprob: -5.840038776397705
    5. ')' → logprob: -6.590038776397705
    6. ':
' → logprob: -6.965038776397705
    7. '):' → logprob: -7.340038776397705
    8. '
' → logprob: -7.965038776397705
    9. '(
' → logprob: -8.965038299560547
    10. 'import' → logprob: -8.965038299560547

Token 752: ' cache' (ID: 11956)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1688443422317505
    2. 'def' → logprob: -2.793844223022461
    3. '@' → logprob: -3.293844223022461
    4. 'import' → logprob: -3.418844223022461
    5. 'memo' → logprob: -3.793844223022461
    6. 'l' → logprob: -6.918844223022461
    7. 'cache' → logprob: -7.918844223022461
    8. '```' → logprob: -8.043844223022461
    9. 'fun' → logprob: -10.043844223022461
    10. ' from' → logprob: -10.043844223022461

Token 753: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11078304052352905
    2. 'from' → logprob: -2.485783100128174
    3. '```' → logprob: -4.235783100128174
    4. 'import' → logprob: -5.235783100128174
    5. ')' → logprob: -7.360783100128174
    6. 't' → logprob: -7.485783100128174
    7. '@' → logprob: -8.985782623291016
    8. 'cache' → logprob: -9.360782623291016
    9. 'memo' → logprob: -9.485782623291016
    10. ':' → logprob: -9.485782623291016

Token 754: 't' (ID: 83)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.034059882164001465
    2. ':' → logprob: -3.659060001373291
    3. ':
' → logprob: -5.659060001373291
    4. ':def' → logprob: -6.159060001373291
    5. '```' → logprob: -7.034060001373291
    6. ')' → logprob: -8.034059524536133
    7. '):' → logprob: -8.159059524536133
    8. 'from' → logprob: -8.284059524536133
    9. 'import' → logprob: -8.409059524536133
    10. '
' → logprob: -9.909059524536133

Token 755: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05619266256690025
    2. '=' → logprob: -2.931192636489868
    3. ',' → logprob: -6.806192874908447
    4. ')' → logprob: -9.931192398071289
    5. ' ' → logprob: -10.556192398071289
    6. '=int' → logprob: -10.681192398071289
    7. ' ,' → logprob: -10.931192398071289
    8. 't' → logprob: -11.306192398071289
    9. ':' → logprob: -11.306192398071289
    10. 'def' → logprob: -11.431192398071289

Token 756: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.13925865292549133
    2. '100' → logprob: -2.264258623123169
    3. '10' → logprob: -3.764258623123169
    4. ' int' → logprob: -6.514258861541748
    5. '0' → logprob: -6.889258861541748
    6. ' ' → logprob: -9.01425838470459
    7. '...' → logprob: -9.51425838470459
    8. '123' → logprob: -10.26425838470459
    9. '1' → logprob: -10.51425838470459
    10. 'input' → logprob: -11.01425838470459

Token 757: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0532972551882267
    2. '()' → logprob: -3.053297281265259
    3. 'input' → logprob: -6.30329704284668
    4. '(' → logprob: -6.42829704284668
    5. '(sys' → logprob: -6.92829704284668
    6. ' ()' → logprob: -8.92829704284668
    7. ' (' → logprob: -10.17829704284668
    8. '(
' → logprob: -10.42829704284668
    9. '=input' → logprob: -10.80329704284668
    10. '(t' → logprob: -11.30329704284668

Token 758: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.09011302143335342
    2. '.argv' → logprob: -2.4651129245758057
    3. '.' → logprob: -7.340113162994385
    4. '.readline' → logprob: -7.590113162994385
    5. '.stdout' → logprob: -12.090112686157227
    6. '.version' → logprob: -12.715112686157227
    7. 'stdin' → logprob: -13.090112686157227
    8. '(stdin' → logprob: -13.590112686157227
    9. '.max' → logprob: -13.715112686157227
    10. '().' → logprob: -13.715112686157227

Token 759: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0001431114797014743
    2. 'read' → logprob: -8.875143051147461
    3. '.' → logprob: -13.375143051147461
    4. ' readline' → logprob: -13.875143051147461
    5. '.read' → logprob: -14.875143051147461
    6. '_read' → logprob: -16.12514305114746
    7. 'rea' → logprob: -16.50014305114746
    8. ')' → logprob: -16.75014305114746
    9. 'readonly' → logprob: -17.50014305114746
    10. 'stdin' → logprob: -17.62514305114746

Token 760: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002561388071626425
    2. '().' → logprob: -6.002561569213867
    3. '()' → logprob: -9.627561569213867
    4. ')' → logprob: -11.127561569213867
    5. '())
' → logprob: -12.502561569213867
    6. ' ())' → logprob: -14.252561569213867
    7. '(' → logprob: -15.002561569213867
    8. '())

' → logprob: -15.752561569213867
    9. '();)' → logprob: -16.127561569213867
    10. '());' → logprob: -16.752561569213867

Token 761: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.17263221740722656
    2. 'memo' → logprob: -1.9226322174072266
    3. 'import' → logprob: -4.422632217407227
    4. '```' → logprob: -8.797632217407227
    5. 'cache' → logprob: -8.922632217407227
    6. 'def' → logprob: -10.797632217407227
    7. 'sys' → logprob: -11.297632217407227
    8. 'max' → logprob: -12.422632217407227
    9. ' from' → logprob: -12.797632217407227
    10. 'mem' → logprob: -13.047632217407227

Token 762: ' functools' (ID: 142636)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.0015418806578963995
    2. 'math' → logprob: -6.751542091369629
    3. ' functools' → logprob: -8.501542091369629
    4. 'collections' → logprob: -8.751542091369629
    5. 'sys' → logprob: -11.501542091369629
    6. 'fra' → logprob: -16.751541137695312
    7. 'func' → logprob: -17.626541137695312
    8. 'typing' → logprob: -18.251541137695312
    9. 'cmath' → logprob: -19.501541137695312
    10. '_fun' → logprob: -19.626541137695312

Token 763: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.000263481488218531
    2. ' import' → logprob: -8.625263214111328
    3. 'from' → logprob: -10.125263214111328
    4. '_import' → logprob: -10.375263214111328
    5. '@' → logprob: -12.125263214111328
    6. '	import' → logprob: -13.000263214111328
    7. 'l' → logprob: -13.500263214111328
    8. '```' → logprob: -13.500263214111328
    9. '_cache' → logprob: -14.500263214111328
    10. '
' → logprob: -15.125263214111328

Token 764: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.018153570592403412
    2. 'cache' → logprob: -4.018153667449951
    3. ' l' → logprob: -13.268153190612793
    4. 'cached' → logprob: -13.518153190612793
    5. 'import' → logprob: -15.143153190612793
    6. 'wrap' → logprob: -16.39315414428711
    7. 'reduce' → logprob: -16.76815414428711
    8. '_cache' → logprob: -17.01815414428711
    9. '```' → logprob: -17.51815414428711
    10. '@' → logprob: -18.14315414428711

Token 765: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -3.531315314830863e-06
    2. 'RU' → logprob: -13.375003814697266
    3. 'ruz' → logprob: -13.750003814697266
    4. 'r' → logprob: -15.125003814697266
    5. 'ruh' → logprob: -15.500003814697266
    6. '_ru' → logprob: -15.875003814697266
    7. 'Ru' → logprob: -15.875003814697266
    8. 'ruff' → logprob: -17.500003814697266
    9. ' ru' → logprob: -18.125003814697266
    10. 'fu' → logprob: -18.125003814697266

Token 766: '_cache' (ID: 27045)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.055802203714847565
    2. '_cache' → logprob: -2.9308021068573
    3. 'cached' → logprob: -7.430802345275879
    4. 'c' → logprob: -8.930802345275879
    5. 'import' → logprob: -8.930802345275879
    6. 'from' → logprob: -10.930802345275879
    7. 'max' → logprob: -11.680802345275879
    8. '```' → logprob: -11.930802345275879
    9. 'ru' → logprob: -12.180802345275879
    10. 'ut' → logprob: -12.305802345275879

Token 767: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0002123614540323615
    2. '```' → logprob: -8.500212669372559
    3. '
' → logprob: -12.875212669372559
    4. 'def' → logprob: -13.125212669372559
    5. '@s' → logprob: -14.250212669372559
    6. '@
' → logprob: -14.500212669372559
    7. '``' → logprob: -14.750212669372559
    8. '(' → logprob: -15.000212669372559
    9. '+' → logprob: -15.000212669372559
    10. ' @' → logprob: -15.000212669372559

Token 768: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -5.919942486798391e-05
    2. 'MAX' → logprob: -9.875059127807617
    3. '```' → logprob: -12.125059127807617
    4. 'max' → logprob: -13.875059127807617
    5. 'INF' → logprob: -14.500059127807617
    6. 'LIMIT' → logprob: -14.750059127807617
    7. 'MIN' → logprob: -16.000059127807617
    8. 'sys' → logprob: -16.625059127807617
    9. '@s' → logprob: -17.000059127807617
    10. ' @' → logprob: -17.125059127807617

Token 769: ' On' (ID: 2160)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.010051299817860126
    2. 'MAX' → logprob: -4.635051250457764
    3. 'max' → logprob: -8.760051727294922
    4. 'LIMIT' → logprob: -9.635051727294922
    5. 'sys' → logprob: -10.135051727294922
    6. 'MIN' → logprob: -10.760051727294922
    7. 'def' → logprob: -12.885051727294922
    8. 'INF' → logprob: -13.010051727294922
    9. 'V' → logprob: -14.010051727294922
    10. '@s' → logprob: -14.135051727294922

Token 770: ' définit' (ID: 89835)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.08443594723939896
    2. 'l' → logprob: -2.8344359397888184
    3. '@' → logprob: -4.209435939788818
    4. '.cache' → logprob: -5.584435939788818
    5. 'CACHE' → logprob: -7.334435939788818
    6. 'max' → logprob: -7.834435939788818
    7. 'r' → logprob: -8.334436416625977
    8. 'code' → logprob: -8.334436416625977
    9. 'range' → logprob: -8.584436416625977
    10. 'continue' → logprob: -8.709436416625977

Token 771: ' la' (ID: 557)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0052492949180305
    2. 'MAX' → logprob: -5.755249500274658
    3. 'def' → logprob: -7.255249500274658
    4. 'max' → logprob: -7.630249500274658
    5. 'l' → logprob: -8.3802490234375
    6. '
' → logprob: -9.1302490234375
    7. 'f' → logprob: -9.1302490234375
    8. '@s' → logprob: -9.2552490234375
    9. 'la' → logprob: -9.3802490234375
    10. 'MIN' → logprob: -10.0052490234375

Token 772: ' fonction' (ID: 17610)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.06835228949785233
    2. 'max' → logprob: -3.318352222442627
    3. 'MAX' → logprob: -3.943352222442627
    4. 'f' → logprob: -5.193352222442627
    5. 'l' → logprob: -6.068352222442627
    6. 'cache' → logprob: -6.943352222442627
    7. 'lim' → logprob: -7.568352222442627
    8. 'CACHE' → logprob: -7.568352222442627
    9. '
' → logprob: -8.818352699279785
    10. 'maximum' → logprob: -10.443352699279785

Token 773: ' réc' (ID: 36254)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0234077088534832
    2. 'def' → logprob: -3.7734076976776123
    3. '@
' → logprob: -10.398407936096191
    4. '
' → logprob: -10.523407936096191
    5. '@n' → logprob: -10.648407936096191
    6. ' @' → logprob: -10.773407936096191
    7. '@s' → logprob: -11.273407936096191
    8. '```' → logprob: -11.898407936096191
    9. '@login' → logprob: -12.273407936096191
    10. '@get' → logprob: -12.523407936096191

Token 774: 'ursive' (ID: 30543)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.030730554834008217
    2. 'def' → logprob: -4.280730724334717
    3. 'c' → logprob: -4.780730724334717
    4. 'cur' → logprob: -6.405730724334717
    5. '```' → logprob: -6.655730724334717
    6. 'ursion' → logprob: -6.780730724334717
    7. 'cache' → logprob: -6.905730724334717
    8. 'ursive' → logprob: -7.155730724334717
    9. 'ur' → logprob: -7.655730724334717
    10. '_cache' → logprob: -7.905730724334717

Token 775: '
' (ID: 198)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.001534620183520019
    2. 'def' → logprob: -6.501534461975098
    3. '@n' → logprob: -12.126534461975098
    4. '```' → logprob: -12.251534461975098
    5. '@s' → logprob: -12.376534461975098
    6. '@login' → logprob: -12.626534461975098
    7. ' @' → logprob: -12.626534461975098
    8. '@click' → logprob: -13.126534461975098
    9. '@get' → logprob: -13.626534461975098
    10. '(' → logprob: -13.626534461975098

Token 776: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0003148472751490772
    2. 'def' → logprob: -8.125314712524414
    3. '```' → logprob: -11.000314712524414
    4. '@s' → logprob: -14.625314712524414
    5. ' @' → logprob: -14.750314712524414
    6. '@login' → logprob: -15.125314712524414
    7. 'from' → logprob: -15.375314712524414
    8. '@n' → logprob: -15.625314712524414
    9. '@click' → logprob: -16.250314712524414
    10. '@m' → logprob: -16.250314712524414

Token 777: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. ' l' → logprob: -20.625
    3. 'cache' → logprob: -23.25
    4. '```' → logprob: -23.75
    5. 'lr' → logprob: -24.125
    6. 'staticmethod' → logprob: -24.5
    7. 'fun' → logprob: -24.5
    8. '@' → logprob: -24.875
    9. '	l' → logprob: -25.25
    10. '(l' → logprob: -25.375

Token 778: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.01966443844139576
    2. 'r' → logprob: -4.269664287567139
    3. 'l' → logprob: -5.269664287567139
    4. 'cache' → logprob: -8.769664764404297
    5. 'rl' → logprob: -10.144664764404297
    6. '@' → logprob: -10.144664764404297
    7. 'import' → logprob: -10.644664764404297
    8. '```' → logprob: -11.394664764404297
    9. 'cached' → logprob: -11.769664764404297
    10. 'python' → logprob: -12.019664764404297

Token 779: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0036211006809026003
    2. 'cache' → logprob: -5.6286211013793945
    3. '_cached' → logprob: -11.503621101379395
    4. 'cached' → logprob: -12.003621101379395
    5. '.cache' → logprob: -13.878621101379395
    6. 'Cache' → logprob: -14.128621101379395
    7. '_CACHE' → logprob: -14.253621101379395
    8. ' cache' → logprob: -14.378621101379395
    9. '-cache' → logprob: -14.503621101379395
    10. '	cache' → logprob: -14.753621101379395

Token 780: '(None' (ID: 65126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004128030501306057
    2. '(None' → logprob: -5.6291279792785645
    3. '(max' → logprob: -7.8791279792785645
    4. 'None' → logprob: -9.504128456115723
    5. 'max' → logprob: -9.754128456115723
    6. '
' → logprob: -11.504128456115723
    7. '(' → logprob: -12.629128456115723
    8. ' def' → logprob: -13.629128456115723
    9. '(def' → logprob: -13.879128456115723
    10. '    
' → logprob: -15.004128456115723

Token 781: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0789487287402153
    2. ')' → logprob: -2.578948736190796
    3. 'def' → logprob: -10.453948974609375
    4. ')
' → logprob: -10.453948974609375
    5. ')`
' → logprob: -13.953948974609375
    6. ')#' → logprob: -16.703948974609375
    7. ' )
' → logprob: -16.953948974609375
    8. ')`' → logprob: -16.953948974609375
    9. '
' → logprob: -17.203948974609375
    10. ')

' → logprob: -17.203948974609375

Token 782: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.822646693966817e-06
    2. '
' → logprob: -11.875007629394531
    3. ' def' → logprob: -14.125007629394531
    4. '(def' → logprob: -17.87500762939453
    5. '-def' → logprob: -18.62500762939453
    6. '('' → logprob: -18.62500762939453
    7. '<|end|>' → logprob: -18.62500762939453
    8. '	def' → logprob: -19.12500762939453
    9. ' déf' → logprob: -19.12500762939453
    10. 'de' → logprob: -19.50000762939453

Token 783: ' dfs' (ID: 51252)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.49224066734313965
    2. 'dfs' → logprob: -0.9922406673431396
    3. 'min' → logprob: -4.367240905761719
    4. 'dp' → logprob: -5.492240905761719
    5. 'solve' → logprob: -7.117240905761719
    6. ' dfs' → logprob: -8.867240905761719
    7. 'minimal' → logprob: -9.867240905761719
    8. 'rec' → logprob: -10.242240905761719
    9. 'minimum' → logprob: -10.367240905761719
    10. 'time' → logprob: -10.367240905761719

Token 784: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03942832723259926
    2. '(re' → logprob: -3.289428234100342
    3. '(rest' → logprob: -7.039428234100342
    4. '(rem' → logprob: -7.664428234100342
    5. '(distance' → logprob: -11.0394287109375
    6. ' (' → logprob: -11.5394287109375
    7. '(r' → logprob: -12.4144287109375
    8. '(pos' → logprob: -13.1644287109375
    9. '(t' → logprob: -13.2894287109375
    10. 'reste' → logprob: -13.6644287109375

Token 785: 'remaining' (ID: 83570)
  Prédit: 'remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.08898374438285828
    2. 'reste' → logprob: -2.9639837741851807
    3. 'remain' → logprob: -3.5889837741851807
    4. 'rest' → logprob: -5.713983535766602
    5. ' remaining' → logprob: -6.963983535766602
    6. 'rem' → logprob: -6.963983535766602
    7. ' reste' → logprob: -8.213983535766602
    8. 'r' → logprob: -8.713983535766602
    9. 're' → logprob: -9.588983535766602
    10. 'distance' → logprob: -10.213983535766602

Token 786: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.001785490894690156
    2. ',' → logprob: -7.0017852783203125
    3. '_dist' → logprob: -7.7517852783203125
    4. ',_' → logprob: -8.501785278320312
    5. '_' → logprob: -9.126785278320312
    6. '_,' → logprob: -10.876785278320312
    7. '_DISTANCE' → logprob: -10.876785278320312
    8. '_d' → logprob: -11.001785278320312
    9. ')_' → logprob: -11.001785278320312
    10. 'distance' → logprob: -11.501785278320312

Token 787: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.542423165636137e-05
    2. ' ,' → logprob: -10.250085830688477
    3. ',k' → logprob: -10.875085830688477
    4. ',s' → logprob: -11.000085830688477
    5. ',int' → logprob: -11.375085830688477
    6. ':int' → logprob: -13.625085830688477
    7. ':' → logprob: -13.750085830688477
    8. ',
' → logprob: -16.000085830688477
    9. 's' → logprob: -16.375085830688477
    10. 'int' → logprob: -16.875085830688477

Token 788: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.062090255320072174
    2. 'k' → logprob: -3.4370901584625244
    3. 'ex' → logprob: -4.1870903968811035
    4. ' speed' → logprob: -5.0620903968811035
    5. 'exp' → logprob: -5.0620903968811035
    6. ' exponent' → logprob: -9.562089920043945
    7. ' k' → logprob: -9.937089920043945
    8. 'expo' → logprob: -10.312089920043945
    9. ' exp' → logprob: -10.812089920043945
    10. 'power' → logprob: -12.562089920043945

Token 789: '_exp' (ID: 30306)
  Prédit: '_ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -0.815092921257019
    2. '):' → logprob: -1.315092921257019
    3. '_exp' → logprob: -1.315092921257019
    4. '):
' → logprob: -4.065093040466309
    5. 'exp' → logprob: -6.565093040466309
    6. '_k' → logprob: -7.565093040466309
    7. 'ex' → logprob: -7.565093040466309
    8. ')' → logprob: -7.690093040466309
    9. '):
' → logprob: -8.565093040466309
    10. '_power' → logprob: -9.440093040466309

Token 790: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06395440548658371
    2. '):' → logprob: -3.4389543533325195
    3. 'onent' → logprob: -3.8139543533325195
    4. ')' → logprob: -5.5639543533325195
    5. '):

' → logprob: -6.5639543533325195
    6. 'ont' → logprob: -6.9389543533325195
    7. 'on' → logprob: -7.1889543533325195
    8. '):
' → logprob: -7.9389543533325195
    9. 't' → logprob: -8.18895435333252
    10. 'ort' → logprob: -9.43895435333252

Token 791: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.041768160182983e-05
    2. ' if' → logprob: -10.375080108642578
    3. '   ' → logprob: -10.875080108642578
    4. ':' → logprob: -11.750080108642578
    5. ')' → logprob: -12.000080108642578
    6. '    ' → logprob: -12.500080108642578
    7. '<|end|>' → logprob: -12.875080108642578
    8. '	if' → logprob: -13.250080108642578
    9. '):' → logprob: -13.375080108642578
    10. '    
' → logprob: -13.625080108642578

Token 792: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2017684280872345
    2. '   ' → logprob: -1.951768398284912
    3. ' if' → logprob: -3.201768398284912
    4. '	if' → logprob: -13.45176887512207
    5. '   ' → logprob: -14.82676887512207
    6. '  ' → logprob: -15.07676887512207
    7. ' ' → logprob: -15.32676887512207
    8. 'n' → logprob: -15.95176887512207
    9. '```' → logprob: -16.20176887512207
    10. 'If' → logprob: -16.45176887512207

Token 793: ' remaining' (ID: 15448)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004164471756666899
    2. '   ' → logprob: -5.504164695739746
    3. ' if' → logprob: -9.379164695739746
    4. '#' → logprob: -13.629164695739746
    5. '```' → logprob: -15.379164695739746
    6. '	if' → logprob: -15.629164695739746
    7. 'global' → logprob: -18.37916374206543
    8. 'If' → logprob: -18.62916374206543
    9. '   ' → logprob: -18.62916374206543
    10. 'import' → logprob: -20.00416374206543

Token 794: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.0037196765188127756
    2. 'distance' → logprob: -5.878719806671143
    3. '==' → logprob: -7.503719806671143
    4. 'if' → logprob: -8.128719329833984
    5. '_' → logprob: -11.003719329833984
    6. ' ==' → logprob: -11.128719329833984
    7. '_dist' → logprob: -11.253719329833984
    8. '=' → logprob: -12.128719329833984
    9. '_DISTANCE' → logprob: -12.253719329833984
    10. 'Distance' → logprob: -12.628719329833984

Token 795: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07890410721302032
    2. ' ==' → logprob: -2.953904151916504
    3. '=' → logprob: -4.703904151916504
    4. ',' → logprob: -5.453904151916504
    5. '   ' → logprob: -5.453904151916504
    6. 'if' → logprob: -5.453904151916504
    7. '<=' → logprob: -7.578904151916504
    8. ')' → logprob: -8.078904151916504
    9. ')==' → logprob: -8.078904151916504
    10. ' if' → logprob: -8.578904151916504

Token 796: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011105302110081539
    2. ' ' → logprob: -9.125110626220703
    3. '   ' → logprob: -13.875110626220703
    4. 'remaining' → logprob: -14.250110626220703
    5. '=' → logprob: -16.000110626220703
    6. '1' → logprob: -16.750110626220703
    7. ' ' → logprob: -16.875110626220703
    8. 'if' → logprob: -17.625110626220703
    9. '```' → logprob: -17.625110626220703
    10. '
' → logprob: -17.750110626220703

Token 797: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.625001907348633
    3. 'remaining' → logprob: -15.000001907348633
    4. '1' → logprob: -17.125001907348633
    5. '```' → logprob: -17.250001907348633
    6. '   ' → logprob: -17.500001907348633
    7. '=' → logprob: -17.750001907348633
    8. '
' → logprob: -18.875001907348633
    9. '۰' → logprob: -19.250001907348633
    10. '000' → logprob: -19.437501907348633

Token 798: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.5027299822540954e-05
    2. 'if' → logprob: -10.125055313110352
    3. ' if' → logprob: -11.250055313110352
    4. ')' → logprob: -13.750055313110352
    5. ':' → logprob: -15.125055313110352
    6. ',' → logprob: -15.625055313110352
    7. '    
' → logprob: -16.00005531311035
    8. '):
' → logprob: -16.12505531311035
    9. '   ' → logprob: -16.50005531311035
    10. '
' → logprob: -16.87505531311035

Token 799: ' un' (ID: 537)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8319838047027588
    2. ':' → logprob: -1.7069838047027588
    3. '0' → logprob: -1.9569838047027588
    4. '   ' → logprob: -2.081983804702759
    5. 'True' → logprob: -2.581983804702759
    6. ' True' → logprob: -5.08198356628418
    7. ')' → logprob: -5.20698356628418
    8. '):' → logprob: -5.58198356628418
    9. 'if' → logprob: -5.95698356628418
    10. ' ' → logprob: -5.95698356628418

Token 800: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05894322320818901
    2. 'ent' → logprob: -3.308943271636963
    3. 'if' → logprob: -4.808943271636963
    4. 'assert' → logprob: -4.808943271636963
    5. 'in' → logprob: -5.933943271636963
    6. 'base' → logprob: -8.058942794799805
    7. 'integer' → logprob: -8.183942794799805
    8. 'pr' → logprob: -8.308942794799805
    9. 'param' → logprob: -8.308942794799805
    10. 'condition' → logprob: -8.683942794799805

Token 801: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0921942703134846e-05
    2. 'if' → logprob: -11.87501049041748
    3. ' if' → logprob: -13.37501049041748
    4. ':' → logprob: -13.62501049041748
    5. ')' → logprob: -15.12501049041748
    6. '):' → logprob: -15.12501049041748
    7. '):
' → logprob: -15.62501049041748
    8. ',' → logprob: -15.75001049041748
    9. '    
' → logprob: -16.000011444091797
    10. '  ' → logprob: -16.625011444091797

Token 802: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.4121114822482923e-06
    2. 'if' → logprob: -12.875003814697266
    3. ' if' → logprob: -14.125003814697266
    4. '   ' → logprob: -16.125003814697266
    5. ')' → logprob: -17.250003814697266
    6. '```' → logprob: -17.375003814697266
    7. '    
' → logprob: -18.250003814697266
    8. ',' → logprob: -18.625003814697266
    9. ':' → logprob: -19.250003814697266
    10. '	if' → logprob: -19.375003814697266

Token 803: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1291094869375229
    2. '   ' → logprob: -2.1291093826293945
    3. ' if' → logprob: -6.1291093826293945
    4. '	if' → logprob: -14.629109382629395
    5. '   ' → logprob: -16.62911033630371
    6. '  ' → logprob: -17.50411033630371
    7. ' ' → logprob: -18.12911033630371
    8. '```' → logprob: -18.37911033630371
    9. '    
' → logprob: -18.75411033630371
    10. 'If' → logprob: -19.37911033630371

Token 804: ' vitesse' (ID: 71752)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06255899369716644
    2. '   ' → logprob: -2.812558889389038
    3. ' if' → logprob: -7.437559127807617
    4. 'speed' → logprob: -13.437559127807617
    5. '```' → logprob: -14.937559127807617
    6. '	if' → logprob: -15.312559127807617
    7. 'global' → logprob: -15.687559127807617
    8. '   ' → logprob: -15.937559127807617
    9. '    
' → logprob: -16.687559127807617
    10. 'If' → logprob: -17.937559127807617

Token 805: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5028354525566101
    2. ' =' → logprob: -1.0028355121612549
    3. '   ' → logprob: -3.627835512161255
    4. 'v' → logprob: -7.377835273742676
    5. 'def' → logprob: -7.752835273742676
    6. 'if' → logprob: -8.377835273742676
    7. 'current' → logprob: -8.752835273742676
    8. 'speed' → logprob: -9.502835273742676
    9. '  ' → logprob: -10.377835273742676
    10. ')' → logprob: -10.502835273742676

Token 806: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.56364209135063e-05
    2. 'pow' → logprob: -9.875065803527832
    3. ' ' → logprob: -11.875065803527832
    4. 'speed' → logprob: -12.125065803527832
    5. '(' → logprob: -14.250065803527832
    6. '```' → logprob: -15.500065803527832
    7. '1' → logprob: -15.625065803527832
    8. '   ' → logprob: -15.750065803527832
    9. '`' → logprob: -16.125064849853516
    10. 'abs' → logprob: -16.750064849853516

Token 807: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.85235276655294e-05
    2. 'pow' → logprob: -9.375088691711426
    3. 'speed' → logprob: -13.250088691711426
    4. ' ' → logprob: -14.000088691711426
    5. '(' → logprob: -14.000088691711426
    6. '```' → logprob: -17.00008773803711
    7. '
' → logprob: -17.12508773803711
    8. '1' → logprob: -17.62508773803711
    9. 'abs' → logprob: -17.75008773803711
    10. '(pow' → logprob: -17.87508773803711

Token 808: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0010993726318702102
    2. ' **' → logprob: -6.876099586486816
    3. 'speed' → logprob: -10.251099586486816
    4. '
' → logprob: -11.626099586486816
    5. '^' → logprob: -11.751099586486816
    6. 'def' → logprob: -12.501099586486816
    7. '```' → logprob: -13.126099586486816
    8. '*' → logprob: -13.251099586486816
    9. '    
' → logprob: -13.876099586486816
    10. '(speed' → logprob: -14.126099586486816

Token 809: 'speed' (ID: 42880)
  Prédit: 'speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -1.4974866644479334e-05
    2. ' speed' → logprob: -11.125015258789062
    3. '(speed' → logprob: -16.000015258789062
    4. '	speed' → logprob: -17.375015258789062
    5. 'peed' → logprob: -17.625015258789062
    6. '.speed' → logprob: -18.875015258789062
    7. '-speed' → logprob: -19.625015258789062
    8. 'abs' → logprob: -20.250015258789062
    9. 's' → logprob: -20.500015258789062
    10. '{' → logprob: -20.750015258789062

Token 810: '_exp' (ID: 30306)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.275667279958725
    2. '_exp' → logprob: -1.5256673097610474
    3. 'def' → logprob: -4.400667190551758
    4. '   ' → logprob: -4.650667190551758
    5. 'if' → logprob: -7.150667190551758
    6. 'speed' → logprob: -8.025667190551758
    7. ' =' → logprob: -9.525667190551758
    8. '=' → logprob: -9.525667190551758
    9. 'pow' → logprob: -9.775667190551758
    10. 'k' → logprob: -10.025667190551758

Token 811: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.6895233531831764e-05
    2. ' if' → logprob: -11.37502670288086
    3. 'if' → logprob: -11.75002670288086
    4. ')' → logprob: -13.00002670288086
    5. ':' → logprob: -13.12502670288086
    6. '    
' → logprob: -13.25002670288086
    7. '    ' → logprob: -15.00002670288086
    8. ',' → logprob: -15.25002670288086
    9. '   ' → logprob: -15.50002670288086
    10. '  ' → logprob: -15.75002670288086

Token 812: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.5577775128767826e-06
    2. 'if' → logprob: -12.625005722045898
    3. ':' → logprob: -13.625005722045898
    4. ' if' → logprob: -14.875005722045898
    5. '):' → logprob: -15.750005722045898
    6. ')' → logprob: -16.1250057220459
    7. '):
' → logprob: -16.2500057220459
    8. '    
' → logprob: -16.2500057220459
    9. '   ' → logprob: -16.8750057220459
    10. 'def' → logprob: -17.1250057220459

Token 813: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10323270410299301
    2. '   ' → logprob: -2.3532326221466064
    3. 'v' → logprob: -5.9782328605651855
    4. ' if' → logprob: -7.8532328605651855
    5. 'speed' → logprob: -9.353232383728027
    6. 'vel' → logprob: -12.603232383728027
    7. '```' → logprob: -12.728232383728027
    8. 'velocity' → logprob: -13.103232383728027
    9. '   ' → logprob: -13.728232383728027
    10. '	if' → logprob: -13.728232383728027

Token 814: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.0002613358374219388
    2. ' remaining' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.875261306762695
    4. ' ' → logprob: -19.125261306762695
    5. '.remaining' → logprob: -19.250261306762695
    6. '  ' → logprob: -20.250261306762695
    7. 'Remaining' → logprob: -21.250261306762695
    8. '(' → logprob: -21.500261306762695
    9. '_remaining' → logprob: -21.500261306762695
    10. ' ' → logprob: -21.750261306762695

Token 815: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -1.7432603272027336e-06
    2. 'distance' → logprob: -13.375001907348633
    3. 'Distance' → logprob: -17.375001907348633
    4. '_DISTANCE' → logprob: -17.500001907348633
    5. '==' → logprob: -18.000001907348633
    6. '_dist' → logprob: -18.250001907348633
    7. '_' → logprob: -18.375001907348633
    8. '\' → logprob: -19.000001907348633
    9. '_d' → logprob: -19.625001907348633
    10. '=' → logprob: -19.875001907348633

Token 816: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3868783116340637
    2. '==' → logprob: -1.136878252029419
    3. ')==' → logprob: -13.13687801361084
    4. '()==' → logprob: -13.76187801361084
    5. '<=' → logprob: -14.13687801361084
    6. '[' → logprob: -14.13687801361084
    7. '0' → logprob: -14.38687801361084
    8. '=' → logprob: -14.76187801361084
    9. ' <=' → logprob: -15.01187801361084
    10. ']==' → logprob: -15.01187801361084

Token 817: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -21.875
    4. '۰' → logprob: -22.25
    5. '```' → logprob: -23.375
    6. '=' → logprob: -23.5
    7. '[' → logprob: -24.0
    8. '00' → logprob: -24.0
    9. '1' → logprob: -24.0
    10. '  ' → logprob: -24.375

Token 818: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. '1' → logprob: -23.5
    4. '```' → logprob: -23.625
    5. '۰' → logprob: -23.75
    6. '   ' → logprob: -23.75
    7. '=' → logprob: -24.5
    8. '[' → logprob: -24.875
    9. '000' → logprob: -25.0
    10. '00' → logprob: -25.0

Token 819: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3640992045402527
    2. '   ' → logprob: -1.7390992641448975
    3. 'and' → logprob: -2.8640992641448975
    4. ':' → logprob: -2.9890992641448975
    5. ':
' → logprob: -3.8640992641448975
    6. '       ' → logprob: -7.114099025726318
    7. ':return' → logprob: -8.489099502563477
    8. '	and' → logprob: -9.989099502563477
    9. ' ' → logprob: -10.989099502563477
    10. '):
' → logprob: -11.114099502563477

Token 820: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5251314640045166
    2. '       ' → logprob: -0.9001314640045166
    3. ' if' → logprob: -7.0251312255859375
    4. 'return' → logprob: -7.5251312255859375
    5. 'if' → logprob: -8.025131225585938
    6. ' return' → logprob: -8.650131225585938
    7. '	return' → logprob: -10.900131225585938
    8. '	if' → logprob: -11.275131225585938
    9. '    ' → logprob: -11.650131225585938
    10. ' ' → logprob: -11.775131225585938

Token 821: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10551859438419342
    2. 'return' → logprob: -2.9805185794830322
    3. '   ' → logprob: -3.1055185794830322
    4. ' if' → logprob: -5.980518817901611
    5. '       ' → logprob: -6.230518817901611
    6. ' return' → logprob: -9.730518341064453
    7. '	if' → logprob: -11.480518341064453
    8. ' ' → logprob: -12.980518341064453
    9. '	return' → logprob: -13.230518341064453
    10. '    ' → logprob: -13.605518341064453

Token 822: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18220403790473938
    2. 'return' → logprob: -1.807204008102417
    3. '   ' → logprob: -6.182204246520996
    4. ' if' → logprob: -8.057204246520996
    5. ' return' → logprob: -9.807204246520996
    6. '       ' → logprob: -11.307204246520996
    7. '#' → logprob: -13.307204246520996
    8. ' ' → logprob: -13.807204246520996
    9. '	if' → logprob: -14.182204246520996
    10. 'ret' → logprob: -14.557204246520996

Token 823: ' doit' (ID: 21822)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.491017609834671
    2. 'return' → logprob: -1.2410175800323486
    3. ' if' → logprob: -2.7410175800323486
    4. '   ' → logprob: -3.7410175800323486
    5. ' return' → logprob: -4.741017818450928
    6. '
' → logprob: -7.991017818450928
    7. '       ' → logprob: -8.24101734161377
    8. '#' → logprob: -8.49101734161377
    9. 's' → logprob: -8.61601734161377
    10. 'eturn' → logprob: -8.99101734161377

Token 824: ' être' (ID: 9104)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2040489912033081
    2. 'if' → logprob: -1.704048991203308
    3. 'ret' → logprob: -6.704049110412598
    4. '   ' → logprob: -6.829049110412598
    5. 'assert' → logprob: -8.954049110412598
    6. '#' → logprob: -9.329049110412598
    7. ' if' → logprob: -10.204049110412598
    8. ' return' → logprob: -10.579049110412598
    9. '       ' → logprob: -10.704049110412598
    10. 're' → logprob: -12.329049110412598

Token 825: ' à' (ID: 1221)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.25005000829696655
    2. '0' → logprob: -1.7500500679016113
    3. 'return' → logprob: -4.375050067901611
    4. 'at' → logprob: -4.500050067901611
    5. '1' → logprob: -4.750050067901611
    6. 'à' → logprob: -5.000050067901611
    7. ' speed' → logprob: -6.250050067901611
    8. '   ' → logprob: -6.500050067901611
    9. ' at' → logprob: -6.750050067901611
    10. 'ret' → logprob: -7.500050067901611

Token 826: ' vitesse' (ID: 71752)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019030584022402763
    2. 'speed' → logprob: -4.019030570983887
    3. '1' → logprob: -7.644030570983887
    4. 'normal' → logprob: -8.644030570983887
    5. ' ' → logprob: -9.394030570983887
    6. 'return' → logprob: -9.769030570983887
    7. ' speed' → logprob: -10.144030570983887
    8. 'v' → logprob: -11.394030570983887
    9. 'abs' → logprob: -12.644030570983887
    10. '```' → logprob: -13.019030570983887

Token 827: ' normale' (ID: 57494)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.6912813186645508
    2. '0' → logprob: -1.6912813186645508
    3. '_exp' → logprob: -1.9412813186645508
    4. '==' → logprob: -2.066281318664551
    5. '   ' → logprob: -3.566281318664551
    6. ' ==' → logprob: -5.441281318664551
    7. '=' → logprob: -5.816281318664551
    8. 'def' → logprob: -6.066281318664551
    9. ' ' → logprob: -6.191281318664551
    10. '1' → logprob: -6.566281318664551

Token 828: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7997021079063416
    2. '   ' → logprob: -1.0497021675109863
    3. 'and' → logprob: -2.0497021675109863
    4. ' if' → logprob: -3.0497021675109863
    5. 'if' → logprob: -4.424702167510986
    6. ',' → logprob: -6.174702167510986
    7. ' ' → logprob: -6.174702167510986
    8. ' (' → logprob: -6.549702167510986
    9. '(' → logprob: -6.674702167510986
    10. '0' → logprob: -6.799702167510986

Token 829: 'speed' (ID: 42880)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10566146671772003
    2. 'speed' → logprob: -2.355661392211914
    3. 'if' → logprob: -5.605661392211914
    4. 'return' → logprob: -6.730661392211914
    5. ' ' → logprob: -7.980661392211914
    6. ' speed' → logprob: -8.980661392211914
    7. ' if' → logprob: -10.355661392211914
    8. '   ' → logprob: -10.855661392211914
    9. ')' → logprob: -11.480661392211914
    10. ' return' → logprob: -11.730661392211914

Token 830: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.001175820711068809
    2. 'exp' → logprob: -6.751175880432129
    3. '	exp' → logprob: -13.501175880432129
    4. 'Exp' → logprob: -14.001175880432129
    5. ''exp' → logprob: -14.126175880432129
    6. '-exp' → logprob: -14.126175880432129
    7. '=' → logprob: -15.126175880432129
    8. '_ex' → logprob: -15.501175880432129
    9. 'def' → logprob: -15.501175880432129
    10. '_EXP' → logprob: -15.751175880432129

Token 831: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31449365615844727
    2. ' ==' → logprob: -1.3144936561584473
    3. ')==' → logprob: -7.439493656158447
    4. ')' → logprob: -7.689493656158447
    5. ']==' → logprob: -8.814493179321289
    6. '=' → logprob: -10.939493179321289
    7. '()==' → logprob: -11.689493179321289
    8. '0' → logprob: -12.189493179321289
    9. '==
' → logprob: -13.564493179321289
    10. ']' → logprob: -13.814493179321289

Token 832: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. ')' → logprob: -18.500001907348633
    4. '۰' → logprob: -19.375001907348633
    5. '<|end|>' → logprob: -20.500001907348633
    6. '   ' → logprob: -20.875001907348633
    7. '1' → logprob: -21.125001907348633
    8. '=' → logprob: -21.375001907348633
    9. '```' → logprob: -21.625001907348633
    10. '[' → logprob: -22.250001907348633

Token 833: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '<|end|>' → logprob: -18.375
    4. '۰' → logprob: -19.75
    5. ')' → logprob: -19.75
    6. '<|end|>' → logprob: -21.25
    7. '1' → logprob: -22.25
    8. '০' → logprob: -22.5
    9. '```' → logprob: -22.625
    10. '=' → logprob: -22.75

Token 834: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2551787197589874
    2. '):' → logprob: -2.630178689956665
    3. '   ' → logprob: -3.005178689956665
    4. '       ' → logprob: -3.130178689956665
    5. ' and' → logprob: -3.255178689956665
    6. '):
' → logprob: -4.255178928375244
    7. 'and' → logprob: -5.505178928375244
    8. '),' → logprob: -7.130178928375244
    9. ':' → logprob: -7.380178928375244
    10. ')return' → logprob: -7.880178928375244

Token 835: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48445427417755127
    2. '   ' → logprob: -0.9844542741775513
    3. ':' → logprob: -4.734454154968262
    4. ' and' → logprob: -6.984454154968262
    5. ',' → logprob: -8.859454154968262
    6. ' if' → logprob: -9.234454154968262
    7. '           ' → logprob: -9.484454154968262
    8. ':
' → logprob: -9.609454154968262
    9. ' :' → logprob: -10.359454154968262
    10. '    ' → logprob: -10.484454154968262

Token 836: ' pouvoir' (ID: 27197)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0005722135538235307
    2. ' return' → logprob: -7.625572204589844
    3. 'ret' → logprob: -9.625572204589844
    4. '   ' → logprob: -11.875572204589844
    5. '
' → logprob: -12.500572204589844
    6. '{return' → logprob: -12.500572204589844
    7. ' ' → logprob: -13.750572204589844
    8. ':return' → logprob: -14.250572204589844
    9. 're' → logprob: -14.500572204589844
    10. 'que' → logprob: -15.125572204589844

Token 837: ' "' (ID: 392)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002845294773578644
    2. 'ret' → logprob: -5.877845287322998
    3. ' return' → logprob: -10.377845764160156
    4. 'fin' → logprob: -12.752845764160156
    5. 're' → logprob: -13.627845764160156
    6. '   ' → logprob: -14.127845764160156
    7. ' retourner' → logprob: -14.377845764160156
    8. 'r' → logprob: -14.752845764160156
    9. 'termin' → logprob: -14.877845764160156
    10. 'repr' → logprob: -14.877845764160156

Token 838: 'start' (ID: 5236)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -1.0996922254562378
    2. 'return' → logprob: -1.5996922254562378
    3. 'termin' → logprob: -1.8496922254562378
    4. '0' → logprob: -2.0996923446655273
    5. 'arr' → logprob: -2.8496923446655273
    6. 'stop' → logprob: -3.4746923446655273
    7. 'ret' → logprob: -3.4746923446655273
    8. 'contin' → logprob: -3.8496923446655273
    9. ' terminer' → logprob: -5.224692344665527
    10. 're' → logprob: -5.349692344665527

Token 839: ' watching' (ID: 14705)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.736944317817688
    2. 'return' → logprob: -0.986944317817688
    3. ' return' → logprob: -2.4869441986083984
    4. ' la' → logprob: -3.2369441986083984
    5. 'le' → logprob: -5.486944198608398
    6. ')' → logprob: -5.486944198608398
    7. 'la' → logprob: -6.361944198608398
    8. 'final' → logprob: -6.611944198608398
    9. '"
' → logprob: -6.611944198608398
    10. 'fin' → logprob: -6.736944198608398

Token 840: '"
' (ID: 1092)
  Prédit: '"
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.2792441248893738
    2. '"' → logprob: -2.5292441844940186
    3. ')"
' → logprob: -2.6542441844940186
    4. '   ' → logprob: -3.2792441844940186
    5. ')' → logprob: -4.4042439460754395
    6. 'def' → logprob: -4.9042439460754395
    7. '")' → logprob: -5.0292439460754395
    8. ')
' → logprob: -5.0292439460754395
    9. '"""
' → logprob: -5.2792439460754395
    10. '")
' → logprob: -5.5292439460754395

Token 841: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6335065364837646
    2. '   ' → logprob: -0.7585065364837646
    3. ' if' → logprob: -7.758506774902344
    4. ':' → logprob: -8.008506774902344
    5. ' and' → logprob: -9.633506774902344
    6. '           ' → logprob: -10.758506774902344
    7. '    ' → logprob: -11.383506774902344
    8. '     ' → logprob: -11.508506774902344
    9. 'if' → logprob: -11.633506774902344
    10. ',' → logprob: -12.133506774902344

Token 842: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005701484624296427
    2. 'return' → logprob: -5.255701541900635
    3. '   ' → logprob: -8.005701065063477
    4. ' if' → logprob: -9.505701065063477
    5. '       ' → logprob: -9.755701065063477
    6. '	if' → logprob: -13.630701065063477
    7. ' return' → logprob: -15.505701065063477
    8. '    ' → logprob: -16.755701065063477
    9. ' ' → logprob: -16.880701065063477
    10. '           ' → logprob: -17.130701065063477

Token 843: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.008615161292254925
    2. ' speed' → logprob: -4.758615016937256
    3. '	speed' → logprob: -15.008615493774414
    4. '   ' → logprob: -16.383615493774414
    5. '(speed' → logprob: -16.383615493774414
    6. 'Speed' → logprob: -17.758615493774414
    7. 'score' → logprob: -17.758615493774414
    8. ' ' → logprob: -17.883615493774414
    9. '  ' → logprob: -18.383615493774414
    10. '_speed' → logprob: -18.633615493774414

Token 844: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.00010223194840364158
    2. '==' → logprob: -9.500102043151855
    3. 'exp' → logprob: -10.750102043151855
    4. ' ==' → logprob: -12.875102043151855
    5. '_ex' → logprob: -13.250102043151855
    6. '_' → logprob: -14.500102043151855
    7. '_EXP' → logprob: -15.750102043151855
    8. '	exp' → logprob: -15.875102043151855
    9. '[' → logprob: -16.125102996826172
    10. '_exc' → logprob: -16.625102996826172

Token 845: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.012649968266487122
    2. ' ==' → logprob: -4.387650012969971
    3. ')==' → logprob: -10.012649536132812
    4. ']==' → logprob: -10.387649536132812
    5. '=' → logprob: -10.887649536132812
    6. '()==' → logprob: -11.012649536132812
    7. '==
' → logprob: -11.012649536132812
    8. '!=' → logprob: -12.387649536132812
    9. '===' → logprob: -13.012649536132812
    10. '0' → logprob: -13.012649536132812

Token 846: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '<|end|>' → logprob: -17.3750057220459
    4. '۰' → logprob: -19.2500057220459
    5. '1' → logprob: -20.1250057220459
    6. '```' → logprob: -20.3750057220459
    7. '[' → logprob: -20.6250057220459
    8. '<|end|>' → logprob: -20.6250057220459
    9. '#' → logprob: -21.0000057220459
    10. '   ' → logprob: -21.3750057220459

Token 847: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '<|end|>' → logprob: -18.5
    4. '۰' → logprob: -19.375
    5. '```' → logprob: -20.375
    6. '1' → logprob: -20.75
    7. '=' → logprob: -20.875
    8. '[' → logprob: -21.5
    9. ' ' → logprob: -22.125
    10. '<|end|>' → logprob: -22.375

Token 848: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3632848858833313
    2. ':
' → logprob: -1.2382848262786865
    3. ':return' → logprob: -4.488285064697266
    4. '       ' → logprob: -5.738285064697266
    5. 'return' → logprob: -9.113285064697266
    6. '           ' → logprob: -9.738285064697266
    7. ' return' → logprob: -9.988285064697266
    8. '   ' → logprob: -10.988285064697266
    9. '):
' → logprob: -11.363285064697266
    10. ':
' → logprob: -11.488285064697266

Token 849: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06256705522537231
    2. 'return' → logprob: -2.8125669956207275
    3. ' return' → logprob: -7.562567234039307
    4. '           ' → logprob: -10.062566757202148
    5. '   ' → logprob: -10.937566757202148
    6. ':return' → logprob: -11.687566757202148
    7. '	return' → logprob: -11.937566757202148
    8. '{return' → logprob: -13.562566757202148
    9. '```' → logprob: -14.437566757202148
    10. '	' → logprob: -15.062566757202148

Token 850: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.2723104848410003e-05
    2. '       ' → logprob: -11.500022888183594
    3. ' return' → logprob: -11.500022888183594
    4. '	return' → logprob: -13.375022888183594
    5. '   ' → logprob: -14.250022888183594
    6. ':return' → logprob: -16.500022888183594
    7. '{return' → logprob: -16.625022888183594
    8. '           ' → logprob: -18.625022888183594
    9. ')return' → logprob: -19.000022888183594
    10. 'ret' → logprob: -19.125022888183594

Token 851: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -19.500003814697266
    4. ' ' → logprob: -21.500003814697266
    5. '00' → logprob: -21.750003814697266
    6. '  ' → logprob: -22.500003814697266
    7. '000' → logprob: -22.625003814697266
    8. '1' → logprob: -22.875003814697266
    9. '     ' → logprob: -23.625003814697266
    10. '
' → logprob: -23.625003814697266

Token 852: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. 'float' → logprob: -23.125
    4. '000' → logprob: -23.5
    5. '(' → logprob: -23.75
    6. '   ' → logprob: -23.875
    7. '۰' → logprob: -23.875
    8. '00' → logprob: -23.875
    9. '1' → logprob: -24.125
    10. ' ' → logprob: -24.875

Token 853: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00207460206001997
    2. '   ' → logprob: -6.252074718475342
    3. 'else' → logprob: -9.377074241638184
    4. 'return' → logprob: -10.502074241638184
    5. ' else' → logprob: -10.877074241638184
    6. '
' → logprob: -12.252074241638184
    7. 'if' → logprob: -12.377074241638184
    8. '           ' → logprob: -13.252074241638184
    9. 'elif' → logprob: -13.877074241638184
    10. ' return' → logprob: -14.002074241638184

Token 854: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017385227605700493
    2. '   ' → logprob: -4.267385005950928
    3. 'else' → logprob: -6.142385005950928
    4. 'if' → logprob: -7.642385005950928
    5. 'return' → logprob: -8.267385482788086
    6. '
' → logprob: -8.517385482788086
    7. ' else' → logprob: -9.892385482788086
    8. 'elif' → logprob: -9.892385482788086
    9. '    
' → logprob: -11.642385482788086
    10. '        
' → logprob: -12.267385482788086

Token 855: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7088577151298523
    2. '   ' → logprob: -1.583857774734497
    3. 'else' → logprob: -2.083857774734497
    4. '1' → logprob: -2.458857774734497
    5. 'float' → logprob: -3.333857774734497
    6. '0' → logprob: -3.458857774734497
    7. 'return' → logprob: -3.833857774734497
    8. '
' → logprob: -6.458857536315918
    9. '#' → logprob: -7.583857536315918
    10. 'inf' → logprob: -7.833857536315918

Token 856: ' a' (ID: 261)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0067415237426758
    2. 's' → logprob: -1.7567415237426758
    3. ' peux' → logprob: -2.006741523742676
    4. ' return' → logprob: -2.381741523742676
    5. 'continue' → logprob: -3.131741523742676
    6. 'n' → logprob: -3.506741523742676
    7. '#' → logprob: -3.631741523742676
    8. 'return' → logprob: -3.631741523742676
    9. ' n' → logprob: -3.881741523742676
    10. '   ' → logprob: -4.881741523742676

Token 857: ' fini' (ID: 63561)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3345315754413605
    2. 'termin' → logprob: -1.334531545639038
    3. 'fin' → logprob: -4.584531784057617
    4. 'term' → logprob: -5.209531784057617
    5. 'atte' → logprob: -6.209531784057617
    6. 'finished' → logprob: -7.334531784057617
    7. 'finish' → logprob: -7.459531784057617
    8. 'pu' → logprob: -7.709531784057617
    9. ' terminé' → logprob: -8.084531784057617
    10. 'dé' → logprob: -8.209531784057617

Token 858: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3892171382904053
    2. '       ' → logprob: -1.1392171382904053
    3. '
' → logprob: -6.514217376708984
    4. '    
' → logprob: -8.389217376708984
    5. 'if' → logprob: -8.389217376708984
    6. ' if' → logprob: -8.639217376708984
    7. '    ' → logprob: -9.139217376708984
    8. '        
' → logprob: -10.389217376708984
    9. '  ' → logprob: -11.014217376708984
    10. 'return' → logprob: -11.514217376708984

Token 859: ' pas' (ID: 2173)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.776898251497187e-05
    2. '   ' → logprob: -10.1250581741333
    3. '
' → logprob: -11.8750581741333
    4. 'return' → logprob: -11.8750581741333
    5. 'else' → logprob: -13.6250581741333
    6. ' else' → logprob: -14.2500581741333
    7. '	' → logprob: -14.7500581741333
    8. ' return' → logprob: -14.7500581741333
    9. '1' → logprob: -15.0000581741333
    10. '        
' → logprob: -16.125057220458984

Token 860: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.10211233049631119
    2. 'bes' → logprob: -2.477112293243408
    3. ' besoin' → logprob: -5.352112293243408
    4. 'plus' → logprob: -5.477112293243408
    5. 'd' → logprob: -6.727112293243408
    6. ' de' → logprob: -6.852112293243408
    7. '#' → logprob: -7.227112293243408
    8. 'temps' → logprob: -7.602112293243408
    9. 'à' → logprob: -8.477112770080566
    10. ' ' → logprob: -9.352112770080566

Token 861: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.0010178061202168465
    2. 'time' → logprob: -7.2510175704956055
    3. 'temp' → logprob: -9.001017570495605
    4. ' temps' → logprob: -9.501017570495605
    5. '#' → logprob: -11.126017570495605
    6. 'co' → logprob: -11.501017570495605
    7. 'tem' → logprob: -11.626017570495605
    8. 'wait' → logprob: -11.751017570495605
    9. 'dur' → logprob: -11.876017570495605
    10. 'tempo' → logprob: -11.876017570495605

Token 862: ' supplémentaire' (ID: 111252)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023476185277104378
    2. '   ' → logprob: -3.7734761238098145
    3. ' if' → logprob: -10.273476600646973
    4. '
' → logprob: -10.898476600646973
    5. '    ' → logprob: -11.023476600646973
    6. ',' → logprob: -11.023476600646973
    7. 'return' → logprob: -11.023476600646973
    8. 'if' → logprob: -11.148476600646973
    9. 'import' → logprob: -11.148476600646973
    10. '	' → logprob: -11.273476600646973

Token 863: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028612238820642233
    2. '   ' → logprob: -5.877861022949219
    3. '
' → logprob: -11.002861022949219
    4. 'return' → logprob: -11.002861022949219
    5. 'if' → logprob: -11.627861022949219
    6. ' if' → logprob: -12.877861022949219
    7. 'import' → logprob: -13.502861022949219
    8. ',' → logprob: -13.627861022949219
    9. 'else' → logprob: -13.627861022949219
    10. '           ' → logprob: -13.877861022949219

Token 864: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003693539882078767
    2. '       ' → logprob: -5.628693580627441
    3. 'if' → logprob: -9.878693580627441
    4. '```' → logprob: -10.753693580627441
    5. ' if' → logprob: -11.753693580627441
    6. 'return' → logprob: -11.878693580627441
    7. '    
' → logprob: -13.378693580627441
    8. '
' → logprob: -14.003693580627441
    9. '	if' → logprob: -14.253693580627441
    10. '	' → logprob: -14.503693580627441

Token 865: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31425541639328003
    2. '       ' → logprob: -1.3142554759979248
    3. 'else' (adapté à ' else') → logprob: -7.564255237579346
    4. 'return' → logprob: -8.689255714416504
    5. ' else' → logprob: -8.689255714416504
    6. 'if' → logprob: -10.189255714416504
    7. 'elif' → logprob: -10.189255714416504
    8. '    ' → logprob: -11.064255714416504
    9. '
' → logprob: -11.814255714416504
    10. '     ' → logprob: -11.939255714416504

Token 866: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5260832905769348
    2. '       ' → logprob: -1.27608323097229
    3. '           ' → logprob: -2.52608323097229
    4. ':
' → logprob: -3.27608323097229
    5. '   ' → logprob: -5.026083469390869
    6. ' return' → logprob: -6.151083469390869
    7. ':return' → logprob: -6.276083469390869
    8. 'return' → logprob: -7.276083469390869
    9. ' :' → logprob: -7.901083469390869
    10. '        ' → logprob: -9.401082992553711

Token 867: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006653673015534878
    2. 'return' → logprob: -5.256653785705566
    3. ' return' → logprob: -6.881653785705566
    4. '   ' → logprob: -7.881653785705566
    5. '           ' → logprob: -11.381653785705566
    6. ' ' → logprob: -13.881653785705566
    7. '1' → logprob: -14.131653785705566
    8. '     ' → logprob: -15.006653785705566
    9. '      ' → logprob: -15.256653785705566
    10. '	return' → logprob: -15.506653785705566

Token 868: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005148604512214661
    2. '#' (adapté à ' #') → logprob: -5.630148410797119
    3. '1' → logprob: -6.880148410797119
    4. '   ' → logprob: -8.505148887634277
    5. ' return' → logprob: -8.755148887634277
    6. 'inf' → logprob: -9.880148887634277
    7. 'res' → logprob: -10.380148887634277
    8. 'min' → logprob: -11.255148887634277
    9. 'temps' → logprob: -11.755148887634277
    10. 'ret' → logprob: -11.880148887634277

Token 869: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2838675379753113
    2. '#' → logprob: -1.408867597579956
    3. ' return' → logprob: -6.158867359161377
    4. ' #' → logprob: -8.408867835998535
    5. '   ' → logprob: -8.783867835998535
    6. 'temps' → logprob: -9.408867835998535
    7. '       ' → logprob: -10.283867835998535
    8. 'time' → logprob: -10.408867835998535
    9. 'ret' → logprob: -11.283867835998535
    10. '           ' → logprob: -11.283867835998535

Token 870: ' doit' (ID: 21822)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3859081566333771
    2. '#' → logprob: -1.8859081268310547
    3. 'continue' → logprob: -2.8859081268310547
    4. 'do' → logprob: -2.8859081268310547
    5. '   ' → logprob: -3.1359081268310547
    6. ' return' → logprob: -6.135908126831055
    7. 'def' → logprob: -6.385908126831055
    8. '           ' → logprob: -6.635908126831055
    9. '       ' → logprob: -6.885908126831055
    10. 'pe' → logprob: -7.260908126831055

Token 871: ' ram' (ID: 20920)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.647588849067688
    2. 'app' → logprob: -1.522588849067688
    3. 'changer' → logprob: -2.3975887298583984
    4. 'ret' → logprob: -3.2725887298583984
    5. 'r' → logprob: -3.3975887298583984
    6. 'return' → logprob: -4.022588729858398
    7. 'repr' → logprob: -4.522588729858398
    8. 'div' → logprob: -4.772588729858398
    9. 'aj' → logprob: -5.272588729858398
    10. 'faire' → logprob: -5.397588729858398

Token 872: 'ener' (ID: 944)
  Prédit: 'ener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ener' → logprob: -7.636475493200123e-05
    2. '
' → logprob: -10.125076293945312
    3. '|' → logprob: -12.125076293945312
    4. 'ene' → logprob: -12.125076293945312
    5. 'per' → logprob: -12.375076293945312
    6. 'è' → logprob: -12.875076293945312
    7. 'm' → logprob: -13.125076293945312
    8. 'en' → logprob: -13.250076293945312
    9. '1' → logprob: -13.500076293945312
    10. '

' → logprob: -13.750076293945312

Token 873: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3263477385044098
    2. 'le' → logprob: -2.326347827911377
    3. 'speed' → logprob: -2.326347827911377
    4. ' la' → logprob: -3.451347827911377
    5. 'v' → logprob: -3.826347827911377
    6. ' speed' → logprob: -4.076347827911377
    7. 'à' → logprob: -5.451347827911377
    8. ' le' → logprob: -6.076347827911377
    9. 'l' → logprob: -6.576347827911377
    10. '0' → logprob: -7.201347827911377

Token 874: ' vitesse' (ID: 71752)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014418402686715126
    2. 'speed' → logprob: -4.639418601989746
    3. 'vit' → logprob: -5.514418601989746
    4. ' vitesse' → logprob: -7.514418601989746
    5. 'vite' → logprob: -11.014418601989746
    6. ' speed' → logprob: -11.514418601989746
    7. ' ' → logprob: -11.639418601989746
    8. '0' → logprob: -12.264418601989746
    9. 'spe' → logprob: -12.514418601989746
    10. 'distance' → logprob: -12.639418601989746

Token 875: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.6306129693984985
    2. '   ' → logprob: -1.6306129693984985
    3. ' à' → logprob: -1.8806129693984985
    4. 'à' → logprob: -2.380612850189209
    5. 'return' → logprob: -2.755612850189209
    6. 'exp' → logprob: -2.755612850189209
    7. ' =' → logprob: -2.880612850189209
    8. ' to' → logprob: -3.130612850189209
    9. 'to' → logprob: -3.505612850189209
    10. '       ' → logprob: -3.505612850189209

Token 876: ' normale' (ID: 57494)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005832957685925066
    2. ' ' → logprob: -8.50058364868164
    3. 'normal' → logprob: -8.50058364868164
    4. '1' → logprob: -8.75058364868164
    5. 'speed' → logprob: -12.00058364868164
    6. 'norm' → logprob: -12.50058364868164
    7. ' normal' → logprob: -13.50058364868164
    8. '```' → logprob: -13.62558364868164
    9. 'zero' → logprob: -14.50058364868164
    10. '3' → logprob: -14.62558364868164

Token 877: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.359483003616333
    2. '       ' → logprob: -2.359483003616333
    3. '           ' → logprob: -2.734483003616333
    4. '
' → logprob: -2.984483003616333
    5. 'return' → logprob: -3.359483003616333
    6. ' =' → logprob: -3.484483003616333
    7. ' return' → logprob: -4.859482765197754
    8. ',' → logprob: -5.234482765197754
    9. '=' → logprob: -5.359482765197754
    10. ':' → logprob: -6.109482765197754

Token 878: 'speed' (ID: 42880)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35937294363975525
    2. 'return' → logprob: -2.234372854232788
    3. 'dfs' → logprob: -2.484372854232788
    4. '0' → logprob: -2.984372854232788
    5. 'abs' → logprob: -3.359372854232788
    6. ' ' → logprob: -5.609373092651367
    7. ')' → logprob: -5.609373092651367
    8. ' return' → logprob: -5.609373092651367
    9. ' dfs' → logprob: -5.734373092651367
    10. 'max' → logprob: -5.859373092651367

Token 879: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.005316531751304865
    2. 'exp' → logprob: -5.505316734313965
    3. '=' → logprob: -7.505316734313965
    4. '==' → logprob: -8.380316734313965
    5. '           ' → logprob: -8.755316734313965
    6. '	exp' → logprob: -9.630316734313965
    7. ')' → logprob: -10.255316734313965
    8. 'Exp' → logprob: -11.255316734313965
    9. '   ' → logprob: -11.380316734313965
    10. '_EXP' → logprob: -11.380316734313965

Token 880: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2645367980003357
    2. ' ==' → logprob: -2.2645368576049805
    3. '=' → logprob: -2.8895368576049805
    4. ')' → logprob: -3.0145368576049805
    5. '0' → logprob: -4.5145368576049805
    6. '>' → logprob: -6.1395368576049805
    7. 'return' → logprob: -6.5145368576049805
    8. ' )' → logprob: -6.6395368576049805
    9. '+' → logprob: -6.8895368576049805
    10. '!=' → logprob: -7.0145368576049805

Token 881: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004886920796707273
    2. ' ' → logprob: -7.625488758087158
    3. ')' → logprob: -14.87548828125
    4. '   ' → logprob: -16.12548828125
    5. '1' → logprob: -16.62548828125
    6. '           ' → logprob: -17.12548828125
    7. '```' → logprob: -17.12548828125
    8. ' ' → logprob: -17.62548828125
    9. '  ' → logprob: -18.00048828125
    10. ',' → logprob: -18.00048828125

Token 882: ')' (ID: 8)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6542552709579468
    2. ')
' → logprob: -1.0292552709579468
    3. ')' → logprob: -2.2792553901672363
    4. '       ' → logprob: -4.904255390167236
    5. ',' → logprob: -5.154255390167236
    6. '),' → logprob: -5.529255390167236
    7. '   ' → logprob: -6.404255390167236
    8. '):
' → logprob: -7.904255390167236
    9. ')
' → logprob: -8.029254913330078
    10. '
' → logprob: -8.404254913330078

Token 883: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46918267011642456
    2. '       ' → logprob: -1.2191827297210693
    3. ':' → logprob: -3.4691827297210693
    4. '           ' → logprob: -3.7191827297210693
    5. ':
' → logprob: -4.09418249130249
    6. ',' → logprob: -5.96918249130249
    7. '
' → logprob: -6.96918249130249
    8. ' =' → logprob: -7.21918249130249
    9. 'return' → logprob: -7.71918249130249
    10. ':return' → logprob: -7.84418249130249

Token 884: ' accél' (ID: 152966)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.67596834897995
    2. '1' → logprob: -2.3009684085845947
    3. 'dfs' → logprob: -2.4259684085845947
    4. 'aj' → logprob: -3.3009684085845947
    5. 'pay' → logprob: -3.4259684085845947
    6. ' app' → logprob: -3.6759684085845947
    7. 'appel' → logprob: -3.6759684085845947
    8. 'f' → logprob: -3.8009684085845947
    9. ' avanç' → logprob: -3.9259684085845947
    10. ' ' → logprob: -3.9259684085845947

Token 885: 'érant' (ID: 91190)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.22865904867649078
    2. 'érant' → logprob: -1.8536590337753296
    3. 'er' → logprob: -3.103659152984619
    4. 'erer' → logprob: -6.353659152984619
    5. 'erar' → logprob: -8.353658676147461
    6. 'rer' → logprob: -8.603658676147461
    7. 'ér' → logprob: -8.853658676147461
    8. 'érateur' → logprob: -8.853658676147461
    9. 'ération' → logprob: -9.103658676147461
    10. 'éré' → logprob: -10.228658676147461

Token 886: ' ou' (ID: 2031)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.5846846699714661
    2. ' ou' → logprob: -0.8346846699714661
    3. '   ' → logprob: -6.2096848487854
    4. 'or' → logprob: -6.2096848487854
    5. 'return' → logprob: -6.2096848487854
    6. ' or' → logprob: -7.2096848487854
    7. '       ' → logprob: -7.7096848487854
    8. ',' → logprob: -8.084684371948242
    9. 'au' → logprob: -8.709684371948242
    10. 'et' → logprob: -8.959684371948242

Token 887: ' ralent' (ID: 173999)
  Prédit: 'ral'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ral' → logprob: -0.2624112665653229
    2. 'dé' → logprob: -2.76241135597229
    3. 'ou' → logprob: -3.26241135597229
    4. ' ralent' → logprob: -3.63741135597229
    5. 'd' → logprob: -4.012411117553711
    6. 'r' → logprob: -4.137411117553711
    7. 'div' → logprob: -4.262411117553711
    8. 'ré' → logprob: -4.887411117553711
    9. '   ' → logprob: -5.012411117553711
    10. '           ' → logprob: -5.262411117553711

Token 888: 'issant' (ID: 31359)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.07194533944129944
    2. 'érant' → logprob: -3.3219454288482666
    3. 'érer' → logprob: -3.4469454288482666
    4. 'ér' → logprob: -7.1969451904296875
    5. 'erend' → logprob: -9.071945190429688
    6. '```' → logprob: -9.196945190429688
    7. 'èrent' → logprob: -9.321945190429688
    8. 'erer' → logprob: -9.821945190429688
    9. 'éré' → logprob: -10.196945190429688
    10. '   ' → logprob: -10.196945190429688

Token 889: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011006437242031097
    2. '       ' → logprob: -5.3860063552856445
    3. 'return' → logprob: -6.3860063552856445
    4. ',' → logprob: -6.7610063552856445
    5. '
' → logprob: -6.8860063552856445
    6. ':' → logprob: -6.8860063552856445
    7. ':
' → logprob: -8.011006355285645
    8. '1' → logprob: -8.261006355285645
    9. ' return' → logprob: -9.011006355285645
    10. '           ' → logprob: -9.136006355285645

Token 890: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7023828625679016
    2. '       ' → logprob: -0.7023828625679016
    3. 'return' → logprob: -5.202383041381836
    4. '           ' → logprob: -6.327383041381836
    5. ' return' → logprob: -7.702383041381836
    6. ',' → logprob: -7.702383041381836
    7. ':' → logprob: -7.952383041381836
    8. 'if' → logprob: -8.952383041381836
    9. ' if' → logprob: -8.952383041381836
    10. '
' → logprob: -9.952383041381836

Token 891: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03529608994722366
    2. 'if' → logprob: -3.7852962017059326
    3. 'time' → logprob: -5.5352959632873535
    4. '#' (adapté à ' #') → logprob: -6.0352959632873535
    5. 'cost' → logprob: -6.7852959632873535
    6. ' return' → logprob: -7.2852959632873535
    7. '   ' → logprob: -7.2852959632873535
    8. 'steps' → logprob: -7.7852959632873535
    9. 'temps' → logprob: -8.035296440124512
    10. '1' → logprob: -8.035296440124512

Token 892: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.013746888376772404
    2. '#' → logprob: -4.888746738433838
    3. 'if' → logprob: -6.388746738433838
    4. 'time' → logprob: -7.013746738433838
    5. 'change' → logprob: -7.388746738433838
    6. '   ' → logprob: -7.513746738433838
    7. '       ' → logprob: -7.638746738433838
    8. 'steps' → logprob: -8.138747215270996
    9. ' return' → logprob: -8.388747215270996
    10. 'temps' → logprob: -8.388747215270996

Token 893: ' ne' (ID: 453)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09759432822465897
    2. ' return' → logprob: -3.9725942611694336
    3. '=' → logprob: -4.097594261169434
    4. 'pe' → logprob: -4.222594261169434
    5. 'temps' → logprob: -4.222594261169434
    6. '#' → logprob: -4.472594261169434
    7. '   ' → logprob: -5.847594261169434
    8. ' =' → logprob: -6.097594261169434
    9. 'do' → logprob: -6.722594261169434
    10. 'time' → logprob: -6.972594261169434

Token 894: ' peut' (ID: 9216)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5812088251113892
    2. '#' → logprob: -1.7062088251113892
    3. 'pe' → logprob: -1.9562088251113892
    4. 'do' → logprob: -3.8312087059020996
    5. 'def' → logprob: -3.8312087059020996
    6. 'f' → logprob: -4.0812087059021
    7. 'pas' → logprob: -4.5812087059021
    8. 'veux' → logprob: -4.8312087059021
    9. ' peux' → logprob: -5.4562087059021
    10. '   ' → logprob: -5.4562087059021

Token 895: ' rien' (ID: 23082)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.10332269221544266
    2. 'return' → logprob: -2.353322744369507
    3. ' pas' → logprob: -6.853322505950928
    4. '   ' → logprob: -7.728322505950928
    5. '           ' → logprob: -7.728322505950928
    6. 'ret' → logprob: -8.478322982788086
    7. 'que' → logprob: -8.728322982788086
    8. '       ' → logprob: -8.853322982788086
    9. 'plus' → logprob: -8.853322982788086
    10. 'r' → logprob: -9.228322982788086

Token 896: ' avancer' (ID: 151163)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18876531720161438
    2. 'import' → logprob: -2.063765287399292
    3. '   ' → logprob: -4.188765525817871
    4. 'if' → logprob: -4.813765525817871
    5. ' return' → logprob: -5.313765525817871
    6. 'inf' → logprob: -5.313765525817871
    7. 'from' → logprob: -5.688765525817871
    8. 'float' → logprob: -6.438765525817871
    9. '       ' → logprob: -6.813765525817871
    10. 'else' → logprob: -6.938765525817871

Token 897: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014001889154314995
    2. ',' → logprob: -5.514001846313477
    3. 'return' → logprob: -6.139001846313477
    4. '       ' → logprob: -6.639001846313477
    5. '
' → logprob: -6.889001846313477
    6. '1' → logprob: -7.014001846313477
    7. ' if' → logprob: -7.639001846313477
    8. ' =' → logprob: -7.764001846313477
    9. '           ' → logprob: -7.889001846313477
    10. ' return' → logprob: -8.014001846313477

Token 898: ' avanç' (ID: 70203)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6859829425811768
    2. 'temps' → logprob: -1.3109829425811768
    3. '0' → logprob: -2.0609829425811768
    4. 'dfs' → logprob: -3.8109829425811768
    5. 'return' → logprob: -4.310982704162598
    6. 'change' → logprob: -4.810982704162598
    7. 'app' → logprob: -4.935982704162598
    8. 'une' → logprob: -5.060982704162598
    9. '#' → logprob: -5.310982704162598
    10. ' ' → logprob: -5.685982704162598

Token 899: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.5698025226593018
    2. 'er' → logprob: -1.0698025226593018
    3. 'e' → logprob: -2.5698025226593018
    4. 'ir' → logprob: -5.819802284240723
    5. 'issant' → logprob: -5.944802284240723
    6. 'çant' → logprob: -6.194802284240723
    7. 'ancer' → logprob: -6.319802284240723
    8. 'cer' → logprob: -6.819802284240723
    9. 'a' → logprob: -7.944802284240723
    10. 'r' → logprob: -8.194802284240723

Token 900: ' vitesse' (ID: 71752)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9422273635864258
    2. ',' → logprob: -1.4422273635864258
    3. '           ' → logprob: -2.067227363586426
    4. '       ' → logprob: -2.192227363586426
    5. 'return' → logprob: -2.692227363586426
    6. ' return' → logprob: -4.317227363586426
    7. '
' → logprob: -4.442227363586426
    8. '1' → logprob: -4.817227363586426
    9. '               ' → logprob: -5.942227363586426
    10. ' ,' → logprob: -6.192227363586426

Token 901: ' !=' (ID: 1666)
  Prédit: '_exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.9933498501777649
    2. 'exp' → logprob: -1.3683497905731201
    3. '   ' → logprob: -2.49334979057312
    4. '=' → logprob: -2.74334979057312
    5. ',' → logprob: -3.24334979057312
    6. '0' → logprob: -3.74334979057312
    7. ')' → logprob: -3.74334979057312
    8. '           ' → logprob: -3.86834979057312
    9. '       ' → logprob: -4.243350028991699
    10. 'def' → logprob: -4.243350028991699

Token 902: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022188756614923477
    2. '1' → logprob: -4.022188663482666
    3. ' ' → logprob: -5.647188663482666
    4. '3' → logprob: -8.147189140319824
    5. '```' → logprob: -9.397189140319824
    6. 'normal' → logprob: -10.834689140319824
    7. '`' → logprob: -11.397189140319824
    8. '=' → logprob: -11.584689140319824
    9. '  ' → logprob: -11.959689140319824
    10. ')' → logprob: -11.959689140319824

Token 903: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0026508092414587736
    2. '1' → logprob: -6.002650737762451
    3. ' ' → logprob: -9.62765121459961
    4. 'exp' → logprob: -10.25265121459961
    5. '```' → logprob: -10.75265121459961
    6. 'normal' → logprob: -11.25265121459961
    7. '3' → logprob: -11.37765121459961
    8. '=' → logprob: -12.81515121459961
    9. '{' → logprob: -12.87765121459961
    10. 'ex' → logprob: -12.94015121459961

Token 904: ' ->' (ID: 2747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12560243904590607
    2. '       ' → logprob: -2.5006024837493896
    3. '           ' → logprob: -4.5006022453308105
    4. '
' → logprob: -4.6256022453308105
    5. ',' → logprob: -5.1256022453308105
    6. 'if' → logprob: -5.7506022453308105
    7. ' if' → logprob: -6.2506022453308105
    8. '    
' → logprob: -6.5006022453308105
    9. ',
' → logprob: -8.125602722167969
    10. 'return' → logprob: -8.125602722167969

Token 905: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20705825090408325
    2. ' return' → logprob: -1.7070581912994385
    3. '1' → logprob: -6.707058429718018
    4. 'abs' → logprob: -6.832058429718018
    5. '#' → logprob: -7.082058429718018
    6. '   ' → logprob: -7.582058429718018
    7. 'ret' → logprob: -8.08205795288086
    8. '       ' → logprob: -8.08205795288086
    9. '           ' → logprob: -8.33205795288086
    10. ' abs' → logprob: -8.70705795288086

Token 906: ' doit' (ID: 21822)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.26304760575294495
    2. 'do' → logprob: -2.263047695159912
    3. ' return' → logprob: -2.638047695159912
    4. ' ne' → logprob: -4.388047695159912
    5. '+' → logprob: -4.513047695159912
    6. 'ne' → logprob: -4.638047695159912
    7. 'pe' → logprob: -5.638047695159912
    8. 'n' → logprob: -6.013047695159912
    9. ' do' → logprob: -6.013047695159912
    10. 'continue' → logprob: -6.638047695159912

Token 907: ' "' (ID: 392)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4783252477645874
    2. 'pass' → logprob: -1.8533252477645874
    3. 'app' → logprob: -2.478325366973877
    4. 'faire' → logprob: -2.603325366973877
    5. 'penser' → logprob: -2.603325366973877
    6. 'changer' → logprob: -2.853325366973877
    7. 'aj' → logprob: -2.978325366973877
    8. 'dé' → logprob: -3.103325366973877
    9. 'contin' → logprob: -3.228325366973877
    10. 'return' → logprob: -3.353325366973877

Token 908: 'per' (ID: 543)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.0506975650787354
    2. '1' → logprob: -1.1756975650787354
    3. 'return' → logprob: -1.3006975650787354
    4. 'pass' → logprob: -3.5506975650787354
    5. 'acc' → logprob: -4.925697326660156
    6. 'min' → logprob: -5.050697326660156
    7. 'changer' → logprob: -5.550697326660156
    8. 'faire' → logprob: -6.050697326660156
    9. ' dfs' → logprob: -6.175697326660156
    10. 'penser' → logprob: -6.550697326660156

Token 909: 'dre' (ID: 54853)
  Prédit: 'dre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dre' → logprob: -0.0007108822464942932
    2. 'te' → logprob: -8.000710487365723
    3. 'd' → logprob: -9.000710487365723
    4. 'der' → logprob: -9.375710487365723
    5. 'dr' → logprob: -10.500710487365723
    6. 'mettre' → logprob: -10.750710487365723
    7. 'de' → logprob: -11.000710487365723
    8. 'ds' → logprob: -11.125710487365723
    9. 'ter' → logprob: -11.375710487365723
    10. '
' → logprob: -11.500710487365723

Token 910: '"' (ID: 1)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.3142005503177643
    2. ' du' → logprob: -1.689200520515442
    3. '1' → logprob: -3.0642006397247314
    4. 'temps' → logprob: -3.9392006397247314
    5. ' ' → logprob: -4.689200401306152
    6. 'time' → logprob: -5.814200401306152
    7. 'au' → logprob: -7.064200401306152
    8. 'temp' → logprob: -7.189200401306152
    9. ' temps' → logprob: -7.439200401306152
    10. '   ' → logprob: -7.689200401306152

Token 911: ' du' (ID: 1462)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11986733973026276
    2. 'temps' → logprob: -2.4948673248291016
    3. 'du' → logprob: -4.244867324829102
    4. 'time' → logprob: -4.994867324829102
    5. ' ' → logprob: -5.744867324829102
    6. '   ' → logprob: -6.494867324829102
    7. ' temps' → logprob: -7.244867324829102
    8. '10' → logprob: -7.244867324829102
    9. ' du' → logprob: -7.369867324829102
    10. 'de' → logprob: -7.994867324829102

Token 912: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.00034809779026545584
    2. 'temp' → logprob: -8.625348091125488
    3. '1' → logprob: -9.375348091125488
    4. ' temps' → logprob: -9.625348091125488
    5. 'tem' → logprob: -11.625348091125488
    6. 'tempo' → logprob: -12.125348091125488
    7. 'time' → logprob: -13.125348091125488
    8. '#' → logprob: -14.875348091125488
    9. 'Temps' → logprob: -15.125348091125488
    10. 'tmp' → logprob: -15.875348091125488

Token 913: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017312824726104736
    2. ':' → logprob: -5.392313003540039
    3. '\n' → logprob: -5.517313003540039
    4. ',' → logprob: -6.017313003540039
    5. '\t' → logprob: -6.017313003540039
    6. '
' → logprob: -7.142313003540039
    7. '    
' → logprob: -7.392313003540039
    8. ' :' → logprob: -8.142313003540039
    9. ' =' → logprob: -8.392313003540039
    10. ':
' → logprob: -8.517313003540039

Token 914: ' modifier' (ID: 37684)
  Prédit: 'changer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'changer' → logprob: -0.08228202909231186
    2. 'ram' → logprob: -3.207282066345215
    3. 're' → logprob: -4.582282066345215
    4. 'faire' → logprob: -4.707282066345215
    5. 'ch' → logprob: -5.957282066345215
    6. '1' → logprob: -6.207282066345215
    7. 'modifier' → logprob: -6.457282066345215
    8. 'app' → logprob: -6.707282066345215
    9. 'aj' → logprob: -6.707282066345215
    10. 'rest' → logprob: -6.957282066345215

Token 915: ' la' (ID: 557)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -1.0146732330322266
    2. '   ' → logprob: -1.2646732330322266
    3. 'return' → logprob: -2.3896732330322266
    4. 'la' → logprob: -2.6396732330322266
    5. ' la' → logprob: -3.2646732330322266
    6. '1' → logprob: -3.2646732330322266
    7. ' speed' → logprob: -3.3896732330322266
    8. 'exp' → logprob: -3.8896732330322266
    9. 'le' → logprob: -4.514673233032227
    10. ' ' → logprob: -4.639673233032227

Token 916: ' vitesse' (ID: 71752)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.02302498370409012
    2. 'speed' → logprob: -4.148025035858154
    3. '1' → logprob: -5.773025035858154
    4. ' vitesse' → logprob: -6.023025035858154
    5. 'vit' → logprob: -7.023025035858154
    6. ' speed' → logprob: -8.773024559020996
    7. '0' → logprob: -8.773024559020996
    8. ' ' → logprob: -9.898024559020996
    9. 'temps' → logprob: -9.898024559020996
    10. '```' → logprob: -10.273024559020996

Token 917: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018010808853432536
    2. ',' → logprob: -7.126801013946533
    3. '    
' → logprob: -8.001801490783691
    4. ':' → logprob: -8.126801490783691
    5. '.' → logprob: -9.501801490783691
    6. '
' → logprob: -9.626801490783691
    7. '\n' → logprob: -10.376801490783691
    8. '  ' → logprob: -10.501801490783691
    9. '  
' → logprob: -11.001801490783691
    10. '   
' → logprob: -11.001801490783691

Token 918: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004876619670540094
    2. '       ' → logprob: -5.379876613616943
    3. '```' → logprob: -9.254877090454102
    4. '\n' → logprob: -10.004877090454102
    5. '    
' → logprob: -10.504877090454102
    6. '
' → logprob: -10.629877090454102
    7. '    ' → logprob: -11.379877090454102
    8. '   ' → logprob: -11.879877090454102
    9. '\' → logprob: -12.379877090454102
    10. '\t' → logprob: -12.379877090454102

Token 919: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04697302728891373
    2. 'if' → logprob: -4.42197322845459
    3. 'time' → logprob: -4.54697322845459
    4. '#' (adapté à ' #') → logprob: -5.04697322845459
    5. ' return' → logprob: -5.42197322845459
    6. 'cost' → logprob: -5.54697322845459
    7. 'steps' → logprob: -6.42197322845459
    8. 'change' → logprob: -6.79697322845459
    9. 'diff' → logprob: -7.17197322845459
    10. '   ' → logprob: -7.29697322845459

Token 920: ' Mais' (ID: 13880)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.014052326790988445
    2. 'if' → logprob: -5.639052391052246
    3. ' return' → logprob: -6.139052391052246
    4. '#' → logprob: -6.764052391052246
    5. 'cost' → logprob: -7.014052391052246
    6. '           ' → logprob: -7.139052391052246
    7. '   ' → logprob: -7.139052391052246
    8. '       ' → logprob: -7.264052391052246
    9. 'time' → logprob: -7.514052391052246
    10. 'steps' → logprob: -7.514052391052246

Token 921: ' comme' (ID: 7971)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5986036658287048
    2. ' return' → logprob: -1.7236037254333496
    3. 'temps' → logprob: -2.7236037254333496
    4. ' on' → logprob: -2.8486037254333496
    5. 'on' → logprob: -3.4736037254333496
    6. '#' → logprob: -3.4736037254333496
    7. 'if' → logprob: -4.09860372543335
    8. ' temps' → logprob: -4.34860372543335
    9. ' if' → logprob: -4.72360372543335
    10. 'abs' → logprob: -5.47360372543335

Token 922: ' avancer' (ID: 151163)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.6012391448020935
    2. 'remaining' → logprob: -1.9762392044067383
    3. 'speed' → logprob: -2.4762392044067383
    4. 'la' → logprob: -2.7262392044067383
    5. 'dfs' → logprob: -2.7262392044067383
    6. ' on' → logprob: -3.7262392044067383
    7. 'le' → logprob: -3.8512392044067383
    8. 'abs' → logprob: -4.976239204406738
    9. 'il' → logprob: -4.976239204406738
    10. 'return' → logprob: -5.351239204406738

Token 923: ' ' (ID: 220)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.20968210697174072
    2. 'd' → logprob: -2.459681987762451
    3. ' ne' → logprob: -3.334681987762451
    4. ' à' → logprob: -4.584681987762451
    5. ' la' → logprob: -4.584681987762451
    6. ' de' → logprob: -4.709681987762451
    7. ' ' → logprob: -5.084681987762451
    8. '1' → logprob: -5.584681987762451
    9. ',' → logprob: -5.709681987762451
    10. ' un' → logprob: -5.709681987762451

Token 924: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3634057641029358
    2. ' d' → logprob: -1.863405704498291
    3. '1' → logprob: -2.613405704498291
    4. '=' → logprob: -3.613405704498291
    5. 'à' → logprob: -4.363405704498291
    6. ' =' → logprob: -4.863405704498291
    7. 'de' → logprob: -5.488405704498291
    8. '+' → logprob: -5.488405704498291
    9. 'au' → logprob: -5.738405704498291
    10. ' ' → logprob: -5.988405704498291

Token 925: 's' (ID: 82)
  Prédit: ' seconde'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seconde' → logprob: -1.3706945180892944
    2. ' second' → logprob: -1.9956945180892944
    3. ':' → logprob: -2.495694637298584
    4. ' +' → logprob: -2.620694637298584
    5. '_second' → logprob: -2.745694637298584
    6. ')' → logprob: -3.370694637298584
    7. '_' → logprob: -3.370694637298584
    8. 'second' → logprob: -3.370694637298584
    9. '```' → logprob: -3.370694637298584
    10. ' s' → logprob: -3.495694637298584

Token 926: ' =' (ID: 314)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8886017799377441
    2. ',' → logprob: -1.3886017799377441
    3. ' =' → logprob: -3.013601779937744
    4. ' ,' → logprob: -3.263601779937744
    5. ' en' → logprob: -3.763601779937744
    6. ' plus' → logprob: -3.763601779937744
    7. ' ne' → logprob: -3.763601779937744
    8. ' at' → logprob: -3.888601779937744
    9. ' ' → logprob: -4.138601779937744
    10. ' +' → logprob: -4.263601779937744

Token 927: ' avancer' (ID: 151163)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014904488809406757
    2. '0' → logprob: -4.889904499053955
    3. ' ' → logprob: -5.014904499053955
    4. '+' → logprob: -8.889904022216797
    5. 'speed' → logprob: -9.389904022216797
    6. '3' → logprob: -10.139904022216797
    7. ' +' → logprob: -10.264904022216797
    8. 'time' → logprob: -10.264904022216797
    9. ' speed' → logprob: -10.389904022216797
    10. 'temps' → logprob: -10.764904022216797

Token 928: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0075534582138062
    2. ' d' → logprob: -1.0075534582138062
    3. 'd' → logprob: -1.5075534582138062
    4. ' ' → logprob: -3.6325535774230957
    5. ' de' → logprob: -5.007553577423096
    6. 'de' → logprob: -5.632553577423096
    7. ' à' → logprob: -6.257553577423096
    8. 'au' → logprob: -6.507553577423096
    9. 'à' → logprob: -6.882553577423096
    10. ' +' → logprob: -6.882553577423096

Token 929: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4072701036930084
    2. '0' → logprob: -1.282270073890686
    3. '3' → logprob: -3.5322701930999756
    4. ' ' → logprob: -4.0322699546813965
    5. 'abs' → logprob: -5.5322699546813965
    6. 'à' → logprob: -6.9072699546813965
    7. 'speed' → logprob: -6.9072699546813965
    8. 'une' → logprob: -7.1572699546813965
    9. '...' → logprob: -8.032270431518555
    10. 'au' → logprob: -8.032270431518555

Token 930: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4305121600627899
    2. ' **' → logprob: -1.8055121898651123
    3. ')' → logprob: -3.3055121898651123
    4. '^' → logprob: -3.4305121898651123
    5. ' -' → logprob: -3.6805121898651123
    6. '```' → logprob: -4.055511951446533
    7. '-' → logprob: -4.305511951446533
    8. ' times' → logprob: -4.430511951446533
    9. '<|end|>' → logprob: -4.805511951446533
    10. ' *' → logprob: -4.930511951446533

Token 931: 'k' (ID: 74)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4839728772640228
    2. 'speed' → logprob: -1.1089729070663452
    3. '-exp' → logprob: -3.6089727878570557
    4. '(-' → logprob: -4.608973026275635
    5. '0' → logprob: -5.233973026275635
    6. '-speed' → logprob: -5.483973026275635
    7. '{-' → logprob: -6.358973026275635
    8. '(speed' → logprob: -7.233973026275635
    9. '-ex' → logprob: -7.483973026275635
    10. '{' → logprob: -7.608973026275635

Token 932: ' secondes' (ID: 109098)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7729572057723999
    2. '),' → logprob: -1.7729572057724
    3. ',' → logprob: -2.5229573249816895
    4. '):' → logprob: -2.8979573249816895
    5. '**' → logprob: -3.2729573249816895
    6. '):
' → logprob: -3.5229573249816895
    7. ':' → logprob: -3.8979573249816895
    8. ' -' → logprob: -3.8979573249816895
    9. '```' → logprob: -4.1479573249816895
    10. '
' → logprob: -4.5229573249816895

Token 933: ' vidéo' (ID: 42292)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9706214666366577
    2. ',
' → logprob: -1.7206214666366577
    3. '),' → logprob: -2.3456215858459473
    4. '):
' → logprob: -2.3456215858459473
    5. ')' → logprob: -2.9706215858459473
    6. '
' → logprob: -3.3456215858459473
    7. ' ,' → logprob: -3.5956215858459473
    8. ':
' → logprob: -4.095621585845947
    9. '   ' → logprob: -4.470621585845947
    10. ')
' → logprob: -4.470621585845947

Token 934: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1900908946990967
    2. '):
' → logprob: -1.9400908946990967
    3. '):' → logprob: -1.9400908946990967
    4. '   ' → logprob: -2.1900908946990967
    5. ')' → logprob: -2.6900908946990967
    6. ':' → logprob: -2.9400908946990967
    7. ':
' → logprob: -3.3150908946990967
    8. '
' → logprob: -3.6900908946990967
    9. ' ,' → logprob: -4.190091133117676
    10. ',
' → logprob: -4.315091133117676

Token 935: ' on' (ID: 402)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0990103483200073
    2. 'return' → logprob: -1.0990103483200073
    3. ' on' → logprob: -2.099010467529297
    4. '1' → logprob: -2.474010467529297
    5. '
' → logprob: -3.224010467529297
    6. '#' → logprob: -3.974010467529297
    7. ' ' → logprob: -4.349010467529297
    8. '   ' → logprob: -4.474010467529297
    9. ' #' → logprob: -5.599010467529297
    10. '\n' → logprob: -5.599010467529297

Token 936: ' ne' (ID: 453)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5385609269142151
    2. 'return' → logprob: -1.9135608673095703
    3. ' doit' → logprob: -2.5385608673095703
    4. 'do' → logprob: -2.6635608673095703
    5. ' do' → logprob: -3.4135608673095703
    6. ' continue' → logprob: -3.6635608673095703
    7. ' peut' → logprob: -4.28856086730957
    8. ' ne' → logprob: -4.53856086730957
    9. '   ' → logprob: -4.91356086730957
    10. ' peux' → logprob: -5.28856086730957

Token 937: ' peut' (ID: 9216)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.29940950870513916
    2. 'pe' → logprob: -2.7994093894958496
    3. ' do' → logprob: -2.9244093894958496
    4. ' return' → logprob: -2.9244093894958496
    5. 'return' → logprob: -2.9244093894958496
    6. ' peux' → logprob: -4.42440938949585
    7. 'pas' → logprob: -5.29940938949585
    8. ' peut' → logprob: -5.29940938949585
    9. '+' → logprob: -5.67440938949585
    10. ' doit' → logprob: -5.67440938949585

Token 938: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.05442752689123154
    2. ' pas' → logprob: -3.1794276237487793
    3. 'plus' → logprob: -5.304427623748779
    4. ' plus' → logprob: -6.929427623748779
    5. '           ' → logprob: -7.054427623748779
    6. 'faire' → logprob: -7.304427623748779
    7. 'return' → logprob: -7.554427623748779
    8. '       ' → logprob: -7.554427623748779
    9. 'pass' → logprob: -8.179427146911621
    10. '               ' → logprob: -8.179427146911621

Token 939: ' atteindre' (ID: 95734)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17129139602184296
    2. ' return' → logprob: -2.7962913513183594
    3. 'faire' → logprob: -3.4212913513183594
    4. 'ret' → logprob: -3.7962913513183594
    5. 'just' → logprob: -4.921291351318359
    6. ' continuer' → logprob: -5.046291351318359
    7. ' faire' → logprob: -5.296291351318359
    8. ' just' → logprob: -5.671291351318359
    9. 'contin' → logprob: -5.921291351318359
    10. ' simply' → logprob: -6.046291351318359

Token 940: ' exact' (ID: 6354)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3237025737762451
    2. 'remaining' → logprob: -2.073702573776245
    3. ' ' → logprob: -3.073702573776245
    4. 'speed' → logprob: -3.323702573776245
    5. '1' → logprob: -4.698702812194824
    6. ' remaining' → logprob: -4.948702812194824
    7. 'la' → logprob: -4.948702812194824
    8. ' la' → logprob: -5.073702812194824
    9. 'le' → logprob: -5.198702812194824
    10. 'une' → logprob: -5.198702812194824

Token 941: ' ' (ID: 220)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.052852071821689606
    2. 'ly' → logprob: -3.802852153778076
    3. 'ment' → logprob: -4.177852153778076
    4. '
' → logprob: -6.177852153778076
    5. 'ément' → logprob: -6.427852153778076
    6. '0' → logprob: -6.552852153778076
    7. 'e' → logprob: -6.552852153778076
    8. 'emment' → logprob: -6.802852153778076
    9. 'lement' → logprob: -6.927852153778076
    10. ' ' → logprob: -7.302852153778076

Token 942: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5403378009796143
    2. '1' → logprob: -1.5403378009796143
    3. 'distance' → logprob: -2.5403378009796143
    4. ' ' → logprob: -3.5403378009796143
    5. 'remaining' → logprob: -3.5403378009796143
    6. 'normal' → logprob: -4.165337562561035
    7. 'speed' → logprob: -4.540337562561035
    8. 'position' → logprob: -5.290337562561035
    9. 'ly' → logprob: -5.290337562561035
    10. ' distance' → logprob: -6.040337562561035

Token 943: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02976691536605358
    2. ':' → logprob: -4.529767036437988
    3. ':
' → logprob: -6.029767036437988
    4. ',' → logprob: -6.029767036437988
    5. '       ' → logprob: -6.029767036437988
    6. '    
' → logprob: -6.404767036437988
    7. ')' → logprob: -6.529767036437988
    8. '\n' → logprob: -6.529767036437988
    9. '
' → logprob: -6.779767036437988
    10. '.' → logprob: -7.904767036437988

Token 944: 'si' (ID: 4778)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16617096960544586
    2. ')
' → logprob: -2.416171073913574
    3. ')\' → logprob: -3.541171073913574
    4. '   ' → logprob: -4.541171073913574
    5. '#' → logprob: -5.291171073913574
    6. ' )' → logprob: -5.791171073913574
    7. '),' → logprob: -6.291171073913574
    8. ')
' → logprob: -6.666171073913574
    9. 'return' → logprob: -6.666171073913574
    10. '\n' → logprob: -6.916171073913574

Token 945: ' vitesse' (ID: 71752)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.5418055057525635
    2. ' speed' → logprob: -1.2918055057525635
    3. 'remaining' → logprob: -2.6668055057525635
    4. ' remaining' → logprob: -4.291805267333984
    5. ' on' → logprob: -4.416805267333984
    6. 'k' → logprob: -4.666805267333984
    7. ' k' → logprob: -5.041805267333984
    8. ' la' → logprob: -5.166805267333984
    9. 'on' → logprob: -5.291805267333984
    10. 'la' → logprob: -5.541805267333984

Token 946: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3300081491470337
    2. '!=' → logprob: -1.4550081491470337
    3. '>' → logprob: -4.205008029937744
    4. ')' → logprob: -4.455008029937744
    5. '_exp' → logprob: -4.580008029937744
    6. ' >' → logprob: -5.580008029937744
    7. '==' → logprob: -6.830008029937744
    8. ' ==' → logprob: -7.330008029937744
    9. ' ' → logprob: -7.455008029937744
    10. '_ex' → logprob: -7.705008029937744

Token 947: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00880211777985096
    2. ' ' → logprob: -4.7588019371032715
    3. '1' → logprob: -8.88380241394043
    4. '=' → logprob: -10.13380241394043
    5. '```' → logprob: -12.88380241394043
    6. '>' → logprob: -13.00880241394043
    7. '`' → logprob: -14.32130241394043
    8. '
' → logprob: -14.63380241394043
    9. ')' → logprob: -14.69630241394043
    10. ' ' → logprob: -15.25880241394043

Token 948: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21624866127967834
    2. ')
' → logprob: -2.2162487506866455
    3. '):
' → logprob: -2.8412487506866455
    4. '):' → logprob: -4.466248512268066
    5. '),' → logprob: -4.591248512268066
    6. ',' → logprob: -6.341248512268066
    7. ':' → logprob: -6.966248512268066
    8. ')\' → logprob: -7.841248512268066
    9. '   ' → logprob: -8.091248512268066
    10. ' )' → logprob: -8.216248512268066

Token 949: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02213103510439396
    2. '       ' → logprob: -4.022130966186523
    3. '
' → logprob: -6.772130966186523
    4. '```' → logprob: -7.022130966186523
    5. 'return' → logprob: -7.147130966186523
    6. '\n' → logprob: -8.272130966186523
    7. ' if' → logprob: -8.397130966186523
    8. ' return' → logprob: -8.397130966186523
    9. 'if' → logprob: -8.647130966186523
    10. '\' → logprob: -10.022130966186523

Token 950: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.705363392829895
    2. '   ' → logprob: -1.455363392829895
    3. ' return' → logprob: -2.2053632736206055
    4. '       ' → logprob: -2.4553632736206055
    5. '#' (adapté à ' #') → logprob: -3.4553632736206055
    6. 'time' → logprob: -5.0803632736206055
    7. ' #' → logprob: -5.0803632736206055
    8. ' time' → logprob: -5.3303632736206055
    9. '           ' → logprob: -5.4553632736206055
    10. 'steps' → logprob: -5.8303632736206055

Token 951: ' Donc' (ID: 88837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7160662412643433
    2. 'return' → logprob: -0.8410662412643433
    3. '       ' → logprob: -3.091066360473633
    4. ' return' → logprob: -3.841066360473633
    5. 'if' → logprob: -5.091066360473633
    6. '#' → logprob: -5.341066360473633
    7. ' if' → logprob: -7.841066360473633
    8. 'for' → logprob: -8.216066360473633
    9. ' #' → logprob: -8.966066360473633
    10. 'distance' → logprob: -9.091066360473633

Token 952: ' il' (ID: 1793)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.015032495371997356
    2. ' return' → logprob: -5.1400322914123535
    3. '#' → logprob: -5.6400322914123535
    4. '           ' → logprob: -6.0150322914123535
    5. 'if' → logprob: -6.1400322914123535
    6. 'ret' → logprob: -8.890032768249512
    7. '
' → logprob: -8.890032768249512
    8. '       ' → logprob: -9.015032768249512
    9. 'abs' → logprob: -9.015032768249512
    10. 'inf' → logprob: -9.265032768249512

Token 953: ' faut' (ID: 17821)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5006616711616516
    2. ' return' → logprob: -1.5006616115570068
    3. ' faut' → logprob: -2.625661611557007
    4. ' n' → logprob: -3.500661611557007
    5. 'f' → logprob: -3.625661611557007
    6. 'n' → logprob: -4.000661849975586
    7. '   ' → logprob: -4.750661849975586
    8. ' faudra' → logprob: -5.750661849975586
    9. ' est' → logprob: -6.125661849975586
    10. ' reste' → logprob: -6.125661849975586

Token 954: ' dé' (ID: 2393)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7538937330245972
    2. 'faire' → logprob: -2.2538938522338867
    3. 'ret' → logprob: -2.3788938522338867
    4. 'dfs' → logprob: -2.6288938522338867
    5. 'min' → logprob: -2.7538938522338867
    6. 'contin' → logprob: -4.003893852233887
    7. 're' → logprob: -4.253893852233887
    8. 'ram' → logprob: -4.378893852233887
    9. ' revenir' → logprob: -4.378893852233887
    10. 'aller' → logprob: -4.628893852233887

Token 955: 'composer' (ID: 165799)
  Prédit: 'caler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'caler' → logprob: -1.0985662937164307
    2. 'f' → logprob: -1.7235662937164307
    3. 'placer' → logprob: -2.5985662937164307
    4. 'fin' → logprob: -2.7235662937164307
    5. 'pass' → logprob: -2.8485662937164307
    6. 'penser' → logprob: -2.9735662937164307
    7. 'c' → logprob: -2.9735662937164307
    8. 'coder' → logprob: -3.4735662937164307
    9. 'faire' → logprob: -3.5985662937164307
    10. 'lay' → logprob: -3.7235662937164307

Token 956: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9783891439437866
    2. ' la' → logprob: -1.6033891439437866
    3. ' return' → logprob: -2.353389263153076
    4. 'return' → logprob: -2.478389263153076
    5. ' en' → logprob: -2.853389263153076
    6. ' ' → logprob: -3.603389263153076
    7. '       ' → logprob: -3.853389263153076
    8. ')' → logprob: -4.103389263153076
    9. ',' → logprob: -4.103389263153076
    10. '1' → logprob: -4.353389263153076

Token 957: ' problème' (ID: 35630)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.3442798852920532
    2. 'return' → logprob: -2.2192797660827637
    3. 'ret' → logprob: -2.5942797660827637
    4. 'speed' → logprob: -3.4692797660827637
    5. 'remaining' → logprob: -3.4692797660827637
    6. '0' → logprob: -5.219279766082764
    7. 'reste' → logprob: -5.344279766082764
    8. 'tempo' → logprob: -5.594279766082764
    9. 'v' → logprob: -5.969279766082764
    10. 'time' → logprob: -5.969279766082764

Token 958: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003232852090150118
    2. '    
' → logprob: -7.003232955932617
    3. '       ' → logprob: -7.503232955932617
    4. ':' → logprob: -7.878232955932617
    5. ',' → logprob: -8.003232955932617
    6. '
' → logprob: -8.878232955932617
    7. ' if' → logprob: -9.128232955932617
    8. ' return' → logprob: -9.253232955932617
    9. '    ' → logprob: -9.378232955932617
    10. ' for' → logprob: -9.628232955932617

Token 959: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016561657190322876
    2. 'return' → logprob: -5.016561508178711
    3. ' return' → logprob: -5.391561508178711
    4. '   ' → logprob: -5.391561508178711
    5. ' if' → logprob: -8.141561508178711
    6. '           ' → logprob: -9.141561508178711
    7. 'if' → logprob: -9.516561508178711
    8. ' for' → logprob: -10.766561508178711
    9. '    ' → logprob: -10.891561508178711
    10. '#' → logprob: -11.016561508178711

Token 960: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11062391847372055
    2. '#' (adapté à ' #') → logprob: -2.860623836517334
    3. ' return' → logprob: -3.860623836517334
    4. '           ' → logprob: -5.360623836517334
    5. '       ' → logprob: -5.610623836517334
    6. 'if' → logprob: -5.985623836517334
    7. 'steps' → logprob: -5.985623836517334
    8. 'change' → logprob: -6.235623836517334
    9. 'cost' → logprob: -6.235623836517334
    10. ' #' → logprob: -6.235623836517334

Token 961: ' Pour' (ID: 13931)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.29315826296806335
    2. ' return' → logprob: -2.1681582927703857
    3. '#' → logprob: -2.5431582927703857
    4. '           ' → logprob: -3.5431582927703857
    5. 'if' → logprob: -5.043158054351807
    6. ' #' → logprob: -5.418158054351807
    7. '   ' → logprob: -5.793158054351807
    8. ' if' → logprob: -5.918158054351807
    9. '       ' → logprob: -5.918158054351807
    10. 'time' → logprob: -5.918158054351807

Token 962: ' ram' (ID: 20920)
  Prédit: 'ram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ram' → logprob: -0.19129742681980133
    2. ' ram' → logprob: -2.8162975311279297
    3. 'r' → logprob: -3.6912975311279297
    4. ' revenir' → logprob: -4.19129753112793
    5. 'speed' → logprob: -4.56629753112793
    6. 'return' → logprob: -4.69129753112793
    7. ' speed' → logprob: -5.06629753112793
    8. 'modifier' → logprob: -5.06629753112793
    9. 'ret' → logprob: -5.56629753112793
    10. 're' → logprob: -5.56629753112793

Token 963: 'ener' (ID: 944)
  Prédit: 'ener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ener' → logprob: -0.00036204091156832874
    2. '
' → logprob: -9.000362396240234
    3. '   ' → logprob: -10.375362396240234
    4. 'ner' → logprob: -10.750362396240234
    5. ']' → logprob: -10.875362396240234
    6. ')' → logprob: -11.000362396240234
    7. '`
' → logprob: -11.125362396240234
    8. '```' → logprob: -11.250362396240234
    9. 'è' → logprob: -11.375362396240234
    10. '#' → logprob: -11.375362396240234

Token 964: ' speed' (ID: 7733)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.37516292929649353
    2. ' la' → logprob: -2.3751628398895264
    3. 'speed' → logprob: -2.5001628398895264
    4. 'v' → logprob: -3.0001628398895264
    5. 'le' → logprob: -3.1251628398895264
    6. 'l' → logprob: -4.2501630783081055
    7. 'à' → logprob: -5.1251630783081055
    8. '           ' → logprob: -5.3751630783081055
    9. ' speed' → logprob: -5.6251630783081055
    10. '0' → logprob: -5.6251630783081055

Token 965: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.00181928975507617
    2. 'exp' → logprob: -6.626819133758545
    3. '_' → logprob: -8.376819610595703
    4. '_ex' → logprob: -9.876819610595703
    5. '=' → logprob: -10.126819610595703
    6. ',' → logprob: -11.251819610595703
    7. 'to' → logprob: -11.251819610595703
    8. ')' → logprob: -11.376819610595703
    9. '_,' → logprob: -11.814319610595703
    10. ' =' → logprob: -11.939319610595703

Token 966: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.0703521966934204
    2. ' à' → logprob: -1.0703521966934204
    3. ',' → logprob: -2.820352077484131
    4. '==' → logprob: -3.570352077484131
    5. '   ' → logprob: -3.695352077484131
    6. 'to' → logprob: -3.820352077484131
    7. ' ==' → logprob: -3.820352077484131
    8. '=' → logprob: -3.945352077484131
    9. ' ,' → logprob: -4.195352077484131
    10. '+' → logprob: -4.445352077484131

Token 967: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007111206650733948
    2. ' ' → logprob: -7.500710964202881
    3. 'abs' → logprob: -9.625711441040039
    4. '1' → logprob: -10.000711441040039
    5. 'speed' → logprob: -10.500711441040039
    6. '```' → logprob: -11.750711441040039
    7. ' abs' → logprob: -13.500711441040039
    8. ' speed' → logprob: -14.063211441040039
    9. '   ' → logprob: -14.375711441040039
    10. '           ' → logprob: -14.438211441040039

Token 968: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029112942866049707
    2. ' ' → logprob: -8.625290870666504
    3. 'abs' → logprob: -9.625290870666504
    4. '1' → logprob: -10.625290870666504
    5. 'speed' → logprob: -11.500290870666504
    6. '```' → logprob: -13.625290870666504
    7. ' abs' → logprob: -13.875290870666504
    8. 'k' → logprob: -14.375290870666504
    9. ',' → logprob: -14.500290870666504
    10. '(' → logprob: -14.812790870666504

Token 969: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30569469928741455
    2. ',' → logprob: -2.305694580078125
    3. ':' → logprob: -2.305694580078125
    4. '       ' → logprob: -3.430694580078125
    5. ':
' → logprob: -3.930694580078125
    6. '           ' → logprob: -5.430694580078125
    7. 'return' → logprob: -6.430694580078125
    8. ':return' → logprob: -7.055694580078125
    9. ' return' → logprob: -7.680694580078125
    10. '):
' → logprob: -8.055694580078125

Token 970: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.43927687406539917
    2. '   ' → logprob: -1.189276933670044
    3. ' return' → logprob: -3.689276933670044
    4. '       ' → logprob: -3.814276933670044
    5. 'if' → logprob: -6.064276695251465
    6. ' if' → logprob: -7.564276695251465
    7. '	return' → logprob: -8.189276695251465
    8. 'min' → logprob: -8.314276695251465
    9. '           ' → logprob: -8.939276695251465
    10. '   ' → logprob: -9.564276695251465

Token 971: ' doit' (ID: 21822)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17443212866783142
    2. ' return' → logprob: -1.9244321584701538
    3. '#' → logprob: -5.424432277679443
    4. '   ' → logprob: -6.174432277679443
    5. 'do' → logprob: -6.174432277679443
    6. 'pe' → logprob: -6.799432277679443
    7. ' peux' → logprob: -6.924432277679443
    8. 'if' → logprob: -7.549432277679443
    9. 'def' → logprob: -7.549432277679443
    10. ' #' → logprob: -7.799432277679443

Token 972: ' pres' (ID: 1780)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05041349679231644
    2. 'abs' → logprob: -3.5504136085510254
    3. ' return' → logprob: -4.425413608551025
    4. 'min' → logprob: -5.800413608551025
    5. 'faire' → logprob: -6.175413608551025
    6. '1' → logprob: -6.425413608551025
    7. 'ret' → logprob: -7.925413608551025
    8. 'pass' → logprob: -8.300413131713867
    9. 'prendre' → logprob: -9.050413131713867
    10. ' abs' → logprob: -9.300413131713867

Token 973: 'ser' (ID: 599)
  Prédit: 'ser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.0009554093703627586
    2. 'se' → logprob: -8.000955581665039
    3. 'sure' → logprob: -8.750955581665039
    4. 's' → logprob: -8.875955581665039
    5. 'sur' → logprob: -9.625955581665039
    6. 'crire' → logprob: -9.875955581665039
    7. 'soir' → logprob: -10.000955581665039
    8. 'sed' → logprob: -10.875955581665039
    9. '   ' → logprob: -11.000955581665039
    10. 'que' → logprob: -11.125955581665039

Token 974: ' le' (ID: 505)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.126723289489746
    2. '1' → logprob: -1.751723289489746
    3. '[' → logprob: -2.126723289489746
    4. '3' → logprob: -2.251723289489746
    5. ' ' → logprob: -2.501723289489746
    6. '"' → logprob: -3.251723289489746
    7. ' '' → logprob: -3.251723289489746
    8. ' [' → logprob: -4.251723289489746
    9. '`' → logprob: -4.751723289489746
    10. ' la' → logprob: -4.876723289489746

Token 975: ' bouton' (ID: 80635)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.348327100276947
    2. 'bout' → logprob: -1.5983271598815918
    3. '1' → logprob: -3.473327159881592
    4. ' bouton' → logprob: -3.848327159881592
    5. ' [' → logprob: -4.223327159881592
    6. 'div' → logprob: -5.348327159881592
    7. '/div' → logprob: -5.598327159881592
    8. '3' → logprob: -5.973327159881592
    9. ' ' → logprob: -6.098327159881592
    10. '[-' → logprob: -6.223327159881592

Token 976: ' plusieurs' (ID: 20875)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0195173025131226
    2. 'div' → logprob: -2.144517421722412
    3. ' pour' → logprob: -2.644517421722412
    4. ' (' → logprob: -2.644517421722412
    5. 'de' → logprob: -2.769517421722412
    6. 'pour' → logprob: -3.269517421722412
    7. '           ' → logprob: -3.894517421722412
    8. ' sans' → logprob: -4.394517421722412
    9. ' qui' → logprob: -4.394517421722412
    10. ' ' → logprob: -4.394517421722412

Token 977: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.2631034851074219
    2. ' fois' → logprob: -1.5131034851074219
    3. 'times' → logprob: -5.263103485107422
    4. 'fo' → logprob: -5.763103485107422
    5. ' times' → logprob: -7.263103485107422
    6. '```' → logprob: -8.013103485107422
    7. '3' → logprob: -8.388103485107422
    8. 'div' → logprob: -8.763103485107422
    9. 's' → logprob: -8.888103485107422
    10. '   ' → logprob: -9.013103485107422

Token 978: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006895582191646099
    2. '       ' → logprob: -5.506895542144775
    3. ',' → logprob: -6.756895542144775
    4. '           ' → logprob: -7.881895542144775
    5. 'def' → logprob: -8.006896018981934
    6. '    
' → logprob: -8.381896018981934
    7. '
' → logprob: -9.381896018981934
    8. ' if' → logprob: -9.381896018981934
    9. 'return' → logprob: -9.631896018981934
    10. '    ' → logprob: -9.756896018981934

Token 979: ' avancer' (ID: 151163)
  Prédit: 'av'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.025260163471102715
    2. 'avance' → logprob: -3.9002602100372314
    3. ' avancer' → logprob: -5.525259971618652
    4. 'bou' → logprob: -9.150259971618652
    5. 'changer' → logprob: -9.275259971618652
    6. '```' → logprob: -9.400259971618652
    7. 'dé' → logprob: -9.525259971618652
    8. 'r' → logprob: -9.525259971618652
    9. 'avan' → logprob: -10.150259971618652
    10. 'adv' → logprob: -10.400259971618652

Token 980: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6410393714904785
    2. '           ' → logprob: -1.3910393714904785
    3. '   ' → logprob: -1.6410393714904785
    4. ',' → logprob: -3.7660393714904785
    5. 'return' → logprob: -6.0160393714904785
    6. '
' → logprob: -6.7660393714904785
    7. '.' → logprob: -7.3910393714904785
    8. ':' → logprob: -7.5160393714904785
    9. ' (' → logprob: -7.6410393714904785
    10. ' =' → logprob: -8.39103889465332

Token 981: ' ce' (ID: 2357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35148152709007263
    2. '       ' → logprob: -1.601481556892395
    3. 'return' → logprob: -2.8514814376831055
    4. ' return' → logprob: -3.3514814376831055
    5. '           ' → logprob: -6.8514814376831055
    6. '#' → logprob: -8.101481437683105
    7. '    ' → logprob: -9.476481437683105
    8. ' il' → logprob: -9.851481437683105
    9. 'def' → logprob: -9.976481437683105
    10. '  ' → logprob: -10.101481437683105

Token 982: ' n' (ID: 297)
  Prédit: ' qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.2979155480861664
    2. 'qui' → logprob: -1.6729155778884888
    3. '#' → logprob: -2.922915458679199
    4. 'that' → logprob: -5.172915458679199
    5. 'which' → logprob: -5.672915458679199
    6. ' that' → logprob: -6.172915458679199
    7. 'def' → logprob: -6.297915458679199
    8. '#
' → logprob: -7.422915458679199
    9. ' which' → logprob: -8.0479154586792
    10. 'pend' → logprob: -8.2979154586792

Token 983: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.6162520051002502
    2. 'e' → logprob: -1.2412519454956055
    3. '#' → logprob: -2.4912519454956055
    4. 'est' → logprob: -2.8662519454956055
    5. ''' → logprob: -4.4912519454956055
    6. ''''' → logprob: -4.9912519454956055
    7. 'es' → logprob: -5.9912519454956055
    8. '```' → logprob: -6.4912519454956055
    9. '’est' → logprob: -6.7412519454956055
    10. '=' → logprob: -6.8662519454956055

Token 984: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.008040002547204494
    2. '#' → logprob: -6.008039951324463
    3. 'est' → logprob: -6.008039951324463
    4. 'possible' → logprob: -6.258039951324463
    5. ' pas' → logprob: -7.508039951324463
    6. ''est' → logprob: -7.508039951324463
    7. '```' → logprob: -11.258040428161621
    8. '
' → logprob: -11.883040428161621
    9. '   ' → logprob: -11.883040428161621
    10. ' possible' → logprob: -12.383040428161621

Token 985: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.015521595254540443
    2. ' possible' → logprob: -4.51552152633667
    3. 'pas' → logprob: -5.51552152633667
    4. 'poss' → logprob: -8.890522003173828
    5. '
' → logprob: -9.265522003173828
    6. 'pos' → logprob: -9.515522003173828
    7. '1' → logprob: -11.015522003173828
    8. '#' → logprob: -11.140522003173828
    9. 'impl' → logprob: -11.515522003173828
    10. '```' → logprob: -11.515522003173828

Token 986: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5485554933547974
    2. ':' → logprob: -1.4235554933547974
    3. ',' → logprob: -2.798555374145508
    4. ')' → logprob: -2.923555374145508
    5. '#' → logprob: -3.548555374145508
    6. '.' → logprob: -3.923555374145508
    7. '):' → logprob: -5.298555374145508
    8. '       ' → logprob: -6.548555374145508
    9. '
' → logprob: -6.798555374145508
    10. 'def' → logprob: -7.048555374145508

Token 987: ' chaque' (ID: 21194)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.12297674268484116
    2. 'le' → logprob: -3.622976779937744
    3. 'à' → logprob: -3.747976779937744
    4. 'la' → logprob: -3.997976779937744
    5. 'dans' → logprob: -4.372976779937744
    6. 'l' → logprob: -4.622976779937744
    7. ' on' → logprob: -4.872976779937744
    8. 'il' → logprob: -5.997976779937744
    9. 'cha' → logprob: -5.997976779937744
    10. '#' → logprob: -6.247976779937744

Token 988: ' pression' (ID: 60594)
  Prédit: ' seconde'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seconde' → logprob: -0.2803408205509186
    2. '
' → logprob: -2.5303409099578857
    3. 'second' → logprob: -3.0303409099578857
    4. '1' → logprob: -3.2803409099578857
    5. ' ' → logprob: -4.030340671539307
    6. ' second' → logprob: -4.405340671539307
    7. 'def' → logprob: -5.405340671539307
    8. ' step' → logprob: -5.405340671539307
    9. '#' → logprob: -5.655340671539307
    10. 's' → logprob: -6.030340671539307

Token 989: ' agit' (ID: 109598)
  Prédit: ' coûte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coûte' → logprob: -1.0674875974655151
    2. ' doit' → logprob: -1.8174875974655151
    3. ' sur' → logprob: -2.6924877166748047
    4. 'sur' → logprob: -3.3174877166748047
    5. ' s' → logprob: -3.4424877166748047
    6. ' est' → logprob: -3.5674877166748047
    7. ' ne' → logprob: -3.5674877166748047
    8. 's' → logprob: -3.9424877166748047
    9. '<|end|>' → logprob: -3.9424877166748047
    10. ' nécessite' → logprob: -3.9424877166748047

Token 990: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -1.0918470621109009
    2. 'ap' → logprob: -1.4668470621109009
    3. ' après' → logprob: -1.5918470621109009
    4. ' uniquement' → logprob: -2.7168469429016113
    5. ' seulement' → logprob: -3.3418469429016113
    6. ' au' → logprob: -3.3418469429016113
    7. ' sur' → logprob: -3.9668469429016113
    8. 's' → logprob: -4.466846942901611
    9. 'au' → logprob: -4.591846942901611
    10. 'que' → logprob: -4.966846942901611

Token 991: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.34984609484672546
    2. 'le' → logprob: -1.4748461246490479
    3. ' la' → logprob: -3.849846124649048
    4. 'l' → logprob: -3.849846124649048
    5. 'une' → logprob: -4.349845886230469
    6. ' le' → logprob: -5.599845886230469
    7. '1' → logprob: -5.974845886230469
    8. 'un' → logprob: -6.599845886230469
    9. ' une' → logprob: -7.599845886230469
    10. 'the' → logprob: -7.724845886230469

Token 992: ' vitesse' (ID: 71752)
  Prédit: ' prochaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prochaine' → logprob: -1.2060898542404175
    2. 'next' → logprob: -1.8310898542404175
    3. 'pro' → logprob: -2.206089973449707
    4. 'v' → logprob: -2.331089973449707
    5. 'se' → logprob: -2.456089973449707
    6. ' seconde' → logprob: -2.831089973449707
    7. 'second' → logprob: -2.956089973449707
    8. 'temps' → logprob: -3.456089973449707
    9. 'step' → logprob: -3.956089973449707
    10. ' vitesse' → logprob: -4.331089973449707

Token 993: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37936773896217346
    2. ')' → logprob: -2.0043678283691406
    3. ',' → logprob: -2.1293678283691406
    4. ':' → logprob: -3.8793678283691406
    5. '.' → logprob: -4.379367828369141
    6. '#' → logprob: -5.754367828369141
    7. '):' → logprob: -6.004367828369141
    8. '       ' → logprob: -6.129367828369141
    9. ' )' → logprob: -6.129367828369141
    10. 'def' → logprob: -6.504367828369141

Token 994: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4973561465740204
    2. 'l' → logprob: -1.2473561763763428
    3. ' partir' → logprob: -2.6223561763763428
    4. ' la' → logprob: -4.122355937957764
    5. 'part' → logprob: -4.497355937957764
    6. ' l' → logprob: -6.622355937957764
    7. 'le' → logprob: -6.747355937957764
    8. 'next' → logprob: -7.497355937957764
    9. 'pro' → logprob: -8.872356414794922
    10. 'ap' → logprob: -8.997356414794922

Token 995: ' seconde' (ID: 66204)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.0843760147690773
    2. 'se' → logprob: -2.959376096725464
    3. ' prochaine' → logprob: -4.459375858306885
    4. 'next' → logprob: -5.084375858306885
    5. 'ligne' → logprob: -5.834375858306885
    6. '```' → logprob: -5.959375858306885
    7. 'part' → logprob: -6.834375858306885
    8. 'second' → logprob: -7.334375858306885
    9. 'dé' → logprob: -7.459375858306885
    10. 'fin' → logprob: -7.834375858306885

Token 996: ' suivante' (ID: 107439)
  Prédit: ' suivante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.10884074121713638
    2. ')' → logprob: -2.7338407039642334
    3. ' )' → logprob: -4.7338409423828125
    4. '   ' → logprob: -5.1088409423828125
    5. ' suivantes' → logprob: -5.4838409423828125
    6. ' suivant' → logprob: -5.6088409423828125
    7. 'su' → logprob: -6.2338409423828125
    8. 's' → logprob: -6.4838409423828125
    9. ',' → logprob: -6.4838409423828125
    10. 'following' → logprob: -6.8588409423828125

Token 997: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.542010486125946
    2. ':' → logprob: -0.917010486125946
    3. '):' → logprob: -4.792010307312012
    4. ')' → logprob: -5.667010307312012
    5. ',' → logprob: -6.042010307312012
    6. '.' → logprob: -6.542010307312012
    7. ':
' → logprob: -7.042010307312012
    8. ':return' → logprob: -8.042010307312012
    9. ' :' → logprob: -8.167010307312012
    10. '<|end|>' → logprob: -8.417010307312012

Token 998: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003040101146325469
    2. '    
' → logprob: -6.753040313720703
    3. '\' → logprob: -7.253040313720703
    4. '\n' → logprob: -8.378040313720703
    5. ' 
' → logprob: -8.503040313720703
    6. ')' → logprob: -8.753040313720703
    7. '    ' → logprob: -9.003040313720703
    8. '#' → logprob: -9.253040313720703
    9. '       ' → logprob: -9.503040313720703
    10. '
' → logprob: -9.503040313720703

Token 999: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015230344608426094
    2. '       ' → logprob: -4.765230178833008
    3. '           ' → logprob: -6.390230178833008
    4. ' return' → logprob: -6.640230178833008
    5. '#' (adapté à ' #') → logprob: -6.890230178833008
    6. '    ' → logprob: -7.265230178833008
    7. ' raise' → logprob: -7.515230178833008
    8. 'return' → logprob: -8.015230178833008
    9. '    
' → logprob: -8.640230178833008
    10. '
' → logprob: -9.015230178833008

Token 1000: ' Donc' (ID: 88837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029253611341118813
    2. 'return' → logprob: -4.1542534828186035
    3. '#' → logprob: -4.5292534828186035
    4. ' return' → logprob: -6.7792534828186035
    5. '       ' → logprob: -7.7792534828186035
    6. '
' → logprob: -8.154253959655762
    7. ' #' → logprob: -8.779253959655762
    8. 'if' → logprob: -9.529253959655762
    9. '```' → logprob: -9.904253959655762
    10. '    
' → logprob: -10.154253959655762

Token 1001: ',' (ID: 11)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3575963079929352
    2. '   ' → logprob: -1.2325962781906128
    3. '#' → logprob: -4.857596397399902
    4. ' return' → logprob: -7.482596397399902
    5. '       ' → logprob: -7.732596397399902
    6. '```' → logprob: -9.482596397399902
    7. '           ' → logprob: -9.982596397399902
    8. '	return' → logprob: -10.232596397399902
    9. '
' → logprob: -10.357596397399902
    10. '    
' → logprob: -10.607596397399902

Token 1002: ' pas' (ID: 2173)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2868186831474304
    2. '   ' → logprob: -1.4118187427520752
    3. ' return' → logprob: -6.036818504333496
    4. '#' → logprob: -6.286818504333496
    5. '```' → logprob: -7.286818504333496
    6. '       ' → logprob: -7.661818504333496
    7. '           ' → logprob: -9.161818504333496
    8. '   ' → logprob: -10.911818504333496
    9. '    ' → logprob: -11.036818504333496
    10. ':return' → logprob: -11.036818504333496

Token 1003: ' possible' (ID: 4149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.162758708000183
    2. ' possible' → logprob: -1.162758708000183
    3. '_possible' → logprob: -2.1627588272094727
    4. 'possible' → logprob: -2.4127588272094727
    5. ' de' → logprob: -2.4127588272094727
    6. ' impossible' → logprob: -3.9127588272094727
    7. ' )' → logprob: -4.287758827209473
    8. '
' → logprob: -4.662758827209473
    9. ':' → logprob: -5.412758827209473
    10. 'def' → logprob: -5.537758827209473

Token 1004: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38992300629615784
    2. ':' → logprob: -2.014923095703125
    3. ')' → logprob: -2.764923095703125
    4. '.' → logprob: -3.264923095703125
    5. ',' → logprob: -3.889923095703125
    6. '```' → logprob: -4.264923095703125
    7. '#' → logprob: -4.639923095703125
    8. '       ' → logprob: -4.764923095703125
    9. ' ' → logprob: -4.889923095703125
    10. 'raise' → logprob: -5.889923095703125

Token 1005: ''être' (ID: 47704)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8838083148002625
    2. ''aller' → logprob: -2.0088083744049072
    3. ' continuer' → logprob: -2.2588083744049072
    4. ' avancer' → logprob: -2.6338083744049072
    5. '_return' → logprob: -2.8838083744049072
    6. ''' → logprob: -3.1338083744049072
    7. ' return' → logprob: -3.2588083744049072
    8. ''arr' → logprob: -3.5088083744049072
    9. ''avoir' → logprob: -4.133808135986328
    10. ''app' → logprob: -4.383808135986328

Token 1006: ' sur' (ID: 1512)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.280395746231079
    2. 'exact' → logprob: -1.530395746231079
    3. '0' → logprob: -1.905395746231079
    4. ' atteint' → logprob: -2.905395746231079
    5. 'au' → logprob: -3.405395746231079
    6. 'dans' → logprob: -3.530395746231079
    7. ' at' → logprob: -3.655395746231079
    8. ' ' → logprob: -3.655395746231079
    9. 'arr' → logprob: -3.655395746231079
    10. ' à' → logprob: -3.780395746231079

Token 1007: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8279851078987122
    2. 'la' → logprob: -1.7029850482940674
    3. 'une' → logprob: -1.9529850482940674
    4. '0' → logprob: -3.0779850482940674
    5. ' une' → logprob: -3.2029850482940674
    6. 'v' → logprob: -3.7029850482940674
    7. 'speed' → logprob: -3.9529850482940674
    8. ' speed' → logprob: -4.0779852867126465
    9. 'place' → logprob: -4.2029852867126465
    10. ' place' → logprob: -4.4529852867126465

Token 1008: ' position' (ID: 4010)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07349197566509247
    2. 'ligne' → logprob: -3.4484920501708984
    3. 'position' → logprob: -4.448492050170898
    4. ' vitesse' → logprob: -4.948492050170898
    5. 'speed' → logprob: -5.698492050170898
    6. ' ' → logprob: -6.573492050170898
    7. 'vit' → logprob: -6.698492050170898
    8. ' ligne' → logprob: -6.948492050170898
    9. '   ' → logprob: -6.948492050170898
    10. 'ét' → logprob: -6.948492050170898

Token 1009: ' correcte' (ID: 173783)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.744471788406372
    2. '_' → logprob: -1.869471788406372
    3. '   ' → logprob: -2.994471788406372
    4. ')' → logprob: -3.119471788406372
    5. '_in' → logprob: -3.244471788406372
    6. '0' → logprob: -3.369471788406372
    7. ' _' → logprob: -3.494471788406372
    8. ' ,' → logprob: -3.619471788406372
    9. ' ' → logprob: -3.619471788406372
    10. 's' → logprob: -3.744471788406372

Token 1010: ' sauf' (ID: 87919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06894975900650024
    2. '       ' → logprob: -3.4439496994018555
    3. ':' → logprob: -4.8189496994018555
    4. '           ' → logprob: -5.0689496994018555
    5. ',' → logprob: -5.5689496994018555
    6. ' if' → logprob: -6.4439496994018555
    7. '.' → logprob: -6.5689496994018555
    8. ')' → logprob: -6.8189496994018555
    9. 'return' → logprob: -6.9439496994018555
    10. '```' → logprob: -6.9439496994018555

Token 1011: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.5195796489715576
    2. ' si' → logprob: -1.6445796489715576
    3. ' à' → logprob: -1.6445796489715576
    4. 'if' → logprob: -2.1445796489715576
    5. ' en' → logprob: -2.7695796489715576
    6. 'au' → logprob: -3.2695796489715576
    7. ' que' → logprob: -3.6445796489715576
    8. 'à' → logprob: -3.6445796489715576
    9. ' dans' → logprob: -4.269579887390137
    10. ' at' → logprob: -4.394579887390137

Token 1012: ' on' (ID: 402)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.029953427612781525
    2. ' speed' → logprob: -3.9049534797668457
    3. 'on' → logprob: -5.404953479766846
    4. 'remaining' → logprob: -5.904953479766846
    5. ' on' → logprob: -7.154953479766846
    6. '```' → logprob: -7.654953479766846
    7. 'la' → logprob: -8.154953002929688
    8. 'v' → logprob: -8.279953002929688
    9. '`' → logprob: -10.154953002929688
    10. ' la' → logprob: -10.654953002929688

Token 1013: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.1528385430574417
    2. '==' → logprob: -3.0278384685516357
    3. 'reste' → logprob: -4.152838706970215
    4. '```' → logprob: -4.402838706970215
    5. ' est' → logprob: -4.652838706970215
    6. ' ==' → logprob: -4.902838706970215
    7. 'continue' → logprob: -5.027838706970215
    8. 'arr' → logprob: -5.027838706970215
    9. 're' → logprob: -5.652838706970215
    10. 'avance' → logprob: -5.902838706970215

Token 1014: ' vitesse' (ID: 71752)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.6842593550682068
    2. ' à' → logprob: -1.0592594146728516
    3. 'exact' → logprob: -2.4342594146728516
    4. ' exactly' → logprob: -4.059259414672852
    5. ' exactement' → logprob: -4.559259414672852
    6. 'au' → logprob: -4.934259414672852
    7. ' at' → logprob: -5.559259414672852
    8. '```' → logprob: -6.059259414672852
    9. '=' → logprob: -6.309259414672852
    10. ' déjà' → logprob: -6.309259414672852

Token 1015: ' normale' (ID: 57494)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9219478964805603
    2. '_normal' → logprob: -1.546947956085205
    3. ')' → logprob: -2.296947956085205
    4. '_exp' → logprob: -2.546947956085205
    5. '_norm' → logprob: -3.046947956085205
    6. '0' → logprob: -3.296947956085205
    7. '=' → logprob: -4.171947956085205
    8. ' _' → logprob: -4.546947956085205
    9. '```' → logprob: -4.546947956085205
    10. ':' → logprob: -4.671947956085205

Token 1016: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042195647954940796
    2. ')' → logprob: -3.4171955585479736
    3. ':' → logprob: -6.167195796966553
    4. '       ' → logprob: -6.792195796966553
    5. '}' → logprob: -7.167195796966553
    6. ':return' → logprob: -7.417195796966553
    7. '.' → logprob: -7.667195796966553
    8. '    
' → logprob: -7.667195796966553
    9. ',' → logprob: -7.792195796966553
    10. '    ' → logprob: -8.167195320129395

Token 1017: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012312560342252254
    2. ')' → logprob: -4.512312412261963
    3. '    ' → logprob: -8.387312889099121
    4. '\' → logprob: -8.637312889099121
    5. '       ' → logprob: -8.637312889099121
    6. '    
' → logprob: -8.637312889099121
    7. '.' → logprob: -9.637312889099121
    8. ' )' → logprob: -9.637312889099121
    9. '\n' → logprob: -9.762312889099121
    10. ' return' → logprob: -10.012312889099121

Token 1018: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6467661261558533
    2. '       ' → logprob: -0.7717661261558533
    3. '   ' → logprob: -4.521766185760498
    4. 'raise' → logprob: -6.271766185760498
    5. '#' → logprob: -7.271766185760498
    6. ' return' → logprob: -7.771766185760498
    7. 'inf' → logprob: -9.52176570892334
    8. '           ' → logprob: -9.89676570892334
    9. '	return' → logprob: -11.52176570892334
    10. 'import' → logprob: -11.64676570892334

Token 1019: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.005321631673723459
    2. '10' → logprob: -5.255321502685547
    3. 'int' → logprob: -9.630321502685547
    4. ' float' → logprob: -11.505321502685547
    5. '100' → logprob: -12.255321502685547
    6. 'sys' → logprob: -13.255321502685547
    7. '1' → logprob: -13.630321502685547
    8. 'None' → logprob: -14.130321502685547
    9. '0' → logprob: -14.255321502685547
    10. '(float' → logprob: -14.380321502685547

Token 1020: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.004137410782277584
    2. '10' → logprob: -5.5041375160217285
    3. 'int' → logprob: -10.00413703918457
    4. '100' → logprob: -12.25413703918457
    5. 'sys' → logprob: -12.87913703918457
    6. '1' → logprob: -13.00413703918457
    7. ' float' → logprob: -13.25413703918457
    8. '0' → logprob: -14.00413703918457
    9. '999' → logprob: -14.25413703918457
    10. '(float' → logprob: -15.12913703918457

Token 1021: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8195922374725342
    2. ')' → logprob: -1.1945922374725342
    3. '**' → logprob: -1.9445922374725342
    4. '<|end|>' → logprob: -3.194592237472534
    5. '
' → logprob: -4.069592475891113
    6. 'def' → logprob: -4.694592475891113
    7. 'return' → logprob: -4.819592475891113
    8. '000' → logprob: -5.069592475891113
    9. '^' → logprob: -5.569592475891113
    10. ' ' → logprob: -5.819592475891113

Token 1022: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.040052250027656555
    2. '15' → logprob: -3.4150521755218506
    3. '18' → logprob: -5.79005241394043
    4. '10' → logprob: -6.04005241394043
    5. '12' → logprob: -7.66505241394043
    6. '7' → logprob: -7.91505241394043
    7. '20' → logprob: -10.54005241394043
    8. '8' → logprob: -10.54005241394043
    9. '16' → logprob: -10.66505241394043
    10. '14' → logprob: -11.04005241394043

Token 1023: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013003863394260406
    2. ')' → logprob: -5.013003826141357
    3. '(' → logprob: -6.638003826141357
    4. '    
' → logprob: -6.888003826141357
    5. '
' → logprob: -7.263003826141357
    6. ' if' → logprob: -7.638003826141357
    7. '(
' → logprob: -8.138004302978516
    8. '  ' → logprob: -8.263004302978516
    9. ' 
' → logprob: -8.388004302978516
    10. ':' → logprob: -8.638004302978516

Token 1024: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04417772591114044
    2. '    
' → logprob: -3.544177770614624
    3. '
' → logprob: -4.294177532196045
    4. ')' → logprob: -8.169178009033203
    5. '   
' → logprob: -9.419178009033203
    6. '  
' → logprob: -9.794178009033203
    7. '        
' → logprob: -10.044178009033203
    8. '\n' → logprob: -10.044178009033203
    9. ')
' → logprob: -10.294178009033203
    10. ' 
' → logprob: -10.794178009033203

Token 1025: ' inf' (ID: 5603)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2226480096578598
    2. 'return' → logprob: -1.722648024559021
    3. 'float' → logprob: -4.0976481437683105
    4. '0' → logprob: -6.3476481437683105
    5. '1' → logprob: -7.0976481437683105
    6. '100' → logprob: -7.8476481437683105
    7. 'int' → logprob: -8.347647666931152
    8. '```' → logprob: -8.847647666931152
    9. ' ' → logprob: -8.972647666931152
    10. ')' → logprob: -9.097647666931152

Token 1026: 'ini' (ID: 2363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030435960739850998
    2. '    
' → logprob: -3.9054360389709473
    3. '
' → logprob: -4.655436038970947
    4. '        
' → logprob: -9.280435562133789
    5. '  
' → logprob: -9.530435562133789
    6. '   
' → logprob: -9.780435562133789
    7. ')' → logprob: -10.655435562133789
    8. ' 
' → logprob: -10.780435562133789
    9. 'n' → logprob: -11.405435562133789
    10. '
    
' → logprob: -11.905435562133789

Token 1027: ' élo' (ID: 156049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0275878868997097
    2. '    
' → logprob: -3.902587890625
    3. '
' → logprob: -5.027587890625
    4. ')' → logprob: -9.152587890625
    5. '  
' → logprob: -9.527587890625
    6. ' 
' → logprob: -9.777587890625
    7. '        
' → logprob: -9.777587890625
    8. '```' → logprob: -10.277587890625
    9. '<|end|>' → logprob: -10.527587890625
    10. '   
' → logprob: -10.527587890625

Token 1028: 'igné' (ID: 95209)
  Prédit: 'igné'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igné' → logprob: -0.4470486342906952
    2. 'int' → logprob: -1.6970486640930176
    3. 'ignée' → logprob: -2.4470486640930176
    4. 'igne' → logprob: -3.3220486640930176
    5. 'uvre' → logprob: -4.197048664093018
    6. 'u' → logprob: -4.697048664093018
    7. 'ign' → logprob: -4.697048664093018
    8. 'inte' → logprob: -5.572048664093018
    9. 'ignant' → logprob: -6.072048664093018
    10. 'nt' → logprob: -6.197048664093018

Token 1029: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06411944329738617
    2. '    
' → logprob: -3.064119338989258
    3. '
' → logprob: -4.189119338989258
    4. '        
' → logprob: -9.439119338989258
    5. '   
' → logprob: -10.439119338989258
    6. '  
' → logprob: -10.689119338989258
    7. '<|end|>' → logprob: -10.939119338989258
    8. '       ' → logprob: -11.064119338989258
    9. '	
' → logprob: -11.314119338989258
    10. ' 
' → logprob: -11.439119338989258

Token 1030: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009721142239868641
    2. '    
' → logprob: -4.884721279144287
    3. '
' → logprob: -6.259721279144287
    4. 'if' → logprob: -8.759720802307129
    5. '        
' → logprob: -11.384720802307129
    6. '  
' → logprob: -11.509720802307129
    7. '```' → logprob: -11.884720802307129
    8. ' if' → logprob: -12.884720802307129
    9. '   
' → logprob: -13.009720802307129
    10. '    
' → logprob: -13.384720802307129

Token 1031: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0054968721233308315
    2. 'if' (adapté à ' if') → logprob: -5.880496978759766
    3. 'current' → logprob: -7.005496978759766
    4. '
' → logprob: -8.130496978759766
    5. '    
' → logprob: -8.380496978759766
    6. 'res' → logprob: -8.505496978759766
    7. 'time' → logprob: -8.880496978759766
    8. ' if' → logprob: -9.130496978759766
    9. 'remaining' → logprob: -9.130496978759766
    10. 'possible' → logprob: -9.505496978759766

Token 1032: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.5854788422584534
    2. 'speed' → logprob: -0.9604788422584534
    3. ' speed' → logprob: -3.2104787826538086
    4. ' remaining' → logprob: -4.085478782653809
    5. 'abs' → logprob: -6.085478782653809
    6. '0' → logprob: -7.960478782653809
    7. ' abs' → logprob: -8.210478782653809
    8. 'dfs' → logprob: -9.460478782653809
    9. '(speed' → logprob: -9.835478782653809
    10. ' ' → logprob: -9.960478782653809

Token 1033: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.0007080250070430338
    2. '_' → logprob: -7.375708103179932
    3. ' _' → logprob: -9.875707626342773
    4. '_dist' → logprob: -11.625707626342773
    5. 'distance' → logprob: -12.375707626342773
    6. '```' → logprob: -12.750707626342773
    7. '   ' → logprob: -12.875707626342773
    8. '-_' → logprob: -13.000707626342773
    9. '_DISTANCE' → logprob: -13.375707626342773
    10. '_-' → logprob: -13.500707626342773

Token 1034: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08410579711198807
    2. '<' → logprob: -2.8341057300567627
    3. ' ==' → logprob: -4.584105968475342
    4. ' <=' → logprob: -5.209105968475342
    5. '==' → logprob: -5.834105968475342
    6. ' >=' → logprob: -6.834105968475342
    7. '<=' → logprob: -7.209105968475342
    8. '-' → logprob: -7.709105968475342
    9. ' >' → logprob: -7.709105968475342
    10. ' -' → logprob: -8.459105491638184

Token 1035: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016039233014453202
    2. ' ' → logprob: -8.750160217285156
    3. '1' → logprob: -14.125160217285156
    4. '=' → logprob: -14.375160217285156
    5. '   ' → logprob: -15.625160217285156
    6. '
' → logprob: -16.125160217285156
    7. '10' → logprob: -16.250160217285156
    8. '  ' → logprob: -17.125160217285156
    9. '۰' → logprob: -17.750160217285156
    10. '```' → logprob: -17.812660217285156

Token 1036: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5690089639974758e-05
    2. ' ' → logprob: -11.375015258789062
    3. '1' → logprob: -12.500015258789062
    4. '   ' → logprob: -15.625015258789062
    5. '10' → logprob: -16.250015258789062
    6. 'remaining' → logprob: -17.125015258789062
    7. '
' → logprob: -17.625015258789062
    8. '=' → logprob: -17.750015258789062
    9. '  ' → logprob: -18.125015258789062
    10. 'speed' → logprob: -18.812515258789062

Token 1037: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014176792465150356
    2. '   ' → logprob: -5.014176845550537
    3. ':
' → logprob: -5.514176845550537
    4. ' :' → logprob: -6.139176845550537
    5. ':return' → logprob: -7.139176845550537
    6. ' or' → logprob: -8.514176368713379
    7. '       ' → logprob: -8.764176368713379
    8. '    ' → logprob: -10.264176368713379
    9. '):' → logprob: -10.889176368713379
    10. ' :
' → logprob: -10.889176368713379

Token 1038: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10071306675672531
    2. '       ' → logprob: -2.350713014602661
    3. '10' → logprob: -8.100712776184082
    4. ' return' → logprob: -8.975712776184082
    5. '   ' → logprob: -10.975712776184082
    6. 'return' → logprob: -11.100712776184082
    7. '    ' → logprob: -11.350712776184082
    8. '1' → logprob: -11.975712776184082
    9. ' ' → logprob: -12.475712776184082
    10. ',' → logprob: -12.475712776184082

Token 1039: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02514868602156639
    2. '   ' → logprob: -4.275148868560791
    3. '10' → logprob: -4.525148868560791
    4. ' return' → logprob: -9.400148391723633
    5. '       ' → logprob: -11.650148391723633
    6. '           ' → logprob: -15.900148391723633
    7. ' ' → logprob: -16.275148391723633
    8. '	return' → logprob: -16.400148391723633
    9. '```' → logprob: -16.650148391723633
    10. '
' → logprob: -17.275148391723633

Token 1040: ' impossible' (ID: 19786)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -7.803360495017841e-05
    2. '   ' → logprob: -9.500078201293945
    3. '10' → logprob: -13.000078201293945
    4. ' return' → logprob: -14.000078201293945
    5. '       ' → logprob: -16.750078201293945
    6. '	return' → logprob: -18.375078201293945
    7. '```' → logprob: -19.500078201293945
    8. '#' → logprob: -19.750078201293945
    9. '           ' → logprob: -20.250078201293945
    10. '  ' → logprob: -21.625078201293945

Token 1041: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021222298964858055
    2. '       ' → logprob: -4.021222114562988
    3. ' return' → logprob: -7.021222114562988
    4. ':
' → logprob: -7.021222114562988
    5. 'return' → logprob: -7.396222114562988
    6. ':' → logprob: -8.021222114562988
    7. ':return' → logprob: -9.021222114562988
    8. '10' → logprob: -9.146222114562988
    9. '    ' → logprob: -10.146222114562988
    10. '           ' → logprob: -10.771222114562988

Token 1042: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5233743190765381
    2. '       ' → logprob: -0.8983743190765381
    3. '    ' → logprob: -9.773374557495117
    4. ' return' → logprob: -9.773374557495117
    5. '   ' → logprob: -10.148374557495117
    6. 'return' → logprob: -10.523374557495117
    7. '           ' → logprob: -11.023374557495117
    8. '     ' → logprob: -11.273374557495117
    9. ' ' → logprob: -11.523374557495117
    10. '    ' → logprob: -12.023374557495117

Token 1043: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.050577159970998764
    2. '   ' → logprob: -3.050577163696289
    3. '10' → logprob: -6.550577163696289
    4. ' return' → logprob: -7.675577163696289
    5. '       ' → logprob: -9.300577163696289
    6. '	return' → logprob: -13.550577163696289
    7. '           ' → logprob: -14.425577163696289
    8. '
' → logprob: -15.175577163696289
    9. '```' → logprob: -15.175577163696289
    10. '  ' → logprob: -15.550577163696289

Token 1044: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. 'int' → logprob: -16.875
    4. 'float' → logprob: -17.5
    5. '1' → logprob: -19.75
    6. '100' → logprob: -19.875
    7. '```' → logprob: -20.125
    8. '   ' → logprob: -20.375
    9. '
' → logprob: -20.5
    10. '0' → logprob: -21.0

Token 1045: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.128163257315464e-07
    2. 'int' → logprob: -16.375
    3. 'float' → logprob: -16.625
    4. ' ' → logprob: -18.25
    5. '1' → logprob: -18.875
    6. '100' → logprob: -19.25
    7. '0' → logprob: -20.0
    8. 'sys' → logprob: -20.0
    9. '۱۰' → logprob: -20.0
    10. '#' → logprob: -20.25

Token 1046: '**' (ID: 410)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.001015183632262051
    2. '**' → logprob: -7.6260151863098145
    3. '^' → logprob: -8.251014709472656
    4. '<|end|>' → logprob: -8.876014709472656
    5. '¹' → logprob: -9.876014709472656
    6. '^{' → logprob: -11.501014709472656
    7. '' → logprob: -11.626014709472656
    8. '17' → logprob: -11.751014709472656
    9. '018' → logprob: -11.876014709472656
    10. '```' → logprob: -12.001014709472656

Token 1047: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -8.828512363834307e-05
    2. '9' → logprob: -9.375088691711426
    3. '12' → logprob: -13.750088691711426
    4. '8' → logprob: -14.000088691711426
    5. '15' → logprob: -14.125088691711426
    6. '17' → logprob: -15.125088691711426
    7. '6' → logprob: -15.375088691711426
    8. '10' → logprob: -15.750088691711426
    9. '7' → logprob: -16.75008773803711
    10. '```' → logprob: -16.87508773803711

Token 1048: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023078909143805504
    2. '    
' → logprob: -4.523078918457031
    3. '
' → logprob: -5.398078918457031
    4. ')' → logprob: -6.023078918457031
    5. ' 
' → logprob: -6.773078918457031
    6. '  ' → logprob: -7.148078918457031
    7. '<|end|>' → logprob: -7.273078918457031
    8. '```' → logprob: -7.648078918457031
    9. '  
' → logprob: -7.773078918457031
    10. '    ' → logprob: -8.023078918457031

Token 1049: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025098809972405434
    2. 'res' → logprob: -4.40009880065918
    3. '    
' → logprob: -5.77509880065918
    4. 'current' → logprob: -5.77509880065918
    5. '
' → logprob: -6.02509880065918
    6. 'ans' → logprob: -6.65009880065918
    7. 'result' → logprob: -7.52509880065918
    8. 'time' → logprob: -7.65009880065918
    9. '```' → logprob: -8.15009880065918
    10. 'v' → logprob: -8.40009880065918

Token 1050: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.04965410381555557
    2. 'best' → logprob: -3.674654006958008
    3. 'ans' → logprob: -4.674654006958008
    4. '   ' → logprob: -5.049654006958008
    5. 'ret' → logprob: -5.674654006958008
    6. 'current' → logprob: -6.174654006958008
    7. 'cur' → logprob: -7.674654006958008
    8. 'result' → logprob: -7.924654006958008
    9. 'curr' → logprob: -8.299654006958008
    10. 'min' → logprob: -8.299654006958008

Token 1051: ' vitesse' (ID: 71752)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.10210759937763214
    2. 'current' → logprob: -3.477107524871826
    3. 'best' → logprob: -3.602107524871826
    4. 'ans' → logprob: -4.227107524871826
    5. 'time' → logprob: -5.102107524871826
    6. 'curr' → logprob: -5.602107524871826
    7. 'min' → logprob: -5.977107524871826
    8. 'ret' → logprob: -6.102107524871826
    9. 'result' → logprob: -6.227107524871826
    10. '   ' → logprob: -6.352107524871826

Token 1052: ' réelle' (ID: 136948)
  Prédit: '_exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.532355546951294
    2. '=' → logprob: -1.407355546951294
    3. ' =' → logprob: -1.907355546951294
    4. 'exp' → logprob: -4.407355308532715
    5. '   ' → logprob: -5.032355308532715
    6. '_pow' → logprob: -8.407355308532715
    7. '_val' → logprob: -9.657355308532715
    8. 'Exp' → logprob: -9.782355308532715
    9. '_ex' → logprob: -9.907355308532715
    10. '_current' → logprob: -10.282355308532715

Token 1053: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5962167382240295
    2. ' =' → logprob: -0.8462167382240295
    3. '_exp' → logprob: -4.096216678619385
    4. '   ' → logprob: -5.971216678619385
    5. 'exp' → logprob: -8.346217155456543
    6. ',' → logprob: -8.596217155456543
    7. ')' → logprob: -8.971217155456543
    8. '_ex' → logprob: -10.346217155456543
    9. '_current' → logprob: -10.471217155456543
    10. ' ' → logprob: -10.596217155456543

Token 1054: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47547784447669983
    2. '=' → logprob: -0.9754778146743774
    3. '_exp' → logprob: -6.850477695465088
    4. '   ' → logprob: -8.350478172302246
    5. 'exp' → logprob: -10.475478172302246
    6. 'current' → logprob: -10.975478172302246
    7. ' ' → logprob: -11.600478172302246
    8. '=current' → logprob: -11.975478172302246
    9. '_current' → logprob: -12.100478172302246
    10. '_val' → logprob: -12.475478172302246

Token 1055: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' (adapté à ' speed') → logprob: -0.2318885773420334
    2. 'v' → logprob: -1.6068885326385498
    3. '   ' → logprob: -5.856888771057129
    4. 'cur' → logprob: -6.731888771057129
    5. 'curr' → logprob: -6.981888771057129
    6. '3' → logprob: -7.356888771057129
    7. 'current' → logprob: -7.981888771057129
    8. ' speed' → logprob: -8.606888771057129
    9. 'vel' → logprob: -9.356888771057129
    10. 'velocity' → logprob: -9.481888771057129

Token 1056: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7114021182060242
    2. '_exp' → logprob: -0.9614021182060242
    3. '=' → logprob: -2.461402177810669
    4. '_speed' → logprob: -3.586402177810669
    5. '_val' → logprob: -5.46140193939209
    6. '   ' → logprob: -6.21140193939209
    7. '_pow' → logprob: -6.58640193939209
    8. '_power' → logprob: -6.83640193939209
    9. 'exp' → logprob: -7.21140193939209
    10. '_ex' → logprob: -7.21140193939209

Token 1057: ' pow' (ID: 9779)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -2.4272752852994017e-05
    2. 'pow' → logprob: -11.25002384185791
    3. ' ' → logprob: -11.87502384185791
    4. '   ' → logprob: -12.62502384185791
    5. '1' → logprob: -15.12502384185791
    6. '(' → logprob: -15.50002384185791
    7. '
' → logprob: -15.87502384185791
    8. '```' → logprob: -16.000024795532227
    9. 'speed' → logprob: -16.500024795532227
    10. '  ' → logprob: -18.125024795532227

Token 1058: '(' (ID: 7)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4740873873233795
    2. '(' → logprob: -0.9740873575210571
    3. '(
' → logprob: -12.224087715148926
    4. ' ' → logprob: -12.599087715148926
    5. '
' → logprob: -14.349087715148926
    6. '```' → logprob: -14.724087715148926
    7. '   ' → logprob: -15.724087715148926
    8. '=' → logprob: -15.849087715148926
    9. ' (' → logprob: -16.09908676147461
    10. '{' → logprob: -16.59908676147461

Token 1059: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '
' → logprob: -18.5
    4. '   ' → logprob: -19.125
    5. '```' → logprob: -19.375
    6. '(' → logprob: -20.0
    7. ')' → logprob: -20.75
    8. '۳' → logprob: -21.5
    9. '３' → logprob: -22.5
    10. '

' → logprob: -22.875

Token 1060: ',' (ID: 11)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.0009050302323885262
    2. ' speed' → logprob: -7.2509050369262695
    3. '(speed' → logprob: -8.87590503692627
    4. ',' → logprob: -10.25090503692627
    5. ')' → logprob: -11.37590503692627
    6. 'abs' → logprob: -13.00090503692627
    7. '	speed' → logprob: -13.00090503692627
    8. '   ' → logprob: -13.62590503692627
    9. ' ,' → logprob: -14.62590503692627
    10. ' ' → logprob: -15.00090503692627

Token 1061: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -4.842555426876061e-06
    2. ' speed' → logprob: -12.250004768371582
    3. 'abs' → logprob: -16.8750057220459
    4. '(speed' → logprob: -17.2500057220459
    5. '	speed' → logprob: -18.2500057220459
    6. '
' → logprob: -18.6250057220459
    7. ')' → logprob: -19.6250057220459
    8. '.speed' → logprob: -19.8750057220459
    9. '   ' → logprob: -20.2500057220459
    10. '0' → logprob: -20.8750057220459

Token 1062: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.03100961446762085
    2. 'speed' → logprob: -4.031009674072266
    3. 'exp' → logprob: -4.906009674072266
    4. '_speed' → logprob: -5.281009674072266
    5. ')' → logprob: -8.781009674072266
    6. ' speed' → logprob: -10.531009674072266
    7. 'Exp' → logprob: -10.531009674072266
    8. '_ex' → logprob: -10.656009674072266
    9. '(speed' → logprob: -11.531009674072266
    10. '```' → logprob: -11.531009674072266

Token 1063: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016867241356521845
    2. ')
' → logprob: -6.5016865730285645
    3. '   ' → logprob: -8.751687049865723
    4. ' )' → logprob: -11.126687049865723
    5. ')
' → logprob: -12.001687049865723
    6. ')

' → logprob: -12.376687049865723
    7. ')*' → logprob: -15.251687049865723
    8. ' )
' → logprob: -15.626687049865723
    9. ')`' → logprob: -15.751687049865723
    10. '  ' → logprob: -15.876687049865723

Token 1064: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40393269062042236
    2. 'res' → logprob: -1.1539326906204224
    3. 'best' → logprob: -5.028932571411133
    4. 'ans' → logprob: -5.778932571411133
    5. 'options' → logprob: -6.403932571411133
    6. 'min' → logprob: -6.778932571411133
    7. 'ret' → logprob: -7.028932571411133
    8. 'time' → logprob: -7.278932571411133
    9. 'result' → logprob: -7.403932571411133
    10. 'choices' → logprob: -7.653932571411133

Token 1065: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.021156584843993187
    2. 'best' → logprob: -4.2711567878723145
    3. 'ans' → logprob: -5.3961567878723145
    4. 'ret' → logprob: -7.2711567878723145
    5. 'options' → logprob: -7.7711567878723145
    6. 'results' → logprob: -8.271156311035156
    7. '#' → logprob: -8.271156311035156
    8. 'times' → logprob: -8.646156311035156
    9. '   ' → logprob: -8.896156311035156
    10. 'min' → logprob: -9.021156311035156

Token 1066: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16189125180244446
    2. '=' → logprob: -1.911891222000122
    3. '   ' → logprob: -6.411891460418701
    4. '    ' → logprob: -11.411890983581543
    5. ' +=' → logprob: -12.036890983581543
    6. ' ' → logprob: -13.411890983581543
    7. '=res' → logprob: -14.036890983581543
    8. '+=' → logprob: -14.161890983581543
    9. '  ' → logprob: -14.286890983581543
    10. ',' → logprob: -14.911890983581543

Token 1067: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1011990308761597
    2. '10' → logprob: -1.1011990308761597
    3. 'float' → logprob: -1.2261990308761597
    4. 'remaining' → logprob: -3.851199150085449
    5. 'min' → logprob: -3.976199150085449
    6. '(' → logprob: -7.976199150085449
    7. 'int' → logprob: -8.35119915008545
    8. '
' → logprob: -8.60119915008545
    9. 'pow' → logprob: -9.35119915008545
    10. ' float' → logprob: -9.35119915008545

Token 1068: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7750906348228455
    2. '1' → logprob: -1.1500906944274902
    3. 'float' → logprob: -1.7750906944274902
    4. 'min' → logprob: -3.0250906944274902
    5. 'remaining' → logprob: -5.52509069442749
    6. 'int' → logprob: -8.400090217590332
    7. 'remain' → logprob: -10.025090217590332
    8. '
' → logprob: -10.275090217590332
    9. 'pow' → logprob: -10.275090217590332
    10. '(' → logprob: -10.400090217590332

Token 1069: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00034261439577676356
    2. '```' → logprob: -8.62534236907959
    3. '18' → logprob: -8.87534236907959
    4. '6' → logprob: -11.37534236907959
    5. '***' → logprob: -12.87534236907959
    6. '^' → logprob: -12.87534236907959
    7. '*' → logprob: -13.12534236907959
    8. ' **' → logprob: -13.50034236907959
    9. '**
' → logprob: -14.12534236907959
    10. '
' → logprob: -14.37534236907959

Token 1070: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.00014537633978761733
    2. '9' → logprob: -9.375144958496094
    3. '15' → logprob: -10.000144958496094
    4. '12' → logprob: -12.375144958496094
    5. '8' → logprob: -12.500144958496094
    6. '10' → logprob: -13.000144958496094
    7. '17' → logprob: -13.375144958496094
    8. '14' → logprob: -13.625144958496094
    9. '7' → logprob: -13.625144958496094
    10. '13' → logprob: -14.875144958496094

Token 1071: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23593829572200775
    2. '
' → logprob: -1.985938310623169
    3. 'for' → logprob: -3.485938310623169
    4. ' for' → logprob: -4.11093807220459
    5. '    
' → logprob: -5.23593807220459
    6. '+' → logprob: -5.73593807220459
    7. '```' → logprob: -5.73593807220459
    8. ' +' → logprob: -6.61093807220459
    9. ' if' → logprob: -6.61093807220459
    10. ',' → logprob: -6.73593807220459

Token 1072: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011532272212207317
    2. 'for' → logprob: -5.136532306671143
    3. '#' → logprob: -5.886532306671143
    4. '
' → logprob: -6.011532306671143
    5. '    
' → logprob: -8.636531829833984
    6. 'res' → logprob: -9.636531829833984
    7. '```' → logprob: -9.636531829833984
    8. ' for' → logprob: -10.511531829833984
    9. '   ' → logprob: -12.136531829833984
    10. 'next' → logprob: -12.761531829833984

Token 1073: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.13634690642356873
    2. 'for' → logprob: -2.6363468170166016
    3. '   ' → logprob: -2.8863468170166016
    4. 'res' → logprob: -11.011346817016602
    5. '    
' → logprob: -11.136346817016602
    6. '
' → logprob: -11.886346817016602
    7. '```' → logprob: -12.511346817016602
    8. ' #' → logprob: -13.261346817016602
    9. ' for' → logprob: -13.261346817016602
    10. 'if' → logprob: -13.386346817016602

Token 1074: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3205125629901886
    2. 'for' → logprob: -1.3205125331878662
    3. '   ' → logprob: -4.945512771606445
    4. 'advance' → logprob: -10.445512771606445
    5. 'time' → logprob: -10.695512771606445
    6. '    
' → logprob: -11.820512771606445
    7. ' #' → logprob: -11.820512771606445
    8. 'next' → logprob: -11.820512771606445
    9. ' for' → logprob: -11.945512771606445
    10. 'res' → logprob: -12.570512771606445

Token 1075: ' peut' (ID: 9216)
  Prédit: 'avance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avance' → logprob: -0.642790675163269
    2. ' avance' → logprob: -1.017790675163269
    3. 'res' → logprob: -3.6427907943725586
    4. 'av' → logprob: -4.017790794372559
    5. '#' → logprob: -4.392790794372559
    6. '   ' → logprob: -4.767790794372559
    7. ' #' → logprob: -5.142790794372559
    8. 'advance' → logprob: -5.142790794372559
    9. ' +=' → logprob: -5.267790794372559
    10. '
' → logprob: -5.267790794372559

Token 1076: ' prendre' (ID: 24257)
  Prédit: 'av'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.30576080083847046
    2. ' avancer' → logprob: -2.3057608604431152
    3. 'contin' → logprob: -3.0557608604431152
    4. '   ' → logprob: -3.4307608604431152
    5. '#' → logprob: -3.4307608604431152
    6. 'faire' → logprob: -4.055760860443115
    7. ' continuer' → logprob: -4.680760860443115
    8. 'prendre' → logprob: -5.430760860443115
    9. 'avance' → logprob: -5.555760860443115
    10. ' #' → logprob: -5.930760860443115

Token 1077: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.667526125907898
    2. ''' → logprob: -1.542526125907898
    3. ' ' → logprob: -2.4175262451171875
    4. ' '' → logprob: -2.9175262451171875
    5. '   ' → logprob: -3.5425262451171875
    6. '"' → logprob: -3.6675262451171875
    7. ''s' → logprob: -4.9175262451171875
    8. ' range' → logprob: -5.2925262451171875
    9. ' None' → logprob: -5.2925262451171875
    10. 'range' → logprob: -5.2925262451171875

Token 1078: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19622118771076202
    2. 'res' → logprob: -2.071221113204956
    3. 'remaining' → logprob: -4.196221351623535
    4. '0' → logprob: -4.571221351623535
    5. '#' → logprob: -4.696221351623535
    6. ' ' → logprob: -6.196221351623535
    7. '3' → logprob: -6.446221351623535
    8. 'range' → logprob: -6.571221351623535
    9. ' res' → logprob: -6.696221351623535
    10. '(' → logprob: -6.696221351623535

Token 1079: ' seconde' (ID: 66204)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4606903791427612
    2. ')' → logprob: -1.8356903791427612
    3. '_' → logprob: -1.9606903791427612
    4. ' ' → logprob: -2.335690498352051
    5. ' step' → logprob: -2.710690498352051
    6. '_second' → logprob: -3.210690498352051
    7. ' +' → logprob: -3.460690498352051
    8. ' *' → logprob: -3.460690498352051
    9. '_step' → logprob: -3.585690498352051
    10. ',' → logprob: -3.835690498352051

Token 1080: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9950990080833435
    2. ')' → logprob: -1.9950990676879883
    3. ' +' → logprob: -2.2450990676879883
    4. '+' → logprob: -2.4950990676879883
    5. ':' → logprob: -2.7450990676879883
    6. ' at' → logprob: -2.9950990676879883
    7. ',' → logprob: -3.3700990676879883
    8. ' +=' → logprob: -3.4950990676879883
    9. ' (' → logprob: -3.9950990676879883
    10. '(' → logprob: -4.245099067687988

Token 1081: ' la' (ID: 557)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.07270671427249908
    2. ' speed' → logprob: -2.822706699371338
    3. 'current' → logprob: -5.072706699371338
    4. 'v' → logprob: -6.822706699371338
    5. ' current' → logprob: -6.947706699371338
    6. 'spe' → logprob: -6.947706699371338
    7. ' vitesse' → logprob: -8.322707176208496
    8. '
' → logprob: -9.197707176208496
    9. '1' → logprob: -9.322707176208496
    10. 'pos' → logprob: -9.447707176208496

Token 1082: ' vitesse' (ID: 71752)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.03957856073975563
    2. 'current' → logprob: -3.414578676223755
    3. 'v' → logprob: -5.914578437805176
    4. ' speed' → logprob: -7.414578437805176
    5. 'pas' → logprob: -7.539578437805176
    6. 'pass' → logprob: -7.664578437805176
    7. 'pow' → logprob: -8.414578437805176
    8. '1' → logprob: -8.539578437805176
    9. 'curr' → logprob: -8.789578437805176
    10. 'step' → logprob: -8.914578437805176

Token 1083: ' actuelle' (ID: 104951)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.5510015487670898
    2. ')' → logprob: -1.6760015487670898
    3. '_current' → logprob: -2.05100154876709
    4. ' current' → logprob: -2.17600154876709
    5. '_exp' → logprob: -2.55100154876709
    6. ' )' → logprob: -2.92600154876709
    7. '```' → logprob: -3.17600154876709
    8. '_' → logprob: -3.42600154876709
    9. '   ' → logprob: -3.80100154876709
    10. ' ' → logprob: -4.05100154876709

Token 1084: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06245575100183487
    2. ':' → logprob: -3.562455654144287
    3. ',' → logprob: -4.312455654144287
    4. ' +' → logprob: -4.687455654144287
    5. ')' → logprob: -6.437455654144287
    6. '+' → logprob: -6.562455654144287
    7. '    
' → logprob: -6.937455654144287
    8. ' :' → logprob: -7.062455654144287
    9. ' ,' → logprob: -7.812455654144287
    10. '(' → logprob: -7.937455654144287

Token 1085: 'av' (ID: 407)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.5119355320930481
    2. 'speed' → logprob: -1.0119354724884033
    3. ')' → logprob: -4.636935710906982
    4. ' speed' → logprob: -5.011935710906982
    5. ' remaining' → logprob: -5.011935710906982
    6. '   ' → logprob: -5.886935710906982
    7. '),' → logprob: -5.886935710906982
    8. 'res' → logprob: -5.886935710906982
    9. '1' → logprob: -6.386935710906982
    10. '
' → logprob: -7.636935710906982

Token 1086: 'ancer' (ID: 13358)
  Prédit: 'ancer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancer' → logprob: -0.37408486008644104
    2. 'ance' → logprob: -1.4990848302841187
    3. 'v' → logprob: -2.874084949493408
    4. 'anc' → logprob: -4.124084949493408
    5. 'ancée' → logprob: -5.624084949493408
    6. '1' → logprob: -6.374084949493408
    7. '_' → logprob: -6.624084949493408
    8. 'n' → logprob: -6.624084949493408
    9. '=' → logprob: -6.999084949493408
    10. 'ancé' → logprob: -7.249084949493408

Token 1087: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6887860298156738
    2. ')' → logprob: -1.5637860298156738
    3. ' ,' → logprob: -2.688786029815674
    4. '),' → logprob: -2.938786029815674
    5. ' )' → logprob: -3.313786029815674
    6. ' *' → logprob: -3.438786029815674
    7. '*' → logprob: -3.688786029815674
    8. '   ' → logprob: -3.938786029815674
    9. ')*' → logprob: -4.563786029815674
    10. ' ),' → logprob: -4.813786029815674

Token 1088: ''une' (ID: 13337)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.043018829077482224
    2. ' speed' → logprob: -3.1680188179016113
    3. '	speed' → logprob: -12.29301929473877
    4. '(speed' → logprob: -12.54301929473877
    5. ' ' → logprob: -13.04301929473877
    6. '1' → logprob: -13.29301929473877
    7. '```' → logprob: -13.79301929473877
    8. ' ' → logprob: -14.29301929473877
    9. '
' → logprob: -14.29301929473877
    10. 'pow' → logprob: -14.29301929473877

Token 1089: ' distance' (ID: 9324)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.2256983071565628
    2. ' speed' → logprob: -1.6006983518600464
    3. '1' → logprob: -9.725698471069336
    4. ' ' → logprob: -10.725698471069336
    5. 'distance' → logprob: -10.725698471069336
    6. ' ' → logprob: -10.850698471069336
    7. 'remaining' → logprob: -11.100698471069336
    8. '	speed' → logprob: -11.100698471069336
    9. '(speed' → logprob: -11.225698471069336
    10. ' vitesse' → logprob: -11.225698471069336

Token 1090: ' speed' (ID: 7733)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7909355759620667
    2. ')' → logprob: -1.5409355163574219
    3. ' *' → logprob: -1.5409355163574219
    4. ' )' → logprob: -3.415935516357422
    5. ',' → logprob: -3.540935516357422
    6. ' ,' → logprob: -4.540935516357422
    7. '),' → logprob: -4.915935516357422
    8. '   ' → logprob: -5.290935516357422
    9. '```' → logprob: -5.540935516357422
    10. 'speed' → logprob: -5.665935516357422

Token 1091: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46362945437431335
    2. '),' → logprob: -1.7136294841766357
    3. ')
' → logprob: -2.0886294841766357
    4. '):
' → logprob: -3.8386294841766357
    5. ' )' → logprob: -3.9636294841766357
    6. '   ' → logprob: -4.588629245758057
    7. ' )
' → logprob: -5.338629245758057
    8. ' ),' → logprob: -5.338629245758057
    9. ',' → logprob: -5.963629245758057
    10. '):' → logprob: -6.463629245758057

Token 1092: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032155733555555344
    2. ':' → logprob: -4.407155513763428
    3. ',' → logprob: -4.532155513763428
    4. ' +' → logprob: -6.282155513763428
    5. '    
' → logprob: -6.657155513763428
    6. '
' → logprob: -7.032155513763428
    7. 'for' → logprob: -7.032155513763428
    8. ')' → logprob: -7.407155513763428
    9. 'res' → logprob: -7.782155513763428
    10. ' ,' → logprob: -8.157155990600586

Token 1093: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3798251450061798
    2. '   ' → logprob: -1.6298251152038574
    3. '#' (adapté à ' #') → logprob: -2.6298251152038574
    4. 'next' → logprob: -3.5048251152038574
    5. 'res' → logprob: -4.879825115203857
    6. 'new' → logprob: -5.379825115203857
    7. 'time' → logprob: -5.504825115203857
    8. 'if' → logprob: -8.254825592041016
    9. 'advance' → logprob: -8.254825592041016
    10. 'temps' → logprob: -8.629825592041016

Token 1094: ' Puis' (ID: 87717)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23861122131347656
    2. '   ' → logprob: -1.6136112213134766
    3. '#' → logprob: -4.613611221313477
    4. 'next' → logprob: -6.613611221313477
    5. ' for' → logprob: -7.238611221313477
    6. 'new' → logprob: -7.863611221313477
    7. 'options' → logprob: -8.488611221313477
    8. 'res' → logprob: -8.988611221313477
    9. 'if' → logprob: -9.613611221313477
    10. 'remaining' → logprob: -9.613611221313477

Token 1095: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.892581045627594
    2. 'for' → logprob: -1.0175809860229492
    3. '   ' → logprob: -1.6425809860229492
    4. 'on' → logprob: -4.392580986022949
    5. 'pour' → logprob: -4.767580986022949
    6. 'res' → logprob: -5.267580986022949
    7. 'faire' → logprob: -5.517580986022949
    8. 'rés' → logprob: -7.267580986022949
    9. 'consider' → logprob: -7.642580986022949
    10. 'prendre' → logprob: -7.767580986022949

Token 1096: ' au' (ID: 2791)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1048787459731102
    2. '   ' → logprob: -2.6048786640167236
    3. '#' → logprob: -4.104878902435303
    4. ' for' → logprob: -4.979878902435303
    5. 'res' → logprob: -6.479878902435303
    6. '
' → logprob: -8.479878425598145
    7. 'pour' → logprob: -8.729878425598145
    8. '	for' → logprob: -9.479878425598145
    9. ' #' → logprob: -9.479878425598145
    10. 'choices' → logprob: -10.104878425598145

Token 1097: ' moment' (ID: 4205)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.022057345137000084
    2. 'next' → logprob: -4.52205753326416
    3. 'prox' → logprob: -5.27205753326416
    4. 'pr' → logprob: -6.89705753326416
    5. ' prochain' → logprob: -7.02205753326416
    6. 'su' → logprob: -7.27205753326416
    7. '
' → logprob: -7.64705753326416
    8. '+' → logprob: -7.64705753326416
    9. ' ' → logprob: -8.02205753326416
    10. 'près' → logprob: -8.27205753326416

Token 1098: ' suivant' (ID: 68705)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.31505119800567627
    2. 'd' → logprob: -1.6900511980056763
    3. 'de' → logprob: -2.9400510787963867
    4. ' suivant' → logprob: -3.6900510787963867
    5. '   ' → logprob: -5.565051078796387
    6. ' de' → logprob: -6.565051078796387
    7. ' d' → logprob: -7.565051078796387
    8. 's' → logprob: -7.815051078796387
    9. 't' → logprob: -8.190051078796387
    10. '    ' → logprob: -8.315051078796387

Token 1099: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0517767667770386
    2. '   ' → logprob: -1.0517767667770386
    3. 'on' → logprob: -1.5517767667770386
    4. 'res' → logprob: -2.926776885986328
    5. ':' → logprob: -4.426776885986328
    6. ' on' → logprob: -4.551776885986328
    7. 'return' → logprob: -6.051776885986328
    8. 'faire' → logprob: -6.426776885986328
    9. '```' → logprob: -6.676776885986328
    10. ':
' → logprob: -7.176776885986328

Token 1100: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.205519437789917
    2. 'res' → logprob: -1.330519437789917
    3. ' res' → logprob: -1.455519437789917
    4. '   ' → logprob: -2.455519437789917
    5. ' for' → logprob: -2.455519437789917
    6. ' on' → logprob: -4.455519676208496
    7. 'on' → logprob: -4.955519676208496
    8. '#' → logprob: -5.705519676208496
    9. ' choisir' → logprob: -5.830519676208496
    10. 'choices' → logprob: -7.205519676208496

Token 1101: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.8549313545227051
    2. '#' → logprob: -1.479931354522705
    3. 'choose' → logprob: -2.479931354522705
    4. 'cho' → logprob: -2.854931354522705
    5. 'can' → logprob: -3.104931354522705
    6. 'for' → logprob: -3.479931354522705
    7. ' peut' → logprob: -3.854931354522705
    8. 'p' → logprob: -3.979931354522705
    9. 'do' → logprob: -4.104931354522705
    10. 'continue' → logprob: -4.229931354522705

Token 1102: ' choisir' (ID: 47004)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.9019979238510132
    2. 'cho' → logprob: -0.9019979238510132
    3. 'contin' → logprob: -2.6519980430603027
    4. 'changer' → logprob: -3.1519980430603027
    5. 'ne' → logprob: -3.9019980430603027
    6. '   ' → logprob: -3.9019980430603027
    7. 'so' → logprob: -4.276998043060303
    8. '#' → logprob: -5.651998043060303
    9. 'ess' → logprob: -5.776998043060303
    10. ' choisir' → logprob: -6.026998043060303

Token 1103: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6855166554450989
    2. ' de' → logprob: -0.8105166554450989
    3. '   ' → logprob: -3.560516595840454
    4. '    ' → logprob: -5.310516834259033
    5. 'ne' → logprob: -5.560516834259033
    6. 'speed' → logprob: -5.935516834259033
    7. 'd' → logprob: -6.435516834259033
    8. ' soit' → logprob: -6.560516834259033
    9. '```' → logprob: -6.560516834259033
    10. 'from' → logprob: -6.685516834259033

Token 1104: ''app' (ID: 41670)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.24599318206310272
    2. 'e' → logprob: -2.745993137359619
    3. ' ne' → logprob: -2.870993137359619
    4. '#' → logprob: -3.745993137359619
    5. '   ' → logprob: -3.995993137359619
    6. ' rester' → logprob: -4.245993137359619
    7. 'g' → logprob: -5.245993137359619
    8. '
' → logprob: -5.745993137359619
    9. 're' → logprob: -5.870993137359619
    10. ' garder' → logprob: -5.870993137359619

Token 1105: 'uyer' (ID: 78614)
  Prédit: 'uyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uyer' → logprob: -0.8074584603309631
    2. 'outer' → logprob: -2.0574584007263184
    3. 'oyer' → logprob: -2.4324584007263184
    4. 'our' → logprob: -2.8074584007263184
    5. 'p' → logprob: -3.0574584007263184
    6. 'ply' → logprob: -3.3074584007263184
    7. 'pliquer' → logprob: -3.5574584007263184
    8. 'ly' → logprob: -3.8074584007263184
    9. 'layer' → logprob: -4.432458400726318
    10. 'o' → logprob: -4.557458400726318

Token 1106: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.4781455099582672
    2. ' sur' → logprob: -0.9781454801559448
    3. ',' → logprob: -7.228145599365234
    4. '_sur' → logprob: -7.228145599365234
    5. ' ' → logprob: -7.353145599365234
    6. ' soit' → logprob: -8.228145599365234
    7. '<|end|>' → logprob: -8.478145599365234
    8. '   ' → logprob: -8.478145599365234
    9. ')' → logprob: -8.728145599365234
    10. ' ou' → logprob: -8.853145599365234

Token 1107: ' [' (ID: 723)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2904815673828125
    2. ' ' → logprob: -2.1654815673828125
    3. '[' → logprob: -3.1654815673828125
    4. ''' → logprob: -3.6654815673828125
    5. '1' → logprob: -4.1654815673828125
    6. 'None' → logprob: -5.1654815673828125
    7. '```' → logprob: -5.2904815673828125
    8. '"' → logprob: -5.2904815673828125
    9. ' '' → logprob: -5.5404815673828125
    10. '0' → logprob: -5.6654815673828125

Token 1108: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.023085903376340866
    2. ''' → logprob: -4.023086071014404
    3. ']' → logprob: -6.273086071014404
    4. '"' → logprob: -6.523086071014404
    5. '1' → logprob: -7.398086071014404
    6. ' ' → logprob: -8.273085594177246
    7. 'None' → logprob: -9.398085594177246
    8. '*' → logprob: -9.398085594177246
    9. '''' → logprob: -9.398085594177246
    10. '
' → logprob: -9.398085594177246

Token 1109: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07661283016204834
    2. '],' → logprob: -3.326612949371338
    3. ']' → logprob: -3.576612949371338
    4. '*' → logprob: -5.201612949371338
    5. ']),' → logprob: -6.951612949371338
    6. '*x' → logprob: -6.951612949371338
    7. 'exp' → logprob: -7.951612949371338
    8. '**' → logprob: -8.32661247253418
    9. '])' → logprob: -8.32661247253418
    10. ',' → logprob: -8.32661247253418

Token 1110: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.029945092275738716
    2. ']' → logprob: -3.654945135116577
    3. '],
' → logprob: -5.779944896697998
    4. ']
' → logprob: -8.404945373535156
    5. ''],' → logprob: -8.904945373535156
    6. ' ],' → logprob: -9.404945373535156
    7. '   ' → logprob: -10.029945373535156
    8. '],

' → logprob: -11.654945373535156
    9. '"],' → logprob: -11.779945373535156
    10. ']:
' → logprob: -11.904945373535156

Token 1111: ' [' (ID: 723)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6778745651245117
    2. '#' → logprob: -1.1778745651245117
    3. ' #' → logprob: -2.6778745651245117
    4. ''s' → logprob: -3.5528745651245117
    5. ' or' → logprob: -3.6778745651245117
    6. ' '' → logprob: -3.8028745651245117
    7. ',' → logprob: -4.677874565124512
    8. ' ou' → logprob: -4.802874565124512
    9. ' ' → logprob: -5.677874565124512
    10. '"' → logprob: -5.677874565124512

Token 1112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023642346262931824
    2. ' ' → logprob: -3.7736423015594482
    3. 'speed' → logprob: -9.023642539978027
    4. '   ' → logprob: -9.273642539978027
    5. '(' → logprob: -10.273642539978027
    6. '```' → logprob: -11.023642539978027
    7. '
' → logprob: -11.273642539978027
    8. ' speed' → logprob: -11.398642539978027
    9. '3' → logprob: -11.398642539978027
    10. '0' → logprob: -11.398642539978027

Token 1113: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -9.13388703338569e-06
    2. '/
' → logprob: -12.125009536743164
    3. ' /' → logprob: -12.750009536743164
    4. '/]' → logprob: -15.125009536743164
    5. '3' → logprob: -15.750009536743164
    6. '/
/' → logprob: -15.875009536743164
    7. '//' → logprob: -16.750009536743164
    8. '   ' → logprob: -16.750009536743164
    9. ']' → logprob: -17.500009536743164
    10. '
' → logprob: -17.750009536743164

Token 1114: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.7146746763028204e-05
    2. ' ' → logprob: -10.25003719329834
    3. '```' → logprob: -14.25003719329834
    4. '³' → logprob: -15.12503719329834
    5. '   ' → logprob: -15.37503719329834
    6. '  ' → logprob: -16.125036239624023
    7. '۳' → logprob: -17.000036239624023
    8. '​' → logprob: -17.000036239624023
    9. ' ' → logprob: -17.250036239624023
    10. '' → logprob: -17.750036239624023

Token 1115: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00043496055877767503
    2. ']' → logprob: -8.250434875488281
    3. '3' → logprob: -9.000434875488281
    4. ',' → logprob: -10.250434875488281
    5. '],' → logprob: -12.250434875488281
    6. 'speed' → logprob: -13.125434875488281
    7. 'exp' → logprob: -13.125434875488281
    8. '³' → logprob: -13.875434875488281
    9. '```' → logprob: -14.000434875488281
    10. ')' → logprob: -14.000434875488281

Token 1116: ']' (ID: 60)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.34877243638038635
    2. ']' → logprob: -1.223772406578064
    3. '],
' → logprob: -8.848772048950195
    4. ']
' → logprob: -9.223772048950195
    5. '),' → logprob: -10.848772048950195
    6. ' ],' → logprob: -10.848772048950195
    7. ')]' → logprob: -11.848772048950195
    8. ' ]' → logprob: -11.973772048950195
    9. 'exp' → logprob: -12.098772048950195
    10. '   ' → logprob: -12.098772048950195

Token 1117: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04679056629538536
    2. '   ' → logprob: -3.671790599822998
    3. ' ou' → logprob: -4.546790599822998
    4. 'or' → logprob: -5.671790599822998
    5. '```' → logprob: -5.796790599822998
    6. ' or' → logprob: -7.046790599822998
    7. ')' → logprob: -7.046790599822998
    8. '#' → logprob: -7.796790599822998
    9. ',
' → logprob: -8.42179012298584
    10. ' ,' → logprob: -8.54679012298584

Token 1118: ' rien' (ID: 23082)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.35973048210144043
    2. ' ne' → logprob: -1.9847304821014404
    3. 'r' → logprob: -2.9847304821014404
    4. '[' → logprob: -3.1097304821014404
    5. ' rien' → logprob: -4.1097307205200195
    6. '"' → logprob: -4.4847307205200195
    7. 'None' → logprob: -4.9847307205200195
    8. '   ' → logprob: -5.1097307205200195
    9. ' None' → logprob: -5.2347307205200195
    10. ' rester' → logprob: -5.6097307205200195

Token 1119: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006943879649043083
    2. ',' → logprob: -6.256943702697754
    3. 'for' → logprob: -6.381943702697754
    4. '
' → logprob: -7.381943702697754
    5. ' for' → logprob: -7.506943702697754
    6. ':' → logprob: -8.006943702697754
    7. '    
' → logprob: -8.131943702697754
    8. '(' → logprob: -8.381943702697754
    9. ' next' → logprob: -8.756943702697754
    10. ')' → logprob: -8.756943702697754

Token 1120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011303046718239784
    2. 'for' → logprob: -5.636302947998047
    3. '
' → logprob: -5.886302947998047
    4. 'choices' → logprob: -6.761302947998047
    5. '    
' → logprob: -7.011302947998047
    6. ' choices' → logprob: -7.136302947998047
    7. ' for' → logprob: -7.386302947998047
    8. 'next' → logprob: -7.886302947998047
    9. 'res' → logprob: -8.511302947998047
    10. 'actions' → logprob: -8.636302947998047

Token 1121: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3383456766605377
    2. 'for' → logprob: -1.4633456468582153
    3. '
' → logprob: -3.463345766067505
    4. ' for' → logprob: -4.463345527648926
    5. '    
' → logprob: -5.213345527648926
    6. 'res' → logprob: -5.588345527648926
    7. 'options' → logprob: -7.213345527648926
    8. 'choices' → logprob: -7.463345527648926
    9. '\n' → logprob: -7.838345527648926
    10. 'next' → logprob: -7.963345527648926

Token 1122: ' Mais' (ID: 13880)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03062894009053707
    2. '   ' → logprob: -3.5306289196014404
    3. '#' → logprob: -7.7806291580200195
    4. ' for' → logprob: -8.90562915802002
    5. 'next' → logprob: -9.15562915802002
    6. 'options' → logprob: -9.40562915802002
    7. 'actions' → logprob: -10.15562915802002
    8. 'res' → logprob: -10.28062915802002
    9. 'choices' → logprob: -10.65562915802002
    10. 'current' → logprob: -12.03062915802002

Token 1123: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6339910626411438
    2. ' for' → logprob: -1.508991003036499
    3. '#' → logprob: -2.133991003036499
    4. 'for' → logprob: -2.758991003036499
    5. ' #' → logprob: -3.508991003036499
    6. ' ' → logprob: -4.758991241455078
    7. ' pour' → logprob: -5.133991241455078
    8. ' on' → logprob: -5.758991241455078
    9. '    ' → logprob: -5.883991241455078
    10. '
' → logprob: -6.383991241455078

Token 1124: ' on' (ID: 402)
  Prédit: ' speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' speed' → logprob: -0.5233076214790344
    2. 'speed' → logprob: -0.8983076214790344
    3. '(speed' → logprob: -10.148307800292969
    4. '	speed' → logprob: -10.398307800292969
    5. ' ' → logprob: -11.148307800292969
    6. 'abs' → logprob: -11.273307800292969
    7. ' abs' → logprob: -11.273307800292969
    8. ' vitesse' → logprob: -11.398307800292969
    9. 'remaining' → logprob: -11.398307800292969
    10. '   ' → logprob: -11.648307800292969

Token 1125: ' div' (ID: 4223)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.937640368938446
    2. 'app' → logprob: -1.5626404285430908
    3. 'cho' → logprob: -2.187640428543091
    4. 'est' → logprob: -2.312640428543091
    5. 'reste' → logprob: -2.687640428543091
    6. ' continue' → logprob: -3.437640428543091
    7. 'avance' → logprob: -3.812640428543091
    8. 'n' → logprob: -4.562640190124512
    9. 'p' → logprob: -4.687640190124512
    10. 'contin' → logprob: -5.312640190124512

Token 1126: 'ise' (ID: 1096)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.06395093351602554
    2. 'ise' → logprob: -2.813951015472412
    3. 'ide' → logprob: -7.313951015472412
    4. '   ' → logprob: -7.438951015472412
    5. 'er' → logprob: -8.563950538635254
    6. '       ' → logprob: -9.188950538635254
    7. 'isez' → logprob: -9.188950538635254
    8. 'ser' → logprob: -9.313950538635254
    9. 'isé' → logprob: -10.313950538635254
    10. 'ider' → logprob: -10.688950538635254

Token 1127: ' la' (ID: 557)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.078749656677246
    2. ' par' → logprob: -1.453749656677246
    3. 'pas' → logprob: -1.703749656677246
    4. '   ' → logprob: -2.703749656677246
    5. ' speed' → logprob: -2.703749656677246
    6. ' pas' → logprob: -3.078749656677246
    7. 'speed' → logprob: -3.328749656677246
    8. ' la' → logprob: -5.828749656677246
    9. ' plus' → logprob: -5.828749656677246
    10. 'plus' → logprob: -5.953749656677246

Token 1128: ' vitesse' (ID: 71752)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5817766785621643
    2. 'speed' → logprob: -1.2067766189575195
    3. ' speed' → logprob: -2.3317766189575195
    4. '1' → logprob: -3.5817766189575195
    5. ' ' → logprob: -4.4567766189575195
    6. ' vitesse' → logprob: -6.2067766189575195
    7. 'v' → logprob: -6.5817766189575195
    8. 'current' → logprob: -7.9567766189575195
    9. ' ' → logprob: -7.9567766189575195
    10. '0' → logprob: -8.08177661895752

Token 1129: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.03891179338097572
    2. 'par' → logprob: -3.538911819458008
    3. ' de' → logprob: -5.413911819458008
    4. ' by' → logprob: -6.288911819458008
    5. ',' → logprob: -7.538911819458008
    6. '=' → logprob: -7.913911819458008
    7. ' ,' → logprob: -8.413911819458008
    8. ' =' → logprob: -8.413911819458008
    9. ' ==' → logprob: -8.413911819458008
    10. 'by' → logprob: -8.538911819458008

Token 1130: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.006717743817716837
    2. ' ' → logprob: -5.006717681884766
    3. ' ' → logprob: -13.506717681884766
    4. '```' → logprob: -14.006717681884766
    5. '   ' → logprob: -16.506717681884766
    6. ' trois' → logprob: -17.131717681884766
    7. '​' → logprob: -17.131717681884766
    8. '  ' → logprob: -17.381717681884766
    9. '
' → logprob: -17.381717681884766
    10. '³' → logprob: -17.506717681884766

Token 1131: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0010350722586736083
    2. ' ' → logprob: -6.876035213470459
    3. '   ' → logprob: -13.6260347366333
    4. '
' → logprob: -14.7510347366333
    5. '```' → logprob: -15.3760347366333
    6. '  ' → logprob: -15.5010347366333
    7. ' ' → logprob: -15.7510347366333
    8. '³' → logprob: -17.626035690307617
    9. '=' → logprob: -17.751035690307617
    10. '    ' → logprob: -18.001035690307617

Token 1132: ' alors' (ID: 17971)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14232118427753448
    2. '   ' → logprob: -2.3923211097717285
    3. ':' → logprob: -4.2673211097717285
    4. '):
' → logprob: -4.7673211097717285
    5. ' ,' → logprob: -5.5173211097717285
    6. ':
' → logprob: -6.0173211097717285
    7. '),' → logprob: -6.1423211097717285
    8. ')' → logprob: -6.2673211097717285
    9. '):' → logprob: -6.2673211097717285
    10. ',
' → logprob: -6.3923211097717285

Token 1133: ' qu' (ID: 474)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.25240248441696167
    2. ' speed' → logprob: -1.5024025440216064
    3. '   ' → logprob: -9.002402305603027
    4. 'if' → logprob: -9.252402305603027
    5. '(speed' → logprob: -9.502402305603027
    6. ' ' → logprob: -9.627402305603027
    7. '	speed' → logprob: -10.252402305603027
    8. ' if' → logprob: -10.502402305603027
    9. ' vitesse' → logprob: -12.252402305603027
    10. '```' → logprob: -12.377402305603027

Token 1134: ''on' (ID: 25812)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.314218670129776
    2. ' speed' → logprob: -1.3142186403274536
    3. '   ' → logprob: -7.314218521118164
    4. '	speed' → logprob: -9.564218521118164
    5. 'on' → logprob: -10.439218521118164
    6. '    ' → logprob: -10.814218521118164
    7. '(speed' → logprob: -10.814218521118164
    8. ' on' → logprob: -10.939218521118164
    9. 'la' → logprob: -11.189218521118164
    10. ' ' → logprob: -11.189218521118164

Token 1135: ' est' (ID: 893)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.03101366013288498
    2. ' speed' → logprob: -3.9060137271881104
    3. 'est' → logprob: -4.656013488769531
    4. ' est' → logprob: -7.781013488769531
    5. 'is' → logprob: -7.906013488769531
    6. ' is' → logprob: -10.281013488769531
    7. 'v' → logprob: -11.281013488769531
    8. '(speed' → logprob: -11.531013488769531
    9. '```' → logprob: -11.781013488769531
    10. '#' → logprob: -12.031013488769531

Token 1136: ' à' (ID: 1221)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.021444829180836678
    2. ' speed' → logprob: -4.021444797515869
    3. '0' → logprob: -5.896444797515869
    4. 'v' → logprob: -8.021445274353027
    5. ' at' → logprob: -9.646445274353027
    6. 'à' → logprob: -9.771445274353027
    7. 'at' → logprob: -9.896445274353027
    8. '```' → logprob: -11.896445274353027
    9. '	speed' → logprob: -12.146445274353027
    10. ' ' → logprob: -12.271445274353027

Token 1137: ' vitesse' (ID: 71752)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003929864149540663
    2. 'speed' → logprob: -5.62893009185791
    3. ' ' → logprob: -8.37893009185791
    4. ' speed' → logprob: -9.50393009185791
    5. '```' → logprob: -10.87893009185791
    6. 'exp' → logprob: -12.75393009185791
    7. '`' → logprob: -14.25393009185791
    8. 'ex' → logprob: -14.37893009185791
    9. 'v' → logprob: -14.50393009185791
    10. '1' → logprob: -14.62893009185791

Token 1138: ' normale' (ID: 57494)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1709473133087158
    2. '==' → logprob: -1.7959473133087158
    3. '=' → logprob: -2.420947313308716
    4. 'norm' → logprob: -2.545947313308716
    5. ' normale' → logprob: -2.670947313308716
    6. ' ' → logprob: -2.670947313308716
    7. ' =' → logprob: -2.795947313308716
    8. ' ==' → logprob: -3.045947313308716
    9. '1' → logprob: -3.420947313308716
    10. 'exp' → logprob: -4.045947074890137

Token 1139: ',' (ID: 11)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.33386391401290894
    2. ',' → logprob: -1.4588639736175537
    3. '=' → logprob: -4.208863735198975
    4. '(' → logprob: -4.208863735198975
    5. '0' → logprob: -4.583863735198975
    6. ':' → logprob: -5.833863735198975
    7. ' ,' → logprob: -5.833863735198975
    8. ' =' → logprob: -6.833863735198975
    9. '#' → logprob: -7.208863735198975
    10. ' (=' → logprob: -7.208863735198975

Token 1140: ' ça' (ID: 13590)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.6523774862289429
    2. '   ' → logprob: -1.5273774862289429
    3. 'res' → logprob: -2.0273776054382324
    4. '    ' → logprob: -3.2773776054382324
    5. ' return' → logprob: -3.4023776054382324
    6. 'return' → logprob: -3.6523776054382324
    7. '#' → logprob: -4.902377605438232
    8. '       ' → logprob: -5.152377605438232
    9. ' continue' → logprob: -5.527377605438232
    10. ' #' → logprob: -5.652377605438232

Token 1141: ' ne' (ID: 453)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3124106824398041
    2. 'continue' → logprob: -1.5624107122421265
    3. ' return' → logprob: -3.937410593032837
    4. ' n' → logprob: -4.562410831451416
    5. ' ne' → logprob: -4.562410831451416
    6. ' #' → logprob: -5.687410831451416
    7. 'n' → logprob: -5.812410831451416
    8. 'return' → logprob: -5.937410831451416
    9. ' impossible' → logprob: -6.687410831451416
    10. 'contin' → logprob: -6.937410831451416

Token 1142: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.4998575747013092
    2. 'continue' → logprob: -1.8748575448989868
    3. 'fait' → logprob: -2.9998576641082764
    4. ' change' → logprob: -3.2498576641082764
    5. 'print' → logprob: -3.4998576641082764
    6. 'pas' → logprob: -3.4998576641082764
    7. ' fait' → logprob: -4.249857425689697
    8. 'pe' → logprob: -4.249857425689697
    9. 'p' → logprob: -4.499857425689697
    10. ' continue' → logprob: -4.749857425689697

Token 1143: ' rien' (ID: 23082)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.3766878545284271
    2. ' pas' → logprob: -1.2516878843307495
    3. 'r' → logprob: -4.376688003540039
    4. ' rien' → logprob: -4.376688003540039
    5. '_pas' → logprob: -6.251688003540039
    6. ' plus' → logprob: -8.251688003540039
    7. ',' → logprob: -9.376688003540039
    8. ' ' → logprob: -9.501688003540039
    9. 'ra' → logprob: -9.876688003540039
    10. '.' → logprob: -9.876688003540039

Token 1144: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16970294713974
    2. ':' → logprob: -2.5447030067443848
    3. ',' → logprob: -2.6697030067443848
    4. ':
' → logprob: -6.044703006744385
    5. '.' → logprob: -6.419703006744385
    6. ' or' → logprob: -6.669703006744385
    7. ',
' → logprob: -7.044703006744385
    8. ')' → logprob: -7.794703006744385
    9. '):' → logprob: -7.919703006744385
    10. ' (' → logprob: -8.169702529907227

Token 1145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011433867737650871
    2. 'for' → logprob: -4.761434078216553
    3. '
' → logprob: -6.636434078216553
    4. 'actions' → logprob: -7.636434078216553
    5. '    
' → logprob: -8.011433601379395
    6. 'next' → logprob: -8.261433601379395
    7. 'choices' → logprob: -9.011433601379395
    8. 'options' → logprob: -9.136433601379395
    9. ' for' → logprob: -9.386433601379395
    10. '```' → logprob: -10.011433601379395

Token 1146: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1059102714061737
    2. '#' (adapté à ' #') → logprob: -2.355910301208496
    3. '   ' → logprob: -5.355910301208496
    4. 'res' → logprob: -7.105910301208496
    5. 'options' → logprob: -9.855910301208496
    6. 'next' → logprob: -10.730910301208496
    7. '    
' → logprob: -11.480910301208496
    8. 'choices' → logprob: -11.480910301208496
    9. 'actions' → logprob: -11.605910301208496
    10. 'time' → logprob: -11.605910301208496

Token 1147: ' Option' (ID: 17796)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.036631230264902115
    2. '#' → logprob: -3.9116313457489014
    3. '   ' → logprob: -4.286631107330322
    4. 'res' → logprob: -6.411631107330322
    5. 'next' → logprob: -8.53663158416748
    6. 'options' → logprob: -9.53663158416748
    7. 'time' → logprob: -9.78663158416748
    8. 'choices' → logprob: -9.91163158416748
    9. 'remaining' → logprob: -10.03663158416748
    10. ' for' → logprob: -10.16163158416748

Token 1148: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12359132617712021
    2. '1' → logprob: -3.248591423034668
    3. '=' → logprob: -3.623591423034668
    4. '   ' → logprob: -4.123591423034668
    5. ':' → logprob: -4.373591423034668
    6. ' ' → logprob: -4.748591423034668
    7. ' +=' → logprob: -6.498591423034668
    8. '(' → logprob: -6.873591423034668
    9. '_none' → logprob: -6.998591423034668
    10. 'None' → logprob: -7.123591423034668

Token 1149: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8684578537940979
    2. '1' → logprob: -1.1184577941894531
    3. 'do' → logprob: -2.493457794189453
    4. '#' → logprob: -2.618457794189453
    5. 'res' → logprob: -3.743457794189453
    6. 'nothing' → logprob: -4.243457794189453
    7. 'none' → logprob: -4.368457794189453
    8. 'for' → logprob: -4.743457794189453
    9. '0' → logprob: -4.743457794189453
    10. 'None' → logprob: -4.868457794189453

Token 1150: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15715894103050232
    2. '   ' → logprob: -3.157158851623535
    3. '=' → logprob: -3.282158851623535
    4. ':' → logprob: -3.407158851623535
    5. ' res' → logprob: -4.407158851623535
    6. ' nothing' → logprob: -4.907158851623535
    7. '
' → logprob: -6.157158851623535
    8. 'res' → logprob: -6.282158851623535
    9. ' no' → logprob: -6.782158851623535
    10. 'nothing' → logprob: -7.157158851623535

Token 1151: ' ne' (ID: 453)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.9828699827194214
    2. 'time' → logprob: -1.8578699827194214
    3. '#' → logprob: -2.732870101928711
    4. ' res' → logprob: -2.732870101928711
    5. ' next' → logprob: -2.732870101928711
    6. 'res' → logprob: -2.982870101928711
    7. ' time' → logprob: -3.107870101928711
    8. 'new' → logprob: -3.232870101928711
    9. ' #' → logprob: -3.607870101928711
    10. '   ' → logprob: -3.857870101928711

Token 1152: ' rien' (ID: 23082)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8517118096351624
    2. ' rien' → logprob: -1.4767117500305176
    3. 'faire' → logprob: -1.8517117500305176
    4. '   ' → logprob: -2.2267117500305176
    5. ' faire' → logprob: -3.1017117500305176
    6. 'pas' → logprob: -4.851711750030518
    7. ' changer' → logprob: -5.351711750030518
    8. ' avancer' → logprob: -5.726711750030518
    9. ' prendre' → logprob: -5.851711750030518
    10. ' pas' → logprob: -5.851711750030518

Token 1153: ' changer' (ID: 47099)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.6975989937782288
    2. '   ' → logprob: -1.572598934173584
    3. 'do' → logprob: -1.697598934173584
    4. 'changer' → logprob: -2.572598934173584
    5. ' changer' → logprob: -4.197598934173584
    6. ' faire' → logprob: -4.697598934173584
    7. 'change' → logprob: -5.447598934173584
    8. 'app' → logprob: -5.697598934173584
    9. ' do' → logprob: -7.697598934173584
    10. '  ' → logprob: -7.822598934173584

Token 1154: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6071116924285889
    2. 'res' → logprob: -1.6071116924285889
    3. ' =' → logprob: -2.732111692428589
    4. 'next' → logprob: -2.732111692428589
    5. 'result' → logprob: -3.607111692428589
    6. 'return' → logprob: -4.357111930847168
    7. ',' → logprob: -4.482111930847168
    8. '=' → logprob: -4.607111930847168
    9. '(' → logprob: -4.857111930847168
    10. ':' → logprob: -4.857111930847168

Token 1155: 'g' (ID: 70)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.024977900087833405
    2. 'remaining' → logprob: -4.024977684020996
    3. ' speed' → logprob: -5.399977684020996
    4. ',' → logprob: -6.649977684020996
    5. ')' → logprob: -7.774977684020996
    6. '),' → logprob: -8.899977684020996
    7. ' remaining' → logprob: -9.024977684020996
    8. '   ' → logprob: -9.524977684020996
    9. ' ,' → logprob: -10.024977684020996
    10. '(speed' → logprob: -10.149977684020996

Token 1156: 'arder' (ID: 59603)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.5431143641471863
    2. ')' → logprob: -1.918114423751831
    3. '=' → logprob: -2.793114423751831
    4. 'g' → logprob: -3.043114423751831
    5. '=g' → logprob: -4.168114185333252
    6. 'enerate' → logprob: -4.168114185333252
    7. '_g' → logprob: -4.293114185333252
    8. '
' → logprob: -4.418114185333252
    9. ']' → logprob: -4.793114185333252
    10. 'raph' → logprob: -4.918114185333252

Token 1157: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.08985263854265213
    2. ' speed' → logprob: -2.4648525714874268
    3. '(speed' → logprob: -7.464852809906006
    4. ')' → logprob: -8.839852333068848
    5. '   ' → logprob: -10.214852333068848
    6. ' ' → logprob: -10.214852333068848
    7. '	speed' → logprob: -10.839852333068848
    8. 'le' → logprob: -11.464852333068848
    9. ' la' → logprob: -11.464852333068848
    10. ',' → logprob: -11.464852333068848

Token 1158: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.1620798110961914
    2. ')' → logprob: -2.0370798110961914
    3. ')
' → logprob: -4.287079811096191
    4. ',' → logprob: -5.787079811096191
    5. 'exp' → logprob: -7.412079811096191
    6. ')_' → logprob: -7.412079811096191
    7. '):
' → logprob: -8.162079811096191
    8. '   ' → logprob: -8.537079811096191
    9. ' )' → logprob: -9.287079811096191
    10. '),' → logprob: -9.412079811096191

Token 1159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.058981213718652725
    2. ')
' → logprob: -3.30898118019104
    3. '   ' → logprob: -3.93398118019104
    4. ' )' → logprob: -7.433981418609619
    5. '):
' → logprob: -8.433980941772461
    6. '):' → logprob: -9.308980941772461
    7. ' )
' → logprob: -9.433980941772461
    8. '    ' → logprob: -9.933980941772461
    9. ')
' → logprob: -10.683980941772461
    10. '  ' → logprob: -10.808980941772461

Token 1160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07404772192239761
    2. 'return' → logprob: -3.074047803878784
    3. 'res' → logprob: -4.949047565460205
    4. '
' → logprob: -5.324047565460205
    5. ' return' → logprob: -5.574047565460205
    6. 'next' → logprob: -5.949047565460205
    7. 'result' → logprob: -6.324047565460205
    8. ' next' → logprob: -7.199047565460205
    9. '    
' → logprob: -7.324047565460205
    10. '       ' → logprob: -7.449047565460205

Token 1161: ' temp' (ID: 5484)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.13909019529819489
    2. 'temp' (adapté à ' temp') → logprob: -3.6390902996063232
    3. 'return' → logprob: -3.7640902996063232
    4. ' res' → logprob: -3.8890902996063232
    5. 'time' → logprob: -4.139090061187744
    6. 'cost' → logprob: -4.264090061187744
    7. 'next' → logprob: -4.889090061187744
    8. 'result' → logprob: -5.264090061187744
    9. '   ' → logprob: -5.639090061187744
    10. 'min' → logprob: -5.889090061187744

Token 1162: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22559738159179688
    2. ' =' → logprob: -1.6005973815917969
    3. '   ' → logprob: -8.975597381591797
    4. ')' → logprob: -11.475597381591797
    5. '_' → logprob: -11.475597381591797
    6. '+' → logprob: -11.600597381591797
    7. '_=' → logprob: -12.225597381591797
    8. '=
' → logprob: -12.600597381591797
    9. ')=' → logprob: -12.850597381591797
    10. '_tokens' → logprob: -12.975597381591797

Token 1163: ' dfs' (ID: 51252)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026743996888399124
    2. 'dfs' → logprob: -3.6517438888549805
    3. '   ' → logprob: -8.15174388885498
    4. ' ' → logprob: -9.02674388885498
    5. ' dfs' → logprob: -10.77674388885498
    6. '  ' → logprob: -11.90174388885498
    7. '    ' → logprob: -13.40174388885498
    8. '
' → logprob: -13.90174388885498
    9. 'df' → logprob: -14.02674388885498
    10. 'DFS' → logprob: -14.02674388885498

Token 1164: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.1928003813372925e-05
    2. 'remaining' → logprob: -9.875051498413086
    3. '(
' → logprob: -14.625051498413086
    4. ' remaining' → logprob: -16.875051498413086
    5. ' (' → logprob: -18.000051498413086
    6. '.remaining' → logprob: -18.375051498413086
    7. '((' → logprob: -18.750051498413086
    8. '(max' → logprob: -19.250051498413086
    9. '   ' → logprob: -19.375051498413086
    10. '```' → logprob: -19.875051498413086

Token 1165: 'remaining' (ID: 83570)
  Prédit: 'remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.000871678814291954
    2. 'max' → logprob: -7.500871658325195
    3. ' remaining' → logprob: -8.500871658325195
    4. '   ' → logprob: -9.125871658325195
    5. ' ' → logprob: -13.250871658325195
    6. ' max' → logprob: -13.375871658325195
    7. '(' → logprob: -14.250871658325195
    8. '    ' → logprob: -14.375871658325195
    9. '  ' → logprob: -14.375871658325195
    10. '
' → logprob: -14.875871658325195

Token 1166: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.004953139461576939
    2. 'distance' → logprob: -5.379952907562256
    3. '-distance' → logprob: -8.504953384399414
    4. '-' → logprob: -9.754953384399414
    5. ')' → logprob: -11.129953384399414
    6. '_dist' → logprob: -11.379953384399414
    7. '_DISTANCE' → logprob: -12.129953384399414
    8. 'Distance' → logprob: -12.254953384399414
    9. '-_' → logprob: -12.254953384399414
    10. ' -' → logprob: -12.629953384399414

Token 1167: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08462009578943253
    2. '-' → logprob: -2.5846199989318848
    3. '-speed' → logprob: -5.209619998931885
    4. ',' → logprob: -8.459620475769043
    5. ' ,' → logprob: -10.834620475769043
    6. '-s' → logprob: -12.209620475769043
    7. ' -
' → logprob: -12.334620475769043
    8. '-
' → logprob: -12.834620475769043
    9. '-Speed' → logprob: -13.584620475769043
    10. ')' → logprob: -14.334620475769043

Token 1168: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.0003357006062287837
    2. ' speed' → logprob: -8.000335693359375
    3. '1' → logprob: -16.375335693359375
    4. '(speed' → logprob: -16.625335693359375
    5. '	speed' → logprob: -17.125335693359375
    6. 'score' → logprob: -17.250335693359375
    7. '
' → logprob: -17.750335693359375
    8. ' ' → logprob: -18.250335693359375
    9. 'pow' → logprob: -18.500335693359375
    10. 'power' → logprob: -19.125335693359375

Token 1169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011403311509639025
    2. ' ,' → logprob: -9.375114440917969
    3. '   ' → logprob: -10.625114440917969
    4. ',s' → logprob: -12.750114440917969
    5. ',
' → logprob: -14.250114440917969
    6. ')' → logprob: -14.750114440917969
    7. '    ' → logprob: -15.375114440917969
    8. '  ' → logprob: -16.37511444091797
    9. '[' → logprob: -16.50011444091797
    10. '	' → logprob: -16.62511444091797

Token 1170: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.0019288709154352546
    2. ' speed' → logprob: -6.251928806304932
    3. '    ' → logprob: -15.75192928314209
    4. '   ' → logprob: -16.376928329467773
    5. '	speed' → logprob: -17.126928329467773
    6. '(speed' → logprob: -18.001928329467773
    7. ' ' → logprob: -19.501928329467773
    8. 'score' → logprob: -19.626928329467773
    9. 'space' → logprob: -19.876928329467773
    10. '
' → logprob: -20.001928329467773

Token 1171: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.0004890497075393796
    2. 'exp' → logprob: -7.625489234924316
    3. '	exp' → logprob: -14.500489234924316
    4. 'Exp' → logprob: -15.125489234924316
    5. ''exp' → logprob: -15.500489234924316
    6. '_EXP' → logprob: -16.87548828125
    7. '-exp' → logprob: -17.62548828125
    8. '_ex' → logprob: -17.75048828125
    9. ')' → logprob: -18.25048828125
    10. '.exp' → logprob: -18.50048828125

Token 1172: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001833561109378934
    2. ')
' → logprob: -6.626833438873291
    3. ')+' → logprob: -8.12683391571045
    4. ' )' → logprob: -8.75183391571045
    5. '   ' → logprob: -10.00183391571045
    6. '+' → logprob: -12.25183391571045
    7. ' )
' → logprob: -13.37683391571045
    8. ')
' → logprob: -15.50183391571045
    9. ' +' → logprob: -15.75183391571045
    10. '),' → logprob: -15.87683391571045

Token 1173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09707032144069672
    2. '
' → logprob: -2.7220702171325684
    3. 'res' → logprob: -4.472070217132568
    4. ' +' → logprob: -4.847070217132568
    5. '+' → logprob: -5.347070217132568
    6. '```' → logprob: -7.222070217132568
    7. ' res' → logprob: -7.347070217132568
    8. ')' → logprob: -7.972070217132568
    9. 'return' → logprob: -8.347070693969727
    10. '  ' → logprob: -8.472070693969727

Token 1174: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.008638797327876091
    2. 'if' (adapté à ' if') → logprob: -5.008638858795166
    3. '   ' → logprob: -6.383638858795166
    4. ' res' → logprob: -9.008638381958008
    5. '
' → logprob: -9.758638381958008
    6. '```' → logprob: -11.133638381958008
    7. 'return' → logprob: -11.383638381958008
    8. ' if' → logprob: -11.383638381958008
    9. 'temp' → logprob: -11.633638381958008
    10. 'result' → logprob: -12.883638381958008

Token 1175: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.003182467306032777
    2. ' temp' → logprob: -5.753182411193848
    3. '   ' → logprob: -12.628182411193848
    4. 'res' → logprob: -14.878182411193848
    5. '
' → logprob: -15.378182411193848
    6. '	temp' → logprob: -15.378182411193848
    7. 'tmp' → logprob: -16.128183364868164
    8. '(temp' → logprob: -16.128183364868164
    9. 'temps' → logprob: -16.253183364868164
    10. 'tem' → logprob: -16.628183364868164

Token 1176: ' !=' (ID: 1666)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39675503969192505
    2. '<' → logprob: -1.8967549800872803
    3. '!=' → logprob: -1.8967549800872803
    4. ' !=' → logprob: -4.146755218505859
    5. ' +' → logprob: -5.021755218505859
    6. ' <' → logprob: -5.646755218505859
    7. '<=' → logprob: -7.521755218505859
    8. '   ' → logprob: -8.02175521850586
    9. '==' → logprob: -8.64675521850586
    10. '```' → logprob: -9.52175521850586

Token 1177: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.221884101862088e-05
    2. 'None' → logprob: -10.000092506408691
    3. '-' → logprob: -11.000092506408691
    4. 'float' → logprob: -12.125092506408691
    5. '(' → logprob: -12.125092506408691
    6. ' ' → logprob: -12.625092506408691
    7. '```' → logprob: -12.750092506408691
    8. '
' → logprob: -13.125092506408691
    9. 'pow' → logprob: -13.250092506408691
    10. 'min' → logprob: -13.500092506408691

Token 1178: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.60414821645827e-06
    2. '100' → logprob: -12.875004768371582
    3. '1' → logprob: -15.000004768371582
    4. ' ' → logprob: -15.000004768371582
    5. '(' → logprob: -15.125004768371582
    6. '
' → logprob: -15.500004768371582
    7. '```' → logprob: -15.500004768371582
    8. 'float' → logprob: -15.875004768371582
    9. '۱۰' → logprob: -16.375003814697266
    10. '101' → logprob: -16.500003814697266

Token 1179: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.06353944540023804
    2. '18' → logprob: -2.813539505004883
    3. '```' → logprob: -6.563539505004883
    4. '^' → logprob: -9.063539505004883
    5. '
' → logprob: -11.563539505004883
    6. '\xe2\x81' → logprob: -11.688539505004883
    7. '*' → logprob: -12.563539505004883
    8. '6' → logprob: -13.063539505004883
    9. '¹' → logprob: -13.188539505004883
    10. '​' → logprob: -13.313539505004883

Token 1180: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -1.580929347255733e-05
    2. 'res' → logprob: -11.625016212463379
    3. '```' → logprob: -12.500016212463379
    4. '6' → logprob: -13.375016212463379
    5. '180' → logprob: -15.125016212463379
    6. '9' → logprob: -15.500016212463379
    7. '018' → logprob: -15.750016212463379
    8. '
' → logprob: -15.875016212463379
    9. '8' → logprob: -16.125015258789062
    10. '``' → logprob: -16.250015258789062

Token 1181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0845288410782814
    2. ':
' → logprob: -2.709528923034668
    3. ' and' → logprob: -4.834528923034668
    4. '+' → logprob: -6.209528923034668
    5. '   ' → logprob: -6.459528923034668
    6. 'and' → logprob: -6.959528923034668
    7. ':return' → logprob: -7.709528923034668
    8. '):' → logprob: -7.834528923034668
    9. ' :' → logprob: -7.959528923034668
    10. '       ' → logprob: -8.084528923034668

Token 1182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014828027226030827
    2. ' res' → logprob: -4.639828205108643
    3. '   ' → logprob: -6.014828205108643
    4. 'res' → logprob: -6.139828205108643
    5. '
' → logprob: -9.139827728271484
    6. '```' → logprob: -9.139827728271484
    7. ' ' → logprob: -10.389827728271484
    8. '           ' → logprob: -10.389827728271484
    9. '	res' → logprob: -10.764827728271484
    10. '        
' → logprob: -10.889827728271484

Token 1183: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0025964651722460985
    2. ' res' → logprob: -6.002596378326416
    3. 'temp' → logprob: -9.752596855163574
    4. '   ' → logprob: -10.252596855163574
    5. '
' → logprob: -11.127596855163574
    6. '       ' → logprob: -11.502596855163574
    7. 'return' → logprob: -14.252596855163574
    8. '```' → logprob: -14.627596855163574
    9. '	res' → logprob: -15.002596855163574
    10. '           ' → logprob: -15.627596855163574

Token 1184: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20164254307746887
    2. ' =' → logprob: -1.7016425132751465
    3. '=min' → logprob: -8.951642990112305
    4. '   ' → logprob: -9.326642990112305
    5. '    ' → logprob: -12.701642990112305
    6. 'min' → logprob: -12.826642990112305
    7. '	' → logprob: -12.826642990112305
    8. '       ' → logprob: -14.826642990112305
    9. '=max' → logprob: -15.326642990112305
    10. '＝' → logprob: -15.826642990112305

Token 1185: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3132699728012085
    2. ' min' → logprob: -1.3132699728012085
    3. '1' → logprob: -12.06326961517334
    4. '	min' → logprob: -13.68826961517334
    5. '   ' → logprob: -14.06326961517334
    6. ' ' → logprob: -15.18826961517334
    7. '(min' → logprob: -16.813270568847656
    8. 'temp' → logprob: -16.938270568847656
    9. ' ' → logprob: -17.063270568847656
    10. '       ' → logprob: -18.063270568847656

Token 1186: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.04491697624325752
    2. 'res' → logprob: -3.294916868209839
    3. '(' → logprob: -5.044917106628418
    4. ' res' → logprob: -8.044917106628418
    5. '(
' → logprob: -9.419917106628418
    6. ' (' → logprob: -12.794917106628418
    7. '1' → logprob: -13.169917106628418
    8. '	res' → logprob: -14.169917106628418
    9. '_res' → logprob: -14.169917106628418
    10. ',res' → logprob: -14.294917106628418

Token 1187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02038153074681759
    2. ' ,' → logprob: -4.770381450653076
    3. '(res' → logprob: -5.395381450653076
    4. '(' → logprob: -5.520381450653076
    5. '+' → logprob: -6.520381450653076
    6. ',res' → logprob: -7.270381450653076
    7. '(temp' → logprob: -8.270381927490234
    8. ',
' → logprob: -8.770381927490234
    9. ',temp' → logprob: -8.770381927490234
    10. ' +' → logprob: -9.020381927490234

Token 1188: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002636006975080818
    2. ' ' → logprob: -8.875263214111328
    3. '   ' → logprob: -9.250263214111328
    4. 'temp' → logprob: -10.625263214111328
    5. '    ' → logprob: -14.000263214111328
    6. '  ' → logprob: -14.625263214111328
    7. '       ' → logprob: -14.750263214111328
    8. '     ' → logprob: -15.125263214111328
    9. '           ' → logprob: -15.375263214111328
    10. '      ' → logprob: -16.125263214111328

Token 1189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015050210640765727
    2. 'temp' → logprob: -8.875150680541992
    3. ' ' → logprob: -11.750150680541992
    4. '   ' → logprob: -13.125150680541992
    5. '(' → logprob: -16.125150680541992
    6. '
' → logprob: -16.375150680541992
    7. '0' → logprob: -16.625150680541992
    8. 'temps' → logprob: -16.750150680541992
    9. '    ' → logprob: -16.937650680541992
    10. 'tmp' → logprob: -16.937650680541992

Token 1190: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740775227546692
    2. ' +' → logprob: -0.9740775227546692
    3. '   ' → logprob: -15.599077224731445
    4. '    ' → logprob: -16.099077224731445
    5. ' ' → logprob: -16.849077224731445
    6. '+
' → logprob: -16.849077224731445
    7. '＋' → logprob: -16.849077224731445
    8. ')+' → logprob: -17.224077224731445
    9. ' +
' → logprob: -18.349077224731445
    10. ' ' → logprob: -18.599077224731445

Token 1191: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -4.5491004129871726e-05
    2. ' temp' → logprob: -10.000045776367188
    3. 'tmp' → logprob: -18.375045776367188
    4. 'tem' → logprob: -20.500045776367188
    5. '(temp' → logprob: -20.625045776367188
    6. '   ' → logprob: -21.375045776367188
    7. '	temp' → logprob: -21.625045776367188
    8. '_temp' → logprob: -22.375045776367188
    9. 'temps' → logprob: -22.875045776367188
    10. '$temp' → logprob: -23.000045776367188

Token 1192: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7472087144851685
    2. '   ' → logprob: -0.7472087144851685
    3. ')
' → logprob: -2.997208595275879
    4. ')

' → logprob: -5.997208595275879
    5. '```' → logprob: -9.372208595275879
    6. '
' → logprob: -9.747208595275879
    7. '    
' → logprob: -10.497208595275879
    8. ' )' → logprob: -10.747208595275879
    9. ')
' → logprob: -12.122208595275879
    10. ' )
' → logprob: -12.247208595275879

Token 1193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058591973036527634
    2. '
' → logprob: -3.3085920810699463
    3. '#' → logprob: -4.058591842651367
    4. '```' → logprob: -6.183591842651367
    5. '    
' → logprob: -6.933591842651367
    6. 'for' → logprob: -11.308591842651367
    7. '  
' → logprob: -12.183591842651367
    8. '
' → logprob: -12.933591842651367
    9. 'Option' → logprob: -13.308591842651367
    10. '

' → logprob: -13.433591842651367

Token 1194: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.016376499086618423
    2. '   ' → logprob: -4.266376495361328
    3. '
' → logprob: -6.391376495361328
    4. 'for' → logprob: -8.266376495361328
    5. '```' → logprob: -8.891376495361328
    6. '    
' → logprob: -9.641376495361328
    7. 'temp' → logprob: -10.266376495361328
    8. 'if' → logprob: -10.891376495361328
    9. ' #' → logprob: -12.016376495361328
    10. '  
' → logprob: -12.391376495361328

Token 1195: ' Option' (ID: 17796)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0939665138721466
    2. 'if' → logprob: -2.468966484069824
    3. 'temp' → logprob: -5.343966484069824
    4. '   ' → logprob: -8.593966484069824
    5. 'Option' → logprob: -10.968966484069824
    6. '
' → logprob: -11.343966484069824
    7. 'for' → logprob: -11.718966484069824
    8. '    
' → logprob: -12.968966484069824
    9. 'speed' → logprob: -13.218966484069824
    10. '#if' → logprob: -13.468966484069824

Token 1196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5804081559181213
    2. ' ' → logprob: -0.9554081559181213
    3. ' =' → logprob: -3.5804080963134766
    4. '   ' → logprob: -3.8304080963134766
    5. '=' → logprob: -5.705408096313477
    6. '2' → logprob: -7.080408096313477
    7. '    ' → logprob: -7.955408096313477
    8. '(' → logprob: -8.080408096313477
    9. '_exp' → logprob: -8.080408096313477
    10. '  ' → logprob: -8.205408096313477

Token 1197: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.056949347257614136
    2. '1' → logprob: -2.9319493770599365
    3. ' ' → logprob: -6.431949138641357
    4. '=' → logprob: -8.181949615478516
    5. '+' → logprob: -9.556949615478516
    6. '0' → logprob: -10.431949615478516
    7. '3' → logprob: -10.431949615478516
    8. '```' → logprob: -11.431949615478516
    9. ':' → logprob: -11.556949615478516
    10. ' +' → logprob: -12.431949615478516

Token 1198: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7052226662635803
    2. ':' → logprob: -1.2052226066589355
    3. '=' → logprob: -1.5802226066589355
    4. ' :' → logprob: -8.330223083496094
    5. '```' → logprob: -9.705223083496094
    6. 'dfs' → logprob: -10.330223083496094
    7. ':
' → logprob: -11.080223083496094
    8. ',' → logprob: -11.580223083496094
    9. ' +=' → logprob: -11.705223083496094
    10. '=d' → logprob: -11.705223083496094

Token 1199: ' app' (ID: 1053)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.11398738622665405
    2. ' dfs' → logprob: -2.238987445831299
    3. 'temp' → logprob: -6.863987445831299
    4. ' temp' → logprob: -9.73898696899414
    5. '   ' → logprob: -10.98898696899414
    6. 'df' → logprob: -11.36398696899414
    7. 'tmp' → logprob: -12.23898696899414
    8. '3' → logprob: -12.67648696899414
    9. '  ' → logprob: -12.80148696899414
    10. '#' → logprob: -12.80148696899414

Token 1200: 'uyer' (ID: 78614)
  Prédit: 'uyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uyer' → logprob: -0.023586099967360497
    2. 'uye' → logprob: -5.148586273193359
    3. 'u' → logprob: -6.023586273193359
    4. 'uy' → logprob: -6.148586273193359
    5. 'ui' → logprob: -6.148586273193359
    6. '
' → logprob: -6.273586273193359
    7. '```' → logprob: -7.273586273193359
    8. '\' → logprob: -7.648586273193359
    9. '=' → logprob: -7.773586273193359
    10. ')' → logprob: -7.898586273193359

Token 1201: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.17844532430171967
    2. ' sur' → logprob: -2.053445339202881
    3. '(s' → logprob: -4.178445339202881
    4. '_sur' → logprob: -4.303445339202881
    5. '(' → logprob: -5.553445339202881
    6. ' (' → logprob: -7.303445339202881
    7. '3' → logprob: -7.803445339202881
    8. '```' → logprob: -8.178444862365723
    9. '   ' → logprob: -8.803444862365723
    10. 'pour' → logprob: -8.928444862365723

Token 1202: ' [' (ID: 723)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.43020808696746826
    2. 'speed' → logprob: -1.6802080869674683
    3. '[' → logprob: -3.180208206176758
    4. '(' → logprob: -3.930208206176758
    5. ' ' → logprob: -4.180208206176758
    6. '+' → logprob: -4.430208206176758
    7. '(s' → logprob: -4.680208206176758
    8. '(speed' → logprob: -4.680208206176758
    9. ' speed' → logprob: -5.305208206176758
    10. '   ' → logprob: -5.430208206176758

Token 1203: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.012045344337821007
    2. 'speed' → logprob: -5.387045383453369
    3. '1' → logprob: -5.637045383453369
    4. ']' → logprob: -6.762045383453369
    5. '   ' → logprob: -7.887045383453369
    6. '+' → logprob: -7.887045383453369
    7. '
' → logprob: -8.137044906616211
    8. 'multip' → logprob: -8.512044906616211
    9. '],' → logprob: -9.137044906616211
    10. '```' → logprob: -9.137044906616211

Token 1204: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07922408729791641
    2. '_exp' → logprob: -3.079224109649658
    3. 'exp' → logprob: -4.329224109649658
    4. '*' → logprob: -4.454224109649658
    5. '_x' → logprob: -5.954224109649658
    6. 'xp' → logprob: -6.704224109649658
    7. '+' → logprob: -7.829224109649658
    8. '*x' → logprob: -7.954224109649658
    9. '
' → logprob: -8.8292236328125
    10. ',' → logprob: -8.9542236328125

Token 1205: ']' (ID: 60)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.26090681552886963
    2. ',' → logprob: -1.5109068155288696
    3. ']
' → logprob: -5.88590669631958
    4. '   ' → logprob: -6.26090669631958
    5. '])
' → logprob: -6.51090669631958
    6. '],
' → logprob: -6.76090669631958
    7. ']' → logprob: -7.88590669631958
    8. '),' → logprob: -8.385907173156738
    9. '])' → logprob: -8.885907173156738
    10. ' ,' → logprob: -9.010907173156738

Token 1206: ' ->' (ID: 2747)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.13894622027873993
    2. '   ' → logprob: -2.263946294784546
    3. '
' → logprob: -4.138946056365967
    4. ' temp' → logprob: -4.763946056365967
    5. ' =' → logprob: -7.888946056365967
    6. ',' → logprob: -8.638946533203125
    7. ':
' → logprob: -8.763946533203125
    8. '=' → logprob: -8.888946533203125
    9. '    
' → logprob: -8.888946533203125
    10. ':' → logprob: -9.388946533203125

Token 1207: ' vitesse' (ID: 71752)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.006720347795635462
    2. ' dfs' → logprob: -5.006720542907715
    3. '   ' → logprob: -13.006720542907715
    4. 'df' → logprob: -14.006720542907715
    5. 'temp' → logprob: -14.131720542907715
    6. ' ' → logprob: -15.381720542907715
    7. '  ' → logprob: -15.381720542907715
    8. '       ' → logprob: -16.1317195892334
    9. 'DFS' → logprob: -16.2567195892334
    10. '    ' → logprob: -16.6317195892334

Token 1208: ' *=' (ID: 25253)
  Prédit: '_exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.03194146230816841
    2. 'exp' → logprob: -3.5319414138793945
    3. '_ex' → logprob: -6.6569414138793945
    4. '   ' → logprob: -8.156941413879395
    5. '=' → logprob: -8.281941413879395
    6. ' =' → logprob: -8.406941413879395
    7. ',' → logprob: -9.531941413879395
    8. 'res' → logprob: -11.906941413879395
    9. 'Exp' → logprob: -12.031941413879395
    10. 'd' → logprob: -12.406941413879395

Token 1209: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.590104698669165e-05
    2. ' ' → logprob: -9.375085830688477
    3. '```' → logprob: -14.625085830688477
    4. '   ' → logprob: -14.875085830688477
    5. 'pow' → logprob: -16.000085830688477
    6. ' ' → logprob: -17.750085830688477
    7. '  ' → logprob: -17.750085830688477
    8. '`' → logprob: -18.375085830688477
    9. '1' → logprob: -18.375085830688477
    10. '³' → logprob: -18.812585830688477

Token 1210: ' =>' (ID: 871)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.4889465570449829
    2. '   ' → logprob: -1.613946557044983
    3. '
' → logprob: -1.738946557044983
    4. ',' → logprob: -4.988946437835693
    5. ' temp' → logprob: -5.988946437835693
    6. '    
' → logprob: -7.363946437835693
    7. 'dfs' → logprob: -8.113946914672852
    8. ',temp' → logprob: -8.113946914672852
    9. '_temp' → logprob: -8.238946914672852
    10. 'if' → logprob: -8.613946914672852

Token 1211: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.14879171550273895
    2. 'dfs' → logprob: -2.023791790008545
    3. ' speed' → logprob: -5.273791790008545
    4. ' dfs' → logprob: -7.273791790008545
    5. '(speed' → logprob: -9.148791313171387
    6. '   ' → logprob: -9.398791313171387
    7. '3' → logprob: -11.273791313171387
    8. ' ' → logprob: -11.523791313171387
    9. '    ' → logprob: -11.773791313171387
    10. '  ' → logprob: -11.898791313171387

Token 1212: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.00026860725483857095
    2. 'exp' → logprob: -8.250268936157227
    3. '	exp' → logprob: -12.125268936157227
    4. '+' → logprob: -14.125268936157227
    5. ''exp' → logprob: -14.875268936157227
    6. 'Exp' → logprob: -15.375268936157227
    7. '   ' → logprob: -15.750268936157227
    8. '_EXP' → logprob: -16.250268936157227
    9. '-exp' → logprob: -16.375268936157227
    10. '=' → logprob: -16.500268936157227

Token 1213: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519320547580719
    2. ' +' → logprob: -1.5019320249557495
    3. '   ' → logprob: -12.876932144165039
    4. '=' → logprob: -16.25193214416504
    5. '+
' → logprob: -16.25193214416504
    6. ' ' → logprob: -16.87693214416504
    7. '()+' → logprob: -17.25193214416504
    8. '       ' → logprob: -17.25193214416504
    9. '           ' → logprob: -17.75193214416504
    10. ' ' → logprob: -18.00193214416504

Token 1214: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.500005722045898
    4. '```' → logprob: -17.7500057220459
    5. '
' → logprob: -18.5000057220459
    6. '+' → logprob: -19.5000057220459
    7. '  ' → logprob: -19.6250057220459
    8. '    ' → logprob: -21.5000057220459
    9. '-' → logprob: -21.8750057220459
    10. '

' → logprob: -22.2500057220459

Token 1215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -18.0
    4. '+' → logprob: -18.75
    5. '   ' → logprob: -19.25
    6. '
' → logprob: -20.125
    7. '  ' → logprob: -21.875
    8. '-' → logprob: -22.0
    9. ' +' → logprob: -22.125
    10. '=' → logprob: -22.125

Token 1216: '
' (ID: 198)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.6258043050765991
    2. '   ' → logprob: -1.1258043050765991
    3. '
' → logprob: -2.0008044242858887
    4. ' temp' → logprob: -5.750804424285889
    5. ',' → logprob: -7.375804424285889
    6. '```' → logprob: -7.750804424285889
    7. '    
' → logprob: -7.875804424285889
    8. 'if' → logprob: -8.37580394744873
    9. ',
' → logprob: -8.75080394744873
    10. ')
' → logprob: -9.00080394744873

Token 1217: '   ' (ID: 271)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.1024806872010231
    2. '   ' → logprob: -2.35248064994812
    3. ' temp' → logprob: -6.352480888366699
    4. '
' → logprob: -7.727480888366699
    5. '    
' → logprob: -10.2274808883667
    6. '```' → logprob: -10.8524808883667
    7. '	temp' → logprob: -11.3524808883667
    8. 'if' → logprob: -11.6024808883667
    9. 'tmp' → logprob: -12.1024808883667
    10. '``' → logprob: -14.1024808883667

Token 1218: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.0015079588629305363
    2. '   ' → logprob: -6.501507759094238
    3. ' temp' → logprob: -12.126507759094238
    4. 'tmp' → logprob: -15.751507759094238
    5. '
' → logprob: -17.001508712768555
    6. '    
' → logprob: -17.376508712768555
    7. '```' → logprob: -17.501508712768555
    8. 'if' → logprob: -17.751508712768555
    9. '	temp' → logprob: -17.751508712768555
    10. 'temps' → logprob: -18.751508712768555

Token 1219: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519298195838928
    2. ' =' → logprob: -1.501929759979248
    3. '=
' → logprob: -15.001930236816406
    4. '=df' → logprob: -15.251930236816406
    5. '=d' → logprob: -16.501930236816406
    6. 'dfs' → logprob: -18.001930236816406
    7. '＝' → logprob: -18.126930236816406
    8. '   ' → logprob: -18.501930236816406
    9. '=tf' → logprob: -18.501930236816406
    10. '
' → logprob: -18.626930236816406

Token 1220: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.006718925200402737
    2. ' dfs' → logprob: -5.00671911239624
    3. 'df' → logprob: -13.131718635559082
    4. '   ' → logprob: -13.631718635559082
    5. ' ' → logprob: -16.2567195892334
    6. 'DFS' → logprob: -16.5067195892334
    7. 'fs' → logprob: -17.2567195892334
    8. '  ' → logprob: -17.6317195892334
    9. 'ds' → logprob: -17.7567195892334
    10. 'dfa' → logprob: -17.8817195892334

Token 1221: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016110755677800626
    2. 'remaining' → logprob: -8.750161170959473
    3. ' remaining' → logprob: -12.875161170959473
    4. '(
' → logprob: -16.750160217285156
    5. '.remaining' → logprob: -18.375160217285156
    6. ' (' → logprob: -18.750160217285156
    7. '   ' → logprob: -19.250160217285156
    8. '_remaining' → logprob: -20.250160217285156
    9. '(max' → logprob: -20.750160217285156
    10. 'Remaining' → logprob: -21.625160217285156

Token 1222: 'remaining' (ID: 83570)
  Prédit: 'remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -1.1472419600977446e-06
    2. ' remaining' → logprob: -14.125000953674316
    3. '   ' → logprob: -15.250000953674316
    4. 'max' → logprob: -16.625001907348633
    5. '.remaining' → logprob: -18.000001907348633
    6. ' ' → logprob: -19.000001907348633
    7. 'maximum' → logprob: -19.000001907348633
    8. '(' → logprob: -20.125001907348633
    9. 'existing' → logprob: -21.125001907348633
    10. '
' → logprob: -21.375001907348633

Token 1223: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.0009538597078062594
    2. 'distance' → logprob: -7.625953674316406
    3. 'remaining' → logprob: -8.000953674316406
    4. '-distance' → logprob: -10.000953674316406
    5. '-' → logprob: -10.125953674316406
    6. ' -' → logprob: -10.500953674316406
    7. '_remaining' → logprob: -11.875953674316406
    8. ' remaining' → logprob: -13.125953674316406
    9. ' distance' → logprob: -13.125953674316406
    10. '_dist' → logprob: -13.375953674316406

Token 1224: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.002187376143410802
    2. '-' → logprob: -6.127187252044678
    3. '-speed' → logprob: -14.002187728881836
    4. ' -
' → logprob: -14.877187728881836
    5. '   ' → logprob: -15.127187728881836
    6. ',' → logprob: -15.877187728881836
    7. '    ' → logprob: -16.127187728881836
    8. ' ' → logprob: -16.377187728881836
    9. '-s' → logprob: -16.752187728881836
    10. '[' → logprob: -16.752187728881836

Token 1225: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -3.619311974034645e-05
    2. ' speed' → logprob: -10.250036239624023
    3. '(speed' → logprob: -14.625036239624023
    4. 'pow' → logprob: -15.000036239624023
    5. 'power' → logprob: -17.250036239624023
    6. '   ' → logprob: -17.875036239624023
    7. '	speed' → logprob: -19.500036239624023
    8. ' ' → logprob: -19.625036239624023
    9. '3' → logprob: -20.250036239624023
    10. 'score' → logprob: -20.625036239624023

Token 1226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4034345187828876e-05
    2. ' ,' → logprob: -11.12502384185791
    3. '   ' → logprob: -12.00002384185791
    4. ',
' → logprob: -13.25002384185791
    5. ',s' → logprob: -13.87502384185791
    6. 'speed' → logprob: -16.250024795532227
    7. '(speed' → logprob: -16.750024795532227
    8. '  ' → logprob: -17.000024795532227
    9. '```' → logprob: -17.250024795532227
    10. ',p' → logprob: -17.625024795532227

Token 1227: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -2.176947600673884e-05
    2. ' speed' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.250021934509277
    4. '(speed' → logprob: -18.87502098083496
    5. '	speed' → logprob: -19.12502098083496
    6. '    ' → logprob: -20.50002098083496
    7. '       ' → logprob: -21.12502098083496
    8. 'score' → logprob: -21.62502098083496
    9. '      ' → logprob: -22.00002098083496
    10. '
' → logprob: -22.00002098083496

Token 1228: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.0003364158037584275
    2. 'exp' → logprob: -8.000336647033691
    3. '	exp' → logprob: -15.125336647033691
    4. 'Exp' → logprob: -15.250336647033691
    5. '+' → logprob: -15.500336647033691
    6. ''exp' → logprob: -15.875336647033691
    7. '-exp' → logprob: -16.625335693359375
    8. '_EXP' → logprob: -16.875335693359375
    9. '.exp' → logprob: -18.875335693359375
    10. '```' → logprob: -19.000335693359375

Token 1229: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16022443771362305
    2. ' +' → logprob: -1.910224437713623
    3. '   ' → logprob: -15.410224914550781
    4. '＋' → logprob: -17.03522491455078
    5. '+
' → logprob: -18.28522491455078
    6. '()+' → logprob: -18.28522491455078
    7. '+)' → logprob: -18.53522491455078
    8. ')+' → logprob: -18.78522491455078
    9. ')' → logprob: -19.41022491455078
    10. ' +
' → logprob: -19.78522491455078

Token 1230: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -18.875
    4. '   ' → logprob: -19.0
    5. '  ' → logprob: -21.875
    6. '
' → logprob: -22.25
    7. '<|end|>' → logprob: -22.5
    8. '[' → logprob: -22.625
    9. '۱' → logprob: -23.0
    10. '`' → logprob: -23.25

Token 1231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '```' → logprob: -18.5
    4. '<|end|>' → logprob: -20.25
    5. '   ' → logprob: -20.75
    6. '۱' → logprob: -21.625
    7. ')' → logprob: -21.75
    8. '[' → logprob: -22.125
    9. '<|end|>' → logprob: -22.125
    10. 'from' → logprob: -22.25

Token 1232: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024096666311379522
    2. ')
' → logprob: -8.37524127960205
    3. '   ' → logprob: -11.50024127960205
    4. ' )' → logprob: -15.50024127960205
    5. ')#' → logprob: -18.250240325927734
    6. ')

' → logprob: -18.625240325927734
    7. '```' → logprob: -18.875240325927734
    8. '`)' → logprob: -19.125240325927734
    9. ')`' → logprob: -19.125240325927734
    10. '),' → logprob: -19.375240325927734

Token 1233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04371809959411621
    2. ')' → logprob: -3.293718099594116
    3. 'if' → logprob: -6.168718338012695
    4. ' if' → logprob: -6.168718338012695
    5. '```' → logprob: -7.293718338012695
    6. '<|end|>' → logprob: -8.168718338012695
    7. ')
' → logprob: -8.543718338012695
    8. '	if' → logprob: -9.918718338012695
    9. '),' → logprob: -10.418718338012695
    10. '):
' → logprob: -10.418718338012695

Token 1234: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10992791503667831
    2. ' if' → logprob: -2.9849278926849365
    3. '   ' → logprob: -3.1099278926849365
    4. ')' → logprob: -4.984928131103516
    5. '```' → logprob: -6.359928131103516
    6. '	if' → logprob: -9.234928131103516
    7. ';if' → logprob: -9.734928131103516
    8. '``' → logprob: -10.484928131103516
    9. ')
' → logprob: -10.609928131103516
    10. '    
' → logprob: -10.609928131103516

Token 1235: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.06197004392743111
    2. ' temp' → logprob: -2.8119699954986572
    3. '(temp' → logprob: -13.686969757080078
    4. '	temp' → logprob: -14.936969757080078
    5. 'temps' → logprob: -15.311969757080078
    6. '   ' → logprob: -15.561969757080078
    7. 'tem' → logprob: -15.686969757080078
    8. '$temp' → logprob: -16.311969757080078
    9. '10' → logprob: -16.686969757080078
    10. ' ' → logprob: -16.686969757080078

Token 1236: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.040201008319854736
    2. '!=' → logprob: -3.29020094871521
    3. '   ' → logprob: -6.290201187133789
    4. ' is' → logprob: -9.415201187133789
    5. '<|end|>' → logprob: -9.415201187133789
    6. '```' → logprob: -10.415201187133789
    7. ')!=' → logprob: -10.665201187133789
    8. '()!=' → logprob: -10.790201187133789
    9. ' ' → logprob: -11.415201187133789
    10. '!=-' → logprob: -11.665201187133789

Token 1237: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0004882152716163546
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -16.62548828125
    4. '100' → logprob: -17.25048828125
    5. '```' → logprob: -17.25048828125
    6. '  ' → logprob: -18.62548828125
    7. '۱۰' → logprob: -18.87548828125
    8. '(' → logprob: -19.12548828125
    9. '１０' → logprob: -19.50048828125
    10. '[' → logprob: -19.62548828125

Token 1238: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '100' → logprob: -16.75
    4. '```' → logprob: -18.75
    5. '۱۰' → logprob: -19.25
    6. '   ' → logprob: -19.25
    7. '(' → logprob: -19.875
    8. '１０' → logprob: -20.125
    9. '१०' → logprob: -20.5
    10. '  ' → logprob: -20.5

Token 1239: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.004484119825065136
    2. '18' → logprob: -5.504484176635742
    3. '```' → logprob: -7.879484176635742
    4. '*' → logprob: -11.129484176635742
    5. '***' → logprob: -12.504484176635742
    6. '``' → logprob: -13.129484176635742
    7. '10' → logprob: -13.254484176635742
    8. '`' → logprob: -13.379484176635742
    9. '^' → logprob: -14.129484176635742
    10. '6' → logprob: -14.129484176635742

Token 1240: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -16.375
    3. '180' → logprob: -16.625
    4. '184' → logprob: -16.625
    5. '۱۸' → logprob: -17.375
    6. ' ' → logprob: -17.625
    7. '10' → logprob: -17.625
    8. '1' → logprob: -18.0
    9. '' → logprob: -18.625
    10. '183' → logprob: -18.75

Token 1241: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0039016001392155886
    2. ':
' → logprob: -5.628901481628418
    3. '<|end|>' → logprob: -8.878901481628418
    4. '   ' → logprob: -9.378901481628418
    5. '):' → logprob: -10.003901481628418
    6. '):
' → logprob: -11.753901481628418
    7. '       ' → logprob: -12.003901481628418
    8. '<|end|>' → logprob: -12.253901481628418
    9. '=' → logprob: -12.628901481628418
    10. ')' → logprob: -12.628901481628418

Token 1242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002610974188428372
    2. ':' → logprob: -8.625261306762695
    3. '   ' → logprob: -10.875261306762695
    4. '	' → logprob: -10.875261306762695
    5. 'res' → logprob: -11.250261306762695
    6. '```' → logprob: -11.625261306762695
    7. ':
' → logprob: -11.750261306762695
    8. '           ' → logprob: -13.000261306762695
    9. '[' → logprob: -13.125261306762695
    10. '<|end|>' → logprob: -13.250261306762695

Token 1243: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -4.954393079970032e-05
    2. ' res' → logprob: -10.000049591064453
    3. '   ' → logprob: -12.500049591064453
    4. '       ' → logprob: -15.000049591064453
    5. '	res' → logprob: -17.625049591064453
    6. '
' → logprob: -19.250049591064453
    7. ' ' → logprob: -19.875049591064453
    8. '           ' → logprob: -20.250049591064453
    9. '  ' → logprob: -20.875049591064453
    10. '    ' → logprob: -21.125049591064453

Token 1244: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012517428025603294
    2. ' =' → logprob: -4.38751745223999
    3. '   ' → logprob: -12.387516975402832
    4. '=min' → logprob: -12.887516975402832
    5. '       ' → logprob: -14.637516975402832
    6. '    ' → logprob: -15.262516975402832
    7. '	' → logprob: -16.51251792907715
    8. ',' → logprob: -17.26251792907715
    9. '<|end|>' → logprob: -17.38751792907715
    10. 'min' → logprob: -17.38751792907715

Token 1245: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3868711292743683
    2. ' min' → logprob: -1.136871099472046
    3. '(min' → logprob: -16.261871337890625
    4. '	min' → logprob: -17.261871337890625
    5. '[min' → logprob: -17.886871337890625
    6. '```' → logprob: -18.011871337890625
    7. '=min' → logprob: -18.761871337890625
    8. '.min' → logprob: -19.136871337890625
    9. '_min' → logprob: -20.011871337890625
    10. ' ' → logprob: -20.011871337890625

Token 1246: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -4.727905979962088e-05
    2. 'res' → logprob: -10.12504768371582
    3. '(' → logprob: -12.00004768371582
    4. ',res' → logprob: -14.50004768371582
    5. ' res' → logprob: -15.62504768371582
    6. '```' → logprob: -16.00004768371582
    7. '(
' → logprob: -16.37504768371582
    8. '=res' → logprob: -16.87504768371582
    9. '$res' → logprob: -17.50004768371582
    10. '	res' → logprob: -17.50004768371582

Token 1247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013230959884822369
    2. ',res' → logprob: -7.126323223114014
    3. '(res' → logprob: -7.626323223114014
    4. 'res' → logprob: -11.001322746276855
    5. ' ,' → logprob: -11.751322746276855
    6. '(' → logprob: -12.501322746276855
    7. '       ' → logprob: -14.126322746276855
    8. '   ' → logprob: -14.251322746276855
    9. ' res' → logprob: -14.876322746276855
    10. '```' → logprob: -14.876322746276855

Token 1248: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06196846812963486
    2. ' ' → logprob: -2.8119685649871826
    3. '   ' → logprob: -14.686968803405762
    4. ' min' → logprob: -16.061967849731445
    5. 'min' → logprob: -16.686967849731445
    6. 'res' → logprob: -16.936967849731445
    7. ' ' → logprob: -17.061967849731445
    8. '```' → logprob: -17.061967849731445
    9. '(' → logprob: -17.311967849731445
    10. '  ' → logprob: -17.561967849731445

Token 1249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. '   ' → logprob: -15.750001907348633
    4. '(' → logprob: -15.875001907348633
    5. 'res' → logprob: -16.750001907348633
    6. '
' → logprob: -17.625001907348633
    7. 'min' → logprob: -18.000001907348633
    8. '```' → logprob: -18.250001907348633
    9. '+' → logprob: -18.500001907348633
    10. '`' → logprob: -18.875001907348633

Token 1250: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12699110805988312
    2. ' +' → logprob: -2.126991033554077
    3. '<|end|>' → logprob: -10.251991271972656
    4. '+
' → logprob: -11.501991271972656
    5. ',' → logprob: -11.876991271972656
    6. ')+' → logprob: -13.001991271972656
    7. ' +
' → logprob: -13.251991271972656
    8. ')' → logprob: -13.626991271972656
    9. '<|end|>' → logprob: -13.751991271972656
    10. '[' → logprob: -14.126991271972656

Token 1251: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -7.493430894101039e-05
    2. ' temp' → logprob: -9.500075340270996
    3. 'tmp' → logprob: -18.12507438659668
    4. '(temp' → logprob: -19.87507438659668
    5. 'tem' → logprob: -20.50007438659668
    6. '	temp' → logprob: -21.50007438659668
    7. '_temp' → logprob: -22.00007438659668
    8. '[temp' → logprob: -22.50007438659668
    9. 'temps' → logprob: -22.87507438659668
    10. '   ' → logprob: -23.25007438659668

Token 1252: ')

' (ID: 1029)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26668158173561096
    2. '   ' → logprob: -1.5166815519332886
    3. '```' → logprob: -5.266681671142578
    4. ')' → logprob: -5.391681671142578
    5. '    
' → logprob: -5.516681671142578
    6. ')
' → logprob: -7.391681671142578
    7. '#' → logprob: -8.891681671142578
    8. '  
' → logprob: -9.766681671142578
    9. '
' → logprob: -10.766681671142578
    10. '   
' → logprob: -10.891681671142578

Token 1253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6992067694664001
    2. '#' → logprob: -1.449206829071045
    3. 'temp' → logprob: -1.449206829071045
    4. '```' → logprob: -3.449206829071045
    5. '
' → logprob: -6.449206829071045
    6. '``' → logprob: -9.949206352233887
    7. ' temp' → logprob: -9.949206352233887
    8. '    
' → logprob: -10.199206352233887
    9. ' #' → logprob: -12.199206352233887
    10. '	temp' → logprob: -12.574206352233887

Token 1254: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.39477699995040894
    2. 'temp' → logprob: -1.1447770595550537
    3. '   ' → logprob: -4.894776821136475
    4. '```' → logprob: -7.894776821136475
    5. '
' → logprob: -11.769777297973633
    6. ' temp' → logprob: -12.144777297973633
    7. '``' → logprob: -13.394777297973633
    8. 'tmp' → logprob: -14.394777297973633
    9. ' #' → logprob: -14.394777297973633
    10. '    
' → logprob: -15.519777297973633

Token 1255: ' Option' (ID: 17796)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19308720529079437
    2. 'if' → logprob: -1.9430872201919556
    3. 'Option' → logprob: -4.068087100982666
    4. 'temp' → logprob: -4.193087100982666
    5. '   ' → logprob: -10.068087577819824
    6. 'option' → logprob: -10.068087577819824
    7. '```' → logprob: -11.193087577819824
    8. 'tmp' → logprob: -12.318087577819824
    9. ' #' → logprob: -12.818087577819824
    10. 'If' → logprob: -12.818087577819824

Token 1256: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4163569509983063
    2. '2' → logprob: -2.1663570404052734
    3. '=' → logprob: -2.4163570404052734
    4. '3' → logprob: -2.6663570404052734
    5. '   ' → logprob: -3.4163570404052734
    6. ' ' → logprob: -3.7913570404052734
    7. '#' → logprob: -5.416357040405273
    8. '_' → logprob: -6.041357040405273
    9. ':' → logprob: -6.041357040405273
    10. '  ' → logprob: -7.541357040405273

Token 1257: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011661761673167348
    2. 'dfs' → logprob: -6.876166343688965
    3. '=' → logprob: -10.126166343688965
    4. ' ' → logprob: -10.376166343688965
    5. '#' → logprob: -10.376166343688965
    6. '3' → logprob: -11.376166343688965
    7. ':' → logprob: -12.751166343688965
    8. '_' → logprob: -12.876166343688965
    9. ' =' → logprob: -13.126166343688965
    10. '   ' → logprob: -13.251166343688965

Token 1258: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5139869451522827
    2. ' =' → logprob: -1.2639869451522827
    3. ':' → logprob: -2.1389870643615723
    4. 'temp' → logprob: -6.763987064361572
    5. '   ' → logprob: -8.013986587524414
    6. '_temp' → logprob: -10.513986587524414
    7. ' :' → logprob: -10.513986587524414
    8. '#' → logprob: -11.263986587524414
    9. ' temp' → logprob: -11.263986587524414
    10. '=temp' → logprob: -11.763986587524414

Token 1259: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.49215903878211975
    2. '#' → logprob: -1.2421590089797974
    3. 'temp' → logprob: -2.617159128189087
    4. 'if' → logprob: -4.492158889770508
    5. ' #' → logprob: -5.117158889770508
    6. 'dfs' → logprob: -5.367158889770508
    7. ' app' → logprob: -5.867158889770508
    8. ' temp' → logprob: -7.117158889770508
    9. '   ' → logprob: -7.117158889770508
    10. ' if' → logprob: -8.492158889770508

Token 1260: 'uyer' (ID: 78614)
  Prédit: 'uyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uyer' → logprob: -0.009547119028866291
    2. 'eler' → logprob: -5.509547233581543
    3. 'p' → logprob: -5.634547233581543
    4. 'ply' → logprob: -8.134547233581543
    5. 'er' → logprob: -8.134547233581543
    6. '=' → logprob: -8.509547233581543
    7. 'py' → logprob: -8.884547233581543
    8. ' =' → logprob: -9.259547233581543
    9. 'ly' → logprob: -9.384547233581543
    10. 'u' → logprob: -9.384547233581543

Token 1261: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.034871600568294525
    2. ' sur' → logprob: -3.4098715782165527
    3. 'on' → logprob: -7.159871578216553
    4. '_sur' → logprob: -8.034872055053711
    5. ' on' → logprob: -9.659872055053711
    6. '   ' → logprob: -11.409872055053711
    7. '(' → logprob: -11.659872055053711
    8. ' ' → logprob: -11.909872055053711
    9. '#' → logprob: -12.159872055053711
    10. '```' → logprob: -12.159872055053711

Token 1262: ' [' (ID: 723)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.7494841814041138
    2. 'speed' → logprob: -0.7494841814041138
    3. '(speed' → logprob: -3.499484062194824
    4. ' speed' → logprob: -4.124484062194824
    5. '[' → logprob: -4.874484062194824
    6. ' [' → logprob: -7.999484062194824
    7. '(s' → logprob: -8.624484062194824
    8. '   ' → logprob: -9.499484062194824
    9. '	speed' → logprob: -9.624484062194824
    10. ' ' → logprob: -10.499484062194824

Token 1263: '1' (ID: 16)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.04691512882709503
    2. '[' → logprob: -3.796915054321289
    3. ' speed' → logprob: -4.046915054321289
    4. '1' → logprob: -5.921915054321289
    5. '(speed' → logprob: -6.171915054321289
    6. '[s' → logprob: -7.671915054321289
    7. '[max' → logprob: -8.796915054321289
    8. ' ' → logprob: -9.421915054321289
    9. ' [' → logprob: -9.546915054321289
    10. '	speed' → logprob: -9.546915054321289

Token 1264: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0013396469876170158
    2. '-' → logprob: -6.751339435577393
    3. '3' → logprob: -10.12633991241455
    4. ' -' → logprob: -10.25133991241455
    5. '-exp' → logprob: -10.62633991241455
    6. ' /' → logprob: -11.50133991241455
    7. '#' → logprob: -11.75133991241455
    8. '_div' → logprob: -11.87633991241455
    9. '_' → logprob: -12.12633991241455
    10. '-third' → logprob: -12.12633991241455

Token 1265: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -15.250000953674316
    4. '³' → logprob: -16.375001907348633
    5. '۳' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '1' → logprob: -17.625001907348633
    8. '-' → logprob: -17.750001907348633
    9. 'div' → logprob: -17.875001907348633
    10. '​' → logprob: -18.375001907348633

Token 1266: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0028902292251586914
    2. '_exp' → logprob: -6.502890110015869
    3. 'exp' → logprob: -7.002890110015869
    4. ',' → logprob: -7.752890110015869
    5. ')' → logprob: -10.377890586853027
    6. '_x' → logprob: -12.377890586853027
    7. '
' → logprob: -12.877890586853027
    8. '3' → logprob: -13.252890586853027
    9. ' ,' → logprob: -13.252890586853027
    10. 'xp' → logprob: -13.252890586853027

Token 1267: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007784157060086727
    2. ')' → logprob: -7.5007781982421875
    3. '   ' → logprob: -9.750778198242188
    4. ' ,' → logprob: -10.000778198242188
    5. 'temp' → logprob: -10.250778198242188
    6. '),' → logprob: -10.375778198242188
    7. ',temp' → logprob: -11.125778198242188
    8. 'if' → logprob: -11.500778198242188
    9. '],' → logprob: -11.625778198242188
    10. ']' → logprob: -11.875778198242188

Token 1268: ' ->' (ID: 2747)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.024001792073249817
    2. 'temp' → logprob: -3.8990018367767334
    3. ' if' → logprob: -6.399001598358154
    4. '   ' → logprob: -6.649001598358154
    5. '=' → logprob: -8.774002075195312
    6. ':' → logprob: -9.274002075195312
    7. 'temps' → logprob: -9.399002075195312
    8. '```' → logprob: -9.774002075195312
    9. ' =' → logprob: -9.899002075195312
    10. 'speed' → logprob: -10.899002075195312

Token 1269: ' vitesse' (ID: 71752)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.006621342618018389
    2. 'speed' → logprob: -5.256621360778809
    3. '(speed' → logprob: -7.881621360778809
    4. 'if' → logprob: -8.131621360778809
    5. 'temp' → logprob: -8.631621360778809
    6. 'remaining' → logprob: -8.756621360778809
    7. '#' → logprob: -9.256621360778809
    8. ' dfs' → logprob: -9.381621360778809
    9. '(' → logprob: -9.881621360778809
    10. '(d' → logprob: -10.756621360778809

Token 1270: ' /=' (ID: 37808)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26582419872283936
    2. ' =' → logprob: -1.7658241987228394
    3. '_exp' → logprob: -3.390824317932129
    4. 'exp' → logprob: -4.515824317932129
    5. 'div' → logprob: -5.265824317932129
    6. '>' → logprob: -5.515824317932129
    7. '>=' → logprob: -6.140824317932129
    8. '-' → logprob: -6.640824317932129
    9. '_div' → logprob: -6.640824317932129
    10. 'if' → logprob: -6.890824317932129

Token 1271: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.7385154428193346e-05
    2. ' ' → logprob: -10.25003719329834
    3. '   ' → logprob: -13.75003719329834
    4. '```' → logprob: -14.62503719329834
    5. '1' → logprob: -16.125038146972656
    6. '       ' → logprob: -16.875038146972656
    7. '  ' → logprob: -17.375038146972656
    8. ' ' → logprob: -17.375038146972656
    9. '     ' → logprob: -17.500038146972656
    10. '
' → logprob: -17.562538146972656

Token 1272: ' sauf' (ID: 87919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6454244256019592
    2. 'if' → logprob: -0.7704244256019592
    3. ' if' → logprob: -4.5204243659973145
    4. 'temp' → logprob: -6.3954243659973145
    5. '
' → logprob: -9.645424842834473
    6. '	if' → logprob: -10.145424842834473
    7. '    
' → logprob: -10.520424842834473
    8. '```' → logprob: -11.520424842834473
    9. ':' → logprob: -11.895424842834473
    10. '  ' → logprob: -12.270424842834473

Token 1273: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006983776111155748
    2. 'speed' → logprob: -5.381983757019043
    3. ' if' → logprob: -6.631983757019043
    4. 'si' → logprob: -7.131983757019043
    5. '(speed' → logprob: -8.631983757019043
    6. ' si' → logprob: -10.131983757019043
    7. ' speed' → logprob: -11.131983757019043
    8. '(if' → logprob: -12.506983757019043
    9. '(si' → logprob: -13.131983757019043
    10. 'for' → logprob: -13.631983757019043

Token 1274: ' vitesse' (ID: 71752)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -2.339278580620885e-06
    2. ' speed' → logprob: -13.000001907348633
    3. '	speed' → logprob: -17.000001907348633
    4. '(speed' → logprob: -17.875001907348633
    5. 'score' → logprob: -20.750001907348633
    6. '```' → logprob: -20.875001907348633
    7. 'Speed' → logprob: -21.375001907348633
    8. '
' → logprob: -21.375001907348633
    9. 'spe' → logprob: -21.625001907348633
    10. 'abs' → logprob: -21.750001907348633

Token 1275: ' normale' (ID: 57494)
  Prédit: '_exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.3260905146598816
    2. '==' → logprob: -1.3260905742645264
    3. ' ==' → logprob: -5.076090335845947
    4. 'exp' → logprob: -5.076090335845947
    5. '!=' → logprob: -9.451090812683105
    6. '>' → logprob: -9.701090812683105
    7. '```' → logprob: -10.076090812683105
    8. '_ex' → logprob: -10.201090812683105
    9. 'Exp' → logprob: -11.326090812683105
    10. '==-' → logprob: -12.201090812683105

Token 1276: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14958220720291138
    2. ',' → logprob: -2.8995821475982666
    3. 'and' → logprob: -3.6495821475982666
    4. ':' → logprob: -3.7745821475982666
    5. ' and' → logprob: -4.274582386016846
    6. '<|end|>' → logprob: -5.024582386016846
    7. 'if' → logprob: -5.274582386016846
    8. ' if' → logprob: -5.524582386016846
    9. '<|end|>' → logprob: -6.274582386016846
    10. ' (' → logprob: -7.024582386016846

Token 1277: 'speed' (ID: 42880)
  Prédit: 'speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.0017179005080834031
    2. ' speed' → logprob: -6.376718044281006
    3. '0' → logprob: -11.251717567443848
    4. '(speed' → logprob: -13.876717567443848
    5. '```' → logprob: -14.251717567443848
    6. '	speed' → logprob: -14.376717567443848
    7. ')' → logprob: -16.001718521118164
    8. '   ' → logprob: -16.376718521118164
    9. 'spe' → logprob: -16.626718521118164
    10. ' ' → logprob: -16.751718521118164

Token 1278: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.0002631238894537091
    2. 'exp' → logprob: -8.250263214111328
    3. '	exp' → logprob: -14.000263214111328
    4. '_ex' → logprob: -15.250263214111328
    5. 'Exp' → logprob: -15.750263214111328
    6. '-exp' → logprob: -16.000263214111328
    7. '_EXP' → logprob: -16.125263214111328
    8. '==' → logprob: -16.750263214111328
    9. '```' → logprob: -16.750263214111328
    10. ''exp' → logprob: -16.875263214111328

Token 1279: '==' (ID: 560)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.863680362701416
    2. ' >' → logprob: -1.363680362701416
    3. '==' → logprob: -1.988680362701416
    4. ' ==' → logprob: -2.363680362701416
    5. ' !=' → logprob: -2.738680362701416
    6. '!=' → logprob: -3.613680362701416
    7. '```' → logprob: -10.238679885864258
    8. ' ' → logprob: -11.363679885864258
    9. ')' → logprob: -11.488679885864258
    10. '   ' → logprob: -11.863679885864258

Token 1280: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018041854491457343
    2. ' ' → logprob: -8.6251802444458
    3. '```' → logprob: -14.3751802444458
    4. '1' → logprob: -16.000181198120117
    5. '>' → logprob: -16.500181198120117
    6. '``' → logprob: -18.250181198120117
    7. '   ' → logprob: -18.375181198120117
    8. '`' → logprob: -19.250181198120117
    9. ' ' → logprob: -19.875181198120117
    10. '[' → logprob: -20.250181198120117

Token 1281: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47785910964012146
    2. '):
' → logprob: -1.3528591394424438
    3. '):' → logprob: -2.4778590202331543
    4. ')
' → logprob: -4.102859020233154
    5. '   ' → logprob: -4.102859020233154
    6. '),' → logprob: -5.477859020233154
    7. '):

' → logprob: -9.102859497070312
    8. ':' → logprob: -10.727859497070312
    9. '):
' → logprob: -10.727859497070312
    10. ',' → logprob: -11.102859497070312

Token 1282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2015390545129776
    2. 'if' → logprob: -1.9515390396118164
    3. ' if' → logprob: -3.4515390396118164
    4. 'temp' → logprob: -5.451539039611816
    5. '```' → logprob: -5.576539039611816
    6. ' temp' → logprob: -8.451539039611816
    7. '	if' → logprob: -8.701539039611816
    8. '``' → logprob: -9.326539039611816
    9. '[' → logprob: -9.826539039611816
    10. '	temp' → logprob: -9.951539039611816

Token 1283: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009304079227149487
    2. 'temp' → logprob: -5.259304046630859
    3. ' if' → logprob: -5.759304046630859
    4. '   ' → logprob: -7.009304046630859
    5. ' temp' → logprob: -12.63430404663086
    6. '```' → logprob: -13.75930404663086
    7. 'temps' → logprob: -15.25930404663086
    8. 'tmp' → logprob: -15.75930404663086
    9. 'If' → logprob: -15.88430404663086
    10. '	if' → logprob: -16.00930404663086

Token 1284: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.02324652671813965
    2. ' speed' → logprob: -3.7732465267181396
    3. '	speed' → logprob: -14.023246765136719
    4. '(speed' → logprob: -15.648246765136719
    5. '   ' → logprob: -16.77324676513672
    6. 'Speed' → logprob: -17.02324676513672
    7. 'spe' → logprob: -17.52324676513672
    8. 'abs' → logprob: -17.52324676513672
    9. ' ' → logprob: -18.14824676513672
    10. '_speed' → logprob: -18.52324676513672

Token 1285: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.0021119550801813602
    2. '>' → logprob: -6.502111911773682
    3. '!=' → logprob: -8.25211238861084
    4. 'exp' → logprob: -8.62711238861084
    5. ' !=' → logprob: -9.00211238861084
    6. ' >' → logprob: -10.37711238861084
    7. '_ex' → logprob: -12.37711238861084
    8. '_EXP' → logprob: -12.75211238861084
    9. '```' → logprob: -13.37711238861084
    10. 'Exp' → logprob: -13.62711238861084

Token 1286: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0026766068767756224
    2. ' >' → logprob: -6.377676486968994
    3. '!=' → logprob: -7.002676486968994
    4. ' !=' → logprob: -10.377676963806152
    5. '0' → logprob: -11.252676963806152
    6. '()>' → logprob: -11.627676963806152
    7. '1' → logprob: -12.627676963806152
    8. '<' → logprob: -13.627676963806152
    9. '<|end|>' → logprob: -13.627676963806152
    10. '<|end|>' → logprob: -13.877676963806152

Token 1287: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. '-' → logprob: -12.500004768371582
    3. ' ' → logprob: -14.125004768371582
    4. ' -' → logprob: -18.875003814697266
    5. '   ' → logprob: -20.250003814697266
    6. '1' → logprob: -20.250003814697266
    7. '=' → logprob: -20.375003814697266
    8. '۰' → logprob: -21.125003814697266
    9. '```' → logprob: -21.250003814697266
    10. '{-#' → logprob: -22.000003814697266

Token 1288: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. '-' → logprob: -12.875004768371582
    3. ' ' → logprob: -13.250004768371582
    4. ' -' → logprob: -18.125003814697266
    5. '   ' → logprob: -18.875003814697266
    6. '=' → logprob: -19.875003814697266
    7. '1' → logprob: -20.250003814697266
    8. '  ' → logprob: -20.500003814697266
    9. '#' → logprob: -21.500003814697266
    10. '```' → logprob: -21.625003814697266

Token 1289: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31593674421310425
    2. ':
' → logprob: -1.315936803817749
    3. '   ' → logprob: -6.19093656539917
    4. '       ' → logprob: -7.69093656539917
    5. '):
' → logprob: -9.940937042236328
    6. ',' → logprob: -10.440937042236328
    7. '=' → logprob: -11.190937042236328
    8. '<|end|>' → logprob: -11.190937042236328
    9. ' and' → logprob: -11.565937042236328
    10. '==' → logprob: -11.815937042236328

Token 1290: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005246769287623465
    2. '```' → logprob: -8.125524520874023
    3. ' temp' → logprob: -9.375524520874023
    4. 'temp' → logprob: -9.500524520874023
    5. '	temp' → logprob: -10.250524520874023
    6. '       ' → logprob: -10.375524520874023
    7. '   ' → logprob: -13.750524520874023
    8. '``' → logprob: -14.375524520874023
    9. '[temp' → logprob: -15.875524520874023
    10. '    
' → logprob: -15.875524520874023

Token 1291: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -2.1054253011243418e-05
    2. '   ' → logprob: -11.250020980834961
    3. ' temp' → logprob: -11.750020980834961
    4. '	temp' → logprob: -18.00002098083496
    5. '```' → logprob: -18.37502098083496
    6. 'tmp' → logprob: -18.50002098083496
    7. '       ' → logprob: -18.62502098083496
    8. 'temps' → logprob: -19.25002098083496
    9. '
' → logprob: -21.12502098083496
    10. '$temp' → logprob: -21.37502098083496

Token 1292: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740770161151886
    2. ' =' → logprob: -0.9740769863128662
    3. '=df' → logprob: -18.224077224731445
    4. '=
' → logprob: -18.599077224731445
    5. '＝' → logprob: -19.599077224731445
    6. '=d' → logprob: -19.724077224731445
    7. '   ' → logprob: -20.099077224731445
    8. ' ' → logprob: -20.349077224731445
    9. 'dfs' → logprob: -20.599077224731445
    10. '=}' → logprob: -20.974077224731445

Token 1293: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.9027791495318525e-05
    2. ' dfs' → logprob: -10.875019073486328
    3. 'df' → logprob: -17.000019073486328
    4. 'dfa' → logprob: -19.125019073486328
    5. 'DFS' → logprob: -19.750019073486328
    6. 'fs' → logprob: -20.125019073486328
    7. '   ' → logprob: -21.250019073486328
    8. 'dns' → logprob: -21.250019073486328
    9. 'ds' → logprob: -22.250019073486328
    10. 'dsl' → logprob: -22.500019073486328

Token 1294: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007104054093360901
    2. 'remaining' → logprob: -7.250710487365723
    3. ' remaining' → logprob: -15.375710487365723
    4. '   ' → logprob: -16.375709533691406
    5. '(
' → logprob: -17.875709533691406
    6. '.remaining' → logprob: -18.000709533691406
    7. '```' → logprob: -18.250709533691406
    8. '`' → logprob: -18.500709533691406
    9. ' (' → logprob: -18.875709533691406
    10. '(existing' → logprob: -20.000709533691406

Token 1295: 'remaining' (ID: 83570)
  Prédit: 'remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -2.45848218582978e-06
    2. '   ' → logprob: -13.50000286102295
    3. ' remaining' → logprob: -13.87500286102295
    4. ' ' → logprob: -17.875001907348633
    5. '.remaining' → logprob: -19.000001907348633
    6. '  ' → logprob: -19.625001907348633
    7. '    ' → logprob: -20.125001907348633
    8. '0' → logprob: -20.625001907348633
    9. '       ' → logprob: -20.875001907348633
    10. 'existing' → logprob: -21.000001907348633

Token 1296: '_distance' (ID: 45537)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.004068309441208839
    2. ' remaining' → logprob: -5.879068374633789
    3. '_distance' → logprob: -7.379068374633789
    4. '   ' → logprob: -8.254068374633789
    5. '_remaining' → logprob: -9.004068374633789
    6. 'distance' → logprob: -9.129068374633789
    7. '-' → logprob: -9.504068374633789
    8. ' -' → logprob: -11.129068374633789
    9. '.remaining' → logprob: -11.129068374633789
    10. '  ' → logprob: -11.879068374633789

Token 1297: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07890840619802475
    2. '-' → logprob: -2.5789084434509277
    3. '-speed' → logprob: -11.07890796661377
    4. ' ' → logprob: -13.45390796661377
    5. '   ' → logprob: -14.07890796661377
    6. '  ' → logprob: -15.32890796661377
    7. '    ' → logprob: -15.57890796661377
    8. '-p' → logprob: -16.078908920288086
    9. '-s' → logprob: -16.078908920288086
    10. '     ' → logprob: -16.703908920288086

Token 1298: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -7.040457421680912e-05
    2. ' speed' → logprob: -9.625070571899414
    3. 'pow' → logprob: -12.750070571899414
    4. '(speed' → logprob: -14.250070571899414
    5. 'power' → logprob: -14.625070571899414
    6. '   ' → logprob: -16.375070571899414
    7. '	speed' → logprob: -16.375070571899414
    8. 'spe' → logprob: -17.625070571899414
    9. '```' → logprob: -18.000070571899414
    10. 'score' → logprob: -18.250070571899414

Token 1299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1424973713001236e-05
    2. ' ,' → logprob: -11.125031471252441
    3. '       ' → logprob: -11.250031471252441
    4. '   ' → logprob: -13.250031471252441
    5. ',
' → logprob: -14.500031471252441
    6. '           ' → logprob: -14.625031471252441
    7. '        ' → logprob: -15.625031471252441
    8. '         ' → logprob: -15.625031471252441
    9. '```' → logprob: -16.125030517578125
    10. '      ' → logprob: -16.375030517578125

Token 1300: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -9.13388703338569e-06
    2. ' speed' → logprob: -11.875009536743164
    3. '       ' → logprob: -14.000009536743164
    4. '   ' → logprob: -14.125009536743164
    5. '         ' → logprob: -15.625009536743164
    6. '           ' → logprob: -15.750009536743164
    7. '	speed' → logprob: -16.500009536743164
    8. '     ' → logprob: -16.500009536743164
    9. '      ' → logprob: -17.250009536743164
    10. '        ' → logprob: -17.500009536743164

Token 1301: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.0052362410351634026
    2. 'exp' → logprob: -5.2552361488342285
    3. '-exp' → logprob: -14.130236625671387
    4. 'Exp' → logprob: -14.630236625671387
    5. '	exp' → logprob: -15.130236625671387
    6. '-' → logprob: -15.505236625671387
    7. '   ' → logprob: -15.630236625671387
    8. '```' → logprob: -15.755236625671387
    9. '_ex' → logprob: -16.63023567199707
    10. '_EXP' → logprob: -16.63023567199707

Token 1302: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013283335138112307
    2. ' -' → logprob: -6.626328468322754
    3. '   ' → logprob: -13.626328468322754
    4. '1' → logprob: -14.376328468322754
    5. '       ' → logprob: -15.751328468322754
    6. '```' → logprob: -16.001327514648438
    7. ')' → logprob: -16.126327514648438
    8. ' ' → logprob: -16.751327514648438
    9. ',' → logprob: -17.876327514648438
    10. '           ' → logprob: -18.126327514648438

Token 1303: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -17.875
    4. '<|end|>' → logprob: -18.25
    5. '```' → logprob: -19.75
    6. '<|end|>' → logprob: -21.375
    7. '
' → logprob: -21.75
    8. '  ' → logprob: -22.125
    9. '۱' → logprob: -22.5
    10. '१' → logprob: -22.875

Token 1304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '<|end|>' → logprob: -18.625
    4. '   ' → logprob: -18.875
    5. '```' → logprob: -19.5
    6. '۱' → logprob: -21.0
    7. '১' → logprob: -21.3125
    8. '१' → logprob: -21.5
    9. '<|end|>' → logprob: -21.5
    10. '
' → logprob: -21.5625

Token 1305: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007616263465024531
    2. '   ' → logprob: -7.87576150894165
    3. ')
' → logprob: -7.87576150894165
    4. ' )' → logprob: -14.375761985778809
    5. '```' → logprob: -14.625761985778809
    6. '`)' → logprob: -15.625761985778809
    7. '),' → logprob: -16.375761032104492
    8. '):
' → logprob: -16.375761032104492
    9. ')`' → logprob: -16.500761032104492
    10. '')' → logprob: -17.375761032104492

Token 1306: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002678391057997942
    2. ')' → logprob: -6.752678394317627
    3. ':' → logprob: -7.002678394317627
    4. '```' → logprob: -8.127677917480469
    5. '<|end|>' → logprob: -9.377677917480469
    6. '):
' → logprob: -9.877677917480469
    7. '       ' → logprob: -10.002677917480469
    8. '):' → logprob: -10.127677917480469
    9. ' if' → logprob: -11.002677917480469
    10. ':
' → logprob: -11.127677917480469

Token 1307: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.027978265658020973
    2. '       ' → logprob: -4.027978420257568
    3. ' if' → logprob: -4.652978420257568
    4. '   ' → logprob: -8.52797794342041
    5. '	if' → logprob: -10.52797794342041
    6. '           ' → logprob: -11.15297794342041
    7. '```' → logprob: -13.15297794342041
    8. ' ' → logprob: -13.52797794342041
    9. '<|end|>' → logprob: -13.90297794342041
    10. 'If' → logprob: -14.15297794342041

Token 1308: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.048589076846838
    2. ' temp' → logprob: -3.048588991165161
    3. '(temp' → logprob: -14.798588752746582
    4. 'temps' → logprob: -15.048588752746582
    5. '	temp' → logprob: -15.298588752746582
    6. 'tmp' → logprob: -15.548588752746582
    7. '   ' → logprob: -15.673588752746582
    8. 'tem' → logprob: -16.2985897064209
    9. '$temp' → logprob: -16.2985897064209
    10. '[temp' → logprob: -16.7985897064209

Token 1309: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.03393036499619484
    2. '!=' → logprob: -3.4089303016662598
    3. '       ' → logprob: -9.283930778503418
    4. '<|end|>' → logprob: -9.783930778503418
    5. ')!=' → logprob: -10.658930778503418
    6. ' is' → logprob: -11.033930778503418
    7. '   ' → logprob: -11.033930778503418
    8. '           ' → logprob: -11.533930778503418
    9. '()!=' → logprob: -11.658930778503418
    10. '	' → logprob: -11.783930778503418

Token 1310: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0013265528250485659
    2. ' ' → logprob: -6.626326560974121
    3. '100' → logprob: -14.501326560974121
    4. '   ' → logprob: -17.376325607299805
    5. '```' → logprob: -17.376325607299805
    6. '0' → logprob: -18.376325607299805
    7. '101' → logprob: -18.751325607299805
    8. '1' → logprob: -19.001325607299805
    9. '109' → logprob: -19.376325607299805
    10. '  ' → logprob: -19.501325607299805

Token 1311: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. '100' → logprob: -16.125001907348633
    4. '```' → logprob: -16.750001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '۱۰' → logprob: -18.250001907348633
    7. '(' → logprob: -18.750001907348633
    8. '109' → logprob: -18.875001907348633
    9. '``' → logprob: -19.125001907348633
    10. '[' → logprob: -19.250001907348633

Token 1312: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0004135112394578755
    2. '```' → logprob: -7.875413417816162
    3. '*' → logprob: -10.62541389465332
    4. '18' → logprob: -12.12541389465332
    5. '***' → logprob: -12.75041389465332
    6. '``' → logprob: -14.87541389465332
    7. '`' → logprob: -16.12541389465332
    8. '10' → logprob: -16.50041389465332
    9. '^' → logprob: -16.62541389465332
    10. '[' → logprob: -16.87541389465332

Token 1313: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -1.3856492842023727e-06
    2. '180' → logprob: -14.750000953674316
    3. '```' → logprob: -14.875000953674316
    4. 'res' → logprob: -15.875000953674316
    5. '184' → logprob: -16.000001907348633
    6. '183' → logprob: -16.500001907348633
    7. '10' → logprob: -16.750001907348633
    8. '۱۸' → logprob: -16.875001907348633
    9. '
' → logprob: -17.375001907348633
    10. '1' → logprob: -17.625001907348633

Token 1314: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015189365483820438
    2. '       ' → logprob: -5.015189170837402
    3. ':
' → logprob: -5.015189170837402
    4. '           ' → logprob: -6.765189170837402
    5. '```' → logprob: -8.265189170837402
    6. '<|end|>' → logprob: -8.265189170837402
    7. '):' → logprob: -9.515189170837402
    8. '):
' → logprob: -10.390189170837402
    9. '   ' → logprob: -12.015189170837402
    10. ',' → logprob: -12.390189170837402

Token 1315: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5768042206764221
    2. '           ' → logprob: -0.8268042206764221
    3. '	       ' → logprob: -7.951804161071777
    4. '```' → logprob: -8.326804161071777
    5. '		' → logprob: -8.951804161071777
    6. '	' → logprob: -9.826804161071777
    7. '               ' → logprob: -10.326804161071777
    8. '   ' → logprob: -10.951804161071777
    9. '	   ' → logprob: -11.576804161071777
    10. '<|end|>' → logprob: -12.701804161071777

Token 1316: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.00013405199570115656
    2. '           ' → logprob: -9.500134468078613
    3. ' res' → logprob: -9.750134468078613
    4. '               ' → logprob: -14.625134468078613
    5. '       ' → logprob: -14.875134468078613
    6. '   ' → logprob: -17.125133514404297
    7. '	res' → logprob: -17.125133514404297
    8. '```' → logprob: -20.125133514404297
    9. '                   ' → logprob: -20.625133514404297
    10. 'resc' → logprob: -20.625133514404297

Token 1317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313265860080719
    2. ' =' → logprob: -1.3132658004760742
    3. '   ' → logprob: -12.813265800476074
    4. '=min' → logprob: -13.813265800476074
    5. '```' → logprob: -15.563265800476074
    6. '       ' → logprob: -16.18826675415039
    7. '	' → logprob: -17.06326675415039
    8. '    ' → logprob: -17.06326675415039
    9. '           ' → logprob: -17.56326675415039
    10. ' ' → logprob: -18.06326675415039

Token 1318: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20141343772411346
    2. ' min' → logprob: -1.7014133930206299
    3. '(min' → logprob: -17.076414108276367
    4. '	min' → logprob: -17.201414108276367
    5. '[min' → logprob: -18.326414108276367
    6. '```' → logprob: -18.451414108276367
    7. '=min' → logprob: -18.826414108276367
    8. '.min' → logprob: -19.451414108276367
    9. '_min' → logprob: -19.576414108276367
    10. ' ' → logprob: -19.576414108276367

Token 1319: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -8.566264295950532e-05
    2. '(' → logprob: -9.625085830688477
    3. 'res' → logprob: -10.875085830688477
    4. ' res' → logprob: -15.250085830688477
    5. '(
' → logprob: -15.750085830688477
    6. ',res' → logprob: -16.125085830688477
    7. ' (' → logprob: -16.375085830688477
    8. '```' → logprob: -16.875085830688477
    9. '=res' → logprob: -17.000085830688477
    10. '$res' → logprob: -17.375085830688477

Token 1320: ',' (ID: 11)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.08032555878162384
    2. ',' → logprob: -3.2053256034851074
    3. '(' → logprob: -3.3303256034851074
    4. ',res' → logprob: -7.080325603485107
    5. 'res' → logprob: -12.58032512664795
    6. ' res' → logprob: -12.58032512664795
    7. '(
' → logprob: -12.83032512664795
    8. ' ,' → logprob: -13.83032512664795
    9. '   ' → logprob: -13.95532512664795
    10. ' (' → logprob: -13.95532512664795

Token 1321: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06197284162044525
    2. ' ' → logprob: -2.8119728565216064
    3. 'res' → logprob: -12.311972618103027
    4. ' res' → logprob: -14.811972618103027
    5. '   ' → logprob: -15.561972618103027
    6. '10' → logprob: -16.061973571777344
    7. '```' → logprob: -17.561973571777344
    8. ' ' → logprob: -17.686973571777344
    9. '(' → logprob: -17.811973571777344
    10. ')' → logprob: -17.811973571777344

Token 1322: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'res' → logprob: -15.5
    3. ' ' → logprob: -16.375
    4. '   ' → logprob: -17.75
    5. '
' → logprob: -19.0
    6. '(' → logprob: -20.0
    7. '```' → logprob: -20.75
    8. '10' → logprob: -21.5
    9. '`' → logprob: -21.75
    10. '  ' → logprob: -21.875

Token 1323: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47407931089401245
    2. ' +' → logprob: -0.9740793108940125
    3. '+
' → logprob: -14.849079132080078
    4. '   ' → logprob: -14.849079132080078
    5. '＋' → logprob: -15.349079132080078
    6. ')+' → logprob: -15.474079132080078
    7. ' ' → logprob: -15.474079132080078
    8. ' +
' → logprob: -15.474079132080078
    9. '```' → logprob: -15.474079132080078
    10. '<|end|>' → logprob: -16.349079132080078

Token 1324: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -9.088346359931165e-07
    2. ' temp' → logprob: -14.000000953674316
    3. 'tmp' → logprob: -18.375
    4. 'tem' → logprob: -20.75
    5. '(temp' → logprob: -21.25
    6. '[temp' → logprob: -22.375
    7. '	temp' → logprob: -22.75
    8. '_temp' → logprob: -23.0
    9. '$temp' → logprob: -23.625
    10. 'temps' → logprob: -23.75

Token 1325: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03577100858092308
    2. '   ' → logprob: -3.410770893096924
    3. ')
' → logprob: -6.910770893096924
    4. ')

' → logprob: -7.910770893096924
    5. 'return' → logprob: -8.160771369934082
    6. ')return' → logprob: -8.285771369934082
    7. '<|end|>' → logprob: -9.285771369934082
    8. '```' → logprob: -9.410771369934082
    9. ' return' → logprob: -10.785771369934082
    10. '  ' → logprob: -12.535771369934082

Token 1326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3193979561328888
    2. '```' → logprob: -1.3193979263305664
    3. 'else' → logprob: -5.944397926330566
    4. ')' → logprob: -6.069397926330566
    5. ':' → logprob: -7.319397926330566
    6. '<|end|>' → logprob: -8.944397926330566
    7. '``' → logprob: -9.194397926330566
    8. ' else' → logprob: -9.319397926330566
    9. ':return' → logprob: -9.694397926330566
    10. '):' → logprob: -9.944397926330566

Token 1327: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.708328902721405
    2. 'else' → logprob: -0.708328902721405
    3. 'return' → logprob: -4.458328723907471
    4. '```' → logprob: -6.458328723907471
    5. 'elif' (adapté à ' elif') → logprob: -6.583328723907471
    6. 'if' → logprob: -8.208329200744629
    7. ' else' → logprob: -8.333329200744629
    8. ' return' → logprob: -11.833329200744629
    9. '    
' → logprob: -12.208329200744629
    10. '``' → logprob: -12.833329200744629

Token 1328: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.0205562524497509
    2. ' speed' → logprob: -3.8955562114715576
    3. '0' → logprob: -11.520556449890137
    4. '	speed' → logprob: -13.645556449890137
    5. 'True' → logprob: -14.020556449890137
    6. 'False' → logprob: -14.395556449890137
    7. '(speed' → logprob: -14.770556449890137
    8. 'spe' → logprob: -14.770556449890137
    9. '   ' → logprob: -15.270556449890137
    10. ' ' → logprob: -15.770556449890137

Token 1329: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.2651989459991455
    2. '==' → logprob: -1.6401989459991455
    3. ' ==' → logprob: -3.2651989459991455
    4. 'exp' → logprob: -7.265198707580566
    5. '_' → logprob: -10.765198707580566
    6. '_ex' → logprob: -11.015198707580566
    7. '<' → logprob: -11.015198707580566
    8. 'Exp' → logprob: -11.140198707580566
    9. '=' → logprob: -11.390198707580566
    10. '_EXP' → logprob: -11.515198707580566

Token 1330: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3799232244491577
    2. '<' → logprob: -1.2549232244491577
    3. ' ==' → logprob: -4.004923343658447
    4. '==' → logprob: -4.379923343658447
    5. '0' → logprob: -8.504922866821289
    6. ' ' → logprob: -11.629922866821289
    7. '==-' → logprob: -12.129922866821289
    8. '<int' → logprob: -12.129922866821289
    9. '   ' → logprob: -12.379922866821289
    10. '[' → logprob: -13.879922866821289

Token 1331: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.000009536743164
    4. '=' → logprob: -19.000009536743164
    5. '۰' → logprob: -19.125009536743164
    6. '>' → logprob: -19.500009536743164
    7. '```' → logprob: -19.750009536743164
    8. '1' → logprob: -20.000009536743164
    9. '﻿' → logprob: -20.375009536743164
    10. '#' → logprob: -20.875009536743164

Token 1332: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -12.12501049041748
    3. '1' → logprob: -12.25001049041748
    4. '-' → logprob: -15.62501049041748
    5. '   ' → logprob: -16.500011444091797
    6. '
' → logprob: -16.875011444091797
    7. '```' → logprob: -17.125011444091797
    8. '>' → logprob: -17.687511444091797
    9. '﻿' → logprob: -18.062511444091797
    10. '  ' → logprob: -18.437511444091797

Token 1333: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4885219931602478
    2. ':
' → logprob: -0.9885219931602478
    3. '       ' → logprob: -4.363522052764893
    4. '   ' → logprob: -6.613522052764893
    5. ' and' → logprob: -9.863521575927734
    6. '<|end|>' → logprob: -10.363521575927734
    7. '=' → logprob: -10.488521575927734
    8. '==' → logprob: -10.738521575927734
    9. '```' → logprob: -11.113521575927734
    10. '[' → logprob: -11.113521575927734

Token 1334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018129866803064942
    2. '```' → logprob: -6.376812934875488
    3. 'temp' → logprob: -9.876812934875488
    4. '``' → logprob: -10.626812934875488
    5. ' temp' → logprob: -10.626812934875488
    6. '   ' → logprob: -12.501812934875488
    7. ' pass' → logprob: -12.876812934875488
    8. 'pass' → logprob: -13.126812934875488
    9. '           ' → logprob: -13.376812934875488
    10. '
' → logprob: -15.251812934875488

Token 1335: ' #' (ID: 1069)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -3.5597102396423e-05
    2. '   ' → logprob: -10.750035285949707
    3. ' temp' → logprob: -11.250035285949707
    4. '       ' → logprob: -14.000035285949707
    5. '```' → logprob: -16.500036239624023
    6. '#' (adapté à ' #') → logprob: -16.750036239624023
    7. '	temp' → logprob: -17.750036239624023
    8. 'temps' → logprob: -18.125036239624023
    9. 'tmp' → logprob: -18.375036239624023
    10. '
' → logprob: -18.500036239624023

Token 1336: ' vitesse' (ID: 71752)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.000913370808120817
    2. '#' → logprob: -7.000913143157959
    3. ' temp' → logprob: -14.000913619995117
    4. '   ' → logprob: -14.250913619995117
    5. '       ' → logprob: -16.000913619995117
    6. 'pass' → logprob: -16.125913619995117
    7. 'res' → logprob: -16.125913619995117
    8. 'tmp' → logprob: -16.375913619995117
    9. 'temps' → logprob: -16.750913619995117
    10. ' #' → logprob: -18.625913619995117

Token 1337: ' normale' (ID: 57494)
  Prédit: '_exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.11899205297231674
    2. 'exp' → logprob: -2.9939920902252197
    3. '=' → logprob: -3.9939920902252197
    4. '#' → logprob: -4.743991851806641
    5. '   ' → logprob: -4.993991851806641
    6. ' =' → logprob: -5.493991851806641
    7. 'div' → logprob: -5.993991851806641
    8. '==' → logprob: -5.993991851806641
    9. 'Exp' → logprob: -6.243991851806641
    10. 'pas' → logprob: -6.868991851806641

Token 1338: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13243980705738068
    2. 'temp' → logprob: -2.3824398517608643
    3. '   ' → logprob: -4.132439613342285
    4. ':
' → logprob: -4.507439613342285
    5. ':' → logprob: -5.632439613342285
    6. ' temp' → logprob: -7.757439613342285
    7. '=' → logprob: -8.257439613342285
    8. ' =' → logprob: -9.257439613342285
    9. '):
' → logprob: -9.507439613342285
    10. '
' → logprob: -10.132439613342285

Token 1339: ' div' (ID: 4223)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.05252015218138695
    2. '       ' → logprob: -3.0525200366973877
    3. ' temp' → logprob: -5.802520275115967
    4. '   ' → logprob: -7.052520275115967
    5. '	temp' → logprob: -11.177519798278809
    6. 'temps' → logprob: -11.802519798278809
    7. '           ' → logprob: -12.177519798278809
    8. '```' → logprob: -12.302519798278809
    9. ' ' → logprob: -13.302519798278809
    10. '	' → logprob: -13.927519798278809

Token 1340: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.035497792065143585
    2. 'iding' → logprob: -3.4104979038238525
    3. 'ider' → logprob: -6.910497665405273
    4. 'ise' → logprob: -8.035497665405273
    5. 'ide' → logprob: -8.535497665405273
    6. 'ision' → logprob: -9.285497665405273
    7. 'ising' → logprob: -9.410497665405273
    8. '=' → logprob: -9.910497665405273
    9. 'ided' → logprob: -10.410497665405273
    10. 'er' → logprob: -11.160497665405273

Token 1341: ' par' (ID: 686)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.1884404420852661
    2. 'pas' → logprob: -1.4384404420852661
    3. 'par' → logprob: -1.8134404420852661
    4. 'speed' → logprob: -1.9384404420852661
    5. '=' → logprob: -3.1884403228759766
    6. 'temp' → logprob: -3.3134403228759766
    7. 'not' → logprob: -4.313440322875977
    8. ' =' → logprob: -4.938440322875977
    9. '       ' → logprob: -5.313440322875977
    10. ' par' → logprob: -5.438440322875977

Token 1342: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0001093841710826382
    2. ' ' → logprob: -9.250109672546387
    3. '1' → logprob: -11.625109672546387
    4. '   ' → logprob: -12.875109672546387
    5. '
' → logprob: -14.625109672546387
    6. '#' → logprob: -14.875109672546387
    7. '```' → logprob: -15.625109672546387
    8. ' ' → logprob: -16.50010871887207
    9. '  ' → logprob: -16.50010871887207
    10. 'three' → logprob: -17.00010871887207

Token 1343: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.0722858102526516e-05
    2. ' ' → logprob: -10.125041007995605
    3. '#' → logprob: -15.250041007995605
    4. '1' → logprob: -15.375041007995605
    5. '   ' → logprob: -16.37504005432129
    6. '=' → logprob: -18.18754005432129
    7. '...' → logprob: -18.18754005432129
    8. 'three' → logprob: -18.18754005432129
    9. '```' → logprob: -18.25004005432129
    10. '
' → logprob: -18.31254005432129

Token 1344: ' ne' (ID: 453)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6902134418487549
    2. '=' → logprob: -1.3152134418487549
    3. 'temp' → logprob: -1.5652134418487549
    4. '   ' → logprob: -4.815213203430176
    5. ':
' → logprob: -5.440213203430176
    6. ':' → logprob: -5.815213203430176
    7. ' =' → logprob: -6.815213203430176
    8. '=
' → logprob: -6.815213203430176
    9. ' temp' → logprob: -6.940213203430176
    10. '=temp' → logprob: -7.815213203430176

Token 1345: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.45027247071266174
    2. 'does' → logprob: -1.9502724409103394
    3. '=' → logprob: -2.450272560119629
    4. 'not' → logprob: -3.075272560119629
    5. 'n't' → logprob: -3.450272560119629
    6. 'pas' → logprob: -3.825272560119629
    7. 'n' → logprob: -4.325272560119629
    8. 'ne' → logprob: -5.825272560119629
    9. 'changes' → logprob: -6.325272560119629
    10. ' change' → logprob: -6.325272560119629

Token 1346: ' rien' (ID: 23082)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.39944928884506226
    2. ' rien' → logprob: -1.274449348449707
    3. 'pas' → logprob: -3.024449348449707
    4. 'res' → logprob: -7.399449348449707
    5. 'nothing' → logprob: -7.899449348449707
    6. ' pas' → logprob: -9.524449348449707
    7. ' Rien' → logprob: -10.399449348449707
    8. 'ri' → logprob: -11.149449348449707
    9. 'ras' → logprob: -12.149449348449707
    10. 'rie' → logprob: -12.399449348449707

Token 1347: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05130878463387489
    2. '   ' → logprob: -3.4263088703155518
    3. ':' → logprob: -5.051308631896973
    4. ':
' → logprob: -5.051308631896973
    5. ',' → logprob: -6.426308631896973
    6. '
' → logprob: -7.551308631896973
    7. 'temp' → logprob: -7.676308631896973
    8. '           ' → logprob: -8.051308631896973
    9. '):
' → logprob: -8.176308631896973
    10. ' temp' → logprob: -8.676308631896973

Token 1348: ' on' (ID: 402)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.006265778094530106
    2. '   ' → logprob: -5.256265640258789
    3. 'res' → logprob: -7.506265640258789
    4. ' temp' → logprob: -7.756265640258789
    5. '       ' → logprob: -10.506265640258789
    6. 'pass' → logprob: -11.006265640258789
    7. '#' → logprob: -13.006265640258789
    8. '
' → logprob: -13.131265640258789
    9. 'temps' → logprob: -13.506265640258789
    10. '	temp' → logprob: -13.631265640258789

Token 1349: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.37669745087623596
    2. ' continue' → logprob: -1.3766974210739136
    3. 'pe' → logprob: -4.126697540283203
    4. 'ne' → logprob: -4.501697540283203
    5. 'pass' → logprob: -4.876697540283203
    6. 'contin' → logprob: -5.001697540283203
    7. 'can' → logprob: -5.376697540283203
    8. 'skip' → logprob: -5.626697540283203
    9. 'n' → logprob: -6.376697540283203
    10. ' can' → logprob: -6.626697540283203

Token 1350: ' essayer' (ID: 92713)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.1040130853652954
    2. 'cho' → logprob: -1.7290130853652954
    3. 'faire' → logprob: -1.8540130853652954
    4. 'also' → logprob: -2.354012966156006
    5. 'pass' → logprob: -3.354012966156006
    6. 'contin' → logprob: -3.479012966156006
    7. 'a' → logprob: -3.479012966156006
    8. 'dfs' → logprob: -3.854012966156006
    9. 'lais' → logprob: -3.979012966156006
    10. 'choose' → logprob: -4.229012966156006

Token 1351: '
' (ID: 198)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.006861601024866104
    2. '   ' → logprob: -5.381861686706543
    3. ' temp' → logprob: -6.131861686706543
    4. '       ' → logprob: -10.256861686706543
    5. 'temps' → logprob: -11.506861686706543
    6. '	temp' → logprob: -12.006861686706543
    7. '
' → logprob: -12.381861686706543
    8. 'dfs' → logprob: -13.131861686706543
    9. '(temp' → logprob: -13.381861686706543
    10. '[temp' → logprob: -13.881861686706543

Token 1352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005843686521984637
    2. 'temp' → logprob: -7.875584602355957
    3. '```' → logprob: -9.250584602355957
    4. ' temp' → logprob: -9.375584602355957
    5. '   ' → logprob: -11.000584602355957
    6. '           ' → logprob: -12.625584602355957
    7. '``' → logprob: -13.750584602355957
    8. 'dfs' → logprob: -14.375584602355957
    9. '        
' → logprob: -15.250584602355957
    10. ' ' → logprob: -15.375584602355957

Token 1353: ' #' (ID: 1069)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.00037323508877307177
    2. ' temp' → logprob: -8.125372886657715
    3. '       ' → logprob: -9.625372886657715
    4. '   ' → logprob: -12.125372886657715
    5. 'temps' → logprob: -13.125372886657715
    6. 'tmp' → logprob: -14.000372886657715
    7. 'dfs' → logprob: -14.125372886657715
    8. 'res' → logprob: -14.250372886657715
    9. '```' → logprob: -14.875372886657715
    10. '           ' → logprob: -15.500372886657715

Token 1354: ' mais' (ID: 2899)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -4.656383680412546e-05
    2. '   ' → logprob: -10.500046730041504
    3. ' temp' → logprob: -11.000046730041504
    4. '       ' → logprob: -13.375046730041504
    5. 'temps' → logprob: -15.125046730041504
    6. 'res' → logprob: -15.750046730041504
    7. 'tmp' → logprob: -16.375045776367188
    8. '
' → logprob: -16.625045776367188
    9. '	temp' → logprob: -17.250045776367188
    10. '```' → logprob: -18.125045776367188

Token 1355: ' c' (ID: 274)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.004448039457201958
    2. '#' → logprob: -6.129447937011719
    3. 'res' → logprob: -6.754447937011719
    4. 'pass' → logprob: -7.129447937011719
    5. ' temp' → logprob: -8.879447937011719
    6. 'temps' → logprob: -9.754447937011719
    7. '
' → logprob: -10.129447937011719
    8. '   ' → logprob: -10.129447937011719
    9. '       ' → logprob: -12.504447937011719
    10. 'tmp' → logprob: -12.754447937011719

Token 1356: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.9301527738571167
    2. 'ode' → logprob: -1.1801527738571167
    3. 'continue' → logprob: -2.5551528930664062
    4. 'ould' → logprob: -2.8051528930664062
    5. ''est' → logprob: -3.0551528930664062
    6. 'e' → logprob: -3.4301528930664062
    7. '#' → logprob: -3.5551528930664062
    8. 'est' → logprob: -4.555152893066406
    9. 'annot' → logprob: -5.430152893066406
    10. '```' → logprob: -5.430152893066406

Token 1357: ' inutile' (ID: 157748)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.014797329902649
    2. 'temp' → logprob: -1.389797329902649
    3. 'dfs' → logprob: -1.764797329902649
    4. 'equ' → logprob: -2.5147972106933594
    5. 'ignored' → logprob: -3.3897972106933594
    6. '   ' → logprob: -4.014797210693359
    7. 'inut' → logprob: -4.389797210693359
    8. 'pas' → logprob: -4.764797210693359
    9. 'im' → logprob: -5.014797210693359
    10. 'equal' → logprob: -5.139797210693359

Token 1358: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40142425894737244
    2. '   ' → logprob: -1.2764242887496948
    3. 'pass' → logprob: -3.4014241695404053
    4. ' pass' → logprob: -4.401424407958984
    5. 'return' → logprob: -6.651424407958984
    6. 'temp' → logprob: -6.776424407958984
    7. ',' → logprob: -7.276424407958984
    8. '
' → logprob: -7.776424407958984
    9. '           ' → logprob: -7.776424407958984
    10. ':' → logprob: -7.901424407958984

Token 1359: ' le' (ID: 505)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.2328289896249771
    2. '       ' → logprob: -2.2328290939331055
    3. ' pass' → logprob: -3.3578290939331055
    4. 'temp' → logprob: -3.9828290939331055
    5. '   ' → logprob: -4.2328290939331055
    6. 'res' → logprob: -4.3578290939331055
    7. 'return' → logprob: -4.3578290939331055
    8. '#' → logprob: -5.3578290939331055
    9. 'continue' → logprob: -7.3578290939331055
    10. ' res' → logprob: -7.6078290939331055

Token 1360: ' problème' (ID: 35630)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.19034846127033234
    2. 'pass' → logprob: -2.3153483867645264
    3. 'continue' → logprob: -3.6903483867645264
    4. 'return' → logprob: -3.8153483867645264
    5. 'temp' → logprob: -4.3153486251831055
    6. '#' → logprob: -5.4403486251831055
    7. 'dfs' → logprob: -5.4403486251831055
    8. '```' → logprob: -6.0653486251831055
    9. ' res' → logprob: -7.0653486251831055
    10. '1' → logprob: -8.190348625183105

Token 1361: ' dit' (ID: 4758)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continues' → logprob: -1.2324129343032837
    2. 'continue' → logprob: -1.2324129343032837
    3. '   ' → logprob: -1.3574129343032837
    4. ' continue' → logprob: -2.482412815093994
    5. 'contin' → logprob: -3.232412815093994
    6. '       ' → logprob: -4.732412815093994
    7. '_continue' → logprob: -5.482412815093994
    8. '<|end|>' → logprob: -5.607412815093994
    9. ')' → logprob: -5.732412815093994
    10. '	continue' → logprob: -5.732412815093994

Token 1362: ' que' (ID: 661)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.12637819349765778
    2. '#' → logprob: -2.876378297805786
    3. '       ' → logprob: -3.001378297805786
    4. '   ' → logprob: -5.251378059387207
    5. 'continue' → logprob: -5.376378059387207
    6. '           ' → logprob: -6.751378059387207
    7. 'que' → logprob: -7.376378059387207
    8. 'qu' → logprob: -8.001378059387207
    9. 'contin' → logprob: -8.876378059387207
    10. '```' → logprob: -9.001378059387207

Token 1363: ' on' (ID: 402)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.36653682589530945
    2. '#' → logprob: -1.8665368556976318
    3. 'res' → logprob: -2.741536855697632
    4. 'on' → logprob: -2.866536855697632
    5. 'div' → logprob: -3.741536855697632
    6. 'temp' → logprob: -5.741536617279053
    7. 'le' → logprob: -6.991536617279053
    8. 'la' → logprob: -7.116536617279053
    9. 'return' → logprob: -7.366536617279053
    10. 'nous' → logprob: -8.116537094116211

Token 1364: ' ne' (ID: 453)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.49364936351776123
    2. ' ne' → logprob: -1.3686493635177612
    3. 'pe' → logprob: -2.368649482727051
    4. ' continue' → logprob: -4.743649482727051
    5. 'continue' → logprob: -4.993649482727051
    6. 'n' → logprob: -5.118649482727051
    7. ' peux' → logprob: -5.243649482727051
    8. 'can' → logprob: -5.493649482727051
    9. ' can' → logprob: -5.493649482727051
    10. 'cannot' → logprob: -6.743649482727051

Token 1365: ' change' (ID: 3343)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.7152626514434814
    2. 'change' → logprob: -1.7152626514434814
    3. 'f' → logprob: -1.9652626514434814
    4. 'pas' → logprob: -2.4652626514434814
    5. 'pe' → logprob: -2.5902626514434814
    6. 'return' → logprob: -4.590262413024902
    7. 'div' → logprob: -4.965262413024902
    8. 'can' → logprob: -6.340262413024902
    9. ' change' → logprob: -6.465262413024902
    10. 'fait' → logprob: -6.465262413024902

Token 1366: ' pas' (ID: 2173)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.049208663403987885
    2. ' rien' → logprob: -3.049208641052246
    3. 'pas' → logprob: -7.424208641052246
    4. '```' → logprob: -11.674208641052246
    5. ' pas' → logprob: -12.299208641052246
    6. '_r' → logprob: -12.924208641052246
    7. 'strict' → logprob: -13.424208641052246
    8. '	r' → logprob: -13.924208641052246
    9. 'n' → logprob: -14.049208641052246
    10. ' r' → logprob: -14.424208641052246

Token 1367: ' vitesse' (ID: 71752)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.37821894884109497
    2. '   ' → logprob: -1.8782188892364502
    3. 'return' → logprob: -1.8782188892364502
    4. ' pass' → logprob: -5.253219127655029
    5. '```' → logprob: -6.378219127655029
    6. '       ' → logprob: -6.503219127655029
    7. ' return' → logprob: -8.378218650817871
    8. 'temp' → logprob: -8.503218650817871
    9. '	pass' → logprob: -9.628218650817871
    10. '    
' → logprob: -10.253218650817871

Token 1368: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013911258429288864
    2. 'return' → logprob: -5.513911247253418
    3. '       ' → logprob: -5.638911247253418
    4. 'pass' → logprob: -5.763911247253418
    5. ' pass' → logprob: -7.013911247253418
    6. ':return' → logprob: -7.388911247253418
    7. ':' → logprob: -7.513911247253418
    8. '```' → logprob: -8.263911247253418
    9. ' return' → logprob: -8.513911247253418
    10. '    
' → logprob: -9.138911247253418

Token 1369: ' la' (ID: 557)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.5678359270095825
    2. 'speed' → logprob: -1.1928359270095825
    3. ' on' → logprob: -2.942835807800293
    4. ' speed' → logprob: -3.317835807800293
    5. 'div' → logprob: -4.067835807800293
    6. 'v' → logprob: -4.192835807800293
    7. 'not' → logprob: -5.942835807800293
    8. 'we' → logprob: -6.442835807800293
    9. 'remaining' → logprob: -7.067835807800293
    10. ' vitesse' → logprob: -7.317835807800293

Token 1370: ' vitesse' (ID: 71752)
  Prédit: ' vitesse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vitesse' → logprob: -1.0108550786972046
    2. 'v' → logprob: -1.2608550786972046
    3. ' speed' → logprob: -1.6358550786972046
    4. 'speed' → logprob: -2.010855197906494
    5. 'div' → logprob: -4.135855197906494
    6. ' v' → logprob: -7.135855197906494
    7. ' division' → logprob: -7.135855197906494
    8. ' div' → logprob: -7.260855197906494
    9. ' vit' → logprob: -7.385855197906494
    10. 'division' → logprob: -7.385855197906494

Token 1371: ' normale' (ID: 57494)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.28786879777908325
    2. 'est' → logprob: -2.2878687381744385
    3. '==' → logprob: -2.7878687381744385
    4. ' ==' → logprob: -3.9128687381744385
    5. ' is' → logprob: -4.162868976593018
    6. 'exp' → logprob: -4.537868976593018
    7. 'div' → logprob: -4.537868976593018
    8. '_exp' → logprob: -4.537868976593018
    9. ' n' → logprob: -4.662868976593018
    10. 'n' → logprob: -6.287868976593018

Token 1372: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44986996054649353
    2. '       ' → logprob: -1.449869990348816
    3. ')' → logprob: -2.8248698711395264
    4. '   ' → logprob: -3.5748698711395264
    5. '):' → logprob: -3.6998698711395264
    6. ',' → logprob: -5.3248701095581055
    7. '.' → logprob: -5.8248701095581055
    8. ':
' → logprob: -6.5748701095581055
    9. '<|end|>' → logprob: -7.0748701095581055
    10. '```' → logprob: -7.1998701095581055

Token 1373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00790057610720396
    2. '   ' → logprob: -5.382900714874268
    3. ',' → logprob: -7.132900714874268
    4. '```' → logprob: -7.132900714874268
    5. ':' → logprob: -7.882900714874268
    6. '           ' → logprob: -8.13290023803711
    7. '<|end|>' → logprob: -8.75790023803711
    8. '<|end|>' → logprob: -8.75790023803711
    9. ' =' → logprob: -9.25790023803711
    10. ':
' → logprob: -9.50790023803711

Token 1374: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.2013493776321411
    2. '       ' → logprob: -1.4513493776321411
    3. ' pass' → logprob: -1.4513493776321411
    4. 'return' → logprob: -2.0763492584228516
    5. ' temp' → logprob: -3.3263492584228516
    6. 'pass' → logprob: -3.3263492584228516
    7. 'temp' → logprob: -4.451349258422852
    8. '           ' → logprob: -5.076349258422852
    9. '   ' → logprob: -5.201349258422852
    10. ' res' → logprob: -5.701349258422852

Token 1375: ' donc' (ID: 14206)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.7545671463012695
    2. '       ' → logprob: -1.1295671463012695
    3. 'return' → logprob: -1.7545671463012695
    4. 'temp' → logprob: -4.3795671463012695
    5. ' pass' → logprob: -4.5045671463012695
    6. 'res' → logprob: -5.7545671463012695
    7. ' return' → logprob: -6.1295671463012695
    8. '   ' → logprob: -6.2545671463012695
    9. 'continue' → logprob: -7.1295671463012695
    10. '           ' → logprob: -7.5045671463012695

Token 1376: ' ne' (ID: 453)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.04447798803448677
    2. 'temp' → logprob: -3.294477939605713
    3. '   ' → logprob: -6.169477939605713
    4. 'res' → logprob: -6.169477939605713
    5. '#' → logprob: -6.919477939605713
    6. '       ' → logprob: -7.169477939605713
    7. ' pass' → logprob: -8.044478416442871
    8. 'return' → logprob: -9.919478416442871
    9. 'temps' → logprob: -10.919478416442871
    10. 'continue' → logprob: -11.169478416442871

Token 1377: ' rien' (ID: 23082)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.4795096814632416
    2. 'r' → logprob: -0.979509711265564
    3. 'pass' → logprob: -5.6045098304748535
    4. 'continue' → logprob: -6.7295098304748535
    5. ' rien' → logprob: -8.604509353637695
    6. 'f' → logprob: -9.729509353637695
    7. 'faire' → logprob: -9.854509353637695
    8. 'nothing' → logprob: -10.229509353637695
    9. 'fait' → logprob: -10.229509353637695
    10. '#' → logprob: -10.479509353637695

Token 1378: ' faire' (ID: 8119)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.07977215945720673
    2. ' faire' → logprob: -2.7047722339630127
    3. 'changer' → logprob: -5.579771995544434
    4. 'f' → logprob: -6.704771995544434
    5. 'do' → logprob: -6.704771995544434
    6. '   ' → logprob: -6.829771995544434
    7. ' changer' → logprob: -7.204771995544434
    8. '       ' → logprob: -7.579771995544434
    9. '               ' → logprob: -7.954771995544434
    10. 'change' → logprob: -8.454771995544434

Token 1379: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028199533000588417
    2. 'return' → logprob: -4.278199672698975
    3. 'pass' → logprob: -5.028199672698975
    4. '    
' → logprob: -5.903199672698975
    5. ')' → logprob: -7.028199672698975
    6. '       ' → logprob: -7.278199672698975
    7. '```' → logprob: -7.278199672698975
    8. '<|end|>' → logprob: -7.403199672698975
    9. '
' → logprob: -7.653199672698975
    10. 'else' → logprob: -8.153199195861816

Token 1380: ' équ' (ID: 18899)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -1.1228256225585938
    2. 'temp' → logprob: -1.8728256225585938
    3. 'already' → logprob: -1.9978256225585938
    4. 'res' → logprob: -2.4978256225585938
    5. 'dé' → logprob: -2.6228256225585938
    6. 's' → logprob: -2.9978256225585938
    7. 'dfs' → logprob: -3.1228256225585938
    8. 'la' → logprob: -3.3728256225585938
    9. 'le' → logprob: -3.6228256225585938
    10. 'covered' → logprob: -4.247825622558594

Token 1381: 'ivalent' (ID: 19253)
  Prédit: 'ivalent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivalent' → logprob: -0.6777102947235107
    2. 'iv' → logprob: -0.9277102947235107
    3. '
' → logprob: -2.9277102947235107
    4. 'v' → logprob: -4.67771053314209
    5. 'ival' → logprob: -4.80271053314209
    6. '}
' → logprob: -5.05271053314209
    7. 'i' → logprob: -5.67771053314209
    8. ' =' → logprob: -6.05271053314209
    9. '}' → logprob: -6.17771053314209
    10. '_' → logprob: -6.30271053314209

Token 1382: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16458526253700256
    2. 'return' → logprob: -1.9145852327346802
    3. ')' → logprob: -6.164585113525391
    4. '    
' → logprob: -6.914585113525391
    5. ' return' → logprob: -7.914585113525391
    6. '<|end|>' → logprob: -7.914585113525391
    7. 'pass' → logprob: -8.91458511352539
    8. '```' → logprob: -9.28958511352539
    9. '	return' → logprob: -9.78958511352539
    10. ')return' → logprob: -9.91458511352539

Token 1383: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18985402584075928
    2. '```' → logprob: -2.564854145050049
    3. '       ' → logprob: -3.064854145050049
    4. '):' → logprob: -3.814854145050049
    5. ':' → logprob: -4.189854145050049
    6. ')' → logprob: -4.564854145050049
    7. '):
' → logprob: -8.31485366821289
    8. '<|end|>' → logprob: -8.43985366821289
    9. ':return' → logprob: -8.56485366821289
    10. '``' → logprob: -8.68985366821289

Token 1384: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.006075737066566944
    2. '   ' → logprob: -5.256075859069824
    3. ' pass' → logprob: -7.631075859069824
    4. '       ' → logprob: -8.006075859069824
    5. 'return' → logprob: -11.381075859069824
    6. 'temp' → logprob: -12.256075859069824
    7. '	pass' → logprob: -12.631075859069824
    8. 'res' → logprob: -13.256075859069824
    9. '```' → logprob: -13.881075859069824
    10. '           ' → logprob: -15.506075859069824

Token 1385: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017206385964527726
    2. 'return' → logprob: -6.626720428466797
    3. '    
' → logprob: -8.501720428466797
    4. 'else' → logprob: -9.001720428466797
    5. '```' → logprob: -10.501720428466797
    6. 'elif' → logprob: -10.751720428466797
    7. '
' → logprob: -11.126720428466797
    8. ' return' → logprob: -13.376720428466797
    9. '        
' → logprob: -14.126720428466797
    10. 'if' → logprob: -14.501720428466797

Token 1386: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1360764354467392
    2. 'print' → logprob: -2.1360764503479004
    3. '   ' → logprob: -5.0110764503479
    4. '```' → logprob: -6.2610764503479
    5. 'else' → logprob: -8.011075973510742
    6. 'result' → logprob: -9.636075973510742
    7. 'if' → logprob: -9.886075973510742
    8. ' return' → logprob: -10.136075973510742
    9. 'res' → logprob: -10.886075973510742
    10. 'elif' → logprob: -11.636075973510742

Token 1387: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5763674378395081
    2. 'return' (adapté à ' return') → logprob: -0.8263674378395081
    3. '```' → logprob: -7.826367378234863
    4. ' return' → logprob: -10.701367378234863
    5. '    
' → logprob: -12.326367378234863
    6. '	return' → logprob: -14.076367378234863
    7. ':return' → logprob: -15.326367378234863
    8. '   ' → logprob: -15.826367378234863
    9. '``' → logprob: -15.826367378234863
    10. '
' → logprob: -16.07636833190918

Token 1388: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -4.5491004129871726e-05
    2. ' res' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.500045776367188
    4. '	res' → logprob: -20.125045776367188
    5. 'min' → logprob: -20.375045776367188
    6. '(res' → logprob: -20.750045776367188
    7. 'rés' → logprob: -21.250045776367188
    8. '$res' → logprob: -21.375045776367188
    9. 'return' → logprob: -22.375045776367188
    10. '```' → logprob: -22.625045776367188

Token 1389: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012027313932776451
    2. 'result' → logprob: -7.376202583312988
    3. '```' → logprob: -7.626202583312988
    4. '
' → logprob: -9.501202583312988
    5. '  
' → logprob: -12.751202583312988
    6. '``' → logprob: -12.876202583312988
    7. 'res' → logprob: -13.126202583312988
    8. '    
' → logprob: -13.126202583312988
    9. ' print' → logprob: -13.751202583312988
    10. 'answer' → logprob: -14.251202583312988

Token 1390: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005593468667939305
    2. 'result' → logprob: -7.500559329986572
    3. 'res' → logprob: -12.87555980682373
    4. 'answer' → logprob: -13.37555980682373
    5. '
' → logprob: -13.87555980682373
    6. '```' → logprob: -14.37555980682373
    7. '#' → logprob: -15.62555980682373
    8. 'if' → logprob: -15.75055980682373
    9. ' print' → logprob: -15.87555980682373
    10. 'ans' → logprob: -16.000558853149414

Token 1391: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00021224225929472595
    2. '(' → logprob: -8.500212669372559
    3. 'dfs' → logprob: -12.375212669372559
    4. '(df' → logprob: -13.125212669372559
    5. '(f' → logprob: -14.625212669372559
    6. '(
' → logprob: -14.625212669372559
    7. '(int' → logprob: -14.875212669372559
    8. 'd' → logprob: -15.250212669372559
    9. '()' → logprob: -15.250212669372559
    10. '((' → logprob: -15.625212669372559

Token 1392: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -2.8444881536415778e-05
    2. '(fs' → logprob: -10.625028610229492
    3. 'f' → logprob: -13.250028610229492
    4. 's' → logprob: -14.250028610229492
    5. 'efs' → logprob: -14.250028610229492
    6. ' fs' → logprob: -15.000028610229492
    7. '(t' → logprob: -15.500028610229492
    8. 'dfs' → logprob: -16.125028610229492
    9. 'FS' → logprob: -16.250028610229492
    10. '(' → logprob: -16.625028610229492

Token 1393: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.12694691121578217
    2. 't' → logprob: -2.1269469261169434
    3. '(' → logprob: -11.501946449279785
    4. ')t' → logprob: -12.376946449279785
    5. ' t' → logprob: -12.876946449279785
    6. ')' → logprob: -13.501946449279785
    7. '(
' → logprob: -15.001946449279785
    8. '	t' → logprob: -16.6269474029541
    9. ')(' → logprob: -16.7519474029541
    10. '_t' → logprob: -16.8769474029541

Token 1394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002787359117064625
    2. '0' → logprob: -8.25027847290039
    3. ' ,' → logprob: -11.00027847290039
    4. '(' → logprob: -15.00027847290039
    5. ')' → logprob: -15.75027847290039
    6. '```' → logprob: -16.12527847290039
    7. '[' → logprob: -16.37527847290039
    8. ',
' → logprob: -16.87527847290039
    9. ' ' → logprob: -17.50027847290039
    10. '1' → logprob: -18.00027847290039

Token 1395: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '۰' → logprob: -21.625
    4. '```' → logprob: -22.5
    5. '   ' → logprob: -23.5
    6. '000' → logprob: -23.75
    7. ')' → logprob: -24.1875
    8. '1' → logprob: -24.3125
    9. '０' → logprob: -24.4375
    10. '[' → logprob: -24.4375

Token 1396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.125
    3. '۰' → logprob: -22.0
    4. '```' → logprob: -23.375
    5. ')' → logprob: -23.75
    6. '000' → logprob: -24.0
    7. '٠' → logprob: -24.625
    8. '०' → logprob: -24.8125
    9. '00' → logprob: -24.8125
    10. '  ' → logprob: -24.875

Token 1397: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3868976831436157
    2. ')' → logprob: -1.1368976831436157
    3. '())' → logprob: -10.886898040771484
    4. '()))' → logprob: -12.761898040771484
    5. ')
' → logprob: -13.261898040771484
    6. ')))' → logprob: -13.886898040771484
    7. '()' → logprob: -14.136898040771484
    8. '))
' → logprob: -14.386898040771484
    9. '})' → logprob: -14.886898040771484
    10. ')}' → logprob: -15.261898040771484


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1395
Tokens correctement prédits (1ère position, stricte): 276
Tokens correctement prédits (1ère position, avec adaptation): 295
Tokens correctement prédits (top 10): 757
Précision stricte (1ère position): 19.78%
Précision adaptée (1ère position): 21.15%
Précision (top 10): 54.27%
================================================================================
