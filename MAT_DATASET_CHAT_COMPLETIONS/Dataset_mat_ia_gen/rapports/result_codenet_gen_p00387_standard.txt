================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A, B = map(int, input().split())
print((B + A - 1) // A)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' B' (ID: 418)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14612485468387604
    2. '+' → logprob: -2.771124839782715
    3. ')' → logprob: -4.146124839782715
    4. '.' → logprob: -4.396124839782715
    5. '[' → logprob: -4.521124839782715
    6. ',' → logprob: -4.771124839782715
    7. '(' → logprob: -4.896124839782715
    8. ' =' → logprob: -4.896124839782715
    9. ';' → logprob: -5.021124839782715
    10. ':' → logprob: -7.396124839782715

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4056076407432556
    2. '10' → logprob: -2.0306077003479004
    3. '1' → logprob: -2.5306077003479004
    4. '0' → logprob: -2.7806077003479004
    5. '5' → logprob: -4.2806077003479
    6. '[]' → logprob: -5.0306077003479
    7. '[' → logprob: -5.1556077003479
    8. ' B' → logprob: -5.2806077003479
    9. 'input' → logprob: -5.6556077003479
    10. 'map' → logprob: -5.7806077003479

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4493207037448883
    2. '<|end|>' → logprob: -1.074320673942566
    3. '<|end|>' → logprob: -4.9493207931518555
    4. ')' → logprob: -5.4493207931518555
    5. '(lambda' → logprob: -5.9493207931518555
    6. '```' → logprob: -6.0743207931518555
    7. '(user' → logprob: -7.1993207931518555
    8. '(token' → logprob: -7.4493207931518555
    9. '(int' → logprob: -8.824320793151855
    10. '(Token' → logprob: -9.324320793151855

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7205661535263062
    2. '(input' → logprob: -1.2205661535263062
    3. '(' → logprob: -1.9705661535263062
    4. ',' → logprob: -2.8455662727355957
    5. ')(' → logprob: -5.470566272735596
    6. '(user' → logprob: -6.095566272735596
    7. '`)' → logprob: -6.595566272735596
    8. 'input' → logprob: -6.595566272735596
    9. '(token' → logprob: -6.595566272735596
    10. '```' → logprob: -6.595566272735596

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02984466589987278
    2. ' input' → logprob: -3.5298447608947754
    3. '(input' → logprob: -9.404844284057617
    4. ')' → logprob: -11.779844284057617
    5. ',input' → logprob: -13.404844284057617
    6. '=input' → logprob: -13.779844284057617
    7. '<input' → logprob: -14.529844284057617
    8. ' ' → logprob: -15.029844284057617
    9. '```' → logprob: -15.279844284057617
    10. '	input' → logprob: -15.529844284057617

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41398921608924866
    2. '())' → logprob: -1.7889891862869263
    3. '()' → logprob: -2.163989305496216
    4. ')' → logprob: -3.413989305496216
    5. '('' → logprob: -4.663989067077637
    6. '(()' → logprob: -5.538989067077637
    7. '(""))' → logprob: -5.788989067077637
    8. '`()' → logprob: -6.538989067077637
    9. '().' → logprob: -7.288989067077637
    10. '());' → logprob: -7.413989067077637

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0006469102227129042
    2. 'strip' → logprob: -7.375647068023682
    3. 'rstrip' → logprob: -11.625646591186523
    4. ' split' → logprob: -11.875646591186523
    5. ')' → logprob: -12.875646591186523
    6. 'read' → logprob: -13.625646591186523
    7. '(split' → logprob: -15.250646591186523
    8. 'spl' → logprob: -15.875646591186523
    9. 'startswith' → logprob: -16.000646591186523
    10. 'replace' → logprob: -16.625646591186523

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17063438892364502
    2. '))' → logprob: -2.1706342697143555
    3. '())' → logprob: -3.1706342697143555
    4. '()))' → logprob: -7.9206342697143555
    5. '()' → logprob: -8.295634269714355
    6. '`)' → logprob: -9.420634269714355
    7. ')`' → logprob: -10.295634269714355
    8. ')))' → logprob: -11.295634269714355
    9. '(' → logprob: -11.545634269714355
    10. '),' → logprob: -12.045634269714355

Token 11: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9843972325325012
    2. '#' → logprob: -1.4843971729278564
    3. '\n' → logprob: -1.8593971729278564
    4. '+
' → logprob: -2.9843971729278564
    5. '*' → logprob: -3.1093971729278564
    6. 'if' → logprob: -3.2343971729278564
    7. '
' → logprob: -3.4843971729278564
    8. '`' → logprob: -3.8593971729278564
    9. '```' → logprob: -4.6093974113464355
    10. '\' → logprob: -4.9843974113464355

Token 12: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014299978502094746
    2. '('' → logprob: -7.126430034637451
    3. '("("' → logprob: -7.626430034637451
    4. '(A' → logprob: -9.751429557800293
    5. '((' → logprob: -10.751429557800293
    6. '(f' → logprob: -11.501429557800293
    7. '("""' → logprob: -11.626429557800293
    8. '()' → logprob: -11.626429557800293
    9. '(`' → logprob: -12.376429557800293
    10. '(input' → logprob: -13.251429557800293

Token 13: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01622908189892769
    2. ' A' → logprob: -5.141229152679443
    3. 'max' → logprob: -5.516229152679443
    4. 'min' → logprob: -6.141229152679443
    5. 'abs' → logprob: -6.891229152679443
    6. '(A' → logprob: -7.016229152679443
    7. 'a' → logprob: -7.891229152679443
    8. ' (' → logprob: -8.141228675842285
    9. '(max' → logprob: -8.266228675842285
    10. ' max' → logprob: -8.391228675842285

Token 14: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1138964295387268
    2. ' -' → logprob: -2.363896369934082
    3. '-A' → logprob: -4.363896369934082
    4. '+' → logprob: -7.988896369934082
    5. ')' → logprob: -8.363896369934082
    6. '//' → logprob: -8.863896369934082
    7. ' //' → logprob: -10.363896369934082
    8. '*' → logprob: -10.363896369934082
    9. '>' → logprob: -10.738896369934082
    10. '-B' → logprob: -11.113896369934082

Token 15: ' A' (ID: 355)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9012762308120728
    2. ' A' → logprob: -0.9012762308120728
    3. 'A' → logprob: -2.026276111602783
    4. ' ' → logprob: -3.276276111602783
    5. ' (' → logprob: -4.776276111602783
    6. '(A' → logprob: -5.276276111602783
    7. '(' → logprob: -5.651276111602783
    8. '3' → logprob: -8.026276588439941
    9. '7' → logprob: -8.151276588439941
    10. '2' → logprob: -8.776276588439941

Token 16: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001894841087050736
    2. '-' → logprob: -7.626894950866699
    3. '))' → logprob: -7.876894950866699
    4. ' -' → logprob: -8.1268949508667
    5. ')//' → logprob: -8.1268949508667
    6. ' )' → logprob: -8.3768949508667
    7. ')%' → logprob: -9.0018949508667
    8. '//' → logprob: -10.8768949508667
    9. '*' → logprob: -11.1268949508667
    10. ')#' → logprob: -11.5018949508667

Token 17: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015029559144750237
    2. ' ' → logprob: -6.626502990722656
    3. '2' → logprob: -8.751502990722656
    4. '3' → logprob: -11.751502990722656
    5. ')' → logprob: -11.876502990722656
    6. '-' → logprob: -13.626502990722656
    7. '   ' → logprob: -15.251502990722656
    8. '10' → logprob: -15.376502990722656
    9. '  ' → logprob: -15.501502990722656
    10. '4' → logprob: -15.564002990722656

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.244413766078651e-05
    2. '2' → logprob: -10.125082015991211
    3. ' ' → logprob: -10.125082015991211
    4. '3' → logprob: -13.875082015991211
    5. ')' → logprob: -14.250082015991211
    6. '-' → logprob: -16.62508201599121
    7. '10' → logprob: -16.81258201599121
    8. '0' → logprob: -17.12508201599121
    9. 'B' → logprob: -17.18758201599121
    10. '4' → logprob: -17.31258201599121

Token 19: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004228220321238041
    2. ')//' → logprob: -5.629228115081787
    3. ' )' → logprob: -7.379228115081787
    4. '//' → logprob: -12.629228591918945
    5. ' //' → logprob: -15.629228591918945
    6. '")' → logprob: -15.879228591918945
    7. ')#' → logprob: -15.879228591918945
    8. '）' → logprob: -16.379228591918945
    9. '`)' → logprob: -16.879228591918945
    10. '```' → logprob: -17.629228591918945

Token 20: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03653653338551521
    2. ')//' → logprob: -3.411536455154419
    3. '//' → logprob: -5.911536693572998
    4. ' )' → logprob: -9.03653621673584
    5. ' //' → logprob: -9.91153621673584
    6. ')#' → logprob: -12.53653621673584
    7. '#' → logprob: -13.03653621673584
    8. '```' → logprob: -14.03653621673584
    9. '`' → logprob: -14.28653621673584
    10. '`)' → logprob: -14.91153621673584

Token 21: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0007101670489646494
    2. ' A' → logprob: -7.2507100105285645
    3. 'B' → logprob: -16.250709533691406
    4. '	A' → logprob: -17.625709533691406
    5. ' ' → logprob: -18.500709533691406
    6. '>A' → logprob: -19.000709533691406
    7. ')' → logprob: -20.250709533691406
    8. '   ' → logprob: -20.375709533691406
    9. '_A' → logprob: -20.875709533691406
    10. '  ' → logprob: -20.875709533691406

Token 22: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. '))' → logprob: -13.375003814697266
    3. '`)' → logprob: -13.625003814697266
    4. ' )' → logprob: -15.250003814697266
    5. '')' → logprob: -15.750003814697266
    6. ')`' → logprob: -15.875003814697266
    7. ')
' → logprob: -16.000003814697266
    8. '*' → logprob: -16.125003814697266
    9. '```' → logprob: -16.250003814697266
    10. '）' → logprob: -17.250003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 20
Tokens correctement prédits (1ère position, stricte): 4
Tokens correctement prédits (1ère position, avec adaptation): 4
Tokens correctement prédits (top 10): 15
Précision stricte (1ère position): 20.00%
Précision adaptée (1ère position): 20.00%
Précision (top 10): 75.00%
================================================================================
