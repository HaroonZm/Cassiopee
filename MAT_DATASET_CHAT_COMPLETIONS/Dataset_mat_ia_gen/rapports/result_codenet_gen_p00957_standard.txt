================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
l, k = map(int, input().split())

from functools import lru_cache

# States: (remaining_thickness, top_disk_color)
# disk_color: 0 = dark, 1 = white
# top and bottom disks must be dark
# adjacent disks must alternate colors
# thick disks thickness = k, thin disks thickness = 1

@lru_cache(None)
def dp(thickness, top_color, bottom_color):
    if thickness < 0:
        return 0
    if thickness == 0:
        # thickness exactly used; check top == bottom == dark (0)
        return 1 if top_color == 0 and bottom_color == 0 else 0
    res = 0
    # Choose next disk thickness and color according to alternation
    # Allowed disks:
    # Dark thin (d), thickness 1
    # Dark thick (D), thickness k
    # White thin (w), thickness 1
    # No white thick disks

    # current top disk color is top_color
    # Next disk on top must be opposite color
    next_color = 1 - top_color
    # If next_color == 0 (dark), can choose thick or thin dark disk
    if next_color == 0:
        # dark thin disk
        res += dp(thickness - 1, next_color, bottom_color)
        # dark thick disk
        res += dp(thickness - k, next_color, bottom_color)
    else:
        # white thin disk only
        res += dp(thickness - 1, next_color, bottom_color)
    return res

# We must start and end with dark disks; at least one disk
# So thickness at most l, start with dark disk bottom_color=0, top_color=0, total thickness l
# But dp counts from top to bottom (top disk color parameter denotes current top disk)
# Let's define a helper to build from bottom disk upwards, starting with dark disk

@lru_cache(None)
def count(thick):
    # count possible poles (top disk color is dark 0, bottom disk color is dark 0)
    # The parameter thick is the remaining thickness to fill
    return dp(thick, 0, 0)

print(count(l))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'l' (ID: 75)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' k' (ID: 372)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31526392698287964
    2. ',' → logprob: -1.4402639865875244
    3. ' =' → logprob: -3.8152639865875244
    4. '.' → logprob: -5.690263748168945
    5. '+' → logprob: -5.940263748168945
    6. '[' → logprob: -6.190263748168945
    7. ' ' → logprob: -6.190263748168945
    8. ')' → logprob: -7.815263748168945
    9. '(' → logprob: -8.565263748168945
    10. ' ,' → logprob: -8.565263748168945

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1619933396577835
    2. '0' → logprob: -1.911993384361267
    3. '1' → logprob: -7.661993503570557
    4. ' l' → logprob: -7.661993503570557
    5. '10' → logprob: -8.286993026733398
    6. ' [],' → logprob: -8.786993026733398
    7. ' map' → logprob: -9.911993026733398
    8. ' []' → logprob: -9.911993026733398
    9. 'l' → logprob: -10.036993026733398
    10. '[' → logprob: -10.286993026733398

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016679834574460983
    2. '(lambda' → logprob: -4.766679763793945
    3. '```' → logprob: -5.766679763793945
    4. '<|end|>' → logprob: -5.766679763793945
    5. ')' → logprob: -7.766679763793945
    6. '(user' → logprob: -8.391679763793945
    7. 'user' → logprob: -8.891679763793945
    8. '(token' → logprob: -9.391679763793945
    9. '<|end|>' → logprob: -9.516679763793945
    10. ' (' → logprob: -10.016679763793945

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01336491759866476
    2. 'input' → logprob: -5.263364791870117
    3. '(' → logprob: -5.513364791870117
    4. ')' → logprob: -5.638364791870117
    5. ' input' → logprob: -8.888364791870117
    6. '(user' → logprob: -9.263364791870117
    7. '```' → logprob: -9.888364791870117
    8. '=input' → logprob: -10.388364791870117
    9. '[input' → logprob: -10.513364791870117
    10. ',input' → logprob: -10.888364791870117

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04878958687186241
    2. ' input' → logprob: -3.0487895011901855
    3. '(input' → logprob: -8.548789978027344
    4. ')' → logprob: -11.923789978027344
    5. ',input' → logprob: -14.298789978027344
    6. '=input' → logprob: -14.923789978027344
    7. '<input' → logprob: -14.923789978027344
    8. '	input' → logprob: -16.048789978027344
    9. '[input' → logprob: -16.048789978027344
    10. 'user' → logprob: -16.548789978027344

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3980253040790558
    2. '())' → logprob: -1.1480252742767334
    3. '(' → logprob: -5.2730255126953125
    4. ')' → logprob: -6.1480255126953125
    5. '());' → logprob: -6.7730255126953125
    6. '().' → logprob: -7.3980255126953125
    7. '(()' → logprob: -7.6480255126953125
    8. '();)' → logprob: -8.398025512695312
    9. '()))' → logprob: -8.773025512695312
    10. '`()' → logprob: -8.898025512695312

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0013705958845093846
    2. 'strip' → logprob: -6.626370429992676
    3. 'rstrip' → logprob: -10.626370429992676
    4. ' split' → logprob: -11.126370429992676
    5. ')' → logprob: -12.501370429992676
    6. '(split' → logprob: -13.876370429992676
    7. 'read' → logprob: -15.126370429992676
    8. 'spl' → logprob: -15.126370429992676
    9. '```' → logprob: -15.626370429992676
    10. 'startswith' → logprob: -15.751370429992676

Token 10: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5836955308914185
    2. '())' → logprob: -0.8336955308914185
    3. '))' → logprob: -5.208695411682129
    4. '()' → logprob: -6.458695411682129
    5. '()))' → logprob: -7.708695411682129
    6. '`)' → logprob: -9.083695411682129
    7. '(' → logprob: -9.708695411682129
    8. ' ())' → logprob: -11.208695411682129
    9. ' )' → logprob: -12.083695411682129
    10. ')`' → logprob: -12.208695411682129

Token 11: 'from' (ID: 2845)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0649738311767578
    2. 'a' → logprob: -1.1899738311767578
    3. 'n' → logprob: -1.9399738311767578
    4. 'if' → logprob: -3.189973831176758
    5. 'd' → logprob: -3.314973831176758
    6. 'r' → logprob: -3.689973831176758
    7. 'i' → logprob: -3.814973831176758
    8. 'x' → logprob: -4.064973831176758
    9. '#' → logprob: -4.064973831176758
    10. '`' → logprob: -4.439973831176758

Token 12: ' functools' (ID: 142636)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.27115243673324585
    2. ' collections' → logprob: -1.5211524963378906
    3. 'collections' → logprob: -4.771152496337891
    4. 'math' → logprob: -5.396152496337891
    5. ' sys' → logprob: -5.771152496337891
    6. ' itertools' → logprob: -5.896152496337891
    7. 'sys' → logprob: -9.14615249633789
    8. ' random' → logprob: -10.89615249633789
    9. ' functools' → logprob: -11.52115249633789
    10. '_' → logprob: -11.64615249633789

Token 13: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3870498538017273
    2. ' import' → logprob: -1.137049913406372
    3. '_import' → logprob: -8.762049674987793
    4. '	import' → logprob: -11.137049674987793
    5. ' ' → logprob: -13.012049674987793
    6. '```' → logprob: -13.512049674987793
    7. '-import' → logprob: -14.512049674987793
    8. ' importar' → logprob: -14.512049674987793
    9. '_' → logprob: -14.637049674987793
    10. ' ' → logprob: -14.762049674987793

Token 14: ' l' (ID: 305)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.013397389091551304
    2. 'l' → logprob: -5.263397216796875
    3. 'partial' → logprob: -5.388397216796875
    4. ' reduce' → logprob: -6.013397216796875
    5. 'wrap' → logprob: -7.888397216796875
    6. ' l' → logprob: -8.388397216796875
    7. 'cache' → logprob: -8.638397216796875
    8. 'cmp' → logprob: -8.763397216796875
    9. 'redu' → logprob: -9.138397216796875
    10. ' partial' → logprob: -10.388397216796875

Token 15: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -1.9266199160483666e-05
    2. 'r' → logprob: -12.500019073486328
    3. 'ambda' → logprob: -12.500019073486328
    4. 'reduce' → logprob: -12.625019073486328
    5. '**' → logprob: -13.125019073486328
    6. 'u' → logprob: -13.625019073486328
    7. '##' → logprob: -14.250019073486328
    8. '```' → logprob: -14.250019073486328
    9. '_ru' → logprob: -14.500019073486328
    10. 'ruff' → logprob: -14.625019073486328

Token 16: '_cache' (ID: 27045)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.12718017399311066
    2. '_cache' → logprob: -2.1271800994873047
    3. 'c' → logprob: -8.502180099487305
    4. '```' → logprob: -11.377180099487305
    5. 'che' → logprob: -11.627180099487305
    6. 'Cache' → logprob: -11.752180099487305
    7. 'cached' → logprob: -11.877180099487305
    8. 'ache' → logprob: -12.627180099487305
    9. 'ac' → logprob: -13.502180099487305
    10. ' cache' → logprob: -13.877180099487305

Token 17: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.00033308175625279546
    2. '@

' → logprob: -8.875332832336426
    3. '@
' → logprob: -9.125332832336426
    4. '
' → logprob: -10.500332832336426
    5. '

' → logprob: -10.500332832336426
    6. '```' → logprob: -11.500332832336426
    7. '@n' → logprob: -12.250332832336426
    8. '`' → logprob: -12.750332832336426
    9. '\n' → logprob: -12.875332832336426
    10. '\' → logprob: -13.625332832336426

Token 18: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.00019007037917617708
    2. '@
' → logprob: -8.750189781188965
    3. '@n' → logprob: -11.500189781188965
    4. '```' → logprob: -11.875189781188965
    5. '@

' → logprob: -12.000189781188965
    6. '
' → logprob: -13.750189781188965
    7. '`' → logprob: -13.875189781188965
    8. '@index' → logprob: -13.875189781188965
    9. '@s' → logprob: -14.125189781188965
    10. '@m' → logprob: -14.375189781188965

Token 19: ' States' (ID: 6737)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08660434186458588
    2. 'def' → logprob: -3.711604356765747
    3. ' d' → logprob: -3.836604356765747
    4. ' @' → logprob: -4.336604118347168
    5. '@' → logprob: -4.586604118347168
    6. 'l' → logprob: -4.836604118347168
    7. 'i' → logprob: -7.086604118347168
    8. 's' → logprob: -7.211604118347168
    9. ' l' → logprob: -7.211604118347168
    10. 'de' → logprob: -7.836604118347168

Token 20: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2179075926542282
    2. '=' → logprob: -1.9679075479507446
    3. ' =' → logprob: -3.217907667160034
    4. '#' → logprob: -5.217907428741455
    5. ')' → logprob: -5.592907428741455
    6. ':
' → logprob: -6.217907428741455
    7. ',' → logprob: -6.842907428741455
    8. '[' → logprob: -7.217907428741455
    9. 's' → logprob: -7.842907428741455
    10. ''' → logprob: -8.092907905578613

Token 21: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6037360429763794
    2. 'dp' → logprob: -1.8537360429763794
    3. '0' → logprob: -1.9787360429763794
    4. '@' → logprob: -2.10373592376709
    5. ' (' → logprob: -2.60373592376709
    6. '(' → logprob: -2.97873592376709
    7. '(l' → logprob: -2.97873592376709
    8. '(i' → logprob: -3.60373592376709
    9. '(position' → logprob: -4.22873592376709
    10. '(
' → logprob: -4.35373592376709

Token 22: 'remaining' (ID: 83570)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.40399548411369324
    2. 'l' → logprob: -1.6539955139160156
    3. 'n' → logprob: -3.2789955139160156
    4. 'x' → logprob: -3.7789955139160156
    5. 'pos' → logprob: -4.028995513916016
    6. 'index' → logprob: -4.153995513916016
    7. 'a' → logprob: -4.778995513916016
    8. 'length' → logprob: -5.028995513916016
    9. ' i' → logprob: -5.653995513916016
    10. 'k' → logprob: -5.903995513916016

Token 23: '_th' (ID: 16038)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.573800802230835
    2. '_length' → logprob: -1.573800802230835
    3. ' length' → logprob: -3.073800802230835
    4. 'l' → logprob: -3.198800802230835
    5. 'length' → logprob: -3.448800802230835
    6. '_' → logprob: -4.073801040649414
    7. '_left' → logprob: -4.823801040649414
    8. '_items' → logprob: -5.073801040649414
    9. '_letters' → logprob: -5.198801040649414
    10. '_tokens' → logprob: -5.448801040649414

Token 24: 'ickness' (ID: 46853)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5297797322273254
    2. 'emes' → logprob: -1.1547796726226807
    3. 'eme' → logprob: -3.9047796726226807
    4. 'ree' → logprob: -4.40477991104126
    5. 'r' → logprob: -4.90477991104126
    6. 's' → logprob: -5.02977991104126
    7. 'reshold' → logprob: -5.27977991104126
    8. 'em' → logprob: -5.65477991104126
    9. ',' → logprob: -5.65477991104126
    10. 'is' → logprob: -5.77977991104126

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04395347088575363
    2. ')' → logprob: -3.1689534187316895
    3. 's' → logprob: -7.5439534187316895
    4. ',)' → logprob: -8.293953895568848
    5. '_,' → logprob: -9.918953895568848
    6. '1' → logprob: -10.543953895568848
    7. '_' → logprob: -10.793953895568848
    8. ' ,' → logprob: -10.918953895568848
    9. '),' → logprob: -11.418953895568848
    10. ',
' → logprob: -12.293953895568848

Token 26: ' top' (ID: 2344)
  Prédit: ' remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remaining' → logprob: -0.25631946325302124
    2. 'remaining' → logprob: -2.756319522857666
    3. ' current' → logprob: -3.006319522857666
    4. ' layers' → logprob: -4.318819522857666
    5. ' last' → logprob: -4.381319522857666
    6. ' used' → logprob: -4.631319522857666
    7. ' thickness' → logprob: -5.256319522857666
    8. 'current' → logprob: -5.318819522857666
    9. ' layer' → logprob: -5.756319522857666
    10. 'layers' → logprob: -5.881319522857666

Token 27: '_disk' (ID: 105981)
  Prédit: '_layer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_layer' → logprob: -0.865691065788269
    2. '_color' → logprob: -1.115691065788269
    3. '_material' → logprob: -2.8656911849975586
    4. ')' → logprob: -3.6156911849975586
    5. '_th' → logprob: -3.8656911849975586
    6. '_height' → logprob: -4.240691184997559
    7. ',' → logprob: -4.240691184997559
    8. '_index' → logprob: -4.490691184997559
    9. '_block' → logprob: -4.490691184997559
    10. '_depth' → logprob: -4.615691184997559

Token 28: '_color' (ID: 15576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5564754009246826
    2. '_size' → logprob: -1.5564754009246826
    3. '_index' → logprob: -2.0564754009246826
    4. ',' → logprob: -3.5564754009246826
    5. '_stack' → logprob: -4.431475639343262
    6. 'size' → logprob: -4.556475639343262
    7. '_type' → logprob: -4.931475639343262
    8. '_height' → logprob: -5.181475639343262
    9. '_color' → logprob: -5.306475639343262
    10. '_th' → logprob: -5.931475639343262

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00594479450955987
    2. ',' → logprob: -5.130944728851318
    3. ' )' → logprob: -12.130945205688477
    4. 's' → logprob: -12.755945205688477
    5. '),' → logprob: -13.255945205688477
    6. '_' → logprob: -13.630945205688477
    7. '#' → logprob: -14.005945205688477
    8. ',)' → logprob: -14.005945205688477
    9. '_)' → logprob: -14.130945205688477
    10. 'a' → logprob: -15.130945205688477

Token 30: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.27284643054008484
    2. ')' → logprob: -1.7728464603424072
    3. 'def' → logprob: -3.0228464603424072
    4. 'dp' → logprob: -5.647846221923828
    5. '@
' → logprob: -5.647846221923828
    6. '
' → logprob: -5.772846221923828
    7. ')
' → logprob: -6.397846221923828
    8. ':' → logprob: -6.647846221923828
    9. 'd' → logprob: -7.022846221923828
    10. '

' → logprob: -7.147846221923828

Token 31: ' disk' (ID: 18044)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0035139527171850204
    2. 'def' → logprob: -5.753513813018799
    3. ' @' → logprob: -9.378514289855957
    4. '@
' → logprob: -10.128514289855957
    5. 'dp' → logprob: -10.128514289855957
    6. '
' → logprob: -10.753514289855957
    7. '#' → logprob: -11.003514289855957
    8. ')' → logprob: -11.128514289855957
    9. '@n' → logprob: -11.128514289855957
    10. 'colors' → logprob: -11.378514289855957

Token 32: '_color' (ID: 15576)
  Prédit: '_colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.46801838278770447
    2. 's' → logprob: -1.9680184125900269
    3. '_color' → logprob: -2.3430182933807373
    4. '_th' → logprob: -3.2180182933807373
    5. '_' → logprob: -3.9680182933807373
    6. '_count' → logprob: -4.093018531799316
    7. '_states' → logprob: -4.093018531799316
    8. '_sizes' → logprob: -4.218018531799316
    9. '_stack' → logprob: -4.468018531799316
    10. ' =' → logprob: -5.468018531799316

Token 33: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20773446559906006
    2. ' =' → logprob: -2.4577345848083496
    3. 's' → logprob: -3.0827345848083496
    4. ',' → logprob: -4.08273458480835
    5. '_' → logprob: -4.33273458480835
    6. '=' → logprob: -4.58273458480835
    7. ' )' → logprob: -5.45773458480835
    8. ' ' → logprob: -6.08273458480835
    9. '_colors' → logprob: -6.58273458480835
    10. '_color' → logprob: -6.70773458480835

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27103835344314575
    2. ' ' → logprob: -1.646038293838501
    3. ' int' → logprob: -4.02103853225708
    4. 'int' → logprob: -4.14603853225708
    5. 'None' → logprob: -6.14603853225708
    6. ''' → logprob: -6.39603853225708
    7. '1' → logprob: -6.64603853225708
    8. 'str' → logprob: -6.77103853225708
    9. ' None' → logprob: -6.77103853225708
    10. ' str' → logprob: -7.27103853225708

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10615278780460358
    2. 'int' → logprob: -2.4811527729034424
    3. '1' → logprob: -5.3561530113220215
    4. ''' → logprob: -5.7311530113220215
    5. 'str' → logprob: -6.1061530113220215
    6. ''int' → logprob: -6.4811530113220215
    7. 'None' → logprob: -6.6061530113220215
    8. '-' → logprob: -7.1061530113220215
    9. '"' → logprob: -7.3561530113220215
    10. 'True' → logprob: -7.7311530113220215

Token 36: ' =' (ID: 314)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.47336360812187195
    2. ',' → logprob: -1.0983636379241943
    3. '<|end|>' → logprob: -3.9733636379241943
    4. 'or' → logprob: -4.223363399505615
    5. ' (' → logprob: -5.973363399505615
    6. ' ' → logprob: -6.723363399505615
    7. ' and' → logprob: -6.723363399505615
    8. ' ,' → logprob: -7.098363399505615
    9. ')' → logprob: -7.098363399505615
    10. '=' → logprob: -7.223363399505615

Token 37: ' dark' (ID: 8883)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4310108423233032
    2. 'white' → logprob: -1.5560108423233032
    3. ' white' → logprob: -1.8060108423233032
    4. 'red' → logprob: -2.6810107231140137
    5. ' red' → logprob: -2.6810107231140137
    6. '1' → logprob: -2.6810107231140137
    7. ' ' → logprob: -3.3060107231140137
    8. ' black' → logprob: -3.3060107231140137
    9. 'black' → logprob: -3.5560107231140137
    10. ' blue' → logprob: -4.431010723114014

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2477457970380783
    2. ')' → logprob: -1.6227457523345947
    3. '0' → logprob: -4.372745990753174
    4. ' ,' → logprob: -5.747745990753174
    5. '```' → logprob: -6.622745990753174
    6. '_,' → logprob: -7.247745990753174
    7. '<|end|>' → logprob: -7.372745990753174
    8. '),' → logprob: -7.372745990753174
    9. 'd' → logprob: -7.747745990753174
    10. ' ' → logprob: -7.872745990753174

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326214671134949
    2. '1' → logprob: -0.7576214671134949
    3. ' ' → logprob: -12.132621765136719
    4. '<|end|>' → logprob: -12.507621765136719
    5. ' 
' → logprob: -12.695121765136719
    6. '```' → logprob: -12.820121765136719
    7. '0' → logprob: -14.007621765136719
    8. '  ' → logprob: -14.257621765136719
    9. ',' → logprob: -14.320121765136719
    10. 'def' → logprob: -14.820121765136719

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012531433254480362
    2. ' ' → logprob: -4.387531280517578
    3. ' light' → logprob: -12.137531280517578
    4. '0' → logprob: -12.887531280517578
    5. ' white' → logprob: -13.387531280517578
    6. 'light' → logprob: -13.450031280517578
    7. ' None' → logprob: -13.512531280517578
    8. ',' → logprob: -13.575031280517578
    9. 'None' → logprob: -13.825031280517578
    10. '```' → logprob: -14.012531280517578

Token 41: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47412776947021484
    2. ' =' → logprob: -0.9741277694702148
    3. ' ' → logprob: -11.224127769470215
    4. '<|end|>' → logprob: -11.349127769470215
    5. ',' → logprob: -11.974127769470215
    6. ')' → logprob: -12.099127769470215
    7. '=
' → logprob: -13.349127769470215
    8. '=#' → logprob: -13.724127769470215
    9. 'dark' → logprob: -13.724127769470215
    10. '=None' → logprob: -13.974127769470215

Token 42: ' white' (ID: 6461)
  Prédit: 'light'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'light' → logprob: -0.5827288627624512
    2. ' light' → logprob: -0.8327288627624512
    3. '1' → logprob: -6.207728862762451
    4. ' white' → logprob: -6.582728862762451
    5. 'white' → logprob: -6.707728862762451
    6. 'bright' → logprob: -6.832728862762451
    7. ' bright' → logprob: -7.582728862762451
    8. ' ' → logprob: -8.33272933959961
    9. '0' → logprob: -9.08272933959961
    10. 'lighter' → logprob: -10.77022933959961

Token 43: '
' (ID: 198)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0029908940196037292
    2. '```' → logprob: -7.00299072265625
    3. '@

' → logprob: -7.37799072265625
    4. '

' → logprob: -7.75299072265625
    5. '
' → logprob: -8.00299072265625
    6. 'def' → logprob: -8.25299072265625
    7. '@n' → logprob: -9.25299072265625
    8. '@
' → logprob: -9.62799072265625
    9. '\n' → logprob: -10.00299072265625
    10. '\' → logprob: -10.25299072265625

Token 44: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0006295174825936556
    2. '@

' → logprob: -8.125629425048828
    3. 'def' → logprob: -9.125629425048828
    4. '```' → logprob: -9.375629425048828
    5. '@n' → logprob: -10.250629425048828
    6. '@
' → logprob: -10.375629425048828
    7. '

' → logprob: -11.375629425048828
    8. '
' → logprob: -11.750629425048828
    9. '\n' → logprob: -12.375629425048828
    10. '``' → logprob: -12.375629425048828

Token 45: ' top' (ID: 2344)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.001572471926920116
    2. 'def' → logprob: -6.626572608947754
    3. '#' → logprob: -9.751572608947754
    4. '```' → logprob: -10.126572608947754
    5. '
' → logprob: -10.251572608947754
    6. ' @' → logprob: -10.376572608947754
    7. 'l' → logprob: -11.376572608947754
    8. '@return' → logprob: -11.626572608947754
    9. '@n' → logprob: -11.751572608947754
    10. 'from' → logprob: -12.001572608947754

Token 46: ' and' (ID: 326)
  Prédit: '_disk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_disk' → logprob: -0.1341571807861328
    2. '_color' → logprob: -3.009157180786133
    3. '_cache' → logprob: -3.134157180786133
    4. '_' → logprob: -4.134157180786133
    5. ')' → logprob: -5.009157180786133
    6. '_disc' → logprob: -5.384157180786133
    7. '_token' → logprob: -6.384157180786133
    8. '_d' → logprob: -6.509157180786133
    9. ')_' → logprob: -8.009157180786133
    10. 'def' → logprob: -8.384157180786133

Token 47: ' bottom' (ID: 8725)
  Prédit: ' bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.2114747166633606
    2. 'bottom' → logprob: -1.9614746570587158
    3. 'remaining' → logprob: -4.461474895477295
    4. ' remaining' → logprob: -4.711474895477295
    5. ' current' → logprob: -5.586474895477295
    6. ' ' → logprob: -5.711474895477295
    7. 'stack' → logprob: -5.836474895477295
    8. ' stack' → logprob: -6.336474895477295
    9. ' l' → logprob: -6.773974895477295
    10. ' thickness' → logprob: -6.773974895477295

Token 48: ' disks' (ID: 104238)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5716522932052612
    2. '@' → logprob: -1.0716522932052612
    3. '_' → logprob: -3.946652412414551
    4. '_states' → logprob: -4.321652412414551
    5. ')

' → logprob: -4.946652412414551
    6. 'def' → logprob: -4.946652412414551
    7. '_cache' → logprob: -5.321652412414551
    8. '
' → logprob: -5.321652412414551
    9. '

' → logprob: -5.446652412414551
    10. '#' → logprob: -5.946652412414551

Token 49: ' must' (ID: 2804)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.6070417165756226
    2. '

' → logprob: -1.4820417165756226
    3. '
' → logprob: -2.232041835784912
    4. '```' → logprob: -2.857041835784912
    5. 'def' → logprob: -3.982041835784912
    6. ')' → logprob: -4.732041835784912
    7. '
' → logprob: -5.232041835784912
    8. '\' → logprob: -5.482041835784912
    9. '\n' → logprob: -5.482041835784912
    10. 'n' → logprob: -6.107041835784912

Token 50: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.48545515537261963
    2. ' have' → logprob: -2.36045503616333
    3. ' differ' → logprob: -2.61045503616333
    4. 'be' → logprob: -2.61045503616333
    5. ' not' → logprob: -2.73545503616333
    6. 'different' → logprob: -3.61045503616333
    7. 'have' → logprob: -4.23545503616333
    8. '<|end|>' → logprob: -4.61045503616333
    9. 'not' → logprob: -4.86045503616333
    10. 'd' → logprob: -5.11045503616333

Token 51: ' dark' (ID: 8883)
  Prédit: ' different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' different' → logprob: -0.85645991563797
    2. 'different' → logprob: -1.1064598560333252
    3. ' the' → logprob: -1.7314598560333252
    4. 'the' → logprob: -3.731459856033325
    5. ' of' → logprob: -4.981460094451904
    6. ' ' → logprob: -5.106460094451904
    7. ' dark' → logprob: -5.231460094451904
    8. '0' → logprob: -5.356460094451904
    9. 'd' → logprob: -5.481460094451904
    10. ' white' → logprob: -5.606460094451904

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3381942808628082
    2. '@' → logprob: -1.8381942510604858
    3. '

' → logprob: -2.8381943702697754
    4. 'def' → logprob: -3.8381943702697754
    5. ')' → logprob: -4.463194370269775
    6. '```' → logprob: -4.713194370269775
    7. '\n' → logprob: -5.213194370269775
    8. 'n' → logprob: -5.463194370269775
    9. '@
' → logprob: -6.213194370269775
    10. '@

' → logprob: -6.213194370269775

Token 53: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0014972452772781253
    2. 'def' → logprob: -7.001497268676758
    3. '```' → logprob: -9.001497268676758
    4. '
' → logprob: -9.126497268676758
    5. '@

' → logprob: -9.251497268676758
    6. '@
' → logprob: -9.376497268676758
    7. 'dp' → logprob: -10.126497268676758
    8. ')' → logprob: -10.876497268676758
    9. '@n' → logprob: -11.126497268676758
    10. '

' → logprob: -11.251497268676758

Token 54: ' adjacent' (ID: 39069)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0011748670367524028
    2. 'def' → logprob: -7.0011749267578125
    3. '
' → logprob: -9.001174926757812
    4. '```' → logprob: -9.751174926757812
    5. '@
' → logprob: -10.876174926757812
    6. ' @' → logprob: -11.751174926757812
    7. '@return' → logprob: -11.876174926757812
    8. '@n' → logprob: -12.251174926757812
    9. 'l' → logprob: -12.501174926757812
    10. '``' → logprob: -12.626174926757812

Token 55: ' disks' (ID: 104238)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04048725217580795
    2. '_colors' → logprob: -3.915487289428711
    3. ' _' → logprob: -4.165487289428711
    4. '_color' → logprob: -6.665487289428711
    5. '_s' → logprob: -7.415487289428711
    6. '_d' → logprob: -7.665487289428711
    7. ',' → logprob: -8.540487289428711
    8. '_disk' → logprob: -8.665487289428711
    9. '_white' → logprob: -8.790487289428711
    10. '_states' → logprob: -8.790487289428711

Token 56: ' must' (ID: 2804)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7089722156524658
    2. '<|end|>' → logprob: -2.333972215652466
    3. '_color' → logprob: -2.583972215652466
    4. ' =' → logprob: -2.708972215652466
    5. ' must' → logprob: -2.958972215652466
    6. ' _' → logprob: -3.083972215652466
    7. ',' → logprob: -3.208972215652466
    8. ')' → logprob: -3.458972215652466
    9. ' are' → logprob: -4.333971977233887
    10. '_colors' → logprob: -4.458971977233887

Token 57: ' alternate' (ID: 43193)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0363052561879158
    2. 'not' → logprob: -4.0363054275512695
    3. 'n't' → logprob: -4.9113054275512695
    4. ' be' → logprob: -5.5363054275512695
    5. ' have' → logprob: -5.7863054275512695
    6. ' differ' → logprob: -6.4113054275512695
    7. 'different' → logprob: -7.0363054275512695
    8. ' different' → logprob: -7.6613054275512695
    9. '<|end|>' → logprob: -8.03630542755127
    10. ' always' → logprob: -9.28630542755127

Token 58: ' colors' (ID: 10803)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0645383968949318
    2. '
' → logprob: -3.8145384788513184
    3. '

' → logprob: -4.064538478851318
    4. 'def' → logprob: -4.439538478851318
    5. '@

' → logprob: -5.189538478851318
    6. '@
' → logprob: -6.564538478851318
    7. '```' → logprob: -6.564538478851318
    8. ')' → logprob: -6.689538478851318
    9. 'n' → logprob: -8.31453800201416
    10. 'd' → logprob: -8.43953800201416

Token 59: '
' (ID: 198)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.004033044911921024
    2. '@

' → logprob: -6.254033088684082
    3. '

' → logprob: -6.629033088684082
    4. '
' → logprob: -7.629033088684082
    5. '@
' → logprob: -9.004033088684082
    6. '```' → logprob: -9.879033088684082
    7. 'def' → logprob: -10.504033088684082
    8. '@n' → logprob: -10.629033088684082
    9. '
' → logprob: -12.129033088684082
    10. '@s' → logprob: -12.129033088684082

Token 60: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.026769526302814484
    2. '
' → logprob: -4.151769638061523
    3. '

' → logprob: -4.776769638061523
    4. '@

' → logprob: -6.526769638061523
    5. 'def' → logprob: -8.276769638061523
    6. '```' → logprob: -8.401769638061523
    7. '@
' → logprob: -8.776769638061523
    8. '
' → logprob: -10.026769638061523
    9. '@n' → logprob: -10.776769638061523
    10. 'n' → logprob: -11.401769638061523

Token 61: ' thick' (ID: 17154)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.00010068230039905757
    2. '@n' → logprob: -10.375101089477539
    3. '
' → logprob: -10.625101089477539
    4. 'def' → logprob: -10.750101089477539
    5. '@
' → logprob: -12.500101089477539
    6. '```' → logprob: -12.875101089477539
    7. '@index' → logprob: -12.875101089477539
    8. ' @' → logprob: -13.000101089477539
    9. '

' → logprob: -13.000101089477539
    10. 'l' → logprob: -13.125101089477539

Token 62: ' disks' (ID: 104238)
  Prédit: 'ness'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ness' → logprob: -0.00016897499153856188
    2. 'ess' → logprob: -9.375168800354004
    3. 'n' → logprob: -10.625168800354004
    4. '=' → logprob: -10.750168800354004
    5. ' ness' → logprob: -11.875168800354004
    6. 'iness' → logprob: -12.375168800354004
    7. ' =' → logprob: -12.375168800354004
    8. ')' → logprob: -12.625168800354004
    9. ' ' → logprob: -12.625168800354004
    10. 'nes' → logprob: -12.750168800354004

Token 63: ' thickness' (ID: 38833)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.2360067367553711
    2. ')' → logprob: -2.736006736755371
    3. '
' → logprob: -3.111006736755371
    4. '=' → logprob: -3.736006736755371
    5. 'def' → logprob: -4.361006736755371
    6. '<|end|>' → logprob: -4.361006736755371
    7. '

' → logprob: -4.486006736755371
    8. ',' → logprob: -5.236006736755371
    9. ' =' → logprob: -5.486006736755371
    10. '_' → logprob: -5.486006736755371

Token 64: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4858827590942383
    2. ' =' → logprob: -1.1108827590942383
    3. ':' → logprob: -3.6108827590942383
    4. ')' → logprob: -4.110882759094238
    5. ',' → logprob: -5.610882759094238
    6. '_' → logprob: -6.235882759094238
    7. ' ' → logprob: -6.860882759094238
    8. '<|end|>' → logprob: -6.860882759094238
    9. 'def' → logprob: -7.235882759094238
    10. '
' → logprob: -7.235882759094238

Token 65: ' k' (ID: 372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5149244666099548
    2. 'k' → logprob: -1.5149245262145996
    3. '2' → logprob: -1.8899245262145996
    4. ' ' → logprob: -4.3899245262146
    5. 'l' → logprob: -4.6399245262146
    6. ' k' → logprob: -5.1399245262146
    7. '3' → logprob: -7.1399245262146
    8. ' l' → logprob: -7.2649245262146
    9. '[' → logprob: -7.3899245262146
    10. '0' → logprob: -7.7649245262146

Token 66: ',' (ID: 11)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.011409015394747257
    2. '

' → logprob: -5.136408805847168
    3. '@

' → logprob: -5.511408805847168
    4. '
' → logprob: -7.636408805847168
    5. '```' → logprob: -8.261408805847168
    6. '@
' → logprob: -8.636408805847168
    7. '`

' → logprob: -9.636408805847168
    8. 'def' → logprob: -9.636408805847168
    9. '@n' → logprob: -10.261408805847168
    10. 'n' → logprob: -10.386408805847168

Token 67: ' thin' (ID: 22558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8566970825195312
    2. ')' → logprob: -1.4816970825195312
    3. '#' → logprob: -2.7316970825195312
    4. '0' → logprob: -2.8566970825195312
    5. ' thick' → logprob: -3.4816970825195312
    6. ' l' → logprob: -4.106697082519531
    7. ' k' → logprob: -4.106697082519531
    8. ' n' → logprob: -4.106697082519531
    9. ' thin' → logprob: -4.106697082519531
    10. 'n' → logprob: -4.356697082519531

Token 68: ' disks' (ID: 104238)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756094694137573
    2. '_' → logprob: -1.3006094694137573
    3. '_dis' → logprob: -1.6756094694137573
    4. ')' → logprob: -2.925609588623047
    5. '_disk' → logprob: -3.050609588623047
    6. '_th' → logprob: -3.300609588623047
    7. '_disc' → logprob: -3.425609588623047
    8. ' _' → logprob: -3.925609588623047
    9. '_k' → logprob: -4.925609588623047
    10. '_d' → logprob: -5.050609588623047

Token 69: ' thickness' (ID: 38833)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7284407019615173
    2. '=' → logprob: -0.8534407019615173
    3. ' thickness' → logprob: -3.103440761566162
    4. 'th' → logprob: -4.103440761566162
    5. '_th' → logprob: -4.353440761566162
    6. '<|end|>' → logprob: -4.978440761566162
    7. ' ' → logprob: -5.478440761566162
    8. '_' → logprob: -5.853440761566162
    9. '<|end|>' → logprob: -6.853440761566162
    10. ')' → logprob: -8.228440284729004

Token 70: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1171534061431885
    2. '1' → logprob: -1.2421534061431885
    3. '=' → logprob: -1.3671534061431885
    4. ' =' → logprob: -2.8671534061431885
    5. ' k' → logprob: -3.2421534061431885
    6. 'k' → logprob: -3.7421534061431885
    7. '=k' → logprob: -5.617153167724609
    8. '0' → logprob: -6.242153167724609
    9. ' l' → logprob: -6.992153167724609
    10. '2' → logprob: -7.117153167724609

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019401399418711662
    2. ' ' → logprob: -4.019401550292969
    3. 'l' → logprob: -7.019401550292969
    4. ' l' → logprob: -8.019401550292969
    5. 'k' → logprob: -11.144401550292969
    6. ' k' → logprob: -11.769401550292969
    7. '2' → logprob: -13.144401550292969
    8. '<|end|>' → logprob: -14.706901550292969
    9. '0' → logprob: -15.081901550292969
    10. ' ' → logprob: -15.644401550292969

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037636207416653633
    2. 'l' → logprob: -5.753763675689697
    3. ' ' → logprob: -7.753763675689697
    4. 'k' → logprob: -9.253763198852539
    5. ' l' → logprob: -9.878763198852539
    6. ' k' → logprob: -12.878763198852539
    7. '2' → logprob: -13.253763198852539
    8. '0' → logprob: -13.691263198852539
    9. '(' → logprob: -14.566263198852539
    10. '```' → logprob: -14.628763198852539

Token 73: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.22487536072731018
    2. '

' → logprob: -2.2248754501342773
    3. '
' → logprob: -2.5998754501342773
    4. '@

' → logprob: -4.224875450134277
    5. 'def' → logprob: -6.724875450134277
    6. '
' → logprob: -6.724875450134277
    7. '@
' → logprob: -6.974875450134277
    8. '@n' → logprob: -8.349875450134277
    9. '```' → logprob: -8.474875450134277
    10. 'n' → logprob: -8.974875450134277

Token 74: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.00018863992590922862
    2. '@
' → logprob: -9.500188827514648
    3. '@

' → logprob: -9.625188827514648
    4. '@n' → logprob: -11.125188827514648
    5. '

' → logprob: -11.250188827514648
    6. '
' → logprob: -11.375188827514648
    7. '```' → logprob: -12.625188827514648
    8. '@\' → logprob: -13.250188827514648
    9. 'def' → logprob: -13.875188827514648
    10. 'd' → logprob: -14.625188827514648

Token 75: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.981667537620524e-06
    2. ' l' → logprob: -14.750001907348633
    3. '```' → logprob: -14.875001907348633
    4. 'lr' → logprob: -15.000001907348633
    5. '@' → logprob: -15.250001907348633
    6. '	l' → logprob: -16.000001907348633
    7. '1' → logprob: -16.375001907348633
    8. '-' → logprob: -16.500001907348633
    9. 'л' → logprob: -16.875001907348633
    10. 'lu' → logprob: -17.312501907348633

Token 76: 'ru' (ID: 1942)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10023763030767441
    2. 'ru' → logprob: -2.3502376079559326
    3. '_r' → logprob: -11.725237846374512
    4. '```' → logprob: -11.850237846374512
    5. '@' → logprob: -12.725237846374512
    6. 'rl' → logprob: -12.850237846374512
    7. ' r' → logprob: -13.225237846374512
    8. '_' → logprob: -13.600237846374512
    9. '-' → logprob: -14.100237846374512
    10. 'ру' → logprob: -14.225237846374512

Token 77: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0005257497541606426
    2. '_cached' → logprob: -7.875525951385498
    3. '_' → logprob: -9.12552547454834
    4. ' _' → logprob: -11.12552547454834
    5. '_c' → logprob: -11.37552547454834
    6. 'def' → logprob: -13.00052547454834
    7. '@' → logprob: -13.37552547454834
    8. 'cache' → logprob: -13.87552547454834
    9. ')_' → logprob: -14.25052547454834
    10. 'cached' → logprob: -14.25052547454834

Token 78: '(None' (ID: 65126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4843372404575348
    2. '
' → logprob: -0.9843372106552124
    3. '()
' → logprob: -5.609337329864502
    4. '(' → logprob: -5.734337329864502
    5. '(def' → logprob: -6.234337329864502
    6. ' def' → logprob: -7.609337329864502
    7. '(
' → logprob: -8.859336853027344
    8. '
' → logprob: -8.984336853027344
    9. '()' → logprob: -9.109336853027344
    10. '(None' → logprob: -9.109336853027344

Token 79: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31329306960105896
    2. ')' → logprob: -1.3132930994033813
    3. 'def' → logprob: -10.81329345703125
    4. ')
' → logprob: -11.93829345703125
    5. ' )
' → logprob: -13.56329345703125
    6. '
' → logprob: -13.93829345703125
    7. ')

' → logprob: -14.18829345703125
    8. ')`
' → logprob: -15.06329345703125
    9. ')>
' → logprob: -15.31329345703125
    10. '),' → logprob: -15.68829345703125

Token 80: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38688725233078003
    2. 'def' → logprob: -1.1368873119354248
    3. '
' → logprob: -12.136887550354004
    4. ' def' → logprob: -12.511887550354004
    5. '<|end|>' → logprob: -12.761887550354004
    6. '\' → logprob: -13.886887550354004
    7. '  
' → logprob: -13.886887550354004
    8. 'de' → logprob: -14.636887550354004
    9. ' 
' → logprob: -15.136887550354004
    10. '<|end|>' → logprob: -15.386887550354004

Token 81: ' dp' (ID: 21546)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.19451084733009338
    2. ' ways' → logprob: -2.3195109367370605
    3. 'count' → logprob: -2.8195109367370605
    4. ' dp' → logprob: -5.1945109367370605
    5. 'dp' → logprob: -5.8195109367370605
    6. ' f' → logprob: -6.0695109367370605
    7. 'ways' → logprob: -6.1945109367370605
    8. ' dfs' → logprob: -6.4445109367370605
    9. ' solve' → logprob: -6.5695109367370605
    10. ' stack' → logprob: -6.6945109367370605

Token 82: '(th' (ID: 53988)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007502748165279627
    2. '(l' → logprob: -6.007502555847168
    3. '(n' → logprob: -6.132502555847168
    4. '(r' → logprob: -6.757502555847168
    5. '(t' → logprob: -7.632502555847168
    6. '(i' → logprob: -8.257502555847168
    7. '(depth' → logprob: -9.007502555847168
    8. ' (' → logprob: -9.132502555847168
    9. '(rem' → logprob: -9.382502555847168
    10. '(length' → logprob: -9.382502555847168

Token 83: 'ickness' (ID: 46853)
  Prédit: 'ickness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ickness' → logprob: -0.03757832199335098
    2. 'ick' → logprob: -3.4125783443450928
    3. ',' → logprob: -5.787578105926514
    4. 'ck' → logprob: -8.412578582763672
    5. 'ic' → logprob: -8.662578582763672
    6. 'k' → logprob: -8.912578582763672
    7. '):
' → logprob: -9.912578582763672
    8. '_remaining' → logprob: -10.287578582763672
    9. '```' → logprob: -10.412578582763672
    10. '_' → logprob: -10.912578582763672

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004635584482457489
    2. ' ,' → logprob: -8.375463485717773
    3. '):' → logprob: -8.500463485717773
    4. ')' → logprob: -11.125463485717773
    5. 's' → logprob: -13.125463485717773
    6. ' ' → logprob: -13.250463485717773
    7. ',
' → logprob: -13.500463485717773
    8. ',int' → logprob: -13.500463485717773
    9. ':' → logprob: -14.000463485717773
    10. ' ):' → logprob: -14.250463485717773

Token 85: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0653098002076149
    2. ' top' → logprob: -3.065309762954712
    3. 'color' → logprob: -4.190310001373291
    4. ' color' → logprob: -7.565310001373291
    5. 'last' → logprob: -7.690310001373291
    6. 'prev' → logprob: -8.815309524536133
    7. ' ' → logprob: -9.440309524536133
    8. 'is' → logprob: -9.565309524536133
    9. ' last' → logprob: -10.065309524536133
    10. 'current' → logprob: -11.315309524536133

Token 86: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.0018387987511232495
    2. '_disk' → logprob: -6.501838684082031
    3. '):' → logprob: -8.501838684082031
    4. '_' → logprob: -9.626838684082031
    5. 'color' → logprob: -10.626838684082031
    6. ',' → logprob: -11.626838684082031
    7. '_d' → logprob: -12.126838684082031
    8. ')_' → logprob: -12.126838684082031
    9. '_colour' → logprob: -12.126838684082031
    10. '_disc' → logprob: -12.876838684082031

Token 87: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00022570860164705664
    2. ')' → logprob: -8.875226020812988
    3. '):
' → logprob: -9.625226020812988
    4. ' ):' → logprob: -11.500226020812988
    5. ',' → logprob: -11.875226020812988
    6. ':' → logprob: -13.250226020812988
    7. '):

' → logprob: -15.125226020812988
    8. '):
' → logprob: -15.375226020812988
    9. '=' → logprob: -15.750226020812988
    10. '}:' → logprob: -16.875225067138672

Token 88: ' bottom' (ID: 8725)
  Prédit: ' bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.4382545053958893
    2. 'bottom' → logprob: -1.938254475593567
    3. ' is' → logprob: -2.6882545948028564
    4. '):' → logprob: -3.5632545948028564
    5. ' last' → logprob: -3.6882545948028564
    6. ')' → logprob: -4.688254356384277
    7. ' depth' → logprob: -4.813254356384277
    8. 'is' → logprob: -5.063254356384277
    9. ' ' → logprob: -5.188254356384277
    10. ' remaining' → logprob: -5.313254356384277

Token 89: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.000947545631788671
    2. '_' → logprob: -7.87594747543335
    3. ')_' → logprob: -8.250947952270508
    4. '):' → logprob: -8.625947952270508
    5. ' _' → logprob: -9.750947952270508
    6. ')' → logprob: -10.375947952270508
    7. ',' → logprob: -12.000947952270508
    8. '_colour' → logprob: -12.000947952270508
    9. 'color' → logprob: -12.375947952270508
    10. '_colors' → logprob: -12.625947952270508

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.685467764735222e-05
    2. ')' → logprob: -10.000086784362793
    3. ' ):' → logprob: -10.500086784362793
    4. ':' → logprob: -11.875086784362793
    5. ',' → logprob: -12.250086784362793
    6. '):
' → logprob: -13.250086784362793
    7. ' ' → logprob: -16.37508773803711
    8. '=' → logprob: -17.00008773803711
    9. '}:' → logprob: -17.25008773803711
    10. '>:' → logprob: -17.62508773803711

Token 91: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024479322135448456
    2. '   ' → logprob: -4.024479389190674
    3. '):' → logprob: -5.149479389190674
    4. ',' → logprob: -8.899478912353516
    5. ' if' → logprob: -9.149478912353516
    6. ')' → logprob: -9.899478912353516
    7. '<|end|>' → logprob: -10.024478912353516
    8. ':
' → logprob: -10.399478912353516
    9. ' :' → logprob: -10.399478912353516
    10. '#:' → logprob: -10.774478912353516

Token 92: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5713069438934326
    2. ':' → logprob: -1.9463069438934326
    3. ' ' → logprob: -2.0713069438934326
    4. ' if' → logprob: -2.8213069438934326
    5. '
' → logprob: -3.3213069438934326
    6. ' 
' → logprob: -3.8213069438934326
    7. '    ' → logprob: -4.196307182312012
    8. 'if' (adapté à ' if') → logprob: -4.321307182312012
    9. ')' → logprob: -5.196307182312012
    10. '    
' → logprob: -5.821307182312012

Token 93: ' thickness' (ID: 38833)
  Prédit: ' thickness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' thickness' → logprob: -0.00012773419439326972
    2. ' ' → logprob: -9.000127792358398
    3. 'th' → logprob: -13.125127792358398
    4. 'Thickness' → logprob: -14.375127792358398
    5. ' thick' → logprob: -14.500127792358398
    6. '  ' → logprob: -14.625127792358398
    7. ' Thickness' → logprob: -15.500127792358398
    8. ' ' → logprob: -15.750127792358398
    9. '   ' → logprob: -15.750127792358398
    10. '    ' → logprob: -15.875127792358398

Token 94: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.061073172837495804
    2. '==' → logprob: -2.936073064804077
    3. ' <' → logprob: -5.186073303222656
    4. ' ' → logprob: -7.936073303222656
    5. '0' → logprob: -9.061073303222656
    6. ' <=' → logprob: -10.061073303222656
    7. '=' → logprob: -10.561073303222656
    8. '<' → logprob: -11.061073303222656
    9. ')' → logprob: -12.311073303222656
    10. ' =' → logprob: -12.436073303222656

Token 95: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1812363862991333
    2. ' ' → logprob: -1.8062363862991333
    3. 'bottom' → logprob: -7.056236267089844
    4. ' bottom' → logprob: -8.056236267089844
    5. 'k' → logprob: -8.431236267089844
    6. '1' → logprob: -10.181236267089844
    7. ' k' → logprob: -11.368736267089844
    8. '   ' → logprob: -12.306236267089844
    9. '2' → logprob: -12.368736267089844
    10. 'min' → logprob: -12.868736267089844

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001382974674925208
    2. 'bottom' → logprob: -7.126382827758789
    3. 'k' → logprob: -8.251382827758789
    4. '1' → logprob: -8.376382827758789
    5. ' ' → logprob: -9.876382827758789
    6. '(' → logprob: -11.876382827758789
    7. 'min' → logprob: -11.938882827758789
    8. ' bottom' → logprob: -12.188882827758789
    9. '

' → logprob: -13.313882827758789
    10. '-' → logprob: -13.313882827758789

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008606063202023506
    2. ':return' → logprob: -5.75860595703125
    3. ':
' → logprob: -5.88360595703125
    4. ' or' → logprob: -6.00860595703125
    5. '   ' → logprob: -9.63360595703125
    6. '):' → logprob: -10.13360595703125
    7. '<|end|>' → logprob: -10.75860595703125
    8. ' :' → logprob: -11.13360595703125
    9. ')' → logprob: -11.38360595703125
    10. ',' → logprob: -12.25860595703125

Token 98: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014906489290297031
    2. ' return' → logprob: -4.389906406402588
    3. 'return' → logprob: -6.514906406402588
    4. '       ' → logprob: -7.389906406402588
    5. '0' → logprob: -8.264906883239746
    6. ' ' → logprob: -11.264906883239746
    7. '1' → logprob: -12.014906883239746
    8. '	return' → logprob: -12.264906883239746
    9. ' None' → logprob: -12.639906883239746
    10. '  ' → logprob: -13.514906883239746

Token 99: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.655082106590271
    2. 'return' (adapté à ' return') → logprob: -0.905082106590271
    3. '0' → logprob: -3.2800822257995605
    4. '   ' → logprob: -3.2800822257995605
    5. ' ' → logprob: -7.5300822257995605
    6. '       ' → logprob: -8.780081748962402
    7. ' float' → logprob: -10.655081748962402
    8. 'float' → logprob: -10.655081748962402
    9. '  ' → logprob: -10.905081748962402
    10. '
' → logprob: -11.030081748962402

Token 100: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020570730790495872
    2. ' ' → logprob: -3.895570755004883
    3. 'None' → logprob: -11.020570755004883
    4. ' None' → logprob: -12.145570755004883
    5. '   ' → logprob: -13.020570755004883
    6. 'float' → logprob: -13.145570755004883
    7. '[]' → logprob: -13.895570755004883
    8. '  ' → logprob: -14.145570755004883
    9. 'False' → logprob: -14.895570755004883
    10. ' float' → logprob: -15.395570755004883

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.236549335066229e-05
    2. ' ' → logprob: -11.000021934509277
    3. 'float' → logprob: -12.500021934509277
    4. '[]' → logprob: -14.000021934509277
    5. 'int' → logprob: -15.250021934509277
    6. 'False' → logprob: -15.500021934509277
    7. '[]
' → logprob: -15.625021934509277
    8. '-' → logprob: -15.875021934509277
    9. '   ' → logprob: -16.875022888183594
    10. '[' → logprob: -17.000022888183594

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6803531050682068
    2. '<|end|>' → logprob: -0.8053531050682068
    3. '
' → logprob: -3.1803531646728516
    4. '\n' → logprob: -6.555353164672852
    5. '<|end|>' → logprob: -6.555353164672852
    6. ')' → logprob: -7.180353164672852
    7. '    
' → logprob: -7.180353164672852
    8. '```' → logprob: -8.055353164672852
    9. 'n' → logprob: -9.680353164672852
    10. '  ' → logprob: -9.930353164672852

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6313595175743103
    2. '
' → logprob: -1.131359577178955
    3. '\n' → logprob: -2.881359577178955
    4. '<|end|>' → logprob: -3.006359577178955
    5. ' if' → logprob: -3.881359577178955
    6. 'if' → logprob: -4.756359577178955
    7. '    
' → logprob: -5.131359577178955
    8. ')' → logprob: -6.381359577178955
    9. '\' → logprob: -7.631359577178955
    10. ' ' → logprob: -8.006359100341797

Token 104: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17548811435699463
    2. 'if' (adapté à ' if') → logprob: -2.175487995147705
    3. ' if' → logprob: -3.050487995147705
    4. ' ' → logprob: -10.925488471984863
    5. '<|end|>' → logprob: -11.050488471984863
    6. '  ' → logprob: -11.300488471984863
    7. '    
' → logprob: -12.300488471984863
    8. 'n' → logprob: -12.800488471984863
    9. '    ' → logprob: -13.175488471984863
    10. '
' → logprob: -13.300488471984863

Token 105: ' thickness' (ID: 38833)
  Prédit: ' thickness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' thickness' → logprob: -9.090760431718081e-05
    2. 'th' → logprob: -9.875090599060059
    3. ' ' → logprob: -10.250090599060059
    4. 'Thickness' → logprob: -13.500090599060059
    5. '  ' → logprob: -14.250090599060059
    6. ' ' → logprob: -14.625090599060059
    7. ' (' → logprob: -14.875090599060059
    8. '   ' → logprob: -15.375090599060059
    9. '(th' → logprob: -15.375090599060059
    10. '(' → logprob: -16.000091552734375

Token 106: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016043636947870255
    2. '==' → logprob: -4.141043663024902
    3. ')' → logprob: -13.016043663024902
    4. ')==' → logprob: -13.266043663024902
    5. '=' → logprob: -13.516043663024902
    6. ' =' → logprob: -13.766043663024902
    7. '```' → logprob: -14.391043663024902
    8. ' ' → logprob: -14.516043663024902
    9. ']==' → logprob: -14.766043663024902
    10. '[' → logprob: -14.891043663024902

Token 107: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023305227980017662
    2. ' ' → logprob: -3.7733051776885986
    3. 'k' → logprob: -10.64830493927002
    4. '1' → logprob: -10.77330493927002
    5. 'l' → logprob: -11.77330493927002
    6. '   ' → logprob: -13.21080493927002
    7. ' k' → logprob: -14.21080493927002
    8. '  ' → logprob: -14.46080493927002
    9. 'bottom' → logprob: -14.58580493927002
    10. ' (' → logprob: -14.83580493927002

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010998018842656165
    2. ' ' → logprob: -9.125109672546387
    3. 'l' → logprob: -14.500109672546387
    4. '1' → logprob: -15.625109672546387
    5. 'k' → logprob: -16.250110626220703
    6. '   ' → logprob: -16.625110626220703
    7. '```' → logprob: -16.812610626220703
    8. '<|end|>' → logprob: -16.937610626220703
    9. '  ' → logprob: -17.687610626220703
    10. '==' → logprob: -18.000110626220703

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.352993905544281
    2. ':
' → logprob: -1.4779939651489258
    3. ' and' → logprob: -2.727993965148926
    4. 'and' → logprob: -6.227993965148926
    5. '   ' → logprob: -6.477993965148926
    6. ':return' → logprob: -7.977993965148926
    7. ',' → logprob: -10.727993965148926
    8. ':

' → logprob: -10.977993965148926
    9. '	and' → logprob: -10.977993965148926
    10. '):
' → logprob: -11.102993965148926

Token 110: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2592196762561798
    2. '       ' → logprob: -1.5092196464538574
    3. ' return' → logprob: -5.134219646453857
    4. 'return' → logprob: -7.259219646453857
    5. ' if' → logprob: -8.384220123291016
    6. '<|end|>' → logprob: -8.509220123291016
    7. '    ' → logprob: -9.384220123291016
    8. ':return' → logprob: -10.009220123291016
    9. '  ' → logprob: -10.634220123291016
    10. ' ' → logprob: -10.884220123291016

Token 111: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24232693016529083
    2. ' return' → logprob: -1.9923269748687744
    3. '   ' → logprob: -2.7423269748687744
    4. '       ' → logprob: -4.242326736450195
    5. 'if' → logprob: -11.742326736450195
    6. ' ' → logprob: -12.367326736450195
    7. '           ' → logprob: -12.492326736450195
    8. '	return' → logprob: -12.867326736450195
    9. ' if' → logprob: -12.867326736450195
    10. '    ' → logprob: -13.117326736450195

Token 112: ' thickness' (ID: 38833)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3885037302970886
    2. ' return' → logprob: -1.1385037899017334
    3. ' if' → logprob: -6.888503551483154
    4. 'if' → logprob: -8.013504028320312
    5. '   ' → logprob: -8.263504028320312
    6. '       ' → logprob: -10.888504028320312
    7. ' ' → logprob: -12.763504028320312
    8. '#' → logprob: -14.388504028320312
    9. '{return' → logprob: -15.638504028320312
    10. '	return' → logprob: -15.763504028320312

Token 113: ' exactly' (ID: 9707)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7077499032020569
    2. '==' → logprob: -1.457749843597412
    3. ' and' → logprob: -2.832749843597412
    4. '=' → logprob: -3.207749843597412
    5. ' if' → logprob: -3.457749843597412
    6. '   ' → logprob: -3.707749843597412
    7. 'and' → logprob: -3.707749843597412
    8. ' ' → logprob: -3.832749843597412
    9. ',' → logprob: -3.957749843597412
    10. ' return' → logprob: -4.457749843597412

Token 114: ' used' (ID: 2061)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.42140308022499084
    2. 'matches' → logprob: -1.7964030504226685
    3. ' matches' → logprob: -2.671403169631958
    4. ' ==' → logprob: -3.421403169631958
    5. '1' → logprob: -3.671403169631958
    6. '=' → logprob: -3.796403169631958
    7. ' and' → logprob: -4.921402931213379
    8. ' ' → logprob: -5.421402931213379
    9. 'and' → logprob: -5.546402931213379
    10. '0' → logprob: -6.171402931213379

Token 115: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027048848569393158
    2. '   ' → logprob: -3.6520488262176514
    3. ',' → logprob: -8.15204906463623
    4. '           ' → logprob: -9.02704906463623
    5. ' if' → logprob: -9.27704906463623
    6. ' return' → logprob: -9.52704906463623
    7. 'return' → logprob: -10.27704906463623
    8. ':' → logprob: -10.65204906463623
    9. ' and' → logprob: -10.77704906463623
    10. '    ' → logprob: -11.02704906463623

Token 116: ' check' (ID: 2371)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11871101707220078
    2. ' return' → logprob: -2.243710994720459
    3. '   ' → logprob: -5.368710994720459
    4. 'if' → logprob: -7.243710994720459
    5. '       ' → logprob: -8.118711471557617
    6. ' if' → logprob: -8.618711471557617
    7. ' ' → logprob: -11.493711471557617
    8. '  ' → logprob: -12.618711471557617
    9. '	return' → logprob: -13.743711471557617
    10. '    ' → logprob: -14.243711471557617

Token 117: ' top' (ID: 2344)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3512381911277771
    2. ' top' → logprob: -1.3512382507324219
    3. 'if' → logprob: -3.726238250732422
    4. ' return' → logprob: -4.976238250732422
    5. 'top' → logprob: -6.101238250732422
    6. ' bottom' → logprob: -6.226238250732422
    7. '   ' → logprob: -6.726238250732422
    8. 'return' → logprob: -7.601238250732422
    9. '(top' → logprob: -8.101238250732422
    10. ' for' → logprob: -10.851238250732422

Token 118: ' ==' (ID: 951)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.0004247163888067007
    2. ' and' → logprob: -8.6254243850708
    3. 'color' → logprob: -8.7504243850708
    4. ' color' → logprob: -10.6254243850708
    5. '==' → logprob: -11.3754243850708
    6. '_' → logprob: -11.5004243850708
    7. '   ' → logprob: -11.7504243850708
    8. 'and' → logprob: -12.0004243850708
    9. ' if' → logprob: -12.2504243850708
    10. 'if' → logprob: -12.7504243850708

Token 119: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.04861847683787346
    2. ' bottom' → logprob: -3.0486185550689697
    3. '   ' → logprob: -11.79861831665039
    4. 'bot' → logprob: -12.17361831665039
    5. ' ' → logprob: -12.29861831665039
    6. 'top' → logprob: -12.67361831665039
    7. '(bottom' → logprob: -13.04861831665039
    8. '```' → logprob: -13.17361831665039
    9. '0' → logprob: -13.42361831665039
    10. 'b' → logprob: -13.42361831665039

Token 120: ' ==' (ID: 951)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.017414869740605354
    2. 'and' → logprob: -4.1424150466918945
    3. '   ' → logprob: -6.7674150466918945
    4. ' ' → logprob: -9.017415046691895
    5. ',' → logprob: -10.017415046691895
    6. ':' → logprob: -10.517415046691895
    7. '==' → logprob: -12.142415046691895
    8. '       ' → logprob: -12.267415046691895
    9. ':return' → logprob: -12.642415046691895
    10. '    ' → logprob: -12.767415046691895

Token 121: ' dark' (ID: 8883)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002969857305288315
    2. ' ' → logprob: -6.502969741821289
    3. 'bottom' → logprob: -7.002969741821289
    4. 'dark' → logprob: -8.127969741821289
    5. '1' → logprob: -8.502969741821289
    6. ' bottom' → logprob: -10.127969741821289
    7. 'top' → logprob: -12.002969741821289
    8. ' dark' → logprob: -12.127969741821289
    9. '   ' → logprob: -13.877969741821289
    10. '```' → logprob: -14.002969741821289

Token 122: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5611487627029419
    2. '   ' → logprob: -1.061148762702942
    3. '       ' → logprob: -2.6861486434936523
    4. 'and' → logprob: -5.686148643493652
    5. ',' → logprob: -5.811148643493652
    6. ' return' → logprob: -6.061148643493652
    7. '
' → logprob: -6.186148643493652
    8. '<|end|>' → logprob: -6.811148643493652
    9. ':' → logprob: -7.186148643493652
    10. ':return' → logprob: -7.561148643493652

Token 123: '0' (ID: 15)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.3909912407398224
    2. 'top' → logprob: -1.1409912109375
    3. ' and' → logprob: -6.6409912109375
    4. ')' → logprob: -7.0159912109375
    5. ' if' → logprob: -7.2659912109375
    6. '(top' → logprob: -7.8909912109375
    7. '   ' → logprob: -8.6409912109375
    8. 'if' → logprob: -8.7659912109375
    9. 'return' → logprob: -9.0159912109375
    10. ' return' → logprob: -9.2659912109375

Token 124: ')
' (ID: 446)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4140837788581848
    2. ')' → logprob: -1.16408371925354
    3. 'and' → logprob: -3.66408371925354
    4. '   ' → logprob: -7.039083957672119
    5. ',' → logprob: -8.414083480834961
    6. ')
' → logprob: -10.039083480834961
    7. '),' → logprob: -10.789083480834961
    8. '):' → logprob: -10.914083480834961
    9. ' )' → logprob: -11.289083480834961
    10. ')

' → logprob: -12.539083480834961

Token 125: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09007292985916138
    2. '       ' → logprob: -2.4650728702545166
    3. ' if' → logprob: -7.090073108673096
    4. ',' → logprob: -9.090072631835938
    5. ' return' → logprob: -9.590072631835938
    6. '    ' → logprob: -10.590072631835938
    7. 'if' → logprob: -10.840072631835938
    8. ' and' → logprob: -11.340072631835938
    9. '<|end|>' → logprob: -11.340072631835938
    10. 'return' → logprob: -11.590072631835938

Token 126: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008755436167120934
    2. '       ' → logprob: -5.758755207061768
    3. 'if' → logprob: -6.008755207061768
    4. ' return' → logprob: -6.008755207061768
    5. '   ' → logprob: -7.383755207061768
    6. ' if' → logprob: -10.633755683898926
    7. '	return' → logprob: -14.383755683898926
    8. ' ' → logprob: -14.633755683898926
    9. '           ' → logprob: -14.758755683898926
    10. ':return' → logprob: -15.383755683898926

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06386639177799225
    2. 'int' → logprob: -3.438866376876831
    3. ' int' → logprob: -3.688866376876831
    4. ' ' → logprob: -5.43886661529541
    5. 'top' → logprob: -8.06386661529541
    6. '(int' → logprob: -9.93886661529541
    7. ' top' → logprob: -10.18886661529541
    8. '(' → logprob: -11.18886661529541
    9. '   ' → logprob: -12.43886661529541
    10. '(top' → logprob: -13.06386661529541

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043448545038700104
    2. 'int' → logprob: -3.1684484481811523
    3. ' int' → logprob: -8.293448448181152
    4. 'top' → logprob: -8.793448448181152
    5. '(int' → logprob: -10.793448448181152
    6. ' ' → logprob: -11.043448448181152
    7. '(' → logprob: -11.668448448181152
    8. '(top' → logprob: -14.543448448181152
    9. '   ' → logprob: -14.668448448181152
    10. '0' → logprob: -15.043448448181152

Token 129: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003635826986283064
    2. '
' → logprob: -6.503635883331299
    3. '<|end|>' → logprob: -6.628635883331299
    4. ' if' → logprob: -7.753635883331299
    5. '    
' → logprob: -9.00363540649414
    6. ',' → logprob: -10.12863540649414
    7. '<|end|>' → logprob: -10.37863540649414
    8. ' and' → logprob: -10.37863540649414
    9. '  ' → logprob: -10.62863540649414
    10. 'if' → logprob: -11.00363540649414

Token 130: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.6742936968803406
    2. 'top' → logprob: -0.7992936968803406
    3. '(top' → logprob: -3.2992937564849854
    4. ' (' → logprob: -6.549293518066406
    5. 'th' → logprob: -6.924293518066406
    6. ' thickness' → logprob: -7.049293518066406
    7. '(th' → logprob: -7.674293518066406
    8. ' bottom' → logprob: -9.299293518066406
    9. 'bottom' → logprob: -10.674293518066406
    10. '(' → logprob: -10.799293518066406

Token 131: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.00015038289711810648
    2. 'color' → logprob: -9.625150680541992
    3. '==' → logprob: -9.625150680541992
    4. ' ==' → logprob: -12.000150680541992
    5. '_' → logprob: -12.750150680541992
    6. '```' → logprob: -13.500150680541992
    7. '
' → logprob: -14.125150680541992
    8. '[' → logprob: -14.250150680541992
    9. '_COLOR' → logprob: -14.250150680541992
    10. 'and' → logprob: -14.375150680541992

Token 132: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12694533169269562
    2. ' ==' → logprob: -2.1269452571868896
    3. '0' → logprob: -11.251945495605469
    4. '==
' → logprob: -13.126945495605469
    5. '=' → logprob: -13.751945495605469
    6. ' ' → logprob: -14.376945495605469
    7. '()==' → logprob: -15.501945495605469
    8. '```' → logprob: -16.00194549560547
    9. 'and' → logprob: -16.37694549560547
    10. ')==' → logprob: -16.50194549560547

Token 133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000698972842656076
    2. ' ' → logprob: -7.750699043273926
    3. 'bottom' → logprob: -8.250699043273926
    4. ' bottom' → logprob: -12.125699043273926
    5. 'and' → logprob: -13.750699043273926
    6. ' and' → logprob: -14.875699043273926
    7. 'b' → logprob: -16.12569808959961
    8. '==' → logprob: -16.75069808959961
    9. '1' → logprob: -17.12569808959961
    10. '```' → logprob: -17.43819808959961

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006224881508387625
    2. 'bottom' → logprob: -7.500622272491455
    3. ' ' → logprob: -9.625622749328613
    4. ' bottom' → logprob: -13.000622749328613
    5. 'and' → logprob: -15.000622749328613
    6. 'b' → logprob: -15.125622749328613
    7. '1' → logprob: -15.500622749328613
    8. '```' → logprob: -16.063121795654297
    9. ' and' → logprob: -16.438121795654297
    10. 'bot' → logprob: -16.688121795654297

Token 135: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16023285686969757
    2. 'and' → logprob: -1.9102329015731812
    3. ' ' → logprob: -12.410232543945312
    4. ' else' → logprob: -12.660232543945312
    5. '==' → logprob: -14.160232543945312
    6. 'else' → logprob: -14.285232543945312
    7. ' ' → logprob: -16.285232543945312
    8. '0' → logprob: -16.785232543945312
    9. '	and' → logprob: -18.160232543945312
    10. ' и' → logprob: -18.410232543945312

Token 136: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.000553151941858232
    2. ' bottom' → logprob: -7.500553131103516
    3. '0' → logprob: -16.625553131103516
    4. 'bot' → logprob: -16.625553131103516
    5. '   ' → logprob: -17.375553131103516
    6. 'top' → logprob: -17.875553131103516
    7. 'b' → logprob: -18.250553131103516
    8. 'Bottom' → logprob: -18.500553131103516
    9. ' ' → logprob: -19.375553131103516
    10. '(bottom' → logprob: -19.375553131103516

Token 137: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.00016265720478259027
    2. 'color' → logprob: -8.875163078308105
    3. '_' → logprob: -12.500163078308105
    4. ')' → logprob: -13.000163078308105
    5. 'Color' → logprob: -13.000163078308105
    6. '==' → logprob: -13.500163078308105
    7. 'olor' → logprob: -13.625163078308105
    8. '
' → logprob: -13.875163078308105
    9. '_code' → logprob: -13.875163078308105
    10. '_COLOR' → logprob: -14.125163078308105

Token 138: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47414615750312805
    2. ' ==' → logprob: -0.9741461277008057
    3. '0' → logprob: -9.724145889282227
    4. '==
' → logprob: -12.724145889282227
    5. ' ' → logprob: -13.224145889282227
    6. '()==' → logprob: -13.349145889282227
    7. ')==' → logprob: -13.974145889282227
    8. ']==' → logprob: -13.974145889282227
    9. ' ==
' → logprob: -14.724145889282227
    10. '=' → logprob: -14.849145889282227

Token 139: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043126524542458355
    2. ' ' → logprob: -7.750431060791016
    3. 'top' → logprob: -16.000431060791016
    4. '1' → logprob: -16.187931060791016
    5. ' ' → logprob: -16.375431060791016
    6. 'l' → logprob: -16.812931060791016
    7. ' top' → logprob: -17.125431060791016
    8. '۰' → logprob: -17.375431060791016
    9. '  ' → logprob: -17.500431060791016
    10. '   ' → logprob: -17.687931060791016

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0722858102526516e-05
    2. ' ' → logprob: -10.125041007995605
    3. 'l' → logprob: -15.812541007995605
    4. '<|end|>' → logprob: -15.875041007995605
    5. '۰' → logprob: -16.31254005432129
    6. '1' → logprob: -17.00004005432129
    7. '<|end|>' → logprob: -17.31254005432129
    8. ')' → logprob: -17.56254005432129
    9. '```' → logprob: -17.68754005432129
    10. 'k' → logprob: -17.87504005432129

Token 141: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.006048485636711121
    2. ' and' → logprob: -5.506048679351807
    3. 'else' → logprob: -6.256048679351807
    4. 'and' → logprob: -10.131048202514648
    5. '   ' → logprob: -12.631048202514648
    6. ' ' → logprob: -12.756048202514648
    7. '	else' → logprob: -13.381048202514648
    8. '    ' → logprob: -14.631048202514648
    9. '  ' → logprob: -15.506048202514648
    10. '
' → logprob: -15.506048202514648

Token 142: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -17.250625610351562
    4. '  ' → logprob: -18.875625610351562
    5. ' ' → logprob: -18.875625610351562
    6. '۰' → logprob: -19.875625610351562
    7. '
' → logprob: -20.313125610351562
    8. '    ' → logprob: -20.875625610351562
    9. ' 
' → logprob: -21.375625610351562
    10. '	' → logprob: -21.375625610351562

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '000' → logprob: -21.5
    4. '۰' → logprob: -21.75
    5. '   ' → logprob: -22.125
    6. '00' → logprob: -23.125
    7. '```' → logprob: -23.375
    8. '০' → logprob: -23.875
    9. '  ' → logprob: -23.9375
    10. 'False' → logprob: -24.3125

Token 144: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010212593479081988
    2. '    
' → logprob: -7.251021385192871
    3. '<|end|>' → logprob: -8.626021385192871
    4. '
' → logprob: -9.501021385192871
    5. '  
' → logprob: -11.501021385192871
    6. ')' → logprob: -11.626021385192871
    7. '<|end|>' → logprob: -11.626021385192871
    8. ',' → logprob: -11.876021385192871
    9. 'if' → logprob: -12.376021385192871
    10. 'n' → logprob: -12.876021385192871

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024971159175038338
    2. '    
' → logprob: -4.024971008300781
    3. '
' → logprob: -5.149971008300781
    4. '\n' → logprob: -8.274971008300781
    5. '<|end|>' → logprob: -8.524971008300781
    6. '  
' → logprob: -8.899971008300781
    7. 'n' → logprob: -9.274971008300781
    8. '   
' → logprob: -9.399971008300781
    9. ' 
' → logprob: -9.774971008300781
    10. ' if' → logprob: -9.774971008300781

Token 146: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.2754511833190918
    2. 'if' → logprob: -1.9004511833190918
    3. ' res' → logprob: -3.650451183319092
    4. 'result' → logprob: -4.025451183319092
    5. 'total' → logprob: -4.025451183319092
    6. 'ans' → logprob: -4.775451183319092
    7. ' if' → logprob: -4.775451183319092
    8. 'count' → logprob: -5.150451183319092
    9. '   ' → logprob: -5.775451183319092
    10. 'next' → logprob: -6.775451183319092

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740811586380005
    2. '=' → logprob: -0.9740811586380005
    3. ' ' → logprob: -13.349081039428711
    4. ' +=' → logprob: -13.974081039428711
    5. ' ' → logprob: -14.349081039428711
    6. '  ' → logprob: -15.099081039428711
    7. ',' → logprob: -15.224081039428711
    8. ')' → logprob: -15.724081039428711
    9. '+=' → logprob: -16.47408103942871
    10. '   ' → logprob: -16.59908103942871

Token 148: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.035541169345378876
    2. ' ' → logprob: -3.41054105758667
    3. ' dp' → logprob: -6.91054105758667
    4. 'dp' → logprob: -7.03554105758667
    5. '(dp' → logprob: -12.285541534423828
    6. '   ' → logprob: -12.785541534423828
    7. ' (' → logprob: -12.785541534423828
    8. '(' → logprob: -13.410541534423828
    9. ' ' → logprob: -14.035541534423828
    10. '	dp' → logprob: -14.535541534423828

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02641710638999939
    2. 'dp' → logprob: -3.6514170169830322
    3. ' dp' → logprob: -10.151416778564453
    4. ' ' → logprob: -10.276416778564453
    5. '(dp' → logprob: -10.651416778564453
    6. '(' → logprob: -11.026416778564453
    7. '	dp' → logprob: -14.713916778564453
    8. '   ' → logprob: -14.838916778564453
    9. '

' → logprob: -15.276416778564453
    10. '1' → logprob: -15.463916778564453

Token 150: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07049873471260071
    2. '
' → logprob: -2.8204987049102783
    3. ' if' → logprob: -5.320498943328857
    4. '    
' → logprob: -6.445498943328857
    5. 'if' → logprob: -6.570498943328857
    6. ' res' → logprob: -8.9454984664917
    7. 'res' → logprob: -8.9454984664917
    8. ' for' → logprob: -9.3204984664917
    9. 'for' → logprob: -9.4454984664917
    10. '  
' → logprob: -9.9454984664917

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11790147423744202
    2. ' if' → logprob: -2.742901563644409
    3. 'if' → logprob: -3.742901563644409
    4. ' for' → logprob: -4.86790132522583
    5. 'for' → logprob: -4.99290132522583
    6. 'res' → logprob: -5.99290132522583
    7. '#' → logprob: -6.11790132522583
    8. ' res' → logprob: -6.24290132522583
    9. '    
' → logprob: -6.86790132522583
    10. '
' → logprob: -7.61790132522583

Token 152: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.34679287672042847
    2. '#' (adapté à ' #') → logprob: -1.5967929363250732
    3. 'for' → logprob: -2.7217929363250732
    4. 'res' → logprob: -3.7217929363250732
    5. 'next' → logprob: -7.721792697906494
    6. '   ' → logprob: -9.971793174743652
    7. '    
' → logprob: -10.596793174743652
    8. ' if' → logprob: -10.846793174743652
    9. '
' → logprob: -12.471793174743652
    10. 'color' → logprob: -13.346793174743652

Token 153: ' Choose' (ID: 25151)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3938864767551422
    2. '#' → logprob: -1.5188864469528198
    3. ' if' → logprob: -3.0188865661621094
    4. 'for' → logprob: -3.0188865661621094
    5. 'res' → logprob: -5.893886566162109
    6. 'next' → logprob: -6.018886566162109
    7. ' for' → logprob: -6.393886566162109
    8. ' next' → logprob: -6.768886566162109
    9. ' #' → logprob: -7.893886566162109
    10. ' res' → logprob: -8.51888656616211

Token 154: ' next' (ID: 2613)
  Prédit: ' thick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' thick' → logprob: -0.7613513469696045
    2. '   ' → logprob: -2.5113513469696045
    3. '#' → logprob: -2.6363513469696045
    4. ' dark' → logprob: -2.8863513469696045
    5. ' for' → logprob: -3.0113513469696045
    6. 'dark' → logprob: -3.3863513469696045
    7. ' thin' → logprob: -3.3863513469696045
    8. 'th' → logprob: -3.5113513469696045
    9. ' to' → logprob: -3.6363513469696045
    10. 'for' → logprob: -3.6363513469696045

Token 155: ' disk' (ID: 18044)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.1888481080532074
    2. '_disk' → logprob: -2.0638480186462402
    3. '_th' → logprob: -3.6888480186462402
    4. ' disk' → logprob: -4.68884801864624
    5. 'disk' → logprob: -5.68884801864624
    6. ' color' → logprob: -6.31384801864624
    7. 'color' → logprob: -6.43884801864624
    8. '   ' → logprob: -6.68884801864624
    9. ' thickness' → logprob: -7.06384801864624
    10. 'th' → logprob: -7.93884801864624

Token 156: ' thickness' (ID: 38833)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1113559007644653
    2. ' for' → logprob: -1.6113559007644653
    3. ' =' → logprob: -1.7363559007644653
    4. 'for' → logprob: -2.361355781555176
    5. ' if' → logprob: -2.611355781555176
    6. '=' → logprob: -2.736355781555176
    7. 'if' → logprob: -3.986355781555176
    8. ' in' → logprob: -4.486355781555176
    9. ':' → logprob: -5.111355781555176
    10. 'res' → logprob: -5.861355781555176

Token 157: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48595961928367615
    2. '=' → logprob: -1.8609596490859985
    3. ' =' → logprob: -2.235959529876709
    4. ' for' → logprob: -3.235959529876709
    5. 'for' → logprob: -3.610959529876709
    6. ',' → logprob: -3.860959529876709
    7. 'res' → logprob: -4.610959529876709
    8. ' and' → logprob: -4.985959529876709
    9. '
' → logprob: -5.360959529876709
    10. ' if' → logprob: -5.735959529876709

Token 158: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.023961879312992096
    2. ' color' → logprob: -3.7739617824554443
    3. 'next' → logprob: -7.523962020874023
    4. ' next' → logprob: -9.648962020874023
    5. 'def' → logprob: -11.148962020874023
    6. 'colors' → logprob: -11.148962020874023
    7. '#' → logprob: -11.398962020874023
    8. '
' → logprob: -11.523962020874023
    9. '_color' → logprob: -11.648962020874023
    10. 'th' → logprob: -11.773962020874023

Token 159: ' according' (ID: 7065)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06524848937988281
    2. '
' → logprob: -3.315248489379883
    3. ' for' → logprob: -4.315248489379883
    4. 'for' → logprob: -5.065248489379883
    5. '    
' → logprob: -5.690248489379883
    6. ' if' → logprob: -5.940248489379883
    7. ',' → logprob: -8.440248489379883
    8. 'if' → logprob: -8.565248489379883
    9. ' next' → logprob: -9.065248489379883
    10. 'next' → logprob: -9.065248489379883

Token 160: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0310224462300539
    2. ' to' → logprob: -3.531022548675537
    3. '_to' → logprob: -6.781022548675537
    4. 'ly' → logprob: -10.281022071838379
    5. '=' → logprob: -10.531022071838379
    6. ')' → logprob: -10.656022071838379
    7. ' ' → logprob: -11.281022071838379
    8. '```' → logprob: -11.906022071838379
    9. 'l' → logprob: -12.281022071838379
    10. '_' → logprob: -12.406022071838379

Token 161: ' altern' (ID: 7310)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' top' → logprob: -1.021625280380249
    2. ' the' → logprob: -1.271625280380249
    3. ' (' → logprob: -2.396625280380249
    4. ' thickness' → logprob: -2.396625280380249
    5. 'top' → logprob: -2.771625280380249
    6. 'the' → logprob: -3.271625280380249
    7. '(top' → logprob: -4.021625518798828
    8. ' rules' → logprob: -4.521625518798828
    9. ' constraints' → logprob: -4.521625518798828
    10. '(' → logprob: -4.771625518798828

Token 162: 'ation' (ID: 387)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.0019732422661036253
    2. 'ation' → logprob: -6.2519731521606445
    3. 'ance' → logprob: -10.376973152160645
    4. '_color' → logprob: -12.376973152160645
    5. '=' → logprob: -12.876973152160645
    6. '   ' → logprob: -13.251973152160645
    7. 'color' → logprob: -14.126973152160645
    8. 'ates' → logprob: -14.251973152160645
    9. 'ating' → logprob: -14.501973152160645
    10. 'e' → logprob: -15.001973152160645

Token 163: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01311246957629919
    2. '
' → logprob: -4.888112545013428
    3. ' for' → logprob: -6.013112545013428
    4. '    
' → logprob: -6.888112545013428
    5. ':' → logprob: -7.388112545013428
    6. 'for' → logprob: -7.888112545013428
    7. ',' → logprob: -7.888112545013428
    8. '<|end|>' → logprob: -9.13811206817627
    9. '  
' → logprob: -9.38811206817627
    10. '  ' → logprob: -9.76311206817627

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015120452269911766
    2. ' for' → logprob: -5.140120506286621
    3. ' next' → logprob: -5.390120506286621
    4. '
' → logprob: -6.515120506286621
    5. ' if' → logprob: -7.015120506286621
    6. 'next' → logprob: -7.140120506286621
    7. '    
' → logprob: -7.390120506286621
    8. 'for' → logprob: -7.515120506286621
    9. ',' → logprob: -9.890120506286621
    10. 'if' → logprob: -10.515120506286621

Token 165: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8245999217033386
    2. 'if' → logprob: -1.3245999813079834
    3. 'for' → logprob: -1.8245999813079834
    4. ' next' → logprob: -2.3245999813079834
    5. ' if' → logprob: -3.8245999813079834
    6. ' for' → logprob: -4.949599742889404
    7. '   ' → logprob: -5.449599742889404
    8. '#' (adapté à ' #') → logprob: -5.949599742889404
    9. 'color' → logprob: -8.574600219726562
    10. 'prev' → logprob: -9.074600219726562

Token 166: ' Allowed' (ID: 94306)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1684092283248901
    2. ' next' → logprob: -1.1684092283248901
    3. 'next' → logprob: -1.5434092283248901
    4. ' if' → logprob: -2.0434093475341797
    5. 'for' → logprob: -4.04340934753418
    6. '#' → logprob: -4.79340934753418
    7. '   ' → logprob: -5.41840934753418
    8. ' for' → logprob: -5.54340934753418
    9. ' #' → logprob: -8.16840934753418
    10. 'prev' → logprob: -8.54340934753418

Token 167: ' disks' (ID: 104238)
  Prédit: '_colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.7488163113594055
    2. '_th' → logprob: -0.9988163113594055
    3. '   ' → logprob: -3.3738162517547607
    4. '_disk' → logprob: -3.7488162517547607
    5. ' thickness' → logprob: -4.24881649017334
    6. 'th' → logprob: -4.24881649017334
    7. '_sizes' → logprob: -4.49881649017334
    8. '_dis' → logprob: -4.62381649017334
    9. ' =' → logprob: -5.24881649017334
    10. '_choices' → logprob: -5.24881649017334

Token 168: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.451943039894104
    2. '=' → logprob: -1.076943039894104
    3. 'for' → logprob: -5.0769429206848145
    4. ':' → logprob: -5.3269429206848145
    5. ' for' → logprob: -5.5769429206848145
    6. '=[' → logprob: -6.3269429206848145
    7. '   ' → logprob: -6.5769429206848145
    8. '_colors' → logprob: -7.0769429206848145
    9. '_sizes' → logprob: -7.0769429206848145
    10. 's' → logprob: -7.5769429206848145

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3629172742366791
    2. ' for' → logprob: -1.8629173040390015
    3. ' if' → logprob: -2.112917184829712
    4. 'for' → logprob: -3.862917184829712
    5. 'if' → logprob: -5.487917423248291
    6. '#' → logprob: -6.237917423248291
    7. '    
' → logprob: -7.862917423248291
    8. ' #' → logprob: -8.737916946411133
    9. '[' → logprob: -9.362916946411133
    10. ' res' → logprob: -9.737916946411133

Token 170: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9836911559104919
    2. ' for' → logprob: -1.2336912155151367
    3. 'for' → logprob: -1.6086912155151367
    4. 'if' → logprob: -2.2336912155151367
    5. '   ' → logprob: -4.233691215515137
    6. '#' (adapté à ' #') → logprob: -4.733691215515137
    7. '[' → logprob: -5.983691215515137
    8. '[(' → logprob: -7.608691215515137
    9. '[
' → logprob: -7.733691215515137
    10. ' #' → logprob: -8.233691215515137

Token 171: ' Dark' (ID: 22817)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45454609394073486
    2. ' for' → logprob: -1.4545460939407349
    3. 'for' → logprob: -3.0795459747314453
    4. 'if' → logprob: -3.3295459747314453
    5. '#' → logprob: -3.5795459747314453
    6. '   ' → logprob: -4.079545974731445
    7. ' #' → logprob: -5.579545974731445
    8. ' dark' → logprob: -7.204545974731445
    9. '    
' → logprob: -8.579545974731445
    10. ' next' → logprob: -8.704545974731445

Token 172: ' thin' (ID: 22558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.827783465385437
    2. ')' → logprob: -1.952783465385437
    3. '_th' → logprob: -2.3277835845947266
    4. ',' → logprob: -2.9527835845947266
    5. '=' → logprob: -2.9527835845947266
    6. ' (' → logprob: -3.2027835845947266
    7. '(' → logprob: -3.3277835845947266
    8. ':' → logprob: -3.3277835845947266
    9. '_k' → logprob: -3.8277835845947266
    10. 'th' → logprob: -4.202783584594727

Token 173: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7888004183769226
    2. '(' → logprob: -1.9138004779815674
    3. ' =' → logprob: -2.0388004779815674
    4. ' (' → logprob: -2.6638004779815674
    5. '   ' → logprob: -3.0388004779815674
    6. 'res' → logprob: -3.4138004779815674
    7. ')' → logprob: -3.7888004779815674
    8. ',' → logprob: -3.9138004779815674
    9. 'disk' → logprob: -4.038800239562988
    10. ':' → logprob: -4.288800239562988

Token 174: 'd' (ID: 67)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7064908146858215
    2. '1' → logprob: -1.3314907550811768
    3. 'k' → logprob: -2.8314907550811768
    4. '=' → logprob: -3.4564907550811768
    5. ',' → logprob: -3.4564907550811768
    6. '):' → logprob: -3.5814907550811768
    7. 'res' → logprob: -3.8314907550811768
    8. '0' → logprob: -3.9564907550811768
    9. ' =' → logprob: -4.831490993499756
    10. ' ' → logprob: -4.956490993499756

Token 175: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6249451637268066
    2. 'isk' → logprob: -1.2499451637268066
    3. '=' → logprob: -2.2499451637268066
    4. ',' → logprob: -4.499945163726807
    5. ' =' → logprob: -4.624945163726807
    6. 'ark' → logprob: -4.624945163726807
    7. '_' → logprob: -4.624945163726807
    8. '_)' → logprob: -5.624945163726807
    9. ' )' → logprob: -5.749945163726807
    10. '1' → logprob: -5.874945163726807

Token 176: ' thickness' (ID: 38833)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5449139475822449
    2. 'res' → logprob: -2.0449140071868896
    3. 'd' → logprob: -2.5449140071868896
    4. ' d' → logprob: -3.2949140071868896
    5. ' dark' → logprob: -3.2949140071868896
    6. 'Dark' → logprob: -3.4199140071868896
    7. '1' → logprob: -4.0449137687683105
    8. '#' → logprob: -4.1699137687683105
    9. ' Dark' → logprob: -4.2949137687683105
    10. 'dark' → logprob: -4.5449137687683105

Token 177: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20223714411258698
    2. '=' → logprob: -1.7022371292114258
    3. ')' → logprob: -8.202237129211426
    4. ' ' → logprob: -9.077237129211426
    5. '1' → logprob: -9.202237129211426
    6. ',' → logprob: -9.327237129211426
    7. '   ' → logprob: -9.327237129211426
    8. ' ==' → logprob: -10.077237129211426
    9. ' ' → logprob: -11.452237129211426
    10. ' ,' → logprob: -11.577237129211426

Token 178: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03732512891292572
    2. ' =' → logprob: -3.662325143814087
    3. '1' → logprob: -4.537324905395508
    4. ' ' → logprob: -8.787324905395508
    5. ')' → logprob: -10.412324905395508
    6. ',' → logprob: -11.162324905395508
    7. 'k' → logprob: -11.412324905395508
    8. '=k' → logprob: -11.412324905395508
    9. ':' → logprob: -11.912324905395508
    10. '   ' → logprob: -12.037324905395508

Token 179: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5027037262916565
    2. ')' → logprob: -1.8777036666870117
    3. ',' → logprob: -2.1277036666870117
    4. ' =' → logprob: -3.2527036666870117
    5. ' ' → logprob: -3.7527036666870117
    6. 'res' → logprob: -4.752703666687012
    7. '=' → logprob: -4.877703666687012
    8. ' res' → logprob: -5.002703666687012
    9. '<|end|>' → logprob: -5.002703666687012
    10. '
' → logprob: -5.377703666687012

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48124024271965027
    2. ')' → logprob: -1.3562402725219727
    3. '<|end|>' → logprob: -3.4812402725219727
    4. ',' → logprob: -3.8562402725219727
    5. ' ' → logprob: -3.9812402725219727
    6. '
' → logprob: -4.481240272521973
    7. '#' → logprob: -4.856240272521973
    8. '    
' → logprob: -5.231240272521973
    9. ' for' → logprob: -5.481240272521973
    10. ' res' → logprob: -5.981240272521973

Token 181: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42118826508522034
    2. 'res' → logprob: -1.921188235282898
    3. ' res' → logprob: -2.9211883544921875
    4. ' if' → logprob: -3.4211883544921875
    5. ' for' → logprob: -3.9211883544921875
    6. '
' → logprob: -3.9211883544921875
    7. ' 
' → logprob: -4.0461883544921875
    8. ',' → logprob: -4.4211883544921875
    9. '#' (adapté à ' #') → logprob: -4.9211883544921875
    10. '    
' → logprob: -5.0461883544921875

Token 182: ' Dark' (ID: 22817)
  Prédit: ' white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.6161655783653259
    2. ' res' → logprob: -1.6161656379699707
    3. ' for' → logprob: -2.7411656379699707
    4. '   ' → logprob: -3.2411656379699707
    5. ' if' → logprob: -3.4911656379699707
    6. 'White' → logprob: -3.6161656379699707
    7. ' White' → logprob: -3.7411656379699707
    8. '#' → logprob: -4.366165637969971
    9. ' dark' → logprob: -4.491165637969971
    10. 'res' → logprob: -4.491165637969971

Token 183: ' thick' (ID: 17154)
  Prédit: ' thin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' thin' → logprob: -0.07241536676883698
    2. 'thin' → logprob: -2.947415351867676
    3. ' thick' → logprob: -4.072415351867676
    4. '_th' → logprob: -9.197415351867676
    5. 'th' → logprob: -9.697415351867676
    6. ' k' → logprob: -10.322415351867676
    7. ' ' → logprob: -10.572415351867676
    8. ' ' → logprob: -10.822415351867676
    9. '(' → logprob: -10.947415351867676
    10. '_' → logprob: -11.322415351867676

Token 184: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10073807090520859
    2. ',' → logprob: -2.975738048553467
    3. '(' → logprob: -3.475738048553467
    4. ' ,' → logprob: -5.100738048553467
    5. ')' → logprob: -5.600738048553467
    6. '(k' → logprob: -6.975738048553467
    7. ' ' → logprob: -7.100738048553467
    8. ' =' → logprob: -7.475738048553467
    9. '   ' → logprob: -7.725738048553467
    10. '),' → logprob: -7.725738048553467

Token 185: 'D' (ID: 35)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2367217093706131
    2. ' k' → logprob: -1.6117217540740967
    3. '1' → logprob: -4.861721515655518
    4. ' ' → logprob: -6.236721515655518
    5. ')' → logprob: -7.236721515655518
    6. ',' → logprob: -8.486721992492676
    7. 'd' → logprob: -8.736721992492676
    8. ' d' → logprob: -9.111721992492676
    9. '),' → logprob: -9.361721992492676
    10. '2' → logprob: -9.736721992492676

Token 186: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47976404428482056
    2. '),' → logprob: -0.9797640442848206
    3. ' ),' → logprob: -5.854763984680176
    4. ',' → logprob: -6.604763984680176
    5. ' )' → logprob: -6.729763984680176
    6. '=' → logprob: -9.979763984680176
    7. 'd' → logprob: -10.479763984680176
    8. ',)' → logprob: -10.979763984680176
    9. '   ' → logprob: -11.104763984680176
    10. 'k' → logprob: -11.229763984680176

Token 187: ' thickness' (ID: 38833)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.33117255568504333
    2. ' thickness' → logprob: -1.4561725854873657
    3. 'k' → logprob: -3.081172466278076
    4. ' ' → logprob: -7.331172466278076
    5. 'th' → logprob: -7.331172466278076
    6. '1' → logprob: -7.581172466278076
    7. '2' → logprob: -8.706172943115234
    8. ' thick' → logprob: -8.706172943115234
    9. ')' → logprob: -8.956172943115234
    10. ' ' → logprob: -9.456172943115234

Token 188: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.22550928592681885
    2. 'k' → logprob: -1.6005092859268188
    3. ' ' → logprob: -9.850509643554688
    4. '=k' → logprob: -11.600509643554688
    5. '2' → logprob: -11.850509643554688
    6. '1' → logprob: -11.975509643554688
    7. ')' → logprob: -12.350509643554688
    8. '	k' → logprob: -12.725509643554688
    9. ',' → logprob: -13.350509643554688
    10. ' ' → logprob: -13.475509643554688

Token 189: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008334306068718433
    2. ')' → logprob: -5.883334159851074
    3. '
' → logprob: -6.258334159851074
    4. '    
' → logprob: -6.508334159851074
    5. '<|end|>' → logprob: -7.508334159851074
    6. ',' → logprob: -7.883334159851074
    7. ' ' → logprob: -8.133334159851074
    8. '#' → logprob: -8.508334159851074
    9. '  ' → logprob: -8.508334159851074
    10. '  
' → logprob: -9.008334159851074

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009236076730303466
    2. '    
' → logprob: -7.3759236335754395
    3. ')' → logprob: -9.125923156738281
    4. '#' → logprob: -9.750923156738281
    5. ' for' → logprob: -10.250923156738281
    6. ',' → logprob: -10.625923156738281
    7. '
' → logprob: -10.750923156738281
    8. 'for' → logprob: -11.000923156738281
    9. '<|end|>' → logprob: -12.125923156738281
    10. '   
' → logprob: -12.625923156738281

Token 191: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04364301264286041
    2. '#' (adapté à ' #') → logprob: -4.418642997741699
    3. ' if' → logprob: -4.793642997741699
    4. ' for' → logprob: -5.043642997741699
    5. '
' → logprob: -5.793642997741699
    6. 'for' → logprob: -5.793642997741699
    7. 'if' → logprob: -6.168642997741699
    8. '    
' → logprob: -6.293642997741699
    9. ' next' → logprob: -6.418642997741699
    10. 'next' → logprob: -7.043642997741699

Token 192: ' White' (ID: 10558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.46281540393829346
    2. '   ' → logprob: -1.3378154039382935
    3. 'White' → logprob: -3.212815284729004
    4. ' if' → logprob: -4.087815284729004
    5. 'if' → logprob: -4.337815284729004
    6. ' #' → logprob: -4.962815284729004
    7. ' white' → logprob: -5.087815284729004
    8. ' for' → logprob: -5.212815284729004
    9. 'for' → logprob: -5.337815284729004
    10. ' White' → logprob: -5.837815284729004

Token 193: ' thin' (ID: 22558)
  Prédit: ' thin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' thin' → logprob: -0.01269987877458334
    2. 'thin' → logprob: -4.387700080871582
    3. 'Thin' → logprob: -10.137700080871582
    4. ' (' → logprob: -10.387700080871582
    5. ' thick' → logprob: -10.762700080871582
    6. '1' → logprob: -11.012700080871582
    7. '(' → logprob: -11.387700080871582
    8. ' ' → logprob: -11.387700080871582
    9. ' ' → logprob: -12.012700080871582
    10. ' Thin' → logprob: -12.012700080871582

Token 194: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.09259378910064697
    2. '(' → logprob: -2.7175936698913574
    3. ',' → logprob: -4.717593669891357
    4. ')' → logprob: -5.717593669891357
    5. '<|end|>' → logprob: -5.967593669891357
    6. ' ' → logprob: -6.092593669891357
    7. '1' → logprob: -6.342593669891357
    8. ' ,' → logprob: -6.842593669891357
    9. '<|end|>' → logprob: -6.842593669891357
    10. '   ' → logprob: -7.717593669891357

Token 195: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.8079019784927368
    2. ')' → logprob: -1.3079019784927368
    3. '1' → logprob: -1.3079019784927368
    4. ' )' → logprob: -5.807901859283447
    5. ' ' → logprob: -6.182901859283447
    6. ',' → logprob: -6.182901859283447
    7. ' w' → logprob: -6.307901859283447
    8. 't' → logprob: -6.682901859283447
    9. '),' → logprob: -6.932901859283447
    10. 'd' → logprob: -7.432901859283447

Token 196: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0835685208439827
    2. '),' → logprob: -2.583568572998047
    3. ',' → logprob: -5.458568572998047
    4. '),
' → logprob: -9.708568572998047
    5. ' )' → logprob: -9.958568572998047
    6. ')
' → logprob: -9.958568572998047
    7. '   ' → logprob: -10.208568572998047
    8. '):

' → logprob: -10.208568572998047
    9. '),

' → logprob: -10.458568572998047
    10. '):
' → logprob: -10.708568572998047

Token 197: ' thickness' (ID: 38833)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3183055520057678
    2. ' ' → logprob: -1.693305492401123
    3. ' thickness' → logprob: -2.443305492401123
    4. 'th' → logprob: -6.693305492401123
    5. ' res' → logprob: -9.443305969238281
    6. 'res' → logprob: -9.693305969238281
    7. 'Thickness' → logprob: -9.943305969238281
    8. ')' → logprob: -10.005805969238281
    9. ' 
' → logprob: -10.193305969238281
    10. ' ' → logprob: -10.630805969238281

Token 198: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06994076818227768
    2. ' ' → logprob: -2.6949408054351807
    3. '=' → logprob: -13.569940567016602
    4. ' ' → logprob: -13.819940567016602
    5. '```' → logprob: -14.444940567016602
    6. '<|end|>' → logprob: -14.694940567016602
    7. '[' → logprob: -15.507440567016602
    8. '`' → logprob: -15.694940567016602
    9. '0' → logprob: -15.819940567016602
    10. ')' → logprob: -16.0074405670166

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '<|end|>' → logprob: -16.87500762939453
    4. '```' → logprob: -17.37500762939453
    5. '
' → logprob: -17.87500762939453
    6. '0' → logprob: -17.87500762939453
    7. '=' → logprob: -18.81250762939453
    8. '   ' → logprob: -18.87500762939453
    9. '`' → logprob: -19.31250762939453
    10. '１' → logprob: -19.62500762939453

Token 200: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024931374937295914
    2. '    
' → logprob: -7.002492904663086
    3. ')' → logprob: -7.252492904663086
    4. '<|end|>' → logprob: -7.877492904663086
    5. '
' → logprob: -9.252492904663086
    6. '#' → logprob: -9.502492904663086
    7. '  ' → logprob: -9.627492904663086
    8. ',' → logprob: -9.877492904663086
    9. ' ' → logprob: -9.877492904663086
    10. '  
' → logprob: -10.752492904663086

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007662679417990148
    2. '#' → logprob: -8.125765800476074
    3. '<|end|>' → logprob: -8.125765800476074
    4. ')' → logprob: -10.000765800476074
    5. '    
' → logprob: -10.500765800476074
    6. '  ' → logprob: -10.500765800476074
    7. ' ' → logprob: -11.000765800476074
    8. ' for' → logprob: -11.250765800476074
    9. ',' → logprob: -11.750765800476074
    10. ' #' → logprob: -12.375765800476074

Token 202: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007956750690937042
    2. '#' (adapté à ' #') → logprob: -5.1329569816589355
    3. ' next' → logprob: -6.8829569816589355
    4. ' for' → logprob: -8.007956504821777
    5. 'next' → logprob: -9.132956504821777
    6. ' if' → logprob: -9.132956504821777
    7. 'for' → logprob: -9.382956504821777
    8. 'colors' → logprob: -9.882956504821777
    9. ' #' → logprob: -10.007956504821777
    10. '    
' → logprob: -10.257956504821777

Token 203: ' No' (ID: 3004)
  Prédit: 'White'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'White' → logprob: -0.04215450584888458
    2. ' White' → logprob: -3.667154550552368
    3. '   ' → logprob: -4.417154312133789
    4. ' white' → logprob: -6.417154312133789
    5. 'white' → logprob: -7.042154312133789
    6. 'w' → logprob: -7.292154312133789
    7. 'Dark' → logprob: -9.042154312133789
    8. ' w' → logprob: -9.667154312133789
    9. '_white' → logprob: -9.667154312133789
    10. ' ' → logprob: -9.917154312133789

Token 204: ' white' (ID: 6461)
  Prédit: ' white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.6237898468971252
    2. 'w' → logprob: -0.8737898468971252
    3. 'white' → logprob: -3.2487897872924805
    4. '_white' → logprob: -5.6237897872924805
    5. 'White' → logprob: -6.6237897872924805
    6. ' thick' → logprob: -7.1237897872924805
    7. ' w' → logprob: -7.4987897872924805
    8. '#' → logprob: -7.8737897872924805
    9. ' whitespace' → logprob: -8.74878978729248
    10. 't' → logprob: -8.74878978729248

Token 205: ' thick' (ID: 17154)
  Prédit: ' thick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' thick' → logprob: -0.5672500729560852
    2. 'th' → logprob: -1.5672500133514404
    3. 'thin' → logprob: -1.5672500133514404
    4. ' thin' → logprob: -5.0672502517700195
    5. '_th' → logprob: -5.8172502517700195
    6. ')' → logprob: -6.0672502517700195
    7. '<|end|>' → logprob: -7.1922502517700195
    8. 'dark' → logprob: -7.8172502517700195
    9. 'd' → logprob: -8.31725025177002
    10. ',' → logprob: -8.31725025177002

Token 206: ' disks' (ID: 104238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06865920126438141
    2. '
' → logprob: -4.06865930557251
    3. ')' → logprob: -4.31865930557251
    4. '<|end|>' → logprob: -4.56865930557251
    5. ' ' → logprob: -4.81865930557251
    6. '    
' → logprob: -5.19365930557251
    7. 'tokens' → logprob: -6.69365930557251
    8. '#' → logprob: -6.81865930557251
    9. ',' → logprob: -6.81865930557251
    10. 's' → logprob: -7.06865930557251

Token 207: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2626885175704956
    2. 'if' → logprob: -2.762688636779785
    3. 'next' → logprob: -3.012688636779785
    4. '#' → logprob: -3.262688636779785
    5. ' if' → logprob: -3.387688636779785
    6. ' next' → logprob: -3.637688636779785
    7. 'for' → logprob: -4.637688636779785
    8. ' for' → logprob: -5.637688636779785
    9. ')' → logprob: -6.512688636779785
    10. 'colors' → logprob: -6.512688636779785

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34215906262397766
    2. 'next' → logprob: -1.7171590328216553
    3. ' next' → logprob: -3.0921590328216553
    4. 'if' → logprob: -3.4671590328216553
    5. '#' → logprob: -4.217159271240234
    6. ' if' → logprob: -4.842159271240234
    7. 'for' → logprob: -5.092159271240234
    8. 'prev' → logprob: -5.967159271240234
    9. ' for' → logprob: -6.842159271240234
    10. '    
' → logprob: -8.342159271240234

Token 209: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.659464955329895
    2. 'if' → logprob: -1.034464955329895
    3. '#' (adapté à ' #') → logprob: -2.5344648361206055
    4. 'for' → logprob: -3.1594648361206055
    5. ' next' → logprob: -6.1594648361206055
    6. '   ' → logprob: -6.6594648361206055
    7. ' if' → logprob: -7.1594648361206055
    8. 'prev' → logprob: -7.2844648361206055
    9. 'colors' → logprob: -8.034464836120605
    10. 'last' → logprob: -8.784464836120605

Token 210: ' current' (ID: 2208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5472550392150879
    2. 'next' → logprob: -1.297255039215088
    3. 'for' → logprob: -2.547255039215088
    4. '#' → logprob: -2.922255039215088
    5. ' next' → logprob: -4.922255039215088
    6. ' if' → logprob: -5.172255039215088
    7. 'prev' → logprob: -7.047255039215088
    8. 'colors' → logprob: -7.172255039215088
    9. ' for' → logprob: -7.672255039215088
    10. 'allowed' → logprob: -7.922255039215088

Token 211: ' top' (ID: 2344)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.009508264251053333
    2. '_top' → logprob: -5.75950813293457
    3. '_colors' → logprob: -5.88450813293457
    4. '_th' → logprob: -6.00950813293457
    5. '_layer' → logprob: -8.50950813293457
    6. 'color' → logprob: -8.63450813293457
    7. '_' → logprob: -9.38450813293457
    8. '=' → logprob: -9.38450813293457
    9. '_disk' → logprob: -9.88450813293457
    10. '_res' → logprob: -10.00950813293457

Token 212: ' disk' (ID: 18044)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.12908601760864258
    2. '=' → logprob: -2.3790860176086426
    3. 'color' → logprob: -4.629086017608643
    4. ' =' → logprob: -5.254086017608643
    5. '_colors' → logprob: -5.629086017608643
    6. '_next' → logprob: -6.004086017608643
    7. 'for' → logprob: -6.629086017608643
    8. 'if' → logprob: -7.004086017608643
    9. '_options' → logprob: -7.129086017608643
    10. '   ' → logprob: -7.754086017608643

Token 213: ' color' (ID: 3089)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.7830573320388794
    2. '=' → logprob: -1.0330573320388794
    3. 'color' → logprob: -1.9080573320388794
    4. ' =' → logprob: -3.40805721282959
    5. '=color' → logprob: -6.53305721282959
    6. '_colors' → logprob: -6.65805721282959
    7. 'colors' → logprob: -7.40805721282959
    8. ' color' → logprob: -7.53305721282959
    9. 'is' → logprob: -7.90805721282959
    10. ' is' → logprob: -8.65805721282959

Token 214: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1453230082988739
    2. ' =' → logprob: -2.0203230381011963
    3. ')' → logprob: -6.645322799682617
    4. '==' → logprob: -8.395322799682617
    5. ' if' → logprob: -8.770322799682617
    6. 'if' → logprob: -8.770322799682617
    7. ',' → logprob: -9.020322799682617
    8. '=color' → logprob: -9.145322799682617
    9. '=
' → logprob: -9.270322799682617
    10. ' ==' → logprob: -9.395322799682617

Token 215: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.2097945213317871
    2. '0' → logprob: -1.709794521331787
    3. '(' → logprob: -5.584794521331787
    4. '(top' → logprob: -5.834794521331787
    5. '1' → logprob: -6.959794521331787
    6. ' top' → logprob: -7.834794521331787
    7. ' ' → logprob: -8.959794998168945
    8. ' (' → logprob: -10.084794998168945
    9. 'None' → logprob: -10.334794998168945
    10. 'bottom' → logprob: -10.959794998168945

Token 216: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.033729031682014465
    2. '_' → logprob: -3.658729076385498
    3. ')' → logprob: -5.658729076385498
    4. '   ' → logprob: -6.408729076385498
    5. 'color' → logprob: -6.658729076385498
    6. ')_' → logprob: -8.28372859954834
    7. ',' → logprob: -9.28372859954834
    8. '```' → logprob: -9.53372859954834
    9. ' _' → logprob: -9.90872859954834
    10. '):' → logprob: -9.90872859954834

Token 217: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030520953238010406
    2. ' if' → logprob: -4.405520915985107
    3. '
' → logprob: -4.905520915985107
    4. '    
' → logprob: -5.405520915985107
    5. ',' → logprob: -5.780520915985107
    6. ' next' → logprob: -6.780520915985107
    7. 'if' → logprob: -7.905520915985107
    8. ')' → logprob: -8.405521392822266
    9. ' for' → logprob: -8.780521392822266
    10. ':' → logprob: -8.780521392822266

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5190913677215576
    2. ' if' → logprob: -1.5190913677215576
    3. ' next' → logprob: -2.5190913677215576
    4. '
' → logprob: -3.2690913677215576
    5. ' 
' → logprob: -4.394091606140137
    6. '    
' → logprob: -4.519091606140137
    7. 'if' → logprob: -4.644091606140137
    8. ',' → logprob: -4.769091606140137
    9. 'next' → logprob: -5.019091606140137
    10. ' for' → logprob: -5.769091606140137

Token 219: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5852861404418945
    2. 'if' → logprob: -1.4602861404418945
    3. ' next' → logprob: -1.9602861404418945
    4. ' if' → logprob: -2.9602861404418945
    5. '   ' → logprob: -4.3352861404418945
    6. 'for' → logprob: -5.5852861404418945
    7. ' for' → logprob: -6.9602861404418945
    8. 'n' → logprob: -8.835286140441895
    9. 'colors' → logprob: -9.460286140441895
    10. '#' (adapté à ' #') → logprob: -9.585286140441895

Token 220: ' Next' (ID: 13886)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.18376728892326355
    2. 'if' → logprob: -1.933767318725586
    3. ' next' → logprob: -4.183767318725586
    4. 'for' → logprob: -5.183767318725586
    5. ' if' → logprob: -6.683767318725586
    6. '   ' → logprob: -7.308767318725586
    7. '#' → logprob: -8.308767318725586
    8. 'allowed' → logprob: -9.183767318725586
    9. 'colors' → logprob: -10.058767318725586
    10. ' for' → logprob: -10.058767318725586

Token 221: ' disk' (ID: 18044)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.013600490055978298
    2. '_colors' → logprob: -4.6386003494262695
    3. '_' → logprob: -6.6386003494262695
    4. '   ' → logprob: -6.6386003494262695
    5. 'color' → logprob: -7.1386003494262695
    6. '_possible' → logprob: -9.38860034942627
    7. 'colors' → logprob: -9.76360034942627
    8. ' color' → logprob: -9.88860034942627
    9. '_layer' → logprob: -10.38860034942627
    10. 'def' → logprob: -10.76360034942627

Token 222: ' on' (ID: 402)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.05952025204896927
    2. '=' → logprob: -3.4345202445983887
    3. 'color' → logprob: -3.8095202445983887
    4. ' =' → logprob: -6.184520244598389
    5. '_colors' → logprob: -7.434520244598389
    6. '   ' → logprob: -8.309520721435547
    7. 's' → logprob: -8.809520721435547
    8. ' color' → logprob: -9.559520721435547
    9. '```' → logprob: -9.684520721435547
    10. 'colors' → logprob: -9.809520721435547

Token 223: ' top' (ID: 2344)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9042503237724304
    2. ' the' → logprob: -1.0292503833770752
    3. ' top' → logprob: -3.029250383377075
    4. 'top' → logprob: -3.779250383377075
    5. ' ' → logprob: -4.154250144958496
    6. '
' → logprob: -4.279250144958496
    7. '<|end|>' → logprob: -4.404250144958496
    8. ' =' → logprob: -4.529250144958496
    9. '1' → logprob: -4.779250144958496
    10. '   ' → logprob: -5.154250144958496

Token 224: ' must' (ID: 2804)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5249252915382385
    2. ' =' → logprob: -1.1499252319335938
    3. '=' → logprob: -2.6499252319335938
    4. ':' → logprob: -5.524925231933594
    5. '_color' → logprob: -5.524925231933594
    6. ' for' → logprob: -5.774925231933594
    7. ' next' → logprob: -6.399925231933594
    8. 'for' → logprob: -6.649925231933594
    9. '_colors' → logprob: -6.899925231933594
    10. 'color' → logprob: -7.274925231933594

Token 225: ' be' (ID: 413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9001811146736145
    2. ' be' → logprob: -1.5251810550689697
    3. ' not' → logprob: -1.6501810550689697
    4. 'not' → logprob: -2.2751810550689697
    5. '!=' → logprob: -3.4001810550689697
    6. ' =' → logprob: -3.7751810550689697
    7. ' have' → logprob: -4.650181293487549
    8. ' !=' → logprob: -5.650181293487549
    9. 'be' → logprob: -5.775181293487549
    10. '<|end|>' → logprob: -5.900181293487549

Token 226: ' opposite' (ID: 23821)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012660634238272905
    2. ' ' → logprob: -6.751266002655029
    3. '0' → logprob: -9.376266479492188
    4. '(' → logprob: -12.251266479492188
    5. '   ' → logprob: -12.751266479492188
    6. ' (' → logprob: -13.126266479492188
    7. '```' → logprob: -14.251266479492188
    8. 'not' → logprob: -15.126266479492188
    9. '`' → logprob: -15.876266479492188
    10. ',' → logprob: -16.251266479492188

Token 227: ' color' (ID: 3089)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.0012836871901527047
    2. 'color' → logprob: -6.751283645629883
    3. ' color' → logprob: -9.751283645629883
    4. '   ' → logprob: -10.376283645629883
    5. '_col' → logprob: -11.376283645629883
    6. ' =' → logprob: -13.126283645629883
    7. '_' → logprob: -13.251283645629883
    8. '_colors' → logprob: -13.251283645629883
    9. ' ' → logprob: -13.376283645629883
    10. 'Color' → logprob: -13.876283645629883

Token 228: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24480925500392914
    2. ' next' → logprob: -1.9948092699050903
    3. 'next' → logprob: -2.619809150695801
    4. ' if' → logprob: -5.744809150695801
    5. '
' → logprob: -6.869809150695801
    6. '    
' → logprob: -6.869809150695801
    7. 'if' → logprob: -6.994809150695801
    8. ' for' → logprob: -7.244809150695801
    9. 'for' → logprob: -7.619809150695801
    10. 'color' → logprob: -8.7448091506958

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008588333614170551
    2. '    
' → logprob: -5.2585883140563965
    3. ' 
' → logprob: -6.2585883140563965
    4. ' if' → logprob: -7.8835883140563965
    5. '
' → logprob: -8.383588790893555
    6. ' next' → logprob: -8.508588790893555
    7. '   
' → logprob: -8.883588790893555
    8. '  
' → logprob: -9.383588790893555
    9. ',' → logprob: -9.633588790893555
    10. ' ' → logprob: -9.758588790893555

Token 230: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.09087985754013062
    2. '   ' → logprob: -3.0908799171447754
    3. 'next' (adapté à ' next') → logprob: -3.2158799171447754
    4. ' nxt' → logprob: -7.840879917144775
    5. ' if' → logprob: -7.965879917144775
    6. ' for' → logprob: -8.090879440307617
    7. ' opposite' → logprob: -9.840879440307617
    8. 'for' → logprob: -10.215879440307617
    9. ' opp' → logprob: -10.340879440307617
    10. '	next' → logprob: -10.590879440307617

Token 231: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -4.572941179503687e-05
    2. '_' → logprob: -10.500045776367188
    3. '_colors' → logprob: -11.000045776367188
    4. 'color' → logprob: -15.375045776367188
    5. '```' → logprob: -15.500045776367188
    6. '_c' → logprob: -16.125045776367188
    7. '_colour' → logprob: -16.125045776367188
    8. '_col' → logprob: -16.250045776367188
    9. '_token' → logprob: -16.625045776367188
    10. '_op' → logprob: -16.625045776367188

Token 232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326204538345337
    2. ' =' → logprob: -1.3132619857788086
    3. ')' → logprob: -16.188262939453125
    4. 's' → logprob: -16.438262939453125
    5. ',' → logprob: -16.563262939453125
    6. ' ' → logprob: -17.438262939453125
    7. '=int' → logprob: -17.813262939453125
    8. '   ' → logprob: -17.813262939453125
    9. '＝' → logprob: -17.813262939453125
    10. '=

' → logprob: -18.438262939453125

Token 233: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007615271024405956
    2. ' ' → logprob: -4.882615089416504
    3. '   ' → logprob: -12.382615089416504
    4. '0' → logprob: -12.632615089416504
    5. '(' → logprob: -13.882615089416504
    6. ' (' → logprob: -14.507615089416504
    7. '
' → logprob: -17.50761604309082
    8. '  ' → logprob: -17.63261604309082
    9. '```' → logprob: -17.63261604309082
    10. 'top' → logprob: -17.88261604309082

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8802491215174086e-05
    2. ' ' → logprob: -11.375028610229492
    3. '(' → logprob: -11.500028610229492
    4. '0' → logprob: -12.125028610229492
    5. 'top' → logprob: -13.625028610229492
    6. '   ' → logprob: -15.250028610229492
    7. '(top' → logprob: -15.500028610229492
    8. '```' → logprob: -18.000028610229492
    9. '`' → logprob: -18.125028610229492
    10. '
' → logprob: -18.125028610229492

Token 235: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06205775961279869
    2. ' -' → logprob: -2.8120577335357666
    3. ' if' → logprob: -9.437057495117188
    4. 'if' → logprob: -11.687057495117188
    5. '-top' → logprob: -13.562057495117188
    6. '^' → logprob: -14.562057495117188
    7. '
' → logprob: -17.312057495117188
    8. ' ' → logprob: -17.437057495117188
    9. '   ' → logprob: -17.562057495117188
    10. 'top' → logprob: -17.687057495117188

Token 236: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -2.15310683415737e-05
    2. ' top' → logprob: -10.750021934509277
    3. '	top' → logprob: -23.00002098083496
    4. ' ' → logprob: -23.87502098083496
    5. '[top' → logprob: -24.25002098083496
    6. '   ' → logprob: -24.37502098083496
    7. '(top' → logprob: -24.75002098083496
    8. '  ' → logprob: -25.25002098083496
    9. '
' → logprob: -26.37502098083496
    10. 'Top' → logprob: -26.62502098083496

Token 237: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -1.3856492842023727e-06
    2. 'color' → logprob: -14.500000953674316
    3. '_code' → logprob: -15.500000953674316
    4. '_token' → logprob: -15.500000953674316
    5. '_' → logprob: -16.250001907348633
    6. '_COLOR' → logprob: -16.750001907348633
    7. '_colors' → logprob: -16.750001907348633
    8. 'Color' → logprob: -17.125001907348633
    9. '_colour' → logprob: -17.500001907348633
    10. ')' → logprob: -18.125001907348633

Token 238: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15070751309394836
    2. '   ' → logprob: -2.025707483291626
    3. '    
' → logprob: -5.400707721710205
    4. '<|end|>' → logprob: -6.400707721710205
    5. '  
' → logprob: -6.900707721710205
    6. '
' → logprob: -8.775707244873047
    7. '   
' → logprob: -9.275707244873047
    8. ' if' → logprob: -9.275707244873047
    9. '<|end|>' → logprob: -9.525707244873047
    10. ')' → logprob: -9.650707244873047

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013172352686524391
    2. '
' → logprob: -4.638172149658203
    3. '    
' → logprob: -6.263172149658203
    4. '<|end|>' → logprob: -6.763172149658203
    5. ' if' → logprob: -9.513172149658203
    6. '  
' → logprob: -9.888172149658203
    7. '<|end|>' → logprob: -10.263172149658203
    8. ' 
' → logprob: -10.638172149658203
    9. ')' → logprob: -10.763172149658203
    10. '    ' → logprob: -11.013172149658203

Token 240: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5547647476196289
    2. 'if' → logprob: -0.9297647476196289
    3. 'for' → logprob: -4.179764747619629
    4. '#' (adapté à ' #') → logprob: -4.929764747619629
    5. 'res' → logprob: -5.304764747619629
    6. ' if' → logprob: -6.304764747619629
    7. '
' → logprob: -6.679764747619629
    8. '    
' → logprob: -7.679764747619629
    9. ' for' → logprob: -10.429764747619629
    10. ' res' → logprob: -10.929764747619629

Token 241: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4903247654438019
    2. '#' → logprob: -1.6153247356414795
    3. 'res' → logprob: -2.3653247356414795
    4. 'for' → logprob: -2.4903247356414795
    5. '   ' → logprob: -4.615324974060059
    6. ' if' → logprob: -6.615324974060059
    7. '
' → logprob: -8.115324974060059
    8. ' for' → logprob: -8.990324974060059
    9. '```' → logprob: -9.490324974060059
    10. ' res' → logprob: -9.615324974060059

Token 242: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.28724902868270874
    2. 'next' → logprob: -1.5372490882873535
    3. ' thickness' → logprob: -3.5372490882873535
    4. 'th' → logprob: -5.9122490882873535
    5. 'k' → logprob: -6.2872490882873535
    6. ' k' → logprob: -7.1622490882873535
    7. 'top' → logprob: -9.162248611450195
    8. ' top' → logprob: -9.912248611450195
    9. '(next' → logprob: -10.912248611450195
    10. 'res' → logprob: -11.162248611450195

Token 243: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.0019424419151619077
    2. 'th' → logprob: -7.3769426345825195
    3. 'color' → logprob: -7.5019426345825195
    4. '_th' → logprob: -8.25194263458252
    5. 'next' → logprob: -8.37694263458252
    6. 'res' → logprob: -9.62694263458252
    7. ' thickness' → logprob: -9.87694263458252
    8. '   ' → logprob: -10.37694263458252
    9. ' next' → logprob: -11.00194263458252
    10. '#' → logprob: -11.12694263458252

Token 244: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04860462248325348
    2. '==' → logprob: -3.048604726791382
    3. ':' → logprob: -11.923604965209961
    4. '=' → logprob: -12.798604965209961
    5. ' ' → logprob: -13.173604965209961
    6. ' =' → logprob: -13.173604965209961
    7. '==
' → logprob: -13.798604965209961
    8. ')==' → logprob: -14.423604965209961
    9. ')' → logprob: -14.798604965209961
    10. ' is' → logprob: -14.923604965209961

Token 245: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023290548473596573
    2. '1' → logprob: -3.8982906341552734
    3. ' ' → logprob: -5.898290634155273
    4. '   ' → logprob: -15.460790634155273
    5. '#' → logprob: -15.960790634155273
    6. '  ' → logprob: -16.335790634155273
    7. '=' → logprob: -17.148290634155273
    8. '2' → logprob: -17.460790634155273
    9. 'l' → logprob: -17.460790634155273
    10. '==' → logprob: -17.773290634155273

Token 246: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04300912097096443
    2. '1' → logprob: -3.168009042739868
    3. ' ' → logprob: -11.668008804321289
    4. '#' → logprob: -15.355508804321289
    5. '   ' → logprob: -15.543008804321289
    6. '```' → logprob: -15.980508804321289
    7. '
' → logprob: -16.16800880432129
    8. '=' → logprob: -16.48050880432129
    9. '

' → logprob: -16.66800880432129
    10. '2' → logprob: -16.66800880432129

Token 247: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07035508006811142
    2. ':
' → logprob: -2.695355176925659
    3. ',' → logprob: -8.445355415344238
    4. '   ' → logprob: -8.695355415344238
    5. ' :' → logprob: -11.695355415344238
    6. '):' → logprob: -11.945355415344238
    7. '):
' → logprob: -12.070355415344238
    8. ':

' → logprob: -12.695355415344238
    9. ' and' → logprob: -13.070355415344238
    10. ':
' → logprob: -13.195355415344238

Token 248: 'dark' (ID: 42249)
  Prédit: 'dark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dark' → logprob: -0.43050628900527954
    2. ' dark' → logprob: -1.8055062294006348
    3. '#' → logprob: -2.5555062294006348
    4. 'Dark' → logprob: -3.1805062294006348
    5. ')' → logprob: -4.180506229400635
    6. 'd' → logprob: -4.555506229400635
    7. 'th' → logprob: -4.555506229400635
    8. '):' → logprob: -4.930506229400635
    9. '0' → logprob: -5.055506229400635
    10. ' thick' → logprob: -5.680506229400635

Token 249: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2683548927307129
    2. '):' → logprob: -1.518354892730713
    3. '),' → logprob: -4.518354892730713
    4. ')' → logprob: -6.393354892730713
    5. ':' → logprob: -6.643354892730713
    6. '   ' → logprob: -6.893354892730713
    7. ':
' → logprob: -7.393354892730713
    8. '):

' → logprob: -8.143354415893555
    9. ',' → logprob: -8.768354415893555
    10. '):
' → logprob: -9.018354415893555

Token 250: ' can' (ID: 665)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3135845363140106
    2. 'res' → logprob: -2.063584566116333
    3. '#' → logprob: -2.563584566116333
    4. ' res' → logprob: -3.063584566116333
    5. ' #' → logprob: -4.188584327697754
    6. 'for' → logprob: -7.063584327697754
    7. ' for' → logprob: -7.188584327697754
    8. ' if' → logprob: -7.563584327697754
    9. 'if' → logprob: -7.938584327697754
    10. '       ' → logprob: -8.188584327697754

Token 251: ' choose' (ID: 5655)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -1.0527831315994263
    2. 'res' → logprob: -1.3027831315994263
    3. '   ' → logprob: -1.8027831315994263
    4. 'choose' → logprob: -2.1777830123901367
    5. ' choose' → logprob: -2.6777830123901367
    6. '#' → logprob: -4.802783012390137
    7. '_choose' → logprob: -5.552783012390137
    8. ' use' → logprob: -5.927783012390137
    9. 'th' → logprob: -5.927783012390137
    10. ':' → logprob: -6.052783012390137

Token 252: ' thick' (ID: 17154)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9383995532989502
    2. '   ' → logprob: -1.6883995532989502
    3. ' for' → logprob: -2.68839955329895
    4. '
' → logprob: -3.18839955329895
    5. 'th' → logprob: -3.18839955329895
    6. 'for' → logprob: -3.18839955329895
    7. 'if' → logprob: -3.56339955329895
    8. 'thin' → logprob: -3.56339955329895
    9. ' if' → logprob: -3.81339955329895
    10. 'res' → logprob: -4.063399314880371

Token 253: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.8781483769416809
    2. ' and' → logprob: -1.3781483173370361
    3. '   ' → logprob: -2.128148317337036
    4. 'or' → logprob: -2.503148317337036
    5. 'and' → logprob: -3.128148317337036
    6. ' disks' → logprob: -3.878148317337036
    7. ',' → logprob: -4.628148555755615
    8. ')' → logprob: -4.628148555755615
    9. ' disk' → logprob: -5.003148555755615
    10. 'dis' → logprob: -5.003148555755615

Token 254: ' thin' (ID: 22558)
  Prédit: 'thin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'thin' → logprob: -0.16023336350917816
    2. ' thin' → logprob: -1.9102333784103394
    3. '1' → logprob: -11.910233497619629
    4. 'Thin' → logprob: -13.910233497619629
    5. ' ' → logprob: -14.160233497619629
    6. ' thick' → logprob: -15.160233497619629
    7. '薄' → logprob: -15.785233497619629
    8. 'th' → logprob: -16.160232543945312
    9. '   ' → logprob: -16.285232543945312
    10. '#' → logprob: -16.410232543945312

Token 255: ' dark' (ID: 8883)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08209821581840515
    2. '
' → logprob: -2.7070982456207275
    3. '    
' → logprob: -5.582098007202148
    4. ' res' → logprob: -5.957098007202148
    5. 'res' → logprob: -6.332098007202148
    6. ' if' → logprob: -6.582098007202148
    7. ',' → logprob: -7.082098007202148
    8. ' for' → logprob: -7.957098007202148
    9. 'if' → logprob: -8.457098007202148
    10. ':
' → logprob: -8.707098007202148

Token 256: ' disk' (ID: 18044)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016512564616277814
    2. '
' → logprob: -7.001651287078857
    3. ',' → logprob: -8.1266508102417
    4. ' if' → logprob: -8.8766508102417
    5. '    
' → logprob: -10.0016508102417
    6. ' for' → logprob: -10.0016508102417
    7. ':' → logprob: -10.5016508102417
    8. ')' → logprob: -10.7516508102417
    9. 'for' → logprob: -10.8766508102417
    10. '  ' → logprob: -11.0016508102417

Token 257: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00137404166162014
    2. 'if' → logprob: -7.251374244689941
    3. ' if' → logprob: -8.251374244689941
    4. '
' → logprob: -9.001374244689941
    5. 'res' → logprob: -9.376374244689941
    6. 'for' → logprob: -9.501374244689941
    7. '    
' → logprob: -10.126374244689941
    8. ' res' → logprob: -10.751374244689941
    9. ':' → logprob: -10.751374244689941
    10. ',' → logprob: -11.501374244689941

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002438432304188609
    2. 'res' → logprob: -6.752438545227051
    3. '
' → logprob: -7.627438545227051
    4. '    
' → logprob: -8.37743854522705
    5. ' res' → logprob: -8.50243854522705
    6. 'if' → logprob: -8.75243854522705
    7. 'for' → logprob: -9.25243854522705
    8. ' if' → logprob: -9.50243854522705
    9. ' for' → logprob: -11.25243854522705
    10. ',' → logprob: -13.37743854522705

Token 259: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3100641369819641
    2. 'if' (adapté à ' if') → logprob: -1.4350640773773193
    3. ' if' → logprob: -3.5600640773773193
    4. 'for' → logprob: -10.060064315795898
    5. '    
' → logprob: -12.310064315795898
    6. '	if' → logprob: -12.560064315795898
    7. 'res' → logprob: -12.935064315795898
    8. '
' → logprob: -13.060064315795898
    9. '```' → logprob: -13.060064315795898
    10. ' for' → logprob: -13.435064315795898

Token 260: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.38687169551849365
    2. 'next' → logprob: -1.1368716955184937
    3. '	next' → logprob: -15.261871337890625
    4. '(next' → logprob: -15.386871337890625
    5. '[next' → logprob: -16.511871337890625
    6. '_next' → logprob: -17.261871337890625
    7. '   ' → logprob: -17.261871337890625
    8. 'Next' → logprob: -17.386871337890625
    9. ' ' → logprob: -18.636871337890625
    10. '.next' → logprob: -18.886871337890625

Token 261: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -3.173704271830502e-06
    2. 'color' → logprob: -13.00000286102295
    3. '_' → logprob: -15.25000286102295
    4. '_COLOR' → logprob: -15.87500286102295
    5. '_token' → logprob: -16.375003814697266
    6. ' _' → logprob: -16.375003814697266
    7. '_colors' → logprob: -16.500003814697266
    8. '_c' → logprob: -17.125003814697266
    9. ' color' → logprob: -17.250003814697266
    10. 'Color' → logprob: -17.250003814697266

Token 262: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.048589304089546204
    2. '==' → logprob: -3.0485892295837402
    3. ')==' → logprob: -14.548589706420898
    4. ')' → logprob: -14.673589706420898
    5. ' ' → logprob: -14.673589706420898
    6. ' ' → logprob: -15.798589706420898
    7. '=' → logprob: -15.923589706420898
    8. ' =' → logprob: -16.6735897064209
    9. ':' → logprob: -16.9235897064209
    10. '==
' → logprob: -16.9235897064209

Token 263: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005952975247055292
    2. ' ' → logprob: -5.130952835083008
    3. '1' → logprob: -10.630952835083008
    4. '   ' → logprob: -16.505952835083008
    5. '  ' → logprob: -17.443452835083008
    6. '=' → logprob: -17.443452835083008
    7. '۰' → logprob: -18.005952835083008
    8. '```' → logprob: -18.005952835083008
    9. ',' → logprob: -18.318452835083008
    10. '<|end|>' → logprob: -18.380952835083008

Token 264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7954958821064793e-05
    2. ' ' → logprob: -11.000018119812012
    3. '1' → logprob: -13.625018119812012
    4. '۰' → logprob: -18.500017166137695
    5. '<|end|>' → logprob: -18.875017166137695
    6. '   ' → logprob: -19.062517166137695
    7. '  ' → logprob: -19.937517166137695
    8. '```' → logprob: -20.250017166137695
    9. '...' → logprob: -20.562517166137695
    10. ')' → logprob: -20.625017166137695

Token 265: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3869485855102539
    2. ':
' → logprob: -1.136948585510254
    3. '   ' → logprob: -10.261948585510254
    4. ':
' → logprob: -10.886948585510254
    5. ' :
' → logprob: -11.886948585510254
    6. '):
' → logprob: -12.136948585510254
    7. '       ' → logprob: -12.511948585510254
    8. ' :' → logprob: -12.511948585510254
    9. ':

' → logprob: -12.886948585510254
    10. '):' → logprob: -13.636948585510254

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06785127520561218
    2. 'res' → logprob: -2.9428513050079346
    3. '   ' → logprob: -4.8178510665893555
    4. 'for' → logprob: -6.3178510665893555
    5. '
' → logprob: -7.0678510665893555
    6. ' for' → logprob: -7.1928510665893555
    7. ' res' → logprob: -7.1928510665893555
    8. 'if' → logprob: -8.567851066589355
    9. ',' → logprob: -9.192851066589355
    10. ':' → logprob: -9.567851066589355

Token 267: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0010927118128165603
    2. '   ' → logprob: -7.251092910766602
    3. '#' (adapté à ' #') → logprob: -8.626092910766602
    4. ' res' → logprob: -8.751092910766602
    5. '
' → logprob: -10.876092910766602
    6. 'if' → logprob: -11.626092910766602
    7. 'for' → logprob: -12.001092910766602
    8. '       ' → logprob: -12.126092910766602
    9. 'return' → logprob: -12.751092910766602
    10. '	res' → logprob: -14.001092910766602

Token 268: ' dark' (ID: 8883)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.016651814803481102
    2. '#' → logprob: -4.516651630401611
    3. ' res' → logprob: -5.391651630401611
    4. '   ' → logprob: -7.016651630401611
    5. ' #' → logprob: -9.64165210723877
    6. 'for' → logprob: -10.51665210723877
    7. '       ' → logprob: -11.39165210723877
    8. 'if' → logprob: -11.51665210723877
    9. 'return' → logprob: -12.26665210723877
    10. '
' → logprob: -12.26665210723877

Token 269: ' thin' (ID: 22558)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4107324182987213
    2. ' res' → logprob: -1.285732388496399
    3. 'th' → logprob: -4.660732269287109
    4. 'thin' → logprob: -4.910732269287109
    5. '_res' → logprob: -5.285732269287109
    6. '#' → logprob: -5.535732269287109
    7. ' thin' → logprob: -5.660732269287109
    8. ' =' → logprob: -5.660732269287109
    9. '=' → logprob: -5.910732269287109
    10. '
' → logprob: -5.910732269287109

Token 270: ' disk' (ID: 18044)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.047142814844846725
    2. ' res' → logprob: -3.547142744064331
    3. '   ' → logprob: -5.54714298248291
    4. ')' → logprob: -5.79714298248291
    5. ':
' → logprob: -6.17214298248291
    6. ' +=' → logprob: -6.42214298248291
    7. '
' → logprob: -6.79714298248291
    8. ':' → logprob: -6.79714298248291
    9. '):
' → logprob: -6.92214298248291
    10. '):' → logprob: -7.04714298248291

Token 271: '
' (ID: 198)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.11028105765581131
    2. '
' → logprob: -2.735280990600586
    3. ' res' → logprob: -3.860280990600586
    4. ':
' → logprob: -5.235280990600586
    5. ':' → logprob: -5.485280990600586
    6. '   ' → logprob: -6.360280990600586
    7. ' =' → logprob: -6.610280990600586
    8. '=' → logprob: -6.985280990600586
    9. ' +=' → logprob: -7.235280990600586
    10. '):
' → logprob: -7.235280990600586

Token 272: '       ' (ID: 309)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.04880082979798317
    2. ' res' → logprob: -4.548800945281982
    3. '   ' → logprob: -4.673800945281982
    4. '+=' → logprob: -4.798800945281982
    5. ' +=' → logprob: -5.048800945281982
    6. '
' → logprob: -5.048800945281982
    7. '       ' → logprob: -6.298800945281982
    8. '=' → logprob: -6.923800945281982
    9. ':
' → logprob: -7.923800945281982
    10. ':' → logprob: -7.923800945281982

Token 273: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -5.943783253314905e-05
    2. ' res' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.125059127807617
    4. '       ' → logprob: -16.125059127807617
    5. 'return' → logprob: -16.125059127807617
    6. '
' → logprob: -16.375059127807617
    7. '(res' → logprob: -17.625059127807617
    8. '	res' → logprob: -17.625059127807617
    9. '           ' → logprob: -18.000059127807617
    10. '$res' → logprob: -19.125059127807617

Token 274: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06197440251708031
    2. ' +=' → logprob: -2.811974287033081
    3. '+' → logprob: -12.68697452545166
    4. '   ' → logprob: -13.18697452545166
    5. ']+=' → logprob: -13.68697452545166
    6. '=' → logprob: -14.93697452545166
    7. '+=(' → logprob: -15.68697452545166
    8. '```' → logprob: -17.311973571777344
    9. '  ' → logprob: -17.686973571777344
    10. '
' → logprob: -17.936973571777344

Token 275: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008049834286794066
    2. ' dp' → logprob: -7.125804901123047
    3. '	dp' → logprob: -14.875804901123047
    4. '_dp' → logprob: -16.625804901123047
    5. '(dp' → logprob: -17.000804901123047
    6. '
' → logprob: -17.125804901123047
    7. '   ' → logprob: -18.625804901123047
    8. 'd' → logprob: -18.625804901123047
    9. '.dp' → logprob: -19.375804901123047
    10. 'df' → logprob: -19.625804901123047

Token 276: '(th' (ID: 53988)
  Prédit: '(th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(th' → logprob: -3.5954712075181305e-05
    2. 'th' → logprob: -10.375036239624023
    3. '(' → logprob: -12.750036239624023
    4. ' (' → logprob: -13.750036239624023
    5. '(t' → logprob: -15.000036239624023
    6. '<th' → logprob: -15.500036239624023
    7. '	th' → logprob: -16.625036239624023
    8. '```' → logprob: -17.000036239624023
    9. '(
' → logprob: -17.625036239624023
    10. '   ' → logprob: -17.750036239624023

Token 277: 'ickness' (ID: 46853)
  Prédit: 'ickness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ickness' → logprob: -0.0007453064317815006
    2. 'ick' → logprob: -7.5007452964782715
    3. 'ck' → logprob: -9.37574577331543
    4. 'ic' → logprob: -10.25074577331543
    5. '(' → logprob: -10.87574577331543
    6. 'k' → logprob: -11.12574577331543
    7. 'ness' → logprob: -12.00074577331543
    8. 'ik' → logprob: -12.25074577331543
    9. '(th' → logprob: -12.25074577331543
    10. '(res' → logprob: -12.50074577331543

Token 278: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3879092037677765
    2. '-' → logprob: -1.137909173965454
    3. ',' → logprob: -7.012909412384033
    4. ' ,' → logprob: -9.512908935546875
    5. ' ' → logprob: -10.137908935546875
    6. '1' → logprob: -11.887908935546875
    7. '-th' → logprob: -12.012908935546875
    8. 'th' → logprob: -13.012908935546875
    9. ')' → logprob: -13.637908935546875
    10. '   ' → logprob: -13.637908935546875

Token 279: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.875001907348633
    4. '
' → logprob: -19.125001907348633
    5. ')' → logprob: -19.500001907348633
    6. '```' → logprob: -19.500001907348633
    7. ',' → logprob: -19.875001907348633
    8. '  ' → logprob: -21.062501907348633
    9. '`' → logprob: -21.375001907348633
    10. '۱' → logprob: -21.500001907348633

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. 'l' → logprob: -19.25
    4. '```' → logprob: -20.125
    5. '۱' → logprob: -21.0625
    6. '
' → logprob: -21.125
    7. '   ' → logprob: -21.25
    8. 'k' → logprob: -21.3125
    9. ')' → logprob: -21.375
    10. '১' → logprob: -21.5625

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022940391500014812
    2. ' ,' → logprob: -8.625229835510254
    3. ',next' → logprob: -10.000229835510254
    4. ',
' → logprob: -13.625229835510254
    5. ' next' → logprob: -13.625229835510254
    6. 'next' → logprob: -14.250229835510254
    7. '   ' → logprob: -15.250229835510254
    8. '(next' → logprob: -15.250229835510254
    9. '[next' → logprob: -15.250229835510254
    10. '```' → logprob: -16.000228881835938

Token 282: ' next' (ID: 2613)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0035227409098297358
    2. '1' → logprob: -5.878522872924805
    3. 'next' → logprob: -7.503522872924805
    4. ' ' → logprob: -8.878522872924805
    5. ' next' → logprob: -11.003522872924805
    6. '   ' → logprob: -12.003522872924805
    7. '
' → logprob: -14.378522872924805
    8. ')' → logprob: -14.816022872924805
    9. '(next' → logprob: -14.878522872924805
    10. '  ' → logprob: -15.003522872924805

Token 283: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -1.2948405128554441e-05
    2. 'color' → logprob: -11.62501335144043
    3. '_COLOR' → logprob: -13.50001335144043
    4. '_' → logprob: -14.25001335144043
    5. 'Color' → logprob: -14.25001335144043
    6. '0' → logprob: -14.75001335144043
    7. ' ' → logprob: -16.12501335144043
    8. '_colors' → logprob: -16.62501335144043
    9. ')' → logprob: -16.75001335144043
    10. ' _' → logprob: -17.12501335144043

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017910730093717575
    2. ' ,' → logprob: -8.750179290771484
    3. ')' → logprob: -10.875179290771484
    4. ',
' → logprob: -15.125179290771484
    5. ',b' → logprob: -15.125179290771484
    6. '),' → logprob: -15.375179290771484
    7. ' ' → logprob: -15.625179290771484
    8. '   ' → logprob: -15.750179290771484
    9. '‌,' → logprob: -16.375179290771484
    10. ',)' → logprob: -16.375179290771484

Token 285: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.00034023032640106976
    2. ' bottom' → logprob: -8.000340461730957
    3. '   ' → logprob: -12.750340461730957
    4. '0' → logprob: -14.000340461730957
    5. 'top' → logprob: -14.500340461730957
    6. 'bot' → logprob: -16.25033950805664
    7. 'b' → logprob: -16.50033950805664
    8. '```' → logprob: -16.62533950805664
    9. '       ' → logprob: -16.87533950805664
    10. '(bottom' → logprob: -17.00033950805664

Token 286: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -2.558399319241289e-05
    2. 'color' → logprob: -10.750025749206543
    3. ')' → logprob: -13.125025749206543
    4. ',' → logprob: -14.500025749206543
    5. 'Color' → logprob: -15.125025749206543
    6. '_COLOR' → logprob: -15.125025749206543
    7. '_code' → logprob: -15.625025749206543
    8. ' color' → logprob: -15.750025749206543
    9. '_' → logprob: -15.875025749206543
    10. ')_' → logprob: -16.625024795532227

Token 287: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009162207134068012
    2. ')
' → logprob: -7.000916004180908
    3. ')

' → logprob: -12.750916481018066
    4. '   ' → logprob: -13.750916481018066
    5. ' )' → logprob: -14.500916481018066
    6. ')
' → logprob: -15.250916481018066
    7. ')+' → logprob: -16.87591552734375
    8. ')*' → logprob: -17.75091552734375
    9. '       ' → logprob: -18.00091552734375
    10. '),' → logprob: -18.12591552734375

Token 288: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009002508595585823
    2. '       ' → logprob: -5.134002685546875
    3. '    
' → logprob: -6.509002685546875
    4. '
' → logprob: -7.009002685546875
    5. 'res' → logprob: -8.759002685546875
    6. '  ' → logprob: -9.134002685546875
    7. '  
' → logprob: -9.384002685546875
    8. ' ' → logprob: -9.634002685546875
    9. '        
' → logprob: -10.259002685546875
    10. ' res' → logprob: -10.259002685546875

Token 289: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.05935772508382797
    2. '       ' → logprob: -2.9343576431274414
    3. ' res' → logprob: -6.059357643127441
    4. '
' → logprob: -6.809357643127441
    5. '        
' → logprob: -7.184357643127441
    6. '   ' → logprob: -8.934357643127441
    7. '    
' → logprob: -9.809357643127441
    8. '	res' → logprob: -10.809357643127441
    9. ' 
' → logprob: -10.934357643127441
    10. '\
' → logprob: -12.184357643127441

Token 290: ' dark' (ID: 8883)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.16024240851402283
    2. ' res' → logprob: -1.9102424383163452
    3. ' if' → logprob: -11.785242080688477
    4. 'dp' → logprob: -13.035242080688477
    5. 'if' → logprob: -13.160242080688477
    6. '   ' → logprob: -13.535242080688477
    7. ' dp' → logprob: -13.910242080688477
    8. ' ' → logprob: -14.410242080688477
    9. '	res' → logprob: -14.410242080688477
    10. '       ' → logprob: -14.535242080688477

Token 291: ' thick' (ID: 17154)
  Prédit: ' thick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' thick' → logprob: -0.32359734177589417
    2. 'th' → logprob: -1.3235973119735718
    3. 'res' → logprob: -5.323597431182861
    4. '_th' → logprob: -5.573597431182861
    5. 'thin' → logprob: -7.573597431182861
    6. ' res' → logprob: -7.698597431182861
    7. 'k' → logprob: -8.448596954345703
    8. 'dp' → logprob: -9.698596954345703
    9. '-th' → logprob: -9.823596954345703
    10. 'D' → logprob: -10.698596954345703

Token 292: ' disk' (ID: 18044)
  Prédit: ' disk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' disk' → logprob: -0.5805495381355286
    2. 'disk' → logprob: -1.3305494785308838
    3. '_disk' → logprob: -1.8305494785308838
    4. 'res' → logprob: -4.330549716949463
    5. ')' → logprob: -7.080549716949463
    6. '       ' → logprob: -7.705549716949463
    7. '   ' → logprob: -7.705549716949463
    8. ' res' → logprob: -8.080549240112305
    9. 'Disk' → logprob: -9.580549240112305
    10. '_res' → logprob: -9.705549240112305

Token 293: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.356599360704422
    2. '
' → logprob: -1.6065993309020996
    3. 'res' → logprob: -3.1065993309020996
    4. ')' → logprob: -4.2315993309021
    5. '+' → logprob: -4.6065993309021
    6. '+
' → logprob: -4.9815993309021
    7. '<|end|>' → logprob: -5.6065993309021
    8. ')
' → logprob: -5.7315993309021
    9. ',' → logprob: -5.9815993309021
    10. ' +=' → logprob: -5.9815993309021

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014608960598707199
    2. 'res' → logprob: -5.139608860015869
    3. ' +=' → logprob: -5.514608860015869
    4. '
' → logprob: -6.014608860015869
    5. '+=' → logprob: -7.139608860015869
    6. ' res' → logprob: -7.389608860015869
    7. '           ' → logprob: -8.889609336853027
    8. '   ' → logprob: -9.014609336853027
    9. ')' → logprob: -9.139609336853027
    10. ',' → logprob: -9.514609336853027

Token 295: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.029756510630249977
    2. ' res' → logprob: -3.529756546020508
    3. '+=' → logprob: -12.654756546020508
    4. ' +=' → logprob: -13.154756546020508
    5. '(res' → logprob: -14.654756546020508
    6. '+' → logprob: -15.904756546020508
    7. '	res' → logprob: -16.029756546020508
    8. '
' → logprob: -16.279756546020508
    9. '$res' → logprob: -17.279756546020508
    10. '       ' → logprob: -17.404756546020508

Token 296: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04859338700771332
    2. ' +=' → logprob: -3.048593282699585
    3. ']+=' → logprob: -12.298593521118164
    4. '+=(' → logprob: -13.798593521118164
    5. '+="' → logprob: -15.298593521118164
    6. '+='' → logprob: -15.798593521118164
    7. '+' → logprob: -16.173593521118164
    8. '=' → logprob: -17.548593521118164
    9. '   ' → logprob: -19.548593521118164
    10. '```' → logprob: -19.923593521118164

Token 297: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07889111340045929
    2. ' dp' → logprob: -2.5788910388946533
    3. '(dp' → logprob: -13.578890800476074
    4. '	dp' → logprob: -16.20389175415039
    5. '_dp' → logprob: -18.70389175415039
    6. 'df' → logprob: -19.45389175415039
    7. '.dp' → logprob: -19.57889175415039
    8. 'd' → logprob: -19.95389175415039
    9. ' ' → logprob: -20.57889175415039
    10. 'def' → logprob: -20.70389175415039

Token 298: '(th' (ID: 53988)
  Prédit: '(th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(th' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -14.000001907348633
    3. ' (' → logprob: -14.125001907348633
    4. 'th' → logprob: -17.125001907348633
    5. '(t' → logprob: -17.500001907348633
    6. '(depth' → logprob: -17.750001907348633
    7. '<th' → logprob: -18.625001907348633
    8. '(trans' → logprob: -19.000001907348633
    9. '(
' → logprob: -19.250001907348633
    10. '(the' → logprob: -19.500001907348633

Token 299: 'ickness' (ID: 46853)
  Prédit: 'ickness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ickness' → logprob: -0.0006185544189065695
    2. 'ick' → logprob: -7.5006184577941895
    3. 'ck' → logprob: -10.000618934631348
    4. 'ic' → logprob: -12.000618934631348
    5. 'ness' → logprob: -12.125618934631348
    6. 'k' → logprob: -13.125618934631348
    7. '(' → logprob: -13.375618934631348
    8. 'ich' → logprob: -13.875618934631348
    9. 'ik' → logprob: -14.500618934631348
    10. '   ' → logprob: -15.000618934631348

Token 300: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0009136092266999185
    2. '-' → logprob: -7.000913619995117
    3. '-k' → logprob: -13.500913619995117
    4. ' ' → logprob: -14.875913619995117
    5. '-th' → logprob: -16.375913619995117
    6. ')' → logprob: -16.375913619995117
    7. '(' → logprob: -17.375913619995117
    8. '-token' → logprob: -17.500913619995117
    9. '<|end|>' → logprob: -17.875913619995117
    10. ' ' → logprob: -17.875913619995117

Token 301: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0002613358374219388
    2. ' k' → logprob: -8.250261306762695
    3. '	k' → logprob: -19.375261306762695
    4. ' ' → logprob: -19.500261306762695
    5. '{k' → logprob: -19.875261306762695
    6. '1' → logprob: -20.625261306762695
    7. '_k' → logprob: -20.750261306762695
    8. '   ' → logprob: -21.125261306762695
    9. '(k' → logprob: -21.250261306762695
    10. 'K' → logprob: -21.375261306762695

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018661346985027194
    2. ' ,' → logprob: -8.625186920166016
    3. '-' → logprob: -12.625186920166016
    4. ')' → logprob: -13.000186920166016
    5. ' -' → logprob: -14.500186920166016
    6. '   ' → logprob: -15.125186920166016
    7. '),' → logprob: -15.375186920166016
    8. ',
' → logprob: -16.500186920166016
    9. '-,' → logprob: -16.500186920166016
    10. '       ' → logprob: -16.750186920166016

Token 303: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.018177097663283348
    2. ' next' → logprob: -4.018177032470703
    3. '0' → logprob: -10.518177032470703
    4. '(next' → logprob: -15.768177032470703
    5. '[next' → logprob: -16.893177032470703
    6. '	next' → logprob: -17.393177032470703
    7. ' ' → logprob: -18.893177032470703
    8. '.next' → logprob: -19.268177032470703
    9. ',next' → logprob: -20.393177032470703
    10. '_next' → logprob: -21.018177032470703

Token 304: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.00020473242329899222
    2. 'color' → logprob: -8.500205039978027
    3. 'Color' → logprob: -14.375205039978027
    4. '-color' → logprob: -14.750205039978027
    5. '_COLOR' → logprob: -16.75020408630371
    6. ')' → logprob: -16.87520408630371
    7. '_code' → logprob: -17.50020408630371
    8. ' color' → logprob: -17.62520408630371
    9. '_token' → logprob: -18.00020408630371
    10. '-' → logprob: -18.12520408630371

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.610702363715973e-06
    2. ' ,' → logprob: -11.625009536743164
    3. ')' → logprob: -14.500009536743164
    4. ',b' → logprob: -16.875009536743164
    5. ',
' → logprob: -17.750009536743164
    6. '),' → logprob: -18.375009536743164
    7. '   ' → logprob: -18.500009536743164
    8. '       ' → logprob: -19.250009536743164
    9. ' bottom' → logprob: -19.250009536743164
    10. '(),' → logprob: -19.500009536743164

Token 306: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.004078401252627373
    2. ' bottom' → logprob: -5.504078388214111
    3. '0' → logprob: -19.129077911376953
    4. 'b' → logprob: -19.379077911376953
    5. ' ' → logprob: -19.879077911376953
    6. 'bot' → logprob: -20.629077911376953
    7. '_bottom' → logprob: -20.879077911376953
    8. '   ' → logprob: -21.004077911376953
    9. 'top' → logprob: -21.254077911376953
    10. 'Bottom' → logprob: -21.254077911376953

Token 307: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.00011081460979767144
    2. 'color' → logprob: -9.125110626220703
    3. 'Color' → logprob: -14.375110626220703
    4. ')' → logprob: -15.125110626220703
    5. 'k' → logprob: -15.125110626220703
    6. '_COLOR' → logprob: -15.500110626220703
    7. '_colour' → logprob: -15.750110626220703
    8. '-color' → logprob: -16.375110626220703
    9. '_code' → logprob: -16.500110626220703
    10. 'bottom' → logprob: -17.125110626220703

Token 308: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.93448489275761e-05
    2. ')
' → logprob: -9.500079154968262
    3. '   ' → logprob: -12.375079154968262
    4. ' )' → logprob: -15.875079154968262
    5. '       ' → logprob: -17.125080108642578
    6. ')}' → logprob: -18.000080108642578
    7. ')return' → logprob: -18.375080108642578
    8. ')
' → logprob: -18.375080108642578
    9. ')

' → logprob: -18.625080108642578
    10. '}' → logprob: -19.000080108642578

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003802680876106024
    2. 'else' → logprob: -8.375380516052246
    3. ' else' → logprob: -9.750380516052246
    4. ')' → logprob: -10.250380516052246
    5. '```' → logprob: -11.250380516052246
    6. 'elif' → logprob: -11.375380516052246
    7. '    
' → logprob: -11.750380516052246
    8. 'return' → logprob: -11.750380516052246
    9. '   ' → logprob: -12.125380516052246
    10. ' return' → logprob: -13.250380516052246

Token 310: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10941161960363388
    2. 'else' (adapté à ' else') → logprob: -2.3594117164611816
    3. ' else' → logprob: -4.734411716461182
    4. 'elif' → logprob: -8.234411239624023
    5. '```' → logprob: -9.734411239624023
    6. ')' → logprob: -10.234411239624023
    7. ' elif' → logprob: -11.984411239624023
    8. '    
' → logprob: -13.359411239624023
    9. 'if' → logprob: -13.359411239624023
    10. '
' → logprob: -13.984411239624023

Token 311: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14603473246097565
    2. '   ' → logprob: -2.0210347175598145
    3. ':
' → logprob: -6.0210347175598145
    4. '       ' → logprob: -7.1460347175598145
    5. '{' → logprob: -9.521035194396973
    6. ' :' → logprob: -10.146035194396973
    7. '{
' → logprob: -11.271035194396973
    8. '```' → logprob: -13.271035194396973
    9. '):
' → logprob: -13.396035194396973
    10. '):' → logprob: -13.396035194396973

Token 312: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00037263904232531786
    2. '       ' → logprob: -8.000372886657715
    3. '#' → logprob: -10.500372886657715
    4. ' res' → logprob: -12.125372886657715
    5. 'res' → logprob: -13.375372886657715
    6. '```' → logprob: -13.375372886657715
    7. '   ' → logprob: -14.500372886657715
    8. ' #' → logprob: -14.625372886657715
    9. ' ' → logprob: -16.6253719329834
    10. '    
' → logprob: -16.8753719329834

Token 313: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2703201174736023
    2. '#' (adapté à ' #') → logprob: -2.020320177078247
    3. 'res' → logprob: -2.270320177078247
    4. ' res' → logprob: -7.020319938659668
    5. ' #' → logprob: -9.770319938659668
    6. '       ' → logprob: -11.145319938659668
    7. ' ' → logprob: -12.520319938659668
    8. '  ' → logprob: -13.270319938659668
    9. '```' → logprob: -14.020319938659668
    10. '	res' → logprob: -14.395319938659668

Token 314: ' white' (ID: 6461)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6992135047912598
    2. 'res' → logprob: -0.6992135047912598
    3. '   ' → logprob: -5.44921350479126
    4. ' res' → logprob: -6.44921350479126
    5. ' #' → logprob: -8.949213027954102
    6. '       ' → logprob: -10.324213027954102
    7. '
' → logprob: -14.074213027954102
    8. ' ' → logprob: -14.074213027954102
    9. '	res' → logprob: -14.199213027954102
    10. '  ' → logprob: -15.074213027954102

Token 315: ' thin' (ID: 22558)
  Prédit: 'thin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'thin' → logprob: -0.4586143493652344
    2. ' thin' → logprob: -1.3336143493652344
    3. 'res' → logprob: -2.7086143493652344
    4. ' res' → logprob: -3.3336143493652344
    5. '   ' → logprob: -7.333614349365234
    6. '#' → logprob: -7.583614349365234
    7. '1' → logprob: -8.583614349365234
    8. '_' → logprob: -9.333614349365234
    9. 'Thin' → logprob: -9.583614349365234
    10. 'th' → logprob: -9.583614349365234

Token 316: ' disk' (ID: 18044)
  Prédit: 'disk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'disk' → logprob: -0.2188292294740677
    2. 'res' → logprob: -2.3438291549682617
    3. ' disk' → logprob: -2.3438291549682617
    4. ' res' → logprob: -6.218829154968262
    5. 'dp' → logprob: -6.343829154968262
    6. '_disk' → logprob: -7.843829154968262
    7. '   ' → logprob: -8.343829154968262
    8. 'dis' → logprob: -8.468829154968262
    9. ' dp' → logprob: -10.968829154968262
    10. 'Disk' → logprob: -12.593829154968262

Token 317: ' only' (ID: 1606)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.07948429137468338
    2. '   ' → logprob: -2.579484224319458
    3. ' res' → logprob: -7.579484462738037
    4. '(res' → logprob: -10.454483985900879
    5. '       ' → logprob: -10.704483985900879
    6. '```' → logprob: -11.329483985900879
    7. '
' → logprob: -11.454483985900879
    8. '	res' → logprob: -11.954483985900879
    9. '    
' → logprob: -13.954483985900879
    10. '  ' → logprob: -14.704483985900879

Token 318: '
' (ID: 198)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.39187175035476685
    2. '   ' → logprob: -1.141871690750122
    3. '       ' → logprob: -5.391871929168701
    4. ' res' → logprob: -7.766871929168701
    5. '	res' → logprob: -12.641871452331543
    6. '
' → logprob: -12.891871452331543
    7. '(res' → logprob: -13.766871452331543
    8. '```' → logprob: -13.766871452331543
    9. '  ' → logprob: -14.016871452331543
    10. ' ' → logprob: -14.391871452331543

Token 319: '       ' (ID: 309)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.31436362862586975
    2. '   ' → logprob: -1.3143635988235474
    3. ' res' → logprob: -6.814363479614258
    4. '       ' → logprob: -12.939363479614258
    5. '	res' → logprob: -14.314363479614258
    6. '  ' → logprob: -15.814363479614258
    7. ' ' → logprob: -16.564363479614258
    8. '```' → logprob: -16.689363479614258
    9. '
' → logprob: -16.939363479614258
    10. '    
' → logprob: -17.189363479614258

Token 320: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -1.676292231422849e-05
    2. ' res' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.875017166137695
    4. 'return' → logprob: -19.625017166137695
    5. 'dp' → logprob: -21.125017166137695
    6. '	res' → logprob: -21.750017166137695
    7. '       ' → logprob: -22.750017166137695
    8. '$res' → logprob: -23.125017166137695
    9. '
' → logprob: -23.250017166137695
    10. '```' → logprob: -23.375017166137695

Token 321: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0019934666343033314
    2. ' +=' → logprob: -6.501993656158447
    3. '+' → logprob: -7.626993656158447
    4. '+=(' → logprob: -13.751993179321289
    5. ']+=' → logprob: -13.751993179321289
    6. '+="' → logprob: -14.751993179321289
    7. '=' → logprob: -15.251993179321289
    8. '[' → logprob: -15.501993179321289
    9. '+='' → logprob: -15.501993179321289
    10. '   ' → logprob: -15.751993179321289

Token 322: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0019286326132714748
    2. ' dp' → logprob: -6.251928806304932
    3. '(dp' → logprob: -17.501928329467773
    4. '	dp' → logprob: -17.751928329467773
    5. 'df' → logprob: -18.501928329467773
    6. '_dp' → logprob: -20.001928329467773
    7. 'd' → logprob: -20.126928329467773
    8. '
' → logprob: -20.501928329467773
    9. 'dc' → logprob: -20.626928329467773
    10. '```' → logprob: -20.751928329467773

Token 323: '(th' (ID: 53988)
  Prédit: '(th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(th' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -14.000001907348633
    3. 'th' → logprob: -14.250001907348633
    4. ' (' → logprob: -14.875001907348633
    5. '(t' → logprob: -16.000001907348633
    6. '<th' → logprob: -16.750001907348633
    7. '(depth' → logprob: -17.375001907348633
    8. '	th' → logprob: -18.500001907348633
    9. '```' → logprob: -18.750001907348633
    10. '(
' → logprob: -19.250001907348633

Token 324: 'ickness' (ID: 46853)
  Prédit: 'ickness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ickness' → logprob: -0.00019614976190496236
    2. 'ick' → logprob: -8.62519645690918
    3. '(th' → logprob: -12.12519645690918
    4. 'ic' → logprob: -12.25019645690918
    5. 'ich' → logprob: -13.50019645690918
    6. '(' → logprob: -13.75019645690918
    7. 'th' → logprob: -14.00019645690918
    8. '1' → logprob: -14.00019645690918
    9. 'ness' → logprob: -14.62519645690918
    10. 'ck' → logprob: -15.12519645690918

Token 325: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3132686913013458
    2. ' -' → logprob: -1.3132686614990234
    3. ' ' → logprob: -12.188268661499023
    4. ')' → logprob: -14.438268661499023
    5. '(' → logprob: -14.563268661499023
    6. ' ' → logprob: -15.188268661499023
    7. ',' → logprob: -16.063268661499023
    8. '()-' → logprob: -16.063268661499023
    9. ')-' → logprob: -16.438268661499023
    10. '>' → logprob: -17.063268661499023

Token 326: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.625019073486328
    4. '```' → logprob: -20.125019073486328
    5. '<|end|>' → logprob: -21.125019073486328
    6. '  ' → logprob: -21.375019073486328
    7. ',' → logprob: -21.875019073486328
    8. '
' → logprob: -22.375019073486328
    9. '۱' → logprob: -22.875019073486328
    10. '１' → logprob: -23.125019073486328

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '```' → logprob: -21.25
    4. '   ' → logprob: -22.25
    5. '۱' → logprob: -23.0
    6. '<|end|>' → logprob: -23.625
    7. '１' → logprob: -23.75
    8. 'k' → logprob: -24.125
    9. '১' → logprob: -24.5
    10. '  ' → logprob: -24.5

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. ' ,' → logprob: -14.125001907348633
    3. ',next' → logprob: -14.500001907348633
    4. '(next' → logprob: -15.750001907348633
    5. '(' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.750001907348633
    7. ',
' → logprob: -19.125001907348633
    8. '(),' → logprob: -19.625001907348633
    9. ' next' → logprob: -19.750001907348633
    10. 'next' → logprob: -19.750001907348633

Token 329: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0019317318219691515
    2. ' next' → logprob: -6.251931667327881
    3. '[next' → logprob: -13.751932144165039
    4. '1' → logprob: -13.751932144165039
    5. '(next' → logprob: -14.001932144165039
    6. '	next' → logprob: -16.00193214416504
    7. '_next' → logprob: -18.37693214416504
    8. '.next' → logprob: -18.50193214416504
    9. ',next' → logprob: -19.00193214416504
    10. 'Next' → logprob: -20.25193214416504

Token 330: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -5.438573680294212e-06
    2. 'color' → logprob: -12.250005722045898
    3. '_token' → logprob: -15.375005722045898
    4. 'Color' → logprob: -15.625005722045898
    5. '_COLOR' → logprob: -16.0000057220459
    6. '_colors' → logprob: -17.5000057220459
    7. '_Color' → logprob: -17.6250057220459
    8. '_' → logprob: -17.8750057220459
    9. '_code' → logprob: -17.8750057220459
    10. '-color' → logprob: -18.2500057220459

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5716304410016164e-05
    2. ' ,' → logprob: -10.250035285949707
    3. ')' → logprob: -15.750035285949707
    4. ',b' → logprob: -16.250036239624023
    5. '       ' → logprob: -17.625036239624023
    6. '   ' → logprob: -17.750036239624023
    7. 'bottom' → logprob: -18.125036239624023
    8. ' bottom' → logprob: -18.250036239624023
    9. ',
' → logprob: -19.500036239624023
    10. '(),' → logprob: -20.000036239624023

Token 332: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0004331725067459047
    2. ' bottom' → logprob: -7.750432968139648
    3. 'top' → logprob: -12.875432968139648
    4. 'bot' → logprob: -17.37543296813965
    5. 'b' → logprob: -18.62543296813965
    6. '   ' → logprob: -19.00043296813965
    7. '0' → logprob: -19.75043296813965
    8. 'Bottom' → logprob: -19.87543296813965
    9. 'white' → logprob: -20.37543296813965
    10. '(bottom' → logprob: -20.62543296813965

Token 333: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -2.9875325708417222e-05
    2. 'color' → logprob: -10.500029563903809
    3. ')' → logprob: -13.500029563903809
    4. 'Color' → logprob: -14.125029563903809
    5. '_COLOR' → logprob: -16.125030517578125
    6. '_colour' → logprob: -16.375030517578125
    7. ' color' → logprob: -17.625030517578125
    8. '_col' → logprob: -17.750030517578125
    9. '_code' → logprob: -17.875030517578125
    10. '```' → logprob: -18.000030517578125

Token 334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.146429223008454e-05
    2. ')
' → logprob: -9.75006103515625
    3. '   ' → logprob: -12.87506103515625
    4. ' )' → logprob: -14.87506103515625
    5. ')return' → logprob: -15.75006103515625
    6. '))' → logprob: -17.37506103515625
    7. ')

' → logprob: -17.87506103515625
    8. ')}' → logprob: -18.50006103515625
    9. ')
' → logprob: -18.75006103515625
    10. ')`' → logprob: -19.37506103515625

Token 335: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014584509190171957
    2. 'return' → logprob: -7.376458644866943
    3. ' return' → logprob: -7.501458644866943
    4. '<|end|>' → logprob: -9.001458168029785
    5. '```' → logprob: -9.376458168029785
    6. '	return' → logprob: -10.001458168029785
    7. '    
' → logprob: -11.626458168029785
    8. ')' → logprob: -12.251458168029785
    9. '
' → logprob: -12.626458168029785
    10. ':return' → logprob: -13.626458168029785

Token 336: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0047610728070139885
    2. 'return' (adapté à ' return') → logprob: -6.004761219024658
    3. ' return' → logprob: -6.129761219024658
    4. '	return' → logprob: -9.7547607421875
    5. '```' → logprob: -11.1297607421875
    6. '    
' → logprob: -11.2547607421875
    7. '
' → logprob: -11.6297607421875
    8. '<|end|>' → logprob: -11.8797607421875
    9. ')return' → logprob: -13.8797607421875
    10. ':return' → logprob: -14.5047607421875

Token 337: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.011047814972698689
    2. ' res' → logprob: -4.511047840118408
    3. '   ' → logprob: -19.88604736328125
    4. '	res' → logprob: -20.01104736328125
    5. '_res' → logprob: -21.51104736328125
    6. '(res' → logprob: -21.88604736328125
    7. '$res' → logprob: -22.51104736328125
    8. 're' → logprob: -22.63604736328125
    9. 'r' → logprob: -23.26104736328125
    10. ' ' → logprob: -24.01104736328125

Token 338: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.140345498919487
    2. 'result' → logprob: -2.890345573425293
    3. ')' → logprob: -3.015345573425293
    4. '<|end|>' → logprob: -4.015345573425293
    5. 'l' → logprob: -6.140345573425293
    6. '#' → logprob: -6.265345573425293
    7. 'res' → logprob: -7.015345573425293
    8. 'tokens' → logprob: -7.515345573425293
    9. '(' → logprob: -7.640345573425293
    10. 'answer' → logprob: -7.640345573425293

Token 339: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.392824874026701e-05
    2. 'result' → logprob: -10.62503433227539
    3. ' print' → logprob: -12.75003433227539
    4. '(print' → logprob: -13.00003433227539
    5. '(' → logprob: -13.12503433227539
    6. 'l' → logprob: -13.25003433227539
    7. ')' → logprob: -15.37503433227539
    8. '(
' → logprob: -15.62503433227539
    9. '```' → logprob: -16.50003433227539
    10. '()' → logprob: -17.00003433227539

Token 340: ' We' (ID: 1416)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0069093103520572186
    2. 'result' → logprob: -5.006909370422363
    3. 'answer' → logprob: -9.006909370422363
    4. 'ans' → logprob: -9.631909370422363
    5. ' print' → logprob: -13.006909370422363
    6. 'total' → logprob: -13.631909370422363
    7. 'res' → logprob: -14.256909370422363
    8. 'l' → logprob: -14.756909370422363
    9. 'output' → logprob: -15.256909370422363
    10. '#' → logprob: -15.381909370422363

Token 341: ' must' (ID: 2804)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007430415134876966
    2. '=' → logprob: -7.5007429122924805
    3. 'for' → logprob: -9.62574291229248
    4. '#' → logprob: -10.12574291229248
    5. 'answer' → logprob: -10.87574291229248
    6. ' =' → logprob: -11.25074291229248
    7. 'result' → logprob: -11.37574291229248
    8. 'r' → logprob: -11.75074291229248
    9. '#print' → logprob: -11.75074291229248
    10. ' print' → logprob: -12.25074291229248

Token 342: ' start' (ID: 1604)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00019007037917617708
    2. '#' → logprob: -9.875189781188965
    3. 'count' → logprob: -10.375189781188965
    4. 'calculate' → logprob: -10.500189781188965
    5. ' print' → logprob: -10.625189781188965
    6. 'result' → logprob: -10.750189781188965
    7. 'for' → logprob: -11.750189781188965
    8. 'answer' → logprob: -12.000189781188965
    9. 'start' → logprob: -12.125189781188965
    10. 'res' → logprob: -13.250189781188965

Token 343: ' and' (ID: 326)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9483985304832458
    2. 'print' → logprob: -1.5733985900878906
    3. 'with' → logprob: -2.1983985900878906
    4. 'res' → logprob: -2.1983985900878906
    5. '=' → logprob: -2.9483985900878906
    6. 'result' → logprob: -2.9483985900878906
    7. ' =' → logprob: -3.9483985900878906
    8. '()' → logprob: -4.448398590087891
    9. ' with' → logprob: -4.948398590087891
    10. 'total' → logprob: -5.323398590087891

Token 344: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.02353009395301342
    2. ' end' → logprob: -4.148530006408691
    3. 'print' → logprob: -5.023530006408691
    4. 'finish' → logprob: -7.148530006408691
    5. '#' → logprob: -10.398530006408691
    6. 'stop' → logprob: -10.523530006408691
    7. ' finish' → logprob: -11.898530006408691
    8. 'return' → logprob: -11.898530006408691
    9. '_end' → logprob: -12.148530006408691
    10. 'top' → logprob: -12.148530006408691

Token 345: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.2143724411725998
    2. '=' → logprob: -2.214372396469116
    3. 'print' → logprob: -3.214372396469116
    4. ' with' → logprob: -3.839372396469116
    5. '_color' → logprob: -4.839372634887695
    6. '(' → logprob: -5.589372634887695
    7. ' =' → logprob: -5.964372634887695
    8. '_' → logprob: -6.714372634887695
    9. 'res' → logprob: -6.839372634887695
    10. 'the' → logprob: -6.839372634887695

Token 346: ' dark' (ID: 8883)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033778704702854156
    2. 'dark' → logprob: -3.908778667449951
    3. '(' → logprob: -4.533778667449951
    4. ' ' → logprob: -7.283778667449951
    5. 'print' → logprob: -7.783778667449951
    6. 'dp' → logprob: -7.783778667449951
    7. '#' → logprob: -8.15877914428711
    8. ' dark' → logprob: -8.15877914428711
    9. 'top' → logprob: -8.65877914428711
    10. ' (' → logprob: -10.40877914428711

Token 347: ' disks' (ID: 104238)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0017745461082085967
    2. 'result' → logprob: -6.501774311065674
    3. 'res' → logprob: -8.751774787902832
    4. 'answer' → logprob: -9.751774787902832
    5. ' print' → logprob: -11.001774787902832
    6. 'total' → logprob: -11.376774787902832
    7. '
' → logprob: -11.626774787902832
    8. 'stack' → logprob: -12.501774787902832
    9. 'color' → logprob: -12.751774787902832
    10. ',' → logprob: -13.126774787902832

Token 348: ';' (ID: 26)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006002621725201607
    2. 'result' → logprob: -5.131002426147461
    3. 'answer' → logprob: -10.256002426147461
    4. '
' → logprob: -10.756002426147461
    5. 'total' → logprob: -11.756002426147461
    6. 'res' → logprob: -12.881002426147461
    7. 'for' → logprob: -13.631002426147461
    8. 'ans' → logprob: -13.756002426147461
    9. 'output' → logprob: -14.006002426147461
    10. ' print' → logprob: -14.131002426147461

Token 349: ' at' (ID: 540)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0025454589631408453
    2. 'result' → logprob: -6.002545356750488
    3. 'answer' → logprob: -9.752545356750488
    4. 'ans' → logprob: -11.502545356750488
    5. ' print' → logprob: -14.252545356750488
    6. 'for' → logprob: -14.877545356750488
    7. 'total' → logprob: -15.002545356750488
    8. 'res' → logprob: -16.377546310424805
    9. 'output' → logprob: -17.252546310424805
    10. '#' → logprob: -17.377546310424805

Token 350: ' least' (ID: 5153)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.7199787497520447
    2. 'th' → logprob: -0.8449787497520447
    3. 'the' → logprob: -3.0949788093566895
    4. 'l' → logprob: -4.2199788093566895
    5. 'bottom' → logprob: -4.9699788093566895
    6. 'least' → logprob: -5.3449788093566895
    7. ' thickness' → logprob: -5.4699788093566895
    8. 'total' → logprob: -6.5949788093566895
    9. 'depth' → logprob: -6.7199788093566895
    10. '#' → logprob: -6.9699788093566895

Token 351: ' one' (ID: 1001)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.8094422221183777
    2. 'k' → logprob: -1.0594422817230225
    3. '1' → logprob: -2.3094422817230225
    4. '2' → logprob: -2.8094422817230225
    5. ' thickness' → logprob: -3.8094422817230225
    6. 'one' → logprob: -4.559442043304443
    7. 'l' → logprob: -4.809442043304443
    8. 'two' → logprob: -5.434442043304443
    9. ' one' → logprob: -6.684442043304443
    10. 'length' → logprob: -6.809442043304443

Token 352: ' disk' (ID: 18044)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20701530575752258
    2. 'result' → logprob: -1.7070152759552002
    3. 'answer' → logprob: -5.207015514373779
    4. 'for' → logprob: -10.457015037536621
    5. 'res' → logprob: -10.582015037536621
    6. 'total' → logprob: -10.957015037536621
    7. 'ans' → logprob: -11.332015037536621
    8. 'output' → logprob: -11.582015037536621
    9. ' print' → logprob: -12.457015037536621
    10. ' result' → logprob: -12.957015037536621

Token 353: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08021862059831619
    2. 'result' → logprob: -2.580218553543091
    3. 'total' → logprob: -7.33021879196167
    4. 'answer' → logprob: -7.58021879196167
    5. 'res' → logprob: -9.455218315124512
    6. '
' → logprob: -9.955218315124512
    7. 'ans' → logprob: -11.205218315124512
    8. 'for' → logprob: -11.705218315124512
    9. 'output' → logprob: -12.080218315124512
    10. 'count' → logprob: -13.705218315124512

Token 354: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04878152534365654
    2. 'result' → logprob: -3.048781633377075
    3. 'answer' → logprob: -8.923781394958496
    4. 'total' → logprob: -9.923781394958496
    5. 'ans' → logprob: -12.048781394958496
    6. 'res' → logprob: -13.048781394958496
    7. 'for' → logprob: -13.173781394958496
    8. 'count' → logprob: -14.173781394958496
    9. 'output' → logprob: -14.548781394958496
    10. ' print' → logprob: -14.673781394958496

Token 355: ' So' (ID: 2632)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007263714214786887
    2. 'result' → logprob: -7.250726222991943
    3. 'answer' → logprob: -11.250726699829102
    4. 'ans' → logprob: -13.375726699829102
    5. 'for' → logprob: -13.625726699829102
    6. 'total' → logprob: -14.750726699829102
    7. ' print' → logprob: -15.500726699829102
    8. 'res' → logprob: -17.1257266998291
    9. 'pr' → logprob: -17.2507266998291
    10. 'output' → logprob: -17.6257266998291

Token 356: ' thickness' (ID: 38833)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42153555154800415
    2. 'result' → logprob: -1.4215354919433594
    3. 'for' → logprob: -2.6715354919433594
    4. 'answer' → logprob: -4.171535491943359
    5. 'res' → logprob: -4.921535491943359
    6. 'total' → logprob: -5.046535491943359
    7. 'ans' → logprob: -5.671535491943359
    8. ' for' → logprob: -8.42153549194336
    9. ' print' → logprob: -8.54653549194336
    10. 'l' → logprob: -8.67153549194336

Token 357: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17883925139904022
    2. '>=' → logprob: -2.1788392066955566
    3. ' =' → logprob: -3.5538392066955566
    4. ',' → logprob: -5.303839206695557
    5. ' >=' → logprob: -5.303839206695557
    6. '≥' → logprob: -6.053839206695557
    7. 's' → logprob: -6.303839206695557
    8. '>' → logprob: -6.428839206695557
    9. ' -=' → logprob: -6.678839206695557
    10. '-=' → logprob: -6.678839206695557

Token 358: ' most' (ID: 1645)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.03014545328915119
    2. 'l' → logprob: -4.155145645141602
    3. ' least' → logprob: -4.405145645141602
    4. '=' → logprob: -7.280145645141602
    5. '1' → logprob: -7.655145645141602
    6. '0' → logprob: -9.280145645141602
    7. 'le' → logprob: -9.405145645141602
    8. 'lest' → logprob: -9.655145645141602
    9. '>=' → logprob: -9.780145645141602
    10. ' l' → logprob: -9.905145645141602

Token 359: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.007374357897788286
    2. '=' → logprob: -5.507374286651611
    3. 'for' → logprob: -6.757374286651611
    4. ' =' → logprob: -7.257374286651611
    5. ' l' → logprob: -7.507374286651611
    6. '1' → logprob: -7.757374286651611
    7. ' for' → logprob: -9.00737476348877
    8. '```' → logprob: -9.63237476348877
    9. ',' → logprob: -10.25737476348877
    10. '>=' → logprob: -10.38237476348877

Token 360: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011264033615589142
    2. 'result' → logprob: -4.511263847351074
    3. 'answer' → logprob: -8.886263847351074
    4. 'total' → logprob: -9.761263847351074
    5. 'ans' → logprob: -11.011263847351074
    6. 'for' → logprob: -13.136263847351074
    7. 'res' → logprob: -14.511263847351074
    8. ' print' → logprob: -14.636263847351074
    9. 'count' → logprob: -15.011263847351074
    10. 'output' → logprob: -15.761263847351074

Token 361: ' start' (ID: 1604)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3924071788787842
    2. 'res' → logprob: -2.142407178878784
    3. 'print' → logprob: -2.267407178878784
    4. ' result' → logprob: -3.517407178878784
    5. 'for' → logprob: -4.017407417297363
    6. 'answer' → logprob: -4.267407417297363
    7. ' for' → logprob: -4.517407417297363
    8. 'ans' → logprob: -4.892407417297363
    9. ' res' → logprob: -4.892407417297363
    10. 'total' → logprob: -5.267407417297363

Token 362: ' with' (ID: 483)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -1.095594882965088
    2. ' =' → logprob: -1.345594882965088
    3. '=' → logprob: -1.720594882965088
    4. 'res' → logprob: -2.595594882965088
    5. ',' → logprob: -2.595594882965088
    6. 'with' → logprob: -3.720594882965088
    7. 'result' → logprob: -4.470594882965088
    8. '_result' → logprob: -5.220594882965088
    9. '_colors' → logprob: -5.220594882965088
    10. 'th' → logprob: -5.345594882965088

Token 363: ' dark' (ID: 8883)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14621230959892273
    2. 'dp' → logprob: -2.521212339401245
    3. 'l' → logprob: -2.896212339401245
    4. '(' → logprob: -8.646212577819824
    5. ' ' → logprob: -9.646212577819824
    6. '(l' → logprob: -10.021212577819824
    7. 'def' → logprob: -10.146212577819824
    8. '(dp' → logprob: -10.646212577819824
    9. ' dp' → logprob: -10.896212577819824
    10. '1' → logprob: -11.146212577819824

Token 364: ' disk' (ID: 18044)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.077410489320755
    2. 'result' → logprob: -2.8274104595184326
    3. 'res' → logprob: -4.702410697937012
    4. 'answer' → logprob: -5.202410697937012
    5. ',' → logprob: -8.577410697937012
    6. '=' → logprob: -9.077410697937012
    7. 'ans' → logprob: -9.327410697937012
    8. ' print' → logprob: -9.577410697937012
    9. ' =' → logprob: -10.077410697937012
    10. 'count' → logprob: -10.202410697937012

Token 365: ' bottom' (ID: 8725)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47846850752830505
    2. 'result' → logprob: -0.9784685373306274
    3. 'answer' → logprob: -6.228468418121338
    4. 'total' → logprob: -6.853468418121338
    5. 'res' → logprob: -7.603468418121338
    6. '=' → logprob: -8.103468894958496
    7. 'ans' → logprob: -8.478468894958496
    8. 'for' → logprob: -8.978468894958496
    9. ',' → logprob: -9.603468894958496
    10. ' =' → logprob: -9.728468894958496

Token 366: '_color' (ID: 15576)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4646088480949402
    2. 'result' → logprob: -1.089608907699585
    3. 'res' → logprob: -3.589608907699585
    4. 'answer' → logprob: -5.464608669281006
    5. ',' → logprob: -6.839608669281006
    6. 'count' → logprob: -7.339608669281006
    7. '=' → logprob: -7.714608669281006
    8. 'total' → logprob: -7.839608669281006
    9. 'for' → logprob: -7.964608669281006
    10. 'ans' → logprob: -8.839609146118164

Token 367: '=' (ID: 28)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.98618483543396
    2. ',' → logprob: -1.36118483543396
    3. 'result' → logprob: -1.86118483543396
    4. '=' → logprob: -2.11118483543396
    5. ' =' → logprob: -2.73618483543396
    6. 'print' → logprob: -4.236185073852539
    7. '_result' → logprob: -5.736185073852539
    8. 'for' → logprob: -5.861185073852539
    9. 's' → logprob: -6.861185073852539
    10. 'ans' → logprob: -6.986185073852539

Token 368: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.750003814697266
    3. 'l' → logprob: -14.750003814697266
    4. '1' → logprob: -16.250003814697266
    5. '<|end|>' → logprob: -16.500003814697266
    6. '```' → logprob: -16.875003814697266
    7. '۰' → logprob: -17.937503814697266
    8. '=' → logprob: -18.125003814697266
    9. ',' → logprob: -18.437503814697266
    10. '(' → logprob: -18.750003814697266

Token 369: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024029385298490524
    2. 'result' → logprob: -3.774029493331909
    3. 'res' → logprob: -7.52402925491333
    4. 'for' → logprob: -8.774029731750488
    5. '
' → logprob: -10.024029731750488
    6. 'answer' → logprob: -11.399029731750488
    7. ',' → logprob: -11.649029731750488
    8. ' print' → logprob: -11.899029731750488
    9. 'count' → logprob: -12.024029731750488
    10. 'total' → logprob: -12.399029731750488

Token 370: ' top' (ID: 2344)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5178413391113281
    2. 'top' → logprob: -1.0178413391113281
    3. 'result' → logprob: -4.392841339111328
    4. ' top' → logprob: -4.767841339111328
    5. ' res' → logprob: -4.767841339111328
    6. 'for' → logprob: -5.267841339111328
    7. 'print' → logprob: -6.017841339111328
    8. '0' → logprob: -6.017841339111328
    9. 'and' → logprob: -7.267841339111328
    10. ' and' → logprob: -7.392841339111328

Token 371: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.0001870902779046446
    2. 'color' → logprob: -8.625186920166016
    3. '_' → logprob: -13.375186920166016
    4. ' =' → logprob: -13.500186920166016
    5. '=' → logprob: -14.000186920166016
    6. ' color' → logprob: -14.250186920166016
    7. 'Color' → logprob: -14.375186920166016
    8. '_colors' → logprob: -14.375186920166016
    9. '_COLOR' → logprob: -14.750186920166016
    10. '_c' → logprob: -15.625186920166016

Token 372: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001870902779046446
    2. ' =' → logprob: -8.625186920166016
    3. '=l' → logprob: -12.375186920166016
    4. ',' → logprob: -13.625186920166016
    5. '=
' → logprob: -13.750186920166016
    6. '0' → logprob: -15.000186920166016
    7. '=

' → logprob: -15.625186920166016
    8. '=True' → logprob: -17.000186920166016
    9. '=int' → logprob: -17.125186920166016
    10. '=}' → logprob: -17.125186920166016

Token 373: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4656579120783135e-05
    2. '1' → logprob: -10.250044822692871
    3. ' ' → logprob: -11.625044822692871
    4. '۰' → logprob: -16.125043869018555
    5. '```' → logprob: -16.687543869018555
    6. '<|end|>' → logprob: -17.312543869018555
    7. 'l' → logprob: -17.375043869018555
    8. ')' → logprob: -18.500043869018555
    9. '...' → logprob: -18.625043869018555
    10. '०' → logprob: -18.687543869018555

Token 374: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16241389513015747
    2. 'result' → logprob: -1.9124138355255127
    3. 'answer' → logprob: -7.162414073944092
    4. 'total' → logprob: -7.287414073944092
    5. 'for' → logprob: -8.162413597106934
    6. 'res' → logprob: -8.162413597106934
    7. 'ans' → logprob: -9.412413597106934
    8. 'count' → logprob: -10.537413597106934
    9. '
' → logprob: -10.662413597106934
    10. 'return' → logprob: -11.787413597106934

Token 375: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004217659123241901
    2. 'result' → logprob: -5.504217624664307
    3. 'answer' → logprob: -9.879218101501465
    4. ' print' → logprob: -10.129218101501465
    5. 'res' → logprob: -10.879218101501465
    6. 'total' → logprob: -11.504218101501465
    7. 'for' → logprob: -11.629218101501465
    8. 'ans' → logprob: -11.754218101501465
    9. '
' → logprob: -14.004218101501465
    10. ' result' → logprob: -14.504218101501465

Token 376: ' thickness' (ID: 38833)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15868566930294037
    2. 'res' → logprob: -3.0336856842041016
    3. ' =' → logprob: -3.6586856842041016
    4. 'th' → logprob: -3.7836856842041016
    5. '_th' → logprob: -4.033685684204102
    6. '+=' → logprob: -4.533685684204102
    7. '_res' → logprob: -5.658685684204102
    8. 's' → logprob: -5.783685684204102
    9. 'result' → logprob: -5.908685684204102
    10. '_layers' → logprob: -6.408685684204102

Token 377: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5802582502365112
    2. '=' → logprob: -0.8302582502365112
    3. 'result' → logprob: -6.080258369445801
    4. '=
' → logprob: -7.080258369445801
    5. ',' → logprob: -7.705258369445801
    6. ' =' → logprob: -7.955258369445801
    7. 'for' → logprob: -8.7052583694458
    8. '(' → logprob: -10.4552583694458
    9. '+=' → logprob: -10.7052583694458
    10. 'total' → logprob: -10.7052583694458

Token 378: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002583147259429097
    2. 'result' → logprob: -6.002583026885986
    3. 'answer' → logprob: -9.252583503723145
    4. 'ans' → logprob: -11.877583503723145
    5. 'total' → logprob: -12.627583503723145
    6. 'for' → logprob: -14.377583503723145
    7. 'res' → logprob: -15.252583503723145
    8. 'pr' → logprob: -15.752583503723145
    9. ' print' → logprob: -15.752583503723145
    10. 'count' → logprob: -16.127582550048828

Token 379: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012318959925323725
    2. 'result' → logprob: -6.751231670379639
    3. 'answer' → logprob: -9.751232147216797
    4. 'ans' → logprob: -13.001232147216797
    5. 'for' → logprob: -14.251232147216797
    6. 'res' → logprob: -15.751232147216797
    7. 'total' → logprob: -15.876232147216797
    8. 'output' → logprob: -16.626232147216797
    9. ' print' → logprob: -16.626232147216797
    10. '
' → logprob: -17.126232147216797

Token 380: ' But' (ID: 3072)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009655343601480126
    2. 'result' → logprob: -7.000965595245361
    3. 'answer' → logprob: -10.000965118408203
    4. 'ans' → logprob: -11.750965118408203
    5. 'total' → logprob: -14.750965118408203
    6. 'for' → logprob: -15.250965118408203
    7. '```' → logprob: -16.875965118408203
    8. 'pr' → logprob: -17.125965118408203
    9. ' print' → logprob: -17.250965118408203
    10. 'output' → logprob: -17.250965118408203

Token 381: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.285771906375885
    2. ' for' → logprob: -2.6607718467712402
    3. 'res' → logprob: -2.9107718467712402
    4. 'result' → logprob: -3.7857718467712402
    5. 'we' → logprob: -3.7857718467712402
    6. 'total' → logprob: -4.03577184677124
    7. 'l' → logprob: -4.16077184677124
    8. 'the' → logprob: -4.53577184677124
    9. 'answer' → logprob: -5.41077184677124
    10. '#' → logprob: -5.41077184677124

Token 382: ' counts' (ID: 28991)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.5732946991920471
    2. '_result' → logprob: -1.0732946395874023
    3. '(' → logprob: -3.4482946395874023
    4. 'result' → logprob: -3.6982946395874023
    5. 'res' → logprob: -4.198294639587402
    6. 'return' → logprob: -5.198294639587402
    7. '_res' → logprob: -5.323294639587402
    8. '_value' → logprob: -5.573294639587402
    9. 'l' → logprob: -6.698294639587402
    10. '_return' → logprob: -6.948294639587402

Token 383: ' from' (ID: 591)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7285918593406677
    2. '=' → logprob: -1.9785919189453125
    3. '(' → logprob: -2.3535919189453125
    4. 'print' → logprob: -2.6035919189453125
    5. ' =' → logprob: -2.8535919189453125
    6. '(dp' → logprob: -3.2285919189453125
    7. 'result' → logprob: -3.4785919189453125
    8. 'l' → logprob: -3.7285919189453125
    9. '(l' → logprob: -4.6035919189453125
    10. '0' → logprob: -4.7285919189453125

Token 384: ' top' (ID: 2344)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6229295134544373
    2. 'th' → logprob: -1.622929573059082
    3. '0' → logprob: -2.122929573059082
    4. ' thickness' → logprob: -3.122929573059082
    5. 'the' → logprob: -3.747929573059082
    6. 'dp' → logprob: -3.747929573059082
    7. ' l' → logprob: -3.997929573059082
    8. 'top' → logprob: -3.997929573059082
    9. '(l' → logprob: -5.247929573059082
    10. '1' → logprob: -5.372929573059082

Token 385: ' to' (ID: 316)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008232515305280685
    2. 'result' → logprob: -4.883232593536377
    3. 'answer' → logprob: -7.508232593536377
    4. 'ans' → logprob: -10.633232116699219
    5. 'total' → logprob: -10.633232116699219
    6. 'for' → logprob: -11.008232116699219
    7. 'res' → logprob: -12.133232116699219
    8. ' print' → logprob: -13.383232116699219
    9. '
' → logprob: -13.383232116699219
    10. 'count' → logprob: -13.633232116699219

Token 386: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0020129792392253876
    2. ' bottom' → logprob: -6.252013206481934
    3. 'top' → logprob: -9.502013206481934
    4. '0' → logprob: -12.377013206481934
    5. 'down' → logprob: -12.752013206481934
    6. 'l' → logprob: -14.377013206481934
    7. 'bot' → logprob: -14.377013206481934
    8. '_bottom' → logprob: -14.377013206481934
    9. 'the' → logprob: -15.752013206481934
    10. '```' → logprob: -16.002012252807617

Token 387: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0068160155788064
    2. 'result' → logprob: -5.0068159103393555
    3. 'answer' → logprob: -9.256815910339355
    4. 'ans' → logprob: -12.631815910339355
    5. 'for' → logprob: -14.256815910339355
    6. 'res' → logprob: -14.756815910339355
    7. 'total' → logprob: -15.131815910339355
    8. 'pr' → logprob: -15.756815910339355
    9. 'count' → logprob: -15.881815910339355
    10. '```' → logprob: -15.881815910339355

Token 388: 'top' (ID: 8169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.059287626296281815
    2. 'res' → logprob: -3.6842875480651855
    3. ',' → logprob: -4.8092875480651855
    4. 'result' → logprob: -4.9342875480651855
    5. '),' → logprob: -5.3092875480651855
    6. 'l' → logprob: -5.4342875480651855
    7. 'print' → logprob: -6.0592875480651855
    8. 'for' → logprob: -7.0592875480651855
    9. 'dp' → logprob: -7.0592875480651855
    10. '#' → logprob: -7.1842875480651855

Token 389: ' disk' (ID: 18044)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.006569602992385626
    2. ')' → logprob: -5.5065693855285645
    3. ')_' → logprob: -6.2565693855285645
    4. '_' → logprob: -8.756569862365723
    5. ',' → logprob: -8.881569862365723
    6. 'color' → logprob: -8.881569862365723
    7. '_colors' → logprob: -10.631569862365723
    8. '=' → logprob: -10.881569862365723
    9. '_)' → logprob: -11.006569862365723
    10. ' =' → logprob: -11.381569862365723

Token 390: ' color' (ID: 3089)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6693984270095825
    2. ')' → logprob: -0.9193984270095825
    3. '),' → logprob: -2.794398307800293
    4. '=' → logprob: -5.294398307800293
    5. ' starts' → logprob: -5.294398307800293
    6. ' is' → logprob: -5.794398307800293
    7. ' only' → logprob: -6.044398307800293
    8. ' color' → logprob: -6.044398307800293
    9. '_color' → logprob: -6.169398307800293
    10. 'color' → logprob: -6.419398307800293

Token 391: ' parameter' (ID: 11047)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6887291669845581
    2. ',' → logprob: -0.9387291669845581
    3. '=' → logprob: -2.8137292861938477
    4. '):' → logprob: -3.9387292861938477
    5. ' =' → logprob: -4.438729286193848
    6. '),' → logprob: -5.188729286193848
    7. '#' → logprob: -5.813729286193848
    8. ')=' → logprob: -6.688729286193848
    9. 'res' → logprob: -6.813729286193848
    10. ',)' → logprob: -6.813729286193848

Token 392: ' denotes' (ID: 144604)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1989922821521759
    2. '=' → logprob: -2.9489922523498535
    3. ',' → logprob: -3.1989922523498535
    4. 'res' → logprob: -3.4489922523498535
    5. 'result' → logprob: -3.6989922523498535
    6. ' =' → logprob: -3.8239922523498535
    7. 'print' → logprob: -5.5739922523498535
    8. '(res' → logprob: -7.1989922523498535
    9. '(' → logprob: -7.3239922523498535
    10. ' result' → logprob: -7.4489922523498535

Token 393: ' current' (ID: 2208)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.505438506603241
    2. ' the' → logprob: -1.3804385662078857
    3. 'top' → logprob: -3.0054385662078857
    4. '0' → logprob: -3.2554385662078857
    5. 'bottom' → logprob: -3.6304385662078857
    6. ' top' → logprob: -4.755438327789307
    7. ' bottom' → logprob: -5.005438327789307
    8. ')' → logprob: -5.630438327789307
    9. ' ' → logprob: -6.130438327789307
    10. 'th' → logprob: -6.255438327789307

Token 394: ' top' (ID: 2344)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12428072094917297
    2. '_color' → logprob: -2.8742806911468506
    3. 'top' → logprob: -4.12428092956543
    4. 'color' → logprob: -4.37428092956543
    5. '_' → logprob: -4.74928092956543
    6. ' )' → logprob: -5.99928092956543
    7. ' top' → logprob: -6.12428092956543
    8. '=' → logprob: -6.24928092956543
    9. 'th' → logprob: -6.37428092956543
    10. ' color' → logprob: -6.49928092956543

Token 395: ' disk' (ID: 18044)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.23254559934139252
    2. ')' → logprob: -1.7325456142425537
    3. ')_' → logprob: -3.9825456142425537
    4. 'color' → logprob: -5.107545375823975
    5. '_' → logprob: -6.357545375823975
    6. ' color' → logprob: -6.732545375823975
    7. ',' → logprob: -7.107545375823975
    8. '_)' → logprob: -7.357545375823975
    9. '   ' → logprob: -7.857545375823975
    10. ' )' → logprob: -7.982545375823975

Token 396: ')
' (ID: 446)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.4532802402973175
    2. 'color' → logprob: -1.7032802104949951
    3. ',' → logprob: -2.453280210494995
    4. ')' → logprob: -3.203280210494995
    5. ' color' → logprob: -4.203280448913574
    6. ' =' → logprob: -4.328280448913574
    7. '=' → logprob: -4.453280448913574
    8. 's' → logprob: -4.828280448913574
    9. '),' → logprob: -6.453280448913574
    10. '=color' → logprob: -6.453280448913574

Token 397: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.052170123904943466
    2. 'result' → logprob: -3.0521700382232666
    3. 'answer' → logprob: -5.677170276641846
    4. 'ans' → logprob: -8.927169799804688
    5. 'total' → logprob: -11.427169799804688
    6. 'res' → logprob: -12.427169799804688
    7. 'for' → logprob: -13.302169799804688
    8. '```' → logprob: -13.927169799804688
    9. ' print' → logprob: -14.177169799804688
    10. 'output' → logprob: -14.302169799804688

Token 398: ' Let's' (ID: 41021)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03159710764884949
    2. 'result' → logprob: -3.531597137451172
    3. 'answer' → logprob: -6.406597137451172
    4. 'ans' → logprob: -8.781597137451172
    5. 'total' → logprob: -10.281597137451172
    6. 'res' → logprob: -13.031597137451172
    7. 'output' → logprob: -13.656597137451172
    8. 'for' → logprob: -13.781597137451172
    9. 'count' → logprob: -14.156597137451172
    10. ' print' → logprob: -14.531597137451172

Token 399: ' define' (ID: 13174)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0776519700884819
    2. 'result' → logprob: -2.8276519775390625
    3. 'res' → logprob: -4.8276519775390625
    4. 'answer' → logprob: -5.2026519775390625
    5. 'count' → logprob: -7.4526519775390625
    6. 'total' → logprob: -7.5776519775390625
    7. 'for' → logprob: -7.7026519775390625
    8. 'ans' → logprob: -8.577651977539062
    9. 'sum' → logprob: -8.702651977539062
    10. '#' → logprob: -9.702651977539062

Token 400: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09324655681848526
    2. 'result' → logprob: -3.0932464599609375
    3. 'total' → logprob: -3.4682464599609375
    4. 'res' → logprob: -5.0932464599609375
    5. 'answer' → logprob: -5.9682464599609375
    6. 'ans' → logprob: -6.2182464599609375
    7. 'dp' → logprob: -6.8432464599609375
    8. 'ways' → logprob: -8.593246459960938
    9. 'count' → logprob: -8.718246459960938
    10. 'f' → logprob: -9.468246459960938

Token 401: ' helper' (ID: 25246)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05934390053153038
    2. 'wrapper' → logprob: -3.8093438148498535
    3. 'result' → logprob: -4.3093438148498535
    4. 'stack' → logprob: -5.0593438148498535
    5. 'dp' → logprob: -5.1843438148498535
    6. 'new' → logprob: -5.8093438148498535
    7. 'for' → logprob: -6.1843438148498535
    8. 'helper' → logprob: -6.9343438148498535
    9. 'final' → logprob: -7.4343438148498535
    10. 'total' → logprob: -7.6843438148498535

Token 402: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.930552313453518e-05
    2. ' def' → logprob: -10.375049591064453
    3. '<|end|>' → logprob: -11.875049591064453
    4. '
' → logprob: -12.125049591064453
    5. '```' → logprob: -13.625049591064453
    6. '@' → logprob: -13.875049591064453
    7. '_def' → logprob: -14.375049591064453
    8. '(def' → logprob: -14.375049591064453
    9. ':def' → logprob: -14.500049591064453
    10. '<|end|>' → logprob: -14.750049591064453

Token 403: ' build' (ID: 3024)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.17758460342884064
    2. 'print' → logprob: -2.552584648132324
    3. 'sum' → logprob: -3.677584648132324
    4. 'calculate' → logprob: -3.677584648132324
    5. 'def' → logprob: -4.427584648132324
    6. 'start' → logprob: -4.802584648132324
    7. ' count' → logprob: -5.302584648132324
    8. 'compute' → logprob: -6.177584648132324
    9. 'result' → logprob: -6.427584648132324
    10. 'res' → logprob: -6.927584648132324

Token 404: ' from' (ID: 591)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010429836809635162
    2. 'dp' → logprob: -5.760429859161377
    3. '(l' → logprob: -6.885429859161377
    4. 'stack' → logprob: -6.885429859161377
    5. 'layers' → logprob: -7.010429859161377
    6. '(dp' → logprob: -7.135429859161377
    7. '(
' → logprob: -7.385429859161377
    8. '(stack' → logprob: -7.635429859161377
    9. 'the' → logprob: -7.760429859161377
    10. ' def' → logprob: -8.010429382324219

Token 405: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -1.0033100843429565
    2. 'def' → logprob: -1.2533100843429565
    3. 'top' → logprob: -1.5033100843429565
    4. 'l' → logprob: -3.003310203552246
    5. 'the' → logprob: -3.128310203552246
    6. '0' → logprob: -3.628310203552246
    7. 'dp' → logprob: -6.753310203552246
    8. '(l' → logprob: -7.253310203552246
    9. ' bottom' → logprob: -7.628310203552246
    10. 'total' → logprob: -7.753310203552246

Token 406: ' disk' (ID: 18044)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1319839209318161
    2. '
' → logprob: -2.131983995437622
    3. '@' → logprob: -6.506983757019043
    4. '<|end|>' → logprob: -6.631983757019043
    5. '

' → logprob: -7.006983757019043
    6. ')' → logprob: -7.381983757019043
    7. ' def' → logprob: -8.631983757019043
    8. '(' → logprob: -9.131983757019043
    9. '\' → logprob: -9.256983757019043
    10. '
' → logprob: -9.381983757019043

Token 407: ' upwards' (ID: 81327)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015392457135021687
    2. '
' → logprob: -4.265392303466797
    3. '@' → logprob: -8.015392303466797
    4. '<|end|>' → logprob: -8.140392303466797
    5. ')' → logprob: -8.890392303466797
    6. '

' → logprob: -9.015392303466797
    7. ':def' → logprob: -9.265392303466797
    8. ' def' → logprob: -9.390392303466797
    9. '```' → logprob: -10.265392303466797
    10. ':' → logprob: -10.390392303466797

Token 408: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011714138090610504
    2. '
' → logprob: -7.126171588897705
    3. '@' → logprob: -8.251171112060547
    4. '<|end|>' → logprob: -9.876171112060547
    5. ' def' → logprob: -10.626171112060547
    6. '```' → logprob: -11.251171112060547
    7. ')' → logprob: -12.126171112060547
    8. '

' → logprob: -13.001171112060547
    9. '<|end|>' → logprob: -13.376171112060547
    10. ':def' → logprob: -13.376171112060547

Token 409: ' starting' (ID: 8601)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013154702261090279
    2. '
' → logprob: -4.38815450668335
    3. ')' → logprob: -9.013154983520508
    4. '#' → logprob: -9.013154983520508
    5. 'result' → logprob: -9.388154983520508
    6. ' def' → logprob: -9.888154983520508
    7. 'from' → logprob: -10.138154983520508
    8. 'dp' → logprob: -10.138154983520508
    9. 'total' → logprob: -10.263154983520508
    10. 'for' → logprob: -10.388154983520508

Token 410: ' with' (ID: 483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3514540195465088
    2. 'with' → logprob: -2.101454019546509
    3. 'from' → logprob: -2.226454019546509
    4. ' with' → logprob: -3.976454019546509
    5. 'top' → logprob: -4.97645378112793
    6. ')' → logprob: -4.97645378112793
    7. ' at' → logprob: -4.97645378112793
    8. '(' → logprob: -5.72645378112793
    9. '(top' → logprob: -5.72645378112793
    10. 'th' → logprob: -5.85145378112793

Token 411: ' dark' (ID: 8883)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030870353803038597
    2. 'top' → logprob: -4.15587043762207
    3. 'def' → logprob: -5.15587043762207
    4. 'dp' → logprob: -5.28087043762207
    5. 'bottom' → logprob: -5.78087043762207
    6. 'l' → logprob: -8.65587043762207
    7. 'dark' → logprob: -8.90587043762207
    8. 'th' → logprob: -9.15587043762207
    9. '(' → logprob: -9.28087043762207
    10. ' ' → logprob: -10.15587043762207

Token 412: ' disk' (ID: 18044)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006259850692003965
    2. ')' → logprob: -6.256259918212891
    3. '
' → logprob: -6.256259918212891
    4. ' def' → logprob: -7.006259918212891
    5. '@' → logprob: -7.881259918212891
    6. '<|end|>' → logprob: -8.00625991821289
    7. '(' → logprob: -8.38125991821289
    8. '_def' → logprob: -8.50625991821289
    9. '_' → logprob: -9.13125991821289
    10. '_color' → logprob: -9.38125991821289

Token 413: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010180408135056496
    2. '
' → logprob: -7.126018047332764
    3. '<|end|>' → logprob: -8.876017570495605
    4. '@' → logprob: -10.376017570495605
    5. ' def' → logprob: -10.751017570495605
    6. ')' → logprob: -12.376017570495605
    7. '```' → logprob: -12.501017570495605
    8. '<|end|>' → logprob: -12.501017570495605
    9. '(def' → logprob: -13.376017570495605
    10. '(' → logprob: -13.626017570495605

Token 414: '@' (ID: 31)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003050796454772353
    2. 'result' → logprob: -6.003050804138184
    3. '@' → logprob: -8.128050804138184
    4. 'print' → logprob: -9.128050804138184
    5. 'total' → logprob: -9.378050804138184
    6. 'res' → logprob: -10.003050804138184
    7. 'answer' → logprob: -10.878050804138184
    8. '
' → logprob: -11.753050804138184
    9. 'count' → logprob: -12.878050804138184
    10. 'ans' → logprob: -13.003050804138184

Token 415: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0008444105042144656
    2. 'dat' → logprob: -7.375844478607178
    3. 'cache' → logprob: -8.87584400177002
    4. 'staticmethod' → logprob: -10.25084400177002
    5. '@' → logprob: -11.12584400177002
    6. 'fun' → logprob: -11.37584400177002
    7. '@@' → logprob: -11.50084400177002
    8. 'dp' → logprob: -13.62584400177002
    9. 'classmethod' → logprob: -13.62584400177002
    10. 'app' → logprob: -14.12584400177002

Token 416: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0011963017750531435
    2. 'r' → logprob: -6.876196384429932
    3. 'def' → logprob: -9.126195907592773
    4. 'rl' → logprob: -11.001195907592773
    5. 'ri' → logprob: -12.126195907592773
    6. 'l' → logprob: -12.251195907592773
    7. '```' → logprob: -12.251195907592773
    8. '
' → logprob: -12.751195907592773
    9. 'RU' → logprob: -13.751195907592773
    10. 'w' → logprob: -13.938695907592773

Token 417: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0019312551012262702
    2. '_cached' → logprob: -6.251931190490723
    3. 'cache' → logprob: -14.251931190490723
    4. '@' → logprob: -14.251931190490723
    5. 'cached' → logprob: -14.626931190490723
    6. 'def' → logprob: -15.626931190490723
    7. '_c' → logprob: -16.00193214416504
    8. '_code' → logprob: -16.00193214416504
    9. '_' → logprob: -16.25193214416504
    10. '_CACHE' → logprob: -16.75193214416504

Token 418: '(None' (ID: 65126)
  Prédit: '(None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -5.228561349213123e-05
    2. 'None' → logprob: -9.875052452087402
    3. 'def' → logprob: -15.125052452087402
    4. ' None' → logprob: -15.625052452087402
    5. '(' → logprob: -16.125051498413086
    6. '(int' → logprob: -16.875051498413086
    7. '(max' → logprob: -16.875051498413086
    8. '=None' → logprob: -17.000051498413086
    9. ' (' → logprob: -17.125051498413086
    10. '(False' → logprob: -17.375051498413086

Token 419: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3871588110923767
    2. ')' → logprob: -1.1371588706970215
    3. 'def' → logprob: -8.387158393859863
    4. ')
' → logprob: -10.012158393859863
    5. '())
' → logprob: -12.512158393859863
    6. '
' → logprob: -13.012158393859863
    7. '()' → logprob: -13.512158393859863
    8. '(' → logprob: -13.512158393859863
    9. ' )
' → logprob: -13.512158393859863
    10. '```' → logprob: -14.012158393859863

Token 420: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25193965435028076
    2. '
' → logprob: -1.5019396543502808
    3. ' def' → logprob: -12.00193977355957
    4. '
' → logprob: -13.50193977355957
    5. '(def' → logprob: -14.00193977355957
    6. '(' → logprob: -14.25193977355957
    7. '<|end|>' → logprob: -14.62693977355957
    8. '  
' → logprob: -15.00193977355957
    9. '(
' → logprob: -15.62693977355957
    10. '    
' → logprob: -15.75193977355957

Token 421: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.053818050771951675
    2. 'dp' → logprob: -3.5538179874420166
    3. 'ways' → logprob: -4.303818225860596
    4. ' count' → logprob: -5.428818225860596
    5. 'solve' → logprob: -6.303818225860596
    6. 'build' → logprob: -6.428818225860596
    7. 'total' → logprob: -6.803818225860596
    8. 'helper' → logprob: -7.553818225860596
    9. ' ways' → logprob: -9.053817749023438
    10. 'stack' → logprob: -9.178817749023438

Token 422: '(th' (ID: 53988)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.01884671114385128
    2. '(' → logprob: -4.01884651184082
    3. '_layers' → logprob: -8.39384651184082
    4. '(th' → logprob: -8.64384651184082
    5. '(length' → logprob: -10.01884651184082
    6. '(total' → logprob: -10.14384651184082
    7. 'layers' → logprob: -10.64384651184082
    8. '(depth' → logprob: -10.64384651184082
    9. '(s' → logprob: -10.76884651184082
    10. '_sequences' → logprob: -10.76884651184082

Token 423: 'ick' (ID: 1003)
  Prédit: 'ickness'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ickness' → logprob: -0.005260083824396133
    2. 'ick' → logprob: -5.255259990692139
    3. 'ic' → logprob: -10.755260467529297
    4. 'ich' → logprob: -14.130260467529297
    5. 'icc' → logprob: -14.255260467529297
    6. 'ickname' → logprob: -14.505260467529297
    7. 'icken' → logprob: -14.505260467529297
    8. 'icks' → logprob: -14.880260467529297
    9. '```' → logprob: -14.880260467529297
    10. 'i' → logprob: -15.005260467529297

Token 424: '):
' (ID: 1883)
  Prédit: 'ness'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ness' → logprob: -0.1539130061864853
    2. 'ess' → logprob: -2.0289130210876465
    3. ',' → logprob: -4.5289130210876465
    4. ')' → logprob: -8.403912544250488
    5. '(' → logprob: -10.278912544250488
    6. '=' → logprob: -10.778912544250488
    7. '_,' → logprob: -11.028912544250488
    8. '   ' → logprob: -11.028912544250488
    9. ' ness' → logprob: -11.278912544250488
    10. '```' → logprob: -11.778912544250488

Token 425: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0469591617584229
    2. '(th' → logprob: -1.1719591617584229
    3. '   ' → logprob: -1.5469591617584229
    4. '(top' → logprob: -3.046959161758423
    5. ' if' → logprob: -3.921959161758423
    6. 'th' → logprob: -4.421958923339844
    7. '0' → logprob: -4.671958923339844
    8. ' return' → logprob: -4.671958923339844
    9. 'return' → logprob: -4.671958923339844
    10. 'def' → logprob: -4.671958923339844

Token 426: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.030940162017941475
    2. 'if' → logprob: -3.780940055847168
    3. 'res' → logprob: -5.280940055847168
    4. ' return' → logprob: -6.780940055847168
    5. '   ' → logprob: -7.155940055847168
    6. ' if' → logprob: -7.905940055847168
    7. 'result' → logprob: -8.280940055847168
    8. ' res' → logprob: -10.780940055847168
    9. 'total' → logprob: -11.405940055847168
    10. 'for' → logprob: -12.405940055847168

Token 427: ' count' (ID: 3605)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16755427420139313
    2. 'if' → logprob: -2.0425543785095215
    3. 'res' → logprob: -4.1675543785095215
    4. 'result' → logprob: -5.1675543785095215
    5. ' return' → logprob: -6.4175543785095215
    6. ' if' → logprob: -7.0425543785095215
    7. 'total' → logprob: -7.2925543785095215
    8. 'ans' → logprob: -9.167553901672363
    9. ' res' → logprob: -10.417553901672363
    10. '#' → logprob: -10.917553901672363

Token 428: ' possible' (ID: 4149)
  Prédit: '(th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(th' → logprob: -0.2532377243041992
    2. '(' → logprob: -1.5032377243041992
    3. '(
' → logprob: -7.003237724304199
    4. ' (' → logprob: -8.7532377243042
    5. '=' → logprob: -9.8782377243042
    6. 'th' → logprob: -9.8782377243042
    7. ' =' → logprob: -10.1282377243042
    8. '(t' → logprob: -10.8782377243042
    9. 'def' → logprob: -11.2532377243042
    10. ')' → logprob: -11.6282377243042

Token 429: ' poles' (ID: 93715)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1949349641799927
    2. ' ways' → logprob: -1.6949349641799927
    3. '(th' → logprob: -1.9449349641799927
    4. 'arr' → logprob: -2.444934844970703
    5. 's' → logprob: -2.444934844970703
    6. 'ways' → logprob: -2.694934844970703
    7. 'config' → logprob: -3.444934844970703
    8. ' arrangements' → logprob: -3.569934844970703
    9. 'th' → logprob: -3.819934844970703
    10. '(
' → logprob: -4.819934844970703

Token 430: ' (' (ID: 350)
  Prédit: '(th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(th' → logprob: -0.36510661244392395
    2. '(' → logprob: -1.9901065826416016
    3. '=' → logprob: -2.6151065826416016
    4. ' =' → logprob: -2.8651065826416016
    5. ' if' → logprob: -4.240106582641602
    6. ' for' → logprob: -5.365106582641602
    7. 'return' → logprob: -5.740106582641602
    8. '   ' → logprob: -5.740106582641602
    9. 'def' → logprob: -5.865106582641602
    10. 'th' → logprob: -5.865106582641602

Token 431: 'top' (ID: 8169)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.10001242905855179
    2. ' thickness' → logprob: -3.2250125408172607
    3. 'remaining' → logprob: -3.6000125408172607
    4. 't' → logprob: -4.975012302398682
    5. ')' → logprob: -5.725012302398682
    6. ' remaining' → logprob: -5.850012302398682
    7. 'total' → logprob: -5.975012302398682
    8. 'res' → logprob: -5.975012302398682
    9. 'rest' → logprob: -6.225012302398682
    10. 'def' → logprob: -6.725012302398682

Token 432: ' disk' (ID: 18044)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3741770386695862
    2. '_th' → logprob: -1.9991769790649414
    3. '_color' → logprob: -2.3741769790649414
    4. 'th' → logprob: -2.7491769790649414
    5. '=' → logprob: -5.749176979064941
    6. '   ' → logprob: -5.749176979064941
    7. ')' → logprob: -5.999176979064941
    8. ' ,' → logprob: -5.999176979064941
    9. '_,' → logprob: -6.749176979064941
    10. 'color' → logprob: -6.749176979064941

Token 433: ' color' (ID: 3089)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3277714252471924
    2. '_color' → logprob: -1.5777714252471924
    3. 'color' → logprob: -3.4527714252471924
    4. '_colors' → logprob: -4.202771186828613
    5. ')' → logprob: -4.577771186828613
    6. ',color' → logprob: -5.327771186828613
    7. 'colors' → logprob: -5.952771186828613
    8. 'th' → logprob: -6.577771186828613
    9. '=' → logprob: -6.577771186828613
    10. 's' → logprob: -6.577771186828613

Token 434: ' is' (ID: 382)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0063616083934903145
    2. '=' → logprob: -5.381361484527588
    3. ')' → logprob: -7.131361484527588
    4. ' ,' → logprob: -7.881361484527588
    5. '   ' → logprob: -9.256361961364746
    6. '):' → logprob: -9.256361961364746
    7. '):
' → logprob: -9.506361961364746
    8. '0' → logprob: -9.506361961364746
    9. 's' → logprob: -9.631361961364746
    10. ',
' → logprob: -9.756361961364746

Token 435: ' dark' (ID: 8883)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001863750658230856
    2. ' ' → logprob: -8.6251859664917
    3. ')' → logprob: -12.3751859664917
    4. '1' → logprob: -13.7501859664917
    5. ',' → logprob: -14.1251859664917
    6. '   ' → logprob: -15.6251859664917
    7. '<|end|>' → logprob: -15.8751859664917
    8. '=' → logprob: -16.125186920166016
    9. '```' → logprob: -17.062686920166016
    10. '...' → logprob: -17.375186920166016

Token 436: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024902328848838806
    2. ')' → logprob: -3.77490234375
    3. '0' → logprob: -7.52490234375
    4. 'def' → logprob: -7.89990234375
    5. ' ,' → logprob: -8.27490234375
    6. '):
' → logprob: -8.89990234375
    7. '=' → logprob: -9.39990234375
    8. '(' → logprob: -9.52490234375
    9. ')
' → logprob: -9.89990234375
    10. '   ' → logprob: -9.89990234375

Token 437: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04716726765036583
    2. ')' → logprob: -3.1721673011779785
    3. '0' → logprob: -6.1721673011779785
    4. 'def' → logprob: -7.5471673011779785
    5. '=' → logprob: -7.9221673011779785
    6. '):' → logprob: -8.29716682434082
    7. ',
' → logprob: -8.54716682434082
    8. ' ,' → logprob: -8.54716682434082
    9. '(' → logprob: -8.67216682434082
    10. '):
' → logprob: -9.04716682434082

Token 438: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2846049964427948
    2. ',' → logprob: -1.4096050262451172
    3. ')
' → logprob: -7.034605026245117
    4. '):' → logprob: -7.409605026245117
    5. ' )' → logprob: -7.409605026245117
    6. ' ,' → logprob: -7.659605026245117
    7. '):
' → logprob: -7.784605026245117
    8. '   ' → logprob: -8.159605026245117
    9. 'def' → logprob: -9.659605026245117
    10. '):

' → logprob: -10.034605026245117

Token 439: ' bottom' (ID: 8725)
  Prédit: ' bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.13119584321975708
    2. 'bottom' → logprob: -2.1311957836151123
    3. '0' → logprob: -6.256196022033691
    4. ' ' → logprob: -7.506196022033691
    5. ' top' → logprob: -7.506196022033691
    6. '   ' → logprob: -7.881196022033691
    7. 'top' → logprob: -8.756196022033691
    8. ' thick' → logprob: -8.881196022033691
    9. ')' → logprob: -9.006196022033691
    10. 'th' → logprob: -9.006196022033691

Token 440: ' disk' (ID: 18044)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.046363092958927155
    2. ',' → logprob: -4.17136287689209
    3. 'color' → logprob: -4.17136287689209
    4. ')' → logprob: -4.42136287689209
    5. ' color' → logprob: -7.04636287689209
    6. '_disk' → logprob: -7.67136287689209
    7. '   ' → logprob: -7.92136287689209
    8. '):' → logprob: -8.67136287689209
    9. 'def' → logprob: -8.79636287689209
    10. '):
' → logprob: -9.79636287689209

Token 441: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.3150046467781067
    2. '_color' → logprob: -1.315004587173462
    3. ' color' → logprob: -7.190004825592041
    4. ')' → logprob: -7.315004825592041
    5. ',' → logprob: -9.065004348754883
    6. '=' → logprob: -10.440004348754883
    7. '
' → logprob: -10.815004348754883
    8. '	color' → logprob: -10.815004348754883
    9. 'Color' → logprob: -11.065004348754883
    10. 'th' → logprob: -11.315004348754883

Token 442: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011727634817361832
    2. ')' → logprob: -5.011727809906006
    3. ' =' → logprob: -6.011727809906006
    4. '0' → logprob: -6.511727809906006
    5. ',' → logprob: -7.761727809906006
    6. '):
' → logprob: -8.261727333068848
    7. ')=' → logprob: -9.136727333068848
    8. ')
' → logprob: -9.261727333068848
    9. 'def' → logprob: -10.011727333068848
    10. '):

' → logprob: -10.761727333068848

Token 443: ' dark' (ID: 8883)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000724229437764734
    2. ' ' → logprob: -7.2507243156433105
    3. ')' → logprob: -11.500723838806152
    4. '   ' → logprob: -13.625723838806152
    5. '1' → logprob: -14.000723838806152
    6. '
' → logprob: -14.375723838806152
    7. ',' → logprob: -15.125723838806152
    8. '```' → logprob: -15.875723838806152
    9. 'l' → logprob: -15.938223838806152
    10. '(' → logprob: -16.12572479248047

Token 444: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8762927651405334
    2. '0' → logprob: -0.8762927651405334
    3. ')' → logprob: -1.8762927055358887
    4. '(' → logprob: -5.001292705535889
    5. ' ' → logprob: -6.001292705535889
    6. ' ,' → logprob: -6.751292705535889
    7. ')
' → logprob: -6.751292705535889
    8. '):
' → logprob: -7.126292705535889
    9. '),' → logprob: -7.876292705535889
    10. '   ' → logprob: -8.126293182373047

Token 445: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024346397258341312
    2. ')' → logprob: -6.502434730529785
    3. ',' → logprob: -8.127434730529785
    4. '(' → logprob: -8.252434730529785
    5. ')
' → logprob: -8.752434730529785
    6. ' ' → logprob: -8.877434730529785
    7. 'def' → logprob: -10.877434730529785
    8. '   ' → logprob: -11.252434730529785
    9. '):
' → logprob: -11.627434730529785
    10. '=' → logprob: -11.752434730529785

Token 446: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31593701243400574
    2. ',' → logprob: -1.4409370422363281
    3. '):
' → logprob: -3.940937042236328
    4. ')' → logprob: -4.315937042236328
    5. '   ' → logprob: -6.815937042236328
    6. ' ):' → logprob: -9.190937042236328
    7. '):

' → logprob: -9.565937042236328
    8. '):
' → logprob: -9.815937042236328
    9. ' ,' → logprob: -9.940937042236328
    10. ')
' → logprob: -12.065937042236328

Token 447: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17260393500328064
    2. '(' → logprob: -2.4226038455963135
    3. '(th' → logprob: -3.0476038455963135
    4. ':' → logprob: -4.797604084014893
    5. '):' → logprob: -4.797604084014893
    6. ')' → logprob: -6.422604084014893
    7. '):
' → logprob: -7.297604084014893
    8. 'def' → logprob: -7.422604084014893
    9. ' if' → logprob: -7.547604084014893
    10. '(
' → logprob: -7.797604084014893

Token 448: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005317835137248039
    2. ' return' → logprob: -5.505317687988281
    3. '   ' → logprob: -7.005317687988281
    4. 'if' → logprob: -8.130317687988281
    5. 'result' → logprob: -10.880317687988281
    6. ' if' → logprob: -11.380317687988281
    7. '	return' → logprob: -12.380317687988281
    8. 'res' → logprob: -13.005317687988281
    9. '
' → logprob: -16.25531768798828
    10. ')' → logprob: -16.75531768798828

Token 449: ' The' (ID: 623)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1832295060157776
    2. ' return' → logprob: -1.8082294464111328
    3. '   ' → logprob: -6.058229446411133
    4. ' if' → logprob: -7.558229446411133
    5. 'if' → logprob: -7.808229446411133
    6. 'result' → logprob: -9.058229446411133
    7. 'res' → logprob: -9.933229446411133
    8. ' result' → logprob: -10.808229446411133
    9. ' res' → logprob: -11.433229446411133
    10. ' ' → logprob: -12.183229446411133

Token 450: ' parameter' (ID: 11047)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.021963469684123993
    2. 'result' → logprob: -4.521963596343994
    3. ' return' → logprob: -5.021963596343994
    4. '=' → logprob: -6.021963596343994
    5. 'res' → logprob: -7.396963596343994
    6. 'def' → logprob: -8.521963119506836
    7. 'th' → logprob: -8.521963119506836
    8. '
' → logprob: -8.646963119506836
    9. ' result' → logprob: -8.646963119506836
    10. ' =' → logprob: -8.896963119506836

Token 451: ' thick' (ID: 17154)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2100586891174316
    2. ' is' → logprob: -1.7100586891174316
    3. ' =' → logprob: -2.4600586891174316
    4. 'is' → logprob: -2.5850586891174316
    5. 'th' → logprob: -2.5850586891174316
    6. 's' → logprob: -2.7100586891174316
    7. 'def' → logprob: -2.7100586891174316
    8. 'rep' → logprob: -3.0850586891174316
    9. 'return' → logprob: -4.210058689117432
    10. ')' → logprob: -4.335058689117432

Token 452: ' is' (ID: 382)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.089399054646492
    2. '):' → logprob: -2.5893990993499756
    3. ':' → logprob: -6.0893988609313965
    4. '=' → logprob: -6.0893988609313965
    5. '==' → logprob: -6.7143988609313965
    6. ',
' → logprob: -6.9643988609313965
    7. ' ,' → logprob: -7.0893988609313965
    8. ')' → logprob: -7.0893988609313965
    9. ' is' → logprob: -7.4643988609313965
    10. '):
' → logprob: -7.4643988609313965

Token 453: ' the' (ID: 290)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.06031670421361923
    2. 'the' → logprob: -2.935316801071167
    3. ' the' → logprob: -5.560316562652588
    4. ' thick' → logprob: -6.810316562652588
    5. 'l' → logprob: -8.935317039489746
    6. '   ' → logprob: -9.560317039489746
    7. 'int' → logprob: -9.810317039489746
    8. ' thickness' → logprob: -9.810317039489746
    9. ' th' → logprob: -10.185317039489746
    10. ')' → logprob: -10.310317039489746

Token 454: ' remaining' (ID: 15448)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.2237190455198288
    2. 'remaining' → logprob: -1.9737190008163452
    3. 'total' → logprob: -3.5987191200256348
    4. 'current' → logprob: -4.598719120025635
    5. ' thickness' → logprob: -4.723719120025635
    6. 'l' → logprob: -5.473719120025635
    7. ' remaining' → logprob: -6.098719120025635
    8. 'next' → logprob: -6.223719120025635
    9. 'length' → logprob: -6.598719120025635
    10. 'number' → logprob: -6.848719120025635

Token 455: ' thickness' (ID: 38833)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.06843289732933044
    2. '_th' → logprob: -3.6934328079223633
    3. ')' → logprob: -3.9434328079223633
    4. ' thickness' → logprob: -3.9434328079223633
    5. ',' → logprob: -6.318432807922363
    6. '-th' → logprob: -8.443432807922363
    7. '):' → logprob: -8.943432807922363
    8. '   ' → logprob: -10.068432807922363
    9. '):
' → logprob: -10.193432807922363
    10. '),' → logprob: -10.193432807922363

Token 456: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048371028155088425
    2. '   ' → logprob: -3.4233710765838623
    3. ')' → logprob: -5.423370838165283
    4. '=' → logprob: -6.173370838165283
    5. 'def' → logprob: -6.298370838165283
    6. '):
' → logprob: -6.798370838165283
    7. ',
' → logprob: -7.173370838165283
    8. '):' → logprob: -7.173370838165283
    9. ' and' → logprob: -7.423370838165283
    10. '
' → logprob: -8.048371315002441

Token 457: ' fill' (ID: 6954)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.4882911443710327
    2. 'place' → logprob: -1.8632911443710327
    3. 'build' → logprob: -2.1132912635803223
    4. 'fill' → logprob: -3.1132912635803223
    5. 'add' → logprob: -4.113291263580322
    6. 'complete' → logprob: -4.363291263580322
    7. 'count' → logprob: -4.863291263580322
    8. 'choose' → logprob: -4.863291263580322
    9. 'cover' → logprob: -5.863291263580322
    10. 'put' → logprob: -6.113291263580322

Token 458: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0949007272720337
    2. ',' → logprob: -1.3449007272720337
    3. '(th' → logprob: -1.3449007272720337
    4. 'th' → logprob: -2.844900608062744
    5. '(' → logprob: -3.719900608062744
    6. ')' → logprob: -4.094900608062744
    7. '):' → logprob: -4.344900608062744
    8. '=' → logprob: -4.844900608062744
    9. '):
' → logprob: -4.844900608062744
    10. ' =' → logprob: -5.469900608062744

Token 459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15808647871017456
    2. ':' → logprob: -2.0330865383148193
    3. '):' → logprob: -5.53308629989624
    4. ',' → logprob: -5.53308629989624
    5. '(' → logprob: -6.15808629989624
    6. '):
' → logprob: -6.53308629989624
    7. ':
' → logprob: -6.78308629989624
    8. ' if' → logprob: -7.15808629989624
    9. '():' → logprob: -7.65808629989624
    10. '{' → logprob: -8.158086776733398

Token 460: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.33004626631736755
    2. 'if' → logprob: -1.33004629611969
    3. 'res' → logprob: -5.2050461769104
    4. '   ' → logprob: -5.4550461769104
    5. ' if' → logprob: -5.5800461769104
    6. ' return' → logprob: -5.9550461769104
    7. 'result' → logprob: -7.9550461769104
    8. 'total' → logprob: -9.580046653747559
    9. ' res' → logprob: -9.830046653747559
    10. 'ans' → logprob: -11.330046653747559

Token 461: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00462510297074914
    2. ' dp' → logprob: -5.37962532043457
    3. '(dp' → logprob: -12.75462532043457
    4. '0' → logprob: -14.50462532043457
    5. 'sum' → logprob: -14.50462532043457
    6. '	dp' → logprob: -14.62962532043457
    7. '
' → logprob: -16.25462532043457
    8. '_dp' → logprob: -16.25462532043457
    9. '   ' → logprob: -16.37962532043457
    10. ' ' → logprob: -16.75462532043457

Token 462: '(th' (ID: 53988)
  Prédit: '(th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(th' → logprob: -0.00022999993234407157
    2. 'th' → logprob: -9.125229835510254
    3. '(' → logprob: -9.375229835510254
    4. '(l' → logprob: -10.250229835510254
    5. '	th' → logprob: -15.375229835510254
    6. 'l' → logprob: -15.625229835510254
    7. '(k' → logprob: -15.750229835510254
    8. ' (' → logprob: -16.00023078918457
    9. '(t' → logprob: -16.37523078918457
    10. '<th' → logprob: -16.87523078918457

Token 463: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.003842709818854928
    2. 'ickness' → logprob: -5.628842830657959
    3. 'ck' → logprob: -8.7538423538208
    4. 'ic' → logprob: -10.2538423538208
    5. 'ich' → logprob: -11.1288423538208
    6. ' ' → logprob: -12.3788423538208
    7. '   ' → logprob: -12.3788423538208
    8. '```' → logprob: -13.1288423538208
    9. '
' → logprob: -13.2538423538208
    10. 'ik' → logprob: -13.5038423538208

Token 464: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048747580498456955
    2. ' ,' → logprob: -3.0487475395202637
    3. '0' → logprob: -9.298748016357422
    4. '(' → logprob: -10.173748016357422
    5. '   ' → logprob: -11.673748016357422
    6. ')' → logprob: -11.673748016357422
    7. ' ' → logprob: -12.798748016357422
    8. '(),' → logprob: -12.798748016357422
    9. ',
' → logprob: -13.173748016357422
    10. ' (' → logprob: -13.673748016357422

Token 465: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.750001907348633
    3. '1' → logprob: -14.375001907348633
    4. '۰' → logprob: -18.250001907348633
    5. '   ' → logprob: -18.562501907348633
    6. '```' → logprob: -18.875001907348633
    7. '  ' → logprob: -19.625001907348633
    8. '０' → logprob: -19.937501907348633
    9. '2' → logprob: -20.000001907348633
    10. '`' → logprob: -20.250001907348633

Token 466: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003391574718989432
    2. '1' → logprob: -8.00033950805664
    3. ' ' → logprob: -12.62533950805664
    4. '   ' → logprob: -15.87533950805664
    5. '  ' → logprob: -16.93783950805664
    6. '۰' → logprob: -17.25033950805664
    7. '```' → logprob: -17.62533950805664
    8. '`' → logprob: -18.18783950805664
    9. '０' → logprob: -18.31283950805664
    10. '    ' → logprob: -18.43783950805664

Token 467: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011558275582501665
    2. ' ,' → logprob: -9.125115394592285
    3. '0' → logprob: -12.250115394592285
    4. ')' → logprob: -14.625115394592285
    5. ',
' → logprob: -14.750115394592285
    6. '   ' → logprob: -15.250115394592285
    7. '```' → logprob: -15.500115394592285
    8. '<|end|>' → logprob: -15.750115394592285
    9. ' ' → logprob: -16.2501163482666
    10. '`,' → logprob: -16.5001163482666

Token 468: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -19.875001907348633
    4. '۰' → logprob: -20.750001907348633
    5. ')' → logprob: -21.500001907348633
    6. '  ' → logprob: -22.000001907348633
    7. '０' → logprob: -22.625001907348633
    8. '00' → logprob: -23.125001907348633
    9. '1' → logprob: -23.437501907348633
    10. '०' → logprob: -23.750001907348633

Token 469: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '۰' → logprob: -21.75
    4. '   ' → logprob: -21.875
    5. ')' → logprob: -22.75
    6. '  ' → logprob: -23.875
    7. '00' → logprob: -24.25
    8. '０' → logprob: -24.375
    9. 'l' → logprob: -24.5625
    10. '=' → logprob: -24.8125

Token 470: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -15.000000953674316
    4. '))' → logprob: -17.000001907348633
    5. ')return' → logprob: -17.000001907348633
    6. ')}' → logprob: -17.500001907348633
    7. ')`' → logprob: -17.625001907348633
    8. '   ' → logprob: -17.625001907348633
    9. '}' → logprob: -18.375001907348633
    10. '),' → logprob: -18.500001907348633

Token 471: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001415618316968903
    2. 'result' → logprob: -9.250141143798828
    3. 'for' → logprob: -10.750141143798828
    4. ')' → logprob: -11.500141143798828
    5. ' print' → logprob: -12.125141143798828
    6. '<|end|>' → logprob: -12.500141143798828
    7. 'total' → logprob: -13.250141143798828
    8. '```' → logprob: -14.250141143798828
    9. 'count' → logprob: -14.625141143798828
    10. '
' → logprob: -15.250141143798828

Token 472: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.023310350254178047
    2. '(' → logprob: -3.773310422897339
    3. 'count' → logprob: -10.648310661315918
    4. '(sum' → logprob: -11.148310661315918
    5. '(
' → logprob: -11.273310661315918
    6. '()' → logprob: -11.398310661315918
    7. ' (' → logprob: -14.023310661315918
    8. '(

' → logprob: -14.648310661315918
    9. '('' → logprob: -15.023310661315918
    10. '(dp' → logprob: -15.523310661315918

Token 473: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -2.4391956685576588e-05
    2. '(' → logprob: -10.875024795532227
    3. ')' → logprob: -12.750024795532227
    4. ')(' → logprob: -13.375024795532227
    5. 'l' → logprob: -14.125024795532227
    6. '(L' → logprob: -15.875024795532227
    7. ' (' → logprob: -16.625024795532227
    8. '((' → logprob: -17.375024795532227
    9. '(len' → logprob: -17.375024795532227
    10. '	l' → logprob: -18.000024795532227

Token 474: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0004909569397568703
    2. ')' → logprob: -7.625491142272949
    3. '))
' → logprob: -13.12549114227295
    4. ')))' → logprob: -14.87549114227295
    5. ' ))' → logprob: -15.50049114227295
    6. '()))' → logprob: -15.75049114227295
    7. ')
' → logprob: -16.500490188598633
    8. '+' → logprob: -16.875490188598633
    9. '),' → logprob: -17.125490188598633
    10. '**' → logprob: -17.875490188598633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 472
Tokens correctement prédits (1ère position, stricte): 128
Tokens correctement prédits (1ère position, avec adaptation): 134
Tokens correctement prédits (top 10): 308
Précision stricte (1ère position): 27.12%
Précision adaptée (1ère position): 28.39%
Précision (top 10): 65.25%
================================================================================
