================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_leap_year(year):
    if year % 400 == 0:
        return True
    if year % 100 == 0:
        return False
    if year % 4 == 0:
        return True
    return False

while True:
    line = input()
    if line == "":
        continue
    a, b = map(int, line.split())
    if a == 0 and b == 0:
        break
    leap_years = []
    for year in range(a, b + 1):
        if is_leap_year(year):
            leap_years.append(year)
    if len(leap_years) == 0:
        print("NA")
    else:
        for y in leap_years:
            print(y)
    print()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_le' (ID: 27121)
  → Token d'amorce (pas de prédiction)

Token 3: 'ap' (ID: 403)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37210914492607117
    2. 'a' → logprob: -1.7471091747283936
    3. 'n' → logprob: -3.1221091747283936
    4. '_g' → logprob: -3.7471091747283936
    5. 'g' → logprob: -3.9971091747283936
    6. '_a' → logprob: -4.3721089363098145
    7. 'ap' → logprob: -4.3721089363098145
    8. 'q' → logprob: -5.4971089363098145
    9. '_n' → logprob: -5.4971089363098145
    10. '```' → logprob: -5.4971089363098145

Token 4: '_year' (ID: 33489)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.706686690449715e-05
    2. '(' → logprob: -10.125066757202148
    3. '_(' → logprob: -10.750066757202148
    4. '```' → logprob: -13.625066757202148
    5. '(_)' → logprob: -13.875066757202148
    6. '_year' → logprob: -14.250066757202148
    7. '_

' → logprob: -15.000066757202148
    8. 'f' → logprob: -15.125066757202148
    9. '(_' → logprob: -15.375066757202148
    10. '_a' → logprob: -15.500066757202148

Token 5: '(year' (ID: 58075)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06279972195625305
    2. '_' → logprob: -2.8127996921539307
    3. '(_:' → logprob: -8.187799453735352
    4. '(_' → logprob: -8.312799453735352
    5. '```' → logprob: -9.312799453735352
    6. '_(' → logprob: -9.312799453735352
    7. '_:' → logprob: -9.687799453735352
    8. '(:' → logprob: -11.437799453735352
    9. ' (' → logprob: -11.937799453735352
    10. '(
' → logprob: -12.062799453735352

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018909402191638947
    2. ')' → logprob: -4.018909454345703
    3. ':' → logprob: -7.268909454345703
    4. '_' → logprob: -11.018909454345703
    5. '():' → logprob: -11.143909454345703
    6. '):
' → logprob: -11.768909454345703
    7. '```' → logprob: -11.893909454345703
    8. '(' → logprob: -12.643909454345703
    9. ''):' → logprob: -12.893909454345703
    10. '`:' → logprob: -14.018909454345703

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016595888882875443
    2. '   ' → logprob: -4.266595840454102
    3. ':
' → logprob: -6.391595840454102
    4. '```' → logprob: -7.766595840454102
    5. '():' → logprob: -9.766595840454102
    6. '    
' → logprob: -9.891595840454102
    7. ':return' → logprob: -9.891595840454102
    8. '(' → logprob: -10.516595840454102
    9. '\n' → logprob: -10.766595840454102
    10. '    ' → logprob: -11.016595840454102

Token 8: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18053053319454193
    2. ':' → logprob: -2.555530548095703
    3. '```' → logprob: -2.805530548095703
    4. ' ' → logprob: -4.805530548095703
    5. ' if' → logprob: -4.930530548095703
    6. '\n' → logprob: -6.180530548095703
    7. '``' → logprob: -6.430530548095703
    8. '    ' → logprob: -6.680530548095703
    9. '\t' → logprob: -6.680530548095703
    10. ''' → logprob: -7.305530548095703

Token 9: ' year' (ID: 1284)
  Prédit: ' year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' year' → logprob: -0.028038430958986282
    2. ' ' → logprob: -3.653038501739502
    3. 'year' → logprob: -6.528038501739502
    4. ' (' → logprob: -9.153038024902344
    5. '(year' → logprob: -9.153038024902344
    6. ' not' → logprob: -10.278038024902344
    7. '<|end|>' → logprob: -12.028038024902344
    8. ' ' → logprob: -12.028038024902344
    9. '  ' → logprob: -12.403038024902344
    10. ' years' → logprob: -12.653038024902344

Token 10: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04485692083835602
    2. ' ' → logprob: -3.1698570251464844
    3. '%' → logprob: -6.294857025146484
    4. '  ' → logprob: -12.169857025146484
    5. '   ' → logprob: -13.169857025146484
    6. ' %=' → logprob: -14.044857025146484
    7. '    ' → logprob: -14.544857025146484
    8. ' ' → logprob: -14.669857025146484
    9. '<|end|>' → logprob: -15.044857025146484
    10. ')' → logprob: -15.669857025146484

Token 11: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.31468018889427185
    2. ' ' → logprob: -1.3146802186965942
    3. '400' → logprob: -6.564680099487305
    4. '```' → logprob: -12.189680099487305
    5. '40' → logprob: -13.439680099487305
    6. '0' → logprob: -14.564680099487305
    7. '   ' → logprob: -14.814680099487305
    8. '36' → logprob: -16.189680099487305
    9. '`' → logprob: -16.189680099487305
    10. '32' → logprob: -16.564680099487305

Token 12: '400' (ID: 4812)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0059602027758955956
    2. '400' → logprob: -5.130959987640381
    3. ' ' → logprob: -10.380960464477539
    4. '```' → logprob: -14.630960464477539
    5. '   ' → logprob: -16.88096046447754
    6. '40' → logprob: -17.88096046447754
    7. '0' → logprob: -18.13096046447754
    8. '٤' → logprob: -18.75596046447754
    9. '  ' → logprob: -19.00596046447754
    10. '``' → logprob: -19.00596046447754

Token 13: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.009783949702978134
    2. '==' → logprob: -4.634783744812012
    3. '=' → logprob: -11.009783744812012
    4. ' ' → logprob: -12.759783744812012
    5. ' =' → logprob: -12.759783744812012
    6. ' ===' → logprob: -13.009783744812012
    7. '```' → logprob: -13.884783744812012
    8. '`' → logprob: -14.259783744812012
    9. '===' → logprob: -14.259783744812012
    10. '0' → logprob: -15.259783744812012

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759403705596924
    2. '0' → logprob: -0.8259403705596924
    3. '=' → logprob: -15.575940132141113
    4. '  ' → logprob: -15.700940132141113
    5. ' ' → logprob: -15.825940132141113
    6. ')' → logprob: -16.32594108581543
    7. '```' → logprob: -16.45094108581543
    8. '   ' → logprob: -16.57594108581543
    9. '==' → logprob: -16.70094108581543
    10. '000' → logprob: -17.45094108581543

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. '  ' → logprob: -18.006715774536133
    4. '   ' → logprob: -18.131715774536133
    5. '000' → logprob: -19.131715774536133
    6. '```' → logprob: -19.131715774536133
    7. '00' → logprob: -19.631715774536133
    8. ' ' → logprob: -19.881715774536133
    9. '۰' → logprob: -20.131715774536133
    10. '=' → logprob: -21.006715774536133

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003000696888193488
    2. ':return' → logprob: -8.375300407409668
    3. ' :' → logprob: -10.375300407409668
    4. ':
' → logprob: -10.375300407409668
    5. '):' → logprob: -12.625300407409668
    6. '   ' → logprob: -14.000300407409668
    7. ':**' → logprob: -14.375300407409668
    8. '       ' → logprob: -14.625300407409668
    9. '':' → logprob: -14.750300407409668
    10. ' return' → logprob: -14.750300407409668

Token 17: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9175593852996826
    2. ':' → logprob: -1.2925593852996826
    3. '       ' → logprob: -2.1675593852996826
    4. ':return' → logprob: -2.4175593852996826
    5. '   ' → logprob: -2.6675593852996826
    6. ' return' → logprob: -4.042559623718262
    7. '    ' → logprob: -4.417559623718262
    8. 'return' → logprob: -4.792559623718262
    9. '\' → logprob: -5.542559623718262
    10. '```' → logprob: -6.167559623718262

Token 18: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7398170232772827
    2. ' return' → logprob: -1.3648170232772827
    3. 'return' (adapté à ' return') → logprob: -1.4898170232772827
    4. '\n' → logprob: -3.8648171424865723
    5. '   ' → logprob: -4.114817142486572
    6. '
' → logprob: -6.364817142486572
    7. ':return' → logprob: -7.239817142486572
    8. '           ' → logprob: -7.489817142486572
    9. ' 
' → logprob: -7.489817142486572
    10. ' \' → logprob: -8.239816665649414

Token 19: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.47407716512680054
    2. 'True' → logprob: -0.9740771651268005
    3. '   ' → logprob: -15.849077224731445
    4. '(True' → logprob: -18.599077224731445
    5. '=True' → logprob: -21.099077224731445
    6. ' ' → logprob: -21.724077224731445
    7. 'False' → logprob: -22.224077224731445
    8. 'true' → logprob: -22.349077224731445
    9. ' ' → logprob: -23.224077224731445
    10. '       ' → logprob: -23.349077224731445

Token 20: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.14976972341537476
    2. '   ' → logprob: -2.3997697830200195
    3. '
' → logprob: -3.2747697830200195
    4. '    
' → logprob: -4.6497697830200195
    5. '\r' → logprob: -8.27476978302002
    6. '  
' → logprob: -8.89976978302002
    7. '' → logprob: -9.27476978302002
    8. '```' → logprob: -9.27476978302002
    9. ' 
' → logprob: -10.14976978302002
    10. '\' → logprob: -10.27476978302002

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07372011244297028
    2. '    
' → logprob: -3.5737202167510986
    3. '```' → logprob: -3.5737202167510986
    4. '\n' → logprob: -4.5737199783325195
    5. '
' → logprob: -5.6987199783325195
    6. '``' → logprob: -8.32371997833252
    7. '  
' → logprob: -8.44871997833252
    8. '`
' → logprob: -8.69871997833252
    9. '   
' → logprob: -9.19871997833252
    10. 'elif' → logprob: -9.32371997833252

Token 22: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032303594052791595
    2. 'elif' → logprob: -3.90730357170105
    3. '\n' → logprob: -5.157303810119629
    4. '    
' → logprob: -5.907303810119629
    5. ' elif' → logprob: -6.407303810119629
    6. '```' → logprob: -7.157303810119629
    7. '
' → logprob: -7.907303810119629
    8. ' ' → logprob: -9.032303810119629
    9. '  
' → logprob: -9.407303810119629
    10. '	elif' → logprob: -10.282303810119629

Token 23: ' year' (ID: 1284)
  Prédit: ' year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' year' → logprob: -7.433829159708694e-05
    2. 'year' → logprob: -10.00007438659668
    3. ' ' → logprob: -10.75007438659668
    4. ' ' → logprob: -11.87507438659668
    5. '(year' → logprob: -14.87507438659668
    6. ' years' → logprob: -16.62507438659668
    7. ' space' → logprob: -16.87507438659668
    8. ' (' → logprob: -18.37507438659668
    9. ' not' → logprob: -18.50007438659668
    10. ' y' → logprob: -18.87507438659668

Token 24: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.01105890329927206
    2. '%' → logprob: -4.511058807373047
    3. ' ' → logprob: -11.636058807373047
    4. ' ' → logprob: -13.886058807373047
    5. '<|end|>' → logprob: -14.761058807373047
    6. '```' → logprob: -15.886058807373047
    7. '   ' → logprob: -16.261058807373047
    8. ' %=' → logprob: -16.636058807373047
    9. '`' → logprob: -16.886058807373047
    10. '20' → logprob: -16.948558807373047

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0033938486594706774
    2. '40' → logprob: -6.628393650054932
    3. '100' → logprob: -6.753393650054932
    4. '4' → logprob: -7.128393650054932
    5. '32' → logprob: -9.50339412689209
    6. '20' → logprob: -12.37839412689209
    7. 'space' → logprob: -12.62839412689209
    8. '400' → logprob: -13.12839412689209
    9. '10' → logprob: -13.37839412689209
    10. '0' → logprob: -13.37839412689209

Token 26: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.01418207585811615
    2. '4' → logprob: -4.264182090759277
    3. ' ' → logprob: -11.139182090759277
    4. '   ' → logprob: -13.264182090759277
    5. '1' → logprob: -13.389182090759277
    6. '```' → logprob: -14.764182090759277
    7. '  ' → logprob: -15.139182090759277
    8. '0' → logprob: -16.13918113708496
    9. '==' → logprob: -18.38918113708496
    10. '    ' → logprob: -18.51418113708496

Token 27: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.004838787950575352
    2. '!=' → logprob: -5.379838943481445
    3. ' ' → logprob: -8.629838943481445
    4. ' ==' → logprob: -11.504838943481445
    5. '<|end|>' → logprob: -11.504838943481445
    6. ' ' → logprob: -12.129838943481445
    7. ' >' → logprob: -13.004838943481445
    8. ' !==' → logprob: -13.129838943481445
    9. ' ```' → logprob: -13.254838943481445
    10. '```' → logprob: -13.379838943481445

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07130761444568634
    2. '0' → logprob: -2.69630765914917
    3. ' !=' → logprob: -6.69630765914917
    4. '!=' → logprob: -9.196307182312012
    5. '=' → logprob: -12.071307182312012
    6. '>' → logprob: -12.321307182312012
    7. ' ' → logprob: -12.446307182312012
    8. ' =' → logprob: -12.821307182312012
    9. ' not' → logprob: -13.071307182312012
    10. '!' → logprob: -13.571307182312012

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028067755047231913
    2. ' ' → logprob: -5.877806663513184
    3. '=' → logprob: -13.627806663513184
    4. '```' → logprob: -15.377806663513184
    5. '==' → logprob: -15.502806663513184
    6. '!=' → logprob: -16.1278076171875
    7. '!' → logprob: -16.6278076171875
    8. '۰' → logprob: -17.3778076171875
    9. ' ' → logprob: -17.4403076171875
    10. '  ' → logprob: -17.7528076171875

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018911674851551652
    2. ' :' → logprob: -9.250188827514648
    3. ':return' → logprob: -10.000188827514648
    4. '<|end|>' → logprob: -11.375188827514648
    5. '   ' → logprob: -11.500188827514648
    6. '):' → logprob: -11.875188827514648
    7. '=' → logprob: -12.125188827514648
    8. ':
' → logprob: -12.750188827514648
    9. ':**' → logprob: -13.125188827514648
    10. ' not' → logprob: -13.625188827514648

Token 31: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4290771782398224
    2. '   ' → logprob: -1.6790771484375
    3. '       ' → logprob: -3.1790771484375
    4. ':return' → logprob: -3.6790771484375
    5. '    ' → logprob: -3.9290771484375
    6. ' :' → logprob: -4.3040771484375
    7. ' ' → logprob: -4.3040771484375
    8. ' False' → logprob: -4.6790771484375
    9. 'False' → logprob: -4.8040771484375
    10. ''' → logprob: -4.8040771484375

Token 32: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2608577013015747
    2. ' False' → logprob: -2.010857582092285
    3. 'return' (adapté à ' return') → logprob: -3.010857582092285
    4. 'False' → logprob: -4.135857582092285
    5. '   ' → logprob: -4.510857582092285
    6. '    ' → logprob: -5.010857582092285
    7. '       ' → logprob: -5.135857582092285
    8. ' ' → logprob: -6.135857582092285
    9. ' 
' → logprob: -6.260857582092285
    10. ' `' → logprob: -7.260857582092285

Token 33: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.5759394764900208
    2. ' False' → logprob: -0.8259394764900208
    3. ' True' → logprob: -17.325939178466797
    4. 'True' → logprob: -17.825939178466797
    5. ' ' → logprob: -17.950939178466797
    6. '(False' → logprob: -18.450939178466797
    7. 'F' → logprob: -19.075939178466797
    8. ' ' → logprob: -20.575939178466797
    9. ' false' → logprob: -20.575939178466797
    10. ' F' → logprob: -21.325939178466797

Token 34: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1678788661956787
    2. '    
' → logprob: -2.6678788661956787
    3. '
' → logprob: -3.5428788661956787
    4. '\n' → logprob: -3.6678788661956787
    5. ' 
' → logprob: -4.792879104614258
    6. '  
' → logprob: -4.792879104614258
    7. '\' → logprob: -5.417879104614258
    8. '```' → logprob: -5.542879104614258
    9. '   
' → logprob: -6.167879104614258
    10. '<|end|>' → logprob: -7.292879104614258

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08704698085784912
    2. '```' → logprob: -3.4620471000671387
    3. ':' → logprob: -3.5870471000671387
    4. '    
' → logprob: -5.462047100067139
    5. '\' → logprob: -5.712047100067139
    6. ':
' → logprob: -6.087047100067139
    7. '<|end|>' → logprob: -6.337047100067139
    8. '\n' → logprob: -6.587047100067139
    9. '
' → logprob: -6.587047100067139
    10. ' ' → logprob: -6.712047100067139

Token 36: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18723788857460022
    2. 'if' (adapté à ' if') → logprob: -2.1872379779815674
    3. ' ' → logprob: -4.437237739562988
    4. ':' → logprob: -4.687237739562988
    5. '```' → logprob: -4.687237739562988
    6. ' if' → logprob: -5.062237739562988
    7. 'i' → logprob: -5.187237739562988
    8. '`' → logprob: -5.437237739562988
    9. '    ' → logprob: -6.437237739562988
    10. ' 
' → logprob: -6.562237739562988

Token 37: ' year' (ID: 1284)
  Prédit: ' year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' year' → logprob: -0.00012570773833431304
    2. 'year' → logprob: -9.000125885009766
    3. ' ' → logprob: -13.375125885009766
    4. ' ' → logprob: -14.625125885009766
    5. '(year' → logprob: -15.375125885009766
    6. ' years' → logprob: -18.125125885009766
    7. ' (' → logprob: -18.250125885009766
    8. '  ' → logprob: -18.750125885009766
    9. '_year' → logprob: -18.750125885009766
    10. '   ' → logprob: -19.250125885009766

Token 38: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.009776633232831955
    2. '%' → logprob: -4.634776592254639
    3. ' ' → logprob: -11.009777069091797
    4. ' ' → logprob: -13.134777069091797
    5. '<|end|>' → logprob: -13.384777069091797
    6. 's' → logprob: -15.759777069091797
    7. '_' → logprob: -16.884777069091797
    8. '4' → logprob: -17.259777069091797
    9. '1' → logprob: -17.509777069091797
    10. '2' → logprob: -17.509777069091797

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026379724964499474
    2. '4' → logprob: -3.6513798236846924
    3. '40' → logprob: -10.151379585266113
    4. '32' → logprob: -10.401379585266113
    5. '34' → logprob: -13.026379585266113
    6. '36' → logprob: -13.401379585266113
    7. '42' → logprob: -13.526379585266113
    8. '16' → logprob: -14.026379585266113
    9. ' ' → logprob: -14.276379585266113
    10. '<|end|>' → logprob: -14.401379585266113

Token 40: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. ' ' → logprob: -20.25
    3. '400' → logprob: -21.875
    4. '   ' → logprob: -22.25
    5. '```' → logprob: -22.375
    6. '٤' → logprob: -22.5
    7. '۴' → logprob: -23.125
    8. '４' → logprob: -23.375
    9. '' → logprob: -24.0
    10. '४' → logprob: -24.375

Token 41: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.010295099578797817
    2. '==' → logprob: -4.6352949142456055
    3. ' ' → logprob: -7.6352949142456055
    4. ' !=' → logprob: -10.135294914245605
    5. ' ' → logprob: -12.260294914245605
    6. '=' → logprob: -12.385294914245605
    7. '  ' → logprob: -13.760294914245605
    8. '0' → logprob: -13.760294914245605
    9. '```' → logprob: -13.885294914245605
    10. ' =' → logprob: -14.135294914245605

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14267969131469727
    2. '0' → logprob: -2.0176796913146973
    3. ' ' → logprob: -13.017679214477539
    4. '=' → logprob: -13.142679214477539
    5. '==' → logprob: -15.892679214477539
    6. '  ' → logprob: -16.89267921447754
    7. ' ' → logprob: -16.89267921447754
    8. ' 
' → logprob: -17.26767921447754
    9. '```' → logprob: -17.39267921447754
    10. ' 

' → logprob: -17.83017921447754

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038074489566497505
    2. ' ' → logprob: -7.875380516052246
    3. '==' → logprob: -14.875380516052246
    4. '=' → logprob: -16.125381469726562
    5. '   ' → logprob: -17.125381469726562
    6. '  ' → logprob: -17.250381469726562
    7. '```' → logprob: -17.500381469726562
    8. '00' → logprob: -18.250381469726562
    9. ' ' → logprob: -18.875381469726562
    10. '4' → logprob: -18.875381469726562

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.73314929776825e-05
    2. ':
' → logprob: -10.25008773803711
    3. ':return' → logprob: -10.25008773803711
    4. ' :' → logprob: -11.62508773803711
    5. '       ' → logprob: -12.75008773803711
    6. '):' → logprob: -12.87508773803711
    7. '   ' → logprob: -13.50008773803711
    8. '():' → logprob: -15.25008773803711
    9. ':**' → logprob: -15.25008773803711
    10. '':' → logprob: -16.50008773803711

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08487430214881897
    2. '   ' → logprob: -3.709874391555786
    3. '<|end|>' → logprob: -3.959874391555786
    4. '    ' → logprob: -4.334874153137207
    5. ' ' → logprob: -4.584874153137207
    6. ''' → logprob: -4.709874153137207
    7. ':' → logprob: -7.209874153137207
    8. ' return' → logprob: -7.334874153137207
    9. ':return' → logprob: -7.334874153137207
    10. '"' → logprob: -7.584874153137207

Token 46: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6949752569198608
    2. ' return' → logprob: -0.9449752569198608
    3. '       ' → logprob: -2.1949753761291504
    4. '   ' → logprob: -7.19497537612915
    5. ':return' → logprob: -10.069974899291992
    6. '           ' → logprob: -10.444974899291992
    7. '	return' → logprob: -11.319974899291992
    8. '    ' → logprob: -11.819974899291992
    9. ' ' → logprob: -12.319974899291992
    10. '```' → logprob: -12.694974899291992

Token 47: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868713676929474
    2. ' True' → logprob: -1.136871337890625
    3. ' ' → logprob: -16.136871337890625
    4. ' Tru' → logprob: -16.261871337890625
    5. 'False' → logprob: -17.011871337890625
    6. 'Tr' → logprob: -17.011871337890625
    7. 'T' → logprob: -17.511871337890625
    8. '   ' → logprob: -17.761871337890625
    9. ' ' → logprob: -18.136871337890625
    10. '(True' → logprob: -18.886871337890625

Token 48: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.370063453912735
    2. '
' → logprob: -2.120063543319702
    3. '    
' → logprob: -2.245063543319702
    4. ' 
' → logprob: -2.745063543319702
    5. '  
' → logprob: -4.620063304901123
    6. '   
' → logprob: -5.120063304901123
    7. '\n' → logprob: -7.370063304901123
    8. 'return' → logprob: -7.495063304901123
    9. ' ' → logprob: -7.745063304901123
    10. ' return' → logprob: -8.370063781738281

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016929754987359047
    2. ' 
' → logprob: -5.266929626464844
    3. '    
' → logprob: -5.391929626464844
    4. 'return' → logprob: -6.391929626464844
    5. 'else' → logprob: -6.516929626464844
    6. ' else' → logprob: -7.016929626464844
    7. ' return' → logprob: -7.266929626464844
    8. '
' → logprob: -7.266929626464844
    9. ' ' → logprob: -7.391929626464844
    10. '  
' → logprob: -8.141929626464844

Token 50: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21123771369457245
    2. '   ' → logprob: -1.7112376689910889
    3. ' return' → logprob: -4.961237907409668
    4. 'else' → logprob: -6.586237907409668
    5. 'False' → logprob: -7.211237907409668
    6. 'r' → logprob: -7.836237907409668
    7. ' ' → logprob: -9.586237907409668
    8. '    
' → logprob: -9.961237907409668
    9. ' else' → logprob: -9.961237907409668
    10. '```' → logprob: -10.586237907409668

Token 51: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.575939416885376
    2. ' False' → logprob: -0.825939416885376
    3. '(False' → logprob: -18.450939178466797
    4. ' ' → logprob: -19.200939178466797
    5. ' True' → logprob: -20.200939178466797
    6. '_false' → logprob: -20.575939178466797
    7. 'True' → logprob: -20.825939178466797
    8. ' ' → logprob: -20.825939178466797
    9. ' false' → logprob: -20.825939178466797
    10. '=False' → logprob: -21.575939178466797

Token 52: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9547502994537354
    2. '\n' → logprob: -1.0797502994537354
    3. '<|end|>' → logprob: -2.3297502994537354
    4. '```' → logprob: -2.5797502994537354
    5. '#' → logprob: -3.7047502994537354
    6. 'newline' → logprob: -3.9547502994537354
    7. '\' → logprob: -3.9547502994537354
    8. ')' → logprob: -4.454750061035156
    9. ' ' → logprob: -4.829750061035156
    10. '' → logprob: -4.954750061035156

Token 53: 'while' (ID: 7032)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7596617937088013
    2. '
' → logprob: -1.6346617937088013
    3. ':' → logprob: -2.1346616744995117
    4. '```' → logprob: -2.7596616744995117
    5. '\' → logprob: -2.8846616744995117
    6. '#' → logprob: -3.3846616744995117
    7. '(' → logprob: -4.259661674499512
    8. '<|end|>' → logprob: -4.384661674499512
    9. ')' → logprob: -4.884661674499512
    10. '' → logprob: -5.134661674499512

Token 54: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04280916228890419
    2. ' True' → logprob: -3.542809247970581
    3. ' year' → logprob: -4.417809009552002
    4. ' not' → logprob: -8.29280948638916
    5. ' years' → logprob: -8.29280948638916
    6. ' space' → logprob: -9.04280948638916
    7. ' user' → logprob: -9.54280948638916
    8. ' (' → logprob: -9.91780948638916
    9. ' ' → logprob: -10.29280948638916
    10. ' ‌' → logprob: -10.54280948638916

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11520910263061523
    2. ' :' → logprob: -2.2402091026306152
    3. '():' → logprob: -6.365209102630615
    4. '   ' → logprob: -8.865209579467773
    5. ' ' → logprob: -9.240209579467773
    6. '<|end|>' → logprob: -9.240209579467773
    7. ' ):' → logprob: -9.365209579467773
    8. '(' → logprob: -9.865209579467773
    9. '):' → logprob: -9.990209579467773
    10. ' ():' → logprob: -10.615209579467773

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0847342237830162
    2. ' input' → logprob: -3.4597342014312744
    3. ' ' → logprob: -3.5847342014312744
    4. '    ' → logprob: -5.0847344398498535
    5. ' )' → logprob: -5.8347344398498535
    6. '    
' → logprob: -5.9597344398498535
    7. 'input' → logprob: -6.3347344398498535
    8. '  ' → logprob: -6.5847344398498535
    9. ' (' → logprob: -6.9597344398498535
    10. '(' → logprob: -7.0847344398498535

Token 57: ' line' (ID: 2543)
  Prédit: ' year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' year' → logprob: -0.04755382984876633
    2. 'year' → logprob: -4.422554016113281
    3. ' y' → logprob: -4.672554016113281
    4. '   ' → logprob: -4.672554016113281
    5. ' user' → logprob: -5.547554016113281
    6. 'y' → logprob: -5.797554016113281
    7. ' try' → logprob: -5.922554016113281
    8. ' 
' → logprob: -6.047554016113281
    9. ' ' → logprob: -6.422554016113281
    10. ' input' → logprob: -7.297554016113281

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005669356323778629
    2. '=' → logprob: -5.255669593811035
    3. ' ' → logprob: -7.880669593811035
    4. '_' → logprob: -10.005669593811035
    5. 's' → logprob: -12.255669593811035
    6. '  ' → logprob: -12.380669593811035
    7. '.' → logprob: -14.255669593811035
    8. '_input' → logprob: -14.755669593811035
    9. '   ' → logprob: -15.005669593811035
    10. '(' → logprob: -15.005669593811035

Token 59: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12692926824092865
    2. 'input' → logprob: -2.12692928314209
    3. '=input' → logprob: -13.87692928314209
    4. '(input' → logprob: -16.251928329467773
    5. '	input' → logprob: -16.376928329467773
    6. '_input' → logprob: -17.001928329467773
    7. ' ' → logprob: -17.251928329467773
    8. '<input' → logprob: -18.001928329467773
    9. '   ' → logprob: -19.126928329467773
    10. '```' → logprob: -19.251928329467773

Token 60: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017033906187862158
    2. '()' → logprob: -7.001703262329102
    3. '('' → logprob: -7.251703262329102
    4. '("("' → logprob: -10.001703262329102
    5. '("' → logprob: -10.751703262329102
    6. '("")' → logprob: -11.376703262329102
    7. '(
' → logprob: -13.376703262329102
    8. '(`' → logprob: -13.751703262329102
    9. '(

' → logprob: -14.501703262329102
    10. '("""' → logprob: -15.126703262329102

Token 61: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42828360199928284
    2. '<|end|>' → logprob: -1.8032835721969604
    3. '.' → logprob: -2.67828369140625
    4. '.strip' → logprob: -3.42828369140625
    5. ' if' → logprob: -3.67828369140625
    6. ')' → logprob: -3.80328369140625
    7. '<|end|>' → logprob: -4.80328369140625
    8. ' ==' → logprob: -5.05328369140625
    9. '   ' → logprob: -5.92828369140625
    10. '    ' → logprob: -6.17828369140625

Token 62: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.572945773601532
    2. ' if' → logprob: -1.0729458332061768
    3. '.' → logprob: -3.5729458332061768
    4. '<|end|>' → logprob: -3.6979458332061768
    5. '.strip' → logprob: -3.9479458332061768
    6. 'if' (adapté à ' if') → logprob: -4.822945594787598
    7. ' =' → logprob: -5.822945594787598
    8. ' ==' → logprob: -6.072945594787598
    9. '<|end|>' → logprob: -6.572945594787598
    10. '=' → logprob: -6.822945594787598

Token 63: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.06346394121646881
    2. ' line' → logprob: -2.8134639263153076
    3. ' ' → logprob: -6.563464164733887
    4. 'not' → logprob: -9.563464164733887
    5. 'line' → logprob: -11.313464164733887
    6. '  ' → logprob: -14.438464164733887
    7. '#line' → logprob: -14.938464164733887
    8. ' ' → logprob: -15.438464164733887
    9. '	line' → logprob: -15.563464164733887
    10. ' len' → logprob: -15.688464164733887

Token 64: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.002637249417603016
    2. '==' → logprob: -6.8776373863220215
    3. '.' → logprob: -7.0026373863220215
    4. '.strip' → logprob: -8.127636909484863
    5. ' .' → logprob: -8.252636909484863
    6. ' ' → logprob: -9.252636909484863
    7. '.startswith' → logprob: -10.627636909484863
    8. ' =' → logprob: -12.252636909484863
    9. '()==' → logprob: -13.002636909484863
    10. ' in' → logprob: -13.127636909484863

Token 65: ' "":
' (ID: 132826)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8532814383506775
    2. '""' → logprob: -0.9782814383506775
    3. ' ""' → logprob: -2.1032814979553223
    4. ''' → logprob: -2.9782814979553223
    5. '''' → logprob: -4.478281497955322
    6. ' "' → logprob: -4.978281497955322
    7. ' ''' → logprob: -5.353281497955322
    8. ' '' → logprob: -6.603281497955322
    9. ' ' → logprob: -8.228281021118164
    10. '"":' → logprob: -8.978281021118164

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9877991676330566
    2. ':' → logprob: -1.3627991676330566
    3. '   ' → logprob: -1.4877991676330566
    4. '    ' → logprob: -2.2377991676330566
    5. ' break' → logprob: -3.8627991676330566
    6. ' :' → logprob: -4.737799167633057
    7. ' ' → logprob: -5.112799167633057
    8. '	break' → logprob: -7.112799167633057
    9. ':
' → logprob: -7.987799167633057
    10. '  ' → logprob: -8.112798690795898

Token 67: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.23826371133327484
    2. '   ' → logprob: -1.738263726234436
    3. '       ' → logprob: -3.8632636070251465
    4. 'break' → logprob: -4.2382636070251465
    5. '	break' → logprob: -7.2382636070251465
    6. '_break' → logprob: -11.738264083862305
    7. ' ' → logprob: -11.863264083862305
    8. '   ' → logprob: -12.488264083862305
    9. '           ' → logprob: -13.113264083862305
    10. ' ' → logprob: -13.238264083862305

Token 68: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15739190578460693
    2. '    
' → logprob: -2.0323920249938965
    3. '
' → logprob: -4.5323920249938965
    4. '<|end|>' → logprob: -5.6573920249938965
    5. '  
' → logprob: -9.157391548156738
    6. ' 
' → logprob: -9.657391548156738
    7. '   
' → logprob: -9.657391548156738
    8. '        
' → logprob: -9.782391548156738
    9. '<|end|>' → logprob: -10.907391548156738
    10. '```' → logprob: -12.032391548156738

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005739171523600817
    2. '    
' → logprob: -5.255739212036133
    3. '
' → logprob: -8.130739212036133
    4. '<|end|>' → logprob: -9.005739212036133
    5. '        
' → logprob: -11.130739212036133
    6. '    ' → logprob: -11.380739212036133
    7. ' 
' → logprob: -11.630739212036133
    8. '   
' → logprob: -11.880739212036133
    9. '  
' → logprob: -11.880739212036133
    10. '```' → logprob: -12.505739212036133

Token 70: ' a' (ID: 261)
  Prédit: ' year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' year' → logprob: -0.622455894947052
    2. 'y' → logprob: -1.8724558353424072
    3. 'year' → logprob: -2.2474558353424072
    4. ' y' → logprob: -2.3724558353424072
    5. '   ' → logprob: -2.7474558353424072
    6. ' if' → logprob: -3.6224558353424072
    7. ' try' → logprob: -4.247456073760986
    8. 'try' → logprob: -6.372456073760986
    9. '    
' → logprob: -6.997456073760986
    10. 'if' → logprob: -6.997456073760986

Token 71: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29281309247016907
    2. '=' → logprob: -1.4178130626678467
    3. ' ' → logprob: -5.667813301086426
    4. 'r' → logprob: -6.042813301086426
    5. 'ge' → logprob: -6.667813301086426
    6. 'rg' → logprob: -6.917813301086426
    7. 'n' → logprob: -7.417813301086426
    8. '_year' → logprob: -7.542813301086426
    9. '=int' → logprob: -8.042813301086426
    10. '   ' → logprob: -8.042813301086426

Token 72: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.44169527292251587
    2. 'b' → logprob: -1.191695213317871
    3. ' ' → logprob: -3.066695213317871
    4. '<|end|>' → logprob: -5.441695213317871
    5. '=' → logprob: -6.816695213317871
    6. ' =' → logprob: -7.066695213317871
    7. 'year' → logprob: -9.316695213317871
    8. 'space' → logprob: -9.441695213317871
    9. ' year' → logprob: -9.566695213317871
    10. 's' → logprob: -10.191695213317871

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10029325634241104
    2. '=' → logprob: -2.3502931594848633
    3. ',' → logprob: -9.475293159484863
    4. ' ' → logprob: -11.725293159484863
    5. ')' → logprob: -14.600293159484863
    6. '=line' → logprob: -14.725293159484863
    7. ' ,' → logprob: -15.475293159484863
    8. '  ' → logprob: -15.850293159484863
    9. '   ' → logprob: -15.975293159484863
    10. ' ' → logprob: -16.10029411315918

Token 74: ' map' (ID: 4014)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.145049050450325
    2. ' map' → logprob: -2.0200490951538086
    3. 'line' → logprob: -6.270049095153809
    4. ' ' → logprob: -8.520049095153809
    5. 'map' → logprob: -8.520049095153809
    6. ' [' → logprob: -10.395049095153809
    7. ' input' → logprob: -10.770049095153809
    8. '[line' → logprob: -12.270049095153809
    9. ' list' → logprob: -12.520049095153809
    10. '[' → logprob: -12.770049095153809

Token 75: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1148281842470169
    2. '(' → logprob: -2.364828109741211
    3. '(str' → logprob: -4.239828109741211
    4. '(
' → logprob: -9.989828109741211
    5. '(lambda' → logprob: -10.489828109741211
    6. '(input' → logprob: -11.864828109741211
    7. 'int' → logprob: -12.489828109741211
    8. 'str' → logprob: -12.739828109741211
    9. '(

' → logprob: -12.739828109741211
    10. '(eval' → logprob: -12.739828109741211

Token 76: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.01612868160009384
    2. ')' → logprob: -4.5161285400390625
    3. '(' → logprob: -5.3911285400390625
    4. '(input' → logprob: -7.8911285400390625
    5. ',line' → logprob: -9.891128540039062
    6. ',' → logprob: -10.516128540039062
    7. ')(' → logprob: -11.516128540039062
    8. ' line' → logprob: -11.641128540039062
    9. '=line' → logprob: -11.641128540039062
    10. '[line' → logprob: -12.266128540039062

Token 77: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.04867229983210564
    2. 'line' → logprob: -3.0486721992492676
    3. ')' → logprob: -9.673672676086426
    4. '(line' → logprob: -11.673672676086426
    5. '	line' → logprob: -11.923672676086426
    6. ' ' → logprob: -13.548672676086426
    7. ' )' → logprob: -13.548672676086426
    8. '[line' → logprob: -13.673672676086426
    9. '#line' → logprob: -14.298672676086426
    10. ' input' → logprob: -14.673672676086426

Token 78: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.09066354483366013
    2. '().' → logprob: -3.090663433074951
    3. '.' → logprob: -3.715663433074951
    4. '.strip' → logprob: -4.090663433074951
    5. ' .' → logprob: -9.59066390991211
    6. '.rstrip' → logprob: -10.59066390991211
    7. '.readline' → logprob: -11.09066390991211
    8. ')' → logprob: -11.59066390991211
    9. 'split' → logprob: -12.09066390991211
    10. '   ' → logprob: -12.59066390991211

Token 79: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.16426798701286316
    2. '())' → logprob: -2.1642680168151855
    3. '(','' → logprob: -3.4142680168151855
    4. '()' → logprob: -7.0392680168151855
    5. '("' → logprob: -7.2892680168151855
    6. ')' → logprob: -7.2892680168151855
    7. '(',' → logprob: -7.4142680168151855
    8. '(' → logprob: -7.4142680168151855
    9. '("("' → logprob: -8.664267539978027
    10. '(",' → logprob: -10.289267539978027

Token 80: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5020121335983276
    2. '   ' → logprob: -2.127012252807617
    3. ' ' → logprob: -2.752012252807617
    4. '<|end|>' → logprob: -3.002012252807617
    5. ' 
' → logprob: -3.127012252807617
    6. ',' → logprob: -3.127012252807617
    7. ':
' → logprob: -4.252012252807617
    8. '
' → logprob: -4.377012252807617
    9. '\n' → logprob: -4.502012252807617
    10. '    
' → logprob: -4.752012252807617

Token 81: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.325869619846344
    2. 'if' (adapté à ' if') → logprob: -1.9508695602416992
    3. ' 
' → logprob: -2.950869560241699
    4. 'print' → logprob: -3.200869560241699
    5. ' for' → logprob: -3.950869560241699
    6. 'for' → logprob: -5.200869560241699
    7. ' print' → logprob: -5.200869560241699
    8. ' ' → logprob: -5.700869560241699
    9. '    
' → logprob: -5.700869560241699
    10. '   ' → logprob: -6.450869560241699

Token 82: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.15851567685604095
    2. ' b' → logprob: -2.283515691757202
    3. 'a' → logprob: -3.283515691757202
    4. 'b' → logprob: -5.033515453338623
    5. ' is' → logprob: -8.033515930175781
    6. ' (' → logprob: -9.033515930175781
    7. ' ' → logprob: -9.158515930175781
    8. ' not' → logprob: -10.533515930175781
    9. 'is' → logprob: -10.658515930175781
    10. '(a' → logprob: -11.283515930175781

Token 83: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.169340118765831
    2. '>' → logprob: -1.9193401336669922
    3. ' ==' → logprob: -5.294340133666992
    4. '==' → logprob: -5.544340133666992
    5. ' <=' → logprob: -9.919340133666992
    6. '%' → logprob: -10.419340133666992
    7. '<=' → logprob: -11.169340133666992
    8. '=' → logprob: -11.544340133666992
    9. '>end' → logprob: -11.919340133666992
    10. ' <' → logprob: -12.044340133666992

Token 84: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009983789175748825
    2. ' ' → logprob: -5.259984016418457
    3. 'b' → logprob: -5.509984016418457
    4. '-' → logprob: -7.759984016418457
    5. ' b' → logprob: -8.384984016418457
    6. ' -' → logprob: -10.509984016418457
    7. '1' → logprob: -12.759984016418457
    8. '```' → logprob: -13.759984016418457
    9. '   ' → logprob: -14.072484016418457
    10. 'a' → logprob: -14.447484016418457

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009679242968559265
    2. 'b' → logprob: -5.009679317474365
    3. '-' → logprob: -5.884679317474365
    4. ' ' → logprob: -8.884678840637207
    5. ' -' → logprob: -11.384678840637207
    6. ' b' → logprob: -11.884678840637207
    7. '1' → logprob: -12.009678840637207
    8. 'a' → logprob: -13.384678840637207
    9. '```' → logprob: -13.509678840637207
    10. '-b' → logprob: -13.697178840637207

Token 86: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10045208036899567
    2. 'and' → logprob: -2.350452184677124
    3. ' or' → logprob: -8.475452423095703
    4. ' ' → logprob: -11.100452423095703
    5. '<|end|>' → logprob: -11.475452423095703
    6. ' a' → logprob: -12.100452423095703
    7. '	and' → logprob: -13.225452423095703
    8. ':' → logprob: -13.475452423095703
    9. '   ' → logprob: -13.850452423095703
    10. ' ' → logprob: -14.975452423095703

Token 87: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.11283540725708008
    2. 'b' → logprob: -2.23783540725708
    3. ' ' → logprob: -11.487834930419922
    4. '   ' → logprob: -13.612834930419922
    5. '  ' → logprob: -14.487834930419922
    6. '    ' → logprob: -14.987834930419922
    7. '<|end|>' → logprob: -14.987834930419922
    8. '	b' → logprob: -15.112834930419922
    9. '0' → logprob: -16.612834930419922
    10. ' ' → logprob: -17.112834930419922

Token 88: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014528848230838776
    2. '==' → logprob: -4.264528751373291
    3. '<|end|>' → logprob: -8.01452922821045
    4. ' ' → logprob: -11.13952922821045
    5. ' =' → logprob: -11.76452922821045
    6. '<|end|>' → logprob: -12.01452922821045
    7. '=' → logprob: -13.01452922821045
    8. '0' → logprob: -13.63952922821045
    9. ' ' → logprob: -13.76452922821045
    10. '  ' → logprob: -14.13952922821045

Token 89: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31326353549957275
    2. '0' → logprob: -1.3132635354995728
    3. '  ' → logprob: -14.063263893127441
    4. '<|end|>' → logprob: -14.688263893127441
    5. ' ' → logprob: -15.563263893127441
    6. '   ' → logprob: -15.813263893127441
    7. '```' → logprob: -16.688262939453125
    8. '۰' → logprob: -17.063262939453125
    9. '<|end|>' → logprob: -17.063262939453125
    10. '	' → logprob: -17.313262939453125

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043555660522542894
    2. ' ' → logprob: -7.7504353523254395
    3. '   ' → logprob: -12.625435829162598
    4. '  ' → logprob: -14.000435829162598
    5. '<|end|>' → logprob: -15.625435829162598
    6. '    ' → logprob: -16.62543487548828
    7. '-' → logprob: -16.75043487548828
    8. '1' → logprob: -16.81293487548828
    9. '```' → logprob: -16.87543487548828
    10. '     ' → logprob: -17.25043487548828

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004724652972072363
    2. ':
' → logprob: -5.379724502563477
    3. '   ' → logprob: -9.629724502563477
    4. '       ' → logprob: -10.504724502563477
    5. ' :' → logprob: -11.754724502563477
    6. ' :
' → logprob: -14.629724502563477
    7. ',' → logprob: -14.879724502563477
    8. ':return' → logprob: -14.879724502563477
    9. '.' → logprob: -15.004724502563477
    10. '<|end|>' → logprob: -15.004724502563477

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21695227921009064
    2. ':' → logprob: -1.7169523239135742
    3. '   ' → logprob: -4.216952323913574
    4. ':
' → logprob: -7.591952323913574
    5. '.' → logprob: -9.591952323913574
    6. '	break' → logprob: -10.841952323913574
    7. ' break' → logprob: -10.966952323913574
    8. '\t' → logprob: -11.966952323913574
    9. '     ' → logprob: -12.091952323913574
    10. '      ' → logprob: -12.341952323913574

Token 93: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3970354497432709
    2. ' break' → logprob: -1.1470354795455933
    3. '       ' → logprob: -4.897035598754883
    4. '   ' → logprob: -6.147035598754883
    5. '	break' → logprob: -7.647035598754883
    6. '```' → logprob: -11.522035598754883
    7. '           ' → logprob: -12.397035598754883
    8. '_break' → logprob: -12.647035598754883
    9. '
' → logprob: -12.772035598754883
    10. ' ' → logprob: -13.772035598754883

Token 94: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0016103164525702596
    2. '    
' → logprob: -7.751610279083252
    3. '<|end|>' → logprob: -8.00161075592041
    4. 'print' → logprob: -8.37661075592041
    5. '   ' → logprob: -8.50161075592041
    6. '
' → logprob: -9.25161075592041
    7. '  
' → logprob: -9.25161075592041
    8. '

' → logprob: -9.75161075592041
    9. '```' → logprob: -10.12661075592041
    10. ' 
' → logprob: -10.62661075592041

Token 95: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003600901924073696
    2. '<|end|>' → logprob: -6.50360107421875
    3. '   ' → logprob: -6.75360107421875
    4. 'print' → logprob: -8.12860107421875
    5. 'year' → logprob: -8.87860107421875
    6. '    
' → logprob: -9.00360107421875
    7. '```' → logprob: -9.62860107421875
    8. '

' → logprob: -9.75360107421875
    9. ' 
' → logprob: -9.87860107421875
    10. '
' → logprob: -10.50360107421875

Token 96: ' leap' (ID: 58256)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5193695425987244
    2. 'print' → logprob: -1.7693696022033691
    3. 'result' → logprob: -2.644369602203369
    4. 'le' → logprob: -3.269369602203369
    5. '   ' → logprob: -3.644369602203369
    6. ' count' → logprob: -3.769369602203369
    7. 'years' → logprob: -4.019369602203369
    8. 'diff' → logprob: -4.644369602203369
    9. 'difference' → logprob: -5.019369602203369
    10. 'year' → logprob: -5.394369602203369

Token 97: '_year' (ID: 33489)
  Prédit: '_year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_year' → logprob: -0.6040701866149902
    2. '_' → logprob: -0.9790701866149902
    3. '_count' → logprob: -3.3540701866149902
    4. '_days' → logprob: -4.22907018661499
    5. 's' → logprob: -4.47907018661499
    6. ' =' → logprob: -4.60407018661499
    7. '=' → logprob: -5.60407018661499
    8. '_start' → logprob: -7.35407018661499
    9. '_day' → logprob: -7.47907018661499
    10. 'years' → logprob: -8.354070663452148

Token 98: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0017376589821651578
    2. '_count' → logprob: -6.751737594604492
    3. '_s' → logprob: -8.126737594604492
    4. ' =' → logprob: -10.001737594604492
    5. '_start' → logprob: -10.001737594604492
    6. '_days' → logprob: -10.001737594604492
    7. '_diff' → logprob: -10.126737594604492
    8. '=' → logprob: -11.251737594604492
    9. '1' → logprob: -11.376737594604492
    10. 'count' → logprob: -11.626737594604492

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08797948807477951
    2. '=' → logprob: -2.587979555130005
    3. '_' → logprob: -5.337979316711426
    4. '_count' → logprob: -5.587979316711426
    5. '_between' → logprob: -8.212979316711426
    6. ' ' → logprob: -8.712979316711426
    7. 'count' → logprob: -10.837979316711426
    8. '_in' → logprob: -11.212979316711426
    9. '   ' → logprob: -11.587979316711426
    10. '_=' → logprob: -12.962979316711426

Token 100: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3609975278377533
    2. 'sum' → logprob: -2.235997438430786
    3. ' sum' → logprob: -2.360997438430786
    4. ' ' → logprob: -2.610997438430786
    5. 'b' → logprob: -4.235997676849365
    6. ' b' → logprob: -5.360997676849365
    7. ' [' → logprob: -5.485997676849365
    8. '[' → logprob: -5.985997676849365
    9. '[b' → logprob: -6.360997676849365
    10. '   ' → logprob: -8.235997200012207

Token 101: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2047230750322342
    2. ' for' → logprob: -2.2047231197357178
    3. '   ' → logprob: -2.7047231197357178
    4. ' ' → logprob: -5.204722881317139
    5. '    ' → logprob: -6.454722881317139
    6. '  ' → logprob: -8.579723358154297
    7. '    
' → logprob: -8.829723358154297
    8. ' 
' → logprob: -8.954723358154297
    9. 'range' → logprob: -8.954723358154297
    10. '<|end|>' → logprob: -9.454723358154297

Token 102: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0033457286190241575
    2. ' for' → logprob: -5.753345966339111
    3. '   ' → logprob: -8.753345489501953
    4. 'year' → logprob: -13.003345489501953
    5. 'range' → logprob: -13.253345489501953
    6. 'f' → logprob: -13.378345489501953
    7. ' ' → logprob: -14.003345489501953
    8. '
' → logprob: -14.003345489501953
    9. '  ' → logprob: -14.128345489501953
    10. 'from' → logprob: -15.128345489501953

Token 103: ' year' (ID: 1284)
  Prédit: ' year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' year' → logprob: -0.06315577775239944
    2. ' y' → logprob: -2.8131558895111084
    3. 'year' → logprob: -7.438155651092529
    4. 'y' → logprob: -7.688155651092529
    5. ' ' → logprob: -9.688156127929688
    6. ' i' → logprob: -10.438156127929688
    7. '```' → logprob: -10.813156127929688
    8. '   ' → logprob: -11.313156127929688
    9. ' ' → logprob: -12.688156127929688
    10. ' yr' → logprob: -12.938156127929688

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003848413238301873
    2. 'in' → logprob: -5.753848552703857
    3. ' ' → logprob: -7.628848552703857
    4. 'range' → logprob: -9.5038480758667
    5. '<|end|>' → logprob: -10.1288480758667
    6. '   ' → logprob: -11.0038480758667
    7. ' range' → logprob: -11.3788480758667
    8. 's' → logprob: -11.5038480758667
    9. '	in' → logprob: -11.8788480758667
    10. '  ' → logprob: -12.2538480758667

Token 105: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804321587085724
    2. 'range' → logprob: -3.288043260574341
    3. '	range' → logprob: -13.413043022155762
    4. '(range' → logprob: -16.288043975830078
    5. ' ' → logprob: -16.538043975830078
    6. '   ' → logprob: -17.038043975830078
    7. ' xrange' → logprob: -17.913043975830078
    8. ' ' → logprob: -18.038043975830078
    9. 'rang' → logprob: -18.663043975830078
    10. '_range' → logprob: -19.163043975830078

Token 106: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00018375257786829025
    2. '(' → logprob: -8.750184059143066
    3. '(b' → logprob: -10.750184059143066
    4. 'a' → logprob: -13.500184059143066
    5. ' (' → logprob: -14.000184059143066
    6. ' a' → logprob: -14.125184059143066
    7. '(
' → logprob: -15.375184059143066
    8. '   ' → logprob: -15.375184059143066
    9. '(min' → logprob: -16.75018310546875
    10. '(i' → logprob: -17.00018310546875

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026836141478270292
    2. ' ,' → logprob: -6.127683639526367
    3. ',b' → logprob: -7.627683639526367
    4. '   ' → logprob: -11.877683639526367
    5. 'b' → logprob: -13.002683639526367
    6. ' b' → logprob: -14.877683639526367
    7. '+' → logprob: -14.877683639526367
    8. ',
' → logprob: -15.252683639526367
    9. '    ' → logprob: -15.502683639526367
    10. ' ' → logprob: -15.627683639526367

Token 108: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25197651982307434
    2. ' b' → logprob: -1.501976490020752
    3. '   ' → logprob: -10.50197696685791
    4. '	b' → logprob: -11.00197696685791
    5. '    ' → logprob: -13.12697696685791
    6. '(b' → logprob: -14.62697696685791
    7. ' ' → logprob: -15.25197696685791
    8. ')b' → logprob: -16.126976013183594
    9. '```' → logprob: -16.751976013183594
    10. '  ' → logprob: -16.751976013183594

Token 109: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759664177894592
    2. '+' → logprob: -0.8259664177894592
    3. '   ' → logprob: -10.700966835021973
    4. ' ' → logprob: -13.200966835021973
    5. ')' → logprob: -14.450966835021973
    6. ',' → logprob: -14.575966835021973
    7. '    ' → logprob: -14.950966835021973
    8. '+
' → logprob: -15.575966835021973
    9. ' +
' → logprob: -15.575966835021973
    10. '1' → logprob: -15.700966835021973

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01252730842679739
    2. ' ' → logprob: -4.3875274658203125
    3. '   ' → logprob: -11.387527465820312
    4. ')' → logprob: -12.387527465820312
    5. '```' → logprob: -14.137527465820312
    6. '  ' → logprob: -15.075027465820312
    7. '):
' → logprob: -15.512527465820312
    8. '    ' → logprob: -16.325027465820312
    9. ' )' → logprob: -16.450027465820312
    10. ',' → logprob: -16.700027465820312

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.931863051955588e-05
    2. ' ' → logprob: -9.750059127807617
    3. '```' → logprob: -15.000059127807617
    4. ')' → logprob: -15.375059127807617
    5. '):
' → logprob: -15.375059127807617
    6. '   ' → logprob: -15.625059127807617
    7. '
' → logprob: -18.125059127807617
    8. '``' → logprob: -18.437559127807617
    9. '  ' → logprob: -18.562559127807617
    10. '):

' → logprob: -18.750059127807617

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07926582545042038
    2. '):
' → logprob: -2.579265832901001
    3. ' ):' → logprob: -8.329265594482422
    4. ')' → logprob: -9.954265594482422
    5. ' ):
' → logprob: -10.454265594482422
    6. ':' → logprob: -10.829265594482422
    7. '):
' → logprob: -10.829265594482422
    8. '   ' → logprob: -11.329265594482422
    9. ',' → logprob: -12.579265594482422
    10. '):

' → logprob: -14.079265594482422

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031448330730199814
    2. ' ' → logprob: -5.1564483642578125
    3. ' 
' → logprob: -5.4064483642578125
    4. '        
' → logprob: -5.5314483642578125
    5. '    ' → logprob: -5.7814483642578125
    6. '<|end|>' → logprob: -5.7814483642578125
    7. '   ' → logprob: -5.9064483642578125
    8. ' if' → logprob: -5.9064483642578125
    9. ':' → logprob: -6.9064483642578125
    10. '    
' → logprob: -7.2814483642578125

Token 114: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6977955102920532
    2. 'if' (adapté à ' if') → logprob: -1.3227955102920532
    3. '       ' → logprob: -1.6977955102920532
    4. '    ' → logprob: -3.9477953910827637
    5. ' 
' → logprob: -4.322795391082764
    6. '
' → logprob: -5.197795391082764
    7. ' ' → logprob: -5.572795391082764
    8. '        ' → logprob: -5.572795391082764
    9. '   ' → logprob: -5.572795391082764
    10. '```' → logprob: -6.697795391082764

Token 115: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -4.096126576769166e-05
    2. 'is' → logprob: -10.125041007995605
    3. ' ' → logprob: -14.125041007995605
    4. ' ' → logprob: -16.12504005432129
    5. ' year' → logprob: -18.25004005432129
    6. ' space' → logprob: -18.75004005432129
    7. '	is' → logprob: -19.12504005432129
    8. ' not' → logprob: -19.25004005432129
    9. ')' → logprob: -20.37504005432129
    10. '(is' → logprob: -20.75004005432129

Token 116: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -13.125003814697266
    3. 'le' → logprob: -14.250003814697266
    4. '_year' → logprob: -14.500003814697266
    5. ' _' → logprob: -16.375003814697266
    6. '_LE' → logprob: -17.875003814697266
    7. '```' → logprob: -18.000003814697266
    8. '_l' → logprob: -18.250003814697266
    9. '\' → logprob: -18.375003814697266
    10. 'a' → logprob: -18.375003814697266

Token 117: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -9.722539834911004e-05
    2. 'a' → logprob: -9.375097274780273
    3. 'p' → logprob: -12.125097274780273
    4. 'ап' → logprob: -13.250097274780273
    5. '   ' → logprob: -14.000097274780273
    6. 'year' → logprob: -14.625097274780273
    7. '	ap' → logprob: -14.875097274780273
    8. 'aps' → logprob: -14.937597274780273
    9. 'ep' → logprob: -15.125097274780273
    10. 'apse' → logprob: -15.187597274780273

Token 118: '_year' (ID: 33489)
  Prédit: '_year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_year' → logprob: -0.061995361000299454
    2. '_' → logprob: -2.811995267868042
    3. '<|end|>' → logprob: -11.186995506286621
    4. '_YEAR' → logprob: -12.186995506286621
    5. ' _' → logprob: -12.436995506286621
    6. 'year' → logprob: -13.686995506286621
    7. '_
' → logprob: -14.311995506286621
    8. 'Year' → logprob: -14.811995506286621
    9. '_y' → logprob: -14.811995506286621
    10. '_month' → logprob: -15.061995506286621

Token 119: '(year' (ID: 58075)
  Prédit: '(year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(year' → logprob: -0.0005550591740757227
    2. '(' → logprob: -7.500555038452148
    3. '(y' → logprob: -13.375555038452148
    4. ' (' → logprob: -15.750555038452148
    5. 'year' → logprob: -16.37555503845215
    6. '(month' → logprob: -16.62555503845215
    7. '(day' → logprob: -16.75055503845215
    8. '(
' → logprob: -16.87555503845215
    9. '(user' → logprob: -17.25055503845215
    10. '(date' → logprob: -17.50055503845215

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011406179517507553
    2. '):
' → logprob: -4.511405944824219
    3. ' ):' → logprob: -8.136405944824219
    4. ')' → logprob: -10.386405944824219
    5. '   ' → logprob: -11.386405944824219
    6. '(year' → logprob: -11.886405944824219
    7. ':' → logprob: -12.386405944824219
    8. '):
' → logprob: -12.761405944824219
    9. '():' → logprob: -12.886405944824219
    10. ' ):
' → logprob: -13.136405944824219

Token 121: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01571136899292469
    2. 'le' → logprob: -4.265711307525635
    3. ' leap' → logprob: -7.140711307525635
    4. '
' → logprob: -7.765711307525635
    5. '            
' → logprob: -8.890711784362793
    6. '       ' → logprob: -9.140711784362793
    7. '               ' → logprob: -10.765711784362793
    8. '```' → logprob: -10.890711784362793
    9. ':' → logprob: -11.015711784362793
    10. '(le' → logprob: -12.890711784362793

Token 122: ' leap' (ID: 58256)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.03977745398879051
    2. '       ' → logprob: -3.9147775173187256
    3. ' leap' → logprob: -4.1647772789001465
    4. '           ' → logprob: -5.9147772789001465
    5. '   ' → logprob: -7.7897772789001465
    6. ' le' → logprob: -7.9147772789001465
    7. '               ' → logprob: -11.914777755737305
    8. '
' → logprob: -12.539777755737305
    9. '```' → logprob: -12.539777755737305
    10. '(le' → logprob: -12.664777755737305

Token 123: '_year' (ID: 33489)
  Prédit: '_year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_year' → logprob: -6.182190554682165e-05
    2. '_' → logprob: -10.125061988830566
    3. ' _' → logprob: -11.375061988830566
    4. 's' → logprob: -12.125061988830566
    5. '_s' → logprob: -14.000061988830566
    6. 'years' → logprob: -14.125061988830566
    7. '._' → logprob: -14.625061988830566
    8. 'year' → logprob: -14.875061988830566
    9. '   ' → logprob: -15.125061988830566
    10. ')_' → logprob: -15.125061988830566

Token 124: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002351026516407728
    2. '_year' → logprob: -6.377350807189941
    3. 'years' → logprob: -7.377350807189941
    4. 'Years' → logprob: -12.252350807189941
    5. '.append' → logprob: -12.252350807189941
    6. 'year' → logprob: -12.502350807189941
    7. ' years' → logprob: -12.627350807189941
    8. '_s' → logprob: -13.127350807189941
    9. '-years' → logprob: -14.127350807189941
    10. ' s' → logprob: -14.127350807189941

Token 125: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009152670972980559
    2. '.' → logprob: -7.000915050506592
    3. '.add' → logprob: -13.12591552734375
    4. 'append' → logprob: -14.75091552734375
    5. '.app' → logprob: -15.12591552734375
    6. '.push' → logprob: -15.12591552734375
    7. ' .' → logprob: -15.25091552734375
    8. '.extend' → logprob: -16.00091552734375
    9. '           ' → logprob: -16.37591552734375
    10. '.Append' → logprob: -16.62591552734375

Token 126: '(year' (ID: 58075)
  Prédit: '(year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(year' → logprob: -0.00010020548506872728
    2. '(' → logprob: -9.250100135803223
    3. 'year' → logprob: -12.625100135803223
    4. '(
' → logprob: -14.625100135803223
    5. '(True' → logprob: -15.250100135803223
    6. ' year' → logprob: -16.75010108947754
    7. '(y' → logprob: -16.87510108947754
    8. '((' → logprob: -19.25010108947754
    9. '('' → logprob: -19.50010108947754
    10. '(month' → logprob: -19.50010108947754

Token 127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012284684635233134
    2. ')
' → logprob: -9.250123023986816
    3. '   ' → logprob: -11.375123023986816
    4. ' )' → logprob: -11.375123023986816
    5. '       ' → logprob: -13.875123023986816
    6. '<|end|>' → logprob: -13.875123023986816
    7. ']' → logprob: -15.125123023986816
    8. ')

' → logprob: -15.500123023986816
    9. '}' → logprob: -15.625123023986816
    10. '))' → logprob: -16.2501220703125

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2964046597480774
    2. 'print' → logprob: -1.7964046001434326
    3. '
' → logprob: -2.7964046001434326
    4. '<|end|>' → logprob: -4.171404838562012
    5. ' if' → logprob: -5.296404838562012
    6. ' print' → logprob: -5.796404838562012
    7. 'if' → logprob: -6.296404838562012
    8. '    
' → logprob: -6.671404838562012
    9. ' for' → logprob: -6.796404838562012
    10. 'for' → logprob: -7.921404838562012

Token 129: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011126694269478321
    2. '   ' → logprob: -5.261126518249512
    3. ' print' → logprob: -5.511126518249512
    4. 'if' (adapté à ' if') → logprob: -6.636126518249512
    5. 'for' → logprob: -8.386126518249512
    6. ' if' → logprob: -8.761126518249512
    7. 'count' → logprob: -9.886126518249512
    8. ' for' → logprob: -10.136126518249512
    9. '    
' → logprob: -11.136126518249512
    10. '
' → logprob: -11.886126518249512

Token 130: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0018150020623579621
    2. 'len' → logprob: -6.876814842224121
    3. ' ' → logprob: -8.001814842224121
    4. ' le' → logprob: -8.251814842224121
    5. ' not' → logprob: -9.376814842224121
    6. ' leap' → logprob: -9.501814842224121
    7. '(len' → logprob: -11.376814842224121
    8. 'le' → logprob: -11.626814842224121
    9. ' ' → logprob: -12.501814842224121
    10. ' l' → logprob: -13.626814842224121

Token 131: '(le' (ID: 135521)
  Prédit: '(le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(le' → logprob: -0.014202055521309376
    2. '(' → logprob: -4.264202117919922
    3. ' (' → logprob: -10.639202117919922
    4. 'le' → logprob: -11.264202117919922
    5. ' leap' → logprob: -15.264202117919922
    6. ' le' → logprob: -15.264202117919922
    7. '(l' → logprob: -15.389202117919922
    8. ' ' → logprob: -15.514202117919922
    9. '(
' → logprob: -15.889202117919922
    10. '(year' → logprob: -16.139202117919922

Token 132: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.00013572083844337612
    2. 'ep' → logprob: -10.50013542175293
    3. '   ' → logprob: -10.62513542175293
    4. ' leap' → logprob: -11.06263542175293
    5. '```' → logprob: -11.18763542175293
    6. 'p' → logprob: -12.25013542175293
    7. 'le' → logprob: -12.62513542175293
    8. 'aps' → logprob: -12.68763542175293
    9. 'ip' → logprob: -12.87513542175293
    10. '>' → logprob: -13.25013542175293

Token 133: '_year' (ID: 33489)
  Prédit: '_year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_year' → logprob: -5.049755782238208e-05
    2. '_' → logprob: -10.87505054473877
    3. 's' → logprob: -11.12505054473877
    4. 'years' → logprob: -11.87505054473877
    5. 'year' → logprob: -12.62505054473877
    6. '-year' → logprob: -14.00005054473877
    7. '   ' → logprob: -14.62505054473877
    8. 'Year' → logprob: -14.62505054473877
    9. 'ap' → logprob: -14.87505054473877
    10. '_le' → logprob: -15.12505054473877

Token 134: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1521642655134201
    2. '_year' → logprob: -2.0271642208099365
    3. 'years' → logprob: -5.402164459228516
    4. 'ars' → logprob: -5.527164459228516
    5. 'as' → logprob: -8.777164459228516
    6. ' years' → logprob: -9.027164459228516
    7. '_s' → logprob: -9.277164459228516
    8. 'year' → logprob: -9.902164459228516
    9. ')' → logprob: -10.027164459228516
    10. 'aps' → logprob: -10.152164459228516

Token 135: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28643813729286194
    2. ' ==' → logprob: -1.9114381074905396
    3. '==' → logprob: -2.536438226699829
    4. '>' → logprob: -4.78643798828125
    5. ' >' → logprob: -5.16143798828125
    6. ' )' → logprob: -5.91143798828125
    7. ')==' → logprob: -6.28643798828125
    8. ' >=' → logprob: -6.41143798828125
    9. ' <' → logprob: -7.53643798828125
    10. '>=' → logprob: -7.91143798828125

Token 136: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.49654555320739746
    2. '==' → logprob: -1.1215455532073975
    3. ' >' → logprob: -3.4965455532073975
    4. '>' → logprob: -3.7465455532073975
    5. ' >=' → logprob: -5.496545791625977
    6. '%' → logprob: -5.871545791625977
    7. ' %' → logprob: -6.121545791625977
    8. '>=' → logprob: -6.746545791625977
    9. ' <' → logprob: -7.246545791625977
    10. '<' → logprob: -8.246545791625977

Token 137: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003891757456585765
    2. '1' → logprob: -6.128891944885254
    3. ' ' → logprob: -6.378891944885254
    4. 'b' → logprob: -12.753891944885254
    5. '   ' → logprob: -13.378891944885254
    6. '2' → logprob: -14.128891944885254
    7. '    ' → logprob: -14.316391944885254
    8. ' b' → logprob: -14.441391944885254
    9. '```' → logprob: -14.941391944885254
    10. '  ' → logprob: -15.128891944885254

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028721538837999105
    2. '1' → logprob: -6.127871990203857
    3. ' ' → logprob: -7.377871990203857
    4. 'b' → logprob: -10.002872467041016
    5. '2' → logprob: -12.252872467041016
    6. '(' → logprob: -12.565372467041016
    7. ' b' → logprob: -13.377872467041016
    8. '(b' → logprob: -13.440372467041016
    9. '   ' → logprob: -13.565372467041016
    10. '    ' → logprob: -14.815372467041016

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005956291686743498
    2. ':
' → logprob: -5.130956172943115
    3. '   ' → logprob: -10.880956649780273
    4. '       ' → logprob: -12.630956649780273
    5. ' :' → logprob: -13.380956649780273
    6. ':return' → logprob: -13.380956649780273
    7. ' or' → logprob: -14.130956649780273
    8. ':

' → logprob: -14.755956649780273
    9. ',' → logprob: -15.380956649780273
    10. 'print' → logprob: -15.630956649780273

Token 140: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5476906299591064
    2. '       ' → logprob: -0.9226906299591064
    3. 'print' → logprob: -4.047690391540527
    4. ' print' → logprob: -5.047690391540527
    5. '    
' → logprob: -8.422690391540527
    6. '        
' → logprob: -10.797690391540527
    7. '```' → logprob: -10.797690391540527
    8. '	print' → logprob: -11.422690391540527
    9. '`' → logprob: -11.672690391540527
    10. '\n' → logprob: -11.672690391540527

Token 141: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.28649452328681946
    2. '   ' → logprob: -1.536494493484497
    3. ' print' → logprob: -3.411494493484497
    4. '    
' → logprob: -7.911494731903076
    5. '
' → logprob: -8.036494255065918
    6. '    ' → logprob: -10.036494255065918
    7. '       ' → logprob: -10.411494255065918
    8. ' 
' → logprob: -10.536494255065918
    9. '\n' → logprob: -10.536494255065918
    10. '	print' → logprob: -10.536494255065918

Token 142: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.07285656780004501
    2. '(' → logprob: -2.6978566646575928
    3. '(-' → logprob: -6.322856426239014
    4. '('' → logprob: -7.697856426239014
    5. '("")' → logprob: -8.322856903076172
    6. '()' → logprob: -8.322856903076172
    7. '("-' → logprob: -9.572856903076172
    8. '(None' → logprob: -10.572856903076172
    9. '0' → logprob: -11.072856903076172
    10. '"' → logprob: -11.072856903076172

Token 143: 'NA' (ID: 9555)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3350247144699097
    2. 'NA' → logprob: -1.4600247144699097
    3. 'No' → logprob: -1.5850247144699097
    4. '"' → logprob: -2.460024833679199
    5. 'none' → logprob: -2.960024833679199
    6. 'no' → logprob: -3.335024833679199
    7. 'None' → logprob: -3.585024833679199
    8. '"-' → logprob: -4.085024833679199
    9. 'NO' → logprob: -4.335024833679199
    10. 'na' → logprob: -4.835024833679199

Token 144: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.007069482002407312
    2. ')' → logprob: -5.0070695877075195
    3. '")
' → logprob: -8.38206958770752
    4. ')")' → logprob: -9.75706958770752
    5. '"' → logprob: -10.75706958770752
    6. '")
' → logprob: -11.88206958770752
    7. '!")' → logprob: -12.25706958770752
    8. 'year' → logprob: -12.25706958770752
    9. 'Year' → logprob: -12.63206958770752
    10. 'le' → logprob: -13.00706958770752

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018384624272584915
    2. 'else' → logprob: -4.3933844566345215
    3. ' else' → logprob: -5.2683844566345215
    4. '<|end|>' → logprob: -8.39338493347168
    5. 'elif' → logprob: -8.76838493347168
    6. '    
' → logprob: -9.01838493347168
    7. '	else' → logprob: -10.14338493347168
    8. ' elif' → logprob: -10.26838493347168
    9. ':' → logprob: -10.89338493347168
    10. ')' → logprob: -10.89338493347168

Token 146: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.7703184485435486
    2. '   ' → logprob: -1.1453185081481934
    3. ' else' → logprob: -1.5203185081481934
    4. 'elif' → logprob: -8.270318031311035
    5. ' elif' → logprob: -10.020318031311035
    6. '	else' → logprob: -10.145318031311035
    7. '    
' → logprob: -12.020318031311035
    8. ' ' → logprob: -12.270318031311035
    9. '.' → logprob: -12.520318031311035
    10. 'e' → logprob: -12.770318031311035

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015514022670686245
    2. ':
' → logprob: -6.501551628112793
    3. '       ' → logprob: -10.251551628112793
    4. '   ' → logprob: -11.376551628112793
    5. 'print' → logprob: -14.001551628112793
    6. ' :' → logprob: -14.001551628112793
    7. ',' → logprob: -15.376551628112793
    8. '    ' → logprob: -15.626551628112793
    9. ':

' → logprob: -16.376550674438477
    10. ' print' → logprob: -16.751550674438477

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02390705794095993
    2. ' for' → logprob: -4.02390718460083
    3. ' print' → logprob: -5.77390718460083
    4. '   ' → logprob: -7.02390718460083
    5. 'print' → logprob: -7.14890718460083
    6. 'for' → logprob: -8.023906707763672
    7. '    ' → logprob: -8.273906707763672
    8. '        
' → logprob: -9.648906707763672
    9. '    
' → logprob: -10.148906707763672
    10. ' ' → logprob: -10.273906707763672

Token 149: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08618249744176865
    2. ' print' → logprob: -2.5861825942993164
    3. 'for' (adapté à ' for') → logprob: -5.461182594299316
    4. ' for' → logprob: -5.836182594299316
    5. '   ' → logprob: -9.586182594299316
    6. '       ' → logprob: -10.961182594299316
    7. '    ' → logprob: -11.836182594299316
    8. 'pr' → logprob: -13.836182594299316
    9. '    
' → logprob: -14.586182594299316
    10. 'prin' → logprob: -14.711182594299316

Token 150: ' y' (ID: 342)
  Prédit: 'year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'year' → logprob: -0.5620027184486389
    2. ' year' → logprob: -0.9370027184486389
    3. 'ly' → logprob: -4.062002658843994
    4. ' y' → logprob: -4.562002658843994
    5. 'y' → logprob: -5.312002658843994
    6. ' ly' → logprob: -6.312002658843994
    7. ' leap' → logprob: -6.562002658843994
    8. 'le' → logprob: -6.687002658843994
    9. 'yr' → logprob: -7.062002658843994
    10. ' yr' → logprob: -9.437003135681152

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005993024446070194
    2. 'in' → logprob: -5.130992889404297
    3. 'ear' → logprob: -10.255992889404297
    4. ' ' → logprob: -11.380992889404297
    5. 'y' → logprob: -12.630992889404297
    6. 'n' → logprob: -12.880992889404297
    7. '	in' → logprob: -13.380992889404297
    8. '  ' → logprob: -13.505992889404297
    9. '   ' → logprob: -13.505992889404297
    10. ' ' → logprob: -13.630992889404297

Token 152: ' leap' (ID: 58256)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0052572377026081085
    2. ' leap' → logprob: -5.2552571296691895
    3. 'e' → logprob: -11.380257606506348
    4. ' le' → logprob: -11.880257606506348
    5. '   ' → logprob: -13.130257606506348
    6. ' ' → logprob: -13.880257606506348
    7. '  ' → logprob: -15.130257606506348
    8. 'sorted' → logprob: -15.255257606506348
    9. ' sorted' → logprob: -15.380257606506348
    10. 'leet' → logprob: -15.755257606506348

Token 153: '_year' (ID: 33489)
  Prédit: '_year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_year' → logprob: -2.975612187583465e-05
    2. '_' → logprob: -10.875029563903809
    3. 's' → logprob: -12.250029563903809
    4. 'years' → logprob: -12.375029563903809
    5. '       ' → logprob: -14.500029563903809
    6. 'year' → logprob: -14.875029563903809
    7. ' years' → logprob: -15.000029563903809
    8. '   ' → logprob: -15.125029563903809
    9. '_
' → logprob: -16.250030517578125
    10. '_y' → logprob: -16.500030517578125

Token 154: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5837665796279907
    2. '_year' → logprob: -0.9587665796279907
    3. 'ars' → logprob: -3.708766460418701
    4. '_s' → logprob: -3.833766460418701
    5. '_' → logprob: -5.458766460418701
    6. 'ears' → logprob: -5.583766460418701
    7. 'ear' → logprob: -5.833766460418701
    8. 'ar' → logprob: -6.458766460418701
    9. '_ar' → logprob: -10.45876693725586
    10. 'rs' → logprob: -10.70876693725586

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004934277385473251
    2. ':
' → logprob: -5.379934310913086
    3. '       ' → logprob: -9.129934310913086
    4. ',' → logprob: -9.504934310913086
    5. '):' → logprob: -10.004934310913086
    6. ' :' → logprob: -10.504934310913086
    7. 'print' → logprob: -10.879934310913086
    8. '   ' → logprob: -11.379934310913086
    9. '           ' → logprob: -11.629934310913086
    10. ')' → logprob: -12.629934310913086

Token 156: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06019853428006172
    2. '       ' → logprob: -3.4351985454559326
    3. 'print' → logprob: -4.1851983070373535
    4. ' print' → logprob: -4.5601983070373535
    5. '
' → logprob: -8.685198783874512
    6. '	       ' → logprob: -8.810198783874512
    7. ':' → logprob: -9.810198783874512
    8. '               ' → logprob: -10.685198783874512
    9. '   ' → logprob: -10.935198783874512
    10. ',' → logprob: -11.185198783874512

Token 157: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.05460498481988907
    2. '           ' → logprob: -3.804605007171631
    3. 'print' (adapté à ' print') → logprob: -3.929605007171631
    4. '       ' → logprob: -4.554605007171631
    5. '               ' → logprob: -7.554605007171631
    6. '   ' → logprob: -8.804604530334473
    7. '	print' → logprob: -11.679604530334473
    8. '
' → logprob: -12.429604530334473
    9. '    ' → logprob: -12.679604530334473
    10. '        ' → logprob: -12.679604530334473

Token 158: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.02176390402019024
    2. '(' → logprob: -3.896763801574707
    3. '(f' → logprob: -7.396763801574707
    4. '("' → logprob: -7.521763801574707
    5. '('' → logprob: -10.521763801574707
    6. 'y' → logprob: -10.521763801574707
    7. '(year' → logprob: -12.021763801574707
    8. '()' → logprob: -13.396763801574707
    9. ' (' → logprob: -13.521763801574707
    10. ' y' → logprob: -13.896763801574707

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4498052223643754e-05
    2. ',' → logprob: -11.875014305114746
    3. ')
' → logprob: -12.625014305114746
    4. ' )' → logprob: -13.000014305114746
    5. '   ' → logprob: -14.250014305114746
    6. ',)' → logprob: -14.875014305114746
    7. ');' → logprob: -15.625014305114746
    8. '))' → logprob: -15.625014305114746
    9. '),' → logprob: -16.250015258789062
    10. ')}' → logprob: -16.500015258789062

Token 160: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010925926035270095
    2. '("")' → logprob: -6.876092433929443
    3. '(' → logprob: -9.751092910766602
    4. '()
' → logprob: -14.126092910766602
    5. '('' → logprob: -14.501092910766602
    6. ' ()' → logprob: -15.251092910766602
    7. '(""' → logprob: -17.2510929107666
    8. '""' → logprob: -17.5010929107666
    9. '())' → logprob: -17.7510929107666
    10. '```' → logprob: -17.8760929107666


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 160
Tokens correctement prédits (1ère position, stricte): 86
Tokens correctement prédits (1ère position, avec adaptation): 92
Tokens correctement prédits (top 10): 144
Précision stricte (1ère position): 53.75%
Précision adaptée (1ère position): 57.50%
Précision (top 10): 90.00%
================================================================================
