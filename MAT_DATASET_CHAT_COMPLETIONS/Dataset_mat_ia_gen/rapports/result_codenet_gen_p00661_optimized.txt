================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def lcm(a, b):
    return a // math.gcd(a, b) * b

def all_lcms(arr):
    res = []
    def backtrack(i, curr_lcm):
        if i == len(arr):
            if curr_lcm != 1:
                res.append(curr_lcm)
            return
        # Include arr[i]
        new_lcm = lcm(curr_lcm, arr[i])
        if new_lcm <= n:
            backtrack(i + 1, new_lcm)
        # Exclude arr[i]
        backtrack(i + 1, curr_lcm)
    backtrack(0, 1)
    return res

input = sys.stdin.readline
while True:
    n, m = map(int, input().split())
    if n == 0 and m == 0:
        break
    p = list(map(int, input().split()))
    # Inclusion-exclusion
    from itertools import combinations
    res = 0
    length = len(p)
    for size in range(1, length + 1):
        for comb in combinations(p, size):
            curr_lcm = 1
            for x in comb:
                curr_lcm = lcm(curr_lcm, x)
                if curr_lcm > n:
                    break
            else:
                cnt = n // curr_lcm
                if size % 2 == 1:
                    res += cnt
                else:
                    res -= cnt
    valid_count = n - res
    if valid_count == 0:
        print("0.0000000000")
        continue
    # Sum of all natural numbers from 1 to n
    total_sum = n * (n + 1) // 2
    # Sum of all multiples of each pi with inclusion-exclusion
    sum_excluded = 0
    for size in range(1, length + 1):
        for comb in combinations(p, size):
            curr_lcm = 1
            for x in comb:
                curr_lcm = lcm(curr_lcm, x)
                if curr_lcm > n:
                    break
            else:
                cnt = n // curr_lcm
                s = curr_lcm * cnt * (cnt + 1) // 2
                if size % 2 == 1:
                    sum_excluded += s
                else:
                    sum_excluded -= s
    valid_sum = total_sum - sum_excluded
    expected_value = valid_sum / valid_count
    print(f"{expected_value:.10f}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20064200460910797
    2. '.' → logprob: -2.4506421089172363
    3. '<|end|>' → logprob: -2.8256421089172363
    4. '\' → logprob: -4.700642108917236
    5. 'newline' → logprob: -5.075642108917236
    6. 'import' → logprob: -5.075642108917236
    7. '
' → logprob: -5.700642108917236
    8. '' → logprob: -5.825642108917236
    9. '<|end|>' → logprob: -5.825642108917236
    10. '\r' → logprob: -6.200642108917236

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0006273718317970634
    2. 'os' → logprob: -7.375627517700195
    3. ' re' → logprob: -15.375627517700195
    4. ' math' → logprob: -15.500627517700195
    5. '_os' → logprob: -15.750627517700195
    6. '"os' → logprob: -15.875627517700195
    7. ' json' → logprob: -16.250627517700195
    8. '	os' → logprob: -17.250627517700195
    9. ' ' → logprob: -18.125627517700195
    10. ' argparse' → logprob: -18.125627517700195

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2647836208343506
    2. 'import' → logprob: -2.6397836208343506
    3. '\n' → logprob: -2.7647836208343506
    4. '\' → logprob: -3.1397836208343506
    5. '```' → logprob: -4.01478385925293
    6. '
' → logprob: -4.13978385925293
    7. '<|end|>' → logprob: -4.76478385925293
    8. ',' → logprob: -5.38978385925293
    9. '

' → logprob: -5.76478385925293
    10. '<|end|>' → logprob: -7.01478385925293

Token 6: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1154029369354248
    2. '.' → logprob: -1.6154029369354248
    3. '\' → logprob: -1.6154029369354248
    4. '```' → logprob: -2.240402936935425
    5. 'import' → logprob: -2.365402936935425
    6. 'def' → logprob: -3.615402936935425
    7. '
' → logprob: -3.740402936935425
    8. ',' → logprob: -5.240403175354004
    9. '`' → logprob: -5.490403175354004
    10. '#' → logprob: -6.365403175354004

Token 7: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05181736871600151
    2. ' calculate' → logprob: -3.3018174171447754
    3. '_' → logprob: -5.176817417144775
    4. ' space' → logprob: -5.676817417144775
    5. ' factorial' → logprob: -6.301817417144775
    6. ' my' → logprob: -7.676817417144775
    7. ' compute' → logprob: -7.676817417144775
    8. ' calc' → logprob: -8.551816940307617
    9. ' math' → logprob: -8.551816940307617
    10. ' e' → logprob: -8.801816940307617

Token 8: 'cm' (ID: 7871)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.49800363183021545
    2. 'e' → logprob: -1.373003602027893
    3. 'og' → logprob: -2.2480037212371826
    4. 'i' → logprob: -3.9980037212371826
    5. 'a' → logprob: -4.6230034828186035
    6. 'en' → logprob: -6.1230034828186035
    7. 'ogical' → logprob: -7.9980034828186035
    8. 'ambda' → logprob: -8.123003959655762
    9. 'n' → logprob: -8.248003959655762
    10. 'l' → logprob: -8.373003959655762

Token 9: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0022899024188518524
    2. '_' → logprob: -6.877289772033691
    3. ' (' → logprob: -6.877289772033691
    4. '```' → logprob: -9.502289772033691
    5. '<|end|>' → logprob: -10.127289772033691
    6. '<|end|>' → logprob: -11.252289772033691
    7. '(a' → logprob: -11.252289772033691
    8. '(x' → logprob: -11.377289772033691
    9. '(
' → logprob: -11.377289772033691
    10. '(_' → logprob: -11.627289772033691

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004238431341946125
    2. ')' → logprob: -6.254238605499268
    3. ' ,' → logprob: -6.379238605499268
    4. ',)' → logprob: -8.12923812866211
    5. ' ' → logprob: -9.12923812866211
    6. ',b' → logprob: -9.37923812866211
    7. '_,' → logprob: -10.00423812866211
    8. ',a' → logprob: -10.37923812866211
    9. '(' → logprob: -11.50423812866211
    10. ' )' → logprob: -11.87923812866211

Token 11: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.00761005561798811
    2. 'b' → logprob: -4.882609844207764
    3. ' ' → logprob: -13.257610321044922
    4. ',b' → logprob: -14.007610321044922
    5. ' ,' → logprob: -14.382610321044922
    6. ' ' → logprob: -14.882610321044922
    7. ',' → logprob: -15.632610321044922
    8. '	b' → logprob: -16.382610321044922
    9. ' б' → logprob: -16.882610321044922
    10. ')b' → logprob: -17.257610321044922

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2816506624221802
    2. ')' → logprob: -1.4066506624221802
    3. '):
' → logprob: -7.656650543212891
    4. ',' → logprob: -12.15665054321289
    5. ':' → logprob: -12.65665054321289
    6. ')>' → logprob: -12.90665054321289
    7. '),' → logprob: -13.03165054321289
    8. '):

' → logprob: -13.15665054321289
    9. '):
' → logprob: -13.65665054321289
    10. ')：' → logprob: -13.78165054321289

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5702948570251465
    2. ':' → logprob: -0.9452948570251465
    3. '():' → logprob: -4.4452948570251465
    4. ' :' → logprob: -4.5702948570251465
    5. '):' → logprob: -4.6952948570251465
    6. '(' → logprob: -4.9452948570251465
    7. ' return' → logprob: -6.5702948570251465
    8. ' ' → logprob: -6.6952948570251465
    9. ':
' → logprob: -7.0702948570251465
    10. '    ' → logprob: -7.4452948570251465

Token 14: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42830944061279297
    2. ' return' → logprob: -1.428309440612793
    3. '    ' → logprob: -2.803309440612793
    4. ' ' → logprob: -3.803309440612793
    5. 'return' (adapté à ' return') → logprob: -4.178309440612793
    6. '       ' → logprob: -5.803309440612793
    7. ''' → logprob: -6.553309440612793
    8. '```' → logprob: -6.928309440612793
    9. '\' → logprob: -7.178309440612793
    10. '  ' → logprob: -7.803309440612793

Token 15: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0141441123560071
    2. ' (' → logprob: -4.889143943786621
    3. 'a' → logprob: -5.514143943786621
    4. ' abs' → logprob: -6.764143943786621
    5. ' math' → logprob: -7.139143943786621
    6. ' ' → logprob: -8.139143943786621
    7. '(a' → logprob: -8.889143943786621
    8. '(' → logprob: -10.389143943786621
    9. ' int' → logprob: -10.639143943786621
    10. ' '' → logprob: -11.139143943786621

Token 16: ' //' (ID: 602)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.22139665484428406
    2. '*' → logprob: -1.8463966846466064
    3. ' ' → logprob: -3.2213966846466064
    4. '  ' → logprob: -8.096396446228027
    5. ''' → logprob: -9.721396446228027
    6. '*b' → logprob: -9.971396446228027
    7. '-' → logprob: -10.096396446228027
    8. '`' → logprob: -10.221396446228027
    9. ' ' → logprob: -10.221396446228027
    10. '```' → logprob: -10.346396446228027

Token 17: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.04932611808180809
    2. ' math' → logprob: -3.049326181411743
    3. 'b' → logprob: -7.424325942993164
    4. '(math' → logprob: -8.924325942993164
    5. '   ' → logprob: -12.299325942993164
    6. ' b' → logprob: -12.674325942993164
    7. ' ' → logprob: -14.299325942993164
    8. '  ' → logprob: -15.049325942993164
    9. '.math' → logprob: -16.049325942993164
    10. '    ' → logprob: -17.424325942993164

Token 18: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.007451510522514582
    2. '.' → logprob: -5.63245153427124
    3. 'g' → logprob: -5.63245153427124
    4. '.sqrt' → logprob: -8.882451057434082
    5. '.factor' → logprob: -10.257451057434082
    6. '.py' → logprob: -10.757451057434082
    7. ' gcd' → logprob: -10.882451057434082
    8. '.ceil' → logprob: -11.382451057434082
    9. '.l' → logprob: -11.382451057434082
    10. ' .' → logprob: -11.632451057434082

Token 19: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -7.822646693966817e-06
    2. 'g' → logprob: -12.375007629394531
    3. 'cm' → logprob: -13.625007629394531
    4. 'c' → logprob: -13.750007629394531
    5. 'cdn' → logprob: -14.375007629394531
    6. 'cdf' → logprob: -15.250007629394531
    7. 'cf' → logprob: -15.625007629394531
    8. 'ct' → logprob: -16.50000762939453
    9. 'math' → logprob: -16.50000762939453
    10. 'cg' → logprob: -17.25000762939453

Token 20: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02380869723856449
    2. '(a' → logprob: -3.773808717727661
    3. '(b' → logprob: -7.523808479309082
    4. ' (' → logprob: -11.023808479309082
    5. '(s' → logprob: -13.023808479309082
    6. '((' → logprob: -13.523808479309082
    7. '(
' → logprob: -14.148808479309082
    8. '(x' → logprob: -14.273808479309082
    9. '(`' → logprob: -15.523808479309082
    10. '```' → logprob: -15.773808479309082

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012406985275447369
    2. ' ,' → logprob: -4.512406826019287
    3. ',b' → logprob: -6.637406826019287
    4. 'b' → logprob: -10.262407302856445
    5. ')' → logprob: -12.137407302856445
    6. ' b' → logprob: -12.262407302856445
    7. ' ' → logprob: -13.512407302856445
    8. ',
' → logprob: -15.012407302856445
    9. '，' → logprob: -15.887407302856445
    10. ',
' → logprob: -16.012407302856445

Token 22: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.313263863325119
    2. ' b' → logprob: -1.3132638931274414
    3. ' ' → logprob: -13.313263893127441
    4. ')b' → logprob: -14.688263893127441
    5. '	b' → logprob: -17.188262939453125
    6. ' б' → logprob: -18.313262939453125
    7. ')' → logprob: -18.438262939453125
    8. '  ' → logprob: -18.813262939453125
    9. '   ' → logprob: -18.813262939453125
    10. '    ' → logprob: -18.938262939453125

Token 23: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015955790877342224
    2. ' )' → logprob: -9.50015926361084
    3. '*' → logprob: -10.12515926361084
    4. ')*' → logprob: -10.25015926361084
    5. ',' → logprob: -13.25015926361084
    6. ')`' → logprob: -13.75015926361084
    7. '))' → logprob: -14.12515926361084
    8. '),' → logprob: -14.25015926361084
    9. ')+' → logprob: -14.75015926361084
    10. '}' → logprob: -14.75015926361084

Token 24: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.027060333639383316
    2. ' *' → logprob: -3.7770602703094482
    3. ')' → logprob: -6.777060508728027
    4. ''' → logprob: -7.027060508728027
    5. '  ' → logprob: -7.652060508728027
    6. ' ' → logprob: -8.277060508728027
    7. '`' → logprob: -8.402060508728027
    8. '"' → logprob: -8.527060508728027
    9. '\' → logprob: -9.277060508728027
    10. '*
' → logprob: -9.277060508728027

Token 25: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03804149478673935
    2. ' b' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.538042068481445
    4. '	b' → logprob: -18.038042068481445
    5. '*b' → logprob: -20.538042068481445
    6. '_b' → logprob: -20.538042068481445
    7. ')b' → logprob: -20.538042068481445
    8. ' б' → logprob: -21.538042068481445
    9. '```' → logprob: -21.788042068481445
    10. '<|end|>' → logprob: -21.913042068481445

Token 26: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8563138246536255
    2. '\n' → logprob: -1.2313138246536255
    3. '(' → logprob: -1.7313138246536255
    4. '\' → logprob: -3.731313705444336
    5. '```' → logprob: -3.856313705444336
    6. '(
' → logprob: -4.231313705444336
    7. '<|end|>' → logprob: -4.606313705444336
    8. '

' → logprob: -5.106313705444336
    9. ')' → logprob: -5.231313705444336
    10. '#' → logprob: -5.481313705444336

Token 27: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31164970993995667
    2. '\n' → logprob: -2.186649799346924
    3. 'def' → logprob: -2.686649799346924
    4. '\' → logprob: -3.561649799346924
    5. '#' → logprob: -3.686649799346924
    6. '<|end|>' → logprob: -4.686649799346924
    7. 'n' → logprob: -4.936649799346924
    8. '```' → logprob: -5.311649799346924
    9. '

' → logprob: -5.686649799346924
    10. '' → logprob: -6.311649799346924

Token 28: ' all' (ID: 722)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.06530634313821793
    2. ' space' → logprob: -3.8153064250946045
    3. ' ' → logprob: -4.065306186676025
    4. ' calculate' → logprob: -4.940306186676025
    5. ' gcd' → logprob: -5.690306186676025
    6. ' find' → logprob: -6.315306186676025
    7. '_' → logprob: -6.315306186676025
    8. ' longest' → logprob: -6.315306186676025
    9. ' factorial' → logprob: -6.440306186676025
    10. ' add' → logprob: -6.940306186676025

Token 29: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0013484497321769595
    2. '(' → logprob: -7.751348495483398
    3. '_div' → logprob: -9.001348495483398
    4. '_s' → logprob: -9.126348495483398
    5. '_numbers' → logprob: -9.126348495483398
    6. '_equal' → logprob: -9.626348495483398
    7. '_pairs' → logprob: -9.626348495483398
    8. '_elements' → logprob: -10.001348495483398
    9. '_(' → logprob: -10.001348495483398
    10. '_values' → logprob: -10.626348495483398

Token 30: 'cms' (ID: 60849)
  Prédit: 'cm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.09735977649688721
    2. 'cms' → logprob: -2.5973596572875977
    3. 'ist' → logprob: -4.597359657287598
    4. 'ists' → logprob: -5.847359657287598
    5. 'i' → logprob: -6.472359657287598
    6. 'en' → logprob: -7.722359657287598
    7. 'c' → logprob: -7.847359657287598
    8. '_c' → logprob: -8.097359657287598
    9. 'ines' → logprob: -8.097359657287598
    10. 'inks' → logprob: -8.347359657287598

Token 31: '(arr' (ID: 19646)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002366370754316449
    2. '_' → logprob: -6.377366542816162
    3. '_(' → logprob: -8.627366065979004
    4. '(_' → logprob: -9.127366065979004
    5. ' (' → logprob: -9.752366065979004
    6. '(a' → logprob: -9.752366065979004
    7. '(_)' → logprob: -10.002366065979004
    8. '("("' → logprob: -10.377366065979004
    9. '_for' → logprob: -10.627366065979004
    10. '```' → logprob: -10.752366065979004

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1431436687707901
    2. ')' → logprob: -2.018143653869629
    3. '[' → logprob: -8.768143653869629
    4. '[]):' → logprob: -8.893143653869629
    5. '(' → logprob: -9.393143653869629
    6. '):
' → logprob: -11.018143653869629
    7. ',' → logprob: -11.268143653869629
    8. ' ):' → logprob: -11.518143653869629
    9. '   ' → logprob: -11.518143653869629
    10. '[]' → logprob: -12.518143653869629

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053186047822237015
    2. ':' → logprob: -4.553185939788818
    3. '[' → logprob: -4.678185939788818
    4. '(' → logprob: -5.053185939788818
    5. '    ' → logprob: -5.053185939788818
    6. ' ' → logprob: -5.178185939788818
    7. '    
' → logprob: -5.178185939788818
    8. '[]' → logprob: -6.428185939788818
    9. '\' → logprob: -6.678185939788818
    10. ' 
' → logprob: -7.053185939788818

Token 34: ' res' (ID: 694)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6406444907188416
    2. ' result' → logprob: -1.2656445503234863
    3. 'result' → logprob: -2.7656445503234863
    4. ' n' → logprob: -3.3906445503234863
    5. ' lc' → logprob: -3.8906445503234863
    6. 'l' → logprob: -4.140644550323486
    7. 'n' → logprob: -4.140644550323486
    8. ' res' → logprob: -4.765644550323486
    9. '   ' → logprob: -5.140644550323486
    10. 'r' → logprob: -5.140644550323486

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01616457849740982
    2. '=' → logprob: -4.141164779663086
    3. '=[]' → logprob: -10.141164779663086
    4. ' ' → logprob: -10.641164779663086
    5. 'ult' → logprob: -10.891164779663086
    6. ',' → logprob: -11.516164779663086
    7. 'u' → logprob: -12.141164779663086
    8. 'ul' → logprob: -12.391164779663086
    9. 'ults' → logprob: -12.391164779663086
    10. 'ay' → logprob: -12.391164779663086

Token 36: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6693490743637085
    2. '[]' → logprob: -1.0443490743637085
    3. '1' → logprob: -3.169349193572998
    4. ' [' → logprob: -3.419349193572998
    5. '[' → logprob: -3.669349193572998
    6. 'arr' → logprob: -4.044349193572998
    7. ' ' → logprob: -4.294349193572998
    8. ' set' → logprob: -6.419349193572998
    9. 'set' → logprob: -6.919349193572998
    10. '[arr' → logprob: -7.169349193572998

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04055101424455643
    2. 'for' → logprob: -4.29055118560791
    3. ' for' → logprob: -4.41555118560791
    4. ' ' → logprob: -4.79055118560791
    5. '    
' → logprob: -5.91555118560791
    6. '  ' → logprob: -7.41555118560791
    7. '[' → logprob: -7.54055118560791
    8. '
' → logprob: -7.79055118560791
    9. ' 
' → logprob: -7.91555118560791
    10. '   
' → logprob: -7.91555118560791

Token 38: ' def' (ID: 1056)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16350330412387848
    2. 'for' → logprob: -1.9135032892227173
    3. ' n' → logprob: -5.913503170013428
    4. '   ' → logprob: -7.913503170013428
    5. 'n' → logprob: -8.538503646850586
    6. ' i' → logprob: -12.288503646850586
    7. ' ' → logprob: -13.163503646850586
    8. '    
' → logprob: -14.163503646850586
    9. 'i' → logprob: -14.788503646850586
    10. '    ' → logprob: -14.913503646850586

Token 39: ' back' (ID: 1602)
  Prédit: ' helper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' helper' → logprob: -0.30012989044189453
    2. ' dfs' → logprob: -2.3001298904418945
    3. ' all' → logprob: -3.1751298904418945
    4. ' inner' → logprob: -3.4251298904418945
    5. ' comb' → logprob: -3.8001298904418945
    6. ' l' → logprob: -4.1751298904418945
    7. ' calc' → logprob: -5.0501298904418945
    8. ' combine' → logprob: -5.0501298904418945
    9. ' recurse' → logprob: -5.4251298904418945
    10. ' combinations' → logprob: -5.5501298904418945

Token 40: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.5908847451210022
    2. '_' → logprob: -1.5908846855163574
    3. 't' → logprob: -2.0908846855163574
    4. 'tracking' → logprob: -2.5908846855163574
    5. 'tr' → logprob: -3.5908846855163574
    6. 'tra' → logprob: -5.090884685516357
    7. '_track' → logprob: -5.840884685516357
    8. 'trace' → logprob: -6.340884685516357
    9. 'trak' → logprob: -6.840884685516357
    10. '   ' → logprob: -7.215884685516357

Token 41: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012474214658141136
    2. '(i' → logprob: -4.887474060058594
    3. '(index' → logprob: -6.137474060058594
    4. ' (' → logprob: -6.262474060058594
    5. '(idx' → logprob: -8.762474060058594
    6. '(arr' → logprob: -8.887474060058594
    7. '(start' → logprob: -9.762474060058594
    8. '(n' → logprob: -10.262474060058594
    9. '(indices' → logprob: -10.262474060058594
    10. '(pos' → logprob: -10.387474060058594

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000365855434210971
    2. ' ,' → logprob: -8.0003662109375
    3. ',i' → logprob: -11.6253662109375
    4. '   ' → logprob: -12.1253662109375
    5. ',j' → logprob: -12.6253662109375
    6. ',n' → logprob: -12.7503662109375
    7. '):' → logprob: -13.3753662109375
    8. '‌,' → logprob: -13.6253662109375
    9. ',a' → logprob: -14.1253662109375
    10. ',b' → logprob: -14.2503662109375

Token 43: ' curr' (ID: 10495)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.13711678981781
    2. ' current' → logprob: -1.38711678981781
    3. 'curr' → logprob: -1.38711678981781
    4. 'arr' → logprob: -3.2621169090270996
    5. 'acc' → logprob: -3.8871169090270996
    6. 'l' → logprob: -3.8871169090270996
    7. ' curr' → logprob: -4.0121169090271
    8. ' l' → logprob: -4.3871169090271
    9. 'n' → logprob: -4.6371169090271
    10. 'product' → logprob: -4.8871169090271

Token 44: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.6441882252693176
    2. '):' → logprob: -0.7691882252693176
    3. ',' → logprob: -4.769188404083252
    4. '):
' → logprob: -6.519188404083252
    5. ' ):' → logprob: -7.894188404083252
    6. '=' → logprob: -8.019187927246094
    7. ' ' → logprob: -9.144187927246094
    8. '   ' → logprob: -9.394187927246094
    9. ' ,' → logprob: -9.644187927246094
    10. 'l' → logprob: -9.894187927246094

Token 45: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.00158853514585644
    2. 'c' → logprob: -6.501588344573975
    3. 'm' → logprob: -10.626588821411133
    4. 'cms' → logprob: -10.751588821411133
    5. '   ' → logprob: -11.251588821411133
    6. '_cm' → logprob: -11.376588821411133
    7. ')' → logprob: -12.626588821411133
    8. '_c' → logprob: -12.626588821411133
    9. '```' → logprob: -12.751588821411133
    10. ' cm' → logprob: -13.376588821411133

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019600363448262215
    2. ',' → logprob: -6.501959800720215
    3. '):
' → logprob: -8.126959800720215
    4. ' ):' → logprob: -9.501959800720215
    5. ')' → logprob: -9.876959800720215
    6. '=' → logprob: -11.126959800720215
    7. ':' → logprob: -12.001959800720215
    8. '):
' → logprob: -12.501959800720215
    9. '   ' → logprob: -12.876959800720215
    10. ' ' → logprob: -13.001959800720215

Token 47: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3026207685470581
    2. '       ' → logprob: -1.927620768547058
    3. ':' → logprob: -2.8026208877563477
    4. ',' → logprob: -3.5526208877563477
    5. '<|end|>' → logprob: -4.427620887756348
    6. '():' → logprob: -5.052620887756348
    7. ')' → logprob: -5.427620887756348
    8. '   ' → logprob: -6.802620887756348
    9. '        
' → logprob: -7.427620887756348
    10. '):
' → logprob: -7.552620887756348

Token 48: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.9623810658231378e-05
    2. 'i' → logprob: -11.000020027160645
    3. ' ' → logprob: -13.625020027160645
    4. '	i' → logprob: -14.000020027160645
    5. ' ' → logprob: -14.500020027160645
    6. '<|end|>' → logprob: -15.375020027160645
    7. '<|end|>' → logprob: -18.875019073486328
    8. ' ‌' → logprob: -19.125019073486328
    9. '  ' → logprob: -19.500019073486328
    10. '‌' → logprob: -20.000019073486328

Token 50: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.35404670238494873
    2. '==' → logprob: -1.2290467023849487
    3. ' >=' → logprob: -5.479046821594238
    4. '>=' → logprob: -6.604046821594238
    5. '=' → logprob: -10.604046821594238
    6. ' ' → logprob: -11.229046821594238
    7. '<|end|>' → logprob: -12.104046821594238
    8. ')' → logprob: -12.604046821594238
    9. ')==' → logprob: -13.354046821594238
    10. '   ' → logprob: -13.354046821594238

Token 51: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.04859248176217079
    2. 'len' → logprob: -3.0485925674438477
    3. '	len' → logprob: -13.298592567443848
    4. '<|end|>' → logprob: -13.423592567443848
    5. '(len' → logprob: -14.423592567443848
    6. '<len' → logprob: -14.548592567443848
    7. '=len' → logprob: -14.798592567443848
    8. '[len' → logprob: -15.423592567443848
    9. ' ' → logprob: -15.673592567443848
    10. ',len' → logprob: -16.92359161376953

Token 52: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.00010580805974313989
    2. 'arr' → logprob: -9.500105857849121
    3. '(' → logprob: -10.500105857849121
    4. ' arr' → logprob: -13.875105857849121
    5. '<arr' → logprob: -13.875105857849121
    6. '	arr' → logprob: -14.125105857849121
    7. '[arr' → logprob: -14.750105857849121
    8. '$arr' → logprob: -15.750105857849121
    9. '_arr' → logprob: -15.875105857849121
    10. ')' → logprob: -17.625104904174805

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008641989901661873
    2. '):
' → logprob: -4.758642196655273
    3. ')' → logprob: -11.383642196655273
    4. ':' → logprob: -11.883642196655273
    5. '):
' → logprob: -12.133642196655273
    6. '   ' → logprob: -13.508642196655273
    7. ' ):' → logprob: -13.758642196655273
    8. '       ' → logprob: -15.258642196655273
    9. ']:' → logprob: -15.758642196655273
    10. ''):' → logprob: -15.883642196655273

Token 54: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010024434886872768
    2. '\n' → logprob: -8.001002311706543
    3. ':' → logprob: -8.126002311706543
    4. '
' → logprob: -8.876002311706543
    5. '<|end|>' → logprob: -10.126002311706543
    6. '            
' → logprob: -10.376002311706543
    7. ':
' → logprob: -10.626002311706543
    8. '):' → logprob: -10.751002311706543
    9. '<|end|>' → logprob: -11.001002311706543
    10. '       ' → logprob: -11.001002311706543

Token 55: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008597081527113914
    2. 'res' → logprob: -5.758596897125244
    3. ' res' → logprob: -5.883596897125244
    4. '       ' → logprob: -6.008596897125244
    5. 'return' → logprob: -9.258597373962402
    6. ' return' → logprob: -10.633597373962402
    7. '               ' → logprob: -11.008597373962402
    8. '   ' → logprob: -11.633597373962402
    9. ' ' → logprob: -12.758597373962402
    10. '          ' → logprob: -13.133597373962402

Token 56: ' curr' (ID: 10495)
  Prédit: ' curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' curr' → logprob: -0.20149092376232147
    2. 'curr' → logprob: -1.701490879058838
    3. '(curr' → logprob: -10.201491355895996
    4. ' len' → logprob: -11.326491355895996
    5. '	curr' → logprob: -11.451491355895996
    6. '[curr' → logprob: -12.076491355895996
    7. ' ' → logprob: -12.576491355895996
    8. 'Curr' → logprob: -13.076491355895996
    9. 'len' → logprob: -13.076491355895996
    10. '   ' → logprob: -14.513991355895996

Token 57: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -4.978233846486546e-05
    2. '_' → logprob: -10.000049591064453
    3. '!=' → logprob: -13.500049591064453
    4. '>' → logprob: -13.875049591064453
    5. ')' → logprob: -15.250049591064453
    6. ' !=' → logprob: -15.375049591064453
    7. '```' → logprob: -16.000049591064453
    8. ' is' → logprob: -16.062549591064453
    9. ' _' → logprob: -16.312549591064453
    10. '   ' → logprob: -16.500049591064453

Token 58: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.0006545356009155512
    2. 'm' → logprob: -7.875654697418213
    3. 'c' → logprob: -8.250654220581055
    4. 'CM' → logprob: -12.500654220581055
    5. 'cms' → logprob: -12.875654220581055
    6. '_cm' → logprob: -13.250654220581055
    7. '   ' → logprob: -13.875654220581055
    8. '```' → logprob: -13.875654220581055
    9. 'mc' → logprob: -14.750654220581055
    10. '!=' → logprob: -14.750654220581055

Token 59: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6867750883102417
    2. ' !=' → logprob: -1.3117750883102417
    3. '>' → logprob: -1.6867750883102417
    4. ' >' → logprob: -3.3117752075195312
    5. ' not' → logprob: -5.436775207519531
    6. ' is' → logprob: -7.061775207519531
    7. 'not' → logprob: -7.936775207519531
    8. ':' → logprob: -9.311775207519531
    9. 'is' → logprob: -9.811775207519531
    10. '!=-' → logprob: -10.561775207519531

Token 60: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23704613745212555
    2. '1' → logprob: -1.6120461225509644
    3. '0' → logprob: -4.487046241760254
    4. ' None' → logprob: -9.362046241760254
    5. ' math' → logprob: -9.612046241760254
    6. ' -' → logprob: -10.362046241760254
    7. ' sys' → logprob: -10.487046241760254
    8. '   ' → logprob: -10.799546241760254
    9. 'None' → logprob: -11.362046241760254
    10. 'math' → logprob: -11.424546241760254

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03837526589632034
    2. '0' → logprob: -3.2883753776550293
    3. ' ' → logprob: -8.538374900817871
    4. 'math' → logprob: -9.538374900817871
    5. '-' → logprob: -10.663374900817871
    6. 'None' → logprob: -11.413374900817871
    7. 'sys' → logprob: -11.663374900817871
    8. '   ' → logprob: -11.788374900817871
    9. '```' → logprob: -12.163374900817871
    10. 'float' → logprob: -13.288374900817871

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012938085943460464
    2. ':
' → logprob: -4.512938022613525
    3. '):' → logprob: -6.637938022613525
    4. '               ' → logprob: -8.512938499450684
    5. ' and' → logprob: -9.137938499450684
    6. '           ' → logprob: -9.512938499450684
    7. '):
' → logprob: -9.762938499450684
    8. ':return' → logprob: -9.887938499450684
    9. ')' → logprob: -10.137938499450684
    10. ',' → logprob: -11.137938499450684

Token 63: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04326453432440758
    2. '           ' → logprob: -4.043264389038086
    3. '<|end|>' → logprob: -4.043264389038086
    4. '\n' → logprob: -6.668264389038086
    5. ',' → logprob: -6.918264389038086
    6. '                
' → logprob: -7.043264389038086
    7. ':' → logprob: -7.293264389038086
    8. '
' → logprob: -7.418264389038086
    9. '<|end|>' → logprob: -7.543264389038086
    10. ')' → logprob: -7.668264389038086

Token 64: ' res' (ID: 694)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09463834762573242
    2. '
' → logprob: -2.5946383476257324
    3. '           ' → logprob: -5.344638347625732
    4. 'res' (adapté à ' res') → logprob: -5.469638347625732
    5. '\n' → logprob: -6.219638347625732
    6. '               ' → logprob: -6.719638347625732
    7. '                    
' → logprob: -6.969638347625732
    8. ' res' → logprob: -7.219638347625732
    9. '                       ' → logprob: -7.844638347625732
    10. ' 
' → logprob: -8.46963882446289

Token 65: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04860450699925423
    2. '.' → logprob: -3.0486044883728027
    3. ' .' → logprob: -12.548604965209961
    4. '.add' → logprob: -12.798604965209961
    5. '.app' → logprob: -12.798604965209961
    6. '.extend' → logprob: -13.048604965209961
    7. '.Append' → logprob: -13.173604965209961
    8. '.ap' → logprob: -13.423604965209961
    9. '.setdefault' → logprob: -13.923604965209961
    10. '.py' → logprob: -14.048604965209961

Token 66: '(curr' (ID: 49739)
  Prédit: '(curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(curr' → logprob: -0.0011715330183506012
    2. '(' → logprob: -6.751171588897705
    3. '(cur' → logprob: -14.376171112060547
    4. ' (' → logprob: -15.501171112060547
    5. '(
' → logprob: -15.626171112060547
    6. '(current' → logprob: -15.751171112060547
    7. 'curr' → logprob: -17.001171112060547
    8. '((' → logprob: -17.126171112060547
    9. '(c' → logprob: -17.626171112060547
    10. '[curr' → logprob: -17.626171112060547

Token 67: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -15.875
    3. '_' → logprob: -16.125
    4. '```' → logprob: -19.0
    5. '_ll' → logprob: -19.125
    6. '<|end|>' → logprob: -19.25
    7. 'l' → logprob: -19.375
    8. ')_' → logprob: -19.5
    9. ' _' → logprob: -19.8125
    10. 's' → logprob: -19.9375

Token 68: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.013257406651973724
    2. 'm' → logprob: -4.7632575035095215
    3. 'c' → logprob: -5.3882575035095215
    4. 'cms' → logprob: -11.263257026672363
    5. '_cm' → logprob: -11.638257026672363
    6. '_c' → logprob: -11.763257026672363
    7. '   ' → logprob: -12.138257026672363
    8. '_m' → logprob: -12.388257026672363
    9. 'mm' → logprob: -12.513257026672363
    10. ' cm' → logprob: -12.763257026672363

Token 69: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006957849953323603
    2. ')
' → logprob: -5.1319580078125
    3. '           ' → logprob: -7.0069580078125
    4. '               ' → logprob: -9.3819580078125
    5. ')
' → logprob: -10.7569580078125
    6. '       ' → logprob: -11.8819580078125
    7. ')

' → logprob: -12.7569580078125
    8. '`)' → logprob: -13.3819580078125
    9. '                   ' → logprob: -13.5069580078125
    10. '')' → logprob: -14.1319580078125

Token 70: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029192132875323296
    2. '\n' → logprob: -4.029191970825195
    3. '       ' → logprob: -4.654191970825195
    4. '               ' → logprob: -7.279191970825195
    5. '
' → logprob: -7.904191970825195
    6. '    
' → logprob: -9.654191970825195
    7. '   ' → logprob: -9.904191970825195
    8. ')' → logprob: -9.904191970825195
    9. '            
' → logprob: -9.904191970825195
    10. '' → logprob: -10.529191970825195

Token 71: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1380431205034256
    2. '       ' → logprob: -2.888043165206909
    3. '\n' → logprob: -2.888043165206909
    4. '
' → logprob: -4.38804292678833
    5. 'return' (adapté à ' return') → logprob: -5.63804292678833
    6. ' return' → logprob: -7.51304292678833
    7. '   ' → logprob: -8.013043403625488
    8. '               ' → logprob: -8.013043403625488
    9. 'newline' → logprob: -9.888043403625488
    10. '```' → logprob: -10.138043403625488

Token 72: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.737392783164978
    2. '
' → logprob: -0.862392783164978
    3. '\n' → logprob: -2.9873929023742676
    4. '        
' → logprob: -3.4873929023742676
    5. ' 
' → logprob: -4.737392902374268
    6. '  
' → logprob: -5.612392902374268
    7. '    
' → logprob: -5.987392902374268
    8. '<|end|>' → logprob: -6.612392902374268
    9. '```' → logprob: -7.612392902374268
    10. '' → logprob: -7.737392902374268

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3554122745990753
    2. '        
' → logprob: -1.730412244796753
    3. '\n' → logprob: -3.230412244796753
    4. '
' → logprob: -3.480412244796753
    5. ' 
' → logprob: -4.355412483215332
    6. '<|end|>' → logprob: -4.355412483215332
    7. '    
' → logprob: -4.605412483215332
    8. '  
' → logprob: -4.730412483215332
    9. '```' → logprob: -6.730412483215332
    10. '   ' → logprob: -6.730412483215332

Token 74: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2995685636997223
    2. '        
' → logprob: -2.4245686531066895
    3. 'back' → logprob: -2.6745686531066895
    4. ' back' → logprob: -2.7995686531066895
    5. '
' → logprob: -3.5495686531066895
    6. '	back' → logprob: -4.9245686531066895
    7. ' 
' → logprob: -6.5495686531066895
    8. '   ' → logprob: -7.6745686531066895
    9. '    
' → logprob: -7.7995686531066895
    10. '        ' → logprob: -7.9245686531066895

Token 75: ' Include' (ID: 50210)
  Prédit: ' back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.054993875324726105
    2. 'back' → logprob: -2.9299938678741455
    3. '       ' → logprob: -9.929993629455566
    4. ' ' → logprob: -11.304993629455566
    5. '   ' → logprob: -11.304993629455566
    6. 'Back' → logprob: -11.429993629455566
    7. '
' → logprob: -11.804993629455566
    8. '#' → logprob: -12.054993629455566
    9. '	back' → logprob: -12.304993629455566
    10. '(back' → logprob: -12.679993629455566

Token 76: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.2719499468803406
    2. ' arr' → logprob: -2.0219500064849854
    3. '(arr' → logprob: -2.2719500064849854
    4. ' the' → logprob: -7.271949768066406
    5. '[arr' → logprob: -7.396949768066406
    6. 'def' → logprob: -8.521949768066406
    7. '	arr' → logprob: -8.896949768066406
    8. 'back' → logprob: -9.146949768066406
    9. '_arr' → logprob: -9.271949768066406
    10. ' back' → logprob: -9.396949768066406

Token 77: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009631502907723188
    2. '[' → logprob: -7.00096321105957
    3. '```' → logprob: -10.87596321105957
    4. '[I' → logprob: -11.37596321105957
    5. '\[' → logprob: -11.75096321105957
    6. '   ' → logprob: -12.87596321105957
    7. '[user' → logprob: -13.50096321105957
    8. '[u' → logprob: -13.62596321105957
    9. ' ' → logprob: -13.62596321105957
    10. '[j' → logprob: -13.75096321105957

Token 78: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07155080139636993
    2. ' )' → logprob: -2.9465508460998535
    3. ',' → logprob: -5.0715508460998535
    4. '),' → logprob: -5.9465508460998535
    5. ' ' → logprob: -6.0715508460998535
    6. ']' → logprob: -6.5715508460998535
    7. '])' → logprob: -7.0715508460998535
    8. ' ,' → logprob: -7.1965508460998535
    9. ')]' → logprob: -7.8215508460998535
    10. ' ]' → logprob: -7.9465508460998535

Token 79: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' new' (ID: 620)
  Prédit: ' back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.45091789960861206
    2. 'back' → logprob: -1.2009179592132568
    3. ' 
' → logprob: -3.700917959213257
    4. '
' → logprob: -3.700917959213257
    5. '<|end|>' → logprob: -5.575917720794678
    6. '\n' → logprob: -6.450917720794678
    7. ' ' → logprob: -6.575917720794678
    8. '        
' → logprob: -7.575917720794678
    9. '_back' → logprob: -7.575917720794678
    10. '(back' → logprob: -7.700917720794678

Token 81: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.00013440960901789367
    2. '_' → logprob: -9.000134468078613
    3. ' _' → logprob: -12.000134468078613
    4. 'l' → logprob: -14.250134468078613
    5. '_li' → logprob: -14.500134468078613
    6. ' =' → logprob: -14.625134468078613
    7. '_ll' → logprob: -14.625134468078613
    8. '_L' → logprob: -14.750134468078613
    9. '_ls' → logprob: -15.125134468078613
    10. '_token' → logprob: -15.250134468078613

Token 82: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -8.149051427608356e-05
    2. '=' → logprob: -10.500081062316895
    3. ' =' → logprob: -10.750081062316895
    4. '   ' → logprob: -11.375081062316895
    5. '_cm' → logprob: -12.125081062316895
    6. 'cmb' → logprob: -12.125081062316895
    7. 'cms' → logprob: -12.500081062316895
    8. 'c' → logprob: -13.000081062316895
    9. 'm' → logprob: -13.875081062316895
    10. '       ' → logprob: -14.125081062316895

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891710847616196
    2. '=' → logprob: -2.5789170265197754
    3. ')' → logprob: -10.578917503356934
    4. ' ' → logprob: -14.578917503356934
    5. ')=' → logprob: -14.578917503356934
    6. ' =
' → logprob: -15.578917503356934
    7. ',' → logprob: -15.703917503356934
    8. ' =)' → logprob: -15.828917503356934
    9. '=l' → logprob: -15.828917503356934
    10. '(' → logprob: -16.078916549682617

Token 84: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.38687777519226074
    2. ' l' → logprob: -1.1368777751922607
    3. 'lc' → logprob: -12.88687801361084
    4. '	l' → logprob: -13.38687801361084
    5. ' ' → logprob: -14.26187801361084
    6. '   ' → logprob: -15.01187801361084
    7. '```' → logprob: -15.26187801361084
    8. 'all' → logprob: -15.51187801361084
    9. ' lc' → logprob: -15.63687801361084
    10. ' ' → logprob: -15.76187801361084

Token 85: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -1.759734732331708e-05
    2. 'c' → logprob: -11.375017166137695
    3. 'm' → logprob: -13.000017166137695
    4. '(cm' → logprob: -13.625017166137695
    5. ' cm' → logprob: -13.875017166137695
    6. 'cmb' → logprob: -14.500017166137695
    7. 'cms' → logprob: -14.750017166137695
    8. 'curr' → logprob: -15.000017166137695
    9. '(c' → logprob: -16.375017166137695
    10. '(curr' → logprob: -16.625017166137695

Token 86: '(curr' (ID: 49739)
  Prédit: '(curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(curr' → logprob: -0.07016639411449432
    2. '(' → logprob: -2.6951663494110107
    3. '(cur' → logprob: -9.57016658782959
    4. '<|end|>' → logprob: -9.82016658782959
    5. '(current' → logprob: -9.94516658782959
    6. ' (' → logprob: -10.19516658782959
    7. '(
' → logprob: -12.32016658782959
    8. ' ' → logprob: -12.69516658782959
    9. '(prev' → logprob: -12.82016658782959
    10. '[curr' → logprob: -12.94516658782959

Token 87: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0005121642025187612
    2. 'arr' → logprob: -8.00051212310791
    3. '(arr' → logprob: -9.75051212310791
    4. ')' → logprob: -10.50051212310791
    5. '       ' → logprob: -10.62551212310791
    6. '_' → logprob: -10.87551212310791
    7. '           ' → logprob: -11.75051212310791
    8. '   ' → logprob: -12.25051212310791
    9. '(i' → logprob: -12.50051212310791
    10. ',' → logprob: -13.00051212310791

Token 88: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.002251007128506899
    2. 'm' → logprob: -7.127251148223877
    3. 'c' → logprob: -7.502251148223877
    4. '   ' → logprob: -8.252250671386719
    5. 'arr' → logprob: -8.752250671386719
    6. ')' → logprob: -9.377250671386719
    7. '       ' → logprob: -9.377250671386719
    8. 'i' → logprob: -9.627250671386719
    9. ' cm' → logprob: -9.877250671386719
    10. '(i' → logprob: -10.377250671386719

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021862927824258804
    2. '(arr' → logprob: -3.8968629837036133
    3. ' ,' → logprob: -7.396862983703613
    4. '(' → logprob: -7.896862983703613
    5. ')' → logprob: -9.021862983703613
    6. 'arr' → logprob: -9.271862983703613
    7. '[arr' → logprob: -9.896862983703613
    8. '),' → logprob: -11.021862983703613
    9. ',
' → logprob: -11.396862983703613
    10. ' arr' → logprob: -12.021862983703613

Token 90: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.20142288506031036
    2. 'arr' → logprob: -1.701422929763794
    3. '(arr' → logprob: -12.201422691345215
    4. ' ' → logprob: -13.826422691345215
    5. '	arr' → logprob: -13.951422691345215
    6. ' ' → logprob: -14.326422691345215
    7. ')' → logprob: -14.576422691345215
    8. '[arr' → logprob: -14.701422691345215
    9. '$arr' → logprob: -14.951422691345215
    10. '_arr' → logprob: -15.326422691345215

Token 91: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004088609013706446
    2. '[' → logprob: -5.504088401794434
    3. '[
' → logprob: -12.254088401794434
    4. ')' → logprob: -13.254088401794434
    5. '```' → logprob: -13.879088401794434
    6. '[j' → logprob: -14.379088401794434
    7. ' ' → logprob: -14.754088401794434
    8. ')[' → logprob: -14.879088401794434
    9. '[I' → logprob: -14.879088401794434
    10. ']' → logprob: -15.504088401794434

Token 92: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06265103816986084
    2. '])' → logprob: -2.8126511573791504
    3. ')
' → logprob: -8.062650680541992
    4. ']' → logprob: -8.937650680541992
    5. '])
' → logprob: -9.562650680541992
    6. '))' → logprob: -9.562650680541992
    7. ')])' → logprob: -10.687650680541992
    8. '       ' → logprob: -10.937650680541992
    9. '`)' → logprob: -11.562650680541992
    10. ')]' → logprob: -11.562650680541992

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004315036640036851
    2. '        
' → logprob: -8.000431060791016
    3. '
' → logprob: -9.750431060791016
    4. '<|end|>' → logprob: -11.500431060791016
    5. ')' → logprob: -12.500431060791016
    6. '	' → logprob: -12.750431060791016
    7. '  
' → logprob: -12.875431060791016
    8. '   ' → logprob: -12.875431060791016
    9. '```' → logprob: -13.000431060791016
    10. '' → logprob: -13.000431060791016

Token 94: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6521705389022827
    2. '
' → logprob: -0.7771705389022827
    3. ')' → logprob: -5.027170658111572
    4. ')
' → logprob: -5.152170658111572
    5. '        
' → logprob: -5.402170658111572
    6. ' 
' → logprob: -7.652170658111572
    7. '' → logprob: -8.152170181274414
    8. '  
' → logprob: -8.277170181274414
    9. '    
' → logprob: -8.527170181274414
    10. '\n' → logprob: -8.527170181274414

Token 95: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.02325933612883091
    2. 'new' → logprob: -3.773259401321411
    3. ' not' → logprob: -12.148259162902832
    4. ' curr' → logprob: -13.398259162902832
    5. ' len' → logprob: -13.523259162902832
    6. '(new' → logprob: -13.773259162902832
    7. 'curr' → logprob: -14.148259162902832
    8. ' math' → logprob: -14.273259162902832
    9. ' True' → logprob: -14.773259162902832
    10. 'arr' → logprob: -15.023259162902832

Token 96: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -2.248469718324486e-05
    2. 'new' → logprob: -11.375022888183594
    3. 'l' → logprob: -12.625022888183594
    4. 'w' → logprob: -13.750022888183594
    5. '```' → logprob: -13.750022888183594
    6. '_w' → logprob: -14.250022888183594
    7. '_ls' → logprob: -14.750022888183594
    8. '\' → logprob: -14.875022888183594
    9. '_c' → logprob: -15.125022888183594
    10. '_ll' → logprob: -15.125022888183594

Token 97: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.0013096443144604564
    2. 'c' → logprob: -6.876309871673584
    3. 'new' → logprob: -8.376309394836426
    4. 'm' → logprob: -11.626309394836426
    5. 'cms' → logprob: -11.626309394836426
    6. '_c' → logprob: -12.126309394836426
    7. '_cm' → logprob: -12.376309394836426
    8. 'w' → logprob: -12.501309394836426
    9. '(new' → logprob: -12.751309394836426
    10. 'cs' → logprob: -12.751309394836426

Token 98: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03844799846410751
    2. '<=' → logprob: -3.4134480953216553
    3. ' !=' → logprob: -5.413447856903076
    4. '!=' → logprob: -8.163448333740234
    5. ' not' → logprob: -10.663448333740234
    6. ' ' → logprob: -11.788448333740234
    7. ' <' → logprob: -11.788448333740234
    8. '<' → logprob: -13.413448333740234
    9. ' ==' → logprob: -13.413448333740234
    10. 'not' → logprob: -13.788448333740234

Token 99: ' n' (ID: 297)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.43267691135406494
    2. '100' → logprob: -1.182676911354065
    3. '1' → logprob: -3.1826767921447754
    4. ' ' → logprob: -6.182676792144775
    5. 'max' → logprob: -8.057677268981934
    6. '200' → logprob: -8.307677268981934
    7. 'int' → logprob: -8.432677268981934
    8. '2' → logprob: -8.807677268981934
    9. '50' → logprob: -10.057677268981934
    10. '20' → logprob: -10.057677268981934

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023634426295757294
    2. ':
' → logprob: -4.148634433746338
    3. '):' → logprob: -5.023634433746338
    4. '):
' → logprob: -7.898634433746338
    5. ' and' → logprob: -8.14863395690918
    6. ' :' → logprob: -9.02363395690918
    7. '   ' → logprob: -9.39863395690918
    8. ']:' → logprob: -10.02363395690918
    9. '[' → logprob: -10.77363395690918
    10. '       ' → logprob: -10.89863395690918

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005200279993005097
    2. '            
' → logprob: -8.250519752502441
    3. '
' → logprob: -9.250519752502441
    4. '<|end|>' → logprob: -10.125519752502441
    5. '               ' → logprob: -10.625519752502441
    6. '       ' → logprob: -11.000519752502441
    7. '```' → logprob: -11.125519752502441
    8. '<|end|>' → logprob: -11.250519752502441
    9. '\n' → logprob: -11.875519752502441
    10. ')' → logprob: -12.000519752502441

Token 102: ' back' (ID: 1602)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12685680389404297
    2. ' back' → logprob: -2.626856803894043
    3. '           ' → logprob: -3.626856803894043
    4. 'back' (adapté à ' back') → logprob: -4.001856803894043
    5. ' ' → logprob: -7.376856803894043
    6. '                
' → logprob: -7.626856803894043
    7. '
' → logprob: -7.626856803894043
    8. '            
' → logprob: -9.376856803894043
    9. ' 
' → logprob: -9.876856803894043
    10. '       ' → logprob: -10.251856803894043

Token 103: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -2.7610454708337784e-05
    2. 'tracking' → logprob: -11.250027656555176
    3. 'tr' → logprob: -12.125027656555176
    4. 't' → logprob: -12.625027656555176
    5. 'trace' → logprob: -12.875027656555176
    6. 'tracked' → logprob: -14.250027656555176
    7. '_track' → logprob: -14.500027656555176
    8. '(track' → logprob: -15.000027656555176
    9. '(i' → logprob: -15.125027656555176
    10. 'tracker' → logprob: -15.500027656555176

Token 104: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0006409500492736697
    2. '(' → logprob: -7.375640869140625
    3. ' (' → logprob: -11.875640869140625
    4. '```' → logprob: -12.875640869140625
    5. '(
' → logprob: -13.000640869140625
    6. '(n' → logprob: -14.125640869140625
    7. '(I' → logprob: -14.500640869140625
    8. '(ii' → logprob: -14.750640869140625
    9. '((' → logprob: -15.125640869140625
    10. '   ' → logprob: -16.250640869140625

Token 105: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740854501724243
    2. ' +' → logprob: -0.9740854501724243
    3. '+,' → logprob: -12.724085807800293
    4. ' ' → logprob: -13.349085807800293
    5. ',' → logprob: -13.724085807800293
    6. '+
' → logprob: -13.849085807800293
    7. ' +
' → logprob: -14.599085807800293
    8. '＋' → logprob: -14.849085807800293
    9. ' ,' → logprob: -15.224085807800293
    10. '()+' → logprob: -15.474085807800293

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015042672166600823
    2. ' ' → logprob: -6.501504421234131
    3. '```' → logprob: -13.626503944396973
    4. '   ' → logprob: -14.876503944396973
    5. '`' → logprob: -16.62650489807129
    6. '  ' → logprob: -16.81400489807129
    7. '2' → logprob: -17.00150489807129
    8. ')' → logprob: -17.06400489807129
    9. ',' → logprob: -17.18900489807129
    10. '    ' → logprob: -17.43900489807129

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.250005722045898
    3. 'i' → logprob: -15.000005722045898
    4. '```' → logprob: -15.187505722045898
    5. '   ' → logprob: -17.1875057220459
    6. '
' → logprob: -17.5625057220459
    7. '2' → logprob: -17.6875057220459
    8. ')' → logprob: -17.8125057220459
    9. '<|end|>' → logprob: -18.1250057220459
    10. 'arr' → logprob: -18.2500057220459

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002652109367772937
    2. ',new' → logprob: -6.002652168273926
    3. 'new' → logprob: -8.877652168273926
    4. ' ,' → logprob: -10.502652168273926
    5. ')' → logprob: -12.752652168273926
    6. ' new' → logprob: -13.127652168273926
    7. '(new' → logprob: -13.127652168273926
    8. ',
' → logprob: -14.627652168273926
    9. '```' → logprob: -14.877652168273926
    10. '`,' → logprob: -14.877652168273926

Token 109: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.4287068545818329
    2. ' new' → logprob: -1.0537068843841553
    3. ')new' → logprob: -13.178707122802734
    4. '	new' → logprob: -13.803707122802734
    5. '```' → logprob: -13.928707122802734
    6. 'New' → logprob: -14.553707122802734
    7. '_new' → logprob: -14.678707122802734
    8. ' ' → logprob: -15.303707122802734
    9. ')' → logprob: -15.428707122802734
    10. '[new' → logprob: -15.678707122802734

Token 110: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.1994775377388578e-05
    2. 'l' → logprob: -12.750012397766113
    3. '_c' → logprob: -12.875012397766113
    4. 'new' → logprob: -13.250012397766113
    5. '```' → logprob: -13.625012397766113
    6. '_cl' → logprob: -14.000012397766113
    7. 'cm' → logprob: -14.000012397766113
    8. 'c' → logprob: -14.500012397766113
    9. 's' → logprob: -15.500012397766113
    10. '_ls' → logprob: -15.750012397766113

Token 111: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.025638336315751076
    2. 'c' → logprob: -3.9006383419036865
    3. 'new' → logprob: -5.525638103485107
    4. 'm' → logprob: -7.025638103485107
    5. '_cm' → logprob: -9.775638580322266
    6. 'w' → logprob: -10.275638580322266
    7. '_c' → logprob: -10.900638580322266
    8. 'CM' → logprob: -11.150638580322266
    9. '```' → logprob: -11.400638580322266
    10. 'cms' → logprob: -11.650638580322266

Token 112: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3884044587612152
    2. ')' → logprob: -1.1384044885635376
    3. '       ' → logprob: -6.513404369354248
    4. ')
' → logprob: -10.263404846191406
    5. ')

' → logprob: -12.138404846191406
    6. ' )
' → logprob: -12.388404846191406
    7. '   ' → logprob: -13.138404846191406
    8. ' )' → logprob: -13.888404846191406
    9. ')`
' → logprob: -14.763404846191406
    10. ')\
' → logprob: -14.888404846191406

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016146517009474337
    2. '        
' → logprob: -9.625161170959473
    3. '```' → logprob: -10.375161170959473
    4. '<|end|>' → logprob: -10.625161170959473
    5. 'else' → logprob: -11.250161170959473
    6. '
' → logprob: -11.750161170959473
    7. 'back' → logprob: -12.125161170959473
    8. '   ' → logprob: -12.625161170959473
    9. ' else' → logprob: -13.125161170959473
    10. '           ' → logprob: -13.875161170959473

Token 114: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022422732785344124
    2. '
' → logprob: -3.8974227905273438
    3. '        
' → logprob: -6.897422790527344
    4. 'back' → logprob: -8.147422790527344
    5. '   ' → logprob: -8.397422790527344
    6. '#' (adapté à ' #') → logprob: -9.272422790527344
    7. ' back' → logprob: -9.397422790527344
    8. '```' → logprob: -9.647422790527344
    9. '    
' → logprob: -10.397422790527344
    10. '  
' → logprob: -10.522422790527344

Token 115: ' Ex' (ID: 1771)
  Prédit: 'Exclude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Exclude' → logprob: -0.11251012235879898
    2. ' Ex' → logprob: -2.4875102043151855
    3. ' Skip' → logprob: -4.2375102043151855
    4. ' back' → logprob: -5.8625102043151855
    5. 'back' → logprob: -6.2375102043151855
    6. 'Skip' → logprob: -6.2375102043151855
    7. 'Ex' → logprob: -7.3625102043151855
    8. 'exclude' → logprob: -7.6125102043151855
    9. 'Back' → logprob: -7.7375102043151855
    10. '#' → logprob: -9.112509727478027

Token 116: 'clude' (ID: 1472)
  Prédit: 'clude'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clude' → logprob: -0.005240514408797026
    2. 'lude' → logprob: -5.630240440368652
    3. '   ' → logprob: -7.130240440368652
    4. '#' → logprob: -7.380240440368652
    5. '       ' → logprob: -9.255240440368652
    6. 'clud' → logprob: -10.505240440368652
    7. '```' → logprob: -10.880240440368652
    8. '    ' → logprob: -10.880240440368652
    9. 'plore' → logprob: -11.505240440368652
    10. 'CLUDE' → logprob: -12.005240440368652

Token 117: ' arr' (ID: 1724)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.028424222022294998
    2. ' (' → logprob: -4.653424263000488
    3. ' i' → logprob: -4.903424263000488
    4. 'arr' → logprob: -5.528424263000488
    5. 'i' → logprob: -5.903424263000488
    6. '(arr' → logprob: -6.028424263000488
    7. '(' → logprob: -7.278424263000488
    8. '<|end|>' → logprob: -7.778424263000488
    9. ' ' → logprob: -8.778424263000488
    10. '<|end|>' → logprob: -8.903424263000488

Token 118: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00026646157493814826
    2. '[' → logprob: -8.500266075134277
    3. '```' → logprob: -10.500266075134277
    4. '(i' → logprob: -11.625266075134277
    5. '   ' → logprob: -12.125266075134277
    6. '\[' → logprob: -12.500266075134277
    7. ',' → logprob: -12.625266075134277
    8. 'i' → logprob: -12.875266075134277
    9. ')' → logprob: -13.125266075134277
    10. '       ' → logprob: -13.125266075134277

Token 119: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2141759693622589
    2. ')
' → logprob: -1.8391759395599365
    3. ',' → logprob: -3.7141759395599365
    4. '       ' → logprob: -4.714176177978516
    5. '   ' → logprob: -8.839176177978516
    6. '):
' → logprob: -9.589176177978516
    7. ' )' → logprob: -9.839176177978516
    8. ' ,' → logprob: -10.214176177978516
    9. ' )
' → logprob: -10.464176177978516
    10. ',
' → logprob: -10.464176177978516

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046618093620054424
    2. ' back' → logprob: -8.250466346740723
    3. 'back' → logprob: -8.625466346740723
    4. '
' → logprob: -11.500466346740723
    5. '   ' → logprob: -12.250466346740723
    6. '        
' → logprob: -12.375466346740723
    7. '```' → logprob: -12.375466346740723
    8. '	back' → logprob: -14.750466346740723
    9. '           ' → logprob: -15.000466346740723
    10. '``' → logprob: -15.125466346740723

Token 121: ' back' (ID: 1602)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' (adapté à ' back') → logprob: -0.38758236169815063
    2. ' back' → logprob: -1.1375823020935059
    3. '       ' → logprob: -7.262582302093506
    4. '   ' → logprob: -12.637582778930664
    5. '	back' → logprob: -12.637582778930664
    6. '(back' → logprob: -13.637582778930664
    7. '_back' → logprob: -14.887582778930664
    8. '.back' → logprob: -14.887582778930664
    9. '
' → logprob: -14.887582778930664
    10. '```' → logprob: -15.262582778930664

Token 122: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -8.895480277715251e-06
    2. 't' → logprob: -12.750008583068848
    3. 'tr' → logprob: -12.750008583068848
    4. 'tract' → logprob: -13.125008583068848
    5. 'tracking' → logprob: -14.875008583068848
    6. 'trace' → logprob: -15.375008583068848
    7. 'tra' → logprob: -15.875008583068848
    8. ' track' → logprob: -16.625009536743164
    9. 'rack' → logprob: -16.625009536743164
    10. '   ' → logprob: -16.875009536743164

Token 123: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.6087021473795176e-05
    2. '(' → logprob: -10.000045776367188
    3. ' (' → logprob: -14.875045776367188
    4. '(I' → logprob: -15.125045776367188
    5. '(ii' → logprob: -16.875045776367188
    6. '(
' → logprob: -18.375045776367188
    7. '```' → logprob: -18.375045776367188
    8. ')(' → logprob: -19.625045776367188
    9. '(n' → logprob: -19.750045776367188
    10. '   ' → logprob: -19.875045776367188

Token 124: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132862150669098
    2. '+' → logprob: -1.3132861852645874
    3. ',' → logprob: -11.688285827636719
    4. '+i' → logprob: -11.938285827636719
    5. ' ' → logprob: -12.188285827636719
    6. ')' → logprob: -14.063285827636719
    7. ' ,' → logprob: -14.188285827636719
    8. '(i' → logprob: -14.688285827636719
    9. '＋' → logprob: -14.688285827636719
    10. '+,' → logprob: -15.188285827636719

Token 125: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008070098701864481
    2. ' ' → logprob: -7.12580680847168
    3. '```' → logprob: -13.62580680847168
    4. '+' → logprob: -14.37580680847168
    5. '   ' → logprob: -15.25080680847168
    6. '<|end|>' → logprob: -15.37580680847168
    7. '
' → logprob: -16.25080680847168
    8. '  ' → logprob: -16.50080680847168
    9. '2' → logprob: -17.37580680847168
    10. '``' → logprob: -17.62580680847168

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.250005722045898
    3. '+' → logprob: -14.500005722045898
    4. 'i' → logprob: -15.500005722045898
    5. '```' → logprob: -16.8750057220459
    6. '(i' → logprob: -17.6250057220459
    7. '(' → logprob: -18.5000057220459
    8. '   ' → logprob: -18.6250057220459
    9. '2' → logprob: -19.1250057220459
    10. ')' → logprob: -19.5000057220459

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.657694418914616e-05
    2. ' ,' → logprob: -10.125056266784668
    3. ')' → logprob: -11.500056266784668
    4. ',
' → logprob: -12.250056266784668
    5. ',i' → logprob: -13.750056266784668
    6. ',n' → logprob: -16.750057220458984
    7. ',current' → logprob: -16.750057220458984
    8. ',c' → logprob: -16.875057220458984
    9. ',int' → logprob: -17.125057220458984
    10. '   ' → logprob: -17.375057220458984

Token 128: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.014164221473038197
    2. ' curr' → logprob: -4.264164447784424
    3. '(curr' → logprob: -15.389163970947266
    4. '	curr' → logprob: -15.389163970947266
    5. '[curr' → logprob: -15.639163970947266
    6. ' ' → logprob: -16.639163970947266
    7. ')' → logprob: -17.639163970947266
    8. '_curr' → logprob: -17.889163970947266
    9. '.curr' → logprob: -18.139163970947266
    10. 'Curr' → logprob: -18.639163970947266

Token 129: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.0
    3. ')' → logprob: -16.25
    4. 'l' → logprob: -17.0
    5. ' _' → logprob: -17.875
    6. '_m' → logprob: -18.375
    7. ')_' → logprob: -19.375
    8. '_)' → logprob: -19.625
    9. '_ll' → logprob: -19.625
    10. '_ls' → logprob: -19.75

Token 130: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -7.822646693966817e-06
    2. 'm' → logprob: -12.625007629394531
    3. 'c' → logprob: -13.750007629394531
    4. ')' → logprob: -13.875007629394531
    5. '_cm' → logprob: -14.375007629394531
    6. ' cm' → logprob: -14.500007629394531
    7. '   ' → logprob: -14.750007629394531
    8. 'CM' → logprob: -14.875007629394531
    9. 'cms' → logprob: -15.000007629394531
    10. 'curr' → logprob: -16.62500762939453

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016718693950679153
    2. ')
' → logprob: -9.375166893005371
    3. '   ' → logprob: -9.500166893005371
    4. '       ' → logprob: -12.375166893005371
    5. ' )' → logprob: -13.625166893005371
    6. '<|end|>' → logprob: -14.500166893005371
    7. ')return' → logprob: -15.125166893005371
    8. ')

' → logprob: -15.375166893005371
    9. '```' → logprob: -15.750166893005371
    10. '}' → logprob: -16.250167846679688

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49652397632598877
    2. '
' → logprob: -1.1215239763259888
    3. 'return' → logprob: -3.746523857116699
    4. '<|end|>' → logprob: -3.746523857116699
    5. '    
' → logprob: -4.496523857116699
    6. 'n' → logprob: -6.246523857116699
    7. ' return' → logprob: -6.746523857116699
    8. '	return' → logprob: -6.996523857116699
    9. '  
' → logprob: -7.246523857116699
    10. ')' → logprob: -7.746523857116699

Token 133: ' back' (ID: 1602)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13578985631465912
    2. '
' → logprob: -3.2607898712158203
    3. 'back' (adapté à ' back') → logprob: -3.2607898712158203
    4. 'return' → logprob: -3.8857898712158203
    5. '    
' → logprob: -4.63578987121582
    6. ')' → logprob: -5.13578987121582
    7. 'n' → logprob: -5.63578987121582
    8. ' ' → logprob: -5.88578987121582
    9. ' return' → logprob: -6.26078987121582
    10. '  
' → logprob: -6.38578987121582

Token 134: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -2.176947600673884e-05
    2. 'tracking' → logprob: -12.000021934509277
    3. 't' → logprob: -12.375021934509277
    4. '   ' → logprob: -12.875021934509277
    5. 'tract' → logprob: -12.875021934509277
    6. 'tr' → logprob: -13.250021934509277
    7. '(track' → logprob: -13.625021934509277
    8. 'trace' → logprob: -13.875021934509277
    9. '_track' → logprob: -14.375021934509277
    10. '       ' → logprob: -15.000021934509277

Token 135: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.191489642835222e-05
    2. '(len' → logprob: -10.375041961669922
    3. '0' → logprob: -11.625041961669922
    4. ' (' → logprob: -13.375041961669922
    5. '(
' → logprob: -16.625041961669922
    6. 'len' → logprob: -16.875041961669922
    7. '<|end|>' → logprob: -16.875041961669922
    8. ')(' → logprob: -17.375041961669922
    9. '(n' → logprob: -17.500041961669922
    10. '((' → logprob: -18.375041961669922

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.500011444091797
    3. ')' → logprob: -14.375011444091797
    4. '(' → logprob: -14.875011444091797
    5. '<|end|>' → logprob: -15.750011444091797
    6. '1' → logprob: -16.250011444091797
    7. '   ' → logprob: -16.625011444091797
    8. '
' → logprob: -16.687511444091797
    9. '۰' → logprob: -16.750011444091797
    10. ',' → logprob: -16.875011444091797

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3544423381972592e-05
    2. ')' → logprob: -12.50001335144043
    3. '1' → logprob: -12.62501335144043
    4. ',
' → logprob: -12.75001335144043
    5. ' ,' → logprob: -13.12501335144043
    6. '0' → logprob: -14.00001335144043
    7. ',n' → logprob: -15.00001335144043
    8. ',

' → logprob: -16.37501335144043
    9. '```' → logprob: -16.37501335144043
    10. ' ' → logprob: -17.00001335144043

Token 138: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.000030517578125
    4. ')' → logprob: -17.750030517578125
    5. '<|end|>' → logprob: -18.125030517578125
    6. '  ' → logprob: -18.375030517578125
    7. '۱' → logprob: -18.750030517578125
    8. '```' → logprob: -18.875030517578125
    9. '    ' → logprob: -20.000030517578125
    10. 'def' → logprob: -20.062530517578125

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '  ' → logprob: -18.875001907348633
    5. ')' → logprob: -19.125001907348633
    6. '<|end|>' → logprob: -19.125001907348633
    7. '```' → logprob: -19.625001907348633
    8. '۱' → logprob: -20.000001907348633
    9. '    ' → logprob: -20.250001907348633
    10. '`' → logprob: -20.500001907348633

Token 140: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002476604888215661
    2. ')
' → logprob: -6.002476692199707
    3. ' )' → logprob: -14.627476692199707
    4. ')
' → logprob: -15.252476692199707
    5. ')

' → logprob: -15.627476692199707
    6. ')n' → logprob: -16.75247573852539
    7. '),' → logprob: -16.87747573852539
    8. ')return' → logprob: -17.00247573852539
    9. ')`' → logprob: -18.00247573852539
    10. '))' → logprob: -18.25247573852539

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00341463228687644
    2. 'return' → logprob: -6.378414630889893
    3. ' return' → logprob: -7.003414630889893
    4. '<|end|>' → logprob: -7.628414630889893
    5. '	return' → logprob: -8.75341510772705
    6. '    
' → logprob: -9.37841510772705
    7. '
' → logprob: -9.87841510772705
    8. '<|end|>' → logprob: -12.12841510772705
    9. 'n' → logprob: -13.00341510772705
    10. ' ' → logprob: -13.12841510772705

Token 142: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25517114996910095
    2. '   ' → logprob: -1.5051711797714233
    3. ' return' → logprob: -5.755171298980713
    4. ' ' → logprob: -10.130170822143555
    5. '	return' → logprob: -10.880170822143555
    6. '  ' → logprob: -12.255170822143555
    7. '    
' → logprob: -13.505170822143555
    8. 'def' → logprob: -13.755170822143555
    9. '
' → logprob: -13.880170822143555
    10. '```' → logprob: -14.505170822143555

Token 143: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.005624308250844479
    2. ' res' → logprob: -5.255624294281006
    3. 'set' → logprob: -8.130624771118164
    4. 'list' → logprob: -9.380624771118164
    5. ' set' → logprob: -12.005624771118164
    6. ' list' → logprob: -12.880624771118164
    7. 'sorted' → logprob: -12.880624771118164
    8. ' ' → logprob: -15.755624771118164
    9. '(res' → logprob: -16.005624771118164
    10. 're' → logprob: -16.380624771118164

Token 144: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: 'input' (ID: 2586)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004900033236481249
    2. '#' → logprob: -9.250490188598633
    3. 'print' → logprob: -9.375490188598633
    4. 'arr' → logprob: -9.375490188598633
    5. 'for' → logprob: -9.625490188598633
    6. 'result' → logprob: -10.500490188598633
    7. 'nums' → logprob: -11.250490188598633
    8. 'input' → logprob: -11.375490188598633
    9. 'results' → logprob: -11.375490188598633
    10. 'data' → logprob: -11.625490188598633

Token 146: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06524402648210526
    2. '_data' → logprob: -3.06524395942688
    3. '(' → logprob: -4.440244197845459
    4. ' =' → logprob: -6.815244197845459
    5. '_lines' → logprob: -7.315244197845459
    6. 'data' → logprob: -7.440244197845459
    7. '_line' → logprob: -7.690244197845459
    8. '_' → logprob: -7.940244197845459
    9. 's' → logprob: -8.1902437210083
    10. '().' → logprob: -8.3152437210083

Token 147: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.48946934938430786
    2. ' sys' → logprob: -0.9894693493843079
    3. 'input' → logprob: -4.364469528198242
    4. ' input' → logprob: -5.989469528198242
    5. 'lambda' → logprob: -10.989469528198242
    6. '	sys' → logprob: -11.989469528198242
    7. '=sys' → logprob: -11.989469528198242
    8. ' lambda' → logprob: -12.114469528198242
    9. '(sys' → logprob: -12.864469528198242
    10. 'list' → logprob: -13.114469528198242

Token 148: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00025430647656321526
    2. '.readline' → logprob: -9.37525463104248
    3. '.' → logprob: -9.50025463104248
    4. '.stdout' → logprob: -10.25025463104248
    5. '.argv' → logprob: -10.37525463104248
    6. '.input' → logprob: -11.37525463104248
    7. '.std' → logprob: -12.00025463104248
    8. ' .' → logprob: -12.37525463104248
    9. 'stdin' → logprob: -13.25025463104248
    10. '.next' → logprob: -13.37525463104248

Token 149: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.013406912796199322
    2. '.read' → logprob: -4.888406753540039
    3. '.' → logprob: -5.638406753540039
    4. '.readlines' → logprob: -6.138406753540039
    5. 'read' → logprob: -10.138406753540039
    6. ' .' → logprob: -11.263406753540039
    7. '.buffer' → logprob: -11.888406753540039
    8. '```' → logprob: -13.388406753540039
    9. '.stdin' → logprob: -13.513406753540039
    10. '.Read' → logprob: -14.013406753540039

Token 150: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3993905484676361
    2. '()
' → logprob: -2.024390459060669
    3. '().' → logprob: -2.024390459060669
    4. '
' → logprob: -2.774390459060669
    5. '()\' → logprob: -7.149390697479248
    6. '()

' → logprob: -7.649390697479248
    7. '(' → logprob: -8.02439022064209
    8. '(n' → logprob: -8.39939022064209
    9. '  
' → logprob: -8.52439022064209
    10. '(
' → logprob: -9.02439022064209

Token 151: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002843384863808751
    2. '(n' → logprob: -9.125284194946289
    3. '
' → logprob: -9.625284194946289
    4. '<|end|>' → logprob: -10.375284194946289
    5. ' n' → logprob: -10.750284194946289
    6. '```' → logprob: -11.125284194946289
    7. '()' → logprob: -11.750284194946289
    8. '\n' → logprob: -12.250284194946289
    9. '  
' → logprob: -12.375284194946289
    10. '(' → logprob: -12.625284194946289

Token 152: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.01821303926408291
    2. 'True' → logprob: -4.018213272094727
    3. ' n' → logprob: -10.268213272094727
    4. '(True' → logprob: -10.893213272094727
    5. ' ' → logprob: -12.518213272094727
    6. 'n' → logprob: -12.768213272094727
    7. '1' → logprob: -13.393213272094727
    8. 'true' → logprob: -15.018213272094727
    9. ' line' → logprob: -15.143213272094727
    10. ' not' → logprob: -15.143213272094727

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011583181098103523
    2. '():' → logprob: -4.51158332824707
    3. ':
' → logprob: -8.13658332824707
    4. ' :' → logprob: -8.63658332824707
    5. ',' → logprob: -10.63658332824707
    6. '():
' → logprob: -10.88658332824707
    7. '(' → logprob: -11.51158332824707
    8. '):' → logprob: -12.63658332824707
    9. ':**' → logprob: -12.88658332824707
    10. '   ' → logprob: -13.38658332824707

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007953084073960781
    2. ' n' → logprob: -5.75795316696167
    3. ' try' → logprob: -6.13295316696167
    4. 'n' → logprob: -6.75795316696167
    5. ' line' → logprob: -6.75795316696167
    6. '    
' → logprob: -9.257952690124512
    7. 'try' → logprob: -9.507952690124512
    8. '(n' → logprob: -11.257952690124512
    9. '	n' → logprob: -11.507952690124512
    10. '<|end|>' → logprob: -11.507952690124512

Token 155: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.4266488552093506
    2. ' line' → logprob: -1.6766488552093506
    3. ' n' → logprob: -1.9266488552093506
    4. 'line' → logprob: -4.42664909362793
    5. '   ' → logprob: -6.17664909362793
    6. ' try' → logprob: -7.92664909362793
    7. 'try' → logprob: -8.30164909362793
    8. '	n' → logprob: -11.67664909362793
    9. 's' → logprob: -12.17664909362793
    10. ' s' → logprob: -12.42664909362793

Token 156: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42885297536849976
    2. ' =' → logprob: -1.0538530349731445
    3. ',' → logprob: -9.428853034973145
    4. '=int' → logprob: -10.053853034973145
    5. ' =
' → logprob: -11.553853034973145
    6. '=input' → logprob: -11.928853034973145
    7. ' ' → logprob: -12.303853034973145
    8. '=
' → logprob: -13.053853034973145
    9. '=line' → logprob: -13.303853034973145
    10. '=

' → logprob: -13.928853034973145

Token 157: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.11472051590681076
    2. 'k' → logprob: -2.239720582962036
    3. 'd' → logprob: -7.739720344543457
    4. ' m' → logprob: -7.864720344543457
    5. 'arr' → logprob: -8.614720344543457
    6. 'q' → logprob: -8.739720344543457
    7. 'b' → logprob: -9.489720344543457
    8. 'c' → logprob: -9.739720344543457
    9. 'r' → logprob: -9.739720344543457
    10. '=' → logprob: -9.739720344543457

Token 158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14268052577972412
    2. ' =' → logprob: -2.0176806449890137
    3. '=input' → logprob: -13.392680168151855
    4. ' ' → logprob: -13.642680168151855
    5. '=line' → logprob: -13.642680168151855
    6. '＝' → logprob: -14.517680168151855
    7. '<|end|>' → logprob: -16.017681121826172
    8. ')' → logprob: -16.017681121826172
    9. '=sys' → logprob: -16.267681121826172
    10. '=subprocess' → logprob: -16.267681121826172

Token 159: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.2014361321926117
    2. ' map' → logprob: -1.701436161994934
    3. 'list' → logprob: -11.076436042785645
    4. '(map' → logprob: -12.576436042785645
    5. 'input' → logprob: -13.576436042785645
    6. ' list' → logprob: -13.701436042785645
    7. '	map' → logprob: -14.076436042785645
    8. '[' → logprob: -15.201436042785645
    9. 'sys' → logprob: -15.701436042785645
    10. ' ' → logprob: -15.951436042785645

Token 160: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4982714354991913
    2. '(input' → logprob: -1.2482714653015137
    3. '(' → logprob: -2.3732714653015137
    4. '(sys' → logprob: -4.873271465301514
    5. '(str' → logprob: -5.498271465301514
    6. '(list' → logprob: -7.873271465301514
    7. '(map' → logprob: -10.623270988464355
    8. '(
' → logprob: -10.873270988464355
    9. '(lambda' → logprob: -11.373270988464355
    10. ' (' → logprob: -11.623270988464355

Token 161: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.4774777293205261
    2. '(input' → logprob: -1.102477788925171
    3. '(' → logprob: -4.102477550506592
    4. 'input' → logprob: -4.227477550506592
    5. ',input' → logprob: -4.852477550506592
    6. 'sys' → logprob: -5.102477550506592
    7. ',' → logprob: -6.602477550506592
    8. ')' → logprob: -7.602477550506592
    9. '=sys' → logprob: -8.72747802734375
    10. ' (' → logprob: -8.72747802734375

Token 162: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005262218415737152
    2. ' input' → logprob: -5.25526237487793
    3. 'sys' → logprob: -10.50526237487793
    4. ' sys' → logprob: -13.88026237487793
    5. '(input' → logprob: -17.25526237487793
    6. '=input' → logprob: -18.50526237487793
    7. 'str' → logprob: -18.75526237487793
    8. ',input' → logprob: -19.00526237487793
    9. ')' → logprob: -19.13026237487793
    10. '[input' → logprob: -19.50526237487793

Token 163: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.318681188422488e-05
    2. '()' → logprob: -11.25001335144043
    3. ' ().' → logprob: -15.75001335144043
    4. '()
' → logprob: -18.00001335144043
    5. '(' → logprob: -19.25001335144043
    6. '()

' → logprob: -21.00001335144043
    7. '.strip' → logprob: -21.25001335144043
    8. ' ()' → logprob: -21.75001335144043
    9. '   ' → logprob: -22.00001335144043
    10. '())' → logprob: -22.12501335144043

Token 164: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.47565698623657227
    2. 'split' → logprob: -0.9756569862365723
    3. 'rstrip' → logprob: -6.475656986236572
    4. 'read' → logprob: -10.475656509399414
    5. '().' → logprob: -11.975656509399414
    6. ' strip' → logprob: -13.100656509399414
    7. '(strip' → logprob: -15.225656509399414
    8. '(split' → logprob: -15.225656509399414
    9. ')' → logprob: -15.350656509399414
    10. ' split' → logprob: -15.475656509399414

Token 165: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13563914597034454
    2. ')' → logprob: -2.135639190673828
    3. '()' → logprob: -4.760639190673828
    4. '())
' → logprob: -9.510639190673828
    5. '(' → logprob: -10.635639190673828
    6. '(),' → logprob: -12.260639190673828
    7. '()
' → logprob: -12.760639190673828
    8. ')
' → logprob: -13.385639190673828
    9. '))' → logprob: -13.510639190673828
    10. '()))' → logprob: -13.635639190673828

Token 166: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3134858012199402
    2. 'if' (adapté à ' if') → logprob: -1.313485860824585
    3. '   ' → logprob: -8.563486099243164
    4. '    ' → logprob: -11.313486099243164
    5. ' 
' → logprob: -12.188486099243164
    6. ' ' → logprob: -12.563486099243164
    7. '	if' → logprob: -12.688486099243164
    8. '    
' → logprob: -12.813486099243164
    9. '<|end|>' → logprob: -12.938486099243164
    10. '
' → logprob: -13.313486099243164

Token 168: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.061972394585609436
    2. 'n' → logprob: -2.8119723796844482
    3. ' not' → logprob: -13.436972618103027
    4. '	n' → logprob: -13.811972618103027
    5. ' (' → logprob: -14.311972618103027
    6. '(n' → logprob: -14.311972618103027
    7. ' ' → logprob: -14.561972618103027
    8. ' ' → logprob: -14.811972618103027
    9. '(' → logprob: -15.686972618103027
    10. '   ' → logprob: -17.56197166442871

Token 169: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6328336000442505
    2. '==' → logprob: -0.7578336000442505
    3. ' ' → logprob: -8.507833480834961
    4. '=' → logprob: -11.007833480834961
    5. ',' → logprob: -12.257833480834961
    6. ')==' → logprob: -12.507833480834961
    7. '0' → logprob: -13.382833480834961
    8. '()==' → logprob: -13.632833480834961
    9. '===' → logprob: -14.257833480834961
    10. ')' → logprob: -14.257833480834961

Token 170: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. 'm' → logprob: -17.375627517700195
    4. '۰' → logprob: -17.750627517700195
    5. '```' → logprob: -18.125627517700195
    6. ' ' → logprob: -18.125627517700195
    7. '   ' → logprob: -18.563127517700195
    8. '  ' → logprob: -18.625627517700195
    9. '０' → logprob: -18.688127517700195
    10. 's' → logprob: -19.063127517700195

Token 171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.000045776367188
    3. 'm' → logprob: -15.750045776367188
    4. '```' → logprob: -16.562545776367188
    5. '۰' → logprob: -17.250045776367188
    6. '０' → logprob: -17.937545776367188
    7. 's' → logprob: -18.125045776367188
    8. 'and' → logprob: -18.750045776367188
    9. 'o' → logprob: -18.750045776367188
    10. '-' → logprob: -18.875045776367188

Token 172: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2519381642341614
    2. 'and' → logprob: -1.5019381046295166
    3. ' or' → logprob: -12.501937866210938
    4. '	and' → logprob: -13.001937866210938
    5. '   ' → logprob: -13.376937866210938
    6. ' ' → logprob: -14.751937866210938
    7. '0' → logprob: -14.751937866210938
    8. ',' → logprob: -15.126937866210938
    9. ' и' → logprob: -15.501937866210938
    10. ' ' → logprob: -16.501937866210938

Token 173: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00317783304490149
    2. ' m' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.128177642822266
    4. '  ' → logprob: -18.253177642822266
    5. '	m' → logprob: -18.503177642822266
    6. ' ' → logprob: -19.753177642822266
    7. ' ' → logprob: -20.128177642822266
    8. '    ' → logprob: -22.503177642822266
    9. '0' → logprob: -23.253177642822266
    10. 'n' → logprob: -23.503177642822266

Token 174: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31327006220817566
    2. '==' → logprob: -1.313270092010498
    3. '<|end|>' → logprob: -13.06326961517334
    4. ')==' → logprob: -13.31326961517334
    5. ' ' → logprob: -13.68826961517334
    6. '0' → logprob: -13.68826961517334
    7. ' ' → logprob: -13.93826961517334
    8. '()==' → logprob: -15.06326961517334
    9. '=' → logprob: -15.18826961517334
    10. ']==' → logprob: -15.56326961517334

Token 175: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '```' → logprob: -17.625139236450195
    4. '۰' → logprob: -17.750139236450195
    5. '   ' → logprob: -18.375139236450195
    6. '<|end|>' → logprob: -18.750139236450195
    7. ' ' → logprob: -18.875139236450195
    8. '০' → logprob: -19.062639236450195
    9. '  ' → logprob: -19.250139236450195
    10. 'o' → logprob: -19.687639236450195

Token 176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -17.250017166137695
    4. '<|end|>' → logprob: -17.500017166137695
    5. '۰' → logprob: -17.750017166137695
    6. '<|end|>' → logprob: -18.562517166137695
    7. '০' → logprob: -18.625017166137695
    8. '   ' → logprob: -18.875017166137695
    9. '०' → logprob: -19.062517166137695
    10. 'o' → logprob: -19.750017166137695

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14380864799022675
    2. ':
' → logprob: -2.018808603286743
    3. '   ' → logprob: -7.143808841705322
    4. '       ' → logprob: -8.018808364868164
    5. '):
' → logprob: -12.768808364868164
    6. ':return' → logprob: -12.768808364868164
    7. ',' → logprob: -12.893808364868164
    8. ' :' → logprob: -14.018808364868164
    9. ' :
' → logprob: -14.018808364868164
    10. ':
' → logprob: -14.393808364868164

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047773998812772334
    2. ':' → logprob: -7.8754777908325195
    3. ':
' → logprob: -9.62547779083252
    4. '   ' → logprob: -10.62547779083252
    5. '      ' → logprob: -13.37547779083252
    6. ',' → logprob: -13.50047779083252
    7. '     ' → logprob: -14.00047779083252
    8. '           ' → logprob: -14.12547779083252
    9. ' break' → logprob: -14.37547779083252
    10. '	' → logprob: -14.75047779083252

Token 179: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6083347201347351
    2. 'break' (adapté à ' break') → logprob: -1.1083347797393799
    3. '       ' → logprob: -2.10833477973938
    4. '   ' → logprob: -5.858334541320801
    5. '	break' → logprob: -6.733334541320801
    6. '           ' → logprob: -8.9833345413208
    7. '
' → logprob: -11.8583345413208
    8. '_break' → logprob: -11.9833345413208
    9. ' ' → logprob: -12.9833345413208
    10. '        
' → logprob: -13.8583345413208

Token 180: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018453403608873487
    2. 'arr' → logprob: -6.751845359802246
    3. '    
' → logprob: -7.626845359802246
    4. '	arr' → logprob: -9.751845359802246
    5. '<|end|>' → logprob: -10.126845359802246
    6. '
' → logprob: -10.376845359802246
    7. ' arr' → logprob: -11.376845359802246
    8. '```' → logprob: -11.501845359802246
    9. 'tokens' → logprob: -11.751845359802246
    10. '[arr' → logprob: -12.001845359802246

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1804169863462448
    2. 'arr' → logprob: -1.8054169416427612
    3. ' arr' → logprob: -7.930417060852051
    4. '    
' → logprob: -9.55541706085205
    5. 'nums' → logprob: -9.68041706085205
    6. '	arr' → logprob: -9.80541706085205
    7. 'a' → logprob: -10.30541706085205
    8. 'numbers' → logprob: -11.18041706085205
    9. 'arrays' → logprob: -11.43041706085205
    10. '```' → logprob: -11.43041706085205

Token 182: ' p' (ID: 275)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.002855159342288971
    2. '   ' → logprob: -6.62785530090332
    3. 'pr' → logprob: -7.37785530090332
    4. 'nums' → logprob: -8.00285530090332
    5. ' arr' → logprob: -8.87785530090332
    6. 'numbers' → logprob: -8.87785530090332
    7. 'div' → logprob: -9.37785530090332
    8. 'a' → logprob: -9.50285530090332
    9. 'f' → logprob: -10.62785530090332
    10. 'prime' → logprob: -11.00285530090332

Token 183: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03617178276181221
    2. ' =' → logprob: -3.4111716747283936
    3. '=' → logprob: -6.161171913146973
    4. 'rim' → logprob: -9.161171913146973
    5. 's' → logprob: -9.786171913146973
    6. 'riv' → logprob: -10.411171913146973
    7. '=[]' → logprob: -10.536171913146973
    8. 'arr' → logprob: -10.536171913146973
    9. 'rices' → logprob: -10.661171913146973
    10. 'rin' → logprob: -11.286171913146973

Token 184: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.022327613085508347
    2. ' list' → logprob: -4.022327423095703
    3. '[list' → logprob: -5.522327423095703
    4. '[' → logprob: -9.147327423095703
    5. '[]' → logprob: -10.397327423095703
    6. ' [' → logprob: -11.522327423095703
    7. '[n' → logprob: -12.022327423095703
    8. '[m' → logprob: -12.272327423095703
    9. '[l' → logprob: -12.647327423095703
    10. '[]
' → logprob: -12.647327423095703

Token 185: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.690834273584187e-05
    2. '(' → logprob: -10.37503719329834
    3. '(range' → logprob: -12.62503719329834
    4. 'map' → logprob: -13.37503719329834
    5. '(int' → logprob: -14.25003719329834
    6. '(p' → logprob: -16.750036239624023
    7. '(input' → logprob: -17.000036239624023
    8. '(
' → logprob: -17.250036239624023
    9. '	map' → logprob: -17.250036239624023
    10. '(list' → logprob: -18.375036239624023

Token 186: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02656140923500061
    2. 'int' → logprob: -3.6515614986419678
    3. '[int' → logprob: -8.901561737060547
    4. ',int' → logprob: -9.901561737060547
    5. ' int' → logprob: -10.276561737060547
    6. '=int' → logprob: -11.401561737060547
    7. '<int' → logprob: -11.651561737060547
    8. ']int' → logprob: -11.901561737060547
    9. '```' → logprob: -12.151561737060547
    10. '(' → logprob: -12.401561737060547

Token 187: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6114820837974548
    2. ',' → logprob: -1.3614821434020996
    3. ',input' → logprob: -1.6114821434020996
    4. 'input' → logprob: -6.7364821434021
    5. '(' → logprob: -7.8614821434021
    6. ' ,' → logprob: -12.611481666564941
    7. '=input' → logprob: -13.486481666564941
    8. '[input' → logprob: -14.111481666564941
    9. ' (' → logprob: -14.236481666564941
    10. '<input' → logprob: -14.236481666564941

Token 188: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005233882926404476
    2. ' input' → logprob: -5.2552337646484375
    3. 'lambda' → logprob: -18.630233764648438
    4. '	input' → logprob: -18.755233764648438
    5. '(input' → logprob: -18.880233764648438
    6. '   ' → logprob: -18.880233764648438
    7. ' ' → logprob: -19.130233764648438
    8. '<input' → logprob: -19.380233764648438
    9. 'sys' → logprob: -19.630233764648438
    10. ',input' → logprob: -20.005233764648438

Token 189: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.630610641877865e-06
    2. '()' → logprob: -12.000006675720215
    3. ' ().' → logprob: -15.500006675720215
    4. '(' → logprob: -15.625006675720215
    5. '.readline' → logprob: -16.7500057220459
    6. '().__' → logprob: -18.5000057220459
    7. '()[' → logprob: -18.6250057220459
    8. '.split' → logprob: -19.0000057220459
    9. '()
' → logprob: -19.5000057220459
    10. '()))' → logprob: -19.7500057220459

Token 190: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.5027299822540954e-05
    2. 'strip' → logprob: -10.375055313110352
    3. 'rstrip' → logprob: -10.750055313110352
    4. 'read' → logprob: -13.500055313110352
    5. ' split' → logprob: -14.250055313110352
    6. '(split' → logprob: -15.875055313110352
    7. 'spl' → logprob: -16.12505531311035
    8. '.split' → logprob: -18.62505531311035
    9. 'plit' → logprob: -18.87505531311035
    10. '.readline' → logprob: -19.75005531311035

Token 191: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02301449328660965
    2. '()' → logprob: -4.523014545440674
    3. '))' → logprob: -4.523014545440674
    4. '())' → logprob: -7.398014545440674
    5. '(' → logprob: -8.023014068603516
    6. '()))
' → logprob: -9.523014068603516
    7. '()));' → logprob: -11.023014068603516
    8. ')' → logprob: -12.773014068603516
    9. '(),' → logprob: -13.398014068603516
    10. '()))

' → logprob: -14.023014068603516

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08759406208992004
    2. '
' → logprob: -2.8375940322875977
    3. 'res' → logprob: -4.587594032287598
    4. '    
' → logprob: -5.337594032287598
    5. 'counts' → logprob: -6.087594032287598
    6. 'count' → logprob: -6.212594032287598
    7. 'all' → logprob: -6.712594032287598
    8. 'l' → logprob: -7.337594032287598
    9. 'arr' → logprob: -7.587594032287598
    10. 'from' → logprob: -7.712594032287598

Token 193: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.7792054414749146
    2. 'res' → logprob: -2.279205322265625
    3. 'ans' → logprob: -2.279205322265625
    4. 'l' → logprob: -2.404205322265625
    5. 'dp' → logprob: -2.529205322265625
    6. 'counts' → logprob: -2.529205322265625
    7. 'p' → logprob: -2.779205322265625
    8. 'div' → logprob: -2.904205322265625
    9. 'arr' → logprob: -2.904205322265625
    10. 'multip' → logprob: -3.279205322265625

Token 194: ' Inclusion' (ID: 151943)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0580575466156006
    2. 'div' → logprob: -2.1830575466156006
    3. 'dp' → logprob: -2.1830575466156006
    4. 'counts' → logprob: -2.5580575466156006
    5. 'cnt' → logprob: -2.9330575466156006
    6. 'from' → logprob: -2.9330575466156006
    7. 'l' → logprob: -3.0580575466156006
    8. 'ans' → logprob: -3.1830575466156006
    9. 'total' → logprob: -3.4330575466156006
    10. 'res' → logprob: -3.5580575466156006

Token 195: '-ex' (ID: 15801)
  Prédit: '-ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ex' → logprob: -0.0003009041247423738
    2. 'ex' → logprob: -8.625301361083984
    3. '-' → logprob: -9.500301361083984
    4. '–' → logprob: -10.000301361083984
    5. '_ex' → logprob: -14.125301361083984
    6. '−' → logprob: -16.250301361083984
    7. '/ex' → logprob: -16.375301361083984
    8. ' -' → logprob: -17.750301361083984
    9. '--' → logprob: -18.000301361083984
    10. 'e' → logprob: -18.000301361083984

Token 196: 'clusion' (ID: 15482)
  Prédit: 'clusion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusion' → logprob: -0.000703376077581197
    2. 'ex' → logprob: -8.625703811645508
    3. 'princip' → logprob: -8.875703811645508
    4. 'clude' → logprob: -9.125703811645508
    5. 'def' → logprob: -9.375703811645508
    6. 'in' → logprob: -10.875703811645508
    7. '...' → logprob: -11.000703811645508
    8. 'clusions' → logprob: -11.000703811645508
    9. 'l' → logprob: -11.125703811645508
    10. '
' → logprob: -11.250703811645508

Token 197: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5704912543296814
    2. 'count' → logprob: -1.1954913139343262
    3. '=' → logprob: -3.820491313934326
    4. 'result' → logprob: -3.945491313934326
    5. ' count' → logprob: -4.070491313934326
    6. 'sum' → logprob: -4.195491313934326
    7. ' =' → logprob: -4.320491313934326
    8. '_count' → logprob: -4.695491313934326
    9. '    ' → logprob: -5.320491313934326
    10. 'ans' → logprob: -5.945491313934326

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10056237131357193
    2. 'count' → logprob: -2.600562334060669
    3. 'result' → logprob: -5.100562572479248
    4. ' count' → logprob: -5.600562572479248
    5. 'sum' → logprob: -6.350562572479248
    6. 'ans' → logprob: -6.600562572479248
    7. ' ans' → logprob: -6.725562572479248
    8. ' result' → logprob: -6.850562572479248
    9. ' for' → logprob: -7.225562572479248
    10. 'res' → logprob: -7.725562572479248

Token 199: ' from' (ID: 591)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.15143215656280518
    2. 'result' → logprob: -2.9014320373535156
    3. 'count' → logprob: -3.1514320373535156
    4. 'answer' → logprob: -3.5264320373535156
    5. 'total' → logprob: -4.401432037353516
    6. 'res' → logprob: -7.776432037353516
    7. 'cnt' → logprob: -7.776432037353516
    8. ' ans' → logprob: -9.401432037353516
    9. 'def' → logprob: -9.651432037353516
    10. '   ' → logprob: -10.026432037353516

Token 200: ' itertools' (ID: 103178)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.012406985275447369
    2. 'math' → logprob: -5.262406826019287
    3. ' collections' → logprob: -5.637406826019287
    4. ' itertools' → logprob: -6.137406826019287
    5. ' functools' → logprob: -7.762406826019287
    6. 'fra' → logprob: -7.887406826019287
    7. 'it' → logprob: -8.137407302856445
    8. ' math' → logprob: -8.512407302856445
    9. 'fun' → logprob: -9.262407302856445
    10. 'operator' → logprob: -10.637407302856445

Token 201: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3794202208518982
    2. ' import' → logprob: -1.254420280456543
    3. '<|end|>' → logprob: -3.629420280456543
    4. '.' → logprob: -6.754420280456543
    5. 'ertools' → logprob: -6.879420280456543
    6. '	import' → logprob: -7.504420280456543
    7. '<|end|>' → logprob: -7.629420280456543
    8. '_import' → logprob: -8.004420280456543
    9. '.import' → logprob: -8.754420280456543
    10. ' .' → logprob: -10.504420280456543

Token 202: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.00081487005809322
    2. ' combinations' → logprob: -7.250814914703369
    3. 'chain' → logprob: -10.000814437866211
    4. 'product' → logprob: -10.750814437866211
    5. 'compress' → logprob: -11.375814437866211
    6. '	com' → logprob: -11.750814437866211
    7. 'acc' → logprob: -12.250814437866211
    8. 'comb' → logprob: -12.500814437866211
    9. '```' → logprob: -12.625814437866211
    10. '<|end|>' → logprob: -13.500814437866211

Token 203: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5276809334754944
    2. '   ' → logprob: -1.0276808738708496
    3. 'result' → logprob: -4.15268087387085
    4. 'count' → logprob: -4.52768087387085
    5. '    
' → logprob: -4.90268087387085
    6. '<|end|>' → logprob: -5.40268087387085
    7. 'total' → logprob: -5.65268087387085
    8. 'res' → logprob: -6.15268087387085
    9. 's' → logprob: -6.77768087387085
    10. 'for' → logprob: -7.02768087387085

Token 204: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6498240232467651
    2. '
' → logprob: -1.8998240232467651
    3. '   ' → logprob: -2.0248241424560547
    4. 'result' → logprob: -2.1498241424560547
    5. 'total' → logprob: -3.3998241424560547
    6. 'res' → logprob: -3.6498241424560547
    7. 'answer' → logprob: -5.149824142456055
    8. 'ans' → logprob: -6.024824142456055
    9. 'counts' → logprob: -6.024824142456055
    10. 'cnt' → logprob: -6.649824142456055

Token 205: ' res' (ID: 694)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7029580473899841
    2. 'ans' → logprob: -1.452958106994629
    3. 'total' → logprob: -2.202958106994629
    4. 'result' → logprob: -2.202958106994629
    5. 'answer' → logprob: -3.077958106994629
    6. '   ' → logprob: -6.577958106994629
    7. 'cnt' → logprob: -6.952958106994629
    8. 'res' (adapté à ' res') → logprob: -7.327958106994629
    9. ' ans' → logprob: -8.827958106994629
    10. 'div' → logprob: -8.827958106994629

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048649586737155914
    2. '=' → logprob: -3.048649549484253
    3. ' ' → logprob: -9.798649787902832
    4. ' ' → logprob: -12.423649787902832
    5. '_' → logprob: -14.923649787902832
    6. ',' → logprob: -15.048649787902832
    7. ' =
' → logprob: -15.298649787902832
    8. 'space' → logprob: -15.423649787902832
    9. 's' → logprob: -15.548649787902832
    10. '	' → logprob: -16.173648834228516

Token 207: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005644466727972031
    2. ' ' → logprob: -5.25564432144165
    3. 'n' → logprob: -8.130644798278809
    4. 'm' → logprob: -10.005644798278809
    5. ' n' → logprob: -10.005644798278809
    6. '   ' → logprob: -11.255644798278809
    7. ' m' → logprob: -12.005644798278809
    8. '1' → logprob: -12.380644798278809
    9. '```' → logprob: -14.818144798278809
    10. 'set' → logprob: -15.255644798278809

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000747332873288542
    2. 'n' → logprob: -7.625747203826904
    3. 'm' → logprob: -8.375747680664062
    4. ' ' → logprob: -10.875747680664062
    5. '1' → logprob: -12.750747680664062
    6. 'set' → logprob: -12.750747680664062
    7. 'sum' → logprob: -14.375747680664062
    8. ' n' → logprob: -14.375747680664062
    9. 'int' → logprob: -14.500747680664062
    10. '[' → logprob: -14.875747680664062

Token 209: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4837974011898041
    2. ' for' → logprob: -1.7337974309921265
    3. 'for' → logprob: -2.483797311782837
    4. '
' → logprob: -2.608797311782837
    5. '<|end|>' → logprob: -3.358797311782837
    6. '    
' → logprob: -5.233797550201416
    7. ' 
' → logprob: -5.983797550201416
    8. ' ' → logprob: -6.233797550201416
    9. '  
' → logprob: -6.358797550201416
    10. '	for' → logprob: -7.108797550201416

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009309637360274792
    2. 'for' → logprob: -5.009309768676758
    3. ' for' → logprob: -6.009309768676758
    4. '<|end|>' → logprob: -10.009309768676758
    5. '    
' → logprob: -10.634309768676758
    6. 'tokens' → logprob: -10.884309768676758
    7. '
' → logprob: -11.509309768676758
    8. ',' → logprob: -11.634309768676758
    9. 'indices' → logprob: -12.009309768676758
    10. '	for' → logprob: -12.009309768676758

Token 211: ' length' (ID: 5517)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003690216923132539
    2. 'all' → logprob: -6.503690242767334
    3. 'sub' → logprob: -6.753690242767334
    4. '   ' → logprob: -7.753690242767334
    5. 'l' → logprob: -8.378689765930176
    6. ' for' → logprob: -8.628689765930176
    7. 'lc' → logprob: -10.253689765930176
    8. 'res' → logprob: -10.378689765930176
    9. 'arr' → logprob: -10.628689765930176
    10. 'div' → logprob: -11.128689765930176

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26449257135391235
    2. '=' → logprob: -1.5144925117492676
    3. 's' → logprob: -5.014492511749268
    4. '   ' → logprob: -5.514492511749268
    5. 'for' → logprob: -7.139492511749268
    6. 'of' → logprob: -8.264492988586426
    7. ' ' → logprob: -8.639492988586426
    8. '_' → logprob: -9.389492988586426
    9. '(p' → logprob: -9.389492988586426
    10. '(' → logprob: -9.639492988586426

Token 213: ' len' (ID: 4631)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2804344892501831
    2. 'len' → logprob: -1.780434489250183
    3. ' m' → logprob: -2.9054346084594727
    4. ' len' → logprob: -3.9054346084594727
    5. '1' → logprob: -7.155434608459473
    6. '0' → logprob: -8.780434608459473
    7. ' ' → logprob: -9.405434608459473
    8. '   ' → logprob: -10.155434608459473
    9. '(len' → logprob: -10.530434608459473
    10. '[len' → logprob: -11.905434608459473

Token 214: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.696077227592468e-05
    2. '(arr' → logprob: -10.375077247619629
    3. '(' → logprob: -10.500077247619629
    4. '(res' → logprob: -11.750077247619629
    5. 'p' → logprob: -12.125077247619629
    6. '(m' → logprob: -12.750077247619629
    7. 'arr' → logprob: -14.250077247619629
    8. ' (' → logprob: -15.750077247619629
    9. '(s' → logprob: -16.125076293945312
    10. ' p' → logprob: -16.125076293945312

Token 215: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006737865507602692
    2. ')
' → logprob: -5.00673770904541
    3. '   ' → logprob: -11.75673770904541
    4. ' )' → logprob: -12.00673770904541
    5. '<|end|>' → logprob: -12.50673770904541
    6. ')

' → logprob: -13.13173770904541
    7. ')p' → logprob: -14.63173770904541
    8. '
' → logprob: -15.13173770904541
    9. '[' → logprob: -15.25673770904541
    10. '<|end|>' → logprob: -15.38173770904541

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7337378263473511
    2. 'for' → logprob: -0.7337378263473511
    3. ' for' → logprob: -3.2337379455566406
    4. '<|end|>' → logprob: -8.10873794555664
    5. '
' → logprob: -10.73373794555664
    6. '    
' → logprob: -10.85873794555664
    7. '  ' → logprob: -11.73373794555664
    8. '	for' → logprob: -11.85873794555664
    9. '```' → logprob: -12.98373794555664
    10. ' ' → logprob: -13.35873794555664

Token 217: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003349890175741166
    2. 'from' → logprob: -8.500334739685059
    3. '   ' → logprob: -9.625334739685059
    4. ' for' → logprob: -10.000334739685059
    5. 'res' → logprob: -11.375334739685059
    6. 'all' → logprob: -13.000334739685059
    7. 'sub' → logprob: -13.250334739685059
    8. 'arr' → logprob: -13.875334739685059
    9. 'result' → logprob: -14.500334739685059
    10. 'def' → logprob: -14.625334739685059

Token 218: ' size' (ID: 2349)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.9034399390220642
    2. ' k' → logprob: -1.778439998626709
    3. ' size' → logprob: -1.778439998626709
    4. 'r' → logprob: -2.153439998626709
    5. 'k' → logprob: -2.403439998626709
    6. ' length' → logprob: -4.528439998626709
    7. 'size' → logprob: -4.778439998626709
    8. ' i' → logprob: -4.778439998626709
    9. ' sz' → logprob: -5.153439998626709
    10. 'i' → logprob: -5.278439998626709

Token 219: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020768433809280396
    2. 'in' → logprob: -3.895768404006958
    3. '(' → logprob: -8.645768165588379
    4. '	in' → logprob: -11.395768165588379
    5. ' ' → logprob: -11.770768165588379
    6. '   ' → logprob: -12.020768165588379
    7. 'range' → logprob: -12.145768165588379
    8. '(range' → logprob: -12.270768165588379
    9. '1' → logprob: -12.395768165588379
    10. '(in' → logprob: -12.895768165588379

Token 220: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0052342405542731285
    2. ' range' → logprob: -5.255234241485596
    3. '(range' → logprob: -14.880233764648438
    4. '	range' → logprob: -16.630233764648438
    5. ' ' → logprob: -18.005233764648438
    6. '1' → logprob: -18.630233764648438
    7. 'p' → logprob: -19.755233764648438
    8. '
' → logprob: -20.380233764648438
    9. '   ' → logprob: -20.880233764648438
    10. '  ' → logprob: -21.130233764648438

Token 221: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001805377542041242
    2. '1' → logprob: -8.6251802444458
    3. ' ' → logprob: -14.6251802444458
    4. ' (' → logprob: -15.6251802444458
    5. '(
' → logprob: -15.7501802444458
    6. '[' → logprob: -16.875181198120117
    7. '   ' → logprob: -17.250181198120117
    8. ',' → logprob: -17.375181198120117
    9. '<|end|>' → logprob: -17.625181198120117
    10. '2' → logprob: -18.125181198120117

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.000017166137695
    3. '(' → logprob: -15.125017166137695
    4. '   ' → logprob: -15.500017166137695
    5. '2' → logprob: -18.375017166137695
    6. '
' → logprob: -18.375017166137695
    7. '[' → logprob: -19.000017166137695
    8. '```' → logprob: -19.375017166137695
    9. '           ' → logprob: -19.500017166137695
    10. '１' → logprob: -19.625017166137695

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001971934689208865
    2. ',length' → logprob: -6.37697172164917
    3. ',size' → logprob: -8.876972198486328
    4. ',len' → logprob: -9.626972198486328
    5. ' ,' → logprob: -9.751972198486328
    6. ',
' → logprob: -12.626972198486328
    7. 'length' → logprob: -14.376972198486328
    8. '   ' → logprob: -14.376972198486328
    9. ',m' → logprob: -14.626972198486328
    10. ',n' → logprob: -15.001972198486328

Token 224: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.004792514722794294
    2. ' length' → logprob: -6.0047926902771
    3. 'len' → logprob: -6.2547926902771
    4. 'size' → logprob: -8.129792213439941
    5. 'm' → logprob: -9.379792213439941
    6. ' size' → logprob: -12.004792213439941
    7. '   ' → logprob: -12.129792213439941
    8. ' len' → logprob: -13.254792213439941
    9. ' m' → logprob: -15.629792213439941
    10. '    ' → logprob: -15.629792213439941

Token 225: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1602582484483719
    2. ' +' → logprob: -1.9102582931518555
    3. ',' → logprob: -10.910258293151855
    4. '   ' → logprob: -11.660258293151855
    5. '):
' → logprob: -13.160258293151855
    6. '+
' → logprob: -13.410258293151855
    7. '):' → logprob: -13.535258293151855
    8. '+,' → logprob: -14.910258293151855
    9. ' +
' → logprob: -14.910258293151855
    10. ' ' → logprob: -15.285258293151855

Token 226: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.908022285439074e-05
    2. ' ' → logprob: -9.750059127807617
    3. '
' → logprob: -14.750059127807617
    4. '   ' → logprob: -15.625059127807617
    5. '```' → logprob: -16.000059127807617
    6. ')' → logprob: -18.125059127807617
    7. '2' → logprob: -18.187559127807617
    8. '``' → logprob: -18.250059127807617
    9. 'size' → logprob: -18.500059127807617
    10. '

' → logprob: -18.750059127807617

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.500004768371582
    3. '
' → logprob: -14.375004768371582
    4. '   ' → logprob: -16.625003814697266
    5. '```' → logprob: -17.062503814697266
    6. ')' → logprob: -17.437503814697266
    7. '``' → logprob: -17.562503814697266
    8. 'size' → logprob: -17.937503814697266
    9. '۱' → logprob: -17.937503814697266
    10. '

' → logprob: -18.062503814697266

Token 228: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6403772234916687
    2. '):' → logprob: -0.7653772234916687
    3. '):
' → logprob: -4.890377044677734
    4. ':
' → logprob: -8.890377044677734
    5. ',' → logprob: -10.140377044677734
    6. '   ' → logprob: -10.890377044677734
    7. ')' → logprob: -11.140377044677734
    8. ' :' → logprob: -12.265377044677734
    9. '>:' → logprob: -13.015377044677734
    10. '():' → logprob: -13.265377044677734

Token 229: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20779673755168915
    2. '       ' → logprob: -2.082796812057495
    3. '<|end|>' → logprob: -3.082796812057495
    4. '   ' → logprob: -4.582796573638916
    5. ':
' → logprob: -5.582796573638916
    6. ',' → logprob: -6.957796573638916
    7. '<|end|>' → logprob: -6.957796573638916
    8. ' for' → logprob: -8.082797050476074
    9. '    ' → logprob: -8.707797050476074
    10. ' :' → logprob: -8.957797050476074

Token 230: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6127370595932007
    2. ' for' → logprob: -0.8627370595932007
    3. 'for' (adapté à ' for') → logprob: -3.6127371788024902
    4. '   ' → logprob: -5.11273717880249
    5. '<|end|>' → logprob: -6.36273717880249
    6. '    ' → logprob: -8.112736701965332
    7. ' ' → logprob: -8.737736701965332
    8. 'tokens' → logprob: -8.862736701965332
    9. ':' → logprob: -9.237736701965332
    10. ' tokens' → logprob: -9.362736701965332

Token 231: ' comb' (ID: 4134)
  Prédit: 'combo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combo' → logprob: -0.16192594170570374
    2. 'comb' → logprob: -2.411926031112671
    3. 'subset' → logprob: -2.911926031112671
    4. ' combo' → logprob: -5.786925792694092
    5. ' comb' → logprob: -6.661925792694092
    6. ' subset' → logprob: -7.036925792694092
    7. 'com' → logprob: -8.53692626953125
    8. 'cmb' → logprob: -10.41192626953125
    9. 'c' → logprob: -10.66192626953125
    10. '   ' → logprob: -13.03692626953125

Token 232: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003197677666321397
    2. 'in' → logprob: -5.75319766998291
    3. 's' → logprob: -11.12819766998291
    4. ' ' → logprob: -13.00319766998291
    5. '=' → logprob: -15.62819766998291
    6. 'import' → logprob: -15.62819766998291
    7. 'size' → logprob: -15.75319766998291
    8. ' ' → logprob: -15.75319766998291
    9. ' =' → logprob: -15.81569766998291
    10. '```' → logprob: -15.81569766998291

Token 233: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0040947855450212955
    2. ' combinations' → logprob: -5.50409460067749
    3. '(com' → logprob: -11.254095077514648
    4. 'comb' → logprob: -13.129095077514648
    5. '	com' → logprob: -14.129095077514648
    6. ' com' → logprob: -14.504095077514648
    7. '_com' → logprob: -16.37909507751465
    8. '<com' → logprob: -17.37909507751465
    9. '=com' → logprob: -17.37909507751465
    10. '.com' → logprob: -17.87909507751465

Token 234: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.3902033970225602e-05
    2. '(' → logprob: -11.250014305114746
    3. ' (' → logprob: -14.125014305114746
    4. '(
' → logprob: -17.62501335144043
    5. ')' → logprob: -17.75001335144043
    6. ',p' → logprob: -18.25001335144043
    7. 'p' → logprob: -18.25001335144043
    8. '```' → logprob: -18.62501335144043
    9. '(range' → logprob: -18.87501335144043
    10. '((' → logprob: -19.00001335144043

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01252778060734272
    2. ',size' → logprob: -4.387527942657471
    3. ' ,' → logprob: -11.512527465820312
    4. '[size' → logprob: -12.137527465820312
    5. ',length' → logprob: -14.012527465820312
    6. 'size' → logprob: -14.137527465820312
    7. '(size' → logprob: -14.137527465820312
    8. '<size' → logprob: -16.262527465820312
    9. '   ' → logprob: -16.387527465820312
    10. ',s' → logprob: -16.512527465820312

Token 236: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0019286326132714748
    2. ' size' → logprob: -6.251928806304932
    3. '
' → logprob: -18.501928329467773
    4. '   ' → logprob: -19.126928329467773
    5. '[size' → logprob: -19.251928329467773
    6. '	size' → logprob: -19.251928329467773
    7. '(size' → logprob: -19.376928329467773
    8. ')' → logprob: -20.001928329467773
    9. 's' → logprob: -20.376928329467773
    10. '       ' → logprob: -21.251928329467773

Token 237: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16036254167556763
    2. '):' → logprob: -1.9103624820709229
    3. '):
' → logprob: -9.035362243652344
    4. '       ' → logprob: -11.410362243652344
    5. '):

' → logprob: -13.160362243652344
    6. '           ' → logprob: -13.410362243652344
    7. ':' → logprob: -13.535362243652344
    8. '   ' → logprob: -13.660362243652344
    9. ' ):
' → logprob: -14.035362243652344
    10. '():
' → logprob: -14.785362243652344

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09607129544019699
    2. ':' → logprob: -2.846071243286133
    3. ':
' → logprob: -3.596071243286133
    4. '<|end|>' → logprob: -6.096071243286133
    5. '):
' → logprob: -6.721071243286133
    6. ',' → logprob: -6.971071243286133
    7. '
' → logprob: -7.846071243286133
    8. '       ' → logprob: -8.596071243286133
    9. '):' → logprob: -8.721071243286133
    10. '            
' → logprob: -9.221071243286133

Token 239: ' curr' (ID: 10495)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.0729261636734009
    2. '               ' → logprob: -1.4479261636734009
    3. ' new' → logprob: -1.9479261636734009
    4. '           ' → logprob: -2.1979260444641113
    5. ' current' → logprob: -2.8229260444641113
    6. 'l' → logprob: -3.4479260444641113
    7. 'new' → logprob: -3.8229260444641113
    8. 'current' → logprob: -4.572926044464111
    9. 'count' → logprob: -4.947926044464111
    10. ' val' → logprob: -5.822926044464111

Token 240: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -3.881560041918419e-05
    2. ' =' → logprob: -10.375039100646973
    3. '=' → logprob: -13.125039100646973
    4. '_g' → logprob: -14.000039100646973
    5. 'l' → logprob: -14.375039100646973
    6. ' _' → logprob: -14.500039100646973
    7. '_val' → logprob: -14.875039100646973
    8. '_m' → logprob: -15.125039100646973
    9. '=_' → logprob: -15.125039100646973
    10. '```' → logprob: -15.125039100646973

Token 241: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.04638516902923584
    2. 'm' → logprob: -3.6713852882385254
    3. 'c' → logprob: -4.546385288238525
    4. '=' → logprob: -4.796385288238525
    5. ' =' → logprob: -8.046384811401367
    6. 'mc' → logprob: -8.171384811401367
    7. '_cm' → logprob: -9.046384811401367
    8. '           ' → logprob: -9.421384811401367
    9. 'CM' → logprob: -9.796384811401367
    10. '   ' → logprob: -10.046384811401367

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16030637919902802
    2. '=' → logprob: -1.9103063344955444
    3. '_val' → logprob: -9.660305976867676
    4. ' ' → logprob: -12.035305976867676
    5. '_' → logprob: -12.785305976867676
    6. '=l' → logprob: -12.910305976867676
    7. '_value' → logprob: -13.410305976867676
    8. '_curr' → logprob: -14.035305976867676
    9. '_l' → logprob: -14.160305976867676
    10. ')' → logprob: -14.160305976867676

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020818933262489736
    2. 'comb' → logprob: -9.125207901000977
    3. ' ' → logprob: -9.750207901000977
    4. 'l' → logprob: -10.375207901000977
    5. 'com' → logprob: -12.375207901000977
    6. 'arr' → logprob: -12.875207901000977
    7. 'lc' → logprob: -14.375207901000977
    8. ' comb' → logprob: -14.875207901000977
    9. 'curr' → logprob: -15.000207901000977
    10. '   ' → logprob: -15.375207901000977

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014644917973782867
    2. 'l' → logprob: -9.125146865844727
    3. 'comb' → logprob: -10.375146865844727
    4. 'arr' → logprob: -12.500146865844727
    5. 'com' → logprob: -14.250146865844727
    6. ' ' → logprob: -14.375146865844727
    7. 'lc' → logprob: -14.500146865844727
    8. 'curr' → logprob: -15.625146865844727
    9. 'def' → logprob: -16.125146865844727
    10. 'reduce' → logprob: -16.625146865844727

Token 245: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31705936789512634
    2. '<|end|>' → logprob: -1.3170593976974487
    3. '<|end|>' → logprob: -6.567059516906738
    4. '
' → logprob: -7.067059516906738
    5. '            ' → logprob: -7.692059516906738
    6. ' for' → logprob: -8.067059516906738
    7. ' ' → logprob: -8.692059516906738
    8. '            
' → logprob: -8.692059516906738
    9. ' 
' → logprob: -8.942059516906738
    10. ',' → logprob: -9.942059516906738

Token 246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0717921331524849
    2. '<|end|>' → logprob: -2.6967921257019043
    3. '<|end|>' → logprob: -7.446792125701904
    4. '
' → logprob: -8.071792602539062
    5. ' ' → logprob: -8.196792602539062
    6. ' for' → logprob: -8.321792602539062
    7. ' 
' → logprob: -9.196792602539062
    8. '            
' → logprob: -9.446792602539062
    9. '            ' → logprob: -9.696792602539062
    10. '		' → logprob: -9.821792602539062

Token 247: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09775390475988388
    2. ' for' → logprob: -2.7227540016174316
    3. 'for' (adapté à ' for') → logprob: -3.5977540016174316
    4. '       ' → logprob: -10.222753524780273
    5. '   ' → logprob: -12.597753524780273
    6. '               ' → logprob: -12.972753524780273
    7. '
' → logprob: -13.472753524780273
    8. '		' → logprob: -13.722753524780273
    9. ',' → logprob: -14.472753524780273
    10. '<|end|>' → logprob: -14.597753524780273

Token 248: ' x' (ID: 1215)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.080732062458992
    2. 'x' → logprob: -2.5807321071624756
    3. ' num' → logprob: -6.5807318687438965
    4. 'val' → logprob: -8.580732345581055
    5. ' x' → logprob: -8.705732345581055
    6. 'c' → logprob: -10.330732345581055
    7. 'v' → logprob: -10.455732345581055
    8. 'number' → logprob: -10.580732345581055
    9. 'value' → logprob: -11.705732345581055
    10. ' val' → logprob: -12.830732345581055

Token 249: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008703093975782394
    2. 'in' → logprob: -4.758703231811523
    3. ' ' → logprob: -9.383703231811523
    4. 's' → logprob: -14.008703231811523
    5. '<|end|>' → logprob: -14.008703231811523
    6. '	in' → logprob: -14.258703231811523
    7. 'x' → logprob: -14.633703231811523
    8. '_in' → logprob: -15.008703231811523
    9. 'n' → logprob: -15.133703231811523
    10. ' x' → logprob: -15.383703231811523

Token 250: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.023246990516781807
    2. ' comb' → logprob: -3.773247003555298
    3. 'com' → logprob: -13.398246765136719
    4. 'list' → logprob: -17.64824676513672
    5. '_comb' → logprob: -17.64824676513672
    6. 'combo' → logprob: -18.14824676513672
    7. '```' → logprob: -18.27324676513672
    8. '
' → logprob: -18.39824676513672
    9. ' ' → logprob: -18.89824676513672
    10. ' list' → logprob: -19.02324676513672

Token 251: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43452417850494385
    2. ':
' → logprob: -1.0595241785049438
    3. '               ' → logprob: -5.434524059295654
    4. '=' → logprob: -7.434524059295654
    5. '):
' → logprob: -8.309524536132812
    6. '           ' → logprob: -8.559524536132812
    7. ',' → logprob: -9.059524536132812
    8. ' :
' → logprob: -9.059524536132812
    9. ' :' → logprob: -9.934524536132812
    10. ':

' → logprob: -10.684524536132812

Token 252: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00040934275602921844
    2. '                
' → logprob: -9.000409126281738
    3. '
' → logprob: -9.125409126281738
    4. '<|end|>' → logprob: -9.750409126281738
    5. ',' → logprob: -10.875409126281738
    6. '                   ' → logprob: -11.000409126281738
    7. '                ' → logprob: -11.500409126281738
    8. ':
' → logprob: -11.625409126281738
    9. '           ' → logprob: -11.750409126281738
    10. '	           ' → logprob: -11.875409126281738

Token 253: ' curr' (ID: 10495)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5108682513237
    2. ' curr' → logprob: -1.1358683109283447
    3. 'curr' (adapté à ' curr') → logprob: -2.6358683109283447
    4. '                   ' → logprob: -5.135868072509766
    5. '                ' → logprob: -7.010868072509766
    6. '[curr' → logprob: -9.385868072509766
    7. '   ' → logprob: -9.635868072509766
    8. '
' → logprob: -9.635868072509766
    9. '	curr' → logprob: -10.260868072509766
    10. ' ' → logprob: -10.760868072509766

Token 254: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0001443035143893212
    2. '_c' → logprob: -9.625144004821777
    3. '=' → logprob: -9.750144004821777
    4. ' =' → logprob: -12.500144004821777
    5. '_' → logprob: -12.625144004821777
    6. '_curr' → logprob: -13.000144004821777
    7. '=_' → logprob: -13.125144004821777
    8. 'l' → logprob: -13.500144004821777
    9. '           ' → logprob: -13.500144004821777
    10. '\' → logprob: -13.625144004821777

Token 255: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.4517502188682556
    2. 'm' → logprob: -1.3267502784729004
    3. 'c' → logprob: -2.3267502784729004
    4. '=' → logprob: -8.326749801635742
    5. '_cm' → logprob: -9.326749801635742
    6. 'curr' → logprob: -9.826749801635742
    7. '_c' → logprob: -9.826749801635742
    8. 'mc' → logprob: -10.826749801635742
    9. ' =' → logprob: -11.076749801635742
    10. '_' → logprob: -11.326749801635742

Token 256: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141372084617615
    2. ' =' → logprob: -1.7014137506484985
    3. '*=' → logprob: -15.451414108276367
    4. ' *=' → logprob: -16.576414108276367
    5. ' ' → logprob: -16.826414108276367
    6. '=

' → logprob: -17.201414108276367
    7. '＝' → logprob: -17.451414108276367
    8. '=
' → logprob: -18.326414108276367
    9. '    ' → logprob: -18.826414108276367
    10. '=int' → logprob: -18.951414108276367

Token 257: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16232328116893768
    2. ' l' → logprob: -1.912323236465454
    3. 'curr' → logprob: -6.287323474884033
    4. ' curr' → logprob: -8.787322998046875
    5. 'math' → logprob: -10.912322998046875
    6. 'lc' → logprob: -11.162322998046875
    7. ' math' → logprob: -11.662322998046875
    8. '	l' → logprob: -11.724822998046875
    9. ' ' → logprob: -11.912322998046875
    10. '(curr' → logprob: -12.474822998046875

Token 258: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.005831506568938494
    2. 'c' → logprob: -5.255831718444824
    3. 'm' → logprob: -7.505831718444824
    4. ' cm' → logprob: -10.755831718444824
    5. 'curr' → logprob: -11.630831718444824
    6. 'mc' → logprob: -11.880831718444824
    7. '(cm' → logprob: -12.755831718444824
    8. '(curr' → logprob: -12.880831718444824
    9. 'cms' → logprob: -14.380831718444824
    10. '   ' → logprob: -14.630831718444824

Token 259: '(curr' (ID: 49739)
  Prédit: '(curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(curr' → logprob: -4.263011578586884e-05
    2. 'curr' → logprob: -10.125042915344238
    3. '(' → logprob: -13.250042915344238
    4. '[curr' → logprob: -14.625042915344238
    5. '(cur' → logprob: -15.625042915344238
    6. ' curr' → logprob: -17.000041961669922
    7. '	curr' → logprob: -17.250041961669922
    8. ' (' → logprob: -17.625041961669922
    9. '(current' → logprob: -18.250041961669922
    10. '(
' → logprob: -19.250041961669922

Token 260: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.060526102781295776
    2. 'curr' → logprob: -3.185526132583618
    3. ',' → logprob: -4.685525894165039
    4. '_,' → logprob: -5.435525894165039
    5. 'l' → logprob: -6.810525894165039
    6. 'x' → logprob: -7.310525894165039
    7. 'c' → logprob: -7.935525894165039
    8. '(curr' → logprob: -8.185525894165039
    9. ',c' → logprob: -8.560525894165039
    10. ')' → logprob: -8.560525894165039

Token 261: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.2110975831747055
    2. 'curr' → logprob: -2.336097478866577
    3. 'c' → logprob: -2.961097478866577
    4. 'm' → logprob: -3.336097478866577
    5. '(curr' → logprob: -6.086097717285156
    6. 'x' → logprob: -6.336097717285156
    7. ',' → logprob: -6.836097717285156
    8. 'M' → logprob: -7.586097717285156
    9. ')' → logprob: -9.586097717285156
    10. '_c' → logprob: -9.961097717285156

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06553234159946442
    2. ',x' → logprob: -2.8155324459075928
    3. 'x' → logprob: -5.815532207489014
    4. ' ,' → logprob: -7.815532207489014
    5. ' x' → logprob: -9.190532684326172
    6. '(x' → logprob: -9.690532684326172
    7. ',
' → logprob: -11.815532684326172
    8. ',n' → logprob: -14.440532684326172
    9. '               ' → logprob: -15.190532684326172
    10. '           ' → logprob: -15.315532684326172

Token 263: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015023599844425917
    2. ' x' → logprob: -6.501502513885498
    3. '	x' → logprob: -18.251502990722656
    4. ')x' → logprob: -18.501502990722656
    5. '   ' → logprob: -19.751502990722656
    6. '
' → logprob: -20.126502990722656
    7. '(x' → logprob: -20.501502990722656
    8. '           ' → logprob: -20.626502990722656
    9. ' ' → logprob: -21.001502990722656
    10. '               ' → logprob: -21.126502990722656

Token 264: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004052040632814169
    2. ')
' → logprob: -5.75405216217041
    3. '               ' → logprob: -7.25405216217041
    4. '           ' → logprob: -8.75405216217041
    5. ' )' → logprob: -12.25405216217041
    6. ')
' → logprob: -14.25405216217041
    7. '                   ' → logprob: -14.75405216217041
    8. ')#' → logprob: -15.00405216217041
    9. '              ' → logprob: -15.25405216217041
    10. '       ' → logprob: -15.25405216217041

Token 265: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.975612187583465e-05
    2. '       ' → logprob: -11.250029563903809
    3. '               ' → logprob: -11.750029563903809
    4. ' ' → logprob: -12.750029563903809
    5. '   ' → logprob: -13.000029563903809
    6. '		' → logprob: -13.750029563903809
    7. '                   ' → logprob: -14.375029563903809
    8. '
' → logprob: -14.375029563903809
    9. '<|end|>' → logprob: -15.000029563903809
    10. '          ' → logprob: -15.250029563903809

Token 266: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06247903034090996
    2. 'if' (adapté à ' if') → logprob: -3.062479019165039
    3. '           ' → logprob: -4.312479019165039
    4. ' if' → logprob: -8.312479019165039
    5. '                   ' → logprob: -9.437479019165039
    6. '       ' → logprob: -10.187479019165039
    7. '   ' → logprob: -10.687479019165039
    8. '
' → logprob: -13.312479019165039
    9. '			' → logprob: -13.562479019165039
    10. '                       ' → logprob: -14.062479019165039

Token 267: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0031837786082178354
    2. ' curr' → logprob: -5.753183841705322
    3. '	curr' → logprob: -12.878183364868164
    4. '   ' → logprob: -13.503183364868164
    5. '(curr' → logprob: -13.878183364868164
    6. '                   ' → logprob: -15.128183364868164
    7. 'cur' → logprob: -15.503183364868164
    8. '               ' → logprob: -15.503183364868164
    9. '[curr' → logprob: -16.003183364868164
    10. ' ' → logprob: -16.128183364868164

Token 268: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -6.790129555156454e-05
    2. 'l' → logprob: -10.250067710876465
    3. 'cm' → logprob: -10.375067710876465
    4. 'curr' → logprob: -14.625067710876465
    5. 'c' → logprob: -15.250067710876465
    6. '=' → logprob: -15.750067710876465
    7. '_c' → logprob: -16.00006866455078
    8. '>' → logprob: -16.00006866455078
    9. 'cl' → logprob: -17.37506866455078
    10. 'lc' → logprob: -17.37506866455078

Token 269: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.030586164444684982
    2. 'c' → logprob: -4.030586242675781
    3. 'm' → logprob: -5.280586242675781
    4. '>' → logprob: -5.280586242675781
    5. 'curr' → logprob: -6.280586242675781
    6. 'CM' → logprob: -9.405586242675781
    7. '   ' → logprob: -9.530586242675781
    8. 'n' → logprob: -9.780586242675781
    9. '>=' → logprob: -11.155586242675781
    10. 'C' → logprob: -11.405586242675781

Token 270: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0485910028219223
    2. ' >' → logprob: -3.048590898513794
    3. ' ' → logprob: -13.673590660095215
    4. ' ' → logprob: -14.298590660095215
    5. '">' → logprob: -14.298590660095215
    6. '&gt' → logprob: -15.048590660095215
    7. '()>' → logprob: -15.423590660095215
    8. 'n' → logprob: -15.673590660095215
    9. '>b' → logprob: -15.923590660095215
    10. '>end' → logprob: -16.42359161376953

Token 271: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000553151941858232
    2. ' n' → logprob: -7.500553131103516
    3. '	n' → logprob: -16.125553131103516
    4. ')n' → logprob: -18.750553131103516
    5. 'm' → logprob: -19.875553131103516
    6. '<|end|>' → logprob: -20.000553131103516
    7. 'n't' → logprob: -20.250553131103516
    8. ' ' → logprob: -20.250553131103516
    9. '```' → logprob: -20.250553131103516
    10. '
' → logprob: -20.375553131103516

Token 272: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0605958700180054
    2. ':
' → logprob: -1.0605958700180054
    3. ':' → logprob: -1.1855958700180054
    4. '               ' → logprob: -6.935595989227295
    5. '           ' → logprob: -7.185595989227295
    6. '                       ' → logprob: -10.185595512390137
    7. ' or' → logprob: -10.310595512390137
    8. '                  ' → logprob: -11.310595512390137
    9. '                           ' → logprob: -11.435595512390137
    10. '):
' → logprob: -11.435595512390137

Token 273: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004950098809786141
    2. 'break' → logprob: -7.875494956970215
    3. ' break' → logprob: -9.375494956970215
    4. '                    
' → logprob: -11.875494956970215
    5. '                       ' → logprob: -12.000494956970215
    6. '           ' → logprob: -12.125494956970215
    7. '               ' → logprob: -12.375494956970215
    8. '                  ' → logprob: -13.000494956970215
    9. '
' → logprob: -13.125494956970215
    10. '   ' → logprob: -14.500494956970215

Token 274: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.017649253830313683
    2. ' break' → logprob: -4.267649173736572
    3. '                   ' → logprob: -5.767649173736572
    4. '                       ' → logprob: -8.01764965057373
    5. '	break' → logprob: -11.14264965057373
    6. '   ' → logprob: -12.89264965057373
    7. '               ' → logprob: -13.01764965057373
    8. '                           ' → logprob: -13.64264965057373
    9. '                               ' → logprob: -14.01764965057373
    10. '```' → logprob: -15.01764965057373

Token 275: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018112368881702423
    2. '       ' → logprob: -4.1431121826171875
    3. ')' → logprob: -6.7681121826171875
    4. '   ' → logprob: -8.018112182617188
    5. '
' → logprob: -8.143112182617188
    6. '    
' → logprob: -9.143112182617188
    7. '<|end|>' → logprob: -10.143112182617188
    8. ',' → logprob: -10.393112182617188
    9. '            
' → logprob: -10.768112182617188
    10. '               ' → logprob: -10.768112182617188

Token 276: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008448261767625809
    2. '       ' → logprob: -4.883448123931885
    3. '
' → logprob: -7.758448123931885
    4. ')' → logprob: -8.883448600769043
    5. '   ' → logprob: -9.133448600769043
    6. '    
' → logprob: -9.508448600769043
    7. '               ' → logprob: -11.258448600769043
    8. '            
' → logprob: -11.258448600769043
    9. '  
' → logprob: -11.258448600769043
    10. '<|end|>' → logprob: -11.383448600769043

Token 277: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3287889361381531
    2. '       ' → logprob: -1.5787889957427979
    3. ' if' → logprob: -3.453788995742798
    4. '   ' → logprob: -3.578788995742798
    5. 'if' → logprob: -4.328788757324219
    6. 'else' (adapté à ' else') → logprob: -7.203788757324219
    7. ' else' → logprob: -8.078788757324219
    8. ')' → logprob: -9.953788757324219
    9. ' ' → logprob: -9.953788757324219
    10. '               ' → logprob: -10.328788757324219

Token 278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10211911052465439
    2. '               ' → logprob: -2.852119207382202
    3. ':
' → logprob: -3.352119207382202
    4. '           ' → logprob: -5.727118968963623
    5. '       ' → logprob: -7.477118968963623
    6. '<|end|>' → logprob: -9.102119445800781
    7. ' :' → logprob: -9.602119445800781
    8. '):
' → logprob: -9.852119445800781
    9. '   ' → logprob: -9.977119445800781
    10. '                   ' → logprob: -10.227119445800781

Token 279: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07203464210033417
    2. '           ' → logprob: -2.6970345973968506
    3. '       ' → logprob: -7.07203483581543
    4. '   ' → logprob: -7.32203483581543
    5. ' if' → logprob: -7.57203483581543
    6. '                   ' → logprob: -10.44703483581543
    7. '```' → logprob: -12.19703483581543
    8. ',' → logprob: -12.32203483581543
    9. ' res' → logprob: -12.32203483581543
    10. 'if' → logprob: -12.44703483581543

Token 280: ' cnt' (ID: 27340)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4170697331428528
    2. ' if' → logprob: -1.792069673538208
    3. 'count' → logprob: -1.917069673538208
    4. 'sign' → logprob: -5.042069911956787
    5. 'res' → logprob: -5.167069911956787
    6. ' count' → logprob: -5.792069911956787
    7. '                   ' → logprob: -5.792069911956787
    8. 'cnt' (adapté à ' cnt') → logprob: -6.167069911956787
    9. 'div' → logprob: -6.292069911956787
    10. ' sign' → logprob: -6.542069911956787

Token 281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04462757706642151
    2. '=' → logprob: -3.6696276664733887
    3. ' +=' → logprob: -4.044627666473389
    4. '+=' → logprob: -7.419627666473389
    5. ' ' → logprob: -11.54462718963623
    6. '(' → logprob: -12.16962718963623
    7. ')' → logprob: -12.66962718963623
    8. '               ' → logprob: -12.79462718963623
    9. ' -=' → logprob: -12.79462718963623
    10. 's' → logprob: -13.04462718963623

Token 282: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12696266174316406
    2. 'n' → logprob: -2.126962661743164
    3. '   ' → logprob: -10.376962661743164
    4. ' ' → logprob: -14.126962661743164
    5. '	n' → logprob: -14.376962661743164
    6. ' (' → logprob: -14.626962661743164
    7. '           ' → logprob: -14.626962661743164
    8. '                   ' → logprob: -15.126962661743164
    9. '       ' → logprob: -15.376962661743164
    10. '               ' → logprob: -15.626962661743164

Token 283: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4745412766933441
    2. ' //' → logprob: -0.9745413064956665
    3. '               ' → logprob: -7.974541187286377
    4. '                   ' → logprob: -10.224541664123535
    5. '                ' → logprob: -10.849541664123535
    6. '//=' → logprob: -10.849541664123535
    7. '
' → logprob: -11.474541664123535
    8. '           ' → logprob: -12.724541664123535
    9. '            ' → logprob: -12.724541664123535
    10. ' ' → logprob: -12.724541664123535

Token 284: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.00026181264547631145
    2. ' curr' → logprob: -8.250262260437012
    3. 'cur' → logprob: -14.750262260437012
    4. '[curr' → logprob: -16.875261306762695
    5. '	curr' → logprob: -17.250261306762695
    6. '(curr' → logprob: -18.000261306762695
    7. '           ' → logprob: -18.625261306762695
    8. '               ' → logprob: -19.125261306762695
    9. 'current' → logprob: -19.875261306762695
    10. 'c' → logprob: -19.875261306762695

Token 285: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0002016331272898242
    2. 'curr' → logprob: -8.625201225280762
    3. 'cm' → logprob: -11.500201225280762
    4. 'l' → logprob: -12.000201225280762
    5. 'lc' → logprob: -12.750201225280762
    6. '[curr' → logprob: -13.875201225280762
    7. '(curr' → logprob: -14.125201225280762
    8. 'cur' → logprob: -15.250201225280762
    9. 'c' → logprob: -15.375201225280762
    10. '_c' → logprob: -16.250202178955078

Token 286: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.11495145410299301
    2. 'm' → logprob: -2.2399513721466064
    3. 'c' → logprob: -6.2399516105651855
    4. 'mc' → logprob: -9.614951133728027
    5. 'curr' → logprob: -9.739951133728027
    6. 'CM' → logprob: -10.864951133728027
    7. 'M' → logprob: -12.614951133728027
    8. 'м' → logprob: -12.739951133728027
    9. '   ' → logprob: -12.989951133728027
    10. 'cms' → logprob: -12.989951133728027

Token 287: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013358361320570111
    2. ' if' → logprob: -7.751335620880127
    3. '                ' → logprob: -8.376336097717285
    4. '
' → logprob: -8.376336097717285
    5. '           ' → logprob: -8.876336097717285
    6. '<|end|>' → logprob: -9.876336097717285
    7. '                   ' → logprob: -10.001336097717285
    8. '       ' → logprob: -10.126336097717285
    9. '                
' → logprob: -10.501336097717285
    10. '              ' → logprob: -10.501336097717285

Token 288: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023100038524717093
    2. '           ' → logprob: -6.627309799194336
    3. ' if' → logprob: -7.377309799194336
    4. '       ' → logprob: -8.627309799194336
    5. '
' → logprob: -9.377309799194336
    6. '                
' → logprob: -11.002309799194336
    7. '<|end|>' → logprob: -11.377309799194336
    8. '                ' → logprob: -11.502309799194336
    9. 'if' → logprob: -11.502309799194336
    10. '                   ' → logprob: -12.127309799194336

Token 289: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.046356260776519775
    2. ' if' → logprob: -3.296356201171875
    3. '               ' → logprob: -4.796356201171875
    4. 'res' → logprob: -11.046356201171875
    5. '       ' → logprob: -12.546356201171875
    6. '           ' → logprob: -15.171356201171875
    7. ' res' → logprob: -15.296356201171875
    8. '	if' → logprob: -15.421356201171875
    9. '   ' → logprob: -15.921356201171875
    10. '                   ' → logprob: -16.296356201171875

Token 290: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.011099820025265217
    2. ' size' → logprob: -4.511099815368652
    3. '(size' → logprob: -10.011099815368652
    4. '               ' → logprob: -12.261099815368652
    5. '                   ' → logprob: -14.011099815368652
    6. '           ' → logprob: -14.386099815368652
    7. '	size' → logprob: -14.761099815368652
    8. '   ' → logprob: -15.511099815368652
    9. '
' → logprob: -16.63610076904297
    10. ' ' → logprob: -16.88610076904297

Token 291: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31326979398727417
    2. '%' → logprob: -1.313269853591919
    3. ' ' → logprob: -12.31326961517334
    4. ' ' → logprob: -13.18826961517334
    5. '%
' → logprob: -14.31326961517334
    6. ' %
' → logprob: -14.68826961517334
    7. '[' → logprob: -15.81326961517334
    8. '
' → logprob: -16.188270568847656
    9. '1' → logprob: -16.813270568847656
    10. '()%' → logprob: -16.813270568847656

Token 292: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003178306156769395
    2. ' ' → logprob: -5.753178119659424
    3. '```' → logprob: -15.003178596496582
    4. '
' → logprob: -16.628177642822266
    5. '۲' → logprob: -17.003177642822266
    6. '２' → logprob: -17.628177642822266
    7. '=' → logprob: -18.628177642822266
    8. ' ' → logprob: -18.753177642822266
    9. '٢' → logprob: -18.753177642822266
    10. '[' → logprob: -19.003177642822266

Token 293: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -19.75000762939453
    4. '۲' → logprob: -20.12500762939453
    5. '２' → logprob: -20.50000762939453
    6. '
' → logprob: -20.62500762939453
    7. '   ' → logprob: -20.75000762939453
    8. '==' → logprob: -21.37500762939453
    9. '

' → logprob: -21.50000762939453
    10. '  ' → logprob: -21.62500762939453

Token 294: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.010024157352745533
    2. ' ==' → logprob: -4.635024070739746
    3. '1' → logprob: -8.635024070739746
    4. '==
' → logprob: -9.635024070739746
    5. ':' → logprob: -11.760024070739746
    6. '=' → logprob: -11.885024070739746
    7. '===' → logprob: -12.385024070739746
    8. '```' → logprob: -12.635024070739746
    9. ')==' → logprob: -14.385024070739746
    10. '()==' → logprob: -14.385024070739746

Token 295: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006413076189346611
    2. ' ' → logprob: -7.875641345977783
    3. '0' → logprob: -8.250640869140625
    4. '2' → logprob: -17.250640869140625
    5. '```' → logprob: -17.625640869140625
    6. '
' → logprob: -18.875640869140625
    7. '   ' → logprob: -19.875640869140625
    8. '01' → logprob: -19.875640869140625
    9. '  ' → logprob: -20.375640869140625
    10. '=' → logprob: -20.500640869140625

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017896592617034912
    2. '0' → logprob: -6.376789569854736
    3. ' ' → logprob: -9.626790046691895
    4. '2' → logprob: -10.751790046691895
    5. '```' → logprob: -16.001789093017578
    6. '01' → logprob: -17.751789093017578
    7. '   ' → logprob: -18.376789093017578
    8. '  ' → logprob: -19.251789093017578
    9. '5' → logprob: -19.376789093017578
    10. '
' → logprob: -19.501789093017578

Token 297: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.056750014424324036
    2. ':
' → logprob: -3.0567500591278076
    3. '=' → logprob: -5.8067498207092285
    4. '==' → logprob: -6.0567498207092285
    5. '                   ' → logprob: -6.4317498207092285
    6. ')' → logprob: -8.556750297546387
    7. ' ==' → logprob: -8.681750297546387
    8. '<|end|>' → logprob: -9.181750297546387
    9. '):' → logprob: -9.306750297546387
    10. ' :' → logprob: -9.431750297546387

Token 298: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005135561805218458
    2. '               ' → logprob: -6.505135536193848
    3. '                       ' → logprob: -6.505135536193848
    4. ' +' → logprob: -7.130135536193848
    5. '<|end|>' → logprob: -8.255135536193848
    6. '+' → logprob: -8.380135536193848
    7. '           ' → logprob: -8.880135536193848
    8. '                    ' → logprob: -9.130135536193848
    9. '                  ' → logprob: -9.505135536193848
    10. '   ' → logprob: -9.505135536193848

Token 299: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.003195066237822175
    2. ' res' → logprob: -5.753195285797119
    3. '                   ' → logprob: -11.128194808959961
    4. '
' → logprob: -13.128194808959961
    5. '   ' → logprob: -14.753194808959961
    6. '	res' → logprob: -15.503194808959961
    7. '               ' → logprob: -16.87819480895996
    8. '                       ' → logprob: -18.50319480895996
    9. '           ' → logprob: -18.75319480895996
    10. '_res' → logprob: -19.12819480895996

Token 300: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5761079788208008
    2. ' +=' → logprob: -0.8261079788208008
    3. '+' → logprob: -8.7011079788208
    4. ' +' → logprob: -14.7011079788208
    5. ' -=' → logprob: -14.7011079788208
    6. '+="' → logprob: -15.2011079788208
    7. '   ' → logprob: -15.2011079788208
    8. ']+=' → logprob: -15.4511079788208
    9. '+=(' → logprob: -15.9511079788208
    10. '+='' → logprob: -15.9511079788208

Token 301: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0009120595059357584
    2. ' cnt' → logprob: -7.000912189483643
    3. 'count' → logprob: -15.375911712646484
    4. '+' → logprob: -16.000911712646484
    5. '(cnt' → logprob: -16.625911712646484
    6. '	cnt' → logprob: -16.625911712646484
    7. ' +' → logprob: -18.625911712646484
    8. '[cnt' → logprob: -18.625911712646484
    9. ' ' → logprob: -19.875911712646484
    10. '_cnt' → logprob: -19.875911712646484

Token 302: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006527434103190899
    2. ' else' → logprob: -5.131527423858643
    3. 'else' → logprob: -7.631527423858643
    4. '
' → logprob: -10.3815279006958
    5. '                ' → logprob: -10.5065279006958
    6. '           ' → logprob: -11.0065279006958
    7. '<|end|>' → logprob: -11.0065279006958
    8. '              ' → logprob: -12.2565279006958
    9. '       ' → logprob: -12.3815279006958
    10. '```' → logprob: -12.6315279006958

Token 303: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004883146379143
    2. 'else' → logprob: -5.754883289337158
    3. ' else' → logprob: -6.379883289337158
    4. '<|end|>' → logprob: -12.7548828125
    5. '```' → logprob: -13.0048828125
    6. '       ' → logprob: -14.1298828125
    7. 'elif' → logprob: -14.2548828125
    8. '		       ' → logprob: -14.5048828125
    9. '			' → logprob: -15.0048828125
    10. '              ' → logprob: -15.1298828125

Token 304: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3649519681930542
    2. ' else' → logprob: -1.3649519681930542
    3. '               ' → logprob: -2.9899520874023438
    4. '                ' → logprob: -10.364952087402344
    5. '       ' → logprob: -11.114952087402344
    6. '           ' → logprob: -11.114952087402344
    7. 'elif' → logprob: -11.489952087402344
    8. '```' → logprob: -12.614952087402344
    9. '              ' → logprob: -13.364952087402344
    10. ' elif' → logprob: -13.614952087402344

Token 305: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010020610876381397
    2. '                   ' → logprob: -5.135020732879639
    3. ':
' → logprob: -5.510020732879639
    4. '-' → logprob: -11.63502025604248
    5. '   ' → logprob: -12.13502025604248
    6. '                  ' → logprob: -12.13502025604248
    7. ' :' → logprob: -12.63502025604248
    8. '                    ' → logprob: -12.88502025604248
    9. '=' → logprob: -13.38502025604248
    10. '           ' → logprob: -13.63502025604248

Token 306: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00023727134976070374
    2. ' -' → logprob: -9.500237464904785
    3. '                  ' → logprob: -10.125237464904785
    4. '                    ' → logprob: -10.250237464904785
    5. '               ' → logprob: -10.500237464904785
    6. '           ' → logprob: -10.875237464904785
    7. '                       ' → logprob: -11.500237464904785
    8. '   ' → logprob: -11.625237464904785
    9. '-' → logprob: -11.875237464904785
    10. '                ' → logprob: -12.250237464904785

Token 307: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.3793231248855591
    2. '                   ' → logprob: -1.379323124885559
    3. ' res' → logprob: -2.7543230056762695
    4. '   ' → logprob: -9.62932300567627
    5. '               ' → logprob: -9.62932300567627
    6. '                       ' → logprob: -9.87932300567627
    7. '                    ' → logprob: -10.87932300567627
    8. '                  ' → logprob: -10.87932300567627
    9. '       ' → logprob: -11.12932300567627
    10. '           ' → logprob: -11.12932300567627

Token 308: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.06237320974469185
    2. ' -=' → logprob: -2.812373161315918
    3. '-' → logprob: -7.812373161315918
    4. '=' → logprob: -15.312373161315918
    5. '+=' → logprob: -15.562373161315918
    6. ' -' → logprob: -16.562374114990234
    7. '                   ' → logprob: -16.562374114990234
    8. '   ' → logprob: -16.937374114990234
    9. ' ' → logprob: -17.062374114990234
    10. '          ' → logprob: -17.812374114990234

Token 309: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0009117019944824278
    2. ' cnt' → logprob: -7.000911712646484
    3. '	cnt' → logprob: -16.125911712646484
    4. '(cnt' → logprob: -16.750911712646484
    5. 'count' → logprob: -17.375911712646484
    6. '[cnt' → logprob: -17.750911712646484
    7. '_cnt' → logprob: -21.000911712646484
    8. '               ' → logprob: -21.250911712646484
    9. 'ct' → logprob: -21.625911712646484
    10. '                   ' → logprob: -22.375911712646484

Token 310: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5538793802261353
    2. '
' → logprob: -0.9288793802261353
    3. 'print' → logprob: -3.5538792610168457
    4. '    
' → logprob: -6.678879261016846
    5. '<|end|>' → logprob: -8.553879737854004
    6. ' print' → logprob: -9.553879737854004
    7. '  
' → logprob: -9.928879737854004
    8. '
' → logprob: -10.678879737854004
    9. '\n' → logprob: -10.803879737854004
    10. '

' → logprob: -10.928879737854004

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17597070336341858
    2. '
' → logprob: -2.1759707927703857
    3. 'print' → logprob: -3.0509707927703857
    4. ' print' → logprob: -8.300971031188965
    5. '    
' → logprob: -8.800971031188965
    6. '<|end|>' → logprob: -9.675971031188965
    7. '```' → logprob: -10.300971031188965
    8. '  
' → logprob: -11.050971031188965
    9. '
' → logprob: -11.175971031188965
    10. '\n' → logprob: -11.925971031188965

Token 312: ' valid' (ID: 4529)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06221595034003258
    2. '   ' → logprob: -2.81221604347229
    3. '
' → logprob: -8.937215805053711
    4. ' print' → logprob: -9.312215805053711
    5. '```' → logprob: -10.937215805053711
    6. '    
' → logprob: -11.812215805053711
    7. '	print' → logprob: -14.687215805053711
    8. '``' → logprob: -15.562215805053711
    9. '  
' → logprob: -15.812215805053711
    10. '`' → logprob: -15.812215805053711

Token 313: '_count' (ID: 7536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9687038064002991
    2. '_numbers' → logprob: -1.3437037467956543
    3. '_count' → logprob: -1.8437037467956543
    4. '_counts' → logprob: -3.2187037467956543
    5. ' =' → logprob: -3.3437037467956543
    6. '_tokens' → logprob: -3.4687037467956543
    7. '=' → logprob: -3.9687037467956543
    8. '_n' → logprob: -3.9687037467956543
    9. ' ' → logprob: -4.718703746795654
    10. '_nums' → logprob: -4.843703746795654

Token 314: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23207925260066986
    2. '=' → logprob: -1.607079267501831
    3. ' +=' → logprob: -5.107079029083252
    4. ' ' → logprob: -7.607079029083252
    5. '+=' → logprob: -9.60707950592041
    6. ')' → logprob: -12.48207950592041
    7. '   ' → logprob: -12.60707950592041
    8. '_' → logprob: -12.60707950592041
    9. ' ' → logprob: -13.23207950592041
    10. ' |=' → logprob: -13.35707950592041

Token 315: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07951303571462631
    2. 'n' → logprob: -2.5795130729675293
    3. ' res' → logprob: -7.704513072967529
    4. 'res' → logprob: -8.704512596130371
    5. ' ' → logprob: -12.954512596130371
    6. '   ' → logprob: -13.079512596130371
    7. '
' → logprob: -14.579512596130371
    8. '    ' → logprob: -14.704512596130371
    9. ' ' → logprob: -15.079512596130371
    10. ' 
' → logprob: -16.079513549804688

Token 316: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1625034660100937
    2. '-' → logprob: -1.9125034809112549
    3. '+' → logprob: -6.287503242492676
    4. ' ' → logprob: -8.912503242492676
    5. '<|end|>' → logprob: -9.287503242492676
    6. ' +' → logprob: -9.412503242492676
    7. ')' → logprob: -10.787503242492676
    8. '   ' → logprob: -11.037503242492676
    9. '-count' → logprob: -11.537503242492676
    10. '%' → logprob: -11.787503242492676

Token 317: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.01814994215965271
    2. ' res' → logprob: -4.0181498527526855
    3. 'valid' → logprob: -17.643150329589844
    4. '   ' → logprob: -18.768150329589844
    5. '	res' → logprob: -19.268150329589844
    6. ' valid' → logprob: -20.018150329589844
    7. '_res' → logprob: -20.143150329589844
    8. ' ' → logprob: -20.268150329589844
    9. '(res' → logprob: -20.268150329589844
    10. '
' → logprob: -20.518150329589844

Token 318: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09290888160467148
    2. '
' → logprob: -2.5929088592529297
    3. 'print' → logprob: -4.34290885925293
    4. ' print' → logprob: -7.71790885925293
    5. '<|end|>' → logprob: -7.84290885925293
    6. '    
' → logprob: -10.46790885925293
    7. '```' → logprob: -10.84290885925293
    8. ' 
' → logprob: -11.71790885925293
    9. '	print' → logprob: -12.09290885925293
    10. '
' → logprob: -12.34290885925293

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12766481935977936
    2. 'print' → logprob: -2.127664804458618
    3. '
' → logprob: -7.627665042877197
    4. ' print' → logprob: -9.127664566040039
    5. '```' → logprob: -9.252664566040039
    6. '    
' → logprob: -10.752664566040039
    7. '<|end|>' → logprob: -10.877664566040039
    8. '	print' → logprob: -13.127664566040039
    9. '#print' → logprob: -14.502664566040039
    10. '`' → logprob: -14.752664566040039

Token 320: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6240566083070007e-06
    2. '   ' → logprob: -13.500001907348633
    3. ' print' → logprob: -16.250001907348633
    4. '```' → logprob: -19.250001907348633
    5. '
' → logprob: -19.625001907348633
    6. '	print' → logprob: -21.500001907348633
    7. '#print' → logprob: -22.500001907348633
    8. '    
' → logprob: -22.875001907348633
    9. 'for' → logprob: -22.875001907348633
    10. 'printf' → logprob: -23.000001907348633

Token 321: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.00022439735766965896
    2. 'valid' → logprob: -8.875224113464355
    3. ' not' → logprob: -9.875224113464355
    4. ' n' → logprob: -11.125224113464355
    5. ' m' → logprob: -11.625224113464355
    6. ' ' → logprob: -12.500224113464355
    7. ' len' → logprob: -12.875224113464355
    8. ' ' → logprob: -13.875224113464355
    9. '_valid' → logprob: -14.750224113464355
    10. '(valid' → logprob: -15.000224113464355

Token 322: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00028529210248962045
    2. ' _' → logprob: -8.625285148620605
    3. '_' → logprob: -9.625285148620605
    4. '>' → logprob: -10.500285148620605
    5. '_counts' → logprob: -12.625285148620605
    6. ' ' → logprob: -13.000285148620605
    7. ' >' → logprob: -13.500285148620605
    8. '==' → logprob: -14.000285148620605
    9. '\' → logprob: -14.125285148620605
    10. '   ' → logprob: -14.375285148620605

Token 323: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.01814994215965271
    2. '>' → logprob: -4.3931498527526855
    3. ' <=' → logprob: -5.3931498527526855
    4. ' ==' → logprob: -6.8931498527526855
    5. '==' → logprob: -11.018150329589844
    6. '<=' → logprob: -11.018150329589844
    7. ' ' → logprob: -11.768150329589844
    8. ' <' → logprob: -12.018150329589844
    9. ' >=' → logprob: -12.268150329589844
    10. ')' → logprob: -12.393150329589844

Token 324: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11870329082012177
    2. ' ' → logprob: -2.7437033653259277
    3. '1' → logprob: -3.1187033653259277
    4. 'n' → logprob: -5.868703365325928
    5. ' n' → logprob: -7.743703365325928
    6. '100' → logprob: -10.24370288848877
    7. '  ' → logprob: -11.43120288848877
    8. '2' → logprob: -11.93120288848877
    9. 'm' → logprob: -12.18120288848877
    10. '999' → logprob: -12.18120288848877

Token 325: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007007574662566185
    2. ' ' → logprob: -5.882007598876953
    3. '1' → logprob: -6.007007598876953
    4. 'n' → logprob: -6.382007598876953
    5. ' n' → logprob: -11.257007598876953
    6. '100' → logprob: -12.007007598876953
    7. 'm' → logprob: -13.444507598876953
    8. '2' → logprob: -13.507007598876953
    9. '999' → logprob: -13.569507598876953
    10. 'int' → logprob: -13.694507598876953

Token 326: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5232961773872375
    2. ':
' → logprob: -0.8982961773872375
    3. '   ' → logprob: -9.523296356201172
    4. '       ' → logprob: -9.648296356201172
    5. ':
' → logprob: -12.023296356201172
    6. ',' → logprob: -12.148296356201172
    7. ' and' → logprob: -12.148296356201172
    8. ':

' → logprob: -12.523296356201172
    9. ':return' → logprob: -12.523296356201172
    10. 'print' → logprob: -12.898296356201172

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021132626570761204
    2. 'print' → logprob: -6.627113342285156
    3. ' print' → logprob: -7.752113342285156
    4. '   ' → logprob: -8.502113342285156
    5. '        
' → logprob: -10.002113342285156
    6. '\n' → logprob: -10.502113342285156
    7. '           ' → logprob: -10.502113342285156
    8. '    
' → logprob: -11.377113342285156
    9. '\' → logprob: -11.502113342285156
    10. '\
' → logprob: -12.377113342285156

Token 328: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0240981578826904
    2. 'print' (adapté à ' print') → logprob: -1.1490981578826904
    3. '   ' → logprob: -1.7740981578826904
    4. ' print' → logprob: -1.8990981578826904
    5. '\n' → logprob: -6.5240983963012695
    6. '    
' → logprob: -7.1490983963012695
    7. '
' → logprob: -7.5240983963012695
    8. '    ' → logprob: -8.02409839630127
    9. ' 
' → logprob: -8.02409839630127
    10. '        
' → logprob: -8.02409839630127

Token 329: '("' (ID: 568)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28118571639060974
    2. '"' → logprob: -1.7811857461929321
    3. '-' → logprob: -2.6561856269836426
    4. '"No' → logprob: -5.906185626983643
    5. '"-' → logprob: -7.156185626983643
    6. 'None' → logprob: -7.156185626983643
    7. ''' → logprob: -7.656185626983643
    8. '"The' → logprob: -8.6561861038208
    9. '`' → logprob: -9.0311861038208
    10. 'NONE' → logprob: -9.0311861038208

Token 330: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5600560903549194
    2. 'no' → logprob: -1.5600560903549194
    3. 'No' → logprob: -1.8100560903549194
    4. 'NO' → logprob: -2.185056209564209
    5. '`' → logprob: -2.560056209564209
    6. '-' → logprob: -2.560056209564209
    7. 'none' → logprob: -3.060056209564209
    8. '"' → logprob: -4.185056209564209
    9. 'OR' → logprob: -4.685056209564209
    10. 'Impossible' → logprob: -4.935056209564209

Token 331: '.' (ID: 13)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.03539619967341423
    2. ' ")' → logprob: -4.160396099090576
    3. '\n' → logprob: -4.285396099090576
    4. '")
' → logprob: -6.535396099090576
    5. '"' → logprob: -7.160396099090576
    6. ' ' → logprob: -7.285396099090576
    7. '
' → logprob: -7.660396099090576
    8. ')' → logprob: -7.785396099090576
    9. ' )' → logprob: -8.910396575927734
    10. '%' → logprob: -8.972896575927734

Token 332: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.07363849878311157
    2. '0' → logprob: -2.948638439178467
    3. '00' → logprob: -4.073638439178467
    4. '")' → logprob: -6.823638439178467
    5. '"' → logprob: -8.823638916015625
    6. '")
' → logprob: -9.448638916015625
    7. '.' → logprob: -9.573638916015625
    8. '%' → logprob: -10.823638916015625
    9. '999' → logprob: -10.823638916015625
    10. '/' → logprob: -11.011138916015625

Token 333: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.10781734436750412
    2. '")' → logprob: -2.3578174114227295
    3. '0' → logprob: -5.48281717300415
    4. '00' → logprob: -5.85781717300415
    5. '%' → logprob: -8.107817649841309
    6. '"' → logprob: -9.607817649841309
    7. '")
' → logprob: -9.857817649841309
    8. ')' → logprob: -10.482817649841309
    9. '\n' → logprob: -10.482817649841309
    10. '001' → logprob: -10.857817649841309

Token 334: '000' (ID: 1302)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.04458664357662201
    2. '000' → logprob: -3.669586658477783
    3. '0' → logprob: -4.794586658477783
    4. '")
' → logprob: -4.794586658477783
    5. '\n' → logprob: -7.919586658477783
    6. '"' → logprob: -8.294586181640625
    7. '1' → logprob: -8.294586181640625
    8. ' ' → logprob: -8.544586181640625
    9. '00' → logprob: -8.919586181640625
    10. ')' → logprob: -9.169586181640625

Token 335: '0' (ID: 15)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.6306159496307373
    2. '000' → logprob: -0.8806159496307373
    3. '0' → logprob: -3.1306159496307373
    4. '00' → logprob: -5.255616188049316
    5. '")
' → logprob: -6.255616188049316
    6. ' ")' → logprob: -7.130616188049316
    7. '"' → logprob: -7.630616188049316
    8. '%' → logprob: -7.755616188049316
    9. '\n' → logprob: -8.130616188049316
    10. ' ' → logprob: -8.630616188049316

Token 336: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.000575432030018419
    2. '")
' → logprob: -7.500575542449951
    3. '0' → logprob: -11.750575065612793
    4. ')' → logprob: -12.000575065612793
    5. '")
' → logprob: -13.125575065612793
    6. ' ")' → logprob: -13.250575065612793
    7. '\n' → logprob: -13.375575065612793
    8. '000' → logprob: -13.875575065612793
    9. '"' → logprob: -14.000575065612793
    10. '")

' → logprob: -15.250575065612793

Token 337: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009773134952411056
    2. '       ' → logprob: -8.000977516174316
    3. 'else' → logprob: -8.125977516174316
    4. ' else' → logprob: -8.500977516174316
    5. '
' → logprob: -10.125977516174316
    6. 'continue' → logprob: -10.625977516174316
    7. '<|end|>' → logprob: -10.625977516174316
    8. ' continue' → logprob: -11.000977516174316
    9. '    
' → logprob: -11.500977516174316
    10. '	continue' → logprob: -11.750977516174316

Token 338: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48301810026168823
    2. '   ' → logprob: -1.108018159866333
    3. 'continue' (adapté à ' continue') → logprob: -3.108018159866333
    4. 'else' → logprob: -4.858017921447754
    5. ' continue' → logprob: -8.108017921447754
    6. ' ' → logprob: -9.733017921447754
    7. '	continue' → logprob: -10.858017921447754
    8. ' else' → logprob: -11.233017921447754
    9. '  ' → logprob: -12.483017921447754
    10. '
' → logprob: -12.608017921447754

Token 339: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5358752608299255
    2. '
' → logprob: -0.9108752608299255
    3. '    
' → logprob: -4.41087532043457
    4. '  
' → logprob: -8.53587532043457
    5. ' 
' → logprob: -8.91087532043457
    6. '        
' → logprob: -10.16087532043457
    7. '<|end|>' → logprob: -10.28587532043457
    8. '\n' → logprob: -10.66087532043457
    9. '   
' → logprob: -10.78587532043457
    10. '
' → logprob: -10.78587532043457

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29189738631248474
    2. '    
' → logprob: -2.0418972969055176
    3. ' 
' → logprob: -3.0418972969055176
    4. '
' → logprob: -3.1668972969055176
    5. '  
' → logprob: -4.291897296905518
    6. 'print' → logprob: -5.416897296905518
    7. '   
' → logprob: -5.416897296905518
    8. '     
' → logprob: -6.041897296905518
    9. '<|end|>' → logprob: -6.041897296905518
    10. 'n' → logprob: -6.291897296905518

Token 341: ' #' (ID: 1069)
  Prédit: 'rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rate' → logprob: -1.1864498853683472
    2. 'prob' → logprob: -1.3114498853683472
    3. '   ' → logprob: -1.8114498853683472
    4. 'print' → logprob: -1.9364498853683472
    5. ' rate' → logprob: -3.4364500045776367
    6. ' print' → logprob: -3.6864500045776367
    7. 'ratio' → logprob: -4.186450004577637
    8. 'avg' → logprob: -5.186450004577637
    9. ' probability' → logprob: -5.311450004577637
    10. 'result' → logprob: -5.561450004577637

Token 342: ' Sum' (ID: 34138)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.9494932889938354
    2. 'expected' → logprob: -1.0744932889938354
    3. 'ans' → logprob: -1.9494932889938354
    4. 'result' → logprob: -3.699493408203125
    5. 'avg' → logprob: -4.449493408203125
    6. 'answer' → logprob: -4.574493408203125
    7. 'total' → logprob: -4.574493408203125
    8. 'exp' → logprob: -4.699493408203125
    9. 'p' → logprob: -4.949493408203125
    10. 'sum' → logprob: -4.949493408203125

Token 343: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6027987003326416
    2. '=' → logprob: -1.7277987003326416
    3. '   ' → logprob: -2.7277987003326416
    4. '_' → logprob: -3.2277987003326416
    5. '_of' → logprob: -3.4777987003326416
    6. 'of' → logprob: -4.1027984619140625
    7. '_val' → logprob: -4.3527984619140625
    8. '_=' → logprob: -4.3527984619140625
    9. '_sum' → logprob: -4.3527984619140625
    10. 'sum' → logprob: -4.7277984619140625

Token 344: ' all' (ID: 722)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9883453249931335
    2. 'k' → logprob: -1.2383453845977783
    3. 'i' → logprob: -1.9883453845977783
    4. 'valid' → logprob: -2.2383453845977783
    5. 'range' → logprob: -4.113345146179199
    6. 'sum' → logprob: -4.488345146179199
    7. 'prob' → logprob: -4.488345146179199
    8. '(i' → logprob: -4.863345146179199
    9. '(' → logprob: -4.863345146179199
    10. 'fra' → logprob: -5.113345146179199

Token 345: ' natural' (ID: 6247)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.4348011314868927
    2. 'k' → logprob: -2.8098011016845703
    3. 'prob' → logprob: -3.3098011016845703
    4. ' valid' → logprob: -3.3098011016845703
    5. 'i' → logprob: -3.4348011016845703
    6. 'expected' → logprob: -3.6848011016845703
    7. 'numbers' → logprob: -3.6848011016845703
    8. 'x' → logprob: -4.30980110168457
    9. 'div' → logprob: -4.30980110168457
    10. 'fra' → logprob: -4.68480110168457

Token 346: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.0007278018747456372
    2. ' numbers' → logprob: -7.500727653503418
    3. 'k' → logprob: -9.500727653503418
    4. 'log' → logprob: -10.750727653503418
    5. 'number' → logprob: -10.875727653503418
    6. '
' → logprob: -11.375727653503418
    7. '(numbers' → logprob: -11.500727653503418
    8. '1' → logprob: -11.875727653503418
    9. 'range' → logprob: -12.500727653503418
    10. '```' → logprob: -12.625727653503418

Token 347: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7245693802833557
    2. ' up' → logprob: -1.974569320678711
    3. '(' → logprob: -2.224569320678711
    4. '=' → logprob: -2.599569320678711
    5. '1' → logprob: -3.349569320678711
    6. '(n' → logprob: -3.474569320678711
    7. ' (' → logprob: -3.724569320678711
    8. 'valid' → logprob: -3.849569320678711
    9. ' =' → logprob: -3.974569320678711
    10. 'up' → logprob: -4.974569320678711

Token 348: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010878281900659204
    2. ' ' → logprob: -6.876087665557861
    3. 'valid' → logprob: -10.50108814239502
    4. '0' → logprob: -10.75108814239502
    5. ' valid' → logprob: -12.75108814239502
    6. 'n' → logprob: -13.75108814239502
    7. 'to' → logprob: -15.12608814239502
    8. '(' → logprob: -15.12608814239502
    9. ' n' → logprob: -15.37608814239502
    10. '
' → logprob: -15.50108814239502

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. '0' → logprob: -11.50001335144043
    3. 'valid' → logprob: -13.25001335144043
    4. ' ' → logprob: -14.00001335144043
    5. 'n' → logprob: -14.87501335144043
    6. '```' → logprob: -15.75001335144043
    7. 'to' → logprob: -15.87501335144043
    8. '
' → logprob: -15.87501335144043
    9. '(' → logprob: -17.00001335144043
    10. '2' → logprob: -17.12501335144043

Token 350: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.35032424330711365
    2. 'to' → logprob: -1.225324273109436
    3. '   ' → logprob: -7.1003241539001465
    4. ',' → logprob: -7.9753241539001465
    5. '+' → logprob: -8.225324630737305
    6. ' through' → logprob: -8.975324630737305
    7. ' ' → logprob: -9.350324630737305
    8. '    ' → logprob: -9.850324630737305
    9. '
' → logprob: -10.475324630737305
    10. '=' → logprob: -10.475324630737305

Token 351: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.32940319180488586
    2. ' valid' → logprob: -2.3294031620025635
    3. 'valid' → logprob: -2.3294031620025635
    4. ' n' → logprob: -2.4544031620025635
    5. '(valid' → logprob: -11.954402923583984
    6. '_valid' → logprob: -12.954402923583984
    7. '   ' → logprob: -13.204402923583984
    8. '_n' → logprob: -13.204402923583984
    9. '	valid' → logprob: -13.204402923583984
    10. '    ' → logprob: -13.329402923583984

Token 352: '
' (ID: 198)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.42560890316963196
    2. '   ' → logprob: -1.4256088733673096
    3. 'total' → logprob: -3.1756088733673096
    4. ',' → logprob: -3.8006088733673096
    5. 'n' → logprob: -4.800609111785889
    6. 's' → logprob: -5.050609111785889
    7. '
' → logprob: -5.050609111785889
    8. ' sum' → logprob: -5.675609111785889
    9. '_sum' → logprob: -6.050609111785889
    10. ' =' → logprob: -6.175609111785889

Token 353: '   ' (ID: 271)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5049229264259338
    2. 'total' → logprob: -1.629922866821289
    3. ' sum' → logprob: -2.754922866821289
    4. '
' → logprob: -3.004922866821289
    5. '   ' → logprob: -3.004922866821289
    6. ' total' → logprob: -3.879922866821289
    7. '+' → logprob: -4.754922866821289
    8. ' +' → logprob: -6.379922866821289
    9. ',' → logprob: -6.629922866821289
    10. '\n' → logprob: -6.629922866821289

Token 354: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6847236752510071
    2. 'total' (adapté à ' total') → logprob: -1.5597236156463623
    3. ' sum' → logprob: -1.9347236156463623
    4. 'sum' → logprob: -2.0597236156463623
    5. ' s' → logprob: -5.309723854064941
    6. ' S' → logprob: -5.809723854064941
    7. 's' → logprob: -6.059723854064941
    8. '   ' → logprob: -6.434723854064941
    9. 'S' → logprob: -6.684723854064941
    10. ' tot' → logprob: -8.934723854064941

Token 355: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.7621111273765564
    2. ' =' → logprob: -1.1371111869812012
    3. '=' → logprob: -1.6371111869812012
    4. '_' → logprob: -5.137111186981201
    5. '*' → logprob: -5.137111186981201
    6. ' *' → logprob: -6.262111186981201
    7. '_n' → logprob: -6.512111186981201
    8. 'sum' → logprob: -7.137111186981201
    9. '_numbers' → logprob: -8.012110710144043
    10. '_val' → logprob: -8.762110710144043

Token 356: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038044244050979614
    2. '=' → logprob: -3.2880442142486572
    3. '   ' → logprob: -13.788043975830078
    4. ' ' → logprob: -14.038043975830078
    5. ' ' → logprob: -15.288043975830078
    6. '_' → logprob: -15.538043975830078
    7. '    ' → logprob: -15.663043975830078
    8. ',' → logprob: -15.788043975830078
    9. '=sum' → logprob: -16.413043975830078
    10. '=n' → logprob: -17.038043975830078

Token 357: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04860587790608406
    2. ' n' → logprob: -3.0486059188842773
    3. '   ' → logprob: -11.548605918884277
    4. '(n' → logprob: -12.173605918884277
    5. ' (' → logprob: -13.173605918884277
    6. '
' → logprob: -14.673605918884277
    7. '	n' → logprob: -14.798605918884277
    8. '(' → logprob: -14.923605918884277
    9. '\' → logprob: -15.548605918884277
    10. ' ' → logprob: -15.673605918884277

Token 358: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1442713737487793
    2. ' *' → logprob: -2.3942713737487793
    3. '*(' → logprob: -3.1442713737487793
    4. '(n' → logprob: -12.519271850585938
    5. '*n' → logprob: -12.644271850585938
    6. ' ' → logprob: -13.894271850585938
    7. ' *(' → logprob: -14.019271850585938
    8. ' ' → logprob: -14.394271850585938
    9. '   ' → logprob: -15.144271850585938
    10. '**' → logprob: -15.894271850585938

Token 359: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00034142236108891666
    2. ' (' → logprob: -8.000341415405273
    3. '(' → logprob: -12.500341415405273
    4. 'n' → logprob: -13.375341415405273
    5. '   ' → logprob: -14.625341415405273
    6. '((' → logprob: -17.125341415405273
    7. ' ' → logprob: -17.500341415405273
    8. '`' → logprob: -17.500341415405273
    9. '  ' → logprob: -17.625341415405273
    10. '\(' → logprob: -18.125341415405273

Token 360: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000759957532864064
    2. '(n' → logprob: -7.375760078430176
    3. ' n' → logprob: -9.125760078430176
    4. '   ' → logprob: -11.000760078430176
    5. '	n' → logprob: -13.000760078430176
    6. ')n' → logprob: -13.250760078430176
    7. '```' → logprob: -13.375760078430176
    8. '_n' → logprob: -15.125760078430176
    9. '    ' → logprob: -15.125760078430176
    10. '+n' → logprob: -15.500760078430176

Token 361: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0336495004594326
    2. ' +' → logprob: -3.408649444580078
    3. '1' → logprob: -13.158649444580078
    4. '   ' → logprob: -14.408649444580078
    5. '
' → logprob: -14.908649444580078
    6. '＋' → logprob: -15.033649444580078
    7. '```' → logprob: -15.408649444580078
    8. '+
' → logprob: -16.158649444580078
    9. ' ' → logprob: -16.283649444580078
    10. '+n' → logprob: -16.658649444580078

Token 362: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -18.5
    4. '```' → logprob: -19.875
    5. '
' → logprob: -20.125
    6. '2' → logprob: -21.5
    7. '0' → logprob: -21.625
    8. '  ' → logprob: -22.0
    9. '    ' → logprob: -22.25
    10. ')' → logprob: -22.875

Token 363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -18.875
    4. '0' → logprob: -19.75
    5. '2' → logprob: -20.0
    6. '
' → logprob: -20.125
    7. '   ' → logprob: -20.375
    8. '`' → logprob: -21.75
    9. '１' → logprob: -21.75
    10. '100' → logprob: -22.25

Token 364: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034750174381770194
    2. ')//' → logprob: -8.125347137451172
    3. ' )' → logprob: -10.250347137451172
    4. ')/' → logprob: -11.125347137451172
    5. '//' → logprob: -14.250347137451172
    6. ')
' → logprob: -15.625347137451172
    7. ' //' → logprob: -15.625347137451172
    8. '）' → logprob: -16.250347137451172
    9. '```' → logprob: -16.250347137451172
    10. ')`' → logprob: -16.750347137451172

Token 365: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.025801805779337883
    2. ' //' → logprob: -4.150801658630371
    3. '/' → logprob: -4.650801658630371
    4. ' /' → logprob: -9.025801658630371
    5. '```' → logprob: -10.525801658630371
    6. '   ' → logprob: -11.775801658630371
    7. '
' → logprob: -12.150801658630371
    8. '#' → logprob: -13.275801658630371
    9. ')' → logprob: -14.275801658630371
    10. ' ' → logprob: -14.275801658630371

Token 366: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '1' → logprob: -19.875
    4. '   ' → logprob: -19.875
    5. '
' → logprob: -21.625
    6. '```' → logprob: -21.75
    7. '

' → logprob: -22.125
    8. '
' → logprob: -22.375
    9. '۲' → logprob: -22.375
    10. '  ' → logprob: -22.5

Token 367: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '1' → logprob: -19.875
    4. '```' → logprob: -20.125
    5. '   ' → logprob: -20.25
    6. '۲' → logprob: -20.625
    7. '２' → logprob: -21.1875
    8. '
' → logprob: -21.375
    9. '२' → logprob: -21.6875
    10. '  ' → logprob: -22.0625

Token 368: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00574344489723444
    2. 'valid' → logprob: -5.630743503570557
    3. '
' → logprob: -6.880743503570557
    4. '    
' → logprob: -7.630743503570557
    5. ' valid' → logprob: -7.880743503570557
    6. 'sum' → logprob: -9.255743026733398
    7. ',' → logprob: -10.755743026733398
    8. '```' → logprob: -10.880743026733398
    9. '	valid' → logprob: -11.380743026733398
    10. 'total' → logprob: -11.505743026733398

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37171462178230286
    2. '
' → logprob: -2.1217145919799805
    3. 'valid' → logprob: -2.4967145919799805
    4. ' valid' → logprob: -2.4967145919799805
    5. '    
' → logprob: -4.1217145919799805
    6. 'sum' → logprob: -5.4967145919799805
    7. ' sum' → logprob: -7.4967145919799805
    8. '```' → logprob: -7.4967145919799805
    9. '	valid' → logprob: -7.6217145919799805
    10. '<|end|>' → logprob: -7.8717145919799805

Token 370: ' #' (ID: 1069)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.8976796269416809
    2. 'valid' → logprob: -1.0226795673370361
    3. 'sum' → logprob: -2.147679567337036
    4. 'print' → logprob: -3.647679567337036
    5. 'invalid' → logprob: -3.772679567337036
    6. '#' (adapté à ' #') → logprob: -3.897679567337036
    7. 'excluded' → logprob: -4.647679805755615
    8. '   ' → logprob: -5.022679805755615
    9. 'good' → logprob: -5.522679805755615
    10. 'res' → logprob: -5.772679805755615

Token 371: ' Sum' (ID: 34138)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.3679637908935547
    2. 'excluded' → logprob: -1.3679637908935547
    3. 'invalid' → logprob: -1.6179637908935547
    4. 'div' → logprob: -2.1179637908935547
    5. 'valid' → logprob: -2.4929637908935547
    6. 'res' → logprob: -3.6179637908935547
    7. 'exclude' → logprob: -4.117963790893555
    8. '#' → logprob: -4.367963790893555
    9. 'for' → logprob: -4.867963790893555
    10. 'not' → logprob: -5.742963790893555

Token 372: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2593743801116943
    2. '_of' → logprob: -1.3843743801116943
    3. '_valid' → logprob: -2.1343743801116943
    4. '_div' → logprob: -2.2593743801116943
    5. '_' → logprob: -2.5093743801116943
    6. 'of' → logprob: -2.6343743801116943
    7. '=' → logprob: -4.134374618530273
    8. '_ex' → logprob: -4.134374618530273
    9. '   ' → logprob: -4.259374618530273
    10. 'div' → logprob: -4.509374618530273

Token 373: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5421595573425293
    2. 'multip' → logprob: -1.6671595573425293
    3. 'excluded' → logprob: -2.7921595573425293
    4. 'invalid' → logprob: -3.0421595573425293
    5. 'ar' → logprob: -3.2921595573425293
    6. 'p' → logprob: -3.4171595573425293
    7. 'x' → logprob: -4.542159557342529
    8. 'numbers' → logprob: -4.667159557342529
    9. 'valid' → logprob: -5.167159557342529
    10. 'sum' → logprob: -5.292159557342529

Token 374: ' multiples' (ID: 70720)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.6025670766830444
    2. 'excluded' → logprob: -1.9775670766830444
    3. 'invalid' → logprob: -2.227567195892334
    4. 'numbers' → logprob: -2.477567195892334
    5. 'valid' → logprob: -3.852567195892334
    6. 'x' → logprob: -3.852567195892334
    7. ' multiples' → logprob: -4.352567195892334
    8. ' numbers' → logprob: -4.852567195892334
    9. 'p' → logprob: -4.977567195892334
    10. '(i' → logprob: -5.227567195892334

Token 375: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.702052116394043
    2. 'of' → logprob: -1.827052116394043
    3. ' =' → logprob: -2.077052116394043
    4. '   ' → logprob: -2.327052116394043
    5. 'for' → logprob: -2.827052116394043
    6. ' of' → logprob: -3.077052116394043
    7. ' for' → logprob: -5.827052116394043
    8. '_of' → logprob: -6.077052116394043
    9. 'def' → logprob: -6.327052116394043
    10. 's' → logprob: -6.452052116394043

Token 376: ' each' (ID: 2454)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.4601506292819977
    2. 'p' → logprob: -1.0851505994796753
    3. 'arr' → logprob: -4.335150718688965
    4. 'x' → logprob: -5.085150718688965
    5. ' curr' → logprob: -5.585150718688965
    6. '1' → logprob: -6.210150718688965
    7. 'each' → logprob: -6.585150718688965
    8. ' p' → logprob: -6.835150718688965
    9. 'i' → logprob: -6.960150718688965
    10. 'l' → logprob: -7.085150718688965

Token 377: ' pi' (ID: 6404)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.042616236954927444
    2. 'x' → logprob: -4.167616367340088
    3. 'pi' → logprob: -4.167616367340088
    4. 'arr' → logprob: -5.417616367340088
    5. 'num' → logprob: -5.667616367340088
    6. 'prime' → logprob: -7.292616367340088
    7. 'div' → logprob: -7.542616367340088
    8. 'curr' → logprob: -7.667616367340088
    9. ' p' → logprob: -7.917616367340088
    10. 'l' → logprob: -9.04261589050293

Token 378: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030475517734885216
    2. ' for' → logprob: -4.655475616455078
    3. ' =' → logprob: -4.905475616455078
    4. 'for' → logprob: -5.030475616455078
    5. '
' → logprob: -6.030475616455078
    6. '=' → logprob: -6.905475616455078
    7. ',' → logprob: -7.155475616455078
    8. 's' → logprob: -7.280475616455078
    9. 'sum' → logprob: -8.030475616455078
    10. ':' → logprob: -8.655475616455078

Token 379: ' inclusion' (ID: 42293)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.069921612739563
    2. 'in' → logprob: -1.944921612739563
    3. 'p' → logprob: -2.0699214935302734
    4. 'n' → logprob: -2.9449214935302734
    5. ' p' → logprob: -3.0699214935302734
    6. 'their' → logprob: -3.3199214935302734
    7. 'multip' → logprob: -3.4449214935302734
    8. '#' → logprob: -3.5699214935302734
    9. 'respect' → logprob: -3.5699214935302734
    10. ' their' → logprob: -4.069921493530273

Token 380: '-ex' (ID: 15801)
  Prédit: '-ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ex' → logprob: -0.0005943780997768044
    2. '-' → logprob: -8.000594139099121
    3. 'ex' → logprob: -8.375594139099121
    4. '–' → logprob: -10.875594139099121
    5. ' -' → logprob: -12.375594139099121
    6. '_ex' → logprob: -12.875594139099121
    7. ' ' → logprob: -14.500594139099121
    8. '   ' → logprob: -14.875594139099121
    9. '−' → logprob: -14.875594139099121
    10. '--' → logprob: -15.375594139099121

Token 381: 'clusion' (ID: 15482)
  Prédit: 'clusion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusion' → logprob: -0.0005188359646126628
    2. 'cl' → logprob: -8.375518798828125
    3. 'c' → logprob: -9.500518798828125
    4. 'clude' → logprob: -9.750518798828125
    5. 'l' → logprob: -9.750518798828125
    6. 'clusions' → logprob: -10.250518798828125
    7. '```' → logprob: -11.500518798828125
    8. 'clus' → logprob: -12.000518798828125
    9. 'cision' → logprob: -12.250518798828125
    10. 'sum' → logprob: -12.500518798828125

Token 382: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011982052819803357
    2. '
' → logprob: -7.8761982917785645
    3. 'sum' → logprob: -8.126197814941406
    4. ' sum' → logprob: -9.126197814941406
    5. '    
' → logprob: -9.251197814941406
    6. ',' → logprob: -9.251197814941406
    7. ' for' → logprob: -9.751197814941406
    8. '_sum' → logprob: -10.501197814941406
    9. ' sums' → logprob: -11.001197814941406
    10. '  
' → logprob: -11.251197814941406

Token 383: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008031846955418587
    2. 'sum' → logprob: -5.008031845092773
    3. ' sum' → logprob: -7.258031845092773
    4. '
' → logprob: -8.383031845092773
    5. '    
' → logprob: -9.258031845092773
    6. 's' → logprob: -9.758031845092773
    7. ',' → logprob: -10.008031845092773
    8. 'total' → logprob: -10.258031845092773
    9. 'multip' → logprob: -10.383031845092773
    10. ' multiples' → logprob: -11.133031845092773

Token 384: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.6386422514915466
    2. 'total' → logprob: -2.0136423110961914
    3. 'res' → logprob: -2.6386423110961914
    4. 'excluded' → logprob: -2.7636423110961914
    5. 'multiple' → logprob: -2.8886423110961914
    6. 'multip' → logprob: -3.2636423110961914
    7. 'mul' → logprob: -3.2636423110961914
    8. 'div' → logprob: -3.5136423110961914
    9. 'exclude' → logprob: -4.638642311096191
    10. 'mult' → logprob: -5.138642311096191

Token 385: '_ex' (ID: 5724)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04595683515071869
    2. ' =' → logprob: -3.92095685005188
    3. '=' → logprob: -4.295956611633301
    4. '_m' → logprob: -5.420956611633301
    5. '_=' → logprob: -5.545956611633301
    6. '_of' → logprob: -6.420956611633301
    7. 'of' → logprob: -7.045956611633301
    8. '_mult' → logprob: -8.7959566116333
    9. '_pi' → logprob: -9.0459566116333
    10. '_mul' → logprob: -9.5459566116333

Token 386: 'cluded' (ID: 15730)
  Prédit: 'cluded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cluded' → logprob: -0.38939714431762695
    2. 'cl' → logprob: -1.764397144317627
    3. 'c' → logprob: -2.639397144317627
    4. 'clusion' → logprob: -3.264397144317627
    5. 'clude' → logprob: -3.264397144317627
    6. 'clusions' → logprob: -6.014397144317627
    7. '=' → logprob: -8.264396667480469
    8. ' =' → logprob: -8.389396667480469
    9. '_' → logprob: -9.389396667480469
    10. '_cl' → logprob: -10.139396667480469

Token 387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05488532781600952
    2. '=' → logprob: -2.9298853874206543
    3. ' ' → logprob: -13.804884910583496
    4. 's' → logprob: -14.679884910583496
    5. ',' → logprob: -14.804884910583496
    6. '  ' → logprob: -15.304884910583496
    7. ' +=' → logprob: -15.304884910583496
    8. '   ' → logprob: -15.304884910583496
    9. '```' → logprob: -16.554885864257812
    10. '=sum' → logprob: -16.554885864257812

Token 388: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.0339031834737398e-05
    2. ' ' → logprob: -10.875020027160645
    3. '   ' → logprob: -13.625020027160645
    4. 'sum' → logprob: -17.62502098083496
    5. 'res' → logprob: -18.12502098083496
    6. '  ' → logprob: -18.12502098083496
    7. '```' → logprob: -18.68752098083496
    8. '=' → logprob: -19.56252098083496
    9. '۰' → logprob: -19.68752098083496
    10. '    ' → logprob: -19.87502098083496

Token 389: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.250001907348633
    4. 'res' → logprob: -17.000001907348633
    5. 'sum' → logprob: -18.750001907348633
    6. 'import' → logprob: -18.812501907348633
    7. '```' → logprob: -19.437501907348633
    8. '۰' → logprob: -19.875001907348633
    9. '  ' → logprob: -19.937501907348633
    10. '=' → logprob: -20.125001907348633

Token 390: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.673547563375905e-05
    2. 'for' → logprob: -9.625086784362793
    3. ' for' → logprob: -11.000086784362793
    4. '
' → logprob: -13.000086784362793
    5. '<|end|>' → logprob: -14.250086784362793
    6. '    
' → logprob: -15.125086784362793
    7. '       ' → logprob: -15.375086784362793
    8. 'import' → logprob: -16.375085830688477
    9. '	for' → logprob: -16.375085830688477
    10. ',' → logprob: -16.500085830688477

Token 391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012258238857612014
    2. 'for' → logprob: -6.75122594833374
    3. ' for' → logprob: -9.876225471496582
    4. 'from' → logprob: -13.001225471496582
    5. '       ' → logprob: -13.876225471496582
    6. '	for' → logprob: -14.501225471496582
    7. '
' → logprob: -15.876225471496582
    8. '```' → logprob: -15.876225471496582
    9. '    
' → logprob: -16.3762264251709
    10. 'import' → logprob: -16.8762264251709

Token 392: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0022739621344953775
    2. 'from' → logprob: -6.127274036407471
    3. '   ' → logprob: -9.502273559570312
    4. 'length' → logprob: -11.627273559570312
    5. ' for' → logprob: -12.502273559570312
    6. 'import' → logprob: -14.127273559570312
    7. 'def' → logprob: -14.252273559570312
    8. '
' → logprob: -16.752273559570312
    9. '```' → logprob: -17.127273559570312
    10. '	for' → logprob: -17.502273559570312

Token 393: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.018153570592403412
    2. ' size' → logprob: -4.018153667449951
    3. 's' → logprob: -13.768153190612793
    4. 'length' → logprob: -14.268153190612793
    5. '	size' → logprob: -14.893153190612793
    6. ' ' → logprob: -15.143153190612793
    7. 'sizei' → logprob: -15.268153190612793
    8. '   ' → logprob: -15.393153190612793
    9. '(size' → logprob: -15.893153190612793
    10. '[size' → logprob: -16.26815414428711

Token 394: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693461775779724
    2. 'in' → logprob: -2.12693452835083
    3. ' ' → logprob: -12.876935005187988
    4. ',' → logprob: -13.251935005187988
    5. '1' → logprob: -14.126935005187988
    6. 'size' → logprob: -14.626935005187988
    7. '   ' → logprob: -15.876935005187988
    8. ')' → logprob: -15.876935005187988
    9. '```' → logprob: -16.001934051513672
    10. '=' → logprob: -16.251934051513672

Token 395: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020509003661572933
    2. ' range' → logprob: -8.500205039978027
    3. ' ' → logprob: -14.625205039978027
    4. '   ' → logprob: -15.000205039978027
    5. '1' → logprob: -15.250205039978027
    6. 'size' → logprob: -15.500205039978027
    7. '(range' → logprob: -16.250205993652344
    8. '  ' → logprob: -16.625205993652344
    9. '```' → logprob: -17.250205993652344
    10. '	range' → logprob: -17.250205993652344

Token 396: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31330493092536926
    2. '1' → logprob: -1.3133049011230469
    3. '   ' → logprob: -10.813304901123047
    4. ' ' → logprob: -11.313304901123047
    5. ' (' → logprob: -12.188304901123047
    6. ',' → logprob: -12.688304901123047
    7. 'from' → logprob: -13.813304901123047
    8. '<|end|>' → logprob: -14.938304901123047
    9. '
' → logprob: -15.188304901123047
    10. '2' → logprob: -15.313304901123047

Token 397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6537622034084052e-05
    2. ' ' → logprob: -10.62502670288086
    3. '   ' → logprob: -13.75002670288086
    4. '2' → logprob: -14.75002670288086
    5. 'size' → logprob: -15.50002670288086
    6. '(' → logprob: -16.31252670288086
    7. '
' → logprob: -16.68752670288086
    8. '0' → logprob: -17.12502670288086
    9. '```' → logprob: -17.37502670288086
    10. 'length' → logprob: -17.56252670288086

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022046364028938115
    2. ',size' → logprob: -9.00022029876709
    3. ' ,' → logprob: -9.75022029876709
    4. '   ' → logprob: -10.50022029876709
    5. ',length' → logprob: -12.37522029876709
    6. ',len' → logprob: -12.75022029876709
    7. 'size' → logprob: -13.00022029876709
    8. ',
' → logprob: -14.37522029876709
    9. '1' → logprob: -14.75022029876709
    10. ' size' → logprob: -16.250221252441406

Token 399: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0016474456060677767
    2. ' length' → logprob: -6.501647472381592
    3. 'len' → logprob: -8.876646995544434
    4. '   ' → logprob: -12.251646995544434
    5. 'size' → logprob: -14.751646995544434
    6. ' len' → logprob: -16.12664794921875
    7. ' ' → logprob: -16.37664794921875
    8. '1' → logprob: -17.00164794921875
    9. '	length' → logprob: -17.25164794921875
    10. '(length' → logprob: -17.37664794921875

Token 400: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2077707052230835
    2. '+' → logprob: -1.7077707052230835
    3. ',' → logprob: -5.082770824432373
    4. '   ' → logprob: -9.707770347595215
    5. ' ,' → logprob: -10.082770347595215
    6. '+,' → logprob: -10.582770347595215
    7. ' ' → logprob: -12.957770347595215
    8. '1' → logprob: -13.832770347595215
    9. ' +
' → logprob: -14.207770347595215
    10. '    ' → logprob: -14.582770347595215

Token 401: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038132257759571075
    2. '+' → logprob: -3.5381321907043457
    3. ' ' → logprob: -5.163132190704346
    4. 'size' → logprob: -6.663132190704346
    5. ' size' → logprob: -7.163132190704346
    6. ' +' → logprob: -7.788132190704346
    7. '   ' → logprob: -9.788132667541504
    8. 'length' → logprob: -10.288132667541504
    9. 'm' → logprob: -11.163132667541504
    10. 'len' → logprob: -11.413132667541504

Token 402: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006452414090745151
    2. '+' → logprob: -7.875645160675049
    3. ' ' → logprob: -8.250645637512207
    4. '   ' → logprob: -13.500645637512207
    5. ' +' → logprob: -13.875645637512207
    6. '2' → logprob: -14.125645637512207
    7. 'm' → logprob: -14.625645637512207
    8. 'size' → logprob: -15.500645637512207
    9. 'len' → logprob: -15.750645637512207
    10. '
' → logprob: -16.87564468383789

Token 403: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2153441309928894
    2. '):' → logprob: -2.340344190597534
    3. '):
' → logprob: -2.590344190597534
    4. ':
' → logprob: -3.840344190597534
    5. '   ' → logprob: -7.090343952178955
    6. ',' → logprob: -9.715344429016113
    7. ')' → logprob: -10.465344429016113
    8. '}:' → logprob: -12.090344429016113
    9. '**' → logprob: -12.215344429016113
    10. '):
' → logprob: -12.590344429016113

Token 404: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018299775198101997
    2. '       ' → logprob: -4.018299579620361
    3. ' for' → logprob: -9.64330005645752
    4. '<|end|>' → logprob: -9.64330005645752
    5. '	for' → logprob: -12.01830005645752
    6. 'for' → logprob: -12.51830005645752
    7. '<|end|>' → logprob: -12.64330005645752
    8. ',' → logprob: -13.14330005645752
    9. '    ' → logprob: -13.64330005645752
    10. '```' → logprob: -14.51830005645752

Token 405: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04933394491672516
    2. ' for' → logprob: -3.0493340492248535
    3. '   ' → logprob: -7.7993340492248535
    4. '	for' → logprob: -8.049333572387695
    5. '       ' → logprob: -11.424333572387695
    6. ' ' → logprob: -12.549333572387695
    7. 'from' → logprob: -13.674333572387695
    8. '<|end|>' → logprob: -14.799333572387695
    9. '```' → logprob: -15.049333572387695
    10. '    ' → logprob: -15.174333572387695

Token 406: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.2571665644645691
    2. ' comb' → logprob: -1.5071666240692139
    3. 'com' → logprob: -5.257166385650635
    4. 'combo' → logprob: -11.757166862487793
    5. 'c' → logprob: -12.882166862487793
    6. 'comm' → logprob: -14.257166862487793
    7. '(com' → logprob: -14.382166862487793
    8. ' combo' → logprob: -14.882166862487793
    9. 'cmb' → logprob: -14.882166862487793
    10. '_comb' → logprob: -15.007166862487793

Token 407: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01108201127499342
    2. 'in' → logprob: -4.511082172393799
    3. ' ' → logprob: -11.76108169555664
    4. '        ' → logprob: -11.88608169555664
    5. 's' → logprob: -12.76108169555664
    6. 'space' → logprob: -12.76108169555664
    7. '	in' → logprob: -13.13608169555664
    8. '<|end|>' → logprob: -13.13608169555664
    9. '		' → logprob: -13.63608169555664
    10. 'import' → logprob: -14.38608169555664

Token 408: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.008890031836926937
    2. '(com' → logprob: -5.008890151977539
    3. ' combinations' → logprob: -6.258890151977539
    4. 'comb' → logprob: -8.383890151977539
    5. ' comb' → logprob: -10.633890151977539
    6. '	com' → logprob: -13.008890151977539
    7. 'size' → logprob: -13.508890151977539
    8. ' com' → logprob: -14.133890151977539
    9. '<com' → logprob: -14.508890151977539
    10. '```' → logprob: -14.883890151977539

Token 409: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.0802738870552275e-05
    2. ' (' → logprob: -11.75001049041748
    3. '(' → logprob: -13.50001049041748
    4. ',' → logprob: -14.87501049041748
    5. ',p' → logprob: -15.37501049041748
    6. '   ' → logprob: -16.000011444091797
    7. 'import' → logprob: -16.125011444091797
    8. ')' → logprob: -16.250011444091797
    9. '```' → logprob: -16.250011444091797
    10. 'p' → logprob: -16.500011444091797

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002827223390340805
    2. ',size' → logprob: -5.877827167510986
    3. 'size' → logprob: -11.377827644348145
    4. '           ' → logprob: -12.502827644348145
    5. ' ,' → logprob: -12.627827644348145
    6. '(size' → logprob: -13.252827644348145
    7. '               ' → logprob: -13.877827644348145
    8. ',length' → logprob: -15.502827644348145
    9. '[size' → logprob: -15.627827644348145
    10. ' size' → logprob: -15.877827644348145

Token 411: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0003357006062287837
    2. ' size' → logprob: -8.000335693359375
    3. 'length' → logprob: -15.875335693359375
    4. '[size' → logprob: -16.000335693359375
    5. '(size' → logprob: -16.750335693359375
    6. '   ' → logprob: -17.375335693359375
    7. ',size' → logprob: -17.750335693359375
    8. ')' → logprob: -18.750335693359375
    9. 's' → logprob: -18.750335693359375
    10. ' ' → logprob: -18.875335693359375

Token 412: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007120022550225258
    2. '):' → logprob: -5.132120132446289
    3. '):
' → logprob: -7.132120132446289
    4. '           ' → logprob: -8.507120132446289
    5. ',' → logprob: -9.257120132446289
    6. '       ' → logprob: -10.382120132446289
    7. ':' → logprob: -10.882120132446289
    8. ':
' → logprob: -11.007120132446289
    9. '):

' → logprob: -12.007120132446289
    10. '   ' → logprob: -12.132120132446289

Token 413: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00037359268753789365
    2. '       ' → logprob: -8.250373840332031
    3. 'curr' → logprob: -9.875373840332031
    4. '<|end|>' → logprob: -11.250373840332031
    5. '               ' → logprob: -11.500373840332031
    6. '	       ' → logprob: -11.625373840332031
    7. ' curr' → logprob: -11.875373840332031
    8. '```' → logprob: -12.875373840332031
    9. '		' → logprob: -13.000373840332031
    10. '                   ' → logprob: -13.125373840332031

Token 414: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.016483796760439873
    2. ' curr' → logprob: -4.641483783721924
    3. '               ' → logprob: -5.516483783721924
    4. '           ' → logprob: -6.391483783721924
    5. '   ' → logprob: -7.141483783721924
    6. '	curr' → logprob: -9.016484260559082
    7. '       ' → logprob: -10.641484260559082
    8. 'cur' → logprob: -11.141484260559082
    9. ' ' → logprob: -11.266484260559082
    10. '[curr' → logprob: -11.641484260559082

Token 415: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -8.149051427608356e-05
    2. '_' → logprob: -10.500081062316895
    3. '=_' → logprob: -11.875081062316895
    4. ' _' → logprob: -12.000081062316895
    5. '_ex' → logprob: -12.125081062316895
    6. '_s' → logprob: -12.125081062316895
    7. '_token' → logprob: -12.375081062316895
    8. '='_' → logprob: -12.875081062316895
    9. '_ll' → logprob: -13.000081062316895
    10. ''_' → logprob: -13.000081062316895

Token 416: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.04630925878882408
    2. 'c' → logprob: -3.796309232711792
    3. 'm' → logprob: -3.796309232711792
    4. '_cm' → logprob: -9.046309471130371
    5. '_c' → logprob: -9.671309471130371
    6. '   ' → logprob: -10.296309471130371
    7. '=' → logprob: -10.546309471130371
    8. 'cms' → logprob: -10.796309471130371
    9. '_m' → logprob: -11.171309471130371
    10. 'mc' → logprob: -11.546309471130371

Token 417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233882926404476
    2. ' =' → logprob: -5.2552337646484375
    3. ',' → logprob: -18.130233764648438
    4. '```' → logprob: -18.380233764648438
    5. '*=' → logprob: -18.505233764648438
    6. '1' → logprob: -18.505233764648438
    7. '_=' → logprob: -18.755233764648438
    8. '.=' → logprob: -19.255233764648438
    9. '＝' → logprob: -19.255233764648438
    10. '0' → logprob: -19.380233764648438

Token 418: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '           ' → logprob: -17.7500057220459
    4. '   ' → logprob: -18.1250057220459
    5. '```' → logprob: -19.5000057220459
    6. 'l' → logprob: -20.0000057220459
    7. '  ' → logprob: -20.7500057220459
    8. '=' → logprob: -20.7500057220459
    9. '<|end|>' → logprob: -21.1250057220459
    10. 'def' → logprob: -21.2500057220459

Token 419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.500001907348633
    4. '```' → logprob: -19.500001907348633
    5. '<|end|>' → logprob: -20.375001907348633
    6. '=' → logprob: -20.375001907348633
    7. 'l' → logprob: -20.562501907348633
    8. 'def' → logprob: -20.875001907348633
    9. '
' → logprob: -21.375001907348633
    10. '           ' → logprob: -21.625001907348633

Token 420: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05462395399808884
    2. '<|end|>' → logprob: -3.30462384223938
    3. '            ' → logprob: -5.304624080657959
    4. 'for' → logprob: -5.679624080657959
    5. ' for' → logprob: -6.179624080657959
    6. '            
' → logprob: -6.554624080657959
    7. ',' → logprob: -7.179624080657959
    8. '<|end|>' → logprob: -7.179624080657959
    9. '		' → logprob: -7.429624080657959
    10. '               ' → logprob: -8.0546236038208

Token 421: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 422: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07089371234178543
    2. '           ' → logprob: -3.0708937644958496
    3. ' for' → logprob: -3.8208937644958496
    4. '               ' → logprob: -8.820893287658691
    5. '	for' → logprob: -13.570893287658691
    6. '		' → logprob: -14.070893287658691
    7. '       ' → logprob: -14.695893287658691
    8. '   ' → logprob: -15.570893287658691
    9. '<|end|>' → logprob: -15.695893287658691
    10. '	       ' → logprob: -15.820893287658691

Token 423: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0076065086759626865
    2. ' x' → logprob: -4.882606506347656
    3. 'num' → logprob: -15.632606506347656
    4. ' ' → logprob: -17.132606506347656
    5. '	x' → logprob: -17.257606506347656
    6. 'token' → logprob: -17.632606506347656
    7. '```' → logprob: -17.757606506347656
    8. 'y' → logprob: -17.882606506347656
    9. 'c' → logprob: -18.132606506347656
    10. '   ' → logprob: -19.132606506347656

Token 424: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693272531032562
    2. 'in' → logprob: -2.1269326210021973
    3. '	in' → logprob: -13.751933097839355
    4. ' ' → logprob: -14.126933097839355
    5. 'In' → logprob: -14.251933097839355
    6. 'import' → logprob: -14.501933097839355
    7. 'x' → logprob: -14.626933097839355
    8. 's' → logprob: -15.126933097839355
    9. '_in' → logprob: -15.626933097839355
    10. ',' → logprob: -15.751933097839355

Token 425: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0006268949946388602
    2. ' comb' → logprob: -7.375627040863037
    3. 'com' → logprob: -15.125626564025879
    4. '```' → logprob: -18.125627517700195
    5. '_comb' → logprob: -18.375627517700195
    6. '(com' → logprob: -18.375627517700195
    7. 'combo' → logprob: -18.500627517700195
    8. 'x' → logprob: -19.000627517700195
    9. 'Comb' → logprob: -19.500627517700195
    10. ' ' → logprob: -19.500627517700195

Token 426: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6499366760253906
    2. ':' → logprob: -0.8999366760253906
    3. ':
' → logprob: -3.0249366760253906
    4. '<|end|>' → logprob: -4.774936676025391
    5. ',' → logprob: -5.149936676025391
    6. '           ' → logprob: -5.524936676025391
    7. ' in' → logprob: -7.024936676025391
    8. '                ' → logprob: -7.524936676025391
    9. '            ' → logprob: -8.02493667602539
    10. '              ' → logprob: -8.27493667602539

Token 427: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021366903092712164
    2. ' in' → logprob: -9.000213623046875
    3. 'in' → logprob: -10.625213623046875
    4. '           ' → logprob: -10.875213623046875
    5. '   ' → logprob: -11.875213623046875
    6. ',' → logprob: -11.875213623046875
    7. 'curr' → logprob: -11.875213623046875
    8. '	           ' → logprob: -12.125213623046875
    9. ':
' → logprob: -12.750213623046875
    10. '<|end|>' → logprob: -12.875213623046875

Token 428: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.5380836129188538
    2. ' curr' → logprob: -1.038083553314209
    3. '               ' → logprob: -2.788083553314209
    4. '                   ' → logprob: -8.288084030151367
    5. '           ' → logprob: -9.413084030151367
    6. '[curr' → logprob: -10.788084030151367
    7. '	curr' → logprob: -10.913084030151367
    8. 'Curr' → logprob: -11.163084030151367
    9. '   ' → logprob: -11.163084030151367
    10. '                ' → logprob: -11.288084030151367

Token 429: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.003282994730398059
    2. '=' → logprob: -6.1282830238342285
    3. ' =' → logprob: -7.1282830238342285
    4. 'curr' → logprob: -8.37828254699707
    5. '_curr' → logprob: -10.75328254699707
    6. '_' → logprob: -11.00328254699707
    7. '_c' → logprob: -11.12828254699707
    8. 'l' → logprob: -12.62828254699707
    9. '   ' → logprob: -13.00328254699707
    10. '_=' → logprob: -13.62828254699707

Token 430: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.05359029024839401
    2. 'm' → logprob: -3.4285902976989746
    3. 'c' → logprob: -3.9285902976989746
    4. '_cm' → logprob: -10.928589820861816
    5. '_c' → logprob: -11.178589820861816
    6. '=' → logprob: -11.553589820861816
    7. '   ' → logprob: -11.553589820861816
    8. ' cm' → logprob: -11.928589820861816
    9. 'cms' → logprob: -13.053589820861816
    10. ' =' → logprob: -13.053589820861816

Token 431: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931471824645996
    2. ' =' → logprob: -0.6931471824645996
    3. '=l' → logprob: -16.568147659301758
    4. '=
' → logprob: -17.818147659301758
    5. '*=' → logprob: -18.818147659301758
    6. '＝' → logprob: -18.943147659301758
    7. '=

' → logprob: -19.068147659301758
    8. 's' → logprob: -19.318147659301758
    9. ' =
' → logprob: -19.318147659301758
    10. ' ' → logprob: -19.443147659301758

Token 432: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0380435548722744
    2. ' l' → logprob: -3.28804349899292
    3. 'lc' → logprob: -13.663043975830078
    4. '	l' → logprob: -14.788043975830078
    5. 'lm' → logprob: -16.288043975830078
    6. '```' → logprob: -16.538043975830078
    7. ' ' → logprob: -16.788043975830078
    8. '(l' → logprob: -16.788043975830078
    9. 'lcd' → logprob: -16.788043975830078
    10. 'math' → logprob: -17.788043975830078

Token 433: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.002859916305169463
    2. 'c' → logprob: -6.252860069274902
    3. 'm' → logprob: -7.002860069274902
    4. 'mc' → logprob: -11.377860069274902
    5. ' cm' → logprob: -12.127860069274902
    6. 'cmath' → logprob: -13.502860069274902
    7. 'cms' → logprob: -13.627860069274902
    8. '(cm' → logprob: -14.002860069274902
    9. '```' → logprob: -15.877860069274902
    10. '_cm' → logprob: -16.002859115600586

Token 434: '(curr' (ID: 49739)
  Prédit: '(curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(curr' → logprob: -2.45848218582978e-06
    2. 'curr' → logprob: -13.12500286102295
    3. '[curr' → logprob: -15.62500286102295
    4. '(' → logprob: -15.75000286102295
    5. '(cur' → logprob: -18.000001907348633
    6. '	curr' → logprob: -19.000001907348633
    7. ' (' → logprob: -19.125001907348633
    8. '(
' → logprob: -20.000001907348633
    9. ' curr' → logprob: -20.625001907348633
    10. '(current' → logprob: -20.875001907348633

Token 435: '_l' (ID: 1478)
  Prédit: '(curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(curr' → logprob: -0.6387194395065308
    2. 'curr' → logprob: -0.7637194395065308
    3. '[curr' → logprob: -5.51371955871582
    4. '_l' → logprob: -6.63871955871582
    5. 's' → logprob: -8.13871955871582
    6. ',' → logprob: -9.38871955871582
    7. '_curr' → logprob: -9.88871955871582
    8. '1' → logprob: -10.01371955871582
    9. ')' → logprob: -10.01371955871582
    10. '	curr' → logprob: -10.01371955871582

Token 436: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.003287751693278551
    2. 'm' → logprob: -6.0032877922058105
    3. 'curr' → logprob: -7.3782877922058105
    4. '(curr' → logprob: -9.753287315368652
    5. 'c' → logprob: -9.878287315368652
    6. 'mc' → logprob: -10.128287315368652
    7. '_cm' → logprob: -12.003287315368652
    8. 'M' → logprob: -12.628287315368652
    9. '_curr' → logprob: -12.628287315368652
    10. 'CM' → logprob: -12.753287315368652

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004434628412127495
    2. ',x' → logprob: -5.504434585571289
    3. 'x' → logprob: -8.004434585571289
    4. ' ,' → logprob: -11.254434585571289
    5. ' x' → logprob: -12.129434585571289
    6. ',
' → logprob: -13.504434585571289
    7. '(x' → logprob: -14.754434585571289
    8. '               ' → logprob: -14.879434585571289
    9. 's' → logprob: -15.254434585571289
    10. '```' → logprob: -15.254434585571289

Token 438: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001234428636962548
    2. ' x' → logprob: -9.000123023986816
    3. '(x' → logprob: -18.875123977661133
    4. ')x' → logprob: -19.500123977661133
    5. '	x' → logprob: -21.125123977661133
    6. '{x' → logprob: -21.375123977661133
    7. '           ' → logprob: -21.500123977661133
    8. '               ' → logprob: -21.625123977661133
    9. '```' → logprob: -21.625123977661133
    10. '   ' → logprob: -21.750123977661133

Token 439: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015099780634045601
    2. ',' → logprob: -4.515100002288818
    3. ')' → logprob: -5.765100002288818
    4. ' x' → logprob: -8.14009952545166
    5. '           ' → logprob: -8.64009952545166
    6. 'x' → logprob: -8.64009952545166
    7. ',x' → logprob: -8.76509952545166
    8. '                   ' → logprob: -10.14009952545166
    9. '<|end|>' → logprob: -11.14009952545166
    10. ')x' → logprob: -11.51509952545166

Token 440: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.395111083984375
    2. '           ' → logprob: -1.770111083984375
    3. '<|end|>' → logprob: -1.895111083984375
    4. '<|end|>' → logprob: -6.145111083984375
    5. '            
' → logprob: -6.895111083984375
    6. '                
' → logprob: -7.520111083984375
    7. '            ' → logprob: -8.020111083984375
    8. '                ' → logprob: -8.020111083984375
    9. '
' → logprob: -8.520111083984375
    10. ' 
' → logprob: -8.520111083984375

Token 441: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14432360231876373
    2. '               ' → logprob: -2.3943235874176025
    3. '<|end|>' → logprob: -4.019323825836182
    4. ' ' → logprob: -4.769323825836182
    5. ' 
' → logprob: -4.894323825836182
    6. '                ' → logprob: -5.894323825836182
    7. 'if' (adapté à ' if') → logprob: -6.519323825836182
    8. '           ' → logprob: -6.769323825836182
    9. '                   ' → logprob: -7.144323825836182
    10. '                
' → logprob: -7.769323825836182

Token 442: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.017954189330339432
    2. ' curr' → logprob: -4.142954349517822
    3. 'n' → logprob: -6.267954349517822
    4. '(curr' → logprob: -11.642953872680664
    5. '	curr' → logprob: -12.392953872680664
    6. '[curr' → logprob: -12.517953872680664
    7. ' n' → logprob: -12.892953872680664
    8. 'c' → logprob: -13.517953872680664
    9. ' ' → logprob: -15.142953872680664
    10. '                   ' → logprob: -15.267953872680664

Token 443: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.0280383548888494e-06
    2. '>' → logprob: -14.375000953674316
    3. '_c' → logprob: -15.875000953674316
    4. ' >' → logprob: -16.625001907348633
    5. 'cm' → logprob: -16.750001907348633
    6. '_cl' → logprob: -17.625001907348633
    7. 'LC' → logprob: -17.875001907348633
    8. 'curr' → logprob: -18.000001907348633
    9. 'l' → logprob: -18.250001907348633
    10. 'cl' → logprob: -18.375001907348633

Token 444: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.011805509217083454
    2. 'c' → logprob: -4.761805534362793
    3. 'm' → logprob: -5.761805534362793
    4. '   ' → logprob: -11.511805534362793
    5. '>' → logprob: -11.636805534362793
    6. 'CM' → logprob: -12.011805534362793
    7. 'n' → logprob: -12.386805534362793
    8. '```' → logprob: -12.886805534362793
    9. '_c' → logprob: -13.136805534362793
    10. '_cm' → logprob: -13.511805534362793

Token 445: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3868718445301056
    2. ' >' → logprob: -1.1368718147277832
    3. ' ' → logprob: -15.136872291564941
    4. ' ' → logprob: -15.261872291564941
    5. '   ' → logprob: -16.011871337890625
    6. '">' → logprob: -17.011871337890625
    7. '```' → logprob: -17.261871337890625
    8. ' is' → logprob: -17.511871337890625
    9. 'n' → logprob: -17.511871337890625
    10. '  ' → logprob: -17.761871337890625

Token 446: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02324605919420719
    2. ' n' → logprob: -3.7732460498809814
    3. '	n' → logprob: -14.648245811462402
    4. '```' → logprob: -17.14824676513672
    5. ')n' → logprob: -17.14824676513672
    6. '   ' → logprob: -17.52324676513672
    7. ' ' → logprob: -17.52324676513672
    8. '_n' → logprob: -18.39824676513672
    9. '
' → logprob: -19.39824676513672
    10. '(n' → logprob: -19.39824676513672

Token 447: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13572533428668976
    2. ':' → logprob: -2.135725259780884
    3. ':
' → logprob: -4.885725498199463
    4. '               ' → logprob: -7.385725498199463
    5. '                       ' → logprob: -8.635725021362305
    6. '           ' → logprob: -8.760725021362305
    7. 'break' → logprob: -9.510725021362305
    8. '                           ' → logprob: -10.135725021362305
    9. '<|end|>' → logprob: -10.885725021362305
    10. '                  ' → logprob: -11.135725021362305

Token 448: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006447488442063332
    2. 'break' → logprob: -5.1314473152160645
    3. ' break' → logprob: -7.7564473152160645
    4. '                       ' → logprob: -10.131447792053223
    5. '               ' → logprob: -11.381447792053223
    6. '	break' → logprob: -11.631447792053223
    7. '   ' → logprob: -11.756447792053223
    8. '                  ' → logprob: -12.506447792053223
    9. '           ' → logprob: -12.756447792053223
    10. '                                           ' → logprob: -12.756447792053223

Token 449: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06197742745280266
    2. ' break' → logprob: -2.8119773864746094
    3. '                   ' → logprob: -11.81197738647461
    4. '	break' → logprob: -13.93697738647461
    5. '   ' → logprob: -14.18697738647461
    6. '_break' → logprob: -15.43697738647461
    7. '               ' → logprob: -15.56197738647461
    8. '```' → logprob: -16.31197738647461
    9. 'Break' → logprob: -16.43697738647461
    10. '           ' → logprob: -16.68697738647461

Token 450: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0051686507649719715
    2. '
' → logprob: -5.880168437957764
    3. '               ' → logprob: -7.130168437957764
    4. '    
' → logprob: -8.005168914794922
    5. 'else' → logprob: -8.255168914794922
    6. '  
' → logprob: -8.505168914794922
    7. '   ' → logprob: -8.505168914794922
    8. '       ' → logprob: -8.505168914794922
    9. '            
' → logprob: -9.380168914794922
    10. '\n' → logprob: -9.380168914794922

Token 451: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012684577144682407
    2. '               ' → logprob: -4.887684345245361
    3. '
' → logprob: -5.887684345245361
    4. '            
' → logprob: -7.012684345245361
    5. '  
' → logprob: -7.887684345245361
    6. '    
' → logprob: -8.13768482208252
    7. '                
' → logprob: -8.51268482208252
    8. 'else' → logprob: -9.26268482208252
    9. '\n' → logprob: -9.63768482208252
    10. ' 
' → logprob: -9.63768482208252

Token 452: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.128759503364563
    2. '           ' → logprob: -2.1287593841552734
    3. ' else' → logprob: -6.628759384155273
    4. '       ' → logprob: -7.753759384155273
    5. '               ' → logprob: -9.753759384155273
    6. '   ' → logprob: -11.253759384155273
    7. '	else' → logprob: -13.253759384155273
    8. '         ' → logprob: -13.378759384155273
    9. '		' → logprob: -14.003759384155273
    10. '```' → logprob: -14.003759384155273

Token 453: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21529917418956757
    2. '               ' → logprob: -1.715299129486084
    3. ':
' → logprob: -4.340299129486084
    4. '           ' → logprob: -7.590299129486084
    5. ',' → logprob: -9.340299606323242
    6. '                   ' → logprob: -9.465299606323242
    7. '       ' → logprob: -10.590299606323242
    8. '                       ' → logprob: -11.340299606323242
    9. '              ' → logprob: -11.590299606323242
    10. '<|end|>' → logprob: -12.090299606323242

Token 454: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01237613894045353
    2. '           ' → logprob: -4.762376308441162
    3. 'cnt' → logprob: -5.887376308441162
    4. ' cnt' → logprob: -7.262376308441162
    5. '                   ' → logprob: -9.012375831604004
    6. '       ' → logprob: -9.512375831604004
    7. 'count' → logprob: -10.262375831604004
    8. '   ' → logprob: -10.637375831604004
    9. '	cnt' → logprob: -11.887375831604004
    10. '             ' → logprob: -12.387375831604004

Token 455: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.3582858741283417
    2. 'count' → logprob: -2.233285903930664
    3. 'mul' → logprob: -2.983285903930664
    4. ' cnt' → logprob: -3.108285903930664
    5. 'multip' → logprob: -3.983285903930664
    6. 'multiple' → logprob: -3.983285903930664
    7. 'term' → logprob: -4.233285903930664
    8. '               ' → logprob: -4.483285903930664
    9. 'mult' → logprob: -4.608285903930664
    10. 'sum' → logprob: -4.608285903930664

Token 456: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868713676929474
    2. '=' → logprob: -1.136871337890625
    3. '=n' → logprob: -16.386871337890625
    4. ',' → logprob: -16.511871337890625
    5. ' ' → logprob: -16.761871337890625
    6. '*' → logprob: -16.886871337890625
    7. '	' → logprob: -17.636871337890625
    8. ' *=' → logprob: -17.886871337890625
    9. ' *' → logprob: -17.886871337890625
    10. '*=' → logprob: -18.136871337890625

Token 457: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.038086701184511185
    2. 'n' → logprob: -3.2880866527557373
    3. ' (' → logprob: -10.663086891174316
    4. '(n' → logprob: -12.038086891174316
    5. ' cnt' → logprob: -12.288086891174316
    6. ' total' → logprob: -12.663086891174316
    7. 'total' → logprob: -13.163086891174316
    8. 'cnt' → logprob: -13.663086891174316
    9. ' curr' → logprob: -14.288086891174316
    10. '               ' → logprob: -14.413086891174316

Token 458: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.07098176330327988
    2. ' //' → logprob: -2.695981740951538
    3. '*' → logprob: -7.195981979370117
    4. '           ' → logprob: -9.195981979370117
    5. ' *' → logprob: -10.445981979370117
    6. '               ' → logprob: -10.695981979370117
    7. '//=' → logprob: -10.695981979370117
    8. '```' → logprob: -11.070981979370117
    9. '       ' → logprob: -11.320981979370117
    10. '          ' → logprob: -11.320981979370117

Token 459: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.005234594456851482
    2. ' curr' → logprob: -5.255234718322754
    3. '(curr' → logprob: -15.255234718322754
    4. '               ' → logprob: -15.505234718322754
    5. '           ' → logprob: -16.255233764648438
    6. '[curr' → logprob: -16.255233764648438
    7. 'cur' → logprob: -16.380233764648438
    8. '	curr' → logprob: -16.755233764648438
    9. '                   ' → logprob: -18.505233764648438
    10. 'c' → logprob: -19.005233764648438

Token 460: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.00021033499797340482
    2. 'l' → logprob: -9.000210762023926
    3. 'curr' → logprob: -9.500210762023926
    4. 'lc' → logprob: -11.875210762023926
    5. 'cur' → logprob: -12.875210762023926
    6. 'cm' → logprob: -14.250210762023926
    7. 'cl' → logprob: -15.250210762023926
    8. '-l' → logprob: -15.750210762023926
    9. 'm' → logprob: -15.875210762023926
    10. 'c' → logprob: -15.875210762023926

Token 461: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.008807079866528511
    2. 'm' → logprob: -5.133807182312012
    3. 'curr' → logprob: -6.008807182312012
    4. 'c' → logprob: -7.883807182312012
    5. '   ' → logprob: -11.258807182312012
    6. 'mc' → logprob: -11.758807182312012
    7. 'CM' → logprob: -13.133807182312012
    8. '(curr' → logprob: -13.508807182312012
    9. 'om' → logprob: -13.633807182312012
    10. '       ' → logprob: -13.883807182312012

Token 462: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16785810887813568
    2. '           ' → logprob: -3.167858123779297
    3. '*' → logprob: -3.667858123779297
    4. '
' → logprob: -3.792858123779297
    5. ' *' → logprob: -4.167858123779297
    6. '                
' → logprob: -4.667858123779297
    7. '            
' → logprob: -4.667858123779297
    8. '                   ' → logprob: -5.042858123779297
    9. ' 
' → logprob: -5.042858123779297
    10. ',' → logprob: -5.167858123779297

Token 463: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034271120093762875
    2. '           ' → logprob: -6.003427028656006
    3. 'sum' → logprob: -7.378427028656006
    4. ',' → logprob: -9.253427505493164
    5. '                
' → logprob: -9.378427505493164
    6. ' sum' → logprob: -10.378427505493164
    7. '                   ' → logprob: -11.003427505493164
    8. '
' → logprob: -11.003427505493164
    9. '	           ' → logprob: -11.128427505493164
    10. '<|end|>' → logprob: -11.753427505493164

Token 464: ' s' (ID: 265)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.023000048473477364
    2. '               ' → logprob: -4.398000240325928
    3. ' sum' → logprob: -4.773000240325928
    4. '           ' → logprob: -7.898000240325928
    5. 'total' → logprob: -7.898000240325928
    6. '                   ' → logprob: -8.27299976348877
    7. 'term' → logprob: -8.77299976348877
    8. 'subset' → logprob: -8.77299976348877
    9. 'mul' → logprob: -9.14799976348877
    10. 'excluded' → logprob: -9.39799976348877

Token 465: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.4895569384098053
    2. ' =' → logprob: -0.9895569086074829
    3. ' +=' → logprob: -5.364556789398193
    4. '=' → logprob: -5.614556789398193
    5. 'ub' → logprob: -6.614556789398193
    6. '_sum' → logprob: -6.614556789398193
    7. '+=' → logprob: -6.989556789398193
    8. 'e' → logprob: -7.364556789398193
    9. '_' → logprob: -7.614556789398193
    10. 'sum' → logprob: -7.739556789398193

Token 466: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.08042488992214203
    2. ' curr' → logprob: -2.5804247856140137
    3. 'cnt' → logprob: -6.580424785614014
    4. ' cnt' → logprob: -9.705425262451172
    5. '           ' → logprob: -10.455425262451172
    6. '(curr' → logprob: -10.830425262451172
    7. '               ' → logprob: -11.830425262451172
    8. 'cur' → logprob: -11.955425262451172
    9. '	curr' → logprob: -11.955425262451172
    10. '   ' → logprob: -12.330425262451172

Token 467: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -9.17420256882906e-05
    2. 'um' → logprob: -9.375091552734375
    3. 'cnt' → logprob: -12.250091552734375
    4. '_cnt' → logprob: -14.125091552734375
    5. 'sum' → logprob: -14.625091552734375
    6. 'umm' → logprob: -15.250091552734375
    7. 'uml' → logprob: -16.250091552734375
    8. 'l' → logprob: -16.375091552734375
    9. 'ums' → logprob: -16.375091552734375
    10. '[cnt' → logprob: -16.625091552734375

Token 468: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.0001446611131541431
    2. 'c' → logprob: -9.375144958496094
    3. 'm' → logprob: -9.750144958496094
    4. 'mc' → logprob: -14.750144958496094
    5. 'cms' → logprob: -14.875144958496094
    6. '_cm' → logprob: -15.625144958496094
    7. 'cmath' → logprob: -16.250144958496094
    8. 'CM' → logprob: -16.250144958496094
    9. ' cm' → logprob: -16.375144958496094
    10. 'cmb' → logprob: -16.875144958496094

Token 469: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0003931384126190096
    2. ' *' → logprob: -7.875392913818359
    3. '*(' → logprob: -11.25039291381836
    4. '**' → logprob: -17.62539291381836
    5. '   ' → logprob: -17.87539291381836
    6. '           ' → logprob: -18.12539291381836
    7. '(cnt' → logprob: -18.50039291381836
    8. '*((' → logprob: -18.75039291381836
    9. '[cnt' → logprob: -19.25039291381836
    10. 'cnt' → logprob: -19.50039291381836

Token 470: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0019833561964333057
    2. '(cnt' → logprob: -6.251983165740967
    3. ' cnt' → logprob: -10.001983642578125
    4. 'count' → logprob: -11.626983642578125
    5. '[cnt' → logprob: -14.876983642578125
    6. '(count' → logprob: -15.876983642578125
    7. '	cnt' → logprob: -16.876983642578125
    8. '_cnt' → logprob: -17.001983642578125
    9. ' (' → logprob: -17.001983642578125
    10. '(' → logprob: -18.126983642578125

Token 471: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0008894255734048784
    2. '*(' → logprob: -7.250889301300049
    3. ' *' → logprob: -8.625889778137207
    4. ' ' → logprob: -16.87588882446289
    5. '**' → logprob: -16.87588882446289
    6. '   ' → logprob: -17.00088882446289
    7. '*((' → logprob: -18.12588882446289
    8. '  ' → logprob: -19.62588882446289
    9. '*[' → logprob: -19.87588882446289
    10. ' ' → logprob: -20.25088882446289

Token 472: ' (' (ID: 350)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.0010507925180718303
    2. '(' → logprob: -7.50105094909668
    3. ' (' → logprob: -8.37605094909668
    4. '(c' → logprob: -8.50105094909668
    5. '(ct' → logprob: -10.75105094909668
    6. '[cnt' → logprob: -11.12605094909668
    7. '(num' → logprob: -11.87605094909668
    8. '(ans' → logprob: -12.00105094909668
    9. '(idx' → logprob: -12.50105094909668
    10. '(count' → logprob: -13.25105094909668

Token 473: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.5763474702835083
    2. '(cnt' → logprob: -0.8263474702835083
    3. '[cnt' → logprob: -8.326347351074219
    4. ' cnt' → logprob: -9.201347351074219
    5. '	cnt' → logprob: -9.701347351074219
    6. '_cnt' → logprob: -13.076347351074219
    7. '   ' → logprob: -13.951347351074219
    8. ' (' → logprob: -15.451347351074219
    9. 'count' → logprob: -15.701347351074219
    10. '(' → logprob: -16.07634735107422

Token 474: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015046248445287347
    2. ' +' → logprob: -6.501504421234131
    3. '```' → logprob: -13.251504898071289
    4. '1' → logprob: -15.751504898071289
    5. '+
' → logprob: -16.12650489807129
    6. '   ' → logprob: -16.50150489807129
    7. '+=' → logprob: -16.62650489807129
    8. '＋' → logprob: -16.75150489807129
    9. 'plus' → logprob: -17.12650489807129
    10. '++' → logprob: -17.50150489807129

Token 475: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '           ' → logprob: -16.750001907348633
    4. '```' → logprob: -17.125001907348633
    5. '                   ' → logprob: -18.375001907348633
    6. '   ' → logprob: -18.500001907348633
    7. ')' → logprob: -20.000001907348633
    8. '               ' → logprob: -20.125001907348633
    9. '
' → logprob: -20.125001907348633
    10. '2' → logprob: -20.250001907348633

Token 476: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.125000953674316
    3. '   ' → logprob: -15.500000953674316
    4. '0' → logprob: -15.500000953674316
    5. ' ' → logprob: -15.750000953674316
    6. '`' → logprob: -18.375001907348633
    7. '``' → logprob: -18.875001907348633
    8. '(' → logprob: -19.125001907348633
    9. '           ' → logprob: -19.500001907348633
    10. ')' → logprob: -19.875001907348633

Token 477: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02246539480984211
    2. '//' → logprob: -4.397465229034424
    3. ')//' → logprob: -5.022465229034424
    4. ' //' → logprob: -5.772465229034424
    5. ' )' → logprob: -8.647465705871582
    6. '```' → logprob: -11.272465705871582
    7. '")' → logprob: -12.272465705871582
    8. '   ' → logprob: -12.397465705871582
    9. '           ' → logprob: -13.147465705871582
    10. '`)' → logprob: -13.397465705871582

Token 478: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5764273405075073
    2. '//' → logprob: -0.8264273405075073
    3. '           ' → logprob: -8.576427459716797
    4. '```' → logprob: -9.201427459716797
    5. '               ' → logprob: -9.326427459716797
    6. '       ' → logprob: -10.826427459716797
    7. '            ' → logprob: -11.201427459716797
    8. ' ' → logprob: -11.451427459716797
    9. '                   ' → logprob: -11.701427459716797
    10. '   ' → logprob: -11.701427459716797

Token 479: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.000001907348633
    4. '```' → logprob: -18.500001907348633
    5. '           ' → logprob: -20.125001907348633
    6. '
' → logprob: -20.250001907348633
    7. '    ' → logprob: -20.500001907348633
    8. '       ' → logprob: -20.500001907348633
    9. '  ' → logprob: -20.875001907348633
    10. '۲' → logprob: -21.125001907348633

Token 480: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -19.75
    4. '22' → logprob: -22.125
    5. '۲' → logprob: -22.125
    6. '```' → logprob: -22.125
    7. '
' → logprob: -22.5
    8. '２' → logprob: -23.25
    9. '202' → logprob: -23.5
    10. '    ' → logprob: -23.625

Token 481: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01118834875524044
    2. '           ' → logprob: -5.011188507080078
    3. '<|end|>' → logprob: -6.011188507080078
    4. '                   ' → logprob: -7.511188507080078
    5. '                ' → logprob: -7.761188507080078
    6. '              ' → logprob: -7.886188507080078
    7. '                
' → logprob: -8.636188507080078
    8. ' if' → logprob: -9.386188507080078
    9. '                               ' → logprob: -9.761188507080078
    10. '                       ' → logprob: -10.011188507080078

Token 482: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011167617049068213
    2. '           ' → logprob: -6.876116752624512
    3. '              ' → logprob: -10.751116752624512
    4. '<|end|>' → logprob: -11.126116752624512
    5. '       ' → logprob: -11.376116752624512
    6. '                   ' → logprob: -11.876116752624512
    7. '             ' → logprob: -11.876116752624512
    8. '                ' → logprob: -11.876116752624512
    9. ',' → logprob: -13.126116752624512
    10. '			' → logprob: -13.251116752624512

Token 483: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.42030227184295654
    2. '               ' → logprob: -1.1703022718429565
    3. ' if' → logprob: -3.420302391052246
    4. '           ' → logprob: -8.795302391052246
    5. '                   ' → logprob: -11.670302391052246
    6. '       ' → logprob: -12.170302391052246
    7. '                ' → logprob: -13.045302391052246
    8. '   ' → logprob: -13.170302391052246
    9. '              ' → logprob: -13.295302391052246
    10. '                       ' → logprob: -13.920302391052246

Token 484: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.16025936603546143
    2. ' size' → logprob: -1.9102593660354614
    3. '(size' → logprob: -10.285259246826172
    4. '   ' → logprob: -14.535259246826172
    5. '	size' → logprob: -15.660259246826172
    6. '[size' → logprob: -15.910259246826172
    7. ' ' → logprob: -16.285259246826172
    8. '               ' → logprob: -16.785259246826172
    9. 's' → logprob: -16.910259246826172
    10. '                   ' → logprob: -17.035259246826172

Token 485: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10020915418863297
    2. '%' → logprob: -2.3502092361450195
    3. ')' → logprob: -14.22520923614502
    4. ' ' → logprob: -14.35020923614502
    5. '```' → logprob: -14.35020923614502
    6. ' ' → logprob: -15.47520923614502
    7. '   ' → logprob: -15.72520923614502
    8. '[' → logprob: -15.97520923614502
    9. '       ' → logprob: -16.975208282470703
    10. '           ' → logprob: -16.975208282470703

Token 486: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08908157050609589
    2. ' ' → logprob: -2.4640815258026123
    3. '1' → logprob: -9.714081764221191
    4. '```' → logprob: -9.839081764221191
    5. 'space' → logprob: -11.464081764221191
    6. ' space' → logprob: -12.089081764221191
    7. ' ' → logprob: -12.839081764221191
    8. '<|end|>' → logprob: -13.214081764221191
    9. 's' → logprob: -13.464081764221191
    10. '`' → logprob: -13.839081764221191

Token 487: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011048289015889168
    2. ' ' → logprob: -4.511048316955566
    3. '```' → logprob: -15.136048316955566
    4. '
' → logprob: -16.63604736328125
    5. '1' → logprob: -17.32354736328125
    6. '  ' → logprob: -17.38604736328125
    7. '   ' → logprob: -17.38604736328125
    8. '۲' → logprob: -18.44854736328125
    9. '=' → logprob: -18.69854736328125
    10. '`' → logprob: -18.94854736328125

Token 488: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3869101405143738
    2. ' ==' → logprob: -1.1369102001190186
    3. '```' → logprob: -11.261910438537598
    4. '1' → logprob: -11.386910438537598
    5. '=' → logprob: -12.386910438537598
    6. '==
' → logprob: -12.636910438537598
    7. ')==' → logprob: -12.761910438537598
    8. '===' → logprob: -13.636910438537598
    9. ' ' → logprob: -13.886910438537598
    10. '()==' → logprob: -14.261910438537598

Token 489: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003909927327185869
    2. ' ' → logprob: -7.875391006469727
    3. '2' → logprob: -11.875391006469727
    4. '0' → logprob: -12.500391006469727
    5. '```' → logprob: -15.500391006469727
    6. '   ' → logprob: -18.875391006469727
    7. '  ' → logprob: -20.312891006469727
    8. '
' → logprob: -21.187891006469727
    9. '۱' → logprob: -21.250391006469727
    10. '`' → logprob: -21.250391006469727

Token 490: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011558275582501665
    2. '2' → logprob: -9.250115394592285
    3. ' ' → logprob: -10.875115394592285
    4. '0' → logprob: -14.500115394592285
    5. '```' → logprob: -17.0001163482666
    6. '   ' → logprob: -19.0001163482666
    7. '3' → logprob: -19.6251163482666
    8. '
' → logprob: -20.1251163482666
    9. '' → logprob: -21.0001163482666
    10. '  ' → logprob: -21.0001163482666

Token 491: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18819108605384827
    2. ':' → logprob: -1.8131910562515259
    3. ':
' → logprob: -6.063190937042236
    4. '=' → logprob: -6.813190937042236
    5. '           ' → logprob: -6.813190937042236
    6. '               ' → logprob: -6.938190937042236
    7. '                       ' → logprob: -7.563190937042236
    8. '                    ' → logprob: -8.063191413879395
    9. '<|end|>' → logprob: -8.063191413879395
    10. ' +=' → logprob: -8.313191413879395

Token 492: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003802215214818716
    2. '-' → logprob: -7.253802299499512
    3. '                       ' → logprob: -7.378802299499512
    4. '               ' → logprob: -7.503802299499512
    5. '           ' → logprob: -7.753802299499512
    6. ' +=' → logprob: -8.253802299499512
    7. '                    ' → logprob: -8.503802299499512
    8. ':' → logprob: -8.753802299499512
    9. '                  ' → logprob: -8.878802299499512
    10. '+' → logprob: -9.003802299499512

Token 493: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.11298692971467972
    2. ' sum' → logprob: -2.2379870414733887
    3. '                   ' → logprob: -9.48798656463623
    4. '           ' → logprob: -10.86298656463623
    5. 's' → logprob: -11.36298656463623
    6. '   ' → logprob: -11.61298656463623
    7. '```' → logprob: -11.61298656463623
    8. '               ' → logprob: -11.86298656463623
    9. '-' → logprob: -11.98798656463623
    10. 'subtract' → logprob: -12.36298656463623

Token 494: '_ex' (ID: 5724)
  Prédit: '_ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -5.080963092041202e-06
    2. '+=' → logprob: -13.000004768371582
    3. '_exc' → logprob: -14.375004768371582
    4. 'excluded' → logprob: -14.625004768371582
    5. ' +=' → logprob: -15.000004768371582
    6. '	ex' → logprob: -15.375004768371582
    7. 's' → logprob: -15.875004768371582
    8. '_' → logprob: -16.1250057220459
    9. '=' → logprob: -16.1250057220459
    10. '_EX' → logprob: -16.3750057220459

Token 495: 'cluded' (ID: 15730)
  Prédit: 'cluded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cluded' → logprob: -0.00020592445798683912
    2. 'excluded' → logprob: -9.500205993652344
    3. 'CLUDED' → logprob: -10.125205993652344
    4. 'clud' → logprob: -10.250205993652344
    5. 'clude' → logprob: -11.375205993652344
    6. 'cl' → logprob: -11.375205993652344
    7. 'l' → logprob: -11.500205993652344
    8. '+' → logprob: -12.000205993652344
    9. '```' → logprob: -13.000205993652344
    10. '   ' → logprob: -13.125205993652344

Token 496: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16024047136306763
    2. ' +=' → logprob: -1.9102404117584229
    3. ' -=' → logprob: -12.160240173339844
    4. '+' → logprob: -12.285240173339844
    5. '-=' → logprob: -12.660240173339844
    6. ']+=' → logprob: -13.160240173339844
    7. '+=(' → logprob: -14.535240173339844
    8. '   ' → logprob: -15.285240173339844
    9. '+='' → logprob: -15.285240173339844
    10. '+="' → logprob: -15.660240173339844

Token 497: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009115827269852161
    2. ' s' → logprob: -7.000911712646484
    3. '-' → logprob: -17.125911712646484
    4. '-s' → logprob: -17.750911712646484
    5. ' -' → logprob: -19.625911712646484
    6. '+s' → logprob: -20.000911712646484
    7. '	s' → logprob: -20.125911712646484
    8. '`s' → logprob: -20.125911712646484
    9. '<s' → logprob: -20.500911712646484
    10. '_s' → logprob: -20.625911712646484

Token 498: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004901225329376757
    2. ' else' → logprob: -7.875490188598633
    3. '                ' → logprob: -10.625490188598633
    4. '<|end|>' → logprob: -10.625490188598633
    5. '           ' → logprob: -11.000490188598633
    6. 'else' → logprob: -11.500490188598633
    7. '              ' → logprob: -11.625490188598633
    8. '       ' → logprob: -11.625490188598633
    9. '                   ' → logprob: -11.750490188598633
    10. '			' → logprob: -13.125490188598633

Token 499: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003624308155849576
    2. ' else' → logprob: -5.878624439239502
    3. 'else' → logprob: -7.128624439239502
    4. '<|end|>' → logprob: -12.378623962402344
    5. '			' → logprob: -12.503623962402344
    6. '```' → logprob: -13.003623962402344
    7. '           ' → logprob: -13.503623962402344
    8. '                ' → logprob: -13.753623962402344
    9. '                   ' → logprob: -14.003623962402344
    10. '              ' → logprob: -14.003623962402344

Token 500: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6383559107780457
    2. ' else' → logprob: -1.1383559703826904
    3. 'else' (adapté à ' else') → logprob: -1.8883559703826904
    4. '                ' → logprob: -9.51335620880127
    5. '           ' → logprob: -10.51335620880127
    6. '			' → logprob: -10.76335620880127
    7. '	else' → logprob: -10.88835620880127
    8. '              ' → logprob: -11.63835620880127
    9. '                   ' → logprob: -12.26335620880127
    10. '       ' → logprob: -12.26335620880127

Token 501: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014753569848835468
    2. ':' → logprob: -4.389753341674805
    3. '                    ' → logprob: -7.014753341674805
    4. ':
' → logprob: -7.264753341674805
    5. '                  ' → logprob: -7.764753341674805
    6. '   ' → logprob: -10.264753341674805
    7. ' :' → logprob: -10.389753341674805
    8. ' +=' → logprob: -11.014753341674805
    9. '=' → logprob: -11.014753341674805
    10. ' -=' → logprob: -11.014753341674805

Token 502: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0965038314461708
    2. 'sum' → logprob: -2.971503734588623
    3. ' sum' → logprob: -3.221503734588623
    4. '                    ' → logprob: -7.846503734588623
    5. '                  ' → logprob: -8.971504211425781
    6. '               ' → logprob: -9.096504211425781
    7. '                ' → logprob: -9.471504211425781
    8. '                 ' → logprob: -10.346504211425781
    9. '                       ' → logprob: -10.471504211425781
    10. '           ' → logprob: -10.471504211425781

Token 503: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.0004125575942452997
    2. ' sum' → logprob: -8.000412940979004
    3. '                   ' → logprob: -9.500412940979004
    4. '	sum' → logprob: -14.125412940979004
    5. '               ' → logprob: -14.875412940979004
    6. 'subtract' → logprob: -15.125412940979004
    7. '   ' → logprob: -15.250412940979004
    8. '                  ' → logprob: -16.000411987304688
    9. '                       ' → logprob: -16.125411987304688
    10. '                 ' → logprob: -16.750411987304688

Token 504: '_ex' (ID: 5724)
  Prédit: '_ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -2.1054253011243418e-05
    2. 'excluded' → logprob: -11.500020980834961
    3. '-=' → logprob: -12.250020980834961
    4. ' -=' → logprob: -13.125020980834961
    5. '	ex' → logprob: -13.500020980834961
    6. 'ex' → logprob: -13.625020980834961
    7. '-ex' → logprob: -14.750020980834961
    8. '                   ' → logprob: -15.000020980834961
    9. '_EX' → logprob: -15.625020980834961
    10. '           ' → logprob: -16.50002098083496

Token 505: 'cluded' (ID: 15730)
  Prédit: 'cluded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cluded' → logprob: -0.0001149867384810932
    2. 'x' → logprob: -9.875115394592285
    3. 'excluded' → logprob: -11.000115394592285
    4. 'clud' → logprob: -11.375115394592285
    5. 'CLUDED' → logprob: -11.500115394592285
    6. 'cl' → logprob: -11.750115394592285
    7. 'l' → logprob: -11.875115394592285
    8. 'clude' → logprob: -12.125115394592285
    9. 'xl' → logprob: -13.375115394592285
    10. 'xc' → logprob: -14.750115394592285

Token 506: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.10094154626131058
    2. ' -=' → logprob: -2.3509416580200195
    3. '-' → logprob: -7.2259416580200195
    4. '+=' → logprob: -12.22594165802002
    5. ' -' → logprob: -13.22594165802002
    6. '=' → logprob: -16.100940704345703
    7. ' +=' → logprob: -16.350940704345703
    8. ' ' → logprob: -16.475940704345703
    9. '   ' → logprob: -16.725940704345703
    10. '	' → logprob: -17.850940704345703

Token 507: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16022412478923798
    2. ' s' → logprob: -1.9102240800857544
    3. '{s' → logprob: -18.78522491455078
    4. ' ' → logprob: -19.41022491455078
    5. '	s' → logprob: -19.53522491455078
    6. '<|end|>' → logprob: -20.16022491455078
    7. 'swer' → logprob: -20.91022491455078
    8. '<s' → logprob: -21.03522491455078
    9. '(s' → logprob: -21.03522491455078
    10. '`s' → logprob: -21.28522491455078

Token 508: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14748364686965942
    2. '
' → logprob: -2.0224835872650146
    3. '    
' → logprob: -5.647483825683594
    4. '<|end|>' → logprob: -7.022483825683594
    5. '  
' → logprob: -9.647483825683594
    6. ' 
' → logprob: -9.897483825683594
    7. ' valid' → logprob: -10.022483825683594
    8. ')' → logprob: -10.147483825683594
    9. '   
' → logprob: -10.897483825683594
    10. ',' → logprob: -10.897483825683594

Token 509: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0635223314166069
    2. '
' → logprob: -3.9385223388671875
    3. 'valid' → logprob: -3.9385223388671875
    4. 'result' → logprob: -4.5635223388671875
    5. ' valid' → logprob: -5.3135223388671875
    6. '    
' → logprob: -5.8135223388671875
    7. 'print' → logprob: -6.5635223388671875
    8. 'average' → logprob: -7.0635223388671875
    9. '```' → logprob: -7.3135223388671875
    10. 'total' → logprob: -8.313522338867188

Token 510: ' valid' (ID: 4529)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21960072219371796
    2. 'valid' (adapté à ' valid') → logprob: -2.4696006774902344
    3. 'result' → logprob: -2.4696006774902344
    4. 'average' → logprob: -4.469600677490234
    5. 'sum' → logprob: -5.094600677490234
    6. 'total' → logprob: -5.844600677490234
    7. 'avg' → logprob: -5.969600677490234
    8. 'remaining' → logprob: -6.219600677490234
    9. 'answer' → logprob: -7.344600677490234
    10. 'ans' → logprob: -7.719600677490234

Token 511: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.12721942365169525
    2. '_count' → logprob: -2.1272194385528564
    3. '_total' → logprob: -9.502219200134277
    4. '_' → logprob: -9.502219200134277
    5. '\' → logprob: -9.877219200134277
    6. '_s' → logprob: -10.627219200134277
    7. '_avg' → logprob: -11.877219200134277
    8. '_average' → logprob: -11.877219200134277
    9. 'sum' → logprob: -12.002219200134277
    10. '_mean' → logprob: -12.252219200134277

Token 512: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324652671813965
    2. '=' → logprob: -3.7732465267181396
    3. ' ' → logprob: -14.648246765136719
    4. ')' → logprob: -15.523246765136719
    5. ' +=' → logprob: -15.898246765136719
    6. ',' → logprob: -16.14824676513672
    7. '_' → logprob: -16.77324676513672
    8. ' ' → logprob: -16.77324676513672
    9. '＝' → logprob: -17.64824676513672
    10. '	' → logprob: -18.14824676513672

Token 513: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.02325514331459999
    2. ' total' → logprob: -3.7732551097869873
    3. '   ' → logprob: -11.773255348205566
    4. '(total' → logprob: -13.273255348205566
    5. ' ' → logprob: -15.898255348205566
    6. '	total' → logprob: -16.89825439453125
    7. '
' → logprob: -18.02325439453125
    8. ',total' → logprob: -18.27325439453125
    9. '  ' → logprob: -18.39825439453125
    10. '_total' → logprob: -18.77325439453125

Token 514: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.8590300139039755e-05
    2. 'sum' → logprob: -10.375048637390137
    3. '_' → logprob: -11.125048637390137
    4. '-' → logprob: -13.750048637390137
    5. ' -' → logprob: -14.125048637390137
    6. '_s' → logprob: -15.375048637390137
    7. 's' → logprob: -16.25004768371582
    8. ' ' → logprob: -16.50004768371582
    9. '_valid' → logprob: -16.50004768371582
    10. '_n' → logprob: -16.75004768371582

Token 515: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11284509301185608
    2. '-' → logprob: -2.2378451824188232
    3. '   ' → logprob: -11.612845420837402
    4. ' ' → logprob: -11.987845420837402
    5. ' -=' → logprob: -12.987845420837402
    6. ' ' → logprob: -13.362845420837402
    7. '-s' → logprob: -14.237845420837402
    8. '=' → logprob: -14.862845420837402
    9. '<|end|>' → logprob: -14.862845420837402
    10. '-=' → logprob: -14.987845420837402

Token 516: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.10020667314529419
    2. ' sum' → logprob: -2.3502066135406494
    3. '	sum' → logprob: -18.85020637512207
    4. '(sum' → logprob: -19.60020637512207
    5. '   ' → logprob: -20.35020637512207
    6. '=sum' → logprob: -20.47520637512207
    7. 'space' → logprob: -20.60020637512207
    8. ' ' → logprob: -20.72520637512207
    9. '
' → logprob: -21.97520637512207
    10. 's' → logprob: -21.97520637512207

Token 517: '_ex' (ID: 5724)
  Prédit: '_ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -12.875004768371582
    3. '_valid' → logprob: -14.125004768371582
    4. '_exc' → logprob: -14.125004768371582
    5. ' _' → logprob: -14.750004768371582
    6. 'excluded' → logprob: -14.875004768371582
    7. '_EX' → logprob: -17.1250057220459
    8. '\' → logprob: -17.2500057220459
    9. '_con' → logprob: -17.3750057220459
    10. 'ex' → logprob: -17.6250057220459

Token 518: 'cluded' (ID: 15730)
  Prédit: 'cluded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cluded' → logprob: -5.200166469876422e-06
    2. 'l' → logprob: -13.500004768371582
    3. 'excluded' → logprob: -13.500004768371582
    4. 'CLUDED' → logprob: -13.750004768371582
    5. 'cl' → logprob: -14.625004768371582
    6. 'clud' → logprob: -15.125004768371582
    7. '_' → logprob: -15.750004768371582
    8. 'clude' → logprob: -16.2500057220459
    9. '```' → logprob: -16.3750057220459
    10. '_sum' → logprob: -16.7500057220459

Token 519: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055198874324560165
    2. '
' → logprob: -2.930198907852173
    3. 'print' → logprob: -9.055198669433594
    4. ' print' → logprob: -9.180198669433594
    5. '    
' → logprob: -9.805198669433594
    6. '  
' → logprob: -11.430198669433594
    7. '<|end|>' → logprob: -11.805198669433594
    8. '       ' → logprob: -12.055198669433594
    9. '
' → logprob: -12.305198669433594
    10. ' 
' → logprob: -12.555198669433594

Token 520: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014448241330683231
    2. 'print' → logprob: -4.264448165893555
    3. '```' → logprob: -8.639448165893555
    4. '
' → logprob: -10.014448165893555
    5. ' print' → logprob: -10.764448165893555
    6. '    
' → logprob: -10.889448165893555
    7. '<|end|>' → logprob: -11.389448165893555
    8. '``' → logprob: -12.264448165893555
    9. '	print' → logprob: -12.764448165893555
    10. '`' → logprob: -14.389448165893555

Token 521: ' expected' (ID: 5930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002214172709500417
    2. 'average' → logprob: -8.750221252441406
    3. '   ' → logprob: -10.625221252441406
    4. 'result' → logprob: -11.000221252441406
    5. ' print' → logprob: -11.125221252441406
    6. 'avg' → logprob: -12.375221252441406
    7. '
' → logprob: -13.875221252441406
    8. 'answer' → logprob: -14.250221252441406
    9. '```' → logprob: -14.375221252441406
    10. 'ans' → logprob: -15.125221252441406

Token 522: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19409827888011932
    2. '_value' → logprob: -1.8190982341766357
    3. ' =' → logprob: -4.569098472595215
    4. '_val' → logprob: -6.194098472595215
    5. ' _' → logprob: -7.069098472595215
    6. '=' → logprob: -7.569098472595215
    7. '_output' → logprob: -8.694098472595215
    8. '_space' → logprob: -9.569098472595215
    9. '_=' → logprob: -10.194098472595215
    10. 'value' → logprob: -10.694098472595215

Token 523: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010329303331673145
    2. '=' → logprob: -6.876032829284668
    3. '    ' → logprob: -16.751033782958984
    4. '   ' → logprob: -17.126033782958984
    5. ' ' → logprob: -18.001033782958984
    6. '	' → logprob: -18.126033782958984
    7. ')' → logprob: -18.251033782958984
    8. ' ' → logprob: -18.501033782958984
    9. '＝' → logprob: -18.501033782958984
    10. '_' → logprob: -19.126033782958984

Token 524: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.004078758880496025
    2. 'valid' → logprob: -5.5040788650512695
    3. '(valid' → logprob: -15.00407886505127
    4. '	valid' → logprob: -18.879077911376953
    5. '_valid' → logprob: -19.754077911376953
    6. '.valid' → logprob: -20.504077911376953
    7. ' val' → logprob: -21.004077911376953
    8. '1' → logprob: -21.504077911376953
    9. '0' → logprob: -22.004077911376953
    10. ' float' → logprob: -22.379077911376953

Token 525: '_sum' (ID: 29859)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0380677729845047
    2. '_sum' → logprob: -3.2880678176879883
    3. '_value' → logprob: -10.663067817687988
    4. '_valid' → logprob: -13.788067817687988
    5. '_val' → logprob: -14.038067817687988
    6. '\' → logprob: -14.288067817687988
    7. '_' → logprob: -15.413067817687988
    8. '_prob' → logprob: -16.413066864013672
    9. 'sum' → logprob: -17.163066864013672
    10. '_div' → logprob: -17.288066864013672

Token 526: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.012512944638729095
    2. '/' → logprob: -4.387513160705566
    3. '   ' → logprob: -13.012513160705566
    4. ' ' → logprob: -14.387513160705566
    5. ' ' → logprob: -15.262513160705566
    6. '*' → logprob: -15.887513160705566
    7. '/n' → logprob: -16.88751220703125
    8. '```' → logprob: -17.13751220703125
    9. '    ' → logprob: -17.26251220703125
    10. ' *' → logprob: -17.38751220703125

Token 527: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.0005530327325686812
    2. ' valid' → logprob: -7.500553131103516
    3. '(valid' → logprob: -21.500553131103516
    4. '	valid' → logprob: -22.125553131103516
    5. '   ' → logprob: -22.875553131103516
    6. '_valid' → logprob: -23.375553131103516
    7. '
' → logprob: -23.500553131103516
    8. '.valid' → logprob: -24.000553131103516
    9. 'n' → logprob: -24.750553131103516
    10. 'invalid' → logprob: -25.250553131103516

Token 528: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.6550729419104755e-05
    2. '_valid' → logprob: -10.250036239624023
    3. 'valid' → logprob: -14.125036239624023
    4. 'count' → logprob: -15.250036239624023
    5. '_' → logprob: -17.875036239624023
    6. '_value' → logprob: -18.000036239624023
    7. '(valid' → logprob: -18.125036239624023
    8. '_val' → logprob: -18.250036239624023
    9. '[' → logprob: -18.500036239624023
    10. '\' → logprob: -18.750036239624023

Token 529: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2235632985830307
    2. '
' → logprob: -1.723563313484192
    3. 'print' → logprob: -3.8485631942749023
    4. ' print' → logprob: -7.723563194274902
    5. '<|end|>' → logprob: -9.973563194274902
    6. '    
' → logprob: -10.348563194274902
    7. '```' → logprob: -10.973563194274902
    8. '	print' → logprob: -11.098563194274902
    9. '
' → logprob: -11.223563194274902
    10. ',' → logprob: -11.723563194274902

Token 530: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20926842093467712
    2. '
' → logprob: -1.7092684507369995
    3. '\n' → logprob: -5.459268569946289
    4. '   ' → logprob: -6.334268569946289
    5. ' print' → logprob: -7.209268569946289
    6. '    
' → logprob: -7.584268569946289
    7. '<|end|>' → logprob: -8.584268569946289
    8. '  
' → logprob: -8.834268569946289
    9. '\' → logprob: -9.709268569946289
    10. '\
' → logprob: -9.959268569946289

Token 531: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -14.250000953674316
    3. '   ' → logprob: -21.125
    4. 'printf' → logprob: -22.375
    5. '```' → logprob: -22.75
    6. '	print' → logprob: -25.0
    7. '#print' → logprob: -25.625
    8. '
' → logprob: -26.75
    9. '.print' → logprob: -27.0
    10. 'Print' → logprob: -27.75

Token 532: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.06204330921173096
    2. '(' → logprob: -3.3120431900024414
    3. '(expected' → logprob: -3.8120431900024414
    4. '("' → logprob: -6.687043190002441
    5. '("{' → logprob: -8.562043190002441
    6. '()' → logprob: -9.687043190002441
    7. '(round' → logprob: -9.812043190002441
    8. '("("' → logprob: -10.687043190002441
    9. '("%.' → logprob: -10.937043190002441
    10. '('' → logprob: -11.937043190002441

Token 533: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.3202607035636902
    2. '("{' → logprob: -1.320260763168335
    3. '{' → logprob: -5.570260524749756
    4. '(f' → logprob: -6.070260524749756
    5. '("%.' → logprob: -7.570260524749756
    6. '(' → logprob: -9.195261001586914
    7. '("' → logprob: -9.445261001586914
    8. '"' → logprob: -9.570261001586914
    9. '('{' → logprob: -10.195261001586914
    10. '({' → logprob: -10.695261001586914

Token 534: 'expected' (ID: 12575)
  Prédit: 'expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -1.9361264946837764e-07
    2. ' expected' → logprob: -15.75
    3. '(expected' → logprob: -20.375
    4. '{' → logprob: -21.375
    5. '	expected' → logprob: -21.5
    6. '.expected' → logprob: -21.75
    7. 'requested' → logprob: -23.5
    8. 'valid' → logprob: -23.625
    9. '   ' → logprob: -23.625
    10. 'expect' → logprob: -24.5

Token 535: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.512236498361744e-07
    2. 'value' → logprob: -14.625000953674316
    3. '{' → logprob: -17.125
    4. 'expected' → logprob: -17.75
    5. '_VALUE' → logprob: -18.625
    6. '_expected' → logprob: -19.125
    7. '"value' → logprob: -19.875
    8. 'f' → logprob: -19.875
    9. 'alue' → logprob: -20.5
    10. 'Value' → logprob: -20.75

Token 536: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -9.014684110297821e-06
    2. ' :.' → logprob: -12.125008583068848
    3. ':' → logprob: -12.625008583068848
    4. ':f' → logprob: -16.125009536743164
    5. '.' → logprob: -16.125009536743164
    6. '{' → logprob: -16.750009536743164
    7. ':{' → logprob: -18.125009536743164
    8. '}' → logprob: -18.875009536743164
    9. ':\' → logprob: -19.250009536743164
    10. ' .' → logprob: -19.250009536743164

Token 537: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. '9' → logprob: -16.25
    3. '{' → logprob: -18.875
    4. '8' → logprob: -20.125
    5. '7' → logprob: -20.625
    6. '6' → logprob: -21.625
    7. '010' → logprob: -22.75
    8. '4' → logprob: -23.5
    9. '１０' → logprob: -23.625
    10. ' ' → logprob: -24.5

Token 538: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. 'g' → logprob: -19.375
    3. ' f' → logprob: -20.75
    4. '```' → logprob: -20.75
    5. '}' → logprob: -21.5
    6. '
' → logprob: -21.75
    7. '	f' → logprob: -23.0
    8. 'lf' → logprob: -24.0
    9. '[f' → logprob: -24.5
    10. '``' → logprob: -24.75

Token 539: '}")' (ID: 122365)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.8693678975105286
    2. '}")' → logprob: -1.1193678379058838
    3. ')")' → logprob: -1.3693678379058838
    4. ')' → logprob: -10.494367599487305
    5. ')")
' → logprob: -14.869367599487305
    6. ' )' → logprob: -14.869367599487305
    7. ']' → logprob: -15.494367599487305
    8. '}")
' → logprob: -15.494367599487305
    9. ')"' → logprob: -15.869367599487305
    10. ' ")' → logprob: -15.994367599487305


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 537
Tokens correctement prédits (1ère position, stricte): 246
Tokens correctement prédits (1ère position, avec adaptation): 268
Tokens correctement prédits (top 10): 482
Précision stricte (1ère position): 45.81%
Précision adaptée (1ère position): 49.91%
Précision (top 10): 89.76%
================================================================================
