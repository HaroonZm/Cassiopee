================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:57:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
p=list(map(int,input().split()))
p.sort(reverse=True)
for i in range(n,0,-1):
    if p[i-1]>=i:
        print(i)
        break
else:
    print(0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13154080510139465
    2. ')' → logprob: -2.1315407752990723
    3. '()' → logprob: -6.506540775299072
    4. '(
' → logprob: -7.131540775299072
    5. '())' → logprob: -7.506540775299072
    6. '```' → logprob: -7.756540775299072
    7. '`' → logprob: -8.63154125213623
    8. '<|end|>' → logprob: -8.75654125213623
    9. '(

' → logprob: -8.88154125213623
    10. ''' → logprob: -9.13154125213623

Token 4: 'p' (ID: 79)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.308822751045227
    2. '+' → logprob: -1.683822751045227
    3. '*' → logprob: -2.0588226318359375
    4. 'for' → logprob: -2.3088226318359375
    5. 'i' → logprob: -2.6838226318359375
    6. '#' → logprob: -2.8088226318359375
    7. '\n' → logprob: -3.3088226318359375
    8. 's' → logprob: -3.4338226318359375
    9. '%' → logprob: -3.4338226318359375
    10. ''' → logprob: -4.0588226318359375

Token 5: '=list' (ID: 93413)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2328444868326187
    2. '+' → logprob: -2.732844591140747
    3. '=' → logprob: -2.732844591140747
    4. '**' → logprob: -4.357844352722168
    5. 'i' → logprob: -4.607844352722168
    6. '%' → logprob: -4.732844352722168
    7. '[' → logprob: -4.982844352722168
    8. '*' → logprob: -5.107844352722168
    9. '(' → logprob: -5.232844352722168
    10. ')' → logprob: -5.357844352722168

Token 6: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007894979789853096
    2. '(p' → logprob: -7.375789642333984
    3. '(range' → logprob: -9.375789642333984
    4. '((' → logprob: -11.375789642333984
    5. '```' → logprob: -11.375789642333984
    6. '(
' → logprob: -11.750789642333984
    7. ' (' → logprob: -12.500789642333984
    8. '[(' → logprob: -12.500789642333984
    9. '[' → logprob: -12.875789642333984
    10. '(n' → logprob: -12.875789642333984

Token 7: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1810092180967331
    2. '(' → logprob: -1.9310091733932495
    3. '(lambda' → logprob: -5.056009292602539
    4. '(input' → logprob: -5.181009292602539
    5. ')' → logprob: -5.806009292602539
    6. '[int' → logprob: -6.556009292602539
    7. '(str' → logprob: -6.806009292602539
    8. '<int' → logprob: -7.306009292602539
    9. 'int' → logprob: -7.431009292602539
    10. '<|end|>' → logprob: -7.806009292602539

Token 8: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.15405504405498505
    2. ',input' → logprob: -2.029055118560791
    3. '(' → logprob: -4.904055118560791
    4. ',' → logprob: -5.654055118560791
    5. '=input' → logprob: -9.029054641723633
    6. ')' → logprob: -10.154054641723633
    7. 'input' → logprob: -10.154054641723633
    8. '(int' → logprob: -10.404054641723633
    9. '[input' → logprob: -10.529054641723633
    10. ' ,' → logprob: -10.654054641723633

Token 9: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3050135672092438
    2. '()' → logprob: -1.6800135374069214
    3. '()))' → logprob: -2.680013656616211
    4. '().' → logprob: -5.680013656616211
    5. '()>' → logprob: -6.430013656616211
    6. '()));' → logprob: -7.055013656616211
    7. ')' → logprob: -7.680013656616211
    8. '());' → logprob: -8.055013656616211
    9. '(' → logprob: -8.805013656616211
    10. '()-' → logprob: -8.930013656616211

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.85104202805087e-05
    2. 'strip' → logprob: -9.500078201293945
    3. 'rstrip' → logprob: -12.750078201293945
    4. ' split' → logprob: -15.000078201293945
    5. '(split' → logprob: -15.625078201293945
    6. 'spl' → logprob: -16.375078201293945
    7. 's' → logprob: -18.375078201293945
    8. ')' → logprob: -19.000078201293945
    9. 'replace' → logprob: -19.250078201293945
    10. 'sp' → logprob: -20.125078201293945

Token 11: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0943883657455444
    2. '))' → logprob: -1.0943883657455444
    3. '()))' → logprob: -2.094388484954834
    4. '(' → logprob: -2.219388484954834
    5. '())' → logprob: -2.344388484954834
    6. '()' → logprob: -6.844388484954834
    7. '('' → logprob: -6.969388484954834
    8. ')))' → logprob: -8.719388008117676
    9. ')(' → logprob: -9.594388008117676
    10. '(
' → logprob: -9.594388008117676

Token 12: 'p' (ID: 79)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.473486304283142
    2. 'c' → logprob: -1.598486304283142
    3. 'p' → logprob: -1.723486304283142
    4. 'a' → logprob: -2.3484864234924316
    5. 'q' → logprob: -2.4734864234924316
    6. ')' → logprob: -2.8484864234924316
    7. 'd' → logprob: -3.0984864234924316
    8. 'for' → logprob: -3.3484864234924316
    9. 'r' → logprob: -3.8484864234924316
    10. 'm' → logprob: -3.9734864234924316

Token 13: '.sort' (ID: 19551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05905447527766228
    2. '.' → logprob: -3.059054374694824
    3. '\[' → logprob: -5.684054374694824
    4. '```' → logprob: -6.059054374694824
    5. '[p' → logprob: -6.559054374694824
    6. '[:]' → logprob: -7.184054374694824
    7. '[
' → logprob: -7.559054374694824
    8. '#' → logprob: -7.934054374694824
    9. '<|end|>' → logprob: -8.059054374694824
    10. '[::-' → logprob: -8.684054374694824

Token 14: '(reverse' (ID: 110806)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03386363759636879
    2. '()' → logprob: -3.4088635444641113
    3. '(p' → logprob: -9.53386402130127
    4. ' (' → logprob: -10.90886402130127
    5. '```' → logprob: -11.28386402130127
    6. ')' → logprob: -11.40886402130127
    7. '(
' → logprob: -11.53386402130127
    8. '((' → logprob: -11.78386402130127
    9. '("("' → logprob: -11.78386402130127
    10. '('' → logprob: -11.78386402130127

Token 15: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.2915137708187103
    2. ')' → logprob: -2.166513681411743
    3. '())' → logprob: -2.916513681411743
    4. '))' → logprob: -3.541513681411743
    5. '=' → logprob: -3.666513681411743
    6. '(' → logprob: -4.416513919830322
    7. '(True' → logprob: -4.541513919830322
    8. '()' → logprob: -5.416513919830322
    9. '()))' → logprob: -6.291513919830322
    10. ')=' → logprob: -9.041513442993164

Token 16: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024774393532425165
    2. '))' → logprob: -6.002477645874023
    3. ')
' → logprob: -14.252477645874023
    4. '`)' → logprob: -15.252477645874023
    5. ')`' → logprob: -15.377477645874023
    6. ')p' → logprob: -15.627477645874023
    7. ')))' → logprob: -15.752477645874023
    8. '()' → logprob: -15.877477645874023
    9. ' )' → logprob: -16.502477645874023
    10. '())' → logprob: -17.002477645874023

Token 17: 'for' (ID: 1938)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.052160620689392
    2. 's' → logprob: -1.677160620689392
    3. 'for' → logprob: -1.677160620689392
    4. 'a' → logprob: -2.3021607398986816
    5. 'i' → logprob: -2.8021607398986816
    6. 'p' → logprob: -4.177160739898682
    7. 'd' → logprob: -4.177160739898682
    8. 'n' → logprob: -4.427160739898682
    9. 'count' → logprob: -4.552160739898682
    10. 'm' → logprob: -4.677160739898682

Token 18: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.39219483733177185
    2. ' ' → logprob: -1.1421948671340942
    3. 'i' → logprob: -5.892194747924805
    4. ' p' → logprob: -6.267194747924805
    5. '_' → logprob: -7.892194747924805
    6. '  ' → logprob: -8.767194747924805
    7. ' _' → logprob: -9.267194747924805
    8. ' ‌' → logprob: -11.892194747924805
    9. ' ' → logprob: -12.142194747924805
    10. 'p' → logprob: -12.142194747924805

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5347244739532471
    2. 'in' → logprob: -0.9097244739532471
    3. ' ' → logprob: -4.784724235534668
    4. 'range' → logprob: -7.034724235534668
    5. ' range' → logprob: -7.034724235534668
    6. '  ' → logprob: -7.159724235534668
    7. '<|end|>' → logprob: -8.284724235534668
    8. '```' → logprob: -10.034724235534668
    9. '(' → logprob: -10.159724235534668
    10. ' p' → logprob: -10.534724235534668

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13736845552921295
    2. ' range' → logprob: -2.1373684406280518
    3. 'p' → logprob: -4.637368679046631
    4. ' p' → logprob: -7.262368679046631
    5. '	range' → logprob: -13.887368202209473
    6. '(range' → logprob: -15.637368202209473
    7. ' ' → logprob: -15.762368202209473
    8. '.range' → logprob: -16.63736915588379
    9. 'Range' → logprob: -17.13736915588379
    10. '_range' → logprob: -17.26236915588379

Token 21: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020072411745786667
    2. '(len' → logprob: -4.0200724601745605
    3. '(n' → logprob: -6.2700724601745605
    4. ' (' → logprob: -11.395071983337402
    5. '(p' → logprob: -11.645071983337402
    6. '(length' → logprob: -12.895071983337402
    7. '(
' → logprob: -13.395071983337402
    8. '(

' → logprob: -14.020071983337402
    9. '(s' → logprob: -14.270071983337402
    10. '((' → logprob: -14.270071983337402

Token 22: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012199154123663902
    2. ')' → logprob: -4.5121989250183105
    3. '-' → logprob: -7.7621989250183105
    4. '+' → logprob: -8.137199401855469
    5. '):
' → logprob: -8.512199401855469
    6. ':' → logprob: -8.762199401855469
    7. ' ):' → logprob: -10.262199401855469
    8. '>' → logprob: -12.137199401855469
    9. '){' → logprob: -12.262199401855469
    10. ',' → logprob: -12.637199401855469

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5621053576469421
    2. '2' → logprob: -1.312105417251587
    3. ' ' → logprob: -2.562105417251587
    4. 'len' → logprob: -3.437105417251587
    5. 'n' → logprob: -3.562105417251587
    6. '1' → logprob: -4.562105178833008
    7. '-' → logprob: -5.812105178833008
    8. ' n' → logprob: -5.812105178833008
    9. ' len' → logprob: -6.062105178833008
    10. 'p' → logprob: -6.187105178833008

Token 24: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.3216680586338043
    2. ',' → logprob: -1.321668028831482
    3. '-' → logprob: -4.8216681480407715
    4. ' ,-' → logprob: -9.321667671203613
    5. '):' → logprob: -9.696667671203613
    6. ' ,' → logprob: -9.946667671203613
    7. ' -' → logprob: -10.071667671203613
    8. ',p' → logprob: -11.071667671203613
    9. ')' → logprob: -11.571667671203613
    10. '-,' → logprob: -11.696667671203613

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '2' → logprob: -16.62500762939453
    4. '```' → logprob: -16.75000762939453
    5. ')' → logprob: -17.75000762939453
    6. '１' → logprob: -18.87500762939453
    7. '``' → logprob: -19.75000762939453
    8. '-' → logprob: -20.00000762939453
    9. '   ' → logprob: -20.50000762939453
    10. '):
' → logprob: -21.00000762939453

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006114124786108732
    2. ')' → logprob: -5.2561140060424805
    3. '):
' → logprob: -7.7561140060424805
    4. ':' → logprob: -8.25611400604248
    5. ',' → logprob: -9.13111400604248
    6. '-' → logprob: -10.25611400604248
    7. ' ):' → logprob: -10.38111400604248
    8. '):
' → logprob: -12.00611400604248
    9. '):-' → logprob: -12.38111400604248
    10. ' )' → logprob: -14.13111400604248

Token 27: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7825035452842712
    2. '   ' → logprob: -0.9075035452842712
    3. '<|end|>' → logprob: -2.782503604888916
    4. ':' → logprob: -3.282503604888916
    5. '    ' → logprob: -4.407503604888916
    6. ' if' → logprob: -4.657503604888916
    7. ' 
' → logprob: -5.782503604888916
    8. '  ' → logprob: -6.032503604888916
    9. ')' → logprob: -6.157503604888916
    10. '[' → logprob: -6.532503604888916

Token 28: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1285414695739746
    2. ' print' → logprob: -2.8785414695739746
    3. 'print' → logprob: -4.253541469573975
    4. ' if' → logprob: -4.253541469573975
    5. '    ' → logprob: -4.378541469573975
    6. ' p' → logprob: -4.378541469573975
    7. ' i' → logprob: -5.503541469573975
    8. '   ' → logprob: -5.628541469573975
    9. '<|end|>' → logprob: -7.128541469573975
    10. 'if' (adapté à ' if') → logprob: -7.378541469573975

Token 29: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.12145739048719406
    2. 'p' → logprob: -2.37145733833313
    3. ' i' → logprob: -3.99645733833313
    4. 'i' → logprob: -5.996457576751709
    5. ' ' → logprob: -9.87145709991455
    6. '   ' → logprob: -10.24645709991455
    7. ' n' → logprob: -10.37145709991455
    8. ' not' → logprob: -11.87145709991455
    9. 'n' → logprob: -12.12145709991455
    10. '(p' → logprob: -12.37145709991455

Token 30: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000841907283756882
    2. '[' → logprob: -7.125842094421387
    3. '[-' → logprob: -10.625842094421387
    4. '[p' → logprob: -12.000842094421387
    5. '[len' → logprob: -13.250842094421387
    6. '[j' → logprob: -13.875842094421387
    7. 'i' → logprob: -14.000842094421387
    8. '[n' → logprob: -14.625842094421387
    9. '[index' → logprob: -15.125842094421387
    10. '[]' → logprob: -15.125842094421387

Token 31: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09079515933990479
    2. ']>' → logprob: -2.7157950401306152
    3. '-' → logprob: -4.840795040130615
    4. '[' → logprob: -5.215795040130615
    5. '>' → logprob: -5.590795040130615
    6. ']>=' → logprob: -6.715795040130615
    7. ' ]' → logprob: -7.340795040130615
    8. '[i' → logprob: -7.465795040130615
    9. ']==' → logprob: -8.590795516967773
    10. '">' → logprob: -8.840795516967773

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004353181866463274
    2. ' ' → logprob: -8.000434875488281
    3. 'i' → logprob: -10.000434875488281
    4. ']' → logprob: -10.687934875488281
    5. '2' → logprob: -11.562934875488281
    6. ' i' → logprob: -12.937934875488281
    7. '0' → logprob: -13.062934875488281
    8. '   ' → logprob: -13.062934875488281
    9. '```' → logprob: -13.250434875488281
    10. ']>' → logprob: -13.875434875488281

Token 33: ']>=' (ID: 185954)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6000924110412598
    2. '>=' → logprob: -1.4750924110412598
    3. '<' → logprob: -1.9750924110412598
    4. ' >' → logprob: -3.2250924110412598
    5. ' >=' → logprob: -4.60009241104126
    6. ' <' → logprob: -4.72509241104126
    7. '<=' → logprob: -4.97509241104126
    8. '*' → logprob: -5.22509241104126
    9. '%' → logprob: -5.35009241104126
    10. '==' → logprob: -6.10009241104126

Token 34: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004247163888067007
    2. '2' → logprob: -8.6254243850708
    3. ' i' → logprob: -9.0004243850708
    4. 'p' → logprob: -9.5004243850708
    5. 'n' → logprob: -10.8754243850708
    6. '10' → logprob: -12.1254243850708
    7. '1' → logprob: -12.2504243850708
    8. '0' → logprob: -12.8754243850708
    9. '(' → logprob: -13.0004243850708
    10. '5' → logprob: -13.1254243850708

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003464289184194058
    2. ' :' → logprob: -8.125346183776855
    3. ':
' → logprob: -10.250346183776855
    4. ':**' → logprob: -12.250346183776855
    5. '):' → logprob: -12.875346183776855
    6. '   ' → logprob: -13.375346183776855
    7. ' and' → logprob: -14.000346183776855
    8. ':return' → logprob: -14.125346183776855
    9. '':' → logprob: -14.625346183776855
    10. ':p' → logprob: -15.000346183776855

Token 36: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1868189573287964
    2. '       ' → logprob: -2.061819076538086
    3. '   ' → logprob: -4.436819076538086
    4. '\n' → logprob: -4.436819076538086
    5. ':
' → logprob: -4.811819076538086
    6. ' :' → logprob: -5.061819076538086
    7. '    ' → logprob: -6.686819076538086
    8. '\t' → logprob: -7.186819076538086
    9. ':\' → logprob: -7.561819076538086
    10. ' :
' → logprob: -7.811819076538086

Token 37: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0028099864721298218
    2. ' print' → logprob: -6.127810001373291
    3. '   ' → logprob: -7.627810001373291
    4. 'break' → logprob: -9.252809524536133
    5. '       ' → logprob: -10.627809524536133
    6. '```' → logprob: -12.502809524536133
    7. 'continue' → logprob: -12.752809524536133
    8. ' break' → logprob: -12.877809524536133
    9. '	print' → logprob: -13.127809524536133
    10. '           ' → logprob: -13.752809524536133

Token 38: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.007910385727882385
    2. 'i' → logprob: -5.007910251617432
    3. '(' → logprob: -6.757910251617432
    4. ' i' → logprob: -10.63291072845459
    5. '(p' → logprob: -12.75791072845459
    6. '("' → logprob: -13.63291072845459
    7. '('' → logprob: -14.00791072845459
    8. '"' → logprob: -14.13291072845459
    9. 'p' → logprob: -14.13291072845459
    10. '()' → logprob: -14.50791072845459

Token 39: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031912627164274454
    2. ')
' → logprob: -5.7531914710998535
    3. ' )' → logprob: -12.378190994262695
    4. ')
' → logprob: -12.878190994262695
    5. '))' → logprob: -13.378190994262695
    6. '`)' → logprob: -13.503190994262695
    7. ')return' → logprob: -14.253190994262695
    8. '')' → logprob: -14.253190994262695
    9. ')`' → logprob: -14.378190994262695
    10. '）' → logprob: -15.003190994262695

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04207175597548485
    2. '   ' → logprob: -4.04207181930542
    3. '<|end|>' → logprob: -4.66707181930542
    4. ' else' → logprob: -5.04207181930542
    5. 'else' → logprob: -5.16707181930542
    6. '```' → logprob: -7.29207181930542
    7. '           ' → logprob: -8.542071342468262
    8. '	' → logprob: -8.667071342468262
    9. ' ' → logprob: -8.792071342468262
    10. '     ' → logprob: -8.792071342468262

Token 41: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007261329446919262
    2. 'break' (adapté à ' break') → logprob: -8.625725746154785
    3. '	break' → logprob: -8.625725746154785
    4. '	' → logprob: -9.125725746154785
    5. '```' → logprob: -9.375725746154785
    6. '<|end|>' → logprob: -9.750725746154785
    7. '   ' → logprob: -10.000725746154785
    8. ' break' → logprob: -10.875725746154785
    9. '        
' → logprob: -11.250725746154785
    10. 'else' → logprob: -12.250725746154785

Token 42: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.23155519366264343
    2. '<|end|>' → logprob: -1.7315552234649658
    3. ' else' → logprob: -3.856555223464966
    4. '```' → logprob: -4.981554985046387
    5. '#' → logprob: -7.106554985046387
    6. '0' → logprob: -7.981554985046387
    7. ')' → logprob: -8.731554985046387
    8. ' ' → logprob: -9.231554985046387
    9. '<|end|>' → logprob: -9.606554985046387
    10. 'elif' → logprob: -9.981554985046387

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022539799101650715
    2. ':
' → logprob: -6.252254009246826
    3. '   ' → logprob: -8.377253532409668
    4. ' :' → logprob: -9.377253532409668
    5. ' :
' → logprob: -12.252253532409668
    6. ' print' → logprob: -13.377253532409668
    7. ':
' → logprob: -14.252253532409668
    8. '  ' → logprob: -14.752253532409668
    9. ':

' → logprob: -14.877253532409668
    10. ' ' → logprob: -14.877253532409668

Token 45: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21628303825855255
    2. '0' → logprob: -1.8412830829620361
    3. '   ' → logprob: -3.341283082962036
    4. ' print' → logprob: -8.466282844543457
    5. '```' → logprob: -8.591282844543457
    6. '	print' → logprob: -10.716282844543457
    7. '    
' → logprob: -10.966282844543457
    8. ' ' → logprob: -11.341282844543457
    9. '``' → logprob: -11.466282844543457
    10. '1' → logprob: -12.466282844543457

Token 46: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10024192184209824
    2. '0' → logprob: -2.3502418994903564
    3. '   ' → logprob: -10.725241661071777
    4. ' print' → logprob: -11.725241661071777
    5. '```' → logprob: -12.350241661071777
    6. '00' → logprob: -15.100241661071777
    7. '000' → logprob: -15.350241661071777
    8. '	print' → logprob: -16.350242614746094
    9. '``' → logprob: -16.600242614746094
    10. '1' → logprob: -16.850242614746094

Token 47: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03807443380355835
    2. '0' → logprob: -3.288074493408203
    3. '("' → logprob: -11.913074493408203
    4. '()' → logprob: -12.288074493408203
    5. ' (' → logprob: -12.538074493408203
    6. '"' → logprob: -12.663074493408203
    7. '('' → logprob: -12.663074493408203
    8. '`' → logprob: -12.663074493408203
    9. '(n' → logprob: -13.163074493408203
    10. '```' → logprob: -14.038074493408203

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -13.125004768371582
    3. '"' → logprob: -13.250004768371582
    4. ''' → logprob: -15.500004768371582
    5. '０' → logprob: -16.750003814697266
    6. '`' → logprob: -17.000003814697266
    7. '1' → logprob: -17.125003814697266
    8. '00' → logprob: -17.375003814697266
    9. ')' → logprob: -17.625003814697266
    10. '   ' → logprob: -17.875003814697266

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. '))' → logprob: -15.000000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '`)' → logprob: -15.500000953674316
    5. '')' → logprob: -16.625001907348633
    6. ' )' → logprob: -17.125001907348633
    7. '）' → logprob: -17.625001907348633
    8. '")' → logprob: -18.375001907348633
    9. '```' → logprob: -18.375001907348633
    10. ')`' → logprob: -19.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 47
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 38
Précision stricte (1ère position): 38.30%
Précision adaptée (1ère position): 42.55%
Précision (top 10): 80.85%
================================================================================
