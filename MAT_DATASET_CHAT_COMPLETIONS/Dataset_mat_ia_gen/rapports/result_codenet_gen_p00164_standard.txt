================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    a = list(map(int, input().split()))
    hakiki = 32
    j_seq_idx = 0
    while hakiki > 0:
        # Ichiro's turn
        ichiro_take = (hakiki - 1) % 5
        if ichiro_take == 0:
            ichiro_take = 1
        hakiki -= ichiro_take
        print(hakiki)
        if hakiki == 0:
            break
        # Jiro's turn
        jiro_take = a[j_seq_idx]
        j_seq_idx = (j_seq_idx + 1) % n
        if jiro_take > hakiki:
            jiro_take = hakiki
        hakiki -= jiro_take
        print(hakiki)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '       ' → logprob: -6.386067867279053
    7. '  ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2360780239105225
    2. '=' → logprob: -1.4860780239105225
    3. 'o' → logprob: -1.8610780239105225
    4. '   ' → logprob: -2.2360780239105225
    5. 'u' → logprob: -2.8610780239105225
    6. ' =' → logprob: -3.2360780239105225
    7. '%' → logprob: -3.3610780239105225
    8. '+' → logprob: -3.8610780239105225
    9. '>' → logprob: -4.361078262329102
    10. '  ' → logprob: -4.611078262329102

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.09271397441625595
    2. ' input' → logprob: -2.5927140712738037
    3. 'int' → logprob: -4.592713832855225
    4. 'input' → logprob: -5.717713832855225
    5. ' n' → logprob: -8.592714309692383
    6. ' ' → logprob: -9.717714309692383
    7. ' randint' → logprob: -10.967714309692383
    8. 'n' → logprob: -11.717714309692383
    9. ' eval' → logprob: -12.217714309692383
    10. ' i' → logprob: -12.217714309692383

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04866332933306694
    2. '(input' → logprob: -3.048663377761841
    3. '()' → logprob: -10.798663139343262
    4. 'input' → logprob: -11.173663139343262
    5. '('' → logprob: -11.423663139343262
    6. '(n' → logprob: -11.423663139343262
    7. ' (' → logprob: -12.548663139343262
    8. '(open' → logprob: -13.298663139343262
    9. '(ord' → logprob: -13.423663139343262
    10. '(
' → logprob: -13.548663139343262

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38052013516426086
    2. ')' → logprob: -1.8805201053619385
    3. '()' → logprob: -2.0055201053619385
    4. '())' → logprob: -3.7555201053619385
    5. '))' → logprob: -5.755520343780518
    6. '()))' → logprob: -7.005520343780518
    7. '('' → logprob: -7.880520343780518
    8. '(
' → logprob: -7.880520343780518
    9. ' ' → logprob: -8.63051986694336
    10. '(""))' → logprob: -8.75551986694336

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39164337515830994
    2. ' if' → logprob: -2.0166432857513428
    3. '   ' → logprob: -2.6416432857513428
    4. ')' → logprob: -3.6416432857513428
    5. ':' → logprob: -3.6416432857513428
    6. '  ' → logprob: -3.8916432857513428
    7. '<|end|>' → logprob: -4.266643524169922
    8. 'if' → logprob: -4.641643524169922
    9. '    ' → logprob: -5.391643524169922
    10. ',' → logprob: -5.641643524169922

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6319265365600586
    2. ' if' → logprob: -1.2569265365600586
    3. ' ' → logprob: -3.0069265365600586
    4. ')' → logprob: -3.1319265365600586
    5. '    ' → logprob: -3.1319265365600586
    6. 'if' (adapté à ' if') → logprob: -4.381926536560059
    7. '  ' → logprob: -4.881926536560059
    8. '<|end|>' → logprob: -4.881926536560059
    9. '```' → logprob: -5.256926536560059
    10. ' )' → logprob: -6.131926536560059

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0035694229882210493
    2. ' ' → logprob: -6.003569602966309
    3. ' not' → logprob: -7.253569602966309
    4. 'n' → logprob: -7.878569602966309
    5. ' ' → logprob: -12.378569602966309
    6. 'not' → logprob: -13.628569602966309
    7. '  ' → logprob: -15.003569602966309
    8. ' (' → logprob: -15.753569602966309
    9. '(n' → logprob: -15.878569602966309
    10. '<|end|>' → logprob: -16.128568649291992

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6851745247840881
    2. ' >' → logprob: -1.0601744651794434
    3. ' <=' → logprob: -2.5601744651794434
    4. ' <' → logprob: -3.5601744651794434
    5. ' ' → logprob: -4.310174465179443
    6. '==' → logprob: -4.310174465179443
    7. '>' → logprob: -4.435174465179443
    8. ' >=' → logprob: -6.435174465179443
    9. '  ' → logprob: -7.560174465179443
    10. ')' → logprob: -7.560174465179443

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10021023452281952
    2. '0' → logprob: -2.350210189819336
    3. ' ' → logprob: -13.975210189819336
    4. '1' → logprob: -14.100210189819336
    5. '32' → logprob: -15.225210189819336
    6. ' -' → logprob: -15.912710189819336
    7. '  ' → logprob: -15.975210189819336
    8. ' a' → logprob: -16.225210189819336
    9. ' EOF' → logprob: -16.225210189819336
    10. '4' → logprob: -16.225210189819336

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006742842961102724
    2. ' ' → logprob: -5.00674295425415
    3. '-' → logprob: -11.131742477416992
    4. '1' → logprob: -12.631742477416992
    5. ' -' → logprob: -12.631742477416992
    6. '42' → logprob: -13.006742477416992
    7. '4' → logprob: -14.631742477416992
    8. '   ' → logprob: -14.631742477416992
    9. '    ' → logprob: -14.756742477416992
    10. 's' → logprob: -15.256742477416992

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.755678961984813e-05
    2. ':
' → logprob: -9.875077247619629
    3. ' :' → logprob: -11.625077247619629
    4. '   ' → logprob: -12.125077247619629
    5. ':return' → logprob: -12.500077247619629
    6. '       ' → logprob: -13.000077247619629
    7. ':\' → logprob: -13.125077247619629
    8. '):' → logprob: -13.375077247619629
    9. '    ' → logprob: -14.375077247619629
    10. ':**' → logprob: -15.250077247619629

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003709696466103196
    2. '   ' → logprob: -6.25370979309082
    3. ' break' → logprob: -6.75370979309082
    4. '\n' → logprob: -8.25370979309082
    5. '    ' → logprob: -8.75370979309082
    6. '	break' → logprob: -10.37870979309082
    7. '\t' → logprob: -10.87870979309082
    8. '      ' → logprob: -11.00370979309082
    9. ' \' → logprob: -11.12870979309082
    10. '     ' → logprob: -11.12870979309082

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.014878070913255215
    2. '       ' → logprob: -4.514878273010254
    3. 'break' (adapté à ' break') → logprob: -5.889878273010254
    4. '   ' → logprob: -7.264878273010254
    5. '\n' → logprob: -8.889878273010254
    6. '	break' → logprob: -9.014878273010254
    7. '    ' → logprob: -10.764878273010254
    8. '```' → logprob: -10.764878273010254
    9. '_break' → logprob: -11.514878273010254
    10. ' ' → logprob: -11.514878273010254

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15489940345287323
    2. '\n' → logprob: -3.0298993587493896
    3. '```' → logprob: -3.4048993587493896
    4. '    
' → logprob: -3.5298993587493896
    5. '\' → logprob: -4.029899597167969
    6. ':' → logprob: -5.529899597167969
    7. '
' → logprob: -6.279899597167969
    8. '\r' → logprob: -6.654899597167969
    9. 'n' → logprob: -6.779899597167969
    10. '  
' → logprob: -7.029899597167969

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21921342611312866
    2. '\n' → logprob: -2.7192134857177734
    3. '<|end|>' → logprob: -2.8442134857177734
    4. '    
' → logprob: -3.8442134857177734
    5. '```' → logprob: -4.344213485717773
    6. '
' → logprob: -4.594213485717773
    7. '#' → logprob: -4.719213485717773
    8. '\' → logprob: -5.094213485717773
    9. ')' → logprob: -5.969213485717773
    10. ':' → logprob: -6.219213485717773

Token 20: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27328136563301086
    2. '\n' → logprob: -2.1482813358306885
    3. ' ' → logprob: -3.5232813358306885
    4. '<|end|>' → logprob: -3.6482813358306885
    5. '\' → logprob: -3.7732813358306885
    6. '    ' → logprob: -4.523281574249268
    7. '    
' → logprob: -5.023281574249268
    8. '```' → logprob: -5.398281574249268
    9. ')' → logprob: -5.773281574249268
    10. '\r' → logprob: -5.773281574249268

Token 21: ' =' (ID: 314)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.40646788477897644
    2. 'rray' → logprob: -1.7814679145812988
    3. 'r' → logprob: -2.406467914581299
    4. ' =' → logprob: -3.406467914581299
    5. ' ' → logprob: -4.281467914581299
    6. '[' → logprob: -5.031467914581299
    7. '=' → logprob: -5.281467914581299
    8. ',' → logprob: -5.406467914581299
    9. ' +=' → logprob: -5.656467914581299
    10. 'dd' → logprob: -6.656467914581299

Token 22: ' list' (ID: 1562)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9190989136695862
    2. ' []' → logprob: -1.0440988540649414
    3. ' list' → logprob: -2.5440988540649414
    4. 'n' → logprob: -2.9190988540649414
    5. ' [' → logprob: -3.0440988540649414
    6. '[]' → logprob: -3.0440988540649414
    7. 'list' → logprob: -5.294098854064941
    8. '[n' → logprob: -5.794098854064941
    9. ' int' → logprob: -6.044098854064941
    10. ' ' → logprob: -6.169098854064941

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0039039766415953636
    2. '(range' → logprob: -6.128903865814209
    3. '(a' → logprob: -6.503903865814209
    4. '(input' → logprob: -9.503904342651367
    5. '()' → logprob: -10.253904342651367
    6. '(int' → logprob: -10.753904342651367
    7. '(map' → logprob: -11.003904342651367
    8. '(
' → logprob: -11.878904342651367
    9. '(eval' → logprob: -12.003904342651367
    10. '(n' → logprob: -12.128904342651367

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010323342867195606
    2. '(' → logprob: -7.00103235244751
    3. 'int' → logprob: -9.376031875610352
    4. '(lambda' → logprob: -11.626031875610352
    5. '(str' → logprob: -11.751031875610352
    6. '<int' → logprob: -11.876031875610352
    7. '[int' → logprob: -12.626031875610352
    8. '=int' → logprob: -12.751031875610352
    9. ')' → logprob: -13.501031875610352
    10. '(input' → logprob: -13.501031875610352

Token 25: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04190522059798241
    2. '(' → logprob: -3.291905164718628
    3. ',input' → logprob: -6.166905403137207
    4. 'input' → logprob: -6.916905403137207
    5. ')' → logprob: -7.666905403137207
    6. '(
' → logprob: -9.416905403137207
    7. ',' → logprob: -9.791905403137207
    8. '=input' → logprob: -10.291905403137207
    9. ' input' → logprob: -10.416905403137207
    10. '<|end|>' → logprob: -10.791905403137207

Token 26: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3485398590564728
    2. 'input' → logprob: -1.2235398292541504
    3. '(input' → logprob: -9.848540306091309
    4. ')' → logprob: -10.473540306091309
    5. ',input' → logprob: -11.848540306091309
    6. ' )' → logprob: -12.848540306091309
    7. '=input' → logprob: -13.473540306091309
    8. '	input' → logprob: -13.598540306091309
    9. '))' → logprob: -14.723540306091309
    10. '[input' → logprob: -14.973540306091309

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1035417690873146
    2. '()' → logprob: -2.353541851043701
    3. '())' → logprob: -6.478541851043701
    4. '()))' → logprob: -6.978541851043701
    5. '(' → logprob: -7.228541851043701
    6. '()));' → logprob: -10.478541374206543
    7. '())))' → logprob: -10.603541374206543
    8. '()
' → logprob: -11.103541374206543
    9. '(()' → logprob: -11.228541374206543
    10. '()>' → logprob: -12.103541374206543

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005816269549541175
    2. 'strip' → logprob: -7.500581741333008
    3. 'rstrip' → logprob: -10.750581741333008
    4. ' split' → logprob: -12.000581741333008
    5. '(split' → logprob: -14.250581741333008
    6. 'spl' → logprob: -15.250581741333008
    7. ')' → logprob: -17.000581741333008
    8. 's' → logprob: -17.250581741333008
    9. 'sp' → logprob: -17.500581741333008
    10. ' strip' → logprob: -17.500581741333008

Token 29: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5335375070571899
    2. '))' → logprob: -1.28353750705719
    3. '())' → logprob: -2.5335373878479004
    4. ')' → logprob: -3.1585373878479004
    5. '()' → logprob: -4.9085373878479
    6. '(' → logprob: -5.0335373878479
    7. ')))' → logprob: -8.283537864685059
    8. '()))
' → logprob: -9.158537864685059
    9. '())))' → logprob: -9.283537864685059
    10. '('' → logprob: -10.033537864685059

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2106785774230957
    2. ' ' → logprob: -2.5856785774230957
    3. '[' → logprob: -2.8356785774230957
    4. '<|end|>' → logprob: -3.9606785774230957
    5. '    
' → logprob: -5.210678577423096
    6. ')' → logprob: -5.335678577423096
    7. '\n' → logprob: -5.335678577423096
    8. ' 
' → logprob: -5.585678577423096
    9. '    ' → logprob: -5.710678577423096
    10. '
' → logprob: -5.710678577423096

Token 31: ' hak' (ID: 24396)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5258050560951233
    2. 's' → logprob: -1.9008049964904785
    3. 'c' → logprob: -2.9008049964904785
    4. 'r' → logprob: -3.6508049964904785
    5. 'sum' → logprob: -3.6508049964904785
    6. 'n' → logprob: -4.0258049964904785
    7. '[' → logprob: -4.2758049964904785
    8. ' ' → logprob: -4.2758049964904785
    9. 'count' → logprob: -4.2758049964904785
    10. 'd' → logprob: -4.6508049964904785

Token 32: 'iki' (ID: 5368)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.896289050579071
    2. 'e' → logprob: -1.3962891101837158
    3. 'a' → logprob: -1.7712891101837158
    4. 'usho' → logprob: -2.896289110183716
    5. 'aru' → logprob: -3.771289110183716
    6. 'u' → logprob: -4.021288871765137
    7. 'ar' → logprob: -4.021288871765137
    8. '   ' → logprob: -4.771288871765137
    9. 'ushu' → logprob: -5.708788871765137
    10. 'ari' → logprob: -5.896288871765137

Token 33: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5028497576713562
    2. ' =' → logprob: -2.502849817276001
    3. '_s' → logprob: -3.377849817276001
    4. '_a' → logprob: -3.627849817276001
    5. '_num' → logprob: -3.752849817276001
    6. '_n' → logprob: -3.752849817276001
    7. '=' → logprob: -3.752849817276001
    8. 's' → logprob: -4.002849578857422
    9. '_number' → logprob: -4.002849578857422
    10. 'mi' → logprob: -4.627849578857422

Token 34: ' ' (ID: 220)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6946680545806885
    2. ' sum' → logprob: -1.9446680545806885
    3. ' a' → logprob: -2.4446680545806885
    4. 'a' → logprob: -3.0696680545806885
    5. 'max' → logprob: -3.0696680545806885
    6. 'sum' → logprob: -3.1946680545806885
    7. ' ' → logprob: -3.3196680545806885
    8. ' min' → logprob: -3.6946680545806885
    9. '0' → logprob: -3.8196680545806885
    10. ' len' → logprob: -4.069667816162109

Token 35: '32' (ID: 1398)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6509743928909302
    2. 'a' → logprob: -1.7759743928909302
    3. 'sum' → logprob: -1.7759743928909302
    4. 'all' → logprob: -3.4009742736816406
    5. 'len' → logprob: -3.9009742736816406
    6. 'abs' → logprob: -4.150974273681641
    7. '0' → logprob: -4.150974273681641
    8. 'min' → logprob: -4.400974273681641
    9. '[a' → logprob: -4.775974273681641
    10. '[max' → logprob: -5.025974273681641

Token 36: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8009852170944214
    2. ')' → logprob: -2.175985336303711
    3. ' ' → logprob: -2.175985336303711
    4. '0' → logprob: -3.050985336303711
    5. '    ' → logprob: -3.300985336303711
    6. '*' → logprob: -3.550985336303711
    7. '-bit' → logprob: -3.550985336303711
    8. ' -' → logprob: -3.925985336303711
    9. '<|end|>' → logprob: -3.925985336303711
    10. '_' → logprob: -4.175985336303711

Token 37: '   ' (ID: 271)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0300089120864868
    2. ' ' → logprob: -1.2800089120864868
    3. '   ' → logprob: -2.1550087928771973
    4. '<|end|>' → logprob: -2.4050087928771973
    5. 'for' → logprob: -3.5300087928771973
    6. '*' → logprob: -3.7800087928771973
    7. ')' → logprob: -3.9050087928771973
    8. ' for' → logprob: -4.280008792877197
    9. '    ' → logprob: -4.655008792877197
    10. '=' → logprob: -4.905008792877197

Token 38: ' j' (ID: 441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9463015794754028
    2. '-' → logprob: -1.4463015794754028
    3. ' ' → logprob: -2.0713014602661133
    4. ' for' → logprob: -2.4463014602661133
    5. '   ' → logprob: -2.4463014602661133
    6. '=' → logprob: -4.071301460266113
    7. '>' → logprob: -4.946301460266113
    8. ')' → logprob: -4.946301460266113
    9. '*' → logprob: -5.196301460266113
    10. '    ' → logprob: -5.321301460266113

Token 39: '_seq' (ID: 34260)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2925301194190979
    2. ' =' → logprob: -1.4175300598144531
    3. '=i' → logprob: -6.292530059814453
    4. ' ' → logprob: -6.667530059814453
    5. ' -=' → logprob: -6.667530059814453
    6. '-' → logprob: -6.792530059814453
    7. '=len' → logprob: -6.917530059814453
    8. ' +=' → logprob: -7.042530059814453
    9. 'i' → logprob: -7.542530059814453
    10. 'umlah' → logprob: -8.042530059814453

Token 40: '_idx' (ID: 15257)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5222105383872986
    2. ' =' → logprob: -1.6472105979919434
    3. 'u' → logprob: -1.7722105979919434
    4. 'uel' → logprob: -4.772210597991943
    5. 'ence' → logprob: -5.022210597991943
    6. 'ue' → logprob: -5.022210597991943
    7. '=[]' → logprob: -5.272210597991943
    8. '_' → logprob: -5.647210597991943
    9. '_idx' → logprob: -6.397210597991943
    10. '_len' → logprob: -6.647210597991943

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4515773355960846
    2. '=' → logprob: -1.0765773057937622
    3. 'x' → logprob: -5.076577186584473
    4. '_' → logprob: -5.451577186584473
    5. ' ' → logprob: -5.451577186584473
    6. ' +=' → logprob: -5.701577186584473
    7. '+' → logprob: -6.576577186584473
    8. 's' → logprob: -6.701577186584473
    9. '[' → logprob: -7.576577186584473
    10. 'f' → logprob: -8.201577186584473

Token 42: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045680273324251175
    2. ' ' → logprob: -3.295680284500122
    3. '-' → logprob: -5.545680046081543
    4. '1' → logprob: -6.670680046081543
    5. ' -' → logprob: -7.295680046081543
    6. '[]' → logprob: -7.420680046081543
    7. ' hak' → logprob: -8.420680046081543
    8. 'hak' → logprob: -8.420680046081543
    9. '32' → logprob: -8.795680046081543
    10. ' []' → logprob: -9.045680046081543

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019573615863919258
    2. '-' → logprob: -4.26957368850708
    3. '[]' → logprob: -5.64457368850708
    4. ' ' → logprob: -6.89457368850708
    5. '1' → logprob: -8.394573211669922
    6. '[' → logprob: -8.894573211669922
    7. ' -' → logprob: -9.394573211669922
    8. 'len' → logprob: -9.519573211669922
    9. 'hak' → logprob: -9.519573211669922
    10. '{}' → logprob: -9.894573211669922

Token 44: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9327235817909241
    2. 'j' → logprob: -2.3077235221862793
    3. 'w' → logprob: -2.3077235221862793
    4. ' for' → logprob: -2.8077235221862793
    5. 'while' (adapté à ' while') → logprob: -3.0577235221862793
    6. 'i' → logprob: -3.1827235221862793
    7. ':' → logprob: -3.5577235221862793
    8. ' ' → logprob: -3.6827235221862793
    9. ',' → logprob: -3.8077235221862793
    10. 'n' → logprob: -3.9327235221862793

Token 47: ' hak' (ID: 24396)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.025620324537158012
    2. ' hak' → logprob: -4.275620460510254
    3. 'j' → logprob: -4.775620460510254
    4. ' n' → logprob: -6.525620460510254
    5. ' len' → logprob: -7.525620460510254
    6. ' ' → logprob: -7.525620460510254
    7. 'hak' → logprob: -8.775620460510254
    8. ' a' → logprob: -9.275620460510254
    9. ' True' → logprob: -10.150620460510254
    10. 'n' → logprob: -10.400620460510254

Token 48: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -0.0016968417912721634
    2. 'i' → logprob: -7.251697063446045
    3. '>' → logprob: -7.751697063446045
    4. '   ' → logprob: -8.126696586608887
    5. '<' → logprob: -10.251696586608887
    6. '  ' → logprob: -10.501696586608887
    7. ' >' → logprob: -10.751696586608887
    8. 'ikki' → logprob: -10.876696586608887
    9. '-' → logprob: -11.376696586608887
    10. '_' → logprob: -11.376696586608887

Token 49: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.13856787979602814
    2. '>' → logprob: -2.1385679244995117
    3. ' <' → logprob: -4.638567924499512
    4. ' >=' → logprob: -6.888567924499512
    5. '<' → logprob: -7.763567924499512
    6. ' ' → logprob: -9.013567924499512
    7. '>=' → logprob: -9.263567924499512
    8. ' <=' → logprob: -9.388567924499512
    9. '   ' → logprob: -9.763567924499512
    10. '%' → logprob: -10.513567924499512

Token 50: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20375974476337433
    2. ' ' → logprob: -1.703759789466858
    3. 'j' → logprob: -6.328759670257568
    4. '1' → logprob: -8.453760147094727
    5. ' j' → logprob: -9.078760147094727
    6. 'a' → logprob: -10.328760147094727
    7. ' hak' → logprob: -10.328760147094727
    8. 'hak' → logprob: -10.953760147094727
    9. '5' → logprob: -11.203760147094727
    10. '2' → logprob: -11.453760147094727

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008732522837817669
    2. ' ' → logprob: -5.383732318878174
    3. 'j' → logprob: -6.133732318878174
    4. '1' → logprob: -6.758732318878174
    5. 'a' → logprob: -8.008732795715332
    6. '-' → logprob: -8.633732795715332
    7. '2' → logprob: -10.633732795715332
    8. '7' → logprob: -10.883732795715332
    9. '10' → logprob: -10.883732795715332
    10. 'hak' → logprob: -11.008732795715332

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001189041300676763
    2. ':
' → logprob: -7.376189231872559
    3. ' and' → logprob: -7.876189231872559
    4. '   ' → logprob: -9.501189231872559
    5. ',' → logprob: -10.376189231872559
    6. ' :' → logprob: -10.876189231872559
    7. '<|end|>' → logprob: -11.001189231872559
    8. 'and' → logprob: -11.626189231872559
    9. '       ' → logprob: -11.751189231872559
    10. ')' → logprob: -12.001189231872559

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4221295714378357
    2. '   ' → logprob: -1.4221296310424805
    3. ' ' → logprob: -3.5471296310424805
    4. '    ' → logprob: -3.5471296310424805
    5. '<|end|>' → logprob: -4.0471296310424805
    6. ':' → logprob: -4.9221296310424805
    7. '[' → logprob: -5.5471296310424805
    8. '    
' → logprob: -6.1721296310424805
    9. ')' → logprob: -6.1721296310424805
    10. ' 
' → logprob: -6.5471296310424805

Token 54: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7116726636886597
    2. '    ' → logprob: -1.8366726636886597
    3. ' if' → logprob: -1.9616726636886597
    4. '   ' → logprob: -2.711672782897949
    5. 'j' → logprob: -2.836672782897949
    6. 'if' → logprob: -4.336672782897949
    7. 'a' → logprob: -4.836672782897949
    8. ' j' → logprob: -4.961672782897949
    9. ' for' → logprob: -5.086672782897949
    10. 'n' → logprob: -5.336672782897949

Token 55: ' Ich' (ID: 14337)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.730339765548706
    2. ' hak' → logprob: -2.480339765548706
    3. 'j' → logprob: -2.605339765548706
    4. 'if' → logprob: -2.730339765548706
    5. ' j' → logprob: -2.855339765548706
    6. ' for' → logprob: -2.980339765548706
    7. ' ' → logprob: -3.105339765548706
    8. ' pass' → logprob: -3.855339765548706
    9. ' a' → logprob: -3.980339765548706
    10. 'a' → logprob: -4.230340003967285

Token 56: 'iro' (ID: 4509)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.456445574760437
    2. '   ' → logprob: -1.581445574760437
    3. 'ijo' → logprob: -2.4564456939697266
    4. 'i' → logprob: -2.5814456939697266
    5. 'o' → logprob: -2.8314456939697266
    6. 'e' → logprob: -2.8314456939697266
    7. 'ij' → logprob: -2.9564456939697266
    8. 'n' → logprob: -2.9564456939697266
    9. 'er' → logprob: -3.0814456939697266
    10. '       ' → logprob: -3.3314456939697266

Token 57: ''s' (ID: 885)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3113385438919067
    2. ' =' → logprob: -2.186338424682617
    3. ' +=' → logprob: -2.311338424682617
    4. ' if' → logprob: -2.436338424682617
    5. ' ' → logprob: -2.561338424682617
    6. 'if' → logprob: -2.811338424682617
    7. '=' → logprob: -3.811338424682617
    8. 'for' → logprob: -3.811338424682617
    9. ' for' → logprob: -4.186338424682617
    10. '+=' → logprob: -4.311338424682617

Token 58: ' turn' (ID: 3716)
  Prédit: ' turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' turn' → logprob: -1.9103246927261353
    2. ' if' → logprob: -2.1603245735168457
    3. 'if' → logprob: -2.5353245735168457
    4. 'turn' → logprob: -2.5353245735168457
    5. 'j' → logprob: -2.9103245735168457
    6. ' at' → logprob: -3.1603245735168457
    7. ' move' → logprob: -3.1603245735168457
    8. ' run' → logprob: -3.4103245735168457
    9. 'score' → logprob: -3.4103245735168457
    10. ' for' → logprob: -3.5353245735168457

Token 59: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3908228874206543
    2. '<|end|>' → logprob: -2.0158228874206543
    3. '
' → logprob: -2.8908228874206543
    4. ' if' → logprob: -3.7658228874206543
    5. '   ' → logprob: -3.7658228874206543
    6. ' 
' → logprob: -4.015822887420654
    7. '        
' → logprob: -4.515822887420654
    8. '    
' → logprob: -4.640822887420654
    9. 'j' → logprob: -4.890822887420654
    10. ' ' → logprob: -5.390822887420654

Token 61: ' ich' (ID: 4629)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7153533697128296
    2. 'for' → logprob: -1.5903533697128296
    3. 'j' → logprob: -2.465353488922119
    4. 'i' → logprob: -2.715353488922119
    5. 'a' → logprob: -2.840353488922119
    6. 'while' → logprob: -3.715353488922119
    7. 'hak' → logprob: -4.215353488922119
    8. ' if' → logprob: -4.465353488922119
    9. '   ' → logprob: -4.590353488922119
    10. ' for' → logprob: -4.715353488922119

Token 62: 'iro' (ID: 4509)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.8806438446044922
    2. 'iro' → logprob: -1.0056438446044922
    3. '_seq' → logprob: -2.880643844604492
    4. ' =' → logprob: -3.255643844604492
    5. '_' → logprob: -3.880643844604492
    6. 'igo' → logprob: -4.255643844604492
    7. 'ro' → logprob: -4.630643844604492
    8. 'i' → logprob: -4.630643844604492
    9. '_idx' → logprob: -5.255643844604492
    10. 'im' → logprob: -5.380643844604492

Token 63: '_take' (ID: 197790)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5658711194992065
    2. '_' → logprob: -2.065871238708496
    3. ' +=' → logprob: -3.315871238708496
    4. '_val' → logprob: -3.690871238708496
    5. '=' → logprob: -4.065871238708496
    6. '_score' → logprob: -4.190871238708496
    7. '_count' → logprob: -4.315871238708496
    8. '_len' → logprob: -4.440871238708496
    9. '_bits' → logprob: -4.565871238708496
    10. '_damage' → logprob: -4.565871238708496

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10030673444271088
    2. '=' → logprob: -2.350306749343872
    3. ' ' → logprob: -10.225306510925293
    4. '=int' → logprob: -10.350306510925293
    5. 'd' → logprob: -11.475306510925293
    6. '   ' → logprob: -11.975306510925293
    7. 's' → logprob: -12.600306510925293
    8. ',' → logprob: -12.975306510925293
    9. '_' → logprob: -13.475306510925293
    10. '  ' → logprob: -13.850306510925293

Token 65: ' (' (ID: 350)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.39408978819847107
    2. 'min' → logprob: -1.2690898180007935
    3. ' hak' → logprob: -4.269089698791504
    4. 'hak' → logprob: -4.644089698791504
    5. 'a' → logprob: -4.769089698791504
    6. ' a' → logprob: -5.519089698791504
    7. '1' → logprob: -6.394089698791504
    8. ' max' → logprob: -6.644089698791504
    9. 'max' → logprob: -6.769089698791504
    10. ' ' → logprob: -6.894089698791504

Token 66: 'hak' (ID: 83968)
  Prédit: 'hak'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hak' → logprob: -0.8230080604553223
    2. 'min' → logprob: -1.9480080604553223
    3. ' min' → logprob: -2.1980080604553223
    4. ' hak' → logprob: -2.1980080604553223
    5. 'a' → logprob: -2.6980080604553223
    6. 'n' → logprob: -3.6980080604553223
    7. '1' → logprob: -4.073008060455322
    8. '2' → logprob: -4.073008060455322
    9. ' ' → logprob: -4.073008060455322
    10. ' a' → logprob: -4.448008060455322

Token 67: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -3.128163257315464e-07
    2. 'ikki' → logprob: -16.375
    3. 'IKI' → logprob: -16.5
    4. 'Iki' → logprob: -17.5
    5. 'ik' → logprob: -18.0
    6. 'iku' → logprob: -18.375
    7. 'i' → logprob: -18.5
    8. 'ikai' → logprob: -19.5
    9. 'uki' → logprob: -19.625
    10. 'ики' → logprob: -19.625

Token 68: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.518617570400238
    2. ' +' → logprob: -1.0186176300048828
    3. ' if' → logprob: -4.143617630004883
    4. ' //' → logprob: -4.643617630004883
    5. ' -' → logprob: -4.643617630004883
    6. '-' → logprob: -5.393617630004883
    7. '//' → logprob: -6.393617630004883
    8. ' ' → logprob: -7.643617630004883
    9. 'if' → logprob: -7.768617630004883
    10. '>>' → logprob: -7.893617630004883

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.30919137597084045
    2. ' ' → logprob: -1.684191346168518
    3. ' j' → logprob: -3.6841914653778076
    4. 'j' → logprob: -4.0591912269592285
    5. ' a' → logprob: -4.4341912269592285
    6. 'a' → logprob: -4.9341912269592285
    7. ' (' → logprob: -5.0591912269592285
    8. ' n' → logprob: -5.5591912269592285
    9. 'n' → logprob: -6.6841912269592285
    10. '(' → logprob: -6.8091912269592285

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0763172134757042
    2. 'a' → logprob: -3.201317310333252
    3. 'n' → logprob: -4.201317310333252
    4. 'j' → logprob: -5.326317310333252
    5. ' ' → logprob: -6.076317310333252
    6. '(a' → logprob: -6.451317310333252
    7. 'max' → logprob: -6.576317310333252
    8. '2' → logprob: -6.701317310333252
    9. '(n' → logprob: -6.951317310333252
    10. 'len' → logprob: -7.326317310333252

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001041978714056313
    2. ')//' → logprob: -7.626041889190674
    3. ')%' → logprob: -7.626041889190674
    4. ' )' → logprob: -9.876042366027832
    5. '%' → logprob: -12.126042366027832
    6. '//' → logprob: -12.626042366027832
    7. ')>>' → logprob: -13.876042366027832
    8. ')
' → logprob: -14.001042366027832
    9. ' if' → logprob: -14.126042366027832
    10. '   ' → logprob: -14.626042366027832

Token 72: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6012769341468811
    2. '%' → logprob: -0.8512769341468811
    3. ' //' → logprob: -4.476276874542236
    4. ')' → logprob: -4.726276874542236
    5. ' if' → logprob: -5.851276874542236
    6. '//' → logprob: -7.226276874542236
    7. ' ' → logprob: -8.226277351379395
    8. '<|end|>' → logprob: -8.601277351379395
    9. '%n' → logprob: -8.851277351379395
    10. ')%' → logprob: -9.351277351379395

Token 73: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0701967477798462
    2. ' n' → logprob: -1.1951967477798462
    3. '7' → logprob: -1.8201967477798462
    4. 'n' → logprob: -2.9451966285705566
    5. '10' → logprob: -3.1951966285705566
    6. '32' → logprob: -3.3201966285705566
    7. '4' → logprob: -4.570196628570557
    8. '3' → logprob: -4.820196628570557
    9. '8' → logprob: -4.945196628570557
    10. '6' → logprob: -5.070196628570557

Token 74: '5' (ID: 20)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9284973740577698
    2. '5' → logprob: -1.803497314453125
    3. '7' → logprob: -2.178497314453125
    4. '3' → logprob: -2.178497314453125
    5. '10' → logprob: -2.928497314453125
    6. '4' → logprob: -3.178497314453125
    7. '9' → logprob: -3.303497314453125
    8. '11' → logprob: -4.428497314453125
    9. 'j' → logprob: -4.553497314453125
    10. '2' → logprob: -4.678497314453125

Token 75: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6365930438041687
    2. '+' → logprob: -0.7615930438041687
    3. '<|end|>' → logprob: -5.761592864990234
    4. ' ' → logprob: -7.886592864990234
    5. ')' → logprob: -9.261592864990234
    6. '
' → logprob: -9.511592864990234
    7. '<|end|>' → logprob: -9.511592864990234
    8. '   ' → logprob: -10.386592864990234
    9. '%' → logprob: -10.636592864990234
    10. '    ' → logprob: -10.761592864990234

Token 76: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7596038579940796
    2. '<|end|>' → logprob: -0.7596038579940796
    3. ' +' → logprob: -2.884603977203369
    4. ' or' → logprob: -5.259603977203369
    5. ' if' → logprob: -6.509603977203369
    6. '<|end|>' → logprob: -6.759603977203369
    7. ')' → logprob: -9.009603500366211
    8. ' and' → logprob: -9.759603500366211
    9. 'if' → logprob: -9.759603500366211
    10. '0' → logprob: -9.884603500366211

Token 77: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.100704550743103
    2. '<|end|>' → logprob: -1.350704550743103
    3. ' +' → logprob: -1.475704550743103
    4. ' or' → logprob: -2.4757046699523926
    5. ' if' → logprob: -2.4757046699523926
    6. 'if' (adapté à ' if') → logprob: -5.350704669952393
    7. '<|end|>' → logprob: -6.100704669952393
    8. ' ' → logprob: -6.725704669952393
    9. '
' → logprob: -6.975704669952393
    10. ' and' → logprob: -7.100704669952393

Token 78: ' ich' (ID: 4629)
  Prédit: ' ich'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ich' → logprob: -0.04413861036300659
    2. 'ich' → logprob: -3.1691386699676514
    3. ' ' → logprob: -7.294138431549072
    4. ' not' → logprob: -8.04413890838623
    5. '   ' → logprob: -10.79413890838623
    6. 'ic' → logprob: -10.79413890838623
    7. ' ih' → logprob: -10.91913890838623
    8. '  ' → logprob: -11.16913890838623
    9. ' hak' → logprob: -11.29413890838623
    10. '	' → logprob: -11.91913890838623

Token 79: 'iro' (ID: 4509)
  Prédit: 'iro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iro' → logprob: -0.0005906827282160521
    2. 'ro' → logprob: -7.500590801239014
    3. 'иро' → logprob: -11.125590324401855
    4. 'ir' → logprob: -11.625590324401855
    5. ' iro' → logprob: -12.250590324401855
    6. '   ' → logprob: -13.375590324401855
    7. 'i' → logprob: -13.750590324401855
    8. 'uro' → logprob: -13.750590324401855
    9. '```' → logprob: -14.500590324401855
    10. ' ' → logprob: -14.750590324401855

Token 80: '_take' (ID: 197790)
  Prédit: '_take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_take' → logprob: -0.0023000126238912344
    2. '_' → logprob: -6.627299785614014
    3. ' _' → logprob: -7.252299785614014
    4. '_t' → logprob: -9.252300262451172
    5. ''s' → logprob: -10.502300262451172
    6. ' ' → logprob: -10.752300262451172
    7. '_taken' → logprob: -10.877300262451172
    8. '   ' → logprob: -11.252300262451172
    9. 'Take' → logprob: -11.627300262451172
    10. '_get' → logprob: -11.752300262451172

Token 81: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1137239933013916
    2. '==' → logprob: -2.2387239933013916
    3. '+' → logprob: -8.113723754882812
    4. ' +' → logprob: -8.613723754882812
    5. ' ' → logprob: -8.863723754882812
    6. ' <' → logprob: -8.863723754882812
    7. ' !=' → logprob: -10.488723754882812
    8. '=' → logprob: -10.738723754882812
    9. '<' → logprob: -10.863723754882812
    10. ' >' → logprob: -10.988723754882812

Token 82: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07889176905155182
    2. '0' → logprob: -2.5788917541503906
    3. '1' → logprob: -14.57889175415039
    4. '<|end|>' → logprob: -15.01639175415039
    5. '  ' → logprob: -15.57889175415039
    6. ' None' → logprob: -16.01639175415039
    7. ' ' → logprob: -16.01639175415039
    8. '2' → logprob: -16.26639175415039
    9. ' 
' → logprob: -16.57889175415039
    10. '4' → logprob: -16.76639175415039

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048592593520879745
    2. ' ' → logprob: -3.0485925674438477
    3. '1' → logprob: -13.048592567443848
    4. '4' → logprob: -15.111092567443848
    5. '2' → logprob: -15.548592567443848
    6. '	' → logprob: -15.611092567443848
    7. '3' → logprob: -15.736092567443848
    8. '=' → logprob: -15.798592567443848
    9. ' ' → logprob: -16.048593521118164
    10. ' -' → logprob: -16.048593521118164

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004026633687317371
    2. ':
' → logprob: -5.879026412963867
    3. '<|end|>' → logprob: -7.504026412963867
    4. ' or' → logprob: -7.754026412963867
    5. ' :' → logprob: -9.129026412963867
    6. ' and' → logprob: -9.754026412963867
    7. '<|end|>' → logprob: -10.004026412963867
    8. '):' → logprob: -12.379026412963867
    9. 'and' → logprob: -12.379026412963867
    10. ':

' → logprob: -12.629026412963867

Token 85: '           ' (ID: 352)
  Prédit: 'ich'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ich' → logprob: -0.5885934233665466
    2. ' ich' → logprob: -1.0885934829711914
    3. '       ' → logprob: -3.3385934829711914
    4. '   ' → logprob: -3.5885934829711914
    5. ':' → logprob: -3.7135934829711914
    6. '1' → logprob: -5.088593482971191
    7. 'ic' → logprob: -5.213593482971191
    8. '5' → logprob: -5.713593482971191
    9. ':
' → logprob: -6.963593482971191
    10. '<|end|>' → logprob: -7.463593482971191

Token 86: ' ich' (ID: 4629)
  Prédit: ' ich'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ich' → logprob: -0.17157872021198273
    2. 'ich' (adapté à ' ich') → logprob: -1.9215787649154663
    3. '   ' → logprob: -4.921578884124756
    4. '1' → logprob: -6.046578884124756
    5. '4' → logprob: -7.296578884124756
    6. '5' → logprob: -7.671578884124756
    7. 'ic' → logprob: -9.171578407287598
    8. '3' → logprob: -9.671578407287598
    9. ' ' → logprob: -9.671578407287598
    10. '    ' → logprob: -9.796578407287598

Token 87: 'iro' (ID: 4509)
  Prédit: 'iro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iro' → logprob: -0.0011998742120340466
    2. 'ro' → logprob: -6.751199722290039
    3. 'ir' → logprob: -11.126199722290039
    4. 'i' → logprob: -12.126199722290039
    5. 'иро' → logprob: -12.376199722290039
    6. ' iro' → logprob: -13.001199722290039
    7. '_ro' → logprob: -13.376199722290039
    8. '_' → logprob: -14.376199722290039
    9. 'r' → logprob: -16.12619972229004
    10. '   ' → logprob: -16.12619972229004

Token 88: '_take' (ID: 197790)
  Prédit: '_take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_take' → logprob: -1.8670179997570813e-05
    2. 'take' → logprob: -11.250019073486328
    3. '_t' → logprob: -13.375019073486328
    4. 'Take' → logprob: -14.125019073486328
    5. '_' → logprob: -14.125019073486328
    6. 's' → logprob: -14.375019073486328
    7. '_taken' → logprob: -14.375019073486328
    8. '=' → logprob: -14.625019073486328
    9. ' =' → logprob: -16.000019073486328
    10. '_pick' → logprob: -16.625019073486328

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132714629173279
    2. '=' → logprob: -1.3132715225219727
    3. '+=' → logprob: -12.188271522521973
    4. ' +=' → logprob: -12.438271522521973
    5. ' ' → logprob: -15.188271522521973
    6. '1' → logprob: -16.313270568847656
    7. '<|end|>' → logprob: -16.688270568847656
    8. 's' → logprob: -17.313270568847656
    9. '==' → logprob: -17.688270568847656
    10. '＝' → logprob: -17.813270568847656

Token 90: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6588365435600281
    2. '1' → logprob: -0.7838365435600281
    3. ' ' → logprob: -3.658836603164673
    4. '5' → logprob: -9.033836364746094
    5. 'min' → logprob: -12.908836364746094
    6. '2' → logprob: -13.533836364746094
    7. '' → logprob: -13.596336364746094
    8. '   ' → logprob: -14.346336364746094
    9. '

' → logprob: -14.533836364746094
    10. '-' → logprob: -14.533836364746094

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5762051939964294
    2. '4' → logprob: -0.8262051939964294
    3. '5' → logprob: -8.326205253601074
    4. ' ' → logprob: -11.951205253601074
    5. '3' → logprob: -12.326205253601074
    6. '2' → logprob: -12.326205253601074
    7. '   ' → logprob: -13.701205253601074
    8. '(' → logprob: -14.201205253601074
    9. '

' → logprob: -14.201205253601074
    10. '```' → logprob: -14.263705253601074

Token 92: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11507779359817505
    2. '<|end|>' → logprob: -2.4900777339935303
    3. '
' → logprob: -3.8650777339935303
    4. '<|end|>' → logprob: -5.990077972412109
    5. 'elif' → logprob: -7.115077972412109
    6. '   ' → logprob: -7.615077972412109
    7. ')' → logprob: -8.86507797241211
    8. ' if' → logprob: -9.36507797241211
    9. ' elif' → logprob: -9.49007797241211
    10. '        ' → logprob: -9.49007797241211

Token 93: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9208400845527649
    2. '       ' → logprob: -1.0458400249481201
    3. '<|end|>' → logprob: -1.4208400249481201
    4. '<|end|>' → logprob: -5.670840263366699
    5. 'elif' → logprob: -6.295840263366699
    6. ' if' → logprob: -7.545840263366699
    7. '   ' → logprob: -7.545840263366699
    8. '        
' → logprob: -7.670840263366699
    9. '
' → logprob: -8.2958402633667
    10. ' elif' → logprob: -8.5458402633667

Token 94: ' hak' (ID: 24396)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1734836101531982
    2. 'if' → logprob: -1.2984836101531982
    3. '   ' → logprob: -2.1734836101531982
    4. '       ' → logprob: -2.4234836101531982
    5. '<|end|>' → logprob: -2.7984836101531982
    6. '
' → logprob: -2.9234836101531982
    7. 'elif' → logprob: -3.9234836101531982
    8. 'hak' (adapté à ' hak') → logprob: -3.9234836101531982
    9. ' hak' → logprob: -4.423483848571777
    10. '<|end|>' → logprob: -4.548483848571777

Token 95: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -1.0564331205387134e-05
    2. 'ik' → logprob: -12.00001049041748
    3. 'i' → logprob: -13.37501049041748
    4. ' iki' → logprob: -13.50001049041748
    5. 'Iki' → logprob: -14.50001049041748
    6. 'IKI' → logprob: -15.00001049041748
    7. 'ikki' → logprob: -15.25001049041748
    8. '  ' → logprob: -16.500011444091797
    9. 'ikip' → logprob: -16.625011444091797
    10. 'uki' → logprob: -16.875011444091797

Token 96: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.0005394508480094373
    2. '-=' → logprob: -7.875539302825928
    3. ' =' → logprob: -9.125539779663086
    4. '-' → logprob: -10.750539779663086
    5. '=' → logprob: -10.750539779663086
    6. ' -' → logprob: -12.375539779663086
    7. ' +=' → logprob: -13.250539779663086
    8. ' ' → logprob: -13.875539779663086
    9. '    ' → logprob: -15.000539779663086
    10. '<|end|>' → logprob: -16.750539779663086

Token 97: ' ich' (ID: 4629)
  Prédit: ' ich'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ich' → logprob: -0.22548454999923706
    2. 'ich' → logprob: -1.6004846096038818
    3. ' ' → logprob: -10.350484848022461
    4. 'ic' → logprob: -11.100484848022461
    5. 'icha' → logprob: -12.725484848022461
    6. ' ' → logprob: -12.850484848022461
    7. ' ichi' → logprob: -13.100484848022461
    8. 'icho' → logprob: -13.225484848022461
    9. ' Ich' → logprob: -13.725484848022461
    10. ' ik' → logprob: -13.850484848022461

Token 98: 'iro' (ID: 4509)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.001386189484037459
    2. 'iro' → logprob: -6.6263861656188965
    3. 'roi' → logprob: -10.751386642456055
    4. 'ро' → logprob: -11.501386642456055
    5. 'roku' → logprob: -11.626386642456055
    6. '_ro' → logprob: -12.126386642456055
    7. 'roach' → logprob: -13.126386642456055
    8. 'rok' → logprob: -13.251386642456055
    9. 'r' → logprob: -13.626386642456055
    10. 'roh' → logprob: -13.876386642456055

Token 99: '_take' (ID: 197790)
  Prédit: '_take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_take' → logprob: -1.0802738870552275e-05
    2. 'take' → logprob: -11.50001049041748
    3. '_taken' → logprob: -15.62501049041748
    4. 'Take' → logprob: -15.75001049041748
    5. 'tak' → logprob: -16.125011444091797
    6. '_t' → logprob: -16.500011444091797
    7. '_' → logprob: -16.625011444091797
    8. ' _' → logprob: -17.125011444091797
    9. ' take' → logprob: -18.125011444091797
    10. '   ' → logprob: -19.000011444091797

Token 100: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7415294647216797
    2. '   ' → logprob: -1.3665294647216797
    3. '<|end|>' → logprob: -1.4915294647216797
    4. '    
' → logprob: -3.6165294647216797
    5. ' 
' → logprob: -5.61652946472168
    6. '  
' → logprob: -5.99152946472168
    7. '\n' → logprob: -6.11652946472168
    8. '<|end|>' → logprob: -6.49152946472168
    9. '       ' → logprob: -6.86652946472168
    10. ' if' → logprob: -6.86652946472168

Token 101: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' print' (ID: 2123)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.42490553855895996
    2. '   ' → logprob: -2.04990553855896
    3. 'if' → logprob: -2.54990553855896
    4. 'print' (adapté à ' print') → logprob: -2.92490553855896
    5. 'j' → logprob: -3.17490553855896
    6. ' print' → logprob: -3.79990553855896
    7. ' j' → logprob: -4.674905776977539
    8. '       ' → logprob: -5.924905776977539
    9. ' ' → logprob: -6.299905776977539
    10. '    ' → logprob: -6.424905776977539

Token 103: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21280387043952942
    2. '('' → logprob: -2.462803840637207
    3. '("("' → logprob: -2.587803840637207
    4. '(f' → logprob: -4.212803840637207
    5. '("' → logprob: -4.712803840637207
    6. '(h' → logprob: -5.587803840637207
    7. '(a' → logprob: -5.962803840637207
    8. '()' → logprob: -8.212803840637207
    9. '(i' → logprob: -8.212803840637207
    10. '((' → logprob: -8.462803840637207

Token 104: 'ak' (ID: 422)
  Prédit: 'ak'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ak' → logprob: -0.0024826733861118555
    2. 'aki' → logprob: -6.752482891082764
    3. 'iro' → logprob: -7.877482891082764
    4. 'a' → logprob: -8.127482414245605
    5. '_' → logprob: -9.502482414245605
    6. 'i' → logprob: -9.752482414245605
    7. 'ach' → logprob: -10.002482414245605
    8. 'aj' → logprob: -10.127482414245605
    9. 'ich' → logprob: -10.252482414245605
    10. 'ako' → logprob: -10.252482414245605

Token 105: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -3.292907877039397e-06
    2. 'i' → logprob: -13.00000286102295
    3. 'ki' → logprob: -14.62500286102295
    4. 'uki' → logprob: -15.75000286102295
    5. 'aki' → logprob: -15.87500286102295
    6. ' iki' → logprob: -16.750003814697266
    7. '_' → logprob: -17.125003814697266
    8. 'iku' → logprob: -17.375003814697266
    9. '```' → logprob: -17.375003814697266
    10. 'oki' → logprob: -17.500003814697266

Token 106: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012644199654459953
    2. ',' → logprob: -4.387644290924072
    3. ' )' → logprob: -9.262643814086914
    4. ')
' → logprob: -11.637643814086914
    5. '   ' → logprob: -12.012643814086914
    6. '+' → logprob: -12.762643814086914
    7. ',)' → logprob: -12.887643814086914
    8. ',end' → logprob: -13.012643814086914
    9. '))' → logprob: -13.137643814086914
    10. ')}' → logprob: -13.262643814086914

Token 107: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' hak' (ID: 24396)
  Prédit: ' hak'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hak' → logprob: -0.018151583150029182
    2. 'hak' → logprob: -4.018151760101318
    3. ' hakk' → logprob: -13.64315128326416
    4. ' huk' → logprob: -16.268152236938477
    5. 'h' → logprob: -16.768152236938477
    6. '	h' → logprob: -16.768152236938477
    7. ' haki' → logprob: -16.768152236938477
    8. 'n' → logprob: -16.893152236938477
    9. '(h' → logprob: -17.143152236938477
    10. ' ' → logprob: -17.268152236938477

Token 110: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -3.128163257315464e-07
    2. 'ikki' → logprob: -16.0
    3. 'aki' → logprob: -16.5
    4. 'i' → logprob: -17.0
    5. 'uki' → logprob: -17.25
    6. 'ik' → logprob: -17.875
    7. 'IKI' → logprob: -18.625
    8. 'ici' → logprob: -19.25
    9. 'icki' → logprob: -19.625
    10. ' iki' → logprob: -19.875

Token 111: ' ==' (ID: 951)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.30541789531707764
    2. '==' → logprob: -1.5554178953170776
    3. ' <=' → logprob: -3.180418014526367
    4. ' ==' → logprob: -4.555418014526367
    5. '<' → logprob: -12.930418014526367
    6. '=' → logprob: -14.055418014526367
    7. ' ' → logprob: -14.680418014526367
    8. '>' → logprob: -15.430418014526367
    9. ' ' → logprob: -15.680418014526367
    10. ')<=' → logprob: -15.930418014526367

Token 112: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519296407699585
    2. ' ' → logprob: -1.5019296407699585
    3. '   ' → logprob: -15.37692928314209
    4. ' ' → logprob: -15.87692928314209
    5. '  ' → logprob: -16.001930236816406
    6. '    ' → logprob: -17.439430236816406
    7. '```' → logprob: -17.626930236816406
    8. '00' → logprob: -17.814430236816406
    9. '1' → logprob: -17.939430236816406
    10. '<|end|>' → logprob: -18.376930236816406

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.750139236450195
    4. '    ' → logprob: -18.125139236450195
    5. '  ' → logprob: -18.187639236450195
    6. '```' → logprob: -18.500139236450195
    7. '۰' → logprob: -19.125139236450195
    8. '00' → logprob: -19.250139236450195
    9. ' ' → logprob: -19.500139236450195
    10. '000' → logprob: -19.687639236450195

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021035063546150923
    2. ':
' → logprob: -6.377103328704834
    3. '       ' → logprob: -8.252103805541992
    4. '           ' → logprob: -9.002103805541992
    5. '   ' → logprob: -11.377103805541992
    6. ',' → logprob: -12.752103805541992
    7. ' or' → logprob: -13.627103805541992
    8. ' and' → logprob: -14.752103805541992
    9. ':

' → logprob: -14.877103805541992
    10. '.' → logprob: -15.252103805541992

Token 115: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009232042357325554
    2. '       ' → logprob: -4.759232044219971
    3. '   ' → logprob: -8.509231567382812
    4. 'break' → logprob: -9.134231567382812
    5. '	       ' → logprob: -9.384231567382812
    6. '```' → logprob: -9.384231567382812
    7. '	   ' → logprob: -10.384231567382812
    8. '               ' → logprob: -10.759231567382812
    9. '	break' → logprob: -10.884231567382812
    10. '		' → logprob: -11.009231567382812

Token 116: ' break' (ID: 2338)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23976537585258484
    2. 'break' (adapté à ' break') → logprob: -2.1147654056549072
    3. '           ' → logprob: -3.3647654056549072
    4. ' print' → logprob: -3.6147654056549072
    5. ' break' → logprob: -3.9897654056549072
    6. '   ' → logprob: -4.864765167236328
    7. '       ' → logprob: -5.489765167236328
    8. 'continue' → logprob: -7.739765167236328
    9. ' continue' → logprob: -10.239765167236328
    10. 'j' → logprob: -10.239765167236328

Token 117: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037470847368240356
    2. '   ' → logprob: -3.662470817565918
    3. 'j' → logprob: -5.037470817565918
    4. '        
' → logprob: -6.037470817565918
    5. '    ' → logprob: -7.787470817565918
    6. '    
' → logprob: -8.037470817565918
    7. '        ' → logprob: -8.412470817565918
    8. '<|end|>' → logprob: -8.662470817565918
    9. '           ' → logprob: -9.287470817565918
    10. '[' → logprob: -9.537470817565918

Token 119: ' #' (ID: 1069)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.43039119243621826
    2. '       ' → logprob: -1.6803911924362183
    3. '   ' → logprob: -2.680391311645508
    4. '#' (adapté à ' #') → logprob: -4.055391311645508
    5. 'ai' → logprob: -4.055391311645508
    6. 'k' → logprob: -4.305391311645508
    7. 'if' → logprob: -4.805391311645508
    8. 'a' → logprob: -4.930391311645508
    9. 'm' → logprob: -6.180391311645508
    10. 'hak' → logprob: -6.430391311645508

Token 120: ' J' (ID: 643)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.14122924208641052
    2. 'jun' → logprob: -3.2662291526794434
    3. '#' → logprob: -4.016229152679443
    4. 'juk' → logprob: -4.516229152679443
    5. 'if' → logprob: -5.141229152679443
    6. 'ji' → logprob: -5.141229152679443
    7. 'jou' → logprob: -5.391229152679443
    8. 'jik' → logprob: -5.391229152679443
    9. 'joker' → logprob: -5.766229152679443
    10. 'john' → logprob: -5.766229152679443

Token 121: 'iro' (ID: 4509)
  Prédit: '_seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_seq' → logprob: -0.4740700423717499
    2. 'seq' → logprob: -1.0990700721740723
    3. 'ose' → logprob: -5.349070072174072
    4. '#' → logprob: -5.474070072174072
    5. 'os' → logprob: -5.599070072174072
    6. 'sequence' → logprob: -5.849070072174072
    7. 's' → logprob: -5.849070072174072
    8. 'while' → logprob: -6.099070072174072
    9. '_sequence' → logprob: -6.349070072174072
    10. 'ot' → logprob: -6.599070072174072

Token 122: ''s' (ID: 885)
  Prédit: '_take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_take' → logprob: -0.05217646062374115
    2. 'take' → logprob: -3.3021764755249023
    3. '_' → logprob: -4.427176475524902
    4. ''s' → logprob: -7.427176475524902
    5. 'j' → logprob: -8.552176475524902
    6. 'Take' → logprob: -8.802176475524902
    7. 's' → logprob: -8.927176475524902
    8. 't' → logprob: -8.927176475524902
    9. '   ' → logprob: -9.052176475524902
    10. 'tak' → logprob: -9.302176475524902

Token 123: ' turn' (ID: 3716)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.5566043853759766
    2. 'turn' → logprob: -1.1816043853759766
    3. '_take' → logprob: -2.5566043853759766
    4. 'tak' → logprob: -4.556604385375977
    5. 'hak' → logprob: -4.556604385375977
    6. ' turn' → logprob: -4.806604385375977
    7. '_turn' → logprob: -5.181604385375977
    8. ' take' → logprob: -6.306604385375977
    9. 'while' → logprob: -6.556604385375977
    10. 'move' → logprob: -7.306604385375977

Token 124: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11600811034440994
    2. 'j' → logprob: -2.8660080432891846
    3. '
' → logprob: -3.9910080432891846
    4. '<|end|>' → logprob: -4.491008281707764
    5. '        
' → logprob: -4.991008281707764
    6. ',' → logprob: -5.741008281707764
    7. '<|end|>' → logprob: -6.366008281707764
    8. ' hak' → logprob: -6.491008281707764
    9. '```' → logprob: -6.866008281707764
    10. ' if' → logprob: -7.491008281707764

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24634061753749847
    2. 'j' → logprob: -1.7463406324386597
    3. ' j' → logprob: -4.371340751647949
    4. ' hak' → logprob: -4.746340751647949
    5. 'hak' → logprob: -5.371340751647949
    6. 'ji' → logprob: -6.246340751647949
    7. '        
' → logprob: -6.246340751647949
    8. '```' → logprob: -6.371340751647949
    9. '   ' → logprob: -6.621340751647949
    10. ' if' → logprob: -6.746340751647949

Token 126: ' jiro' (ID: 182701)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4708568751811981
    2. 'hak' → logprob: -2.0958569049835205
    3. 'ji' → logprob: -2.0958569049835205
    4. 'jik' → logprob: -3.3458569049835205
    5. 'if' → logprob: -3.4708569049835205
    6. 'take' → logprob: -3.5958569049835205
    7. 'while' → logprob: -4.220856666564941
    8. 'print' → logprob: -5.470856666564941
    9. 'hiro' → logprob: -6.470856666564941
    10. 'tak' → logprob: -6.720856666564941

Token 127: '_take' (ID: 197790)
  Prédit: '_take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_take' → logprob: -5.7530574849806726e-05
    2. '_t' → logprob: -10.750057220458984
    3. '_taken' → logprob: -12.000057220458984
    4. ' _' → logprob: -12.250057220458984
    5. 'take' → logprob: -12.500057220458984
    6. '_keep' → logprob: -12.750057220458984
    7. '_' → logprob: -13.125057220458984
    8. 'Take' → logprob: -13.250057220458984
    9. '_use' → logprob: -13.625057220458984
    10. '_get' → logprob: -13.875057220458984

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246755823493004
    2. '=' → logprob: -3.7732467651367188
    3. ' ' → logprob: -13.898246765136719
    4. ',' → logprob: -16.14824676513672
    5. ')' → logprob: -16.64824676513672
    6. ' ' → logprob: -16.89824676513672
    7. ' +=' → logprob: -16.89824676513672
    8. '   ' → logprob: -17.39824676513672
    9. '=int' → logprob: -17.52324676513672
    10. '＝' → logprob: -17.89824676513672

Token 129: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002603245200589299
    2. '(a' → logprob: -7.127603054046631
    3. '5' → logprob: -7.877603054046631
    4. 'hak' → logprob: -7.877603054046631
    5. 'min' → logprob: -8.002603530883789
    6. 'j' → logprob: -8.752603530883789
    7. '32' → logprob: -9.377603530883789
    8. 'n' → logprob: -9.377603530883789
    9. '1' → logprob: -9.502603530883789
    10. ' a' → logprob: -9.752603530883789

Token 130: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.145118848304264e-05
    2. 'j' → logprob: -10.250051498413086
    3. '[' → logprob: -11.250051498413086
    4. '[a' → logprob: -14.000051498413086
    5. '[n' → logprob: -14.375051498413086
    6. ' [' → logprob: -14.750051498413086
    7. '[
' → logprob: -15.000051498413086
    8. '   ' → logprob: -15.500051498413086
    9. '[i' → logprob: -16.250051498413086
    10. 'a' → logprob: -16.375051498413086

Token 131: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -0.0004342453321442008
    2. 'seq' → logprob: -7.750434398651123
    3. 'j' → logprob: -13.750433921813965
    4. '[j' → logprob: -14.250433921813965
    5. '[' → logprob: -14.500433921813965
    6. '_SEQ' → logprob: -14.875433921813965
    7. 'a' → logprob: -15.375433921813965
    8. 's' → logprob: -15.625433921813965
    9. 'Seq' → logprob: -16.25043487548828
    10. '   ' → logprob: -16.37543487548828

Token 132: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0014276175061240792
    2. 'x' → logprob: -7.25142765045166
    3. 'idx' → logprob: -7.25142765045166
    4. 'dx' → logprob: -12.12642765045166
    5. 'ex' → logprob: -13.37642765045166
    6. 'Idx' → logprob: -14.37642765045166
    7. '_IDX' → logprob: -15.87642765045166
    8. 'd' → logprob: -16.251426696777344
    9. '	idx' → logprob: -16.251426696777344
    10. 'dex' → logprob: -16.876426696777344

Token 133: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002837207168340683
    2. '])' → logprob: -6.377837181091309
    3. ' ]' → logprob: -7.502837181091309
    4. ']%' → logprob: -8.002837181091309
    5. '%' → logprob: -8.752837181091309
    6. ']
' → logprob: -10.127837181091309
    7. '[' → logprob: -11.002837181091309
    8. ' %' → logprob: -11.502837181091309
    9. ')' → logprob: -12.002837181091309
    10. ')]' → logprob: -12.127837181091309

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01615636609494686
    2. ' hak' → logprob: -4.641156196594238
    3. '
' → logprob: -5.641156196594238
    4. '<|end|>' → logprob: -6.516156196594238
    5. '        
' → logprob: -8.016156196594238
    6. '   ' → logprob: -8.141156196594238
    7. 'hak' → logprob: -8.266156196594238
    8. ' 
' → logprob: -8.766156196594238
    9. '' → logprob: -10.016156196594238
    10. ' if' → logprob: -10.391156196594238

Token 135: ' j' (ID: 441)
  Prédit: ' hak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hak' → logprob: -0.08939087390899658
    2. 'hak' → logprob: -2.839390754699707
    3. '       ' → logprob: -4.714390754699707
    4. 'j' (adapté à ' j') → logprob: -4.964390754699707
    5. ' if' → logprob: -5.214390754699707
    6. ' j' → logprob: -6.589390754699707
    7. 'if' → logprob: -6.839390754699707
    8. ' 
' → logprob: -6.964390754699707
    9. '   ' → logprob: -7.339390754699707
    10. '    
' → logprob: -7.964390754699707

Token 136: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -7.24310302757658e-05
    2. 'seq' → logprob: -10.125072479248047
    3. '_' → logprob: -10.625072479248047
    4. '_SEQ' → logprob: -12.375072479248047
    5. 'j' → logprob: -14.000072479248047
    6. '_idx' → logprob: -14.250072479248047
    7. 'if' → logprob: -14.750072479248047
    8. 'Seq' → logprob: -15.000072479248047
    9. '_se' → logprob: -15.750072479248047
    10. 'i' → logprob: -15.750072479248047

Token 137: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00020926215802319348
    2. 'idx' → logprob: -8.625208854675293
    3. 'x' → logprob: -10.875208854675293
    4. 'dx' → logprob: -12.000208854675293
    5. 'ex' → logprob: -12.500208854675293
    6. 'Idx' → logprob: -14.750208854675293
    7. 'xd' → logprob: -16.25020980834961
    8. '_ix' → logprob: -16.75020980834961
    9. '_IDX' → logprob: -16.87520980834961
    10. '_dx' → logprob: -17.00020980834961

Token 138: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04690420627593994
    2. '+=' → logprob: -3.1719040870666504
    3. ' =' → logprob: -6.04690408706665
    4. '=' → logprob: -6.79690408706665
    5. ' %=' → logprob: -8.046904563903809
    6. '%=' → logprob: -10.296904563903809
    7. '+' → logprob: -10.296904563903809
    8. ' ' → logprob: -11.046904563903809
    9. '%' → logprob: -11.796904563903809
    10. ' +' → logprob: -13.921904563903809

Token 139: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.008623674511909485
    2. ' (' → logprob: -4.7586236000061035
    3. '   ' → logprob: -12.758624076843262
    4. '(js' → logprob: -13.383624076843262
    5. '(' → logprob: -13.508624076843262
    6. '(next' → logprob: -14.383624076843262
    7. '(k' → logprob: -14.633624076843262
    8. '(n' → logprob: -14.758624076843262
    9. '(J' → logprob: -15.258624076843262
    10. ' ' → logprob: -15.383624076843262

Token 140: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013951188884675503
    2. '(j' → logprob: -6.626395225524902
    3. ' j' → logprob: -9.626395225524902
    4. '   ' → logprob: -13.626395225524902
    5. '	j' → logprob: -13.876395225524902
    6. ' (' → logprob: -14.501395225524902
    7. '_j' → logprob: -15.501395225524902
    8. '(' → logprob: -15.876395225524902
    9. '[j' → logprob: -17.001394271850586
    10. '$j' → logprob: -17.001394271850586

Token 141: '_seq' (ID: 34260)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1326824575662613
    2. '_seq' → logprob: -2.1326825618743896
    3. '_j' → logprob: -5.7576823234558105
    4. 'seq' → logprob: -6.6326823234558105
    5. '_idx' → logprob: -8.007682800292969
    6. '+' → logprob: -8.007682800292969
    7. '(j' → logprob: -8.132682800292969
    8. '+j' → logprob: -9.382682800292969
    9. ' j' → logprob: -9.882682800292969
    10. 'x' → logprob: -10.132682800292969

Token 142: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -9.114600834436715e-05
    2. 'idx' → logprob: -10.000091552734375
    3. 'x' → logprob: -10.125091552734375
    4. 'Idx' → logprob: -12.750091552734375
    5. '_seq' → logprob: -13.500091552734375
    6. 'ex' → logprob: -14.500091552734375
    7. 'dx' → logprob: -15.250091552734375
    8. '_IDX' → logprob: -15.500091552734375
    9. '+' → logprob: -16.125091552734375
    10. '_x' → logprob: -16.500091552734375

Token 143: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2014138251543045
    2. ' +' → logprob: -1.701413869857788
    3. '+j' → logprob: -14.826414108276367
    4. ' ' → logprob: -16.076414108276367
    5. ' ' → logprob: -16.951414108276367
    6. ' plus' → logprob: -17.201414108276367
    7. '＋' → logprob: -17.576414108276367
    8. '1' → logprob: -18.326414108276367
    9. '+)' → logprob: -18.701414108276367
    10. ')' → logprob: -18.826414108276367

Token 144: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.250009536743164
    4. '<|end|>' → logprob: -17.250009536743164
    5. ')' → logprob: -17.875009536743164
    6. '```' → logprob: -19.312509536743164
    7. '  ' → logprob: -19.687509536743164
    8. '１' → logprob: -20.312509536743164
    9. '۱' → logprob: -20.562509536743164
    10. '       ' → logprob: -20.562509536743164

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.1250057220459
    4. ')' → logprob: -18.6250057220459
    5. '```' → logprob: -18.6250057220459
    6. '<|end|>' → logprob: -19.3125057220459
    7. '１' → logprob: -19.3750057220459
    8. '  ' → logprob: -19.5000057220459
    9. '۱' → logprob: -19.9375057220459
    10. 'len' → logprob: -20.3750057220459

Token 146: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.958325295476243e-05
    2. ')%' → logprob: -9.750079154968262
    3. ' )' → logprob: -10.875079154968262
    4. '%' → logprob: -13.125079154968262
    5. ' %' → logprob: -15.500079154968262
    6. '%)' → logprob: -18.000080108642578
    7. ']' → logprob: -18.625080108642578
    8. ')
' → logprob: -18.625080108642578
    9. '<|end|>' → logprob: -18.750080108642578
    10. '),' → logprob: -19.000080108642578

Token 147: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.251975417137146
    2. ' %' → logprob: -1.501975417137146
    3. ' ' → logprob: -10.876975059509277
    4. '%n' → logprob: -11.501975059509277
    5. ')%' → logprob: -12.126975059509277
    6. ')' → logprob: -13.001975059509277
    7. '%i' → logprob: -13.126975059509277
    8. ' ' → logprob: -13.376975059509277
    9. '<|end|>' → logprob: -13.626975059509277
    10. ' hak' → logprob: -13.876975059509277

Token 148: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03812112659215927
    2. 'len' → logprob: -3.288121223449707
    3. ' n' → logprob: -9.788121223449707
    4. ' len' → logprob: -11.538121223449707
    5. '5' → logprob: -11.913121223449707
    6. '   ' → logprob: -13.663121223449707
    7. '4' → logprob: -13.913121223449707
    8. '(n' → logprob: -14.163121223449707
    9. '(len' → logprob: -14.288121223449707
    10. '3' → logprob: -14.663121223449707

Token 149: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00032473751343786716
    2. '   ' → logprob: -8.250325202941895
    3. '
' → logprob: -10.500325202941895
    4. 'hak' → logprob: -11.625325202941895
    5. ' hak' → logprob: -11.875325202941895
    6. '	' → logprob: -12.625325202941895
    7. '        
' → logprob: -12.625325202941895
    8. '           ' → logprob: -13.125325202941895
    9. ' ' → logprob: -13.250325202941895
    10. 'h' → logprob: -13.375325202941895

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034913502633571625
    2. 'hak' → logprob: -3.4099135398864746
    3. ' hak' → logprob: -7.034913539886475
    4. '   ' → logprob: -8.284913063049316
    5. '	' → logprob: -10.159913063049316
    6. 'hok' → logprob: -11.284913063049316
    7. 'huk' → logprob: -11.784913063049316
    8. '           ' → logprob: -12.034913063049316
    9. '        
' → logprob: -12.034913063049316
    10. 'h' → logprob: -12.034913063049316

Token 151: ' if' (ID: 538)
  Prédit: 'hak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hak' → logprob: -0.0002714681322686374
    2. '       ' → logprob: -9.375271797180176
    3. 'if' (adapté à ' if') → logprob: -9.375271797180176
    4. ' hak' → logprob: -9.625271797180176
    5. '   ' → logprob: -11.625271797180176
    6. 'huk' → logprob: -12.125271797180176
    7. 'print' → logprob: -12.375271797180176
    8. 'hik' → logprob: -12.500271797180176
    9. 'hok' → logprob: -12.875271797180176
    10. '```' → logprob: -13.625271797180176

Token 152: ' jiro' (ID: 182701)
  Prédit: 'ji'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ji' → logprob: -0.18544554710388184
    2. ' jiro' → logprob: -2.310445547103882
    3. 'hak' → logprob: -3.560445547103882
    4. 'hiro' → logprob: -3.560445547103882
    5. 'jik' → logprob: -5.935445785522461
    6. 'iro' → logprob: -6.185445785522461
    7. 'j' → logprob: -6.685445785522461
    8. 'jir' → logprob: -6.810445785522461
    9. '(' → logprob: -6.935445785522461
    10. '```' → logprob: -7.310445785522461

Token 153: '_take' (ID: 197790)
  Prédit: '_take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_take' → logprob: -5.466968650580384e-05
    2. 'take' → logprob: -10.500054359436035
    3. 'Take' → logprob: -11.625054359436035
    4. 'tak' → logprob: -12.250054359436035
    5. '_taken' → logprob: -12.500054359436035
    6. '>' → logprob: -13.250054359436035
    7. '_' → logprob: -13.750054359436035
    8. '_keep' → logprob: -14.125054359436035
    9. 'a' → logprob: -14.750054359436035
    10. '_t' → logprob: -15.000054359436035

Token 154: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.350674033164978
    2. ' >' → logprob: -1.225674033164978
    3. '>=' → logprob: -6.475674152374268
    4. ' >=' → logprob: -7.725674152374268
    5. '<=' → logprob: -8.85067367553711
    6. ' <=' → logprob: -10.10067367553711
    7. '<' → logprob: -10.85067367553711
    8. ' ' → logprob: -11.35067367553711
    9. '==' → logprob: -11.72567367553711
    10. ' <' → logprob: -11.85067367553711

Token 155: ' hak' (ID: 24396)
  Prédit: 'hak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hak' → logprob: -0.01104935072362423
    2. ' hak' → logprob: -4.511049270629883
    3. ' ' → logprob: -15.386049270629883
    4. 'hik' → logprob: -15.386049270629883
    5. ' hakk' → logprob: -16.136049270629883
    6. '0' → logprob: -16.136049270629883
    7. 'hok' → logprob: -16.511049270629883
    8. 'huk' → logprob: -16.636049270629883
    9. 'hac' → logprob: -16.636049270629883
    10. '32' → logprob: -16.761049270629883

Token 156: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -1.9361264946837764e-07
    2. 'uki' → logprob: -16.875
    3. 'ikki' → logprob: -17.25
    4. 'IKI' → logprob: -18.25
    5. 'ikin' → logprob: -18.375
    6. 'Iki' → logprob: -18.625
    7. 'ikip' → logprob: -19.0
    8. 'ik' → logprob: -19.125
    9. 'i' → logprob: -19.375
    10. 'iku' → logprob: -19.375

Token 157: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25289368629455566
    2. ':
' → logprob: -1.5028936862945557
    3. '       ' → logprob: -7.752893447875977
    4. '           ' → logprob: -7.752893447875977
    5. ':

' → logprob: -10.502893447875977
    6. '   ' → logprob: -10.877893447875977
    7. '<|end|>' → logprob: -11.002893447875977
    8. '):
' → logprob: -11.252893447875977
    9. '<|end|>' → logprob: -12.252893447875977
    10. ':
' → logprob: -12.377893447875977

Token 158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02735093981027603
    2. '   ' → logprob: -4.902350902557373
    3. 'hiro' → logprob: -4.902350902557373
    4. '       ' → logprob: -5.152350902557373
    5. 'ji' → logprob: -7.277350902557373
    6. 'jo' → logprob: -7.277350902557373
    7. ' jiro' → logprob: -7.777350902557373
    8. '<|end|>' → logprob: -7.902350902557373
    9. 'juk' → logprob: -8.277351379394531
    10. 'je' → logprob: -8.527351379394531

Token 159: ' jiro' (ID: 182701)
  Prédit: 'ji'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ji' → logprob: -0.2448328584432602
    2. '   ' → logprob: -2.619832754135132
    3. 'hiro' → logprob: -2.869832754135132
    4. ' jiro' → logprob: -3.369832754135132
    5. 'hak' → logprob: -4.869832992553711
    6. '           ' → logprob: -4.869832992553711
    7. 'hi' → logprob: -4.994832992553711
    8. '       ' → logprob: -4.994832992553711
    9. '```' → logprob: -5.869832992553711
    10. 'jo' → logprob: -5.994832992553711

Token 160: '_take' (ID: 197790)
  Prédit: '_take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_take' → logprob: -1.2471589798224159e-05
    2. 'take' → logprob: -11.875012397766113
    3. '_taken' → logprob: -13.000012397766113
    4. 'tak' → logprob: -13.250012397766113
    5. 'Take' → logprob: -14.500012397766113
    6. '_t' → logprob: -16.00001335144043
    7. '=' → logprob: -16.37501335144043
    8. '_move' → logprob: -16.37501335144043
    9. '_' → logprob: -16.50001335144043
    10. '_pick' → logprob: -16.62501335144043

Token 161: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022463142871857
    2. ' =' → logprob: -1.9102246761322021
    3. '＝' → logprob: -16.28522491455078
    4. '=

' → logprob: -16.28522491455078
    5. '=
' → logprob: -17.03522491455078
    6. ' ' → logprob: -17.16022491455078
    7. '=}' → logprob: -17.41022491455078
    8. '+=' → logprob: -17.66022491455078
    9. '-=' → logprob: -17.78522491455078
    10. '=k' → logprob: -17.78522491455078

Token 162: ' hak' (ID: 24396)
  Prédit: 'hak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hak' → logprob: -0.012518366798758507
    2. ' hak' → logprob: -4.387518405914307
    3. ' ' → logprob: -12.887517929077148
    4. 'huk' → logprob: -14.137517929077148
    5. 'hac' → logprob: -14.262517929077148
    6. 'hap' → logprob: -14.512517929077148
    7. ' hakk' → logprob: -14.637517929077148
    8. 'h' → logprob: -15.012517929077148
    9. ' ' → logprob: -15.012517929077148
    10. 'hok' → logprob: -15.012517929077148

Token 163: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -4.320199877838604e-07
    2. 'uki' → logprob: -15.125
    3. 'ik' → logprob: -17.125
    4. 'ikki' → logprob: -17.25
    5. 'wiki' → logprob: -18.375
    6. 'ikin' → logprob: -18.375
    7. 'IKI' → logprob: -18.625
    8. 'aki' → logprob: -18.875
    9. 'ikip' → logprob: -19.0
    10. 'ici' → logprob: -19.25

Token 164: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003741887165233493
    2. '
' → logprob: -5.62874174118042
    3. '   ' → logprob: -9.628742218017578
    4. '
' → logprob: -10.753742218017578
    5. '        
' → logprob: -11.253742218017578
    6. 'hak' → logprob: -11.753742218017578
    7. '<|end|>' → logprob: -11.878742218017578
    8. '           ' → logprob: -12.003742218017578
    9. '    
' → logprob: -12.003742218017578
    10. '	' → logprob: -12.878742218017578

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005249153473414481
    2. 'hak' → logprob: -8.500524520874023
    3. '
' → logprob: -8.625524520874023
    4. '   ' → logprob: -9.500524520874023
    5. ' hak' → logprob: -11.125524520874023
    6. '        
' → logprob: -11.250524520874023
    7. '           ' → logprob: -11.250524520874023
    8. '
' → logprob: -11.375524520874023
    9. '<|end|>' → logprob: -12.375524520874023
    10. '    
' → logprob: -13.875524520874023

Token 166: ' hak' (ID: 24396)
  Prédit: 'hak'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hak' (adapté à ' hak') → logprob: -6.20603168499656e-05
    2. ' hak' → logprob: -10.250061988830566
    3. '       ' → logprob: -10.625061988830566
    4. '   ' → logprob: -13.750061988830566
    5. '
' → logprob: -15.250061988830566
    6. 'hok' → logprob: -15.375061988830566
    7. 'huk' → logprob: -15.750061988830566
    8. 'hik' → logprob: -16.000062942504883
    9. 'haz' → logprob: -16.125062942504883
    10. 'print' → logprob: -16.250062942504883

Token 167: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -3.128163257315464e-07
    2. 'uki' → logprob: -16.0
    3. 'aki' → logprob: -17.0
    4. 'iku' → logprob: -18.25
    5. 'ikki' → logprob: -18.5
    6. 'i' → logprob: -18.5
    7. 'IKI' → logprob: -18.625
    8. 'oki' → logprob: -19.0
    9. ' iki' → logprob: -19.625
    10. 'ika' → logprob: -19.875

Token 168: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.08601265400648117
    2. ' -=' → logprob: -2.586012601852417
    3. '-' → logprob: -4.961012840270996
    4. '=' → logprob: -9.336012840270996
    5. '   ' → logprob: -13.586012840270996
    6. ' -' → logprob: -13.711012840270996
    7. '+=' → logprob: -14.711012840270996
    8. '    ' → logprob: -15.336012840270996
    9. ' ' → logprob: -15.711012840270996
    10. '```' → logprob: -16.21101188659668

Token 169: ' jiro' (ID: 182701)
  Prédit: 'ji'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ji' → logprob: -0.007963139563798904
    2. ' jiro' → logprob: -4.882963180541992
    3. 'hiro' → logprob: -9.757963180541992
    4. '   ' → logprob: -9.882963180541992
    5. 'jir' → logprob: -10.007963180541992
    6. '```' → logprob: -10.007963180541992
    7. 'jero' → logprob: -10.132963180541992
    8. 'iro' → logprob: -10.382963180541992
    9. ' ' → logprob: -10.757963180541992
    10. '	' → logprob: -11.632963180541992

Token 170: '_take' (ID: 197790)
  Prédit: '_take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_take' → logprob: -6.392202976712724e-06
    2. 'take' → logprob: -12.250006675720215
    3. '_taken' → logprob: -14.125006675720215
    4. 'Take' → logprob: -14.875006675720215
    5. 'tak' → logprob: -15.375006675720215
    6. '_t' → logprob: -15.875006675720215
    7. '_' → logprob: -17.6250057220459
    8. '_move' → logprob: -17.7500057220459
    9. 't' → logprob: -18.2500057220459
    10. '_keep' → logprob: -18.3750057220459

Token 171: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062362004071474075
    2. '   ' → logprob: -3.0623619556427
    3. '<|end|>' → logprob: -4.437362194061279
    4. '
' → logprob: -7.187362194061279
    5. 'print' → logprob: -7.312362194061279
    6. '\n' → logprob: -8.562361717224121
    7. '<|end|>' → logprob: -9.937361717224121
    8. '    
' → logprob: -10.312361717224121
    9. ' print' → logprob: -10.687361717224121
    10. '```' → logprob: -10.812361717224121

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6078312397003174
    2. '   ' → logprob: -1.4828312397003174
    3. 'print' → logprob: -1.6078312397003174
    4. '
' → logprob: -4.232831001281738
    5. '<|end|>' → logprob: -4.982831001281738
    6. ' print' → logprob: -6.107831001281738
    7. '\n' → logprob: -6.232831001281738
    8. '```' → logprob: -6.482831001281738
    9. '    
' → logprob: -8.482831001281738
    10. ' ' → logprob: -8.982831001281738

Token 173: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.339278580620885e-06
    2. ' print' → logprob: -13.000001907348633
    3. '```' → logprob: -17.750001907348633
    4. '
' → logprob: -18.000001907348633
    5. '   ' → logprob: -18.875001907348633
    6. 'if' → logprob: -19.375001907348633
    7. '#print' → logprob: -20.000001907348633
    8. 'continue' → logprob: -20.375001907348633
    9. '       ' → logprob: -21.375001907348633
    10. '(print' → logprob: -21.500001907348633

Token 174: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0019308974733576179
    2. '(' → logprob: -6.2519307136535645
    3. '(k' → logprob: -13.626931190490723
    4. '()' → logprob: -15.126931190490723
    5. ' (' → logprob: -15.376931190490723
    6. '(j' → logprob: -16.126930236816406
    7. '(f' → logprob: -16.126930236816406
    8. '('' → logprob: -16.501930236816406
    9. '((' → logprob: -16.876930236816406
    10. '(l' → logprob: -17.001930236816406

Token 175: 'ak' (ID: 422)
  Prédit: 'ak'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ak' → logprob: -0.003465952118858695
    2. 'hak' → logprob: -6.2534661293029785
    3. 'aki' → logprob: -6.5034661293029785
    4. 'akki' → logprob: -10.62846565246582
    5. 'k' → logprob: -12.12846565246582
    6. 'akis' → logprob: -13.25346565246582
    7. ' hak' → logprob: -13.37846565246582
    8. 'akita' → logprob: -13.87846565246582
    9. 'akhi' → logprob: -14.37846565246582
    10. 'akı' → logprob: -14.37846565246582

Token 176: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -6.749814019713085e-06
    2. 'aki' → logprob: -12.000006675720215
    3. 'ki' → logprob: -15.000006675720215
    4. 'uki' → logprob: -15.625006675720215
    5. 'oki' → logprob: -17.62500762939453
    6. 'i' → logprob: -17.62500762939453
    7. '```' → logprob: -17.75000762939453
    8. 'ik' → logprob: -17.87500762939453
    9. 'iku' → logprob: -18.50000762939453
    10. 'IKI' → logprob: -19.00000762939453

Token 177: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.0722858102526516e-05
    2. ')
' → logprob: -10.125041007995605
    3. '<|end|>' → logprob: -16.00004005432129
    4. ' )' → logprob: -16.12504005432129
    5. ')

' → logprob: -16.50004005432129
    6. '))' → logprob: -16.62504005432129
    7. ')}' → logprob: -16.87504005432129
    8. '   ' → logprob: -17.37504005432129
    9. '),' → logprob: -17.50004005432129
    10. ')`' → logprob: -17.62504005432129


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 175
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 81
Tokens correctement prédits (top 10): 147
Précision stricte (1ère position): 45.14%
Précision adaptée (1ère position): 46.29%
Précision (top 10): 84.00%
================================================================================
