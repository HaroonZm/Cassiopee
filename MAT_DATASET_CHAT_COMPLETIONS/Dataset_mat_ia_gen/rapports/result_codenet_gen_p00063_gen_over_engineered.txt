================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:25:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class PalindromeChecker:
    def __init__(self, string: str):
        self.string = string

    def is_palindrome(self) -> bool:
        # Considering single-character strings as palindromes by definition
        if len(self.string) == 1:
            return True
        return self.string == self.string[::-1]

class InputHandler:
    def __init__(self):
        self.lines = []

    def read_lines(self) -> None:
        import sys
        for line in sys.stdin:
            line = line.strip()
            if line:
                self.lines.append(line)

class PalindromeProcessor:
    def __init__(self, lines):
        self.lines = lines
        self.palindrome_checkers = [PalindromeChecker(line) for line in lines]

    def count_palindromes(self) -> int:
        return sum(checker.is_palindrome() for checker in self.palindrome_checkers)

class PalindromeApplication:
    def __init__(self):
        self.input_handler = InputHandler()
        self.processor = None

    def run(self) -> None:
        self.input_handler.read_lines()
        self.processor = PalindromeProcessor(self.input_handler.lines)
        count = self.processor.count_palindromes()
        print(count)

if __name__ == "__main__":
    app = PalindromeApplication()
    app.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Pal' (ID: 8392)
  → Token d'amorce (pas de prédiction)

Token 2: 'indrome' (ID: 66540)
  → Token d'amorce (pas de prédiction)

Token 3: 'Checker' (ID: 39016)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.040892552584409714
    2. '{' → logprob: -3.5408926010131836
    3. ':' → logprob: -4.540892601013184
    4. '(:' → logprob: -9.415892601013184
    5. '```' → logprob: -9.415892601013184
    6. '.' → logprob: -9.540892601013184
    7. ' {' → logprob: -10.040892601013184
    8. 's' → logprob: -10.665892601013184
    9. '({' → logprob: -10.790892601013184
    10. ' (' → logprob: -11.165892601013184

Token 4: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30911070108413696
    2. ':' → logprob: -2.059110641479492
    3. '{' → logprob: -2.184110641479492
    4. '.' → logprob: -3.684110641479492
    5. ' {' → logprob: -8.059110641479492
    6. '```' → logprob: -9.809110641479492
    7. '(:' → logprob: -10.059110641479492
    8. ' ' → logprob: -10.184110641479492
    9. ' (' → logprob: -10.309110641479492
    10. '(
' → logprob: -10.934110641479492

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2264430522918701
    2. '(' → logprob: -1.4764430522918701
    3. '```' → logprob: -1.4764430522918701
    4. '   ' → logprob: -1.6014430522918701
    5. '.' → logprob: -4.226443290710449
    6. '    
' → logprob: -4.976443290710449
    7. ':
' → logprob: -5.226443290710449
    8. '\' → logprob: -5.976443290710449
    9. '(
' → logprob: -5.976443290710449
    10. ' ' → logprob: -5.976443290710449

Token 6: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39297303557395935
    2. '```' → logprob: -1.7679730653762817
    3. ' def' → logprob: -2.517972946166992
    4. ' ' → logprob: -3.767972946166992
    5. '    ' → logprob: -4.017972946166992
    6. 'def' (adapté à ' def') → logprob: -4.767972946166992
    7. ' ```' → logprob: -5.392972946166992
    8. '\' → logprob: -5.642972946166992
    9. '`' → logprob: -5.642972946166992
    10. '(' → logprob: -5.767972946166992

Token 7: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007603907957673073
    2. ' check' → logprob: -5.882604122161865
    3. ' def' → logprob: -6.007604122161865
    4. ' ' → logprob: -7.757604122161865
    5. '_' → logprob: -8.257603645324707
    6. ' )' → logprob: -8.382603645324707
    7. ' calculate' → logprob: -8.507603645324707
    8. '<|end|>' → logprob: -8.507603645324707
    9. ' validate' → logprob: -8.882603645324707
    10. ')' → logprob: -9.382603645324707

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.2961512513575144e-05
    2. ' init' → logprob: -10.750022888183594
    3. 'i' → logprob: -14.375022888183594
    4. '_init' → logprob: -14.750022888183594
    5. 'ini' → logprob: -14.750022888183594
    6. 'in' → logprob: -16.750022888183594
    7. '	init' → logprob: -16.750022888183594
    8. '_' → logprob: -17.875022888183594
    9. 'innit' → logprob: -18.750022888183594
    10. 'inite' → logprob: -18.750022888183594

Token 9: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.4939028322696686
    2. '__' → logprob: -1.1189028024673462
    3. '(' → logprob: -2.8689029216766357
    4. '__(
' → logprob: -5.993902683258057
    5. '(self' → logprob: -6.243902683258057
    6. '__((' → logprob: -7.243902683258057
    7. '_' → logprob: -7.868902683258057
    8. '__('' → logprob: -8.368903160095215
    9. ' (' → logprob: -8.743903160095215
    10. '__(*' → logprob: -8.743903160095215

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0035183525178581476
    2. ' self' → logprob: -5.753518581390381
    3. ')' → logprob: -8.128518104553223
    4. '(self' → logprob: -10.378518104553223
    5. ' ' → logprob: -12.128518104553223
    6. ' )' → logprob: -12.253518104553223
    7. '	self' → logprob: -14.003518104553223
    8. '[self' → logprob: -14.753518104553223
    9. '_self' → logprob: -14.753518104553223
    10. '   ' → logprob: -15.003518104553223

Token 11: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5023462772369385
    2. ',' → logprob: -2.5023462772369385
    3. '_' → logprob: -2.5023462772369385
    4. '(' → logprob: -2.6273462772369385
    5. '(self' → logprob: -3.0023462772369385
    6. 'self' → logprob: -3.1273462772369385
    7. '):' → logprob: -3.3773462772369385
    8. ' ' → logprob: -5.127346038818359
    9. '<|end|>' → logprob: -5.127346038818359
    10. ' )' → logprob: -5.502346038818359

Token 12: ' string' (ID: 1621)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.35926738381385803
    2. ' self' → logprob: -1.6092673540115356
    3. 'text' → logprob: -2.734267473220825
    4. ' text' → logprob: -3.609267473220825
    5. 's' → logprob: -5.359267234802246
    6. ' s' → logprob: -5.859267234802246
    7. ' word' → logprob: -7.484267234802246
    8. 'string' → logprob: -7.609267234802246
    9. 'word' → logprob: -8.109267234802246
    10. ' input' → logprob: -8.234267234802246

Token 13: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004709580447524786
    2. ')' → logprob: -5.629709720611572
    3. ':' → logprob: -7.254709720611572
    4. '   ' → logprob: -8.754709243774414
    5. '):
' → logprob: -8.754709243774414
    6. '_' → logprob: -10.379709243774414
    7. '=' → logprob: -11.504709243774414
    8. 's' → logprob: -11.629709243774414
    9. ' ):' → logprob: -11.754709243774414
    10. '       ' → logprob: -12.754709243774414

Token 14: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.12858225405216217
    2. 'str' → logprob: -2.128582239151001
    3. ')' → logprob: -6.75358247756958
    4. 's' → logprob: -8.503582000732422
    5. ' )' → logprob: -8.503582000732422
    6. ' ' → logprob: -10.128582000732422
    7. '   ' → logprob: -11.003582000732422
    8. ':str' → logprob: -12.003582000732422
    9. '=str' → logprob: -13.003582000732422
    10. '    ' → logprob: -13.128582000732422

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018428632989525795
    2. ')' → logprob: -4.018428802490234
    3. '):
' → logprob: -8.393428802490234
    4. ':' → logprob: -10.518428802490234
    5. '   ' → logprob: -11.018428802490234
    6. '       ' → logprob: -12.893428802490234
    7. ' ):' → logprob: -13.143428802490234
    8. '):

' → logprob: -14.143428802490234
    9. ',' → logprob: -14.768428802490234
    10. '):
' → logprob: -14.893428802490234

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012252279557287693
    2. 'self' → logprob: -7.751224994659424
    3. '   ' → logprob: -8.376225471496582
    4. '    ' → logprob: -8.626225471496582
    5. '        ' → logprob: -9.251225471496582
    6. ' self' → logprob: -9.251225471496582
    7. '      ' → logprob: -9.751225471496582
    8. '_' → logprob: -10.251225471496582
    9. '     ' → logprob: -10.876225471496582
    10. '```' → logprob: -11.001225471496582

Token 17: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07013605535030365
    2. ' self' → logprob: -2.945136070251465
    3. '       ' → logprob: -4.195136070251465
    4. '   ' → logprob: -10.695136070251465
    5. ' ' → logprob: -10.820136070251465
    6. ' ' → logprob: -11.445136070251465
    7. '_self' → logprob: -12.445136070251465
    8. 's' → logprob: -12.945136070251465
    9. '        ' → logprob: -13.195136070251465
    10. '           ' → logprob: -13.320136070251465

Token 18: '.string' (ID: 8466)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18153446912765503
    2. '.string' → logprob: -1.8065345287322998
    3. ' .' → logprob: -6.806534290313721
    4. 'string' → logprob: -8.056534767150879
    5. '.input' → logprob: -9.056534767150879
    6. '.s' → logprob: -9.931534767150879
    7. '._' → logprob: -10.056534767150879
    8. ' string' → logprob: -10.306534767150879
    9. ' ' → logprob: -10.306534767150879
    10. '.str' → logprob: -10.931534767150879

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2820257544517517
    2. '=' → logprob: -1.4070258140563965
    3. '<|end|>' → logprob: -7.7820258140563965
    4. '_' → logprob: -8.532025337219238
    5. '<|end|>' → logprob: -9.532025337219238
    6. ' ' → logprob: -9.782025337219238
    7. 's' → logprob: -10.407025337219238
    8. ')' → logprob: -10.407025337219238
    9. '.' → logprob: -11.157025337219238
    10. '   ' → logprob: -11.282025337219238

Token 20: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.054883070290088654
    2. 'string' → logprob: -2.9298830032348633
    3. ' ' → logprob: -14.804883003234863
    4. ' ' → logprob: -16.05488395690918
    5. '	string' → logprob: -16.55488395690918
    6. 'tring' → logprob: -16.80488395690918
    7. '(string' → logprob: -17.42988395690918
    8. '```' → logprob: -17.80488395690918
    9. '_string' → logprob: -18.05488395690918
    10. '    ' → logprob: -18.05488395690918

Token 21: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8702395558357239
    2. '    
' → logprob: -1.370239496231079
    3. '
' → logprob: -1.620239496231079
    4. '  
' → logprob: -2.870239496231079
    5. '\n' → logprob: -3.745239496231079
    6. '\' → logprob: -4.745239734649658
    7. ' 
' → logprob: -5.245239734649658
    8. '     
' → logprob: -5.245239734649658
    9. '```' → logprob: -5.370239734649658
    10. ' ' → logprob: -5.495239734649658

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03894343972206116
    2. '    
' → logprob: -3.4139435291290283
    3. '
' → logprob: -5.788943290710449
    4. '        
' → logprob: -7.538943290710449
    5. '  
' → logprob: -7.663943290710449
    6. ' def' → logprob: -8.03894329071045
    7. 'def' → logprob: -8.53894329071045
    8. '```' → logprob: -8.53894329071045
    9. '    ' → logprob: -8.91394329071045
    10. ' 
' → logprob: -9.41394329071045

Token 23: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3408335745334625
    2. '   ' → logprob: -1.5908335447311401
    3. ' def' → logprob: -2.4658336639404297
    4. ' ' → logprob: -9.84083366394043
    5. '```' → logprob: -10.34083366394043
    6. '    ' → logprob: -10.59083366394043
    7. '  ' → logprob: -12.21583366394043
    8. '    
' → logprob: -12.34083366394043
    9. '	def' → logprob: -12.71583366394043
    10. '`' → logprob: -13.96583366394043

Token 24: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007410935126245022
    2. ' ' → logprob: -5.007411003112793
    3. ' check' → logprob: -7.632411003112793
    4. 'is' → logprob: -9.007411003112793
    5. '_' → logprob: -10.382411003112793
    6. ' _' → logprob: -10.632411003112793
    7. ' i' → logprob: -12.507411003112793
    8. ' def' → logprob: -12.507411003112793
    9. ' palindrome' → logprob: -12.757411003112793
    10. 's' → logprob: -12.882411003112793

Token 25: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.03034333698451519
    2. '_' → logprob: -3.5303432941436768
    3. ' _' → logprob: -7.530343532562256
    4. 'Palindrome' → logprob: -10.155343055725098
    5. '_space' → logprob: -12.280343055725098
    6. ' ' → logprob: -12.405343055725098
    7. ' palindrome' → logprob: -13.280343055725098
    8. '_a' → logprob: -13.655343055725098
    9. '_p' → logprob: -13.655343055725098
    10. '_pa' → logprob: -13.780343055725098

Token 26: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.0022353052627295256
    2. 'ind' → logprob: -6.127235412597656
    3. '_' → logprob: -10.502235412597656
    4. '```' → logprob: -12.127235412597656
    5. '   ' → logprob: -12.627235412597656
    6. 'i' → logprob: -12.627235412597656
    7. 'e' → logprob: -13.002235412597656
    8. 'ndrome' → logprob: -13.377235412597656
    9. 'in' → logprob: -13.627235412597656
    10. 'd' → logprob: -13.877235412597656

Token 27: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5238439440727234
    2. '(self' → logprob: -0.8988439440727234
    3. ' (' → logprob: -7.898843765258789
    4. '(s' → logprob: -9.273843765258789
    5. ')' → logprob: -9.773843765258789
    6. '(
' → logprob: -9.773843765258789
    7. '_' → logprob: -10.398843765258789
    8. 'self' → logprob: -10.898843765258789
    9. ' ' → logprob: -11.023843765258789
    10. '   ' → logprob: -11.273843765258789

Token 28: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47429943084716797
    2. ')' → logprob: -0.974299430847168
    3. '):
' → logprob: -9.849299430847168
    4. 'self' → logprob: -10.349299430847168
    5. ',' → logprob: -10.474299430847168
    6. ' ):' → logprob: -10.974299430847168
    7. '_string' → logprob: -11.224299430847168
    8. 's' → logprob: -11.349299430847168
    9. ':' → logprob: -11.474299430847168
    10. '):

' → logprob: -11.724299430847168

Token 29: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1602545976638794
    2. '(' → logprob: -2.41025447845459
    3. '(self' → logprob: -3.16025447845459
    4. '():' → logprob: -4.91025447845459
    5. '):' → logprob: -5.16025447845459
    6. ':**' → logprob: -6.91025447845459
    7. '       ' → logprob: -7.78525447845459
    8. '(:' → logprob: -8.16025447845459
    9. ' :' → logprob: -8.28525447845459
    10. '   ' → logprob: -8.41025447845459

Token 30: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.029919182881712914
    2. 'bool' → logprob: -3.529919147491455
    3. ' ' → logprob: -8.779919624328613
    4. '   ' → logprob: -12.529919624328613
    5. '  ' → logprob: -12.654919624328613
    6. ' ' → logprob: -13.154919624328613
    7. ' True' → logprob: -13.404919624328613
    8. '	bool' → logprob: -13.654919624328613
    9. '    ' → logprob: -13.904919624328613
    10. '<bool' → logprob: -14.154919624328613

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004738063144031912
    2. '():' → logprob: -8.000473976135254
    3. '):' → logprob: -9.375473976135254
    4. ' :' → logprob: -10.625473976135254
    5. ':**' → logprob: -11.375473976135254
    6. ':return' → logprob: -11.625473976135254
    7. '       ' → logprob: -13.000473976135254
    8. ':
' → logprob: -13.000473976135254
    9. '   ' → logprob: -13.750473976135254
    10. '(' → logprob: -14.000473976135254

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.469590491382405e-05
    2. '   ' → logprob: -10.75007438659668
    3. '      ' → logprob: -11.00007438659668
    4. '        ' → logprob: -11.25007438659668
    5. '    ' → logprob: -11.37507438659668
    6. 'return' → logprob: -12.87507438659668
    7. ' return' → logprob: -13.37507438659668
    8. '     ' → logprob: -13.62507438659668
    9. '        
' → logprob: -13.75007438659668
    10. '```' → logprob: -13.75007438659668

Token 33: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9143944978713989
    2. ' return' → logprob: -1.039394497871399
    3. 'return' → logprob: -1.414394497871399
    4. '        ' → logprob: -6.789394378662109
    5. 's' → logprob: -7.539394378662109
    6. ' s' → logprob: -8.41439437866211
    7. '   ' → logprob: -8.53939437866211
    8. 'string' → logprob: -9.41439437866211
    9. '    ' → logprob: -9.91439437866211
    10. ' ' → logprob: -10.41439437866211

Token 34: ' Considering' (ID: 85246)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.30947816371917725
    2. ' cleaned' → logprob: -2.559478282928467
    3. 'return' → logprob: -2.934478282928467
    4. '       ' → logprob: -3.309478282928467
    5. ' s' → logprob: -3.559478282928467
    6. ' clean' → logprob: -4.059478282928467
    7. ' string' → logprob: -4.309478282928467
    8. 'clean' → logprob: -4.684478282928467
    9. 's' → logprob: -5.059478282928467
    10. ' processed' → logprob: -5.434478282928467

Token 35: ' single' (ID: 4590)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25802481174468994
    2. 'self' → logprob: -1.50802481174469
    3. ' the' → logprob: -6.0080246925354
    4. ' not' → logprob: -6.1330246925354
    5. ' ' → logprob: -8.133025169372559
    6. ' a' → logprob: -8.258025169372559
    7. 's' → logprob: -8.633025169372559
    8. ' s' → logprob: -8.758025169372559
    9. '   ' → logprob: -8.883025169372559
    10. '    ' → logprob: -9.508025169372559

Token 36: '-character' (ID: 190344)
  Prédit: ' character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.49332931637763977
    2. 's' → logprob: -2.3683292865753174
    3. ' characters' → logprob: -2.3683292865753174
    4. '-character' → logprob: -2.4933292865753174
    5. 'character' → logprob: -3.9933292865753174
    6. ' word' → logprob: -4.1183295249938965
    7. '-' → logprob: -4.7433295249938965
    8. ' ' → logprob: -4.9933295249938965
    9. ' whitespace' → logprob: -5.1183295249938965
    10. ' string' → logprob: -5.3683295249938965

Token 37: ' strings' (ID: 18279)
  Prédit: ' strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strings' → logprob: -1.0365674495697021
    2. 's' → logprob: -1.4115674495697021
    3. ' ' → logprob: -1.7865674495697021
    4. ' string' → logprob: -2.036567449569702
    5. ' and' → logprob: -2.911567449569702
    6. ' s' → logprob: -3.911567449569702
    7. ' words' → logprob: -4.536567687988281
    8. ' or' → logprob: -5.286567687988281
    9. '  ' → logprob: -5.911567687988281
    10. 'string' → logprob: -6.411567687988281

Token 38: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06399790197610855
    2. ' and' → logprob: -3.688997983932495
    3. ':' → logprob: -4.313997745513916
    4. ' or' → logprob: -4.563997745513916
    5. '        ' → logprob: -5.688997745513916
    6. ' if' → logprob: -5.813997745513916
    7. ' return' → logprob: -6.188997745513916
    8. ',' → logprob: -7.063997745513916
    9. '   ' → logprob: -7.188997745513916
    10. ' ' → logprob: -7.688997745513916

Token 39: ' pal' (ID: 5337)
  Prédit: ' pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pal' → logprob: -0.4564606547355652
    2. ' palindrome' → logprob: -1.70646071434021
    3. 'pal' → logprob: -2.33146071434021
    4. ' True' → logprob: -2.70646071434021
    5. ' a' → logprob: -4.706460475921631
    6. ' true' → logprob: -5.831460475921631
    7. ' valid' → logprob: -6.081460475921631
    8. '   ' → logprob: -6.581460475921631
    9. '_pal' → logprob: -6.581460475921631
    10. 'True' → logprob: -6.706460475921631

Token 40: 'ind' (ID: 521)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28641727566719055
    2. 'indrome' → logprob: -1.5364172458648682
    3. 'ind' → logprob: -3.786417245864868
    4. 'a' → logprob: -5.161417484283447
    5. 'd' → logprob: -6.536417484283447
    6. 'e' → logprob: -6.911417484283447
    7. 'y' → logprob: -7.786417484283447
    8. 'ndrome' → logprob: -7.786417484283447
    9. 'n' → logprob: -8.161417007446289
    10. '_' → logprob: -8.286417007446289

Token 41: 'romes' (ID: 159600)
  Prédit: 'rome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rome' → logprob: -0.5791652202606201
    2. 'romes' → logprob: -0.9541652202606201
    3. 'r' → logprob: -2.95416522026062
    4. 'rom' → logprob: -6.204165458679199
    5. 'ro' → logprob: -8.5791654586792
    6. '```' → logprob: -10.7041654586792
    7. 'rone' → logprob: -11.2041654586792
    8. '#' → logprob: -11.4541654586792
    9. ')' → logprob: -11.7041654586792
    10. '**' → logprob: -11.7041654586792

Token 42: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06949081271886826
    2. '
' → logprob: -2.819490909576416
    3. '```' → logprob: -5.944490909576416
    4. '<|end|>' → logprob: -6.319490909576416
    5. '        ' → logprob: -7.069490909576416
    6. '        
' → logprob: -7.444490909576416
    7. ',' → logprob: -8.194490432739258
    8. ':' → logprob: -8.319490432739258
    9. '\' → logprob: -8.694490432739258
    10. ' 
' → logprob: -8.819490432739258

Token 43: ' definition' (ID: 16083)
  Prédit: ' default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' default' → logprob: -0.023777730762958527
    2. 'default' → logprob: -3.773777723312378
    3. ' return' → logprob: -8.523777961730957
    4. ' definition' → logprob: -8.773777961730957
    5. 'def' → logprob: -9.273777961730957
    6. '   ' → logprob: -10.398777961730957
    7. ' def' → logprob: -10.898777961730957
    8. '    ' → logprob: -11.398777961730957
    9. 'return' → logprob: -12.023777961730957
    10. 'definition' → logprob: -12.273777961730957

Token 44: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045294489711523056
    2. '
' → logprob: -3.2952945232391357
    3. ':' → logprob: -5.295294284820557
    4. '<|end|>' → logprob: -7.670294284820557
    5. 'return' → logprob: -8.170294761657715
    6. '   ' → logprob: -8.420294761657715
    7. ',' → logprob: -8.670294761657715
    8. '        
' → logprob: -8.920294761657715
    9. '\n' → logprob: -9.045294761657715
    10. ':
' → logprob: -9.170294761657715

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007451748941093683
    2. '
' → logprob: -5.00745153427124
    3. '```' → logprob: -8.007452011108398
    4. 'return' → logprob: -9.757452011108398
    5. '\n' → logprob: -9.882452011108398
    6. ':' → logprob: -10.132452011108398
    7. 'n' → logprob: -10.132452011108398
    8. '   ' → logprob: -10.257452011108398
    9. ',' → logprob: -10.382452011108398
    10. '        ' → logprob: -10.507452011108398

Token 46: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0358903408050537
    2. ' if' → logprob: -1.2858903408050537
    3. ' return' → logprob: -1.9108903408050537
    4. 'return' → logprob: -1.9108903408050537
    5. 'if' (adapté à ' if') → logprob: -2.6608903408050537
    6. '   ' → logprob: -7.035890579223633
    7. 's' → logprob: -7.160890579223633
    8. ' s' → logprob: -8.535890579223633
    9. 'clean' → logprob: -8.660890579223633
    10. 'text' → logprob: -9.035890579223633

Token 47: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.014429211616516113
    2. ' ' → logprob: -4.264429092407227
    3. 'len' → logprob: -9.139429092407227
    4. ' self' → logprob: -9.139429092407227
    5. ' not' → logprob: -10.389429092407227
    6. ' ' → logprob: -11.014429092407227
    7. '  ' → logprob: -13.264429092407227
    8. ' isinstance' → logprob: -14.639429092407227
    9. '	len' → logprob: -14.639429092407227
    10. 'self' → logprob: -15.014429092407227

Token 48: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014194532297551632
    2. '(self' → logprob: -4.264194488525391
    3. '(
' → logprob: -11.13919448852539
    4. '(s' → logprob: -11.63919448852539
    5. '(this' → logprob: -12.76419448852539
    6. '<|end|>' → logprob: -13.13919448852539
    7. ' (' → logprob: -13.88919448852539
    8. '(space' → logprob: -14.38919448852539
    9. '(

' → logprob: -14.63919448852539
    10. '()' → logprob: -15.63919448852539

Token 49: '.string' (ID: 8466)
  Prédit: '.string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.string' → logprob: -0.6073034405708313
    2. '.' → logprob: -0.8573034405708313
    3. ' .' → logprob: -3.4823033809661865
    4. 'string' → logprob: -10.607303619384766
    5. '.s' → logprob: -10.732303619384766
    6. '.str' → logprob: -10.857303619384766
    7. ' ' → logprob: -11.232303619384766
    8. ')' → logprob: -11.357303619384766
    9. ' string' → logprob: -11.482303619384766
    10. '.user' → logprob: -11.857303619384766

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027222758159041405
    2. ' )' → logprob: -3.6522228717803955
    3. ' <=' → logprob: -7.152222633361816
    4. ')<=' → logprob: -9.152222633361816
    5. '<=' → logprob: -10.777222633361816
    6. ' ==' → logprob: -12.277222633361816
    7. ' ' → logprob: -12.777222633361816
    8. ')==' → logprob: -13.277222633361816
    9. '==' → logprob: -14.152222633361816
    10. '```' → logprob: -14.527222633361816

Token 51: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.015306061133742332
    2. '<=' → logprob: -4.765305995941162
    3. ' ==' → logprob: -5.390305995941162
    4. ' <' → logprob: -6.765305995941162
    5. ' ' → logprob: -7.640305995941162
    6. '==' → logprob: -8.01530647277832
    7. '<' → logprob: -9.14030647277832
    8. '1' → logprob: -11.26530647277832
    9. '   ' → logprob: -12.39030647277832
    10. '  ' → logprob: -12.64030647277832

Token 52: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.057885028421878815
    2. '1' → logprob: -3.057884931564331
    3. '0' → logprob: -4.68288516998291
    4. '  ' → logprob: -14.43288516998291
    5. '```' → logprob: -14.55788516998291
    6. '2' → logprob: -15.05788516998291
    7. ' ' → logprob: -15.49538516998291
    8. '<' → logprob: -15.55788516998291
    9. '>' → logprob: -16.807884216308594
    10. '   ' → logprob: -16.870384216308594

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35319069027900696
    2. '0' → logprob: -1.2281906604766846
    3. ' ' → logprob: -5.353190898895264
    4. '```' → logprob: -14.478190422058105
    5. '<' → logprob: -15.228190422058105
    6. '   ' → logprob: -15.728190422058105
    7. '2' → logprob: -15.728190422058105
    8. '  ' → logprob: -16.040691375732422
    9. '01' → logprob: -16.915691375732422
    10. ' ' → logprob: -17.103191375732422

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014647466596215963
    2. ':return' → logprob: -7.37646484375
    3. ':
' → logprob: -7.62646484375
    4. ' or' → logprob: -8.37646484375
    5. '):' → logprob: -9.62646484375
    6. ' :' → logprob: -10.00146484375
    7. ')' → logprob: -12.75146484375
    8. '       ' → logprob: -13.00146484375
    9. ' return' → logprob: -14.37646484375
    10. '   ' → logprob: -14.50146484375

Token 55: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02008654922246933
    2. ':
' → logprob: -4.770086765289307
    3. ':return' → logprob: -5.020086765289307
    4. '           ' → logprob: -6.145086765289307
    5. '       ' → logprob: -6.145086765289307
    6. ' or' → logprob: -8.520086288452148
    7. 'return' → logprob: -9.145086288452148
    8. ' return' → logprob: -10.020086288452148
    9. ',' → logprob: -10.145086288452148
    10. '
' → logprob: -10.270086288452148

Token 56: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1723729819059372
    2. ' return' → logprob: -1.9223729372024536
    3. '       ' → logprob: -4.672372817993164
    4. '           ' → logprob: -6.047372817993164
    5. '   ' → logprob: -8.672372817993164
    6. '	return' → logprob: -9.797372817993164
    7. '
' → logprob: -9.922372817993164
    8. ' 
' → logprob: -10.672372817993164
    9. ':return' → logprob: -10.797372817993164
    10. '_return' → logprob: -12.047372817993164

Token 57: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.575939416885376
    2. 'True' → logprob: -0.825939416885376
    3. '   ' → logprob: -19.075939178466797
    4. '(True' → logprob: -19.075939178466797
    5. 'Tr' → logprob: -19.950939178466797
    6. 'False' → logprob: -20.200939178466797
    7. ' Tru' → logprob: -20.200939178466797
    8. 'true' → logprob: -20.950939178466797
    9. ' true' → logprob: -21.075939178466797
    10. '       ' → logprob: -21.075939178466797

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15978965163230896
    2. '       ' → logprob: -2.034789562225342
    3. '\n' → logprob: -5.159789562225342
    4. '        
' → logprob: -5.159789562225342
    5. '<|end|>' → logprob: -6.784789562225342
    6. '' → logprob: -7.034789562225342
    7. '
' → logprob: -7.409789562225342
    8. '    
' → logprob: -7.534789562225342
    9. '\' → logprob: -7.659789562225342
    10. '  
' → logprob: -7.784789562225342

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010493416339159012
    2. '
' → logprob: -5.510493278503418
    3. '        
' → logprob: -6.010493278503418
    4. '\n' → logprob: -6.885493278503418
    5. '\' → logprob: -7.010493278503418
    6. '    
' → logprob: -7.760493278503418
    7. '   ' → logprob: -8.010493278503418
    8. '  
' → logprob: -8.635493278503418
    9. '' → logprob: -9.010493278503418
    10. '```' → logprob: -9.010493278503418

Token 60: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18294501304626465
    2. '        
' → logprob: -2.5579450130462646
    3. '
' → logprob: -3.3079450130462646
    4. '    
' → logprob: -4.807945251464844
    5. ' 
' → logprob: -5.182945251464844
    6. 's' → logprob: -5.307945251464844
    7. '  
' → logprob: -5.432945251464844
    8. '#' → logprob: -5.682945251464844
    9. '   ' → logprob: -6.057945251464844
    10. '        ' → logprob: -6.307945251464844

Token 61: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.038056522607803345
    2. 'self' → logprob: -3.2880566120147705
    3. ' all' → logprob: -12.163056373596191
    4. ' ' → logprob: -12.288056373596191
    5. '	self' → logprob: -13.788056373596191
    6. ' str' → logprob: -13.913056373596191
    7. ' True' → logprob: -14.538056373596191
    8. '   ' → logprob: -14.538056373596191
    9. ' ' → logprob: -14.913056373596191
    10. 'str' → logprob: -15.163056373596191

Token 62: '.string' (ID: 8466)
  Prédit: '.string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.string' → logprob: -0.002299536019563675
    2. '.' → logprob: -6.1272993087768555
    3. 'string' → logprob: -9.627299308776855
    4. ' .' → logprob: -10.502299308776855
    5. '.str' → logprob: -11.627299308776855
    6. '.s' → logprob: -12.502299308776855
    7. '.stringify' → logprob: -13.627299308776855
    8. ' string' → logprob: -13.627299308776855
    9. '.is' → logprob: -13.877299308776855
    10. '.reverse' → logprob: -14.002299308776855

Token 63: ' ==' (ID: 951)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.47321099042892456
    2. ' ==' → logprob: -1.0982110500335693
    3. '==' → logprob: -3.5982110500335693
    4. '[' → logprob: -4.22321081161499
    5. '[:]' → logprob: -6.84821081161499
    6. ' [' → logprob: -8.473211288452148
    7. '.' → logprob: -8.723211288452148
    8. '[]' → logprob: -10.848211288452148
    9. ' ' → logprob: -11.473211288452148
    10. '=' → logprob: -11.848211288452148

Token 64: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.023255961015820503
    2. 'self' → logprob: -3.7732560634613037
    3. ' ' → logprob: -12.523256301879883
    4. '	self' → logprob: -12.523256301879883
    5. '[::-' → logprob: -14.148256301879883
    6. 'elf' → logprob: -14.398256301879883
    7. ' reverse' → logprob: -14.523256301879883
    8. ' ' → logprob: -14.648256301879883
    9. '-self' → logprob: -15.773256301879883
    10. 's' → logprob: -16.023256301879883

Token 65: '.string' (ID: 8466)
  Prédit: '.string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.string' → logprob: -0.0004904801025986671
    2. 'string' → logprob: -7.875490665435791
    3. '.' → logprob: -9.875490188598633
    4. '[::-' → logprob: -11.000490188598633
    5. '.str' → logprob: -11.625490188598633
    6. 'tring' → logprob: -11.625490188598633
    7. '.reverse' → logprob: -11.750490188598633
    8. ' .' → logprob: -12.375490188598633
    9. ' string' → logprob: -12.500490188598633
    10. '_string' → logprob: -13.250490188598633

Token 66: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -9.805981972021982e-05
    2. '[' → logprob: -9.25009822845459
    3. '[
' → logprob: -13.37509822845459
    4. '```' → logprob: -15.75009822845459
    5. ' [' → logprob: -16.500097274780273
    6. '[-' → logprob: -17.250097274780273
    7. '[:' → logprob: -17.625097274780273
    8. 're' → logprob: -17.750097274780273
    9. '   ' → logprob: -18.875097274780273
    10. '::-' → logprob: -19.375097274780273

Token 67: '1' (ID: 16)
  Prédit: 'erse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erse' → logprob: -0.28424522280693054
    2. '1' → logprob: -1.659245252609253
    3. 'r' → logprob: -3.284245252609253
    4. 'se' → logprob: -4.784245014190674
    5. 're' → logprob: -5.534245014190674
    6. 's' → logprob: -6.409245014190674
    7. 'es' → logprob: -7.034245014190674
    8. '```' → logprob: -7.034245014190674
    9. 'e' → logprob: -7.409245014190674
    10. ']' → logprob: -7.534245014190674

Token 68: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030165115371346474
    2. ')' → logprob: -3.530165195465088
    3. '])' → logprob: -7.905165195465088
    4. ')]' → logprob: -10.40516471862793
    5. '[' → logprob: -12.03016471862793
    6. '       ' → logprob: -12.53016471862793
    7. ' ]' → logprob: -13.28016471862793
    8. '']' → logprob: -13.78016471862793
    9. '）' → logprob: -14.03016471862793
    10. '}' → logprob: -14.53016471862793

Token 69: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6422514319419861
    2. '<|end|>' → logprob: -1.2672514915466309
    3. '```' → logprob: -2.267251491546631
    4. '\n' → logprob: -3.267251491546631
    5. '#' → logprob: -3.767251491546631
    6. '\' → logprob: -5.392251491546631
    7. '<|end|>' → logprob: -5.767251491546631
    8. '.' → logprob: -5.892251491546631
    9. '

' → logprob: -6.017251491546631
    10. '[' → logprob: -6.142251491546631

Token 70: ' Input' (ID: 10090)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08680470287799835
    2. ' Pal' → logprob: -3.2118046283721924
    3. ' String' → logprob: -3.5868046283721924
    4. ' Space' → logprob: -5.3368048667907715
    5. ' An' → logprob: -6.5868048667907715
    6. ' )' → logprob: -7.2118048667907715
    7. ' User' → logprob: -7.2118048667907715
    8. ' ' → logprob: -7.4618048667907715
    9. ' Text' → logprob: -7.8368048667907715
    10. ' Checker' → logprob: -7.8368048667907715

Token 71: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.05620822310447693
    2. 'Reader' → logprob: -4.05620813369751
    3. 'Processor' → logprob: -4.18120813369751
    4. 'Provider' → logprob: -5.43120813369751
    5. 'Parser' → logprob: -5.80620813369751
    6. '(' → logprob: -5.93120813369751
    7. 'Validator' → logprob: -5.93120813369751
    8. 'Field' → logprob: -6.30620813369751
    9. 'Box' → logprob: -6.68120813369751
    10. 'Manager' → logprob: -6.93120813369751

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007054576184600592
    2. '(' → logprob: -5.382054805755615
    3. '<|end|>' → logprob: -6.757054805755615
    4. '():' → logprob: -7.132054805755615
    5. ' :' → logprob: -9.257054328918457
    6. '   ' → logprob: -9.382054328918457
    7. ':
' → logprob: -9.757054328918457
    8. '):' → logprob: -10.007054328918457
    9. '```' → logprob: -10.257054328918457
    10. '.' → logprob: -10.257054328918457

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058958396315574646
    2. '    ' → logprob: -3.6839582920074463
    3. ' def' → logprob: -4.433958530426025
    4. ' ' → logprob: -5.058958530426025
    5. '    
' → logprob: -5.433958530426025
    6. ' 
' → logprob: -5.683958530426025
    7. '  ' → logprob: -6.683958530426025
    8. '<|end|>' → logprob: -6.933958530426025
    9. 'def' → logprob: -7.183958530426025
    10. '
' → logprob: -7.308958530426025

Token 74: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.04867899790406227
    2. 'def' (adapté à ' def') → logprob: -3.0486791133880615
    3. '   ' → logprob: -9.29867935180664
    4. '	def' → logprob: -17.17367935180664
    5. '```' → logprob: -17.29867935180664
    6. ' ' → logprob: -17.67367935180664
    7. 'de' → logprob: -18.42367935180664
    8. '    ' → logprob: -19.04867935180664
    9. ':def' → logprob: -19.04867935180664
    10. ' ' → logprob: -19.17367935180664

Token 75: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004093242809176445
    2. ' ' → logprob: -6.379093170166016
    3. ' _' → logprob: -6.754093170166016
    4. ' init' → logprob: -7.129093170166016
    5. ' process' → logprob: -8.754093170166016
    6. '_' → logprob: -9.504093170166016
    7. '__' → logprob: -10.129093170166016
    8. ' ' → logprob: -10.129093170166016
    9. '_init' → logprob: -10.379093170166016
    10. ' def' → logprob: -10.879093170166016

Token 76: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.919942486798391e-05
    2. '_init' → logprob: -10.000059127807617
    3. ' init' → logprob: -11.500059127807617
    4. '   ' → logprob: -13.375059127807617
    5. 'def' → logprob: -14.500059127807617
    6. '	init' → logprob: -15.000059127807617
    7. '__' → logprob: -15.250059127807617
    8. 'ini' → logprob: -15.625059127807617
    9. '  ' → logprob: -15.625059127807617
    10. '```' → logprob: -15.875059127807617

Token 77: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.18231609463691711
    2. '__' → logprob: -1.8073160648345947
    3. '__(
' → logprob: -6.307316303253174
    4. '__((' → logprob: -7.557316303253174
    5. '__(*' → logprob: -9.807315826416016
    6. '(' → logprob: -10.182315826416016
    7. '__('' → logprob: -10.182315826416016
    8. '(self' → logprob: -10.307315826416016
    9. '__("' → logprob: -11.182315826416016
    10. '<|end|>' → logprob: -11.307315826416016

Token 78: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004189637023955584
    2. ')' → logprob: -5.504189491271973
    3. '):
' → logprob: -9.879189491271973
    4. ' self' → logprob: -10.254189491271973
    5. '):' → logprob: -11.629189491271973
    6. 'string' → logprob: -12.629189491271973
    7. '(self' → logprob: -12.879189491271973
    8. '):

' → logprob: -13.129189491271973
    9. 'sel' → logprob: -13.254189491271973
    10. 's' → logprob: -14.004189491271973

Token 79: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0040887282229959965
    2. ' ,' → logprob: -5.504088878631592
    3. ')' → logprob: -12.379088401794434
    4. 'string' → logprob: -13.504088401794434
    5. ',string' → logprob: -13.754088401794434
    6. 'self' → logprob: -13.879088401794434
    7. '<|end|>' → logprob: -14.379088401794434
    8. ',input' → logprob: -15.129088401794434
    9. '‌,' → logprob: -15.379088401794434
    10. '):' → logprob: -15.629088401794434

Token 80: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16672690212726593
    2. ')' → logprob: -2.54172682762146
    3. ' self' → logprob: -2.91672682762146
    4. '):' → logprob: -4.666727066040039
    5. '   ' → logprob: -4.916727066040039
    6. ' None' → logprob: -6.416727066040039
    7. '):
' → logprob: -6.791727066040039
    8. ' ' → logprob: -7.791727066040039
    9. 'None' → logprob: -8.166727066040039
    10. ' )' → logprob: -8.416727066040039

Token 81: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6023842692375183
    2. ' self' → logprob: -1.852384328842163
    3. ' pass' → logprob: -2.102384328842163
    4. 'pass' → logprob: -2.102384328842163
    5. '   ' → logprob: -3.602384328842163
    6. '       ' → logprob: -4.102384090423584
    7. 'def' → logprob: -6.352384090423584
    8. 's' → logprob: -6.352384090423584
    9. 'input' → logprob: -6.977384090423584
    10. ' input' → logprob: -8.102384567260742

Token 82: '.lines' (ID: 96601)
  Prédit: ' .'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' .' → logprob: -0.44370585680007935
    2. '.' → logprob: -2.4437057971954346
    3. '.string' → logprob: -2.5687057971954346
    4. ' string' → logprob: -2.6937057971954346
    5. '_string' → logprob: -3.4437057971954346
    6. 'string' → logprob: -3.6937057971954346
    7. '.input' → logprob: -4.068706035614014
    8. ' strings' → logprob: -4.193706035614014
    9. '_strings' → logprob: -4.443706035614014
    10. '._' → logprob: -5.068706035614014

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03820088878273964
    2. '=' → logprob: -3.288200855255127
    3. '=[]' → logprob: -8.788201332092285
    4. ' ' → logprob: -12.538201332092285
    5. '[]' → logprob: -14.038201332092285
    6. '=[]
' → logprob: -14.288201332092285
    7. ':' → logprob: -14.538201332092285
    8. '<|end|>' → logprob: -15.038201332092285
    9. '[:]' → logprob: -15.413201332092285
    10. ' =
' → logprob: -15.538201332092285

Token 84: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5759497284889221
    2. ' []' → logprob: -0.8259497284889221
    3. '[]
' → logprob: -12.450949668884277
    4. '[' → logprob: -13.200949668884277
    5. ' ' → logprob: -13.325949668884277
    6. ' []
' → logprob: -13.450949668884277
    7. '[]}' → logprob: -14.700949668884277
    8. '   ' → logprob: -14.950949668884277
    9. ' []

' → logprob: -15.950949668884277
    10. ' [' → logprob: -16.075950622558594

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020171262323856354
    2. ' def' → logprob: -5.145171165466309
    3. ' 
' → logprob: -5.270171165466309
    4. '    
' → logprob: -5.645171165466309
    5. '
' → logprob: -5.895171165466309
    6. '<|end|>' → logprob: -6.395171165466309
    7. ' ' → logprob: -8.020171165466309
    8. 'def' → logprob: -8.145171165466309
    9. '	def' → logprob: -9.020171165466309
    10. '```' → logprob: -9.520171165466309

Token 86: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0707559883594513
    2. ' def' → logprob: -3.070755958557129
    3. '   ' → logprob: -3.820755958557129
    4. 'de' → logprob: -12.070755958557129
    5. 'd' → logprob: -12.570755958557129
    6. '	def' → logprob: -12.570755958557129
    7. ' ' → logprob: -14.445755958557129
    8. ' d' → logprob: -16.695756912231445
    9. '  ' → logprob: -17.445756912231445
    10. ' de' → logprob: -17.570756912231445

Token 87: ' read' (ID: 1729)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.3909511864185333
    2. ' read' → logprob: -1.265951156616211
    3. ' process' → logprob: -4.140951156616211
    4. 'read' → logprob: -4.890951156616211
    5. ' append' → logprob: -4.890951156616211
    6. 'add' → logprob: -5.140951156616211
    7. ' get' → logprob: -6.265951156616211
    8. 'append' → logprob: -6.640951156616211
    9. ' handle' → logprob: -7.515951156616211
    10. 'process' → logprob: -7.515951156616211

Token 88: '_lines' (ID: 42980)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.07142593711614609
    2. '_' → logprob: -2.9464259147644043
    3. '_input' → logprob: -4.571425914764404
    4. '(' → logprob: -6.196425914764404
    5. '_lines' → logprob: -6.196425914764404
    6. '()' → logprob: -6.821425914764404
    7. 'line' → logprob: -7.946425914764404
    8. '(self' → logprob: -8.321426391601562
    9. ' _' → logprob: -9.571426391601562
    10. 'Line' → logprob: -10.071426391601562

Token 89: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18266510963439941
    2. '(self' → logprob: -1.8076651096343994
    3. '(
' → logprob: -6.43266487121582
    4. ' (' → logprob: -6.80766487121582
    5. '<|end|>' → logprob: -9.43266487121582
    6. '()' → logprob: -9.68266487121582
    7. ' ' → logprob: -10.93266487121582
    8. '(s' → logprob: -11.68266487121582
    9. 'self' → logprob: -11.68266487121582
    10. '   ' → logprob: -11.93266487121582

Token 90: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6366162896156311
    2. ',' → logprob: -0.7616162896156311
    3. 'self' → logprob: -6.511616230010986
    4. ')' → logprob: -6.886616230010986
    5. ' ):' → logprob: -7.261616230010986
    6. '):
' → logprob: -7.761616230010986
    7. ' ,' → logprob: -8.386616706848145
    8. ' ' → logprob: -10.386616706848145
    9. '   ' → logprob: -10.636616706848145
    10. '(self' → logprob: -10.761616706848145

Token 91: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13396911323070526
    2. '(' → logprob: -2.2589690685272217
    3. ':' → logprob: -4.383969306945801
    4. ':
' → logprob: -5.758969306945801
    5. '(
' → logprob: -6.383969306945801
    6. '       ' → logprob: -7.133969306945801
    7. '():' → logprob: -7.508969306945801
    8. ' (' → logprob: -7.508969306945801
    9. '():
' → logprob: -7.883969306945801
    10. 'self' → logprob: -7.883969306945801

Token 92: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -1.3221849203109741
    2. 'None' → logprob: -1.8221849203109741
    3. ' []' → logprob: -2.0721850395202637
    4. '[]' → logprob: -2.0721850395202637
    5. ' self' → logprob: -2.5721850395202637
    6. '   ' → logprob: -3.0721850395202637
    7. 'self' → logprob: -3.1971850395202637
    8. 'int' → logprob: -3.5721850395202637
    9. '[]
' → logprob: -3.8221850395202637
    10. 'for' → logprob: -4.322185039520264

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027536419220268726
    2. ':
' → logprob: -6.502753734588623
    3. '():' → logprob: -7.252753734588623
    4. '       ' → logprob: -9.002753257751465
    5. ' :' → logprob: -9.127753257751465
    6. '(' → logprob: -9.252753257751465
    7. '   ' → logprob: -9.877753257751465
    8. '<|end|>' → logprob: -9.877753257751465
    9. '):' → logprob: -10.502753257751465
    10. '(
' → logprob: -10.627753257751465

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00032402228680439293
    2. '   ' → logprob: -9.250324249267578
    3. '    ' → logprob: -10.125324249267578
    4. 'n' → logprob: -10.500324249267578
    5. '      ' → logprob: -10.625324249267578
    6. '<|end|>' → logprob: -10.875324249267578
    7. '```' → logprob: -11.125324249267578
    8. ' ' → logprob: -11.125324249267578
    9. '        
' → logprob: -11.250324249267578
    10. ' while' → logprob: -11.250324249267578

Token 95: ' import' (ID: 1588)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.207347571849823
    2. ' while' → logprob: -1.8323476314544678
    3. 'while' → logprob: -4.332347393035889
    4. ' for' → logprob: -5.207347393035889
    5. 'n' → logprob: -5.957347393035889
    6. ' lines' → logprob: -6.332347393035889
    7. '   ' → logprob: -6.832347393035889
    8. 'for' → logprob: -6.957347393035889
    9. '```' → logprob: -7.707347393035889
    10. '
' → logprob: -8.082347869873047

Token 96: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -7.465036105713807e-06
    2. '	sys' → logprob: -12.625007629394531
    3. 'sys' → logprob: -13.125007629394531
    4. ' os' → logprob: -14.000007629394531
    5. '=sys' → logprob: -14.250007629394531
    6. ' ' → logprob: -14.875007629394531
    7. ' stdin' → logprob: -16.37500762939453
    8. ' readline' → logprob: -16.62500762939453
    9. ' io' → logprob: -17.25000762939453
    10. ' ' → logprob: -17.75000762939453

Token 97: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.580838143825531
    2. '       ' → logprob: -0.830838143825531
    3. '        
' → logprob: -5.955838203430176
    4. '<|end|>' → logprob: -6.705838203430176
    5. '  
' → logprob: -8.455838203430176
    6. ' for' → logprob: -8.705838203430176
    7. '        ' → logprob: -8.955838203430176
    8. ' 
' → logprob: -9.080838203430176
    9. 'for' → logprob: -9.705838203430176
    10. '.readline' → logprob: -9.705838203430176

Token 98: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0033220804762095213
    2. '       ' → logprob: -5.878322124481201
    3. '        
' → logprob: -8.378321647644043
    4. '<|end|>' → logprob: -9.253321647644043
    5. ' 
' → logprob: -9.503321647644043
    6. '
' → logprob: -9.878321647644043
    7. '  
' → logprob: -11.128321647644043
    8. '' → logprob: -11.378321647644043
    9. '.readline' → logprob: -11.628321647644043
    10. '```' → logprob: -12.128321647644043

Token 99: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24770857393741608
    2. ' for' → logprob: -1.7477085590362549
    3. 'for' (adapté à ' for') → logprob: -3.747708559036255
    4. '
' → logprob: -3.997708559036255
    5. ' lines' → logprob: -6.122708797454834
    6. '        
' → logprob: -8.122708320617676
    7. '   ' → logprob: -8.497708320617676
    8. ' 
' → logprob: -8.997708320617676
    9. '	for' → logprob: -9.622708320617676
    10. ' ' → logprob: -9.622708320617676

Token 100: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.007806773297488689
    2. ' ' → logprob: -4.882806777954102
    3. '	line' → logprob: -9.132806777954102
    4. 'line' → logprob: -9.507806777954102
    5. ' l' → logprob: -12.007806777954102
    6. ' ' → logprob: -12.382806777954102
    7. ' lin' → logprob: -12.507806777954102
    8. ' _' → logprob: -13.632806777954102
    9. '  ' → logprob: -14.632806777954102
    10. ' li' → logprob: -14.882806777954102

Token 101: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00043567578541114926
    2. 'in' → logprob: -8.375435829162598
    3. ' ' → logprob: -8.500435829162598
    4. '_' → logprob: -15.250435829162598
    5. 's' → logprob: -15.500435829162598
    6. '  ' → logprob: -15.625435829162598
    7. '_in' → logprob: -15.750435829162598
    8. '	in' → logprob: -15.750435829162598
    9. 'import' → logprob: -15.937935829162598
    10. ' ' → logprob: -16.18793487548828

Token 102: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.00977379735559225
    2. 'sys' → logprob: -4.6347737312316895
    3. '	sys' → logprob: -11.509774208068848
    4. '=sys' → logprob: -12.509774208068848
    5. '(sys' → logprob: -13.009774208068848
    6. ' ' → logprob: -14.009774208068848
    7. '```' → logprob: -14.884774208068848
    8. ' iter' → logprob: -15.259774208068848
    9. '.sys' → logprob: -16.38477325439453
    10. '   ' → logprob: -16.88477325439453

Token 103: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.002541655208915472
    2. '.' → logprob: -6.252541542053223
    3. '.stdout' → logprob: -8.377541542053223
    4. ' .' → logprob: -8.752541542053223
    5. '.readline' → logprob: -8.877541542053223
    6. 'stdin' → logprob: -10.752541542053223
    7. ' stdin' → logprob: -11.002541542053223
    8. '.argv' → logprob: -11.252541542053223
    9. '.readlines' → logprob: -11.502541542053223
    10. '.stderr' → logprob: -12.002541542053223

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.365115761756897
    2. '.readline' → logprob: -1.240115761756897
    3. ' in' → logprob: -4.615115642547607
    4. '.readlines' → logprob: -5.740115642547607
    5. '.rstrip' → logprob: -6.865115642547607
    6. '.' → logprob: -7.115115642547607
    7. ':
' → logprob: -7.490115642547607
    8. ' readline' → logprob: -7.740115642547607
    9. ' :' → logprob: -8.615116119384766
    10. '.strip' → logprob: -9.115116119384766

Token 105: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016382889589294791
    2. '            ' → logprob: -8.001638412475586
    3. '            
' → logprob: -8.126638412475586
    4. '    ' → logprob: -8.876638412475586
    5. ':' → logprob: -9.001638412475586
    6. '       ' → logprob: -9.126638412475586
    7. '        ' → logprob: -9.251638412475586
    8. '.strip' → logprob: -9.376638412475586
    9. '   ' → logprob: -9.501638412475586
    10. '.rstrip' → logprob: -9.751638412475586

Token 106: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002461740979924798
    2. ' self' → logprob: -6.627461910247803
    3. '            ' → logprob: -7.502461910247803
    4. ' if' → logprob: -8.377461433410645
    5. '    ' → logprob: -9.002461433410645
    6. ' line' → logprob: -9.752461433410645
    7. '            
' → logprob: -10.002461433410645
    8. 'self' → logprob: -10.127461433410645
    9. '   ' → logprob: -10.502461433410645
    10. '        ' → logprob: -11.502461433410645

Token 107: ' =' (ID: 314)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.5285640358924866
    2. ' =' → logprob: -1.4035639762878418
    3. '.rstrip' → logprob: -2.528563976287842
    4. '=' → logprob: -2.528563976287842
    5. '.' → logprob: -6.153563976287842
    6. 'rstrip' → logprob: -6.528563976287842
    7. '_strip' → logprob: -7.278563976287842
    8. 'strip' → logprob: -7.778563976287842
    9. '=line' → logprob: -8.278564453125
    10. '.readline' → logprob: -9.778564453125

Token 108: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.048588961362838745
    2. 'line' → logprob: -3.048588991165161
    3. '	line' → logprob: -14.048588752746582
    4. ' ' → logprob: -14.923588752746582
    5. '=line' → logprob: -15.173588752746582
    6. '(line' → logprob: -16.7985897064209
    7. '#line' → logprob: -17.0485897064209
    8. '```' → logprob: -17.1735897064209
    9. 'Line' → logprob: -17.9235897064209
    10. 'lin' → logprob: -18.2985897064209

Token 109: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.20852413773536682
    2. '.rstrip' → logprob: -1.7085241079330444
    3. '.' → logprob: -4.958524227142334
    4. ' .' → logprob: -10.208523750305176
    5. 'rstrip' → logprob: -10.958523750305176
    6. 'strip' → logprob: -12.208523750305176
    7. ' strip' → logprob: -13.208523750305176
    8. '.chomp' → logprob: -14.333523750305176
    9. '.readline' → logprob: -15.208523750305176
    10. '[:-' → logprob: -15.708523750305176

Token 110: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00039468807517550886
    2. '()
' → logprob: -7.875394821166992
    3. '()

' → logprob: -12.000394821166992
    4. '())' → logprob: -12.250394821166992
    5. '()\' → logprob: -13.375394821166992
    6. '()`' → logprob: -14.500394821166992
    7. '(' → logprob: -15.125394821166992
    8. '()
' → logprob: -15.250394821166992
    9. '()>' → logprob: -15.750394821166992
    10. '()<' → logprob: -16.000394821166992

Token 111: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010478160111233592
    2. '<|end|>' → logprob: -7.751047611236572
    3. '            
' → logprob: -8.12604808807373
    4. ' if' → logprob: -9.25104808807373
    5. '       ' → logprob: -9.25104808807373
    6. '
' → logprob: -10.00104808807373
    7. 'if' → logprob: -10.25104808807373
    8. '   ' → logprob: -11.25104808807373
    9. '    
' → logprob: -12.12604808807373
    10. '```' → logprob: -12.25104808807373

Token 112: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0059620994143188
    2. ' if' → logprob: -5.505961894989014
    3. '           ' → logprob: -6.630961894989014
    4. 'self' → logprob: -7.505961894989014
    5. '       ' → logprob: -12.130962371826172
    6. '```' → logprob: -12.755962371826172
    7. '   ' → logprob: -13.380962371826172
    8. ' self' → logprob: -13.630962371826172
    9. '               ' → logprob: -14.380962371826172
    10. '
' → logprob: -14.755962371826172

Token 113: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01457489375025034
    2. ' line' → logprob: -4.389575004577637
    3. 'not' → logprob: -6.264575004577637
    4. ' ' → logprob: -9.139575004577637
    5. 'line' → logprob: -10.139575004577637
    6. '	not' → logprob: -13.139575004577637
    7. ' ' → logprob: -13.389575004577637
    8. '	line' → logprob: -13.389575004577637
    9. ' no' → logprob: -13.514575004577637
    10. '#line' → logprob: -13.639575004577637

Token 114: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0351124070584774
    2. '==' → logprob: -3.4101123809814453
    3. ':' → logprob: -7.160112380981445
    4. '<|end|>' → logprob: -8.160112380981445
    5. '.startswith' → logprob: -8.285112380981445
    6. '<|end|>' → logprob: -9.285112380981445
    7. ' ' → logprob: -11.410112380981445
    8. '.endswith' → logprob: -11.785112380981445
    9. ')==' → logprob: -12.035112380981445
    10. '.lower' → logprob: -12.160112380981445

Token 115: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010404328349977732
    2. '           ' → logprob: -7.126040458679199
    3. 'self' → logprob: -9.0010404586792
    4. ' self' → logprob: -9.5010404586792
    5. '                
' → logprob: -10.8760404586792
    6. '   ' → logprob: -12.5010404586792
    7. '              ' → logprob: -12.8760404586792
    8. '                   ' → logprob: -13.0010404586792
    9. '<|end|>' → logprob: -13.5010404586792
    10. '            
' → logprob: -13.6260404586792

Token 116: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2540411949157715
    2. ' self' → logprob: -1.5040411949157715
    3. '                   ' → logprob: -6.2540411949157715
    4. '               ' → logprob: -9.12904167175293
    5. '           ' → logprob: -9.75404167175293
    6. '   ' → logprob: -11.00404167175293
    7. '	self' → logprob: -13.12904167175293
    8. '       ' → logprob: -14.50404167175293
    9. '                       ' → logprob: -14.62904167175293
    10. ' ' → logprob: -14.62904167175293

Token 117: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.00030900631099939346
    2. '.' → logprob: -8.375308990478516
    3. '.readlines' → logprob: -10.000308990478516
    4. ' .' → logprob: -10.500308990478516
    5. '	lines' → logprob: -13.250308990478516
    6. '.rows' → logprob: -14.375308990478516
    7. '.layers' → logprob: -14.625308990478516
    8. '.points' → logprob: -14.750308990478516
    9. '.readline' → logprob: -15.125308990478516
    10. '.append' → logprob: -15.250308990478516

Token 118: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004343645414337516
    2. '.' → logprob: -7.750434398651123
    3. ' .' → logprob: -12.875433921813965
    4. '.extend' → logprob: -14.750433921813965
    5. '.app' → logprob: -15.375433921813965
    6. '.add' → logprob: -15.750433921813965
    7. 'append' → logprob: -15.875433921813965
    8. '.ap' → logprob: -16.12543487548828
    9. '.setdefault' → logprob: -16.75043487548828
    10. '.Append' → logprob: -17.87543487548828

Token 119: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0007101670489646494
    2. '(' → logprob: -7.2507100105285645
    3. '(l' → logprob: -16.125709533691406
    4. '(lines' → logprob: -17.125709533691406
    5. '(li' → logprob: -17.375709533691406
    6. '=line' → logprob: -17.500709533691406
    7. '(
' → logprob: -18.125709533691406
    8. '[line' → logprob: -18.625709533691406
    9. '(layer' → logprob: -18.875709533691406
    10. '(Line' → logprob: -19.000709533691406

Token 120: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000891928793862462
    2. ')
' → logprob: -7.625892162322998
    3. '<|end|>' → logprob: -8.50089168548584
    4. '           ' → logprob: -9.12589168548584
    5. ' )' → logprob: -9.75089168548584
    6. '<|end|>' → logprob: -11.12589168548584
    7. '       ' → logprob: -12.25089168548584
    8. ')return' → logprob: -12.75089168548584
    9. '               ' → logprob: -12.75089168548584
    10. '
' → logprob: -12.87589168548584

Token 121: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38824042677879333
    2. '
' → logprob: -1.2632404565811157
    3. 'class' → logprob: -3.513240337371826
    4. '<|end|>' → logprob: -5.513240337371826
    5. '    
' → logprob: -5.638240337371826
    6. '

' → logprob: -8.013240814208984
    7. '<|end|>' → logprob: -8.013240814208984
    8. '```' → logprob: -8.513240814208984
    9. 'def' → logprob: -8.763240814208984
    10. '  
' → logprob: -9.138240814208984

Token 122: ' Pal' (ID: 8392)
  Prédit: ' Pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Pal' → logprob: -0.03397011384367943
    2. ' Output' → logprob: -4.408969879150391
    3. 'Palindrome' → logprob: -5.283969879150391
    4. ' String' → logprob: -5.533969879150391
    5. ' ' → logprob: -6.033969879150391
    6. ' Main' → logprob: -6.033969879150391
    7. ' Result' → logprob: -6.408969879150391
    8. ' Test' → logprob: -6.783969879150391
    9. ' Solution' → logprob: -7.033969879150391
    10. ' Processor' → logprob: -7.658969879150391

Token 123: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -1.700132997939363e-05
    2. 'ind' → logprob: -11.125017166137695
    3. 'ndrome' → logprob: -13.250017166137695
    4. 'in' → logprob: -15.875017166137695
    5. '```' → logprob: -16.250017166137695
    6. 'id' → logprob: -16.750017166137695
    7. '``' → logprob: -17.000017166137695
    8. 'Palindrome' → logprob: -18.000017166137695
    9. 'd' → logprob: -18.250017166137695
    10. '`' → logprob: -18.250017166137695

Token 124: 'Processor' (ID: 22334)
  Prédit: 'Checker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -0.0007162463734857738
    2. 'Finder' → logprob: -8.875716209411621
    3. 'Tester' → logprob: -9.000716209411621
    4. 'Verifier' → logprob: -9.375716209411621
    5. 'Analyzer' → logprob: -9.625716209411621
    6. 'Detector' → logprob: -9.875716209411621
    7. 'Processor' → logprob: -10.000716209411621
    8. 'Check' → logprob: -10.000716209411621
    9. 'Validator' → logprob: -10.250716209411621
    10. 'Counter' → logprob: -10.750716209411621

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031936357263475657
    2. ':
' → logprob: -5.7531938552856445
    3. ' :' → logprob: -11.503193855285645
    4. ':def' → logprob: -13.128193855285645
    5. '(' → logprob: -13.628193855285645
    6. ':

' → logprob: -13.878193855285645
    7. '):' → logprob: -14.878193855285645
    8. '   ' → logprob: -15.128193855285645
    9. ' :
' → logprob: -15.253193855285645
    10. '(P' → logprob: -15.628193855285645

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02679111436009407
    2. ' def' → logprob: -3.7767910957336426
    3. '    
' → logprob: -6.776791095733643
    4. '
' → logprob: -6.901791095733643
    5. 'def' → logprob: -6.901791095733643
    6. ' 
' → logprob: -8.5267915725708
    7. 'class' → logprob: -9.7767915725708
    8. '    ' → logprob: -10.6517915725708
    9. '	def' → logprob: -11.1517915725708
    10. '<|end|>' → logprob: -11.4017915725708

Token 127: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.08316228538751602
    2. 'def' (adapté à ' def') → logprob: -2.708162307739258
    3. '   ' → logprob: -4.333162307739258
    4. '    ' → logprob: -12.083162307739258
    5. 'class' → logprob: -13.083162307739258
    6. '	def' → logprob: -13.083162307739258
    7. ' ' → logprob: -13.708162307739258
    8. '```' → logprob: -14.833162307739258
    9. ':def' → logprob: -15.208162307739258
    10. 'de' → logprob: -15.333162307739258

Token 128: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.000260382192209363
    2. '__' → logprob: -9.375260353088379
    3. ' def' → logprob: -9.375260353088379
    4. ' ' → logprob: -10.500260353088379
    5. '_init' → logprob: -10.625260353088379
    6. ' init' → logprob: -11.500260353088379
    7. 'init' → logprob: -11.625260353088379
    8. ' _' → logprob: -11.750260353088379
    9. '_' → logprob: -12.125260353088379
    10. 'def' → logprob: -12.500260353088379

Token 129: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.5048530030981055e-06
    2. 'i' → logprob: -14.625001907348633
    3. 'ini' → logprob: -14.875001907348633
    4. 'in' → logprob: -15.875001907348633
    5. '_init' → logprob: -16.375001907348633
    6. 'nit' → logprob: -16.875001907348633
    7. '
' → logprob: -16.875001907348633
    8. ' init' → logprob: -16.875001907348633
    9. 'def' → logprob: -16.875001907348633
    10. 'innit' → logprob: -16.875001907348633

Token 130: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.007707654032856226
    2. '__' → logprob: -4.882707595825195
    3. '__(
' → logprob: -9.382707595825195
    4. '(self' → logprob: -12.132707595825195
    5. '__((' → logprob: -12.382707595825195
    6. '(' → logprob: -12.882707595825195
    7. '_(' → logprob: -13.257707595825195
    8. '_' → logprob: -13.257707595825195
    9. '___' → logprob: -14.382707595825195
    10. ' (' → logprob: -14.757707595825195

Token 131: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016202930361032486
    2. ' self' → logprob: -4.391202926635742
    3. ')' → logprob: -5.891202926635742
    4. '):
' → logprob: -7.141202926635742
    5. '   ' → logprob: -10.141202926635742
    6. '):' → logprob: -10.266202926635742
    7. '):

' → logprob: -10.766202926635742
    8. '
' → logprob: -11.266202926635742
    9. ' )' → logprob: -12.391202926635742
    10. ' ' → logprob: -12.391202926635742

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12967047095298767
    2. '):' → logprob: -2.6296703815460205
    3. ' ,' → logprob: -3.5046703815460205
    4. ' ):' → logprob: -4.3796706199646
    5. '):
' → logprob: -5.6296706199646
    6. 'self' → logprob: -5.8796706199646
    7. ')' → logprob: -9.129670143127441
    8. ' self' → logprob: -9.254670143127441
    9. ' )' → logprob: -9.254670143127441
    10. ' ):
' → logprob: -9.254670143127441

Token 133: ' lines' (ID: 8698)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5235967636108398
    2. ' input' → logprob: -1.7735967636108398
    3. 'lines' → logprob: -1.7735967636108398
    4. ' lines' → logprob: -3.02359676361084
    5. 'pal' → logprob: -4.64859676361084
    6. 'inputs' → logprob: -5.52359676361084
    7. 'strings' → logprob: -6.27359676361084
    8. ' inputs' → logprob: -6.52359676361084
    9. 'handler' → logprob: -7.52359676361084
    10. ' strings' → logprob: -7.77359676361084

Token 134: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07604823261499405
    2. ':' → logprob: -2.7010481357574463
    3. '):
' → logprob: -5.451048374176025
    4. ' ):' → logprob: -6.701048374176025
    5. '=[]' → logprob: -8.201047897338867
    6. '=' → logprob: -9.451047897338867
    7. ')' → logprob: -9.451047897338867
    8. '=None' → logprob: -9.701047897338867
    9. ' :' → logprob: -10.326047897338867
    10. ':list' → logprob: -10.701047897338867

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005004895501770079
    2. ' self' → logprob: -8.625500679016113
    3. 'self' → logprob: -8.875500679016113
    4. '<|end|>' → logprob: -9.250500679016113
    5. '   ' → logprob: -10.000500679016113
    6. ',' → logprob: -10.875500679016113
    7. '      ' → logprob: -12.250500679016113
    8. '        
' → logprob: -12.375500679016113
    9. ')' → logprob: -13.125500679016113
    10. ' ' → logprob: -13.500500679016113

Token 136: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5815140604972839
    2. 'self' (adapté à ' self') → logprob: -0.8315140604972839
    3. '       ' → logprob: -5.20651388168335
    4. ' lines' → logprob: -10.456514358520508
    5. ' ' → logprob: -10.956514358520508
    6. '   ' → logprob: -11.456514358520508
    7. '	self' → logprob: -11.706514358520508
    8. ' ' → logprob: -12.456514358520508
    9. 'lines' → logprob: -12.706514358520508
    10. '        ' → logprob: -13.956514358520508

Token 137: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.008174104616045952
    2. '.' → logprob: -5.508173942565918
    3. ' .' → logprob: -6.383173942565918
    4. '_lines' → logprob: -6.508173942565918
    5. ' lines' → logprob: -7.758173942565918
    6. 'lines' → logprob: -8.008173942565918
    7. '	lines' → logprob: -9.633173942565918
    8. ' =' → logprob: -10.008173942565918
    9. '.s' → logprob: -12.258173942565918
    10. '=' → logprob: -12.258173942565918

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029774438589811325
    2. '=' → logprob: -3.5297744274139404
    3. ' ' → logprob: -10.90477466583252
    4. ')' → logprob: -13.77977466583252
    5. ' =
' → logprob: -13.77977466583252
    6. '.' → logprob: -14.02977466583252
    7. '<|end|>' → logprob: -14.15477466583252
    8. '    ' → logprob: -14.77977466583252
    9. '   ' → logprob: -14.77977466583252
    10. '=[]' → logprob: -14.90477466583252

Token 139: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.10022079944610596
    2. 'lines' → logprob: -2.3502206802368164
    3. '	lines' → logprob: -11.850220680236816
    4. '(lines' → logprob: -13.100220680236816
    5. '   ' → logprob: -14.225220680236816
    6. ' ' → logprob: -14.475220680236816
    7. '    ' → logprob: -14.475220680236816
    8. ' ' → logprob: -14.475220680236816
    9. '_lines' → logprob: -14.725220680236816
    10. 'line' → logprob: -14.850220680236816

Token 140: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4621955156326294
    2. '   ' → logprob: -1.3371955156326294
    3. '<|end|>' → logprob: -2.46219539642334
    4. 'def' → logprob: -4.71219539642334
    5. '    
' → logprob: -4.96219539642334
    6. '

' → logprob: -5.71219539642334
    7. '<|end|>' → logprob: -6.46219539642334
    8. ' def' → logprob: -7.96219539642334
    9. '  
' → logprob: -8.33719539642334
    10. '       ' → logprob: -8.58719539642334

Token 141: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11346913129091263
    2. '   ' → logprob: -2.488469123840332
    3. '

' → logprob: -4.363469123840332
    4. 'def' → logprob: -5.238469123840332
    5. '    
' → logprob: -5.488469123840332
    6. '<|end|>' → logprob: -7.113469123840332
    7. ' def' → logprob: -7.488469123840332
    8. '       ' → logprob: -8.363469123840332
    9. '  
' → logprob: -8.988469123840332
    10. '
    
' → logprob: -9.488469123840332

Token 142: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01278403215110302
    2. ' self' → logprob: -4.762784004211426
    3. 'def' → logprob: -5.887784004211426
    4. '       ' → logprob: -6.637784004211426
    5. '   ' → logprob: -10.012784004211426
    6. ' def' → logprob: -10.762784004211426
    7. ' ' → logprob: -12.762784004211426
    8. '	self' → logprob: -13.137784004211426
    9. '    ' → logprob: -13.887784004211426
    10. '
' → logprob: -14.012784004211426

Token 143: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.3752715587615967
    2. '.' → logprob: -2.1252715587615967
    3. '.results' → logprob: -2.1252715587615967
    4. ' .' → logprob: -3.7502715587615967
    5. 'results' → logprob: -4.125271797180176
    6. '._' → logprob: -4.750271797180176
    7. '_pal' → logprob: -4.875271797180176
    8. '.process' → logprob: -5.625271797180176
    9. '_results' → logprob: -5.750271797180176
    10. '.check' → logprob: -5.750271797180176

Token 144: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.021990982815623283
    2. 'alid' → logprob: -3.896991014480591
    3. 'rocess' → logprob: -7.271990776062012
    4. 'alin' → logprob: -8.771990776062012
    5. 'r' → logprob: -9.021990776062012
    6. 'ro' → logprob: -9.146990776062012
    7. 'alad' → logprob: -9.271990776062012
    8. 'alist' → logprob: -9.896990776062012
    9. 'rocessing' → logprob: -10.771990776062012
    10. 'results' → logprob: -11.021990776062012

Token 145: 'indrome' (ID: 66540)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.019495513290166855
    2. 'indrome' → logprob: -4.019495487213135
    3. '```' → logprob: -8.019495964050293
    4. '_' → logprob: -8.519495964050293
    5. '_ind' → logprob: -9.144495964050293
    6. '   ' → logprob: -9.769495964050293
    7. '_indices' → logprob: -9.831995964050293
    8. '_check' → logprob: -10.331995964050293
    9. '       ' → logprob: -10.331995964050293
    10. 's' → logprob: -10.581995964050293

Token 146: '_check' (ID: 15847)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.036192938685417175
    2. '_checker' → logprob: -3.9111928939819336
    3. '_count' → logprob: -5.161192893981934
    4. '_results' → logprob: -5.661192893981934
    5. '_counts' → logprob: -5.661192893981934
    6. '_indices' → logprob: -7.411192893981934
    7. '_check' → logprob: -7.786192893981934
    8. '_strings' → logprob: -7.911192893981934
    9. 'es' → logprob: -8.161192893981934
    10. '_counter' → logprob: -8.411192893981934

Token 147: 'ers' (ID: 409)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.006048247218132019
    2. 'ers' → logprob: -5.131048202514648
    3. 'cker' → logprob: -10.131048202514648
    4. 'e' → logprob: -11.256048202514648
    5. 'checker' → logprob: -11.506048202514648
    6. 'ker' → logprob: -11.756048202514648
    7. '_checker' → logprob: -12.006048202514648
    8. '   ' → logprob: -12.131048202514648
    9. 'ar' → logprob: -12.381048202514648
    10. '```' → logprob: -12.756048202514648

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020566880702972412
    2. '=' → logprob: -3.895566940307617
    3. '=[]' → logprob: -10.895566940307617
    4. ' ' → logprob: -12.770566940307617
    5. 's' → logprob: -13.395566940307617
    6. '[' → logprob: -14.145566940307617
    7. ' =[' → logprob: -14.520566940307617
    8. '[:]' → logprob: -15.520566940307617
    9. '[]' → logprob: -15.645566940307617
    10. ']' → logprob: -15.770566940307617

Token 149: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.38555586338043213
    2. '[' → logprob: -1.8855558633804321
    3. ' []' → logprob: -1.8855558633804321
    4. '[]' → logprob: -4.135555744171143
    5. ' [
' → logprob: -9.6355562210083
    6. '[class' → logprob: -9.6355562210083
    7. '[list' → logprob: -9.6355562210083
    8. '[self' → logprob: -9.7605562210083
    9. '[int' → logprob: -10.5105562210083
    10. '[List' → logprob: -10.6355562210083

Token 150: 'Palindrome' (ID: 121196)
  Prédit: 'Palindrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Palindrome' → logprob: -0.01252977829426527
    2. ' Pal' → logprob: -4.3875298500061035
    3. ' Palin' → logprob: -12.137529373168945
    4. 'Pal' → logprob: -12.512529373168945
    5. ' palindrome' → logprob: -12.637529373168945
    6. ']' → logprob: -13.012529373168945
    7. '           ' → logprob: -14.012529373168945
    8. ' ' → logprob: -14.012529373168945
    9. '   ' → logprob: -14.262529373168945
    10. 'Whitespace' → logprob: -14.762529373168945

Token 151: 'Checker' (ID: 39016)
  Prédit: 'Checker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -5.796184723294573e-06
    2. 'Check' → logprob: -12.500005722045898
    3. 'checker' → logprob: -14.625005722045898
    4. 'C' → logprob: -15.125005722045898
    5. 'Ch' → logprob: -15.750005722045898
    6. '_checker' → logprob: -15.750005722045898
    7. '   ' → logprob: -16.0000057220459
    8. '       ' → logprob: -16.2500057220459
    9. ' checker' → logprob: -16.3750057220459
    10. 'Che' → logprob: -16.5000057220459

Token 152: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.005476129241287708
    2. '(string' → logprob: -5.505475997924805
    3. '(' → logprob: -7.130475997924805
    4. '(s' → logprob: -7.630475997924805
    5. '(l' → logprob: -9.380475997924805
    6. '(word' → logprob: -10.880475997924805
    7. '(text' → logprob: -13.380475997924805
    8. '(x' → logprob: -13.630475997924805
    9. 'string' → logprob: -13.880475997924805
    10. '(li' → logprob: -14.130475997924805

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009788085706532001
    2. ' )' → logprob: -4.6347880363464355
    3. ')]' → logprob: -11.884788513183594
    4. '   ' → logprob: -12.009788513183594
    5. ' for' → logprob: -12.759788513183594
    6. '           ' → logprob: -13.009788513183594
    7. '.strip' → logprob: -13.009788513183594
    8. '       ' → logprob: -13.259788513183594
    9. '    ' → logprob: -13.384788513183594
    10. ')
' → logprob: -13.384788513183594

Token 154: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.007344419602304697
    2. 'for' → logprob: -5.1323442459106445
    3. ')' → logprob: -6.7573442459106445
    4. ' )' → logprob: -9.632344245910645
    5. ']' → logprob: -9.757344245910645
    6. '       ' → logprob: -10.257344245910645
    7. ' ' → logprob: -10.632344245910645
    8. ' ]' → logprob: -10.757344245910645
    9. '           ' → logprob: -11.132344245910645
    10. '   ' → logprob: -11.382344245910645

Token 155: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0021783350966870785
    2. ' ' → logprob: -6.502178192138672
    3. 'line' → logprob: -7.377178192138672
    4. ' self' → logprob: -11.127178192138672
    5. '	line' → logprob: -11.127178192138672
    6. ' ' → logprob: -11.377178192138672
    7. '  ' → logprob: -12.752178192138672
    8. ' in' → logprob: -13.877178192138672
    9. ' linha' → logprob: -14.252178192138672
    10. 'self' → logprob: -14.377178192138672

Token 156: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017137357499450445
    2. 'in' → logprob: -6.376713752746582
    3. ' ' → logprob: -11.501713752746582
    4. ' ' → logprob: -14.876713752746582
    5. 'self' → logprob: -15.251713752746582
    6. ' self' → logprob: -15.376713752746582
    7. '	in' → logprob: -16.001712799072266
    8. ')' → logprob: -16.501712799072266
    9. ' ]' → logprob: -16.626712799072266
    10. ']' → logprob: -16.626712799072266

Token 157: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.49872341752052307
    2. ' self' → logprob: -1.1237233877182007
    3. 'self' → logprob: -2.8737235069274902
    4. 'lines' → logprob: -4.49872350692749
    5. ' ' → logprob: -11.748723030090332
    6. ' ' → logprob: -13.248723030090332
    7. '   ' → logprob: -13.498723030090332
    8. '	lines' → logprob: -13.748723030090332
    9. '(lines' → logprob: -14.248723030090332
    10. ' s' → logprob: -14.498723030090332

Token 158: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002631238894537091
    2. ' ]' → logprob: -8.375263214111328
    3. '       ' → logprob: -11.250263214111328
    4. ']
' → logprob: -11.625263214111328
    5. '   ' → logprob: -12.375263214111328
    6. ')]' → logprob: -12.500263214111328
    7. ')' → logprob: -13.250263214111328
    8. '])' → logprob: -14.750263214111328
    9. ']

' → logprob: -16.000263214111328
    10. '           ' → logprob: -16.625263214111328

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058620184659957886
    2. 'def' → logprob: -2.9336202144622803
    3. '
' → logprob: -6.183619976043701
    4. ' def' → logprob: -6.558619976043701
    5. '<|end|>' → logprob: -8.68362045288086
    6. '    
' → logprob: -10.30862045288086
    7. '	def' → logprob: -11.30862045288086
    8. ' ' → logprob: -11.30862045288086
    9. '<|end|>' → logprob: -11.43362045288086
    10. '

' → logprob: -12.80862045288086

Token 160: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.837811088189483e-05
    2. ' def' → logprob: -9.625068664550781
    3. '   ' → logprob: -13.125068664550781
    4. ' ' → logprob: -15.375068664550781
    5. '
' → logprob: -17.87506866455078
    6. '  ' → logprob: -19.50006866455078
    7. '	def' → logprob: -19.87506866455078
    8. '    
' → logprob: -20.12506866455078
    9. 'class' → logprob: -20.62506866455078
    10. '

' → logprob: -21.37506866455078

Token 161: ' count' (ID: 3605)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.526409387588501
    2. 'process' → logprob: -1.651409387588501
    3. ' count' → logprob: -2.526409387588501
    4. ' check' → logprob: -2.776409387588501
    5. ' get' → logprob: -3.526409387588501
    6. 'count' → logprob: -3.901409387588501
    7. 'check' → logprob: -4.401409149169922
    8. 'get' → logprob: -5.401409149169922
    9. ' all' → logprob: -5.526409149169922
    10. 'all' → logprob: -6.151409149169922

Token 162: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.008720578625798225
    2. '_' → logprob: -4.758720397949219
    3. '_self' → logprob: -10.258720397949219
    4. '_s' → logprob: -10.883720397949219
    5. '_p' → logprob: -11.758720397949219
    6. '_pres' → logprob: -11.758720397949219
    7. '_occ' → logprob: -11.883720397949219
    8. '_unique' → logprob: -12.758720397949219
    9. '_all' → logprob: -12.883720397949219
    10. '_words' → logprob: -13.008720397949219

Token 163: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.018206950277090073
    2. 'indrome' → logprob: -4.01820707321167
    3. 'd' → logprob: -11.018206596374512
    4. '_' → logprob: -11.893206596374512
    5. '_ind' → logprob: -12.268206596374512
    6. '```' → logprob: -12.643206596374512
    7. '   ' → logprob: -12.768206596374512
    8. 'e' → logprob: -12.893206596374512
    9. 'inde' → logprob: -13.143206596374512
    10. 'indent' → logprob: -13.393206596374512

Token 164: 'romes' (ID: 159600)
  Prédit: 'romes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'romes' → logprob: -0.006273475009948015
    2. 'rome' → logprob: -5.50627326965332
    3. 'ind' → logprob: -6.50627326965332
    4. 'rom' → logprob: -7.63127326965332
    5. 'd' → logprob: -9.50627326965332
    6. 'r' → logprob: -9.88127326965332
    7. 'es' → logprob: -10.38127326965332
    8. 'indrome' → logprob: -11.13127326965332
    9. 'omes' → logprob: -11.63127326965332
    10. 'rones' → logprob: -12.00627326965332

Token 165: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00544008519500494
    2. '(' → logprob: -5.2554402351379395
    3. ' (' → logprob: -8.505439758300781
    4. 'self' → logprob: -12.880439758300781
    5. '(s' → logprob: -14.755439758300781
    6. ' ' → logprob: -14.880439758300781
    7. '   ' → logprob: -15.255439758300781
    8. '(
' → logprob: -16.13043975830078
    9. '()' → logprob: -16.25543975830078
    10. ' self' → logprob: -16.25543975830078

Token 166: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.022939348593354225
    2. ')' → logprob: -3.897939443588257
    3. 'self' → logprob: -6.522939205169678
    4. '):
' → logprob: -7.397939205169678
    5. ' ):' → logprob: -8.522939682006836
    6. '(self' → logprob: -9.772939682006836
    7. '   ' → logprob: -11.272939682006836
    8. ' )' → logprob: -11.522939682006836
    9. '       ' → logprob: -11.647939682006836
    10. ',' → logprob: -12.147939682006836

Token 167: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004160787910223007
    2. '(' → logprob: -5.6291608810424805
    3. ':' → logprob: -8.25416088104248
    4. ' ->' → logprob: -8.75416088104248
    5. ' (' → logprob: -9.87916088104248
    6. '():' → logprob: -10.12916088104248
    7. '       ' → logprob: -10.87916088104248
    8. '   ' → logprob: -11.75416088104248
    9. 'self' → logprob: -12.00416088104248
    10. '->' → logprob: -12.12916088104248

Token 168: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3869137763977051
    2. 'int' → logprob: -1.136913776397705
    3. ' ' → logprob: -11.386913299560547
    4. ' sum' → logprob: -11.761913299560547
    5. ' self' → logprob: -11.886913299560547
    6. '(int' → logprob: -12.261913299560547
    7. 'self' → logprob: -12.886913299560547
    8. 'sum' → logprob: -13.011913299560547
    9. '0' → logprob: -13.386913299560547
    10. '   ' → logprob: -13.511913299560547

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005544055253267288
    2. ':
' → logprob: -5.255544185638428
    3. '       ' → logprob: -9.38054370880127
    4. '():' → logprob: -9.38054370880127
    5. '):' → logprob: -9.38054370880127
    6. '(self' → logprob: -10.88054370880127
    7. ':self' → logprob: -11.63054370880127
    8. ':return' → logprob: -12.00554370880127
    9. '):
' → logprob: -12.13054370880127
    10. '   ' → logprob: -12.13054370880127

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0062798745930194855
    2. ' return' → logprob: -5.256279945373535
    3. 'return' → logprob: -7.131279945373535
    4. ' sum' → logprob: -10.006279945373535
    5. 'sum' → logprob: -10.131279945373535
    6. '
' → logprob: -10.506279945373535
    7. '0' → logprob: -10.881279945373535
    8. '    ' → logprob: -11.006279945373535
    9. 'count' → logprob: -11.006279945373535
    10. '      ' → logprob: -11.131279945373535

Token 171: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7655384540557861
    2. 'return' (adapté à ' return') → logprob: -1.3905384540557861
    3. '       ' → logprob: -1.7655384540557861
    4. 'sum' → logprob: -2.515538454055786
    5. ' sum' → logprob: -3.515538454055786
    6. 'count' → logprob: -5.640538215637207
    7. ' count' → logprob: -8.015538215637207
    8. '
' → logprob: -8.890538215637207
    9. 'result' → logprob: -9.265538215637207
    10. '   ' → logprob: -10.015538215637207

Token 172: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.014328152872622013
    2. 'sum' → logprob: -4.2643280029296875
    3. ' len' → logprob: -8.764328002929688
    4. 'len' → logprob: -12.139328002929688
    5. ' ' → logprob: -13.639328002929688
    6. '   ' → logprob: -14.139328002929688
    7. ' ' → logprob: -14.889328002929688
    8. ' self' → logprob: -15.264328002929688
    9. '	sum' → logprob: -15.264328002929688
    10. '(sum' → logprob: -16.014328002929688

Token 173: '(check' (ID: 40506)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0537846088409424
    2. '(check' → logprob: -1.3037846088409424
    3. '(p' → logprob: -1.5537846088409424
    4. '(pc' → logprob: -1.8037846088409424
    5. '([' → logprob: -6.678784370422363
    6. '(c' → logprob: -6.803784370422363
    7. '(
' → logprob: -8.053784370422363
    8. '(self' → logprob: -8.178784370422363
    9. '((' → logprob: -8.553784370422363
    10. '(ch' → logprob: -9.303784370422363

Token 174: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.003713380778208375
    2. '.er' → logprob: -6.253713607788086
    3. '.is' → logprob: -6.378713607788086
    4. '.' → logprob: -10.128713607788086
    5. '_er' → logprob: -11.253713607788086
    6. ' .' → logprob: -11.753713607788086
    7. ' er' → logprob: -11.878713607788086
    8. 'r' → logprob: -12.128713607788086
    9. '   ' → logprob: -12.753713607788086
    10. '._' → logprob: -13.378713607788086

Token 175: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.026413502171635628
    2. '.' → logprob: -3.6514134407043457
    3. ' .' → logprob: -9.526413917541504
    4. '   ' → logprob: -10.776413917541504
    5. ').' → logprob: -11.901413917541504
    6. '(is' → logprob: -12.651413917541504
    7. 'is' → logprob: -13.026413917541504
    8. ' ' → logprob: -13.526413917541504
    9. '       ' → logprob: -13.651413917541504
    10. '().' → logprob: -13.651413917541504

Token 176: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.0003878934367094189
    2. '_' → logprob: -7.875387668609619
    3. '_p' → logprob: -12.250388145446777
    4. '_pa' → logprob: -13.500388145446777
    5. ' _' → logprob: -13.875388145446777
    6. '_pas' → logprob: -15.875388145446777
    7. '_pat' → logprob: -16.25038719177246
    8. 'pal' → logprob: -16.25038719177246
    9. '_pol' → logprob: -16.62538719177246
    10. '__' → logprob: -17.00038719177246

Token 177: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.007759584579616785
    2. 'ndrome' → logprob: -5.2577595710754395
    3. 'd' → logprob: -6.2577595710754395
    4. 'ind' → logprob: -8.257760047912598
    5. '_' → logprob: -8.882760047912598
    6. 'rome' → logprob: -9.132760047912598
    7. 'e' → logprob: -11.507760047912598
    8. 'dr' → logprob: -11.757760047912598
    9. 'r' → logprob: -11.757760047912598
    10. '```' → logprob: -12.007760047912598

Token 178: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6932802200317383
    2. '())' → logprob: -0.6932802200317383
    3. ' ())' → logprob: -9.818280220031738
    4. ' ()' → logprob: -10.068280220031738
    5. ')' → logprob: -12.068280220031738
    6. '()))' → logprob: -12.318280220031738
    7. '()]' → logprob: -12.318280220031738
    8. '()
' → logprob: -12.443280220031738
    9. '()==' → logprob: -12.693280220031738
    10. '())
' → logprob: -12.693280220031738

Token 179: ' for' (ID: 395)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4980330467224121
    2. '()' → logprob: -0.9980330467224121
    3. ')' → logprob: -3.748033046722412
    4. ' ())' → logprob: -10.24803352355957
    5. 'for' → logprob: -10.62303352355957
    6. ' ()' → logprob: -11.24803352355957
    7. ' )' → logprob: -11.49803352355957
    8. ' for' → logprob: -11.99803352355957
    9. '(' → logprob: -12.12303352355957
    10. '())
' → logprob: -12.74803352355957

Token 180: ' checker' (ID: 75924)
  Prédit: ' checker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' checker' → logprob: -0.14811944961547852
    2. ' self' → logprob: -2.2731194496154785
    3. 'checker' → logprob: -3.6481194496154785
    4. 'self' → logprob: -4.7731194496154785
    5. ' ' → logprob: -9.39811897277832
    6. ' check' → logprob: -10.02311897277832
    7. '_checker' → logprob: -10.14811897277832
    8. 'Checker' → logprob: -11.77311897277832
    9. '  ' → logprob: -12.89811897277832
    10. 'check' → logprob: -13.14811897277832

Token 181: ' in' (ID: 306)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6405634880065918
    2. ')' → logprob: -2.140563488006592
    3. 'self' → logprob: -2.140563488006592
    4. ' )' → logprob: -2.140563488006592
    5. ' in' → logprob: -2.265563488006592
    6. ' ' → logprob: -4.265563488006592
    7. 's' → logprob: -6.890563488006592
    8. ' ),' → logprob: -8.14056396484375
    9. ' _' → logprob: -8.26556396484375
    10. ' s' → logprob: -9.01556396484375

Token 182: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.42871689796447754
    2. ' self' → logprob: -1.0537168979644775
    3. ' ' → logprob: -12.178716659545898
    4. '	self' → logprob: -12.428716659545898
    5. '[self' → logprob: -13.678716659545898
    6. '
' → logprob: -13.803716659545898
    7. '(self' → logprob: -13.928716659545898
    8. ')' → logprob: -14.053716659545898
    9. '   ' → logprob: -14.428716659545898
    10. '       ' → logprob: -14.428716659545898

Token 183: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.001760148094035685
    2. '.' → logprob: -6.376760005950928
    3. ' .' → logprob: -9.876760482788086
    4. ').' → logprob: -13.751760482788086
    5. ' ' → logprob: -14.001760482788086
    6. 'pal' → logprob: -14.251760482788086
    7. '_pal' → logprob: -14.251760482788086
    8. '.
' → logprob: -14.501760482788086
    9. '._' → logprob: -14.876760482788086

Token 184: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.0008426225394941866
    2. 'alin' → logprob: -8.125843048095703
    3. 'alid' → logprob: -8.250843048095703
    4. 'alist' → logprob: -9.500843048095703
    5. 'a' → logprob: -9.625843048095703
    6. 'aline' → logprob: -9.875843048095703
    7. 'alad' → logprob: -10.875843048095703
    8. 'ali' → logprob: -11.750843048095703
    9. 'indrome' → logprob: -12.000843048095703
    10. 'alink' → logprob: -12.625843048095703

Token 185: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.00977096613496542
    2. 'ind' → logprob: -4.75977087020874
    3. 'inder' → logprob: -7.25977087020874
    4. 'inde' → logprob: -8.884771347045898
    5. '_' → logprob: -10.259771347045898
    6. 'e' → logprob: -10.259771347045898
    7. 'ine' → logprob: -10.259771347045898
    8. 'in' → logprob: -10.509771347045898
    9. 'ndrome' → logprob: -10.634771347045898
    10. 'inator' → logprob: -10.759771347045898

Token 186: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -0.007034801412373781
    2. 's' → logprob: -5.007034778594971
    3. 'check' → logprob: -9.632035255432129
    4. ')' → logprob: -9.632035255432129
    5. 'self' → logprob: -9.632035255432129
    6. '_' → logprob: -10.007035255432129
    7. '_)' → logprob: -11.382035255432129
    8. '_checker' → logprob: -11.507035255432129
    9. '   ' → logprob: -11.757035255432129
    10. '       ' → logprob: -12.382035255432129

Token 187: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.012558743357658386
    2. 'er' → logprob: -4.387558937072754
    3. ')' → logprob: -11.512558937072754
    4. '_' → logprob: -11.512558937072754
    5. ' ers' → logprob: -11.512558937072754
    6. '```' → logprob: -12.887558937072754
    7. 'rs' → logprob: -13.137558937072754
    8. '   ' → logprob: -13.387558937072754
    9. '[' → logprob: -13.387558937072754
    10. 'e' → logprob: -13.762558937072754

Token 188: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.751746746478602e-05
    2. ')
' → logprob: -10.75004768371582
    3. ' )' → logprob: -10.87504768371582
    4. '       ' → logprob: -12.75004768371582
    5. '())' → logprob: -13.00004768371582
    6. '))' → logprob: -14.62504768371582
    7. '   ' → logprob: -14.87504768371582
    8. ')return' → logprob: -15.00004768371582
    9. '()' → logprob: -15.62504768371582
    10. ')`' → logprob: -15.75004768371582

Token 189: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1462400108575821
    2. '<|end|>' → logprob: -2.271239995956421
    3. '#' → logprob: -4.021240234375
    4. '```' → logprob: -5.021240234375
    5. '\n' → logprob: -5.646240234375
    6. '   ' → logprob: -6.896240234375
    7. '[' → logprob: -7.771240234375
    8. '\' → logprob: -7.771240234375
    9. ' ' → logprob: -7.896240234375
    10. 'n' → logprob: -7.896240234375

Token 190: ' Pal' (ID: 8392)
  Prédit: ' Main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Main' → logprob: -0.14323964715003967
    2. ' Pal' → logprob: -2.893239736557007
    3. 'Main' → logprob: -3.143239736557007
    4. ' Application' → logprob: -4.518239498138428
    5. ' Output' → logprob: -5.268239498138428
    6. ' Runner' → logprob: -5.268239498138428
    7. 'Palindrome' → logprob: -5.518239498138428
    8. ' Solution' → logprob: -5.768239498138428
    9. ' Program' → logprob: -6.393239498138428
    10. ' Result' → logprob: -6.643239498138428

Token 191: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.0007175540085881948
    2. 'ind' → logprob: -7.250717639923096
    3. 'ndrome' → logprob: -13.250717163085938
    4. 'in' → logprob: -13.500717163085938
    5. 'i' → logprob: -13.875717163085938
    6. '``' → logprob: -14.125717163085938
    7. '```' → logprob: -14.375717163085938
    8. 'd' → logprob: -14.750717163085938
    9. '`' → logprob: -15.500717163085938
    10. 'e' → logprob: -15.750717163085938

Token 192: 'Application' (ID: 6817)
  Prédit: 'Checker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -0.9073600769042969
    2. 'Processor' → logprob: -1.0323600769042969
    3. 'Counter' → logprob: -1.9073600769042969
    4. 'Printer' → logprob: -4.032360076904297
    5. 'Runner' → logprob: -4.282360076904297
    6. 'App' → logprob: -4.407360076904297
    7. 'Analyzer' → logprob: -4.907360076904297
    8. 'Handler' → logprob: -5.157360076904297
    9. 'Reporter' → logprob: -5.407360076904297
    10. 'Report' → logprob: -5.407360076904297

Token 193: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013536323967855424
    2. ' :' → logprob: -9.75013542175293
    3. ':
' → logprob: -10.12513542175293
    4. '():' → logprob: -10.87513542175293
    5. '(' → logprob: -11.50013542175293
    6. ':def' → logprob: -12.37513542175293
    7. '):' → logprob: -13.75013542175293
    8. ':**' → logprob: -14.50013542175293
    9. '>:' → logprob: -14.75013542175293
    10. '<|end|>' → logprob: -15.25013542175293

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018728324212133884
    2. ' def' → logprob: -6.376873016357422
    3. '    ' → logprob: -10.001873016357422
    4. '    
' → logprob: -10.126873016357422
    5. '
' → logprob: -10.251873016357422
    6. 'def' → logprob: -10.751873016357422
    7. 'class' → logprob: -12.001873016357422
    8. '<|end|>' → logprob: -12.251873016357422
    9. ' class' → logprob: -12.876873016357422
    10. ':' → logprob: -13.001873016357422

Token 195: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.38903382420539856
    2. 'def' (adapté à ' def') → logprob: -1.1390337944030762
    3. '   ' → logprob: -6.139033794403076
    4. '    ' → logprob: -13.139034271240234
    5. '	def' → logprob: -14.139034271240234
    6. 'class' → logprob: -14.639034271240234
    7. ' ' → logprob: -16.014034271240234
    8. 'de' → logprob: -16.139034271240234
    9. '  ' → logprob: -16.764034271240234
    10. '```' → logprob: -17.014034271240234

Token 196: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.38342782855033875
    2. ' def' → logprob: -1.5084278583526611
    3. '__' → logprob: -3.758427858352661
    4. '_init' → logprob: -4.008427619934082
    5. 'def' → logprob: -4.008427619934082
    6. 'init' → logprob: -4.133427619934082
    7. ' init' → logprob: -4.258427619934082
    8. '_' → logprob: -5.883427619934082
    9. ' ' → logprob: -6.508427619934082
    10. '   ' → logprob: -7.258427619934082

Token 197: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.813969957875088e-05
    2. ' init' → logprob: -10.875067710876465
    3. '_init' → logprob: -11.125067710876465
    4. '__' → logprob: -11.625067710876465
    5. 'i' → logprob: -12.000067710876465
    6. '```' → logprob: -12.000067710876465
    7. 'def' → logprob: -12.250067710876465
    8. 'int' → logprob: -13.000067710876465
    9. 'new' → logprob: -13.625067710876465
    10. 'in' → logprob: -13.875067710876465

Token 198: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00197526509873569
    2. '__' → logprob: -6.251975059509277
    3. '__(
' → logprob: -10.126975059509277
    4. '(self' → logprob: -12.376975059509277
    5. '_(' → logprob: -13.751975059509277
    6. '__((' → logprob: -14.376975059509277
    7. '(' → logprob: -15.251975059509277
    8. '_' → logprob: -15.501975059509277
    9. '__('' → logprob: -16.376976013183594
    10. '___' → logprob: -16.876976013183594

Token 199: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.363617962459102e-05
    2. ')' → logprob: -9.625083923339844
    3. ' self' → logprob: -11.750083923339844
    4. '):
' → logprob: -12.125083923339844
    5. '
' → logprob: -13.125083923339844
    6. '   ' → logprob: -13.500083923339844
    7. '       ' → logprob: -15.000083923339844
    8. '(self' → logprob: -15.875083923339844
    9. ')
' → logprob: -16.000083923339844
    10. '	self' → logprob: -16.875083923339844

Token 200: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027287723496556282
    2. 'self' → logprob: -3.777287721633911
    3. '):' → logprob: -5.90228796005249
    4. ',self' → logprob: -7.65228796005249
    5. ' ,' → logprob: -7.90228796005249
    6. '(self' → logprob: -8.777287483215332
    7. '):
' → logprob: -8.777287483215332
    8. ')' → logprob: -9.402287483215332
    9. ' self' → logprob: -10.402287483215332
    10. '   ' → logprob: -11.777287483215332

Token 201: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002519180765375495
    2. '       ' → logprob: -6.002519130706787
    3. '   ' → logprob: -10.377519607543945
    4. ' self' → logprob: -11.752519607543945
    5. '
' → logprob: -12.627519607543945
    6. '):
' → logprob: -15.377519607543945
    7. ')' → logprob: -15.377519607543945
    8. '```' → logprob: -15.377519607543945
    9. '(self' → logprob: -15.877519607543945
    10. '     ' → logprob: -16.252519607543945

Token 202: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.022463293746113777
    2. ' self' → logprob: -3.897463321685791
    3. '       ' → logprob: -6.272463321685791
    4. '   ' → logprob: -11.022462844848633
    5. 'def' → logprob: -11.397462844848633
    6. '	self' → logprob: -13.397462844848633
    7. '
' → logprob: -14.397462844848633
    8. 'pass' → logprob: -14.897462844848633
    9. ' ' → logprob: -15.022462844848633
    10. '(self' → logprob: -15.022462844848633

Token 203: '.input' (ID: 18322)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.525829553604126
    2. ' handler' → logprob: -1.525829553604126
    3. ' lines' → logprob: -2.400829553604126
    4. ' processor' → logprob: -3.400829553604126
    5. '_handler' → logprob: -4.150829315185547
    6. '_input' → logprob: -4.525829315185547
    7. 'handler' → logprob: -4.650829315185547
    8. '   ' → logprob: -4.650829315185547
    9. 'input' → logprob: -5.025829315185547
    10. ' _' → logprob: -5.525829315185547

Token 204: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -9.491498531133402e-06
    2. '_handle' → logprob: -12.000009536743164
    3. 'Handler' → logprob: -14.000009536743164
    4. '_' → logprob: -14.125009536743164
    5. 'handler' → logprob: -14.500009536743164
    6. '_reader' → logprob: -14.500009536743164
    7. '_handlers' → logprob: -16.000009536743164
    8. '_controller' → logprob: -16.625009536743164
    9. '_parser' → logprob: -16.750009536743164
    10. 's' → logprob: -16.750009536743164

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2254658043384552
    2. '=' → logprob: -1.6004657745361328
    3. '.' → logprob: -10.600465774536133
    4. ' ' → logprob: -11.100465774536133
    5. ' =
' → logprob: -12.725465774536133
    6. '.read' → logprob: -12.975465774536133
    7. '_' → logprob: -12.975465774536133
    8. '   ' → logprob: -13.725465774536133
    9. ')' → logprob: -14.100465774536133
    10. '    ' → logprob: -14.100465774536133

Token 206: ' Input' (ID: 10090)
  Prédit: ' Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Input' → logprob: -0.1002068892121315
    2. 'Input' → logprob: -2.3502068519592285
    3. '	Input' → logprob: -15.350207328796387
    4. ' input' → logprob: -18.10020637512207
    5. '\Input' → logprob: -19.22520637512207
    6. '<Input' → logprob: -19.60020637512207
    7. '_Input' → logprob: -19.85020637512207
    8. '_input' → logprob: -20.22520637512207
    9. 'input' → logprob: -21.22520637512207
    10. '.Input' → logprob: -22.10020637512207

Token 207: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -2.7848862373502925e-05
    2. '_Handler' → logprob: -10.625027656555176
    3. '_handler' → logprob: -12.875027656555176
    4. ' Handler' → logprob: -14.375027656555176
    5. 'Hand' → logprob: -15.250027656555176
    6. 'Handle' → logprob: -16.750028610229492
    7. '   ' → logprob: -16.750028610229492
    8. '_' → logprob: -17.125028610229492
    9. '       ' → logprob: -17.125028610229492
    10. '_HANDLER' → logprob: -17.875028610229492

Token 208: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41332605481147766
    2. '
' → logprob: -1.6633260250091553
    3. '<|end|>' → logprob: -2.4133260250091553
    4. '()' → logprob: -3.7883260250091553
    5. '       ' → logprob: -4.413326263427734
    6. '()
' → logprob: -4.663326263427734
    7. 'def' → logprob: -5.038326263427734
    8. '    
' → logprob: -5.413326263427734
    9. '<|end|>' → logprob: -6.663326263427734
    10. '()

' → logprob: -7.538326263427734

Token 209: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010457674972712994
    2. '
' → logprob: -4.635457515716553
    3. 'def' → logprob: -8.010457992553711
    4. '    
' → logprob: -8.135457992553711
    5. ' def' → logprob: -10.010457992553711
    6. '<|end|>' → logprob: -11.135457992553711
    7. '        
' → logprob: -12.135457992553711
    8. '       ' → logprob: -12.760457992553711
    9. '	def' → logprob: -12.885457992553711
    10. '

' → logprob: -13.260457992553711

Token 210: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.13341930508613586
    2. 'def' → logprob: -2.1334192752838135
    3. ' self' → logprob: -5.508419513702393
    4. '       ' → logprob: -6.633419513702393
    5. '
' → logprob: -7.508419513702393
    6. '   ' → logprob: -8.133419036865234
    7. ' def' → logprob: -8.633419036865234
    8. '        
' → logprob: -11.383419036865234
    9. '	self' → logprob: -11.508419036865234
    10. ' ' → logprob: -11.633419036865234

Token 211: '.processor' (ID: 152556)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.01709054224193096
    2. '.' → logprob: -4.392090320587158
    3. '.lines' → logprob: -5.642090320587158
    4. '.processor' → logprob: -7.392090320587158
    5. '.process' → logprob: -8.392090797424316
    6. ' .' → logprob: -9.517090797424316
    7. '.output' → logprob: -10.642090797424316
    8. '._' → logprob: -10.892090797424316
    9. '.input' → logprob: -11.142090797424316
    10. 'pal' → logprob: -12.142090797424316

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869110345840454
    2. '=' → logprob: -1.1369110345840454
    3. '.' → logprob: -11.136911392211914
    4. ' ' → logprob: -11.886911392211914
    5. '_' → logprob: -12.011911392211914
    6. 's' → logprob: -12.261911392211914
    7. '   ' → logprob: -13.011911392211914
    8. ')' → logprob: -13.511911392211914
    9. ' =
' → logprob: -13.886911392211914
    10. '<|end|>' → logprob: -14.386911392211914

Token 213: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6342325806617737
    2. ' None' → logprob: -0.7592325806617737
    3. 'Palindrome' → logprob: -7.134232521057129
    4. ' Pal' → logprob: -7.259232521057129
    5. 'Pal' → logprob: -9.134232521057129
    6. '(None' → logprob: -11.509232521057129
    7. ' ' → logprob: -12.259232521057129
    8. '_None' → logprob: -13.259232521057129
    9. ' none' → logprob: -13.759232521057129
    10. 'none' → logprob: -13.884232521057129

Token 214: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0168349239975214
    2. '   ' → logprob: -4.141834735870361
    3. '    
' → logprob: -7.391834735870361
    4. '

' → logprob: -9.14183521270752
    5. 'def' → logprob: -10.39183521270752
    6. '<|end|>' → logprob: -10.39183521270752
    7. '        
' → logprob: -12.64183521270752
    8. '  
' → logprob: -12.64183521270752
    9. ' 
' → logprob: -12.76683521270752
    10. ' def' → logprob: -13.14183521270752

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03599907085299492
    2. '
' → logprob: -3.410999059677124
    3. 'def' → logprob: -6.160999298095703
    4. '    
' → logprob: -8.785999298095703
    5. ' def' → logprob: -9.410999298095703
    6. '        
' → logprob: -13.535999298095703
    7. '<|end|>' → logprob: -13.660999298095703
    8. '

' → logprob: -13.910999298095703
    9. '	def' → logprob: -14.160999298095703
    10. '```' → logprob: -14.785999298095703

Token 216: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.029948566108942032
    2. ' def' → logprob: -3.5299484729766846
    3. '   ' → logprob: -8.529948234558105
    4. '
' → logprob: -15.154948234558105
    5. '	def' → logprob: -15.279948234558105
    6. ' ' → logprob: -16.654949188232422
    7. 'd' → logprob: -17.279949188232422
    8. 'de' → logprob: -17.279949188232422
    9. '    
' → logprob: -18.654949188232422
    10. '  ' → logprob: -19.404949188232422

Token 217: ' run' (ID: 2461)
  Prédit: ' run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.014206995256245136
    2. 'run' → logprob: -4.264206886291504
    3. ' start' → logprob: -10.264206886291504
    4. 'start' → logprob: -12.764206886291504
    5. ' main' → logprob: -13.014206886291504
    6. '	run' → logprob: -13.889206886291504
    7. '_run' → logprob: -13.889206886291504
    8. '   ' → logprob: -14.639206886291504
    9. ' ' → logprob: -14.764206886291504
    10. ' process' → logprob: -15.889206886291504

Token 218: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.026490597054362297
    2. '(' → logprob: -3.6514906883239746
    3. ' (' → logprob: -9.401490211486816
    4. '(
' → logprob: -9.526490211486816
    5. 'self' → logprob: -10.901490211486816
    6. '()' → logprob: -11.526490211486816
    7. '(s' → logprob: -13.151490211486816
    8. '   ' → logprob: -13.526490211486816
    9. '(

' → logprob: -14.276490211486816
    10. ' ' → logprob: -14.401490211486816

Token 219: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032355827279388905
    2. '):
' → logprob: -5.878235816955566
    3. ')' → logprob: -8.378235816955566
    4. 'self' → logprob: -8.628235816955566
    5. ' ):' → logprob: -11.753235816955566
    6. '):
' → logprob: -12.253235816955566
    7. '(self' → logprob: -12.878235816955566
    8. '   ' → logprob: -13.253235816955566
    9. '():' → logprob: -13.628235816955566
    10. '       ' → logprob: -14.003235816955566

Token 220: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007675010710954666
    2. ':' → logprob: -5.5076751708984375
    3. '       ' → logprob: -6.6326751708984375
    4. '():' → logprob: -6.7576751708984375
    5. '(' → logprob: -7.3826751708984375
    6. ':
' → logprob: -8.882675170898438
    7. '():
' → logprob: -9.007675170898438
    8. 'self' → logprob: -9.132675170898438
    9. '   ' → logprob: -9.632675170898438
    10. '):' → logprob: -10.632675170898438

Token 221: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.25193798542022705
    2. ' None' → logprob: -1.501937985420227
    3. '   ' → logprob: -12.126937866210938
    4. 'int' → logprob: -13.126937866210938
    5. ')' → logprob: -15.001937866210938
    6. ' ' → logprob: -15.001937866210938
    7. 'No' → logprob: -15.376937866210938
    8. '```' → logprob: -15.626937866210938
    9. '(None' → logprob: -15.751937866210938
    10. 'void' → logprob: -16.251937866210938

Token 222: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05773842707276344
    2. ':
' → logprob: -2.9327385425567627
    3. '       ' → logprob: -5.932738304138184
    4. '   ' → logprob: -9.557738304138184
    5. '():' → logprob: -9.807738304138184
    6. '):
' → logprob: -10.932738304138184
    7. '
' → logprob: -11.307738304138184
    8. '):' → logprob: -11.432738304138184
    9. '():
' → logprob: -11.557738304138184
    10. '<|end|>' → logprob: -11.557738304138184

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010664248111424968
    2. 'self' → logprob: -9.250106811523438
    3. '
' → logprob: -12.375106811523438
    4. ' self' → logprob: -12.625106811523438
    5. '        
' → logprob: -13.500106811523438
    6. '```' → logprob: -13.875106811523438
    7. '   ' → logprob: -15.250106811523438
    8. '      ' → logprob: -16.125106811523438
    9. '  
' → logprob: -16.375106811523438
    10. '           ' → logprob: -17.125106811523438

Token 224: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.21046802401542664
    2. '       ' → logprob: -1.710468053817749
    3. ' self' → logprob: -4.71046781539917
    4. '   ' → logprob: -11.710468292236328
    5. ' ' → logprob: -12.835468292236328
    6. '	self' → logprob: -13.585468292236328
    7. '
' → logprob: -15.335468292236328
    8. '        
' → logprob: -15.335468292236328
    9. '```' → logprob: -15.335468292236328
    10. '      ' → logprob: -16.085468292236328

Token 225: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.00014191943046171218
    2. '.' → logprob: -8.875142097473145
    3. 'input' → logprob: -14.000142097473145
    4. ' .' → logprob: -14.625142097473145
    5. '.output' → logprob: -15.000142097473145
    6. '   ' → logprob: -16.125141143798828
    7. '.import' → logprob: -16.750141143798828
    8. '.INPUT' → logprob: -17.625141143798828
    9. '.inputs' → logprob: -17.875141143798828
    10. '```' → logprob: -17.875141143798828

Token 226: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -5.512236498361744e-07
    2. '_handle' → logprob: -14.750000953674316
    3. 'handler' → logprob: -16.75
    4. '_hand' → logprob: -18.0
    5. '_' → logprob: -18.625
    6. '_Handler' → logprob: -20.0
    7. 'Handler' → logprob: -20.625
    8. '_HANDLER' → logprob: -20.75
    9. '_controller' → logprob: -20.875
    10. ' handler' → logprob: -21.375

Token 227: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -2.935296834039036e-06
    2. '.' → logprob: -13.50000286102295
    3. '.readline' → logprob: -14.50000286102295
    4. ' .' → logprob: -14.62500286102295
    5. '.readlines' → logprob: -14.62500286102295
    6. '.write' → logprob: -16.625003814697266
    7. '.run' → logprob: -17.750003814697266
    8. '.load' → logprob: -19.875003814697266
    9. '.print' → logprob: -20.000003814697266
    10. '.receive' → logprob: -20.875003814697266

Token 228: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.250001907348633
    3. '_line' → logprob: -16.750001907348633
    4. '_l' → logprob: -18.750001907348633
    5. '_li' → logprob: -18.875001907348633
    6. 'lines' → logprob: -18.875001907348633
    7. '_LINES' → logprob: -18.875001907348633
    8. ' _' → logprob: -19.125001907348633
    9. '```' → logprob: -19.125001907348633
    10. '(_' → logprob: -20.000001907348633

Token 229: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.04859895631670952
    2. '()' → logprob: -3.0485990047454834
    3. '       ' → logprob: -12.298599243164062
    4. '()
' → logprob: -12.423599243164062
    5. '()

' → logprob: -12.798599243164062
    6. '()\' → logprob: -15.923599243164062
    7. '()`' → logprob: -17.173599243164062
    8. '(
' → logprob: -18.548599243164062
    9. '
' → logprob: -18.673599243164062
    10. '()


' → logprob: -19.673599243164062

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014444950968027115
    2. '
' → logprob: -4.389444828033447
    3. 'self' → logprob: -6.264444828033447
    4. ' self' → logprob: -10.889445304870605
    5. '        
' → logprob: -11.889445304870605
    6. '```' → logprob: -13.014445304870605
    7. '   ' → logprob: -13.389445304870605
    8. '
' → logprob: -15.139445304870605
    9. 'if' → logprob: -15.514445304870605
    10. '    
' → logprob: -16.13944435119629

Token 231: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0006771695916540921
    2. ' self' → logprob: -7.500677108764648
    3. '       ' → logprob: -9.000677108764648
    4. 'if' → logprob: -15.000677108764648
    5. '```' → logprob: -15.750677108764648
    6. '   ' → logprob: -16.12567710876465
    7. '	self' → logprob: -16.87567710876465
    8. '
' → logprob: -17.00067710876465
    9. ' ' → logprob: -17.62567710876465
    10. '        
' → logprob: -18.25067710876465

Token 232: '.processor' (ID: 152556)
  Prédit: '.processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.processor' → logprob: -0.0001137947037932463
    2. '.' → logprob: -9.625113487243652
    3. '.process' → logprob: -10.125113487243652
    4. ' .' → logprob: -12.375113487243652
    5. '.p' → logprob: -14.000113487243652
    6. 'processor' → logprob: -14.125113487243652
    7. '.processing' → logprob: -14.625113487243652
    8. '.proc' → logprob: -14.875113487243652
    9. '.pro' → logprob: -15.625113487243652
    10. '.manager' → logprob: -15.875113487243652

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. '<|end|>' → logprob: -16.201414108276367
    4. ' ' → logprob: -16.951414108276367
    5. '=create' → logprob: -16.951414108276367
    6. ' =
' → logprob: -17.451414108276367
    7. '=
' → logprob: -17.826414108276367
    8. '＝' → logprob: -17.951414108276367
    9. '=

' → logprob: -18.076414108276367
    10. ')' → logprob: -18.576414108276367

Token 234: ' Pal' (ID: 8392)
  Prédit: 'Palindrome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Palindrome' → logprob: -0.012360013090074062
    2. ' Pal' → logprob: -4.512360095977783
    3. 'Pal' → logprob: -6.637360095977783
    4. 'Palette' → logprob: -15.012359619140625
    5. ' palindrome' → logprob: -15.387359619140625
    6. ' Palin' → logprob: -15.887359619140625
    7. '_pal' → logprob: -16.762359619140625
    8. ' ' → logprob: -17.012359619140625
    9. ' Palme' → logprob: -17.512359619140625
    10. 'Palm' → logprob: -17.637359619140625

Token 235: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.0002989968634210527
    2. 'ind' → logprob: -8.125299453735352
    3. 'ndrome' → logprob: -12.875299453735352
    4. 'in' → logprob: -16.37529945373535
    5. 'id' → logprob: -16.87529945373535
    6. '
' → logprob: -17.37529945373535
    7. '``' → logprob: -17.50029945373535
    8. 'инд' → logprob: -17.62529945373535
    9. '_ind' → logprob: -18.00029945373535
    10. '   ' → logprob: -18.00029945373535

Token 236: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -5.512236498361744e-07
    2. 'Process' → logprob: -14.875000953674316
    3. 'processor' → logprob: -15.750000953674316
    4. ' Processor' → logprob: -17.25
    5. '_processor' → logprob: -18.25
    6. 'Proces' → logprob: -18.875
    7. 'Processing' → logprob: -19.375
    8. ' processor' → logprob: -19.625
    9. 'Processed' → logprob: -20.875
    10. 'Checker' → logprob: -21.25

Token 237: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00015955790877342224
    2. '(' → logprob: -8.75015926361084
    3. '(
' → logprob: -14.12515926361084
    4. 'self' → logprob: -15.50015926361084
    5. ' (' → logprob: -15.75015926361084
    6. '       ' → logprob: -17.875160217285156
    7. ' self' → logprob: -18.875160217285156
    8. '(s' → logprob: -19.250160217285156
    9. '((' → logprob: -19.375160217285156
    10. '(this' → logprob: -19.500160217285156

Token 238: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -2.093505099765025e-05
    2. '.' → logprob: -11.125020980834961
    3. 'input' → logprob: -12.375020980834961
    4. '.lines' → logprob: -13.750020980834961
    5. ' .' → logprob: -14.625020980834961
    6. '.inputs' → logprob: -15.000020980834961
    7. ' input' → logprob: -17.50002098083496
    8. '<input' → logprob: -17.87502098083496
    9. '.user' → logprob: -18.50002098083496
    10. '	input' → logprob: -18.87502098083496

Token 239: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.0015079588629305363
    2. 'handler' → logprob: -6.501507759094238
    3. 'Handler' → logprob: -13.751507759094238
    4. ' handler' → logprob: -14.376507759094238
    5. '_hand' → logprob: -14.376507759094238
    6. '   ' → logprob: -14.626507759094238
    7. 's' → logprob: -14.751507759094238
    8. '_handle' → logprob: -14.876507759094238
    9. 'lines' → logprob: -15.251507759094238
    10. 'andler' → logprob: -15.501507759094238

Token 240: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -5.3358446166384965e-05
    2. '.' → logprob: -10.000053405761719
    3. ' .' → logprob: -11.875053405761719
    4. '.readlines' → logprob: -15.500053405761719
    5. '	lines' → logprob: -16.12505340576172
    6. '.layers' → logprob: -16.25005340576172
    7. '.rows' → logprob: -16.37505340576172
    8. ').' → logprob: -16.50005340576172
    9. '.line' → logprob: -16.75005340576172
    10. '
' → logprob: -16.87505340576172

Token 241: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021987867075949907
    2. ')
' → logprob: -6.127198696136475
    3. '       ' → logprob: -11.377199172973633
    4. ' )' → logprob: -13.502199172973633
    5. ')
' → logprob: -15.377199172973633
    6. '<|end|>' → logprob: -15.752199172973633
    7. '   ' → logprob: -15.877199172973633
    8. ')

' → logprob: -16.377199172973633
    9. '))' → logprob: -16.627199172973633
    10. '())' → logprob: -17.377199172973633

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0064217825420200825
    2. 'print' → logprob: -5.1314215660095215
    3. 'count' → logprob: -8.50642204284668
    4. '
' → logprob: -8.63142204284668
    5. '   ' → logprob: -9.75642204284668
    6. 'return' → logprob: -11.13142204284668
    7. 'result' → logprob: -11.25642204284668
    8. '```' → logprob: -11.38142204284668
    9. ' print' → logprob: -11.50642204284668
    10. 'output' → logprob: -13.88142204284668

Token 243: ' count' (ID: 3605)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03830070048570633
    2. 'count' (adapté à ' count') → logprob: -3.2883007526397705
    3. 'result' → logprob: -8.538300514221191
    4. '       ' → logprob: -9.913300514221191
    5. ' print' → logprob: -11.288300514221191
    6. ' count' → logprob: -13.913300514221191
    7. '   ' → logprob: -15.163300514221191
    8. 'pal' → logprob: -16.538301467895508
    9. '```' → logprob: -17.538301467895508
    10. 'total' → logprob: -17.663301467895508

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01473254058510065
    2. '=' → logprob: -4.264732360839844
    3. '_' → logprob: -8.014732360839844
    4. '_pal' → logprob: -8.389732360839844
    5. '   ' → logprob: -11.889732360839844
    6. '_=' → logprob: -14.139732360839844
    7. '=_' → logprob: -14.264732360839844
    8. '_p' → logprob: -14.389732360839844
    9. '_of' → logprob: -15.139732360839844
    10. ' ' → logprob: -15.264732360839844

Token 245: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3132617771625519
    2. 'self' → logprob: -1.3132617473602295
    3. '       ' → logprob: -17.438261032104492
    4. '	self' → logprob: -17.813261032104492
    5. '(self' → logprob: -18.313261032104492
    6. ' ' → logprob: -18.438261032104492
    7. ' ' → logprob: -18.563261032104492
    8. '[self' → logprob: -19.938261032104492
    9. '_self' → logprob: -19.938261032104492
    10. '   ' → logprob: -20.313261032104492

Token 246: '.processor' (ID: 152556)
  Prédit: '.processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.processor' → logprob: -1.0280383548888494e-06
    2. 'processor' → logprob: -14.375000953674316
    3. '.' → logprob: -14.750000953674316
    4. ' .' → logprob: -16.875001907348633
    5. '.proc' → logprob: -17.375001907348633
    6. '.process' → logprob: -18.625001907348633
    7. ' processor' → logprob: -18.750001907348633
    8. '.provider' → logprob: -19.125001907348633
    9. '.p' → logprob: -19.375001907348633
    10. '.processing' → logprob: -20.750001907348633

Token 247: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -2.248469718324486e-05
    2. '.' → logprob: -10.750022888183594
    3. ' .' → logprob: -14.500022888183594
    4. 'count' → logprob: -14.875022888183594
    5. '   ' → logprob: -17.750022888183594
    6. '       ' → logprob: -18.750022888183594
    7. '	count' → logprob: -19.250022888183594
    8. ').' → logprob: -19.250022888183594
    9. '.get' → logprob: -19.625022888183594
    10. '.Count' → logprob: -20.000022888183594

Token 248: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -14.000001907348633
    3. '_p' → logprob: -15.250001907348633
    4. 'pal' → logprob: -15.375001907348633
    5. '_pat' → logprob: -16.500001907348633
    6. '_pa' → logprob: -17.125001907348633
    7. '_pres' → logprob: -18.125001907348633
    8. '_pol' → logprob: -18.875001907348633
    9. '_par' → logprob: -19.125001907348633
    10. '('_' → logprob: -19.500001907348633

Token 249: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -6.945094355614856e-05
    2. '_' → logprob: -10.750069618225098
    3. 'indrome' → logprob: -11.750069618225098
    4. '_ind' → logprob: -12.000069618225098
    5. '```' → logprob: -12.125069618225098
    6. 'i' → logprob: -12.250069618225098
    7. 'in' → logprob: -12.750069618225098
    8. '
' → logprob: -13.250069618225098
    9. '_
' → logprob: -13.625069618225098
    10. '``' → logprob: -13.875069618225098

Token 250: 'romes' (ID: 159600)
  Prédit: 'romes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'romes' → logprob: -0.00025037277373485267
    2. 'es' → logprob: -9.125250816345215
    3. 'omes' → logprob: -9.500250816345215
    4. 'r' → logprob: -10.000250816345215
    5. 'rom' → logprob: -11.875250816345215
    6. 'rades' → logprob: -12.875250816345215
    7. 'rome' → logprob: -13.000250816345215
    8. 'rones' → logprob: -13.125250816345215
    9. 'ar' → logprob: -13.125250816345215
    10. 'ot' → logprob: -13.625250816345215

Token 251: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0044013941660523415
    2. 'print' → logprob: -5.629401206970215
    3. '
' → logprob: -7.504401206970215
    4. ' print' → logprob: -8.629401206970215
    5. '<|end|>' → logprob: -10.004401206970215
    6. '        
' → logprob: -11.629401206970215
    7. '```' → logprob: -12.379401206970215
    8. ',' → logprob: -13.254401206970215
    9. '' → logprob: -13.379401206970215
    10. '
' → logprob: -13.629401206970215

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004116273485124111
    2. 'print' → logprob: -5.504116058349609
    3. ' print' → logprob: -10.37911605834961
    4. '```' → logprob: -12.75411605834961
    5. '
' → logprob: -13.37911605834961
    6. '   ' → logprob: -13.87911605834961
    7. '        
' → logprob: -14.37911605834961
    8. '      ' → logprob: -14.87911605834961
    9. 'return' → logprob: -16.12911605834961
    10. '' → logprob: -16.50411605834961

Token 253: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.020581480115652084
    2. '       ' → logprob: -4.020581245422363
    3. ' print' → logprob: -6.020581245422363
    4. '	print' → logprob: -16.02058219909668
    5. '```' → logprob: -16.39558219909668
    6. '
' → logprob: -17.02058219909668
    7. 'return' → logprob: -17.27058219909668
    8. '        
' → logprob: -18.14558219909668
    9. '#print' → logprob: -18.39558219909668
    10. '   ' → logprob: -18.52058219909668

Token 254: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.5046033263206482
    2. '(' → logprob: -1.004603385925293
    3. '(f' → logprob: -3.504603385925293
    4. '()' → logprob: -12.754603385925293
    5. '('' → logprob: -13.879603385925293
    6. '(
' → logprob: -13.879603385925293
    7. 'count' → logprob: -14.629603385925293
    8. '(c' → logprob: -15.629603385925293
    9. '(len' → logprob: -15.879603385925293
    10. 'f' → logprob: -15.879603385925293

Token 255: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -15.250000953674316
    4. ')`' → logprob: -18.125
    5. '()' → logprob: -18.375
    6. '   ' → logprob: -19.5
    7. '))' → logprob: -19.625
    8. '```' → logprob: -19.875
    9. '())' → logprob: -20.0
    10. '}' → logprob: -20.0

Token 256: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06526882201433182
    2. 'i' → logprob: -2.8152687549591064
    3. '
' → logprob: -6.4402689933776855
    4. 'a' → logprob: -6.5652689933776855
    5. '```' → logprob: -9.065268516540527
    6. ' if' → logprob: -9.815268516540527
    7. '#' → logprob: -10.065268516540527
    8. '  
' → logprob: -10.690268516540527
    9. '    
' → logprob: -11.065268516540527
    10. '

' → logprob: -11.565268516540527

Token 257: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01609279029071331
    2. '__' → logprob: -4.141092777252197
    3. '_' → logprob: -10.266093254089355
    4. ' ' → logprob: -10.891093254089355
    5. '_name' → logprob: -13.141093254089355
    6. '___' → logprob: -13.641093254089355
    7. ' ' → logprob: -14.516093254089355
    8. 'name' → logprob: -15.016093254089355
    9. ' ' → logprob: -15.016093254089355
    10. ' ___' → logprob: -15.391093254089355

Token 258: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04352135956287384
    2. ' __' → logprob: -3.4185214042663574
    3. ' ==' → logprob: -4.918521404266357
    4. '.__' → logprob: -6.793521404266357
    5. '__.__' → logprob: -7.668521404266357
    6. '==' → logprob: -8.2935209274292
    7. '__.' → logprob: -8.9185209274292
    8. '_' → logprob: -9.0435209274292
    9. '_main' → logprob: -9.5435209274292
    10. '.py' → logprob: -9.7935209274292

Token 259: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.173704271830502e-06
    2. '==' → logprob: -13.37500286102295
    3. ' ==' → logprob: -14.37500286102295
    4. '__.__' → logprob: -15.00000286102295
    5. '=="' → logprob: -15.87500286102295
    6. '___' → logprob: -16.125003814697266
    7. '__.' → logprob: -16.750003814697266
    8. '_' → logprob: -16.875003814697266
    9. ' __' → logprob: -17.125003814697266
    10. '____' → logprob: -17.250003814697266

Token 260: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08612607419490814
    2. '==' → logprob: -2.9611260890960693
    3. '__' → logprob: -3.5861260890960693
    4. '=="' → logprob: -5.83612585067749
    5. '=='' → logprob: -10.211126327514648
    6. '_' → logprob: -10.711126327514648
    7. ' =="' → logprob: -10.836126327514648
    8. '"' → logprob: -10.961126327514648
    9. ' =' → logprob: -11.586126327514648
    10. '=' → logprob: -11.836126327514648

Token 261: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005294715519994497
    2. ''' → logprob: -5.2552947998046875
    3. ' "__' → logprob: -9.755294799804688
    4. '__' → logprob: -13.255294799804688
    5. ' '__' → logprob: -14.880294799804688
    6. '"user' → logprob: -15.630294799804688
    7. ''"' → logprob: -15.755294799804688
    8. '"class' → logprob: -16.005294799804688
    9. '"_' → logprob: -16.005294799804688
    10. '("__' → logprob: -16.380294799804688

Token 262: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.021705813705921173
    2. '__' → logprob: -3.8967058658599854
    3. '_main' → logprob: -6.771705627441406
    4. '_MAIN' → logprob: -12.146705627441406
    5. 'built' → logprob: -12.896705627441406
    6. ' main' → logprob: -13.021705627441406
    7. 'name' → logprob: -13.021705627441406
    8. '-main' → logprob: -14.146705627441406
    9. 'm' → logprob: -14.271705627441406
    10. 'Main' → logprob: -14.396705627441406

Token 263: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0789073035120964
    2. '__' → logprob: -2.5789072513580322
    3. '__':
' → logprob: -11.328907012939453
    4. '__:' → logprob: -12.703907012939453
    5. '_' → logprob: -12.953907012939453
    6. '":' → logprob: -16.453907012939453
    7. '__["' → logprob: -16.828907012939453
    8. '__",' → logprob: -17.703907012939453
    9. '__
' → logprob: -17.953907012939453
    10. '```' → logprob: -18.078907012939453

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006609973032027483
    2. ' Pal' → logprob: -5.131609916687012
    3. 'Palindrome' → logprob: -8.006609916687012
    4. '   ' → logprob: -9.256609916687012
    5. '    
' → logprob: -9.506609916687012
    6. ' app' → logprob: -10.006609916687012
    7. 'Pal' → logprob: -10.631609916687012
    8. '    ' → logprob: -11.131609916687012
    9. ' Palin' → logprob: -11.631609916687012
    10. '
' → logprob: -11.631609916687012

Token 265: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: -0.3278747498989105
    2. ' app' → logprob: -1.452874779701233
    3. 'Palindrome' → logprob: -3.2028746604919434
    4. ' Pal' → logprob: -6.077874660491943
    5. '   ' → logprob: -6.202874660491943
    6. 'Pal' → logprob: -7.452874660491943
    7. 'application' → logprob: -10.702875137329102
    8. ' application' → logprob: -10.952875137329102
    9. '	app' → logprob: -11.327875137329102
    10. 'import' → logprob: -11.327875137329102

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5244045853614807
    2. '=' → logprob: -1.649404525756836
    3. '.run' → logprob: -1.774404525756836
    4. '.' → logprob: -3.399404525756836
    5. '_' → logprob: -4.524404525756836
    6. '.app' → logprob: -6.649404525756836
    7. ' .' → logprob: -8.524404525756836
    8. '_.' → logprob: -8.774404525756836
    9. '._' → logprob: -8.899404525756836
    10. '().' → logprob: -9.774404525756836

Token 267: ' Pal' (ID: 8392)
  Prédit: ' Pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Pal' → logprob: -0.0352930948138237
    2. 'Palindrome' → logprob: -3.4102931022644043
    3. 'Pal' → logprob: -6.410293102264404
    4. '_pal' → logprob: -14.785292625427246
    5. ' palindrome' → logprob: -15.285292625427246
    6. ' ' → logprob: -15.660292625427246
    7. ' ' → logprob: -16.035293579101562
    8. ' Palme' → logprob: -16.160293579101562
    9. ' Palin' → logprob: -16.410293579101562
    10. '_P' → logprob: -16.535293579101562

Token 268: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.0015173576539382339
    2. 'ind' → logprob: -6.501517295837402
    3. 'in' → logprob: -11.876517295837402
    4. 'inder' → logprob: -13.001517295837402
    5. 'ndrome' → logprob: -13.251517295837402
    6. 'inde' → logprob: -13.501517295837402
    7. 'id' → logprob: -15.001517295837402
    8. 'i' → logprob: -15.001517295837402
    9. 'iname' → logprob: -15.251517295837402
    10. 'incode' → logprob: -15.501517295837402

Token 269: 'Application' (ID: 6817)
  Prédit: 'Application'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Application' → logprob: -3.643152740551159e-05
    2. 'Checker' → logprob: -10.250036239624023
    3. 'App' → logprob: -14.500036239624023
    4. 'Applic' → logprob: -15.625036239624023
    5. '<Application' → logprob: -15.875036239624023
    6. '	Application' → logprob: -16.500036239624023
    7. 'Ap' → logprob: -17.375036239624023
    8. 'application' → logprob: -17.500036239624023
    9. ' Application' → logprob: -18.000036239624023
    10. ' application' → logprob: -18.875036239624023

Token 270: '()
' (ID: 1234)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9755635857582092
    2. '
' → logprob: -0.9755635857582092
    3. '.run' → logprob: -1.8505635261535645
    4. '   ' → logprob: -2.6005635261535645
    5. '    
' → logprob: -5.8505635261535645
    6. '.app' → logprob: -5.8505635261535645
    7. '  
' → logprob: -5.9755635261535645
    8. 'app' → logprob: -6.1005635261535645
    9. '.
' → logprob: -6.3505635261535645
    10. '<|end|>' → logprob: -7.3505635261535645

Token 271: '   ' (ID: 271)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.413176953792572
    2. '   ' → logprob: -1.6631770133972168
    3. ' app' → logprob: -1.9131770133972168
    4. '	app' → logprob: -7.163177013397217
    5. '.app' → logprob: -7.788177013397217
    6. '(app' → logprob: -9.788176536560059
    7. '
' → logprob: -11.163176536560059
    8. '    ' → logprob: -11.413176536560059
    9. ' ' → logprob: -12.038176536560059
    10. '    
' → logprob: -12.163176536560059

Token 272: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: -1.2664456789934775e-06
    2. ' app' → logprob: -13.750000953674316
    3. 'run' → logprob: -15.750000953674316
    4. 'ap' → logprob: -19.500001907348633
    5. '.app' → logprob: -19.500001907348633
    6. 'a' → logprob: -20.875001907348633
    7. '(app' → logprob: -23.125001907348633
    8. '.' → logprob: -23.500001907348633
    9. '.run' → logprob: -23.625001907348633
    10. '	app' → logprob: -24.125001907348633

Token 273: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.029755467548966408
    2. '.' → logprob: -3.5297553539276123
    3. ' .' → logprob: -12.279755592346191
    4. ' run' → logprob: -16.279754638671875
    5. '.
' → logprob: -16.779754638671875
    6. '.Run' → logprob: -17.029754638671875
    7. 'run' → logprob: -17.654754638671875
    8. '.`' → logprob: -17.904754638671875
    9. '.​' → logprob: -18.279754638671875
    10. ' ' → logprob: -18.404754638671875

Token 274: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023466866463422775
    2. '(' → logprob: -3.7734668254852295
    3. '()
' → logprob: -8.648467063903809
    4. '(
' → logprob: -10.148467063903809
    5. '()

' → logprob: -12.898467063903809
    6. '(

' → logprob: -13.648467063903809
    7. '()`' → logprob: -14.273467063903809
    8. ' ()' → logprob: -14.398467063903809
    9. '()<' → logprob: -15.273467063903809
    10. '()
' → logprob: -15.398467063903809


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 272
Tokens correctement prédits (1ère position, stricte): 154
Tokens correctement prédits (1ère position, avec adaptation): 171
Tokens correctement prédits (top 10): 241
Précision stricte (1ère position): 56.62%
Précision adaptée (1ère position): 62.87%
Précision (top 10): 88.60%
================================================================================
