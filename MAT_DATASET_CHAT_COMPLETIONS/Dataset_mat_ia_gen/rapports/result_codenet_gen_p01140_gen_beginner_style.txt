================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    line = input()
    if line == '':
        break
    N, M = map(int, line.split())
    if N == 0 and M == 0:
        break
    h = []
    for _ in range(N):
        h.append(int(input()))
    w = []
    for _ in range(M):
        w.append(int(input()))
    # Calculate vertical cumulative sums
    vertical = [0]
    for i in range(N):
        vertical.append(vertical[-1] + h[i])
    # Calculate horizontal cumulative sums
    horizontal = [0]
    for i in range(M):
        horizontal.append(horizontal[-1] + w[i])
    # Count squares
    count = 0
    # For all pairs of horizontal roads, calculate the segment length and check if exists in vertical segments
    segments_v = {}
    for i in range(N):
        for j in range(i+1, N+1):
            length = vertical[j] - vertical[i]
            if length in segments_v:
                segments_v[length] +=1
            else:
                segments_v[length] =1
    for i in range(M):
        for j in range(i+1, M+1):
            length = horizontal[j] - horizontal[i]
            if length in segments_v:
                count += segments_v[length]
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6314842700958252
    2. '    ' → logprob: -2.131484270095825
    3. '    
' → logprob: -2.631484270095825
    4. '\' → logprob: -2.881484270095825
    5. '\n' → logprob: -2.881484270095825
    6. ' ' → logprob: -3.256484270095825
    7. '```' → logprob: -3.256484270095825
    8. ' 
' → logprob: -3.631484270095825
    9. '  
' → logprob: -4.131484031677246
    10. '     
' → logprob: -4.256484031677246

Token 4: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4779955744743347
    2. '    ' → logprob: -1.7279956340789795
    3. ' ' → logprob: -1.9779956340789795
    4. '```' → logprob: -3.6029956340789795
    5. '       ' → logprob: -4.7279953956604
    6. '  ' → logprob: -5.3529953956604
    7. '    
' → logprob: -5.6029953956604
    8. '        
' → logprob: -6.6029953956604
    9. 'pass' → logprob: -6.7279953956604
    10. '`' → logprob: -6.7279953956604

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0779716894030571
    2. '=' → logprob: -2.7029716968536377
    3. 's' → logprob: -5.327971458435059
    4. '.' → logprob: -6.952971458435059
    5. ' ' → logprob: -7.827971458435059
    6. '   ' → logprob: -8.077971458435059
    7. '.startswith' → logprob: -8.452971458435059
    8. '       ' → logprob: -8.577971458435059
    9. '[' → logprob: -8.702971458435059
    10. '_' → logprob: -8.702971458435059

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08903379738330841
    2. 'input' → logprob: -2.464033842086792
    3. ' ' → logprob: -9.714034080505371
    4. ' f' → logprob: -10.964034080505371
    5. '=input' → logprob: -12.589034080505371
    6. ' file' → logprob: -12.839034080505371
    7. ' readline' → logprob: -12.839034080505371
    8. '   ' → logprob: -13.589034080505371
    9. ' s' → logprob: -14.089034080505371
    10. 'file' → logprob: -14.339034080505371

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007377912290394306
    2. '()' → logprob: -5.757378101348877
    3. '('' → logprob: -5.882378101348877
    4. '("("' → logprob: -7.257378101348877
    5. ''' → logprob: -8.382377624511719
    6. '```' → logprob: -8.507377624511719
    7. ')' → logprob: -9.632377624511719
    8. '"' → logprob: -10.382377624511719
    9. '("")' → logprob: -10.507377624511719
    10. '(
' → logprob: -10.757377624511719

Token 8: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1275417804718018
    2. '<|end|>' → logprob: -1.1275417804718018
    3. ' ' → logprob: -1.7525417804718018
    4. '   ' → logprob: -2.3775417804718018
    5. '    ' → logprob: -4.002541542053223
    6. '.' → logprob: -4.502541542053223
    7. '.strip' → logprob: -4.627541542053223
    8. '<|end|>' → logprob: -4.627541542053223
    9. 'if' → logprob: -5.127541542053223
    10. '\n' → logprob: -5.127541542053223

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16033034026622772
    2. ' ' → logprob: -2.785330295562744
    3. '   ' → logprob: -3.160330295562744
    4. 'if' (adapté à ' if') → logprob: -3.535330295562744
    5. '    ' → logprob: -4.535330295562744
    6. '  ' → logprob: -7.160330295562744
    7. '<|end|>' → logprob: -7.160330295562744
    8. '```' → logprob: -8.035330772399902
    9. '.' → logprob: -8.160330772399902
    10. 'i' → logprob: -8.285330772399902

Token 10: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.14371676743030548
    2. ' line' → logprob: -2.018716812133789
    3. ' ' → logprob: -7.518716812133789
    4. 'not' → logprob: -8.143716812133789
    5. 'line' → logprob: -8.643716812133789
    6. ' lines' → logprob: -11.268716812133789
    7. ' len' → logprob: -11.768716812133789
    8. '  ' → logprob: -13.018716812133789
    9. '(line' → logprob: -13.143716812133789
    10. '[line' → logprob: -13.643716812133789

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12488134950399399
    2. '.' → logprob: -3.1248812675476074
    3. '.startswith' → logprob: -3.4998812675476074
    4. '==' → logprob: -3.4998812675476074
    5. '.strip' → logprob: -4.999881267547607
    6. ' .' → logprob: -6.499881267547607
    7. ' ' → logprob: -6.749881267547607
    8. '    ' → logprob: -7.374881267547607
    9. '<|end|>' → logprob: -7.624881267547607
    10. '<|end|>' → logprob: -7.749881267547607

Token 12: ' '':
' (ID: 125614)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09209814667701721
    2. ''' → logprob: -3.0920982360839844
    3. '""' → logprob: -3.3420982360839844
    4. ' "' → logprob: -6.092098236083984
    5. '''' → logprob: -6.092098236083984
    6. ' ""' → logprob: -6.467098236083984
    7. ' '' → logprob: -7.467098236083984
    8. ' ' → logprob: -8.342098236083984
    9. ' ''' → logprob: -8.342098236083984
    10. '"":' → logprob: -11.342098236083984

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006454473827034235
    2. ' break' → logprob: -5.2564544677734375
    3. '   ' → logprob: -7.6314544677734375
    4. '    ' → logprob: -8.006454467773438
    5. '\n' → logprob: -9.506454467773438
    6. 'break' → logprob: -9.756454467773438
    7. ' ' → logprob: -9.881454467773438
    8. '        
' → logprob: -10.381454467773438
    9. '<|end|>' → logprob: -10.506454467773438
    10. '      ' → logprob: -10.631454467773438

Token 14: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.06866731494665146
    2. 'break' (adapté à ' break') → logprob: -3.068667411804199
    3. '       ' → logprob: -4.068667411804199
    4. '   ' → logprob: -6.193667411804199
    5. '	break' → logprob: -7.443667411804199
    6. '_break' → logprob: -9.9436674118042
    7. '           ' → logprob: -10.3186674118042
    8. 'Break' → logprob: -10.9436674118042
    9. ' ' → logprob: -11.0686674118042
    10. '\n' → logprob: -11.5686674118042

Token 15: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03491419181227684
    2. '    
' → logprob: -3.659914255142212
    3. '
' → logprob: -5.409914016723633
    4. 'print' → logprob: -7.034914016723633
    5. '       ' → logprob: -7.159914016723633
    6. '\n' → logprob: -7.159914016723633
    7. '        
' → logprob: -8.034914016723633
    8. '  
' → logprob: -8.284914016723633
    9. ')' → logprob: -8.659914016723633
    10. '```' → logprob: -8.909914016723633

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004766172729432583
    2. '    
' → logprob: -6.00476598739624
    3. 'print' → logprob: -6.37976598739624
    4. ' print' → logprob: -8.504766464233398
    5. '
' → logprob: -8.754766464233398
    6. '```' → logprob: -9.879766464233398
    7. '\n' → logprob: -10.879766464233398
    8. 'try' → logprob: -11.004766464233398
    9. ')' → logprob: -11.254766464233398
    10. '       ' → logprob: -11.254766464233398

Token 17: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29766845703125
    2. 'print' → logprob: -1.42266845703125
    3. ' print' → logprob: -4.17266845703125
    4. '       ' → logprob: -8.04766845703125
    5. 'try' → logprob: -8.04766845703125
    6. ' try' → logprob: -9.17266845703125
    7. ' if' → logprob: -9.54766845703125
    8. '    ' → logprob: -10.29766845703125
    9. '```' → logprob: -10.79766845703125
    10. 'if' → logprob: -10.92266845703125

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48012062907218933
    2. '=' → logprob: -1.3551206588745117
    3. '   ' → logprob: -3.3551206588745117
    4. ' ' → logprob: -3.3551206588745117
    5. '.' → logprob: -4.105120658874512
    6. 'um' → logprob: -4.855120658874512
    7. 'umber' → logprob: -4.855120658874512
    8. '-' → logprob: -5.730120658874512
    9. '=int' → logprob: -5.980120658874512
    10. '+' → logprob: -5.980120658874512

Token 19: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.632102370262146
    2. ')' → logprob: -2.0071024894714355
    3. 'line' → logprob: -2.1321024894714355
    4. ''' → logprob: -2.6321024894714355
    5. 'M' → logprob: -2.7571024894714355
    6. ' M' → logprob: -2.7571024894714355
    7. ' line' → logprob: -2.8821024894714355
    8. '<|end|>' → logprob: -3.0071024894714355
    9. 's' → logprob: -3.5071024894714355
    10. '"' → logprob: -3.5071024894714355

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07925470918416977
    2. '=' → logprob: -2.579254627227783
    3. ',' → logprob: -7.954254627227783
    4. ' ' → logprob: -12.079255104064941
    5. ')' → logprob: -12.329255104064941
    6. ' ,' → logprob: -13.829255104064941
    7. '    ' → logprob: -14.454255104064941
    8. '   ' → logprob: -14.454255104064941
    9. '  ' → logprob: -14.579255104064941
    10. '```' → logprob: -15.454255104064941

Token 21: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.04744889587163925
    2. ' line' → logprob: -3.1724488735198975
    3. 'map' → logprob: -5.672449111938477
    4. ' list' → logprob: -8.047449111938477
    5. ' ' → logprob: -8.172449111938477
    6. 'line' → logprob: -8.172449111938477
    7. ' [' → logprob: -9.922449111938477
    8. ' input' → logprob: -10.797449111938477
    9. 'list' → logprob: -11.422449111938477
    10. '[' → logprob: -12.297449111938477

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07146178930997849
    2. '(str' → logprob: -3.0714616775512695
    3. '(' → logprob: -3.8214616775512695
    4. '(lambda' → logprob: -7.3214616775512695
    5. 'str' → logprob: -11.44646167755127
    6. '(input' → logprob: -11.44646167755127
    7. 'int' → logprob: -11.44646167755127
    8. '(list' → logprob: -11.82146167755127
    9. '(eval' → logprob: -12.69646167755127
    10. '<int' → logprob: -12.69646167755127

Token 23: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.06808115541934967
    2. '(' → logprob: -3.6930811405181885
    3. '(input' → logprob: -3.6930811405181885
    4. ')' → logprob: -4.818081378936768
    5. ',' → logprob: -4.943081378936768
    6. ',line' → logprob: -7.818081378936768
    7. ',input' → logprob: -9.06808090209961
    8. 'input' → logprob: -9.81808090209961
    9. ' (' → logprob: -9.81808090209961
    10. 'line' → logprob: -10.19308090209961

Token 24: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.033768679946660995
    2. 'line' → logprob: -3.408768653869629
    3. ')' → logprob: -9.533768653869629
    4. '	line' → logprob: -10.908768653869629
    5. ' input' → logprob: -11.283768653869629
    6. '(line' → logprob: -11.908768653869629
    7. 'input' → logprob: -12.533768653869629
    8. '[line' → logprob: -12.908768653869629
    9. ' )' → logprob: -13.033768653869629
    10. ' ' → logprob: -13.658768653869629

Token 25: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.0753670185804367
    2. '.' → logprob: -2.700366973876953
    3. '().' → logprob: -5.825366973876953
    4. '.strip' → logprob: -6.450366973876953
    5. ' .' → logprob: -7.700366973876953
    6. ')' → logprob: -7.950366973876953
    7. '.readline' → logprob: -10.075366973876953
    8. '   ' → logprob: -11.325366973876953
    9. '.rstrip' → logprob: -11.450366973876953
    10. ').' → logprob: -12.075366973876953

Token 26: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2091016173362732
    2. '())' → logprob: -1.709101676940918
    3. '()' → logprob: -4.959101676940918
    4. ')' → logprob: -8.209101676940918
    5. '(','' → logprob: -8.709101676940918
    6. '(' → logprob: -9.209101676940918
    7. '()))' → logprob: -9.834101676940918
    8. '("' → logprob: -11.084101676940918
    9. '())
' → logprob: -11.834101676940918
    10. '(',' → logprob: -11.834101676940918

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0444517135620117
    2. ')' → logprob: -1.9194517135620117
    3. ':' → logprob: -2.4194517135620117
    4. '\n' → logprob: -2.4194517135620117
    5. '
' → logprob: -2.9194517135620117
    6. '    
' → logprob: -3.2944517135620117
    7. '```' → logprob: -3.2944517135620117
    8. '\' → logprob: -3.6694517135620117
    9. '[' → logprob: -3.7944517135620117
    10. ' ' → logprob: -3.9194517135620117

Token 28: ' if' (ID: 538)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7316347360610962
    2. '   ' → logprob: -2.3566346168518066
    3. ' 
' → logprob: -2.7316346168518066
    4. ' ' → logprob: -2.9816346168518066
    5. '    
' → logprob: -3.4816346168518066
    6. ')' → logprob: -3.4816346168518066
    7. '\' → logprob: -4.106634616851807
    8. 'n' → logprob: -4.106634616851807
    9. '[
' → logprob: -4.106634616851807
    10. '```' → logprob: -4.106634616851807

Token 29: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.017957935109734535
    2. 'N' → logprob: -4.267958164215088
    3. ' M' → logprob: -5.642958164215088
    4. ' not' → logprob: -9.26795768737793
    5. ' ' → logprob: -9.76795768737793
    6. 'M' → logprob: -10.14295768737793
    7. ' (' → logprob: -11.51795768737793
    8. ' ' → logprob: -12.01795768737793
    9. ' max' → logprob: -12.20545768737793
    10. '(N' → logprob: -12.39295768737793

Token 30: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6549299359321594
    2. ' <' → logprob: -1.6549298763275146
    3. ' ==' → logprob: -2.0299298763275146
    4. ' <=' → logprob: -3.1549298763275146
    5. ' >=' → logprob: -3.2799298763275146
    6. '>' → logprob: -3.7799298763275146
    7. ' %' → logprob: -3.9049298763275146
    8. '%' → logprob: -4.279930114746094
    9. '==' → logprob: -4.779930114746094
    10. ' ' → logprob: -5.279930114746094

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2530166208744049
    2. ' ' → logprob: -1.5030165910720825
    3. ' M' → logprob: -7.753016471862793
    4. 'M' → logprob: -7.753016471862793
    5. '1' → logprob: -8.503016471862793
    6. '-' → logprob: -12.815516471862793
    7. '2' → logprob: -13.128016471862793
    8. '10' → logprob: -13.378016471862793
    9. ' -' → logprob: -13.503016471862793
    10. '100' → logprob: -13.503016471862793

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003367350436747074
    2. ' ' → logprob: -5.8783674240112305
    3. 'M' → logprob: -7.6283674240112305
    4. '1' → logprob: -10.37836742401123
    5. ' M' → logprob: -10.50336742401123
    6. '-' → logprob: -11.75336742401123
    7. ' -' → logprob: -13.50336742401123
    8. '  ' → logprob: -13.87836742401123
    9. '   ' → logprob: -14.25336742401123
    10. 'N' → logprob: -14.25336742401123

Token 33: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03356363624334335
    2. ' or' → logprob: -4.033563613891602
    3. 'and' → logprob: -4.533563613891602
    4. ':' → logprob: -5.783563613891602
    5. ' ' → logprob: -7.033563613891602
    6. '   ' → logprob: -8.158563613891602
    7. '    ' → logprob: -8.408563613891602
    8. '  ' → logprob: -11.033563613891602
    9. '       ' → logprob: -11.158563613891602
    10. '      ' → logprob: -11.283563613891602

Token 34: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.01815907657146454
    2. 'M' → logprob: -4.018158912658691
    3. ' ' → logprob: -12.143158912658691
    4. '   ' → logprob: -13.643158912658691
    5. '    ' → logprob: -13.643158912658691
    6. ' ' → logprob: -14.393158912658691
    7. '<|end|>' → logprob: -14.518158912658691
    8. '  ' → logprob: -16.018159866333008
    9. '	M' → logprob: -16.643159866333008
    10. '<|end|>' → logprob: -16.768159866333008

Token 35: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006209139246493578
    2. '==' → logprob: -5.131209373474121
    3. '<|end|>' → logprob: -8.381209373474121
    4. ' ' → logprob: -11.131209373474121
    5. ' =' → logprob: -11.256209373474121
    6. '<|end|>' → logprob: -11.756209373474121
    7. '=' → logprob: -12.256209373474121
    8. '  ' → logprob: -12.506209373474121
    9. ' ' → logprob: -13.006209373474121
    10. '0' → logprob: -13.131209373474121

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08895538747310638
    2. '0' → logprob: -2.4639554023742676
    3. '<|end|>' → logprob: -11.58895492553711
    4. '  ' → logprob: -12.83895492553711
    5. '<|end|>' → logprob: -13.21395492553711
    6. ' ' → logprob: -13.96395492553711
    7. '=' → logprob: -15.08895492553711
    8. '   ' → logprob: -15.27645492553711
    9. '>' → logprob: -16.15145492553711
    10. 's' → logprob: -16.40145492553711

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009757505729794502
    2. ' ' → logprob: -4.6347575187683105
    3. '  ' → logprob: -14.322257041931152
    4. '   ' → logprob: -15.259757041931152
    5. '1' → logprob: -16.07225799560547
    6. '۰' → logprob: -16.44725799560547
    7. ' ' → logprob: -16.63475799560547
    8. '```' → logprob: -16.94725799560547
    9. '<|end|>' → logprob: -17.50975799560547
    10. ')' → logprob: -17.69725799560547

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009178895270451903
    2. '       ' → logprob: -7.625917911529541
    3. ':
' → logprob: -8.500917434692383
    4. '   ' → logprob: -8.500917434692383
    5. ' :' → logprob: -11.000917434692383
    6. '    ' → logprob: -12.750917434692383
    7. '.' → logprob: -14.250917434692383
    8. '      ' → logprob: -14.750917434692383
    9. ':return' → logprob: -14.875917434692383
    10. '     ' → logprob: -15.000917434692383

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027083540335297585
    2. ':' → logprob: -3.6520836353302
    3. '   ' → logprob: -7.277083396911621
    4. ':
' → logprob: -10.152083396911621
    5. '	' → logprob: -12.027083396911621
    6. '\t' → logprob: -12.027083396911621
    7. '	break' → logprob: -12.152083396911621
    8. '\n' → logprob: -12.402083396911621
    9. '      ' → logprob: -12.402083396911621
    10. '.' → logprob: -12.652083396911621

Token 40: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7391715049743652
    2. ' break' → logprob: -0.8641715049743652
    3. '   ' → logprob: -2.3641715049743652
    4. 'break' (adapté à ' break') → logprob: -5.364171504974365
    5. '	break' → logprob: -6.114171504974365
    6. ' ' → logprob: -10.114171981811523
    7. '           ' → logprob: -10.364171981811523
    8. '\t' → logprob: -10.614171981811523
    9. '    ' → logprob: -10.989171981811523
    10. '    
' → logprob: -11.739171981811523

Token 41: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.025848150253296
    2. '   ' → logprob: -1.025848150253296
    3. '\n' → logprob: -1.900848150253296
    4. '    
' → logprob: -2.275848150253296
    5. '```' → logprob: -4.150848388671875
    6. '<|end|>' → logprob: -5.150848388671875
    7. '\' → logprob: -5.650848388671875
    8. '  
' → logprob: -6.525848388671875
    9. ' 
' → logprob: -7.025848388671875
    10. '' → logprob: -7.275848388671875

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021479250863194466
    2. '    
' → logprob: -4.02147912979126
    3. '<|end|>' → logprob: -6.77147912979126
    4. '\n' → logprob: -7.14647912979126
    5. '
' → logprob: -7.64647912979126
    6. '```' → logprob: -8.896479606628418
    7. ')' → logprob: -9.021479606628418
    8. ',' → logprob: -9.396479606628418
    9. '#' → logprob: -9.396479606628418
    10. '  
' → logprob: -9.646479606628418

Token 43: ' h' (ID: 312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1409905105829239
    2. '[' → logprob: -2.7659904956817627
    3. 'grid' → logprob: -5.140990734100342
    4. '    ' → logprob: -5.140990734100342
    5. 'c' → logprob: -5.390990734100342
    6. ' ' → logprob: -5.515990734100342
    7. ' grid' → logprob: -5.515990734100342
    8. 'result' → logprob: -5.640990734100342
    9. 's' → logprob: -5.765990734100342
    10. 'for' → logprob: -6.140990734100342

Token 44: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.42456939816474915
    2. ' =' → logprob: -1.6745693683624268
    3. 'eight' → logprob: -2.4245693683624268
    4. 'ouses' → logprob: -4.424569606781006
    5. '_' → logprob: -4.549569606781006
    6. '=' → logprob: -4.924569606781006
    7. 'ights' → logprob: -5.174569606781006
    8. '   ' → logprob: -5.299569606781006
    9. 'ist' → logprob: -5.549569606781006
    10. ' ' → logprob: -6.174569606781006

Token 45: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.190057396888733
    2. ' [' → logprob: -1.190057396888733
    3. '[]' → logprob: -1.565057396888733
    4. '[list' → logprob: -2.6900572776794434
    5. ' []' → logprob: -3.0650572776794434
    6. ' list' → logprob: -3.5650572776794434
    7. 'list' → logprob: -3.5650572776794434
    8. '[N' → logprob: -5.440057277679443
    9. '[int' → logprob: -5.815057277679443
    10. '[max' → logprob: -7.315057277679443

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1069687083363533
    2. 'for' → logprob: -2.606968641281128
    3. ' for' → logprob: -4.231968879699707
    4. '	for' → logprob: -4.856968879699707
    5. '<|end|>' → logprob: -6.356968879699707
    6. ' ' → logprob: -6.856968879699707
    7. '[' → logprob: -7.106968879699707
    8. '    ' → logprob: -7.981968879699707
    9. 'while' → logprob: -8.356968879699707
    10. '	while' → logprob: -8.731968879699707

Token 47: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.013594263233244419
    2. ' for' → logprob: -4.388594150543213
    3. '   ' → logprob: -7.513594150543213
    4. '	for' → logprob: -7.638594150543213
    5. '[' → logprob: -10.388594627380371
    6. '    ' → logprob: -11.513594627380371
    7. ' ' → logprob: -11.763594627380371
    8. '\t' → logprob: -13.138594627380371
    9. 'while' → logprob: -13.513594627380371
    10. '_' → logprob: -14.013594627380371

Token 48: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.20667187869548798
    2. ' i' → logprob: -2.206671953201294
    3. '_' → logprob: -2.956671953201294
    4. ' ' → logprob: -3.706671953201294
    5. 'i' → logprob: -9.706671714782715
    6. ' ' → logprob: -11.706671714782715
    7. '  ' → logprob: -12.081671714782715
    8. ' ‌' → logprob: -12.081671714782715
    9. '_i' → logprob: -12.206671714782715
    10. ' I' → logprob: -12.581671714782715

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010847603902220726
    2. 'in' → logprob: -4.635847568511963
    3. ' ' → logprob: -7.260847568511963
    4. ' i' → logprob: -8.385848045349121
    5. '  ' → logprob: -9.760848045349121
    6. ' _' → logprob: -10.260848045349121
    7. 'i' → logprob: -10.385848045349121
    8. 'range' → logprob: -10.885848045349121
    9. '   ' → logprob: -12.135848045349121
    10. '_' → logprob: -12.635848045349121

Token 50: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003257927019149065
    2. ' range' → logprob: -5.753257751464844
    3. 'h' → logprob: -10.753257751464844
    4. 'ran' → logprob: -11.253257751464844
    5. 'r' → logprob: -11.378257751464844
    6. 'rang' → logprob: -11.503257751464844
    7. ' ' → logprob: -12.378257751464844
    8. 'ra' → logprob: -12.378257751464844
    9. 'ange' → logprob: -12.503257751464844
    10. '```' → logprob: -12.878257751464844

Token 51: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.6521804928779602
    2. ' (' → logprob: -1.7771804332733154
    3. ' N' → logprob: -1.9021804332733154
    4. '(' → logprob: -1.9021804332733154
    5. '(M' → logprob: -5.1521806716918945
    6. ' ' → logprob: -6.0271806716918945
    7. ' M' → logprob: -6.2771806716918945
    8. ' range' → logprob: -7.6521806716918945
    9. '(range' → logprob: -8.152180671691895
    10. 'N' → logprob: -8.527180671691895

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005570820067077875
    2. ')' → logprob: -8.125556945800781
    3. '):
' → logprob: -8.500556945800781
    4. '   ' → logprob: -10.750556945800781
    5. ':' → logprob: -10.875556945800781
    6. ' ):' → logprob: -11.125556945800781
    7. '       ' → logprob: -14.875556945800781
    8. '):
' → logprob: -15.000556945800781
    9. '():' → logprob: -15.250556945800781
    10. ' ' → logprob: -15.375556945800781

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28236663341522217
    2. '   ' → logprob: -1.7823666334152222
    3. ' ' → logprob: -3.4073667526245117
    4. '    ' → logprob: -3.5323667526245117
    5. ' h' → logprob: -4.782366752624512
    6. 'h' → logprob: -5.907366752624512
    7. '<|end|>' → logprob: -6.657366752624512
    8. '  ' → logprob: -7.532366752624512
    9. ' ' → logprob: -8.282366752624512
    10. ' s' → logprob: -8.407366752624512

Token 54: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.19658732414245605
    2. 'h' (adapté à ' h') → logprob: -1.821587324142456
    3. '   ' → logprob: -4.821587562561035
    4. ' row' → logprob: -5.071587562561035
    5. '    ' → logprob: -7.071587562561035
    6. 'row' → logprob: -7.571587562561035
    7. ' line' → logprob: -7.696587562561035
    8. 'line' → logprob: -8.446587562561035
    9. '	h' → logprob: -9.696587562561035
    10. '       ' → logprob: -10.071587562561035

Token 55: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5760149359703064
    2. '.' → logprob: -0.8260149359703064
    3. '.extend' → logprob: -10.701014518737793
    4. '.app' → logprob: -11.201014518737793
    5. '.ap' → logprob: -11.326014518737793
    6. ' =' → logprob: -11.576014518737793
    7. ' .' → logprob: -11.951014518737793
    8. '.=' → logprob: -12.826014518737793
    9. '=' → logprob: -12.951014518737793
    10. ',' → logprob: -13.576014518737793

Token 56: '(int' (ID: 2742)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.014740179292857647
    2. '(' → logprob: -4.389739990234375
    3. '(int' → logprob: -6.389739990234375
    4. '(tuple' → logprob: -7.639739990234375
    5. 'list' → logprob: -9.889739990234375
    6. '([' → logprob: -12.264739990234375
    7. ' (' → logprob: -12.639739990234375
    8. ' list' → logprob: -13.014739990234375
    9. '(map' → logprob: -13.389739990234375
    10. '(
' → logprob: -14.264739990234375

Token 57: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005276091862469912
    2. '(' → logprob: -5.255276203155518
    3. '()' → logprob: -11.00527572631836
    4. 'input' → logprob: -11.88027572631836
    5. '(
' → logprob: -12.13027572631836
    6. ')' → logprob: -12.25527572631836
    7. '())' → logprob: -12.63027572631836
    8. '(

' → logprob: -13.38027572631836
    9. '(in' → logprob: -14.00527572631836
    10. ' (' → logprob: -14.38027572631836

Token 58: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2527545392513275
    2. '())' → logprob: -1.50275456905365
    3. '()' → logprob: -7.3777546882629395
    4. '().' → logprob: -9.502754211425781
    5. '()))
' → logprob: -10.252754211425781
    6. '())
' → logprob: -10.752754211425781
    7. '(' → logprob: -10.877754211425781
    8. '()));' → logprob: -11.502754211425781
    9. '())))' → logprob: -11.627754211425781
    10. '))' → logprob: -12.127754211425781

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1389341801404953
    2. 's' → logprob: -3.6389341354370117
    3. '```' → logprob: -4.263934135437012
    4. '    ' → logprob: -4.888934135437012
    5. '    
' → logprob: -5.013934135437012
    6. ' s' → logprob: -5.138934135437012
    7. '<|end|>' → logprob: -5.263934135437012
    8. '[' → logprob: -5.388934135437012
    9. 't' → logprob: -5.388934135437012
    10. 'dp' → logprob: -5.388934135437012

Token 60: ' w' (ID: 286)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3521522283554077
    2. 's' → logprob: -2.2271523475646973
    3. 'h' → logprob: -2.8521523475646973
    4. 'dp' → logprob: -2.9771523475646973
    5. 'l' → logprob: -3.1021523475646973
    6. 'for' → logprob: -3.2271523475646973
    7. 'stack' → logprob: -3.3521523475646973
    8. 'c' → logprob: -3.4771523475646973
    9. 'm' → logprob: -3.7271523475646973
    10. 'w' (adapté à ' w') → logprob: -3.8521523475646973

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12945818901062012
    2. '=' → logprob: -2.12945818901062
    3. 'hile' → logprob: -7.129458427429199
    4. '=[]' → logprob: -7.629458427429199
    5. '   ' → logprob: -8.5044584274292
    6. 'idth' → logprob: -8.7544584274292
    7. 'h' → logprob: -8.8794584274292
    8. ' ' → logprob: -9.1294584274292
    9. ',' → logprob: -9.1294584274292
    10. 'e' → logprob: -9.6294584274292

Token 62: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0623270608484745
    2. ' []' → logprob: -3.3123271465301514
    3. 'list' → logprob: -3.9373271465301514
    4. '[' → logprob: -6.562326908111572
    5. '[int' → logprob: -6.687326908111572
    6. ' list' → logprob: -7.062326908111572
    7. '[list' → logprob: -7.812326908111572
    8. ' [' → logprob: -8.56232738494873
    9. '[h' → logprob: -9.31232738494873
    10. 'int' → logprob: -9.81232738494873

Token 63: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3067600727081299
    2. ' for' → logprob: -1.4317600727081299
    3. '   ' → logprob: -1.5567600727081299
    4. '<|end|>' → logprob: -1.8067600727081299
    5. '	for' → logprob: -2.30676007270813
    6. ' ' → logprob: -4.556759834289551
    7. '    ' → logprob: -6.181759834289551
    8. '<|end|>' → logprob: -6.931759834289551
    9. '  ' → logprob: -7.431759834289551
    10. '	' → logprob: -8.18175983428955

Token 64: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00012415809032972902
    2. ' for' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.750123977661133
    4. '	for' → logprob: -15.875123977661133
    5. '[' → logprob: -16.250123977661133
    6. '.for' → logprob: -19.250123977661133
    7. 'or' → logprob: -19.500123977661133
    8. ' ' → logprob: -19.500123977661133
    9. '[
' → logprob: -20.000123977661133
    10. '<|end|>' → logprob: -20.125123977661133

Token 65: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.10030025988817215
    2. '_' → logprob: -2.3503003120422363
    3. ' ' → logprob: -9.475299835205078
    4. ' in' → logprob: -11.975299835205078
    5. ' i' → logprob: -12.100299835205078
    6. ' range' → logprob: -12.975299835205078
    7. ' ' → logprob: -13.100299835205078
    8. '_range' → logprob: -14.725299835205078
    9. 'range' → logprob: -16.975299835205078
    10. ' _
' → logprob: -17.475299835205078

Token 66: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.15186546742916107
    2. ' in' → logprob: -2.0268654823303223
    3. '_' → logprob: -4.776865482330322
    4. 'range' → logprob: -7.651865482330322
    5. ' ' → logprob: -9.026865005493164
    6. ' _' → logprob: -9.276865005493164
    7. ' range' → logprob: -11.276865005493164
    8. '```' → logprob: -12.026865005493164
    9. '  ' → logprob: -12.276865005493164
    10. 'i' → logprob: -12.526865005493164

Token 67: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0028814300894737244
    2. ' range' → logprob: -5.8778815269470215
    3. '(range' → logprob: -9.502881050109863
    4. 'ange' → logprob: -13.752881050109863
    5. '	range' → logprob: -14.502881050109863
    6. '(' → logprob: -16.25288200378418
    7. 'rang' → logprob: -16.37788200378418
    8. 'ran' → logprob: -16.87788200378418
    9. '_range' → logprob: -17.00288200378418
    10. ')' → logprob: -17.12788200378418

Token 68: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.22703799605369568
    2. '(' → logprob: -2.2270379066467285
    3. ' (' → logprob: -2.3520379066467285
    4. ')' → logprob: -10.227038383483887
    5. ' M' → logprob: -10.852038383483887
    6. ' ' → logprob: -11.602038383483887
    7. '(
' → logprob: -11.977038383483887
    8. ',' → logprob: -12.602038383483887
    9. '(m' → logprob: -12.852038383483887
    10. 'M' → logprob: -13.227038383483887

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006220113136805594
    2. ')' → logprob: -8.000621795654297
    3. '):
' → logprob: -8.375621795654297
    4. ' ):' → logprob: -10.250621795654297
    5. ':' → logprob: -11.125621795654297
    6. '   ' → logprob: -12.500621795654297
    7. '):
' → logprob: -14.375621795654297
    8. '():' → logprob: -15.375621795654297
    9. '):

' → logprob: -15.500621795654297
    10. ']:' → logprob: -16.000621795654297

Token 70: '       ' (ID: 309)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.6745834946632385
    2. '   ' → logprob: -0.9245834946632385
    3. 'w' → logprob: -2.6745834350585938
    4. '    ' → logprob: -5.049583435058594
    5. '       ' → logprob: -5.299583435058594
    6. ' ' → logprob: -5.299583435058594
    7. '<|end|>' → logprob: -6.174583435058594
    8. 'int' → logprob: -6.424583435058594
    9. '	w' → logprob: -7.049583435058594
    10. '  ' → logprob: -7.049583435058594

Token 71: ' w' (ID: 286)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4795277714729309
    2. 'int' → logprob: -0.9795277714729309
    3. ' w' → logprob: -5.479527950286865
    4. 'w' (adapté à ' w') → logprob: -7.854527950286865
    5. '   ' → logprob: -7.979527950286865
    6. ' input' → logprob: -9.479527473449707
    7. '<int' → logprob: -9.604527473449707
    8. '[int' → logprob: -9.604527473449707
    9. '(int' → logprob: -9.854527473449707
    10. '=int' → logprob: -9.979527473449707

Token 72: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6931865215301514
    2. '.append' → logprob: -0.6931865215301514
    3. '.app' → logprob: -11.44318675994873
    4. '.ap' → logprob: -11.69318675994873
    5. '.extend' → logprob: -12.44318675994873
    6. ' .' → logprob: -12.44318675994873
    7. 'append' → logprob: -12.56818675994873
    8. '   ' → logprob: -13.06818675994873
    9. '.push' → logprob: -13.56818675994873
    10. '.Append' → logprob: -13.81818675994873

Token 73: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.93710636976175e-05
    2. '(' → logprob: -9.375099182128906
    3. ' (' → logprob: -11.875099182128906
    4. 'int' → logprob: -13.000099182128906
    5. '(i' → logprob: -13.875099182128906
    6. '(float' → logprob: -14.125099182128906
    7. '(input' → logprob: -14.375099182128906
    8. '(s' → logprob: -14.750099182128906
    9. '(in' → logprob: -14.750099182128906
    10. '[int' → logprob: -14.875099182128906

Token 74: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0002738522016443312
    2. '(' → logprob: -8.500273704528809
    3. '(int' → logprob: -9.625273704528809
    4. ' (' → logprob: -13.375273704528809
    5. ')' → logprob: -13.625273704528809
    6. 'input' → logprob: -14.750273704528809
    7. ',input' → logprob: -14.875273704528809
    8. '=input' → logprob: -15.000273704528809
    9. '(
' → logprob: -16.250274658203125
    10. ' input' → logprob: -16.250274658203125

Token 75: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.47476446628570557
    2. '()))' → logprob: -0.9747644662857056
    3. '()' → logprob: -7.974764347076416
    4. ')' → logprob: -8.849764823913574
    5. '))' → logprob: -8.974764823913574
    6. '())
' → logprob: -10.349764823913574
    7. '()))
' → logprob: -10.599764823913574
    8. ' ())' → logprob: -12.099764823913574
    9. '(' → logprob: -12.599764823913574
    10. '()));' → logprob: -12.974764823913574

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26923447847366333
    2. 's' → logprob: -2.6442344188690186
    3. 'sum' → logprob: -3.5192344188690186
    4. '    ' → logprob: -4.144234657287598
    5. 'h' → logprob: -4.269234657287598
    6. '```' → logprob: -4.644234657287598
    7. 'p' → logprob: -4.894234657287598
    8. '    
' → logprob: -4.894234657287598
    9. '<|end|>' → logprob: -5.019234657287598
    10. 'total' → logprob: -5.144234657287598

Token 77: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.40870389342308044
    2. 's' → logprob: -2.9087038040161133
    3. 'h' → logprob: -3.1587038040161133
    4. 'max' → logprob: -3.5337038040161133
    5. 'sum' → logprob: -3.5337038040161133
    6. 'd' → logprob: -4.033703804016113
    7. 'c' → logprob: -4.408703804016113
    8. '#' (adapté à ' #') → logprob: -4.533703804016113
    9. 'result' → logprob: -4.658703804016113
    10. 'p' → logprob: -4.783703804016113

Token 78: ' Calculate' (ID: 38942)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.281875729560852
    2. ' dp' → logprob: -2.2818756103515625
    3. 'dp' → logprob: -2.6568756103515625
    4. ' h' → logprob: -2.6568756103515625
    5. 'h' → logprob: -2.7818756103515625
    6. ' #' → logprob: -2.7818756103515625
    7. 'result' → logprob: -3.4068756103515625
    8. ' result' → logprob: -3.6568756103515625
    9. 'answer' → logprob: -3.6568756103515625
    10. ' max' → logprob: -3.7818756103515625

Token 79: ' vertical' (ID: 17679)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.4542087316513062
    2. ' dp' → logprob: -1.9542087316513062
    3. 'sum' → logprob: -2.3292088508605957
    4. 'result' → logprob: -2.4542088508605957
    5. ' max' → logprob: -2.8292088508605957
    6. 'max' → logprob: -3.0792088508605957
    7. ' sum' → logprob: -3.2042088508605957
    8. 'answer' → logprob: -3.2042088508605957
    9. 's' → logprob: -3.4542088508605957
    10. 'total' → logprob: -3.5792088508605957

Token 80: ' cumulative' (ID: 75628)
  Prédit: 'cuts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cuts' → logprob: -1.4727524518966675
    2. 's' → logprob: -1.5977524518966675
    3. 'dp' → logprob: -2.222752571105957
    4. '_s' → logprob: -2.472752571105957
    5. '_dp' → logprob: -2.972752571105957
    6. 'diff' → logprob: -3.222752571105957
    7. 'dif' → logprob: -3.347752571105957
    8. 'dist' → logprob: -4.097752571105957
    9. 'spaces' → logprob: -4.222752571105957
    10. 'max' → logprob: -4.347752571105957

Token 81: ' sums' (ID: 73121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.48072049021720886
    2. '_s' → logprob: -2.1057205200195312
    3. '_' → logprob: -2.3557205200195312
    4. 'sum' → logprob: -2.7307205200195312
    5. ' sums' → logprob: -2.8557205200195312
    6. '_sum' → logprob: -3.9807205200195312
    7. '_he' → logprob: -5.105720520019531
    8. ' heights' → logprob: -5.230720520019531
    9. 'he' → logprob: -5.355720520019531
    10. ' sum' → logprob: -6.105720520019531

Token 82: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9316246509552002
    2. '
' → logprob: -1.1816246509552002
    3. 'v' → logprob: -1.4316246509552002
    4. '    
' → logprob: -3.8066246509552
    5. 'c' → logprob: -4.306624412536621
    6. 's' → logprob: -5.306624412536621
    7. '  
' → logprob: -5.806624412536621
    8. '\n' → logprob: -5.806624412536621
    9. '   
' → logprob: -6.056624412536621
    10. ' 
' → logprob: -6.181624412536621

Token 83: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2206963449716568
    2. '
' → logprob: -2.720696449279785
    3. '   ' → logprob: -3.220696449279785
    4. 's' → logprob: -4.095696449279785
    5. '```' → logprob: -4.095696449279785
    6. 'c' → logprob: -4.720696449279785
    7. ' v' → logprob: -5.095696449279785
    8. 'h' → logprob: -5.095696449279785
    9. 'cum' → logprob: -5.220696449279785
    10. 'vertical' → logprob: -5.470696449279785

Token 84: ' vertical' (ID: 17679)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3289578855037689
    2. ' v' → logprob: -2.0789577960968018
    3. 'vertical' (adapté à ' vertical') → logprob: -3.9539577960968018
    4. '   ' → logprob: -4.203958034515381
    5. 'vs' → logprob: -4.203958034515381
    6. 'c' → logprob: -4.203958034515381
    7. 'cum' → logprob: -4.203958034515381
    8. ' vertical' → logprob: -4.328958034515381
    9. 'vh' → logprob: -4.578958034515381
    10. 's' → logprob: -4.703958034515381

Token 85: ' =' (ID: 314)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.24197153747081757
    2. '_' → logprob: -2.241971492767334
    3. '_sum' → logprob: -2.616971492767334
    4. '_c' → logprob: -3.616971492767334
    5. ' =' → logprob: -5.616971492767334
    6. 's' → logprob: -5.991971492767334
    7. '=' → logprob: -6.241971492767334
    8. '_prefix' → logprob: -8.866971969604492
    9. 'sum' → logprob: -9.241971969604492
    10. '_diff' → logprob: -9.991971969604492

Token 86: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.057289138436317444
    2. '[' → logprob: -3.1822891235351562
    3. '[h' → logprob: -4.307289123535156
    4. ' []' → logprob: -8.057289123535156
    5. '[]' → logprob: -8.432289123535156
    6. '[len' → logprob: -10.557289123535156
    7. '[n' → logprob: -10.807289123535156
    8. '[v' → logprob: -11.182289123535156
    9. ' ' → logprob: -11.307289123535156
    10. '[i' → logprob: -11.432289123535156

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004851306148339063
    2. 'h' → logprob: -8.00048542022705
    3. '[' → logprob: -9.37548542022705
    4. '[h' → logprob: -10.37548542022705
    5. ' ' → logprob: -10.50048542022705
    6. ' [' → logprob: -13.62548542022705
    7. 'sum' → logprob: -14.00048542022705
    8. '   ' → logprob: -14.50048542022705
    9. ')' → logprob: -14.62548542022705
    10. '(' → logprob: -14.62548542022705

Token 88: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014998910017311573
    2. ',' → logprob: -4.514998912811279
    3. ' ]' → logprob: -5.764998912811279
    4. ']+' → logprob: -8.389998435974121
    5. '<|end|>' → logprob: -8.389998435974121
    6. ')' → logprob: -9.514998435974121
    7. ' for' → logprob: -10.014998435974121
    8. ')]' → logprob: -10.014998435974121
    9. ']
' → logprob: -10.639998435974121
    10. ',
' → logprob: -10.889998435974121

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20496483147144318
    2. ' for' → logprob: -2.2049648761749268
    3. ' ' → logprob: -3.9549648761749268
    4. ' 
' → logprob: -4.579964637756348
    5. '    ' → logprob: -4.829964637756348
    6. '    
' → logprob: -4.954964637756348
    7. ',' → logprob: -4.954964637756348
    8. '
' → logprob: -4.954964637756348
    9. 'for' → logprob: -5.204964637756348
    10. '<|end|>' → logprob: -5.579964637756348

Token 90: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.361634761095047
    2. ' for' → logprob: -1.2366347312927246
    3. '   ' → logprob: -4.736634731292725
    4. 'i' → logprob: -6.361634731292725
    5. '	for' → logprob: -7.236634731292725
    6. '0' → logprob: -7.611634731292725
    7. ' ' → logprob: -7.986634731292725
    8. 's' → logprob: -8.486635208129883
    9. '    
' → logprob: -8.611635208129883
    10. 'sum' → logprob: -8.986635208129883

Token 91: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14940327405929565
    2. 'height' → logprob: -2.5244033336639404
    3. ' i' → logprob: -3.1494033336639404
    4. 'x' → logprob: -4.774403095245361
    5. ' height' → logprob: -5.149403095245361
    6. ' x' → logprob: -8.27440357208252
    7. '_height' → logprob: -8.52440357208252
    8. 'v' → logprob: -8.64940357208252
    9. 'l' → logprob: -9.02440357208252
    10. 'hi' → logprob: -9.39940357208252

Token 92: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00091050990158692
    2. 'in' → logprob: -7.25091028213501
    3. ' ' → logprob: -8.875910758972168
    4. '  ' → logprob: -10.625910758972168
    5. ' i' → logprob: -11.375910758972168
    6. '   ' → logprob: -12.125910758972168
    7. 'range' → logprob: -12.250910758972168
    8. ',' → logprob: -12.625910758972168
    9. ' range' → logprob: -12.625910758972168
    10. '	in' → logprob: -12.625910758972168

Token 93: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2826593518257141
    2. ' range' → logprob: -1.4076592922210693
    3. 'h' → logprob: -7.032659530639648
    4. ' h' → logprob: -7.532659530639648
    5. ' ' → logprob: -10.032659530639648
    6. '   ' → logprob: -11.032659530639648
    7. '  ' → logprob: -11.282659530639648
    8. '	range' → logprob: -12.157659530639648
    9. 'r' → logprob: -12.282659530639648
    10. ' r' → logprob: -13.657659530639648

Token 94: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2272486835718155
    2. '(' → logprob: -1.6022486686706543
    3. ' N' → logprob: -7.227248668670654
    4. ' (' → logprob: -7.352248668670654
    5. '(len' → logprob: -7.977248668670654
    6. '(n' → logprob: -10.352249145507812
    7. 'N' → logprob: -10.602249145507812
    8. '1' → logprob: -10.852249145507812
    9. '(
' → logprob: -11.102249145507812
    10. ' ' → logprob: -11.352249145507812

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008637027814984322
    2. '):
' → logprob: -4.883636951446533
    3. ' ):' → logprob: -7.758636951446533
    4. '+' → logprob: -8.008637428283691
    5. '   ' → logprob: -9.008637428283691
    6. ')' → logprob: -10.133637428283691
    7. ':' → logprob: -10.633637428283691
    8. '1' → logprob: -10.633637428283691
    9. ' ' → logprob: -11.008637428283691
    10. '-' → logprob: -11.133637428283691

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058997172862291336
    2. '   ' → logprob: -2.93399715423584
    3. ' vertical' → logprob: -6.93399715423584
    4. '+' → logprob: -7.30899715423584
    5. '    ' → logprob: -7.55899715423584
    6. '    
' → logprob: -8.05899715423584
    7. '<|end|>' → logprob: -8.05899715423584
    8. 'vertical' → logprob: -8.18399715423584
    9. '        
' → logprob: -9.05899715423584
    10. ',' → logprob: -9.18399715423584

Token 97: ' vertical' (ID: 17679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4573962092399597
    2. '   ' → logprob: -1.2073962688446045
    3. ' vertical' → logprob: -2.8323962688446045
    4. 'vertical' (adapté à ' vertical') → logprob: -4.957396030426025
    5. '    ' → logprob: -6.832396030426025
    6. '(vertical' → logprob: -8.332396507263184
    7. '           ' → logprob: -9.207396507263184
    8. '	   ' → logprob: -9.207396507263184
    9. '```' → logprob: -9.457396507263184
    10. ' vertically' → logprob: -9.457396507263184

Token 98: '.append' (ID: 3709)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1807495504617691
    2. '+=' → logprob: -1.930749535560608
    3. '+' → logprob: -3.9307496547698975
    4. ' +' → logprob: -8.305749893188477
    5. '.append' → logprob: -8.305749893188477
    6. ']+=' → logprob: -9.555749893188477
    7. '   ' → logprob: -10.930749893188477
    8. '=' → logprob: -10.930749893188477
    9. '+=(' → logprob: -10.930749893188477
    10. '.' → logprob: -11.305749893188477

Token 99: '(vertical' (ID: 154834)
  Prédit: '(vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertical' → logprob: -0.0011029450688511133
    2. '(' → logprob: -6.876102924346924
    3. 'vertical' → logprob: -10.251103401184082
    4. ' vertical' → logprob: -10.501103401184082
    5. ' (' → logprob: -12.751103401184082
    6. '(horizontal' → logprob: -13.126103401184082
    7. '   ' → logprob: -13.751103401184082
    8. '(h' → logprob: -14.751103401184082
    9. '(
' → logprob: -15.376103401184082
    10. '(v' → logprob: -15.751103401184082

Token 100: '[-' (ID: 17503)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3868974447250366
    2. '[-' → logprob: -1.1368974447250366
    3. '[' → logprob: -10.761897087097168
    4. ' [-' → logprob: -13.261897087097168
    5. ' [' → logprob: -13.761897087097168
    6. '   ' → logprob: -14.136897087097168
    7. 'i' → logprob: -14.511897087097168
    8. '```' → logprob: -15.011897087097168
    9. ' ' → logprob: -15.261897087097168
    10. ' i' → logprob: -15.511897087097168

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001992490579141304
    2. ' ' → logprob: -9.625199317932129
    3. '   ' → logprob: -10.125199317932129
    4. '+' → logprob: -10.500199317932129
    5. ' +' → logprob: -10.750199317932129
    6. 'i' → logprob: -11.000199317932129
    7. 's' → logprob: -11.500199317932129
    8. ']' → logprob: -12.500199317932129
    9. '+i' → logprob: -12.625199317932129
    10. ']+' → logprob: -12.875199317932129

Token 102: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20760971307754517
    2. '+' → logprob: -1.7076096534729004
    3. ']' → logprob: -5.7076096534729
    4. ']+' → logprob: -5.9576096534729
    5. ')' → logprob: -9.207610130310059
    6. '+h' → logprob: -9.957610130310059
    7. ')+' → logprob: -10.082610130310059
    8. ' ' → logprob: -10.207610130310059
    9. ' ]' → logprob: -10.957610130310059
    10. ' +
' → logprob: -12.332610130310059

Token 103: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38792383670806885
    2. '+' → logprob: -1.1379238367080688
    3. '+h' → logprob: -6.887923717498779
    4. ' ' → logprob: -10.637924194335938
    5. ')+' → logprob: -13.887924194335938
    6. ')' → logprob: -14.012924194335938
    7. ' ' → logprob: -14.137924194335938
    8. ' plus' → logprob: -14.137924194335938
    9. '+c' → logprob: -14.262924194335938
    10. '   ' → logprob: -14.262924194335938

Token 104: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.01416398212313652
    2. ' h' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.014163970947266
    4. '	h' → logprob: -16.389163970947266
    5. ' ' → logprob: -18.389163970947266
    6. ')' → logprob: -19.139163970947266
    7. '[h' → logprob: -19.264163970947266
    8. '
' → logprob: -19.514163970947266
    9. '"h' → logprob: -20.139163970947266
    10. '(h' → logprob: -20.514163970947266

Token 105: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0206720617134124e-05
    2. '[' → logprob: -11.50001049041748
    3. '[I' → logprob: -17.625009536743164
    4. ' [' → logprob: -17.750009536743164
    5. 'i' → logprob: -18.375009536743164
    6. ')' → logprob: -18.625009536743164
    7. '[
' → logprob: -18.750009536743164
    8. '[N' → logprob: -20.250009536743164
    9. '[-' → logprob: -20.500009536743164
    10. '```' → logprob: -20.750009536743164

Token 106: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013214473437983543
    2. '))' → logprob: -9.75013256072998
    3. '])' → logprob: -10.25013256072998
    4. ' )' → logprob: -10.87513256072998
    5. ')
' → logprob: -11.00013256072998
    6. '   ' → logprob: -13.50013256072998
    7. ')]' → logprob: -15.25013256072998
    8. '})' → logprob: -15.50013256072998
    9. ')])' → logprob: -15.62513256072998
    10. '）' → logprob: -16.000131607055664

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1659923642873764
    2. ' horizontal' → logprob: -2.415992259979248
    3. 'horizontal' → logprob: -2.790992259979248
    4. '#' → logprob: -6.915992259979248
    5. '    
' → logprob: -8.290992736816406
    6. ' for' → logprob: -8.415992736816406
    7. ' #' → logprob: -8.540992736816406
    8. '
' → logprob: -9.040992736816406
    9. ' ' → logprob: -9.165992736816406
    10. '[' → logprob: -10.040992736816406

Token 108: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4902345538139343
    2. ' horizontal' → logprob: -1.115234613418579
    3. 'horizontal' → logprob: -3.115234613418579
    4. ' #' → logprob: -5.615234375
    5. '#' (adapté à ' #') → logprob: -5.865234375
    6. '    
' → logprob: -6.240234375
    7. ' ' → logprob: -6.490234375
    8. ' 
' → logprob: -6.990234375
    9. ' for' → logprob: -7.115234375
    10. ' w' → logprob: -7.615234375

Token 109: ' Calculate' (ID: 38942)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.3056361973285675
    2. '#' → logprob: -1.5556361675262451
    3. 'Calculate' → logprob: -3.430636167526245
    4. ' horizontal' → logprob: -4.180636405944824
    5. ' Calculate' → logprob: -7.305636405944824
    6. 's' → logprob: -7.805636405944824
    7. 'vertical' → logprob: -8.055636405944824
    8. 'h' → logprob: -8.305636405944824
    9. 'max' → logprob: -8.305636405944824
    10. 'hor' → logprob: -8.305636405944824

Token 110: ' horizontal' (ID: 25511)
  Prédit: ' horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.4361066222190857
    2. 'horizontal' → logprob: -1.0611066818237305
    3. ' max' → logprob: -6.6861066818237305
    4. ' ' → logprob: -6.6861066818237305
    5. 'vertical' → logprob: -6.9361066818237305
    6. 'max' → logprob: -7.3111066818237305
    7. ' vertical' → logprob: -7.6861066818237305
    8. ' horiz' → logprob: -7.6861066818237305
    9. ' square' → logprob: -8.49860668182373
    10. 'square' → logprob: -8.81110668182373

Token 111: ' cumulative' (ID: 75628)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016469722613692284
    2. '=' → logprob: -4.266469955444336
    3. 's' → logprob: -6.641469955444336
    4. '_c' → logprob: -7.891469955444336
    5. 'c' → logprob: -8.266469955444336
    6. ' cumulative' → logprob: -8.516469955444336
    7. ' ' → logprob: -10.016469955444336
    8. '_s' → logprob: -10.016469955444336
    9. 'sum' → logprob: -10.891469955444336
    10. 'cum' → logprob: -11.391469955444336

Token 112: ' sums' (ID: 73121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35043883323669434
    2. ' sums' → logprob: -1.2254388332366943
    3. ' =' → logprob: -6.975439071655273
    4. '_s' → logprob: -7.725439071655273
    5. 'sum' → logprob: -7.975439071655273
    6. ' ' → logprob: -9.725439071655273
    7. ' s' → logprob: -9.725439071655273
    8. '=' → logprob: -10.100439071655273
    9. ' sum' → logprob: -10.225439071655273
    10. '   ' → logprob: -10.725439071655273

Token 113: '
' (ID: 198)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.43519327044487
    2. '   ' → logprob: -1.1851933002471924
    3. ' horizontal' → logprob: -3.0601933002471924
    4. '[' → logprob: -9.310193061828613
    5. '.horizontal' → logprob: -10.185193061828613
    6. '(horizontal' → logprob: -10.435193061828613
    7. ' ' → logprob: -10.435193061828613
    8. '_horizontal' → logprob: -10.685193061828613
    9. '  ' → logprob: -10.810193061828613
    10. '    
' → logprob: -11.060193061828613

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4119196832180023
    2. 'horizontal' → logprob: -1.4119197130203247
    3. ' horizontal' → logprob: -2.411919593811035
    4. '[' → logprob: -6.411919593811035
    5. '  ' → logprob: -7.786919593811035
    6. '    ' → logprob: -7.786919593811035
    7. '(horizontal' → logprob: -7.786919593811035
    8. ' ' → logprob: -8.161919593811035
    9. '    
' → logprob: -8.411919593811035
    10. '
' → logprob: -8.411919593811035

Token 115: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' (adapté à ' horizontal') → logprob: -0.10218175500631332
    2. ' horizontal' → logprob: -2.4771816730499268
    3. '[' → logprob: -4.352181911468506
    4. ' [' → logprob: -8.977181434631348
    5. '   ' → logprob: -10.352181434631348
    6. 'h' → logprob: -10.477181434631348
    7. 'hor' → logprob: -10.977181434631348
    8. '.horizontal' → logprob: -10.977181434631348
    9. '[
' → logprob: -11.102181434631348
    10. ' horizont' → logprob: -11.852181434631348

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028191357851028442
    2. '=' → logprob: -5.877819061279297
    3. ' =[' → logprob: -12.127819061279297
    4. ' ' → logprob: -12.752819061279297
    5. '=[' → logprob: -12.877819061279297
    6. '[' → logprob: -12.877819061279297
    7. ' [' → logprob: -14.627819061279297
    8. 's' → logprob: -16.252819061279297
    9. '<|end|>' → logprob: -16.377819061279297
    10. '=[]' → logprob: -16.877819061279297

Token 117: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.20142464339733124
    2. '[' → logprob: -1.7014245986938477
    3. ' ' → logprob: -11.576424598693848
    4. ' ' → logprob: -13.451424598693848
    5. '   ' → logprob: -15.576424598693848
    6. '  ' → logprob: -16.701425552368164
    7. '0' → logprob: -16.826425552368164
    8. ' `[' → logprob: -17.326425552368164
    9. '[]' → logprob: -17.388925552368164
    10. '    ' → logprob: -17.701425552368164

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.750009536743164
    4. '  ' → logprob: -19.000009536743164
    5. '    ' → logprob: -20.250009536743164
    6. ')' → logprob: -20.375009536743164
    7. '۰' → logprob: -20.375009536743164
    8. ']' → logprob: -20.875009536743164
    9. '(' → logprob: -21.125009536743164
    10. '00' → logprob: -21.625009536743164

Token 119: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007142513524740934
    2. ')' → logprob: -5.132142543792725
    3. '   ' → logprob: -7.632142543792725
    4. ']
' → logprob: -7.757142543792725
    5. ' ]' → logprob: -8.257142066955566
    6. ')
' → logprob: -11.507142066955566
    7. '<|end|>' → logprob: -12.007142066955566
    8. ')]' → logprob: -12.257142066955566
    9. ' ' → logprob: -12.757142066955566
    10. ',' → logprob: -13.007142066955566

Token 120: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007633958477526903
    2. '   ' → logprob: -5.007634162902832
    3. ' for' → logprob: -7.007634162902832
    4. '<|end|>' → logprob: -11.882634162902832
    5. '	for' → logprob: -12.382634162902832
    6. '
' → logprob: -14.382634162902832
    7. '  ' → logprob: -14.632634162902832
    8. '    
' → logprob: -15.007634162902832
    9. ' ' → logprob: -15.382634162902832
    10. ')' → logprob: -15.382634162902832

Token 121: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002619318547658622
    2. ' for' → logprob: -8.250262260437012
    3. '
' → logprob: -14.875262260437012
    4. '   ' → logprob: -15.750262260437012
    5. '0' → logprob: -16.375261306762695
    6. '	for' → logprob: -17.250261306762695
    7. '[' → logprob: -17.375261306762695
    8. 'For' → logprob: -17.750261306762695
    9. ' ' → logprob: -18.500261306762695
    10. 'or' → logprob: -18.875261306762695

Token 122: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02464275248348713
    2. ' i' → logprob: -3.7746427059173584
    3. 'j' → logprob: -6.6496429443359375
    4. ' j' → logprob: -9.649642944335938
    5. '   ' → logprob: -10.274642944335938
    6. '    ' → logprob: -13.899642944335938
    7. '	i' → logprob: -14.274642944335938
    8. '  ' → logprob: -14.399642944335938
    9. ' ' → logprob: -15.024642944335938
    10. '_i' → logprob: -16.274642944335938

Token 123: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0046584345400333405
    2. 'in' → logprob: -5.379658222198486
    3. ' ' → logprob: -10.379658699035645
    4. '   ' → logprob: -12.754658699035645
    5. ' i' → logprob: -14.129658699035645
    6. 'range' → logprob: -14.254658699035645
    7. '  ' → logprob: -14.379658699035645
    8. '    ' → logprob: -14.379658699035645
    9. '	in' → logprob: -14.754658699035645
    10. 'n' → logprob: -14.754658699035645

Token 124: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141811668872833
    2. ' range' → logprob: -1.701418161392212
    3. '(range' → logprob: -12.326417922973633
    4. ' ' → logprob: -15.451417922973633
    5. 'ange' → logprob: -16.701417922973633
    6. '   ' → logprob: -16.826417922973633
    7. '  ' → logprob: -17.576417922973633
    8. '	range' → logprob: -17.826417922973633
    9. '    ' → logprob: -18.951417922973633
    10. '
' → logprob: -19.451417922973633

Token 125: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -7.100059156073257e-05
    2. 'M' → logprob: -9.625070571899414
    3. '(' → logprob: -12.500070571899414
    4. ' (' → logprob: -14.750070571899414
    5. 'range' → logprob: -15.625070571899414
    6. '(N' → logprob: -16.125070571899414
    7. '   ' → logprob: -16.125070571899414
    8. 'w' → logprob: -16.125070571899414
    9. '0' → logprob: -16.625070571899414
    10. '(S' → logprob: -17.375070571899414

Token 126: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31379246711730957
    2. '):' → logprob: -1.3137924671173096
    3. ')' → logprob: -8.43879222869873
    4. '   ' → logprob: -8.68879222869873
    5. ':' → logprob: -9.43879222869873
    6. ':
' → logprob: -10.68879222869873
    7. '       ' → logprob: -11.56379222869873
    8. '+' → logprob: -11.68879222869873
    9. ' ):
' → logprob: -11.93879222869873
    10. '):
' → logprob: -12.18879222869873

Token 127: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06434369832277298
    2. '       ' → logprob: -3.3143436908721924
    3. 'horizontal' → logprob: -3.8143436908721924
    4. ' horizontal' → logprob: -5.5643439292907715
    5. '(horizontal' → logprob: -10.439343452453613
    6. '.horizontal' → logprob: -11.314343452453613
    7. ' ' → logprob: -12.064343452453613
    8. '           ' → logprob: -12.314343452453613
    9. '  ' → logprob: -12.564343452453613
    10. '	h' → logprob: -13.064343452453613

Token 128: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' (adapté à ' horizontal') → logprob: -0.008622966706752777
    2. ' horizontal' → logprob: -4.758623123168945
    3. '   ' → logprob: -12.133623123168945
    4. '.horizontal' → logprob: -13.258623123168945
    5. '(horizontal' → logprob: -14.258623123168945
    6. '       ' → logprob: -14.758623123168945
    7. '
' → logprob: -15.883623123168945
    8. ' горизонт' → logprob: -16.383623123168945
    9. 'orizontal' → logprob: -16.633623123168945
    10. '_horizontal' → logprob: -17.258623123168945

Token 129: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.64970643306151e-05
    2. '.' → logprob: -9.375086784362793
    3. ' .' → logprob: -13.500086784362793
    4. 'append' → logprob: -15.875086784362793
    5. '.extend' → logprob: -16.375085830688477
    6. '.Append' → logprob: -17.625085830688477
    7. ').' → logprob: -18.750085830688477
    8. '.add' → logprob: -19.125085830688477
    9. '   ' → logprob: -20.000085830688477
    10. '	append' → logprob: -20.125085830688477

Token 130: '(horizontal' (ID: 106641)
  Prédit: '(horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(horizontal' → logprob: -2.816093228830141e-06
    2. 'horizontal' → logprob: -12.87500286102295
    3. '(' → logprob: -15.75000286102295
    4. ' horizontal' → logprob: -17.250001907348633
    5. '(h' → logprob: -18.750001907348633
    6. '(vertical' → logprob: -19.125001907348633
    7. '(hidden' → logprob: -19.500001907348633
    8. ' (' → logprob: -19.625001907348633
    9. '(hour' → logprob: -20.375001907348633
    10. '.horizontal' → logprob: -20.625001907348633

Token 131: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.1472419600977446e-06
    2. '-' → logprob: -14.000000953674316
    3. '[' → logprob: -15.250000953674316
    4. '[i' → logprob: -17.500001907348633
    5. '
' → logprob: -18.000001907348633
    6. ')' → logprob: -18.000001907348633
    7. '	' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '```' → logprob: -18.750001907348633
    10. ' [-' → logprob: -19.375001907348633

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -12.125017166137695
    3. '   ' → logprob: -12.250017166137695
    4. '[i' → logprob: -13.000017166137695
    5. 'i' → logprob: -14.250017166137695
    6. '       ' → logprob: -14.312517166137695
    7. ']' → logprob: -14.937517166137695
    8. '-' → logprob: -15.125017166137695
    9. '```' → logprob: -15.187517166137695
    10. 'w' → logprob: -15.500017166137695

Token 133: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10021713376045227
    2. '+' → logprob: -2.35021710395813
    3. '+w' → logprob: -12.60021686553955
    4. ')' → logprob: -13.10021686553955
    5. ' ' → logprob: -13.60021686553955
    6. ' plus' → logprob: -13.72521686553955
    7. ' ' → logprob: -14.35021686553955
    8. ' +
' → logprob: -14.35021686553955
    9. 'w' → logprob: -14.72521686553955
    10. ')+' → logprob: -15.35021686553955

Token 134: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20146237313747406
    2. ' +' → logprob: -1.7014623880386353
    3. '+w' → logprob: -10.076462745666504
    4. '+
' → logprob: -13.076462745666504
    5. ' ' → logprob: -13.701462745666504
    6. ')' → logprob: -14.076462745666504
    7. 'w' → logprob: -14.451462745666504
    8. ' plus' → logprob: -14.576462745666504
    9. ' +
' → logprob: -15.076462745666504
    10. ' ' → logprob: -15.076462745666504

Token 135: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.008614808320999146
    2. ' w' → logprob: -4.758615016937256
    3. '	w' → logprob: -16.258615493774414
    4. '   ' → logprob: -16.633615493774414
    5. '
' → logprob: -17.133615493774414
    6. ' ' → logprob: -17.758615493774414
    7. '_w' → logprob: -18.133615493774414
    8. ')' → logprob: -18.133615493774414
    9. '(w' → logprob: -18.383615493774414
    10. 'W' → logprob: -18.758615493774414

Token 136: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.625003814697266
    3. ' [' → logprob: -16.250003814697266
    4. '[I' → logprob: -16.875003814697266
    5. 'i' → logprob: -17.000003814697266
    6. '```' → logprob: -18.125003814697266
    7. '[
' → logprob: -18.375003814697266
    8. '(i' → logprob: -18.875003814697266
    9. ')' → logprob: -19.125003814697266
    10. '
' → logprob: -19.125003814697266

Token 137: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4767480790615082
    2. ')' → logprob: -0.9767481088638306
    3. '))' → logprob: -6.101747989654541
    4. ')
' → logprob: -8.1017484664917
    5. '])
' → logprob: -9.9767484664917
    6. '   ' → logprob: -10.7267484664917
    7. ' )' → logprob: -10.9767484664917
    8. ')]' → logprob: -11.8517484664917
    9. ')])' → logprob: -11.9767484664917
    10. '})' → logprob: -12.1017484664917

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02651705965399742
    2. 'max' → logprob: -4.651516914367676
    3. 'count' → logprob: -5.276516914367676
    4. 'counts' → logprob: -6.276516914367676
    5. 'matches' → logprob: -6.526516914367676
    6. 'result' → logprob: -6.526516914367676
    7. '    
' → logprob: -6.776516914367676
    8. 's' → logprob: -7.151516914367676
    9. ' max' → logprob: -7.151516914367676
    10. 'possible' → logprob: -7.276516914367676

Token 139: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.42628011107444763
    2. 'count' → logprob: -1.92628014087677
    3. '   ' → logprob: -2.8012800216674805
    4. 'result' → logprob: -3.3012800216674805
    5. 'dp' → logprob: -3.4262800216674805
    6. 'answer' → logprob: -3.8012800216674805
    7. 'counts' → logprob: -4.1762800216674805
    8. 'ans' → logprob: -5.1762800216674805
    9. ' max' → logprob: -5.3012800216674805
    10. 'counter' → logprob: -5.5512800216674805

Token 140: ' Count' (ID: 6789)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6640218496322632
    2. 'max' → logprob: -1.0390218496322632
    3. 'result' → logprob: -2.9140219688415527
    4. 'counter' → logprob: -4.539021968841553
    5. 'dp' → logprob: -4.539021968841553
    6. 'answer' → logprob: -4.539021968841553
    7. 'ans' → logprob: -4.789021968841553
    8. 'counts' → logprob: -5.164021968841553
    9. ' max' → logprob: -5.289021968841553
    10. 'res' → logprob: -5.289021968841553

Token 141: ' squares' (ID: 57269)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.26315179467201233
    2. 'counts' → logprob: -2.6381518840789795
    3. 'counter' → logprob: -3.0131518840789795
    4. 'result' → logprob: -3.8881518840789795
    5. ' count' → logprob: -4.0131516456604
    6. 'pairs' → logprob: -4.2631516456604
    7. 'vertical' → logprob: -4.6381516456604
    8. 'sub' → logprob: -4.7631516456604
    9. 'max' → logprob: -5.1381516456604
    10. 's' → logprob: -5.1381516456604

Token 142: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12527456879615784
    2. 'count' → logprob: -2.625274658203125
    3. 's' → logprob: -3.875274658203125
    4. 'counts' → logprob: -4.875274658203125
    5. ' count' → logprob: -5.375274658203125
    6. ' counts' → logprob: -5.750274658203125
    7. 'result' → logprob: -6.125274658203125
    8. ' squares' → logprob: -6.375274658203125
    9. 'counter' → logprob: -6.875274658203125
    10. '    
' → logprob: -7.625274658203125

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13091279566287994
    2. 'count' → logprob: -3.1309127807617188
    3. 'counts' → logprob: -3.6309127807617188
    4. 's' → logprob: -3.7559127807617188
    5. ' counts' → logprob: -4.380912780761719
    6. ' count' → logprob: -5.380912780761719
    7. 'counter' → logprob: -5.755912780761719
    8. ' squares' → logprob: -6.005912780761719
    9. ' counter' → logprob: -7.005912780761719
    10. 'square' → logprob: -7.380912780761719

Token 144: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0413799062371254
    2. 'counter' → logprob: -4.291379928588867
    3. 'result' → logprob: -4.916379928588867
    4. 'answer' → logprob: -5.416379928588867
    5. ' count' → logprob: -5.541379928588867
    6. 'ans' → logprob: -5.666379928588867
    7. 'counts' → logprob: -6.416379928588867
    8. 's' → logprob: -6.541379928588867
    9. 'cnt' → logprob: -6.916379928588867
    10. 'square' → logprob: -6.916379928588867

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3990882337093353
    2. '=' → logprob: -1.2740882635116577
    3. 's' → logprob: -3.649088144302368
    4. '_' → logprob: -3.774088144302368
    5. ' ' → logprob: -8.399087905883789
    6. '[' → logprob: -10.274087905883789
    7. ')' → logprob: -10.524087905883789
    8. '(' → logprob: -10.649087905883789
    9. '_=' → logprob: -11.149087905883789
    10. ',' → logprob: -11.399087905883789

Token 146: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018463507294654846
    2. ' ' → logprob: -4.018463611602783
    3. '{}' → logprob: -8.143463134765625
    4. '{}
' → logprob: -12.143463134765625
    5. ' {}' → logprob: -12.268463134765625
    6. '{' → logprob: -12.393463134765625
    7. '   ' → logprob: -12.768463134765625
    8. ' defaultdict' → logprob: -13.268463134765625
    9. ' {}
' → logprob: -14.018463134765625
    10. 'default' → logprob: -14.268463134765625

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1613728106021881
    2. '{}' → logprob: -1.9113727807998657
    3. 'default' → logprob: -7.786372661590576
    4. '{}
' → logprob: -8.161373138427734
    5. 'dict' → logprob: -8.661373138427734
    6. '{' → logprob: -9.036373138427734
    7. ' ' → logprob: -9.161373138427734
    8. ' {}' → logprob: -10.911373138427734
    9. '{}

' → logprob: -11.911373138427734
    10. '[' → logprob: -12.536373138427734

Token 148: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23886160552501678
    2. ' for' → logprob: -2.113861560821533
    3. 'for' → logprob: -3.113861560821533
    4. '
' → logprob: -3.238861560821533
    5. '<|end|>' → logprob: -4.988861560821533
    6. '    
' → logprob: -7.613861560821533
    7. '  ' → logprob: -8.488862037658691
    8. '  
' → logprob: -9.238862037658691
    9. '    ' → logprob: -9.363862037658691
    10. ' 
' → logprob: -9.738862037658691

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26626574993133545
    2. 'for' → logprob: -1.5162657499313354
    3. ' for' → logprob: -4.266265869140625
    4. '
' → logprob: -9.141265869140625
    5. '    
' → logprob: -10.641265869140625
    6. '  ' → logprob: -10.641265869140625
    7. '    ' → logprob: -11.516265869140625
    8. '<|end|>' → logprob: -11.766265869140625
    9. '```' → logprob: -12.266265869140625
    10. ')' → logprob: -12.391265869140625

Token 150: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016115659847855568
    2. 'length' → logprob: -4.516115665435791
    3. 'vertical' → logprob: -6.391115665435791
    4. 's' → logprob: -7.141115665435791
    5. ' for' → logprob: -7.516115665435791
    6. 'square' → logprob: -7.766115665435791
    7. 'count' → logprob: -8.766115188598633
    8. '   ' → logprob: -8.891115188598633
    9. 'counts' → logprob: -9.016115188598633
    10. 'diff' → logprob: -9.141115188598633

Token 151: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1629425287246704
    2. 'length' → logprob: -2.662942409515381
    3. 'vertical' → logprob: -3.162942409515381
    4. 's' → logprob: -4.537942409515381
    5. 'square' → logprob: -4.912942409515381
    6. 'diff' → logprob: -5.412942409515381
    7. 'vert' → logprob: -5.912942409515381
    8. 'd' → logprob: -6.412942409515381
    9. 'sizes' → logprob: -6.662942409515381
    10. 'sub' → logprob: -7.037942409515381

Token 152: ' all' (ID: 722)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09204933792352676
    2. ' i' → logprob: -2.9670493602752686
    3. 'v' → logprob: -4.3420491218566895
    4. 'length' → logprob: -4.4670491218566895
    5. ' length' → logprob: -5.2170491218566895
    6. 'l' → logprob: -6.3420491218566895
    7. ' v' → logprob: -6.7170491218566895
    8. 'size' → logprob: -8.092049598693848
    9. 'vertical' → logprob: -8.342049598693848
    10. 'a' → logprob: -8.467049598693848

Token 153: ' pairs' (ID: 24702)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1375255435705185
    2. ' i' → logprob: -3.0125255584716797
    3. 'v' → logprob: -3.6375255584716797
    4. 'length' → logprob: -3.6375255584716797
    5. ' length' → logprob: -4.51252555847168
    6. 'l' → logprob: -6.13752555847168
    7. 'vertical' → logprob: -6.26252555847168
    8. 'size' → logprob: -6.26252555847168
    9. ' v' → logprob: -6.51252555847168
    10. ' vertical' → logprob: -6.51252555847168

Token 154: ' of' (ID: 328)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4458174705505371
    2. ' for' → logprob: -1.445817470550537
    3. ' in' → logprob: -2.570817470550537
    4. ' of' → logprob: -3.945817470550537
    5. 'for' → logprob: -4.070817470550537
    6. 'i' → logprob: -4.695817470550537
    7. '   ' → logprob: -6.570817470550537
    8. ' ' → logprob: -8.320817947387695
    9. 'of' → logprob: -9.195817947387695
    10. 'in' → logprob: -9.195817947387695

Token 155: ' horizontal' (ID: 25511)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7163228988647461
    2. ' i' → logprob: -1.591322898864746
    3. ' range' → logprob: -1.841322898864746
    4. 'range' → logprob: -1.966322898864746
    5. ' vertical' → logprob: -5.341322898864746
    6. 'vertical' → logprob: -6.591322898864746
    7. ' ' → logprob: -6.716322898864746
    8. 'ranges' → logprob: -8.091322898864746
    9. '(range' → logprob: -8.091322898864746
    10. ' ranges' → logprob: -8.091322898864746

Token 156: ' roads' (ID: 30027)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.7809858322143555
    2. 's' → logprob: -1.7809858322143555
    3. ' i' → logprob: -2.4059858322143555
    4. 'i' → logprob: -2.4059858322143555
    5. ' indices' → logprob: -3.1559858322143555
    6. 'ranges' → logprob: -3.5309858322143555
    7. 'lines' → logprob: -3.7809858322143555
    8. 'for' → logprob: -4.0309858322143555
    9. 'indexes' → logprob: -4.0309858322143555
    10. ' lines' → logprob: -4.4059858322143555

Token 157: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.080775260925293
    2. ' for' → logprob: -1.205775260925293
    3. ':' → logprob: -1.580775260925293
    4. 'for' → logprob: -2.705775260925293
    5. ',' → logprob: -3.205775260925293
    6. '<|end|>' → logprob: -3.330775260925293
    7. '
' → logprob: -4.955775260925293
    8. ' ' → logprob: -6.705775260925293
    9. ':
' → logprob: -7.080775260925293
    10. '<|end|>' → logprob: -7.330775260925293

Token 158: ' calculate' (ID: 17950)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3185533881187439
    2. 'for' → logprob: -1.3185534477233887
    3. '   ' → logprob: -5.443553447723389
    4. ' i' → logprob: -7.193553447723389
    5. 'i' → logprob: -8.81855297088623
    6. ' j' → logprob: -11.44355297088623
    7. ' length' → logprob: -11.56855297088623
    8. 'j' → logprob: -11.69355297088623
    9. 'length' → logprob: -12.69355297088623
    10. ' ' → logprob: -12.81855297088623

Token 159: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.206128790974617
    2. ' for' → logprob: -2.3311288356781006
    3. 'length' → logprob: -3.3311288356781006
    4. '   ' → logprob: -4.7061285972595215
    5. 'horizontal' → logprob: -5.0811285972595215
    6. 'vertical' → logprob: -5.4561285972595215
    7. 'square' → logprob: -5.4561285972595215
    8. 'width' → logprob: -5.5811285972595215
    9. 'the' → logprob: -5.5811285972595215
    10. ' length' → logprob: -5.7061285972595215

Token 160: ' segment' (ID: 14806)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6784159541130066
    2. ' length' → logprob: -0.9284159541130066
    3. 'distance' → logprob: -3.6784160137176514
    4. ' lengths' → logprob: -4.053415775299072
    5. 'for' → logprob: -4.428415775299072
    6. 'width' → logprob: -4.803415775299072
    7. ' width' → logprob: -5.428415775299072
    8. 'difference' → logprob: -5.428415775299072
    9. ' for' → logprob: -5.553415775299072
    10. ' side' → logprob: -5.678415775299072

Token 161: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.8490226864814758
    2. 'length' → logprob: -1.224022626876831
    3. ' lengths' → logprob: -1.849022626876831
    4. 's' → logprob: -2.224022626876831
    5. ' for' → logprob: -5.47402286529541
    6. '   ' → logprob: -5.72402286529541
    7. 'for' → logprob: -5.97402286529541
    8. ' s' → logprob: -7.09902286529541
    9. '_lengths' → logprob: -7.47402286529541
    10. ' ' → logprob: -7.97402286529541

Token 162: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17293289303779602
    2. ' for' → logprob: -2.1729328632354736
    3. '
' → logprob: -3.6729328632354736
    4. 'for' → logprob: -4.547933101654053
    5. '    
' → logprob: -5.797933101654053
    6. '<|end|>' → logprob: -6.422933101654053
    7. ':' → logprob: -7.047933101654053
    8. '    ' → logprob: -7.172933101654053
    9. '  
' → logprob: -7.422933101654053
    10. ' and' → logprob: -7.547933101654053

Token 163: ' check' (ID: 2371)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7218143343925476
    2. 'for' → logprob: -0.7218143343925476
    3. ' check' → logprob: -4.096814155578613
    4. 'check' → logprob: -5.971814155578613
    5. '#' → logprob: -6.221814155578613
    6. ' find' → logprob: -6.346814155578613
    7. 'count' → logprob: -6.971814155578613
    8. ' count' → logprob: -7.096814155578613
    9. ' compare' → logprob: -7.096814155578613
    10. 'find' → logprob: -7.471814155578613

Token 164: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7081459164619446
    2. ' for' → logprob: -1.0831458568572998
    3. '   ' → logprob: -1.8331458568572998
    4. ' all' → logprob: -5.958146095275879
    5. 'all' → logprob: -6.208146095275879
    6. ' if' → logprob: -6.958146095275879
    7. ' the' → logprob: -7.458146095275879
    8. 'the' → logprob: -7.583146095275879
    9. 'if' → logprob: -7.708146095275879
    10. 'vertical' → logprob: -7.833146095275879

Token 165: ' exists' (ID: 13031)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.4222173690795898
    2. ' it' → logprob: -1.7972173690795898
    3. 'vertical' → logprob: -1.9222173690795898
    4. 'it' → logprob: -2.04721736907959
    5. 'any' → logprob: -2.54721736907959
    6. ' any' → logprob: -2.92221736907959
    7. ' vertical' → logprob: -3.04721736907959
    8. 'horizontal' → logprob: -3.04721736907959
    9. ' segment' → logprob: -3.54721736907959
    10. ' that' → logprob: -4.42221736907959

Token 166: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06894441694021225
    2. ' in' → logprob: -3.4439444541931152
    3. ' for' → logprob: -3.5689444541931152
    4. 'in' → logprob: -6.068944454193115
    5. 'for' → logprob: -6.193944454193115
    6. '<|end|>' → logprob: -6.693944454193115
    7. '    ' → logprob: -8.568943977355957
    8. ',' → logprob: -8.943943977355957
    9. ' between' → logprob: -9.068943977355957
    10. '       ' → logprob: -9.443943977355957

Token 167: ' vertical' (ID: 17679)
  Prédit: ' vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.614518940448761
    2. 'vertical' → logprob: -0.864518940448761
    3. ' set' → logprob: -3.739518880844116
    4. 'set' → logprob: -4.489519119262695
    5. '   ' → logprob: -6.239519119262695
    6. ' ' → logprob: -8.114519119262695
    7. '{' → logprob: -8.489519119262695
    8. '(vertical' → logprob: -9.677019119262695
    9. ' {' → logprob: -9.927019119262695
    10. 'horizontal' → logprob: -9.989519119262695

Token 168: ' segments' (ID: 33749)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9471544027328491
    2. 'roads' → logprob: -1.6971544027328491
    3. ' roads' → logprob: -2.0721545219421387
    4. '   ' → logprob: -2.1971545219421387
    5. ' for' → logprob: -2.5721545219421387
    6. 'segments' → logprob: -3.1971545219421387
    7. ' segments' → logprob: -3.9471545219421387
    8. 'road' → logprob: -4.697154521942139
    9. 's' → logprob: -4.947154521942139
    10. '_' → logprob: -5.197154521942139

Token 169: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7026635408401489
    2. '   ' → logprob: -0.7026635408401489
    3. '    
' → logprob: -5.077663421630859
    4. 'for' → logprob: -6.702663421630859
    5. ' for' → logprob: -7.077663421630859
    6. '  
' → logprob: -8.45266342163086
    7. '
' → logprob: -8.70266342163086
    8. '<|end|>' → logprob: -8.70266342163086
    9. '```' → logprob: -8.82766342163086
    10. '   
' → logprob: -9.07766342163086

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017817538231611252
    2. '    
' → logprob: -4.392817497253418
    3. '
' → logprob: -5.267817497253418
    4. '  
' → logprob: -10.142817497253418
    5. '   
' → logprob: -10.267817497253418
    6. 'for' → logprob: -10.767817497253418
    7. ' for' → logprob: -11.392817497253418
    8. ' 
' → logprob: -11.642817497253418
    9. '        
' → logprob: -12.642817497253418
    10. '    ' → logprob: -12.642817497253418

Token 171: ' segments' (ID: 33749)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.145053893327713
    2. 'for' → logprob: -2.6450538635253906
    3. ' for' → logprob: -2.7700538635253906
    4. '
' → logprob: -6.770053863525391
    5. '    
' → logprob: -9.27005386352539
    6. '    ' → logprob: -9.77005386352539
    7. '  ' → logprob: -10.14505386352539
    8. '   
' → logprob: -11.89505386352539
    9. ' 
' → logprob: -12.27005386352539
    10. '```' → logprob: -12.27005386352539

Token 172: '_v' (ID: 5390)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39062148332595825
    2. '=' → logprob: -1.1406214237213135
    3. '_' → logprob: -5.890621662139893
    4. '_vertical' → logprob: -8.265621185302734
    5. '=set' → logprob: -8.890621185302734
    6. 'vertical' → logprob: -9.140621185302734
    7. '_horizontal' → logprob: -9.640621185302734
    8. '_set' → logprob: -9.890621185302734
    9. '=[]' → logprob: -10.140621185302734
    10. 'for' → logprob: -10.265621185302734

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18051491677761078
    2. '=' → logprob: -2.6805148124694824
    3. '_set' → logprob: -2.6805148124694824
    4. '_lengths' → logprob: -4.180514812469482
    5. '=set' → logprob: -5.180514812469482
    6. '_' → logprob: -6.180514812469482
    7. '_v' → logprob: -6.555514812469482
    8. 's' → logprob: -6.930514812469482
    9. '_length' → logprob: -7.680514812469482
    10. '_s' → logprob: -7.930514812469482

Token 174: ' {}
' (ID: 11421)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.16466037929058075
    2. '{}' → logprob: -1.9146603345870972
    3. ' set' → logprob: -5.914660453796387
    4. '{' → logprob: -6.789660453796387
    5. '{}
' → logprob: -7.789660453796387
    6. ' {}' → logprob: -8.789660453796387
    7. 'dict' → logprob: -11.414660453796387
    8. '{}

' → logprob: -12.039660453796387
    9. ' {}
' → logprob: -13.039660453796387
    10. '{})' → logprob: -13.289660453796387

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08419948816299438
    2. 'for' → logprob: -2.7091994285583496
    3. ' for' → logprob: -4.33419942855835
    4. '<|end|>' → logprob: -6.95919942855835
    5. '    
' → logprob: -10.334199905395508
    6. '<|end|>' → logprob: -10.959199905395508
    7. '	for' → logprob: -11.334199905395508
    8. '.' → logprob: -11.959199905395508
    9. ')' → logprob: -12.084199905395508
    10. ' ' → logprob: -12.459199905395508

Token 176: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0012454704847186804
    2. '   ' → logprob: -6.751245498657227
    3. ' for' → logprob: -9.501245498657227
    4. '	for' → logprob: -14.751245498657227
    5. '<|end|>' → logprob: -16.126245498657227
    6. 'from' → logprob: -18.001245498657227
    7. '  ' → logprob: -18.251245498657227
    8. ' ' → logprob: -19.251245498657227
    9. 'For' → logprob: -19.751245498657227
    10. '```' → logprob: -19.876245498657227

Token 177: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013470778241753578
    2. ' i' → logprob: -4.763470649719238
    3. 'start' → logprob: -5.388470649719238
    4. 'j' → logprob: -9.013470649719238
    5. ' start' → logprob: -9.138470649719238
    6. 'a' → logprob: -11.638470649719238
    7. 'top' → logprob: -11.763470649719238
    8. 's' → logprob: -12.013470649719238
    9. 'length' → logprob: -12.138470649719238
    10. 'v' → logprob: -12.888470649719238

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07901536673307419
    2. 'in' → logprob: -2.5790152549743652
    3. 'n' → logprob: -10.454015731811523
    4. 'range' → logprob: -10.454015731811523
    5. '   ' → logprob: -11.204015731811523
    6. ' ' → logprob: -11.329015731811523
    7. '1' → logprob: -11.829015731811523
    8. 'd' → logprob: -12.454015731811523
    9. '  ' → logprob: -12.454015731811523
    10. '0' → logprob: -12.766515731811523

Token 179: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029751179739832878
    2. ' range' → logprob: -3.5297510623931885
    3. ' ' → logprob: -14.40475082397461
    4. '  ' → logprob: -17.02975082397461
    5. '   ' → logprob: -17.15475082397461
    6. '	range' → logprob: -17.27975082397461
    7. '(range' → logprob: -17.77975082397461
    8. '0' → logprob: -20.15475082397461
    9. '1' → logprob: -20.65475082397461
    10. '
' → logprob: -20.65475082397461

Token 180: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.10107506066560745
    2. '(len' → logprob: -2.3510751724243164
    3. '(' → logprob: -7.226075172424316
    4. '(n' → logprob: -9.226075172424316
    5. 'len' → logprob: -10.601075172424316
    6. '(range' → logprob: -11.476075172424316
    7. 'N' → logprob: -13.101075172424316
    8. '(M' → logprob: -13.601075172424316
    9. 'range' → logprob: -13.726075172424316
    10. ' len' → logprob: -13.976075172424316

Token 181: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.049242373555898666
    2. ' +' → logprob: -3.7992422580718994
    3. '):
' → logprob: -4.2992424964904785
    4. '):' → logprob: -4.4242424964904785
    5. '   ' → logprob: -9.67424201965332
    6. ')' → logprob: -12.04924201965332
    7. ' ' → logprob: -12.04924201965332
    8. ' ):' → logprob: -12.17424201965332
    9. '+
' → logprob: -12.67424201965332
    10. ' ):
' → logprob: -12.79924201965332

Token 182: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26842424273490906
    2. ' for' → logprob: -1.7684242725372314
    3. 'for' → logprob: -2.7684242725372314
    4. '       ' → logprob: -6.393424034118652
    5. '	for' → logprob: -8.018424034118652
    6. '    ' → logprob: -10.518424034118652
    7. ' ' → logprob: -11.268424034118652
    8. '+' → logprob: -12.268424034118652
    9. '  ' → logprob: -13.143424034118652
    10. 'from' → logprob: -13.893424034118652

Token 183: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.038184016942977905
    2. ' for' → logprob: -3.2881839275360107
    3. '   ' → logprob: -9.03818416595459
    4. '	for' → logprob: -10.66318416595459
    5. ' ' → logprob: -15.03818416595459
    6. '  ' → logprob: -17.538183212280273
    7. '    ' → logprob: -18.288183212280273
    8. 'from' → logprob: -18.788183212280273
    9. '+' → logprob: -19.288183212280273
    10. '```' → logprob: -19.413183212280273

Token 184: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10030101239681244
    2. ' j' → logprob: -2.3503010272979736
    3. ' range' → logprob: -9.975300788879395
    4. 'range' → logprob: -10.100300788879395
    5. '   ' → logprob: -12.975300788879395
    6. '_j' → logprob: -13.225300788879395
    7. '	j' → logprob: -13.975300788879395
    8. 'r' → logprob: -15.350300788879395
    9. ' ' → logprob: -15.475300788879395
    10. ' in' → logprob: -15.850300788879395

Token 185: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04312273859977722
    2. 'in' → logprob: -3.1681227684020996
    3. ' i' → logprob: -10.043122291564941
    4. 'i' → logprob: -10.793122291564941
    5. ' ' → logprob: -10.918122291564941
    6. '	in' → logprob: -11.543122291564941
    7. 'j' → logprob: -12.293122291564941
    8. 's' → logprob: -12.418122291564941
    9. '```' → logprob: -12.418122291564941
    10. '   ' → logprob: -12.543122291564941

Token 186: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6536539196968079
    2. ' range' → logprob: -0.7786539196968079
    3. 'i' → logprob: -4.153654098510742
    4. ' i' → logprob: -5.278654098510742
    5. '(range' → logprob: -11.528654098510742
    6. ' ' → logprob: -11.903654098510742
    7. '   ' → logprob: -12.528654098510742
    8. '(i' → logprob: -13.028654098510742
    9. '  ' → logprob: -13.278654098510742
    10. '	range' → logprob: -13.653654098510742

Token 187: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5216424465179443
    2. ' i' → logprob: -1.8966424465179443
    3. '(i' → logprob: -2.1466424465179443
    4. 'range' → logprob: -2.7716424465179443
    5. ' range' → logprob: -2.7716424465179443
    6. ' in' → logprob: -4.771642684936523
    7. 'in' → logprob: -5.271642684936523
    8. '(range' → logprob: -7.771642684936523
    9. '[i' → logprob: -9.146642684936523
    10. '(' → logprob: -9.146642684936523

Token 188: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017149277264252305
    2. ' +' → logprob: -6.376714706420898
    3. '+
' → logprob: -11.751714706420898
    4. '1' → logprob: -13.126714706420898
    5. '+i' → logprob: -13.751714706420898
    6. '+j' → logprob: -14.001714706420898
    7. '   ' → logprob: -15.626714706420898
    8. ',' → logprob: -15.751714706420898
    9. '+)' → logprob: -15.876714706420898
    10. ' +
' → logprob: -16.0017147064209

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.250005722045898
    3. '2' → logprob: -14.250005722045898
    4. '```' → logprob: -16.8750057220459
    5. '   ' → logprob: -17.3125057220459
    6. 'i' → logprob: -17.5625057220459
    7. '۱' → logprob: -18.1875057220459
    8. ')' → logprob: -18.4375057220459
    9. '+' → logprob: -18.5625057220459
    10. '१' → logprob: -18.5625057220459

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044223200529813766
    2. ' ,' → logprob: -8.000442504882812
    3. '1' → logprob: -9.375442504882812
    4. ',len' → logprob: -12.125442504882812
    5. '+' → logprob: -12.500442504882812
    6. ',n' → logprob: -12.625442504882812
    7. ',N' → logprob: -13.125442504882812
    8. ',
' → logprob: -13.750442504882812
    9. ' ' → logprob: -14.125442504882812
    10. '+,' → logprob: -14.250442504882812

Token 191: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005999067332595587
    2. ' N' → logprob: -5.1309990882873535
    3. 'n' → logprob: -10.380998611450195
    4. 'len' → logprob: -11.005998611450195
    5. '   ' → logprob: -12.255998611450195
    6. 'j' → logprob: -12.505998611450195
    7. 'i' → logprob: -12.505998611450195
    8. '(N' → logprob: -12.630998611450195
    9. ')' → logprob: -13.380998611450195
    10. ' ' → logprob: -13.505998611450195

Token 192: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002187376143410802
    2. ' +' → logprob: -6.127187252044678
    3. ')+' → logprob: -14.377187728881836
    4. ')' → logprob: -14.752187728881836
    5. '+
' → logprob: -15.002187728881836
    6. '+)' → logprob: -15.127187728881836
    7. '()+' → logprob: -15.877187728881836
    8. '   ' → logprob: -16.127187728881836
    9. '+j' → logprob: -16.127187728881836
    10. '+i' → logprob: -16.877187728881836

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000397422380046919
    2. '2' → logprob: -8.000397682189941
    3. '+' → logprob: -9.750397682189941
    4. ' ' → logprob: -12.750397682189941
    5. '   ' → logprob: -14.625397682189941
    6. ' +' → logprob: -15.625397682189941
    7. '```' → logprob: -15.875397682189941
    8. ')' → logprob: -16.875396728515625
    9. '):
' → logprob: -17.875396728515625
    10. '
' → logprob: -18.312896728515625

Token 194: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08315790444612503
    2. ':' → logprob: -2.583158016204834
    3. '):
' → logprob: -5.583158016204834
    4. ']:' → logprob: -8.083157539367676
    5. '       ' → logprob: -9.458157539367676
    6. '   ' → logprob: -9.708157539367676
    7. ':
' → logprob: -10.583157539367676
    8. ')' → logprob: -11.708157539367676
    9. '}:' → logprob: -12.083157539367676
    10. '           ' → logprob: -12.708157539367676

Token 195: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025136714801192284
    2. ':' → logprob: -4.150136947631836
    3. '   ' → logprob: -5.025136947631836
    4. '<|end|>' → logprob: -7.025136947631836
    5. ')' → logprob: -8.025136947631836
    6. ' :' → logprob: -8.275136947631836
    7. ':
' → logprob: -8.275136947631836
    8. ',' → logprob: -9.025136947631836
    9. ' ' → logprob: -9.150136947631836
    10. '    ' → logprob: -9.525136947631836

Token 196: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.3164304494857788
    2. ' length' → logprob: -1.6914304494857788
    3. 'segment' → logprob: -2.9414305686950684
    4. 'key' → logprob: -5.191430568695068
    5. ' segment' → logprob: -5.191430568695068
    6. '           ' → logprob: -5.316430568695068
    7. ' key' → logprob: -5.941430568695068
    8. 'l' → logprob: -5.941430568695068
    9. 'diff' → logprob: -5.941430568695068
    10. 'seg' → logprob: -5.941430568695068

Token 197: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163747429847717
    2. ' =' → logprob: -4.264163970947266
    3. '=

' → logprob: -16.389163970947266
    4. 's' → logprob: -17.139163970947266
    5. '=
' → logprob: -17.514163970947266
    6. ')' → logprob: -17.889163970947266
    7. '=line' → logprob: -18.014163970947266
    8. ' ' → logprob: -18.264163970947266
    9. ']' → logprob: -18.639163970947266
    10. '=int' → logprob: -19.014163970947266

Token 198: ' vertical' (ID: 17679)
  Prédit: ' vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.06197642162442207
    2. 'vertical' → logprob: -2.811976432800293
    3. '(vertical' → logprob: -12.186976432800293
    4. 'abs' → logprob: -13.936976432800293
    5. '   ' → logprob: -14.436976432800293
    6. ' abs' → logprob: -14.811976432800293
    7. 'horizontal' → logprob: -14.936976432800293
    8. ' ' → logprob: -15.311976432800293
    9. 'vert' → logprob: -15.436976432800293
    10. ' horizontal' → logprob: -15.561976432800293

Token 199: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.4974866644479334e-05
    2. '[' → logprob: -11.125015258789062
    3. ' [' → logprob: -16.250015258789062
    4. '[i' → logprob: -16.875015258789062
    5. '][' → logprob: -17.625015258789062
    6. 'j' → logprob: -17.625015258789062
    7. '\[' → logprob: -18.000015258789062
    8. '[
' → logprob: -18.500015258789062
    9. ']' → logprob: -18.625015258789062
    10. '
' → logprob: -18.875015258789062

Token 200: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7087762355804443
    2. ']' → logprob: -1.2087762355804443
    3. ' -' → logprob: -1.5837762355804443
    4. ']-' → logprob: -5.833776473999023
    5. '[' → logprob: -7.083776473999023
    6. '[-' → logprob: -9.208776473999023
    7. '[i' → logprob: -9.958776473999023
    8. ' ]' → logprob: -10.833776473999023
    9. '[j' → logprob: -11.208776473999023
    10. '[length' → logprob: -11.833776473999023

Token 201: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3868788182735443
    2. ' -' → logprob: -1.1368788480758667
    3. '   ' → logprob: -13.511878967285156
    4. '-
' → logprob: -13.636878967285156
    5. '           ' → logprob: -13.761878967285156
    6. '-i' → logprob: -14.011878967285156
    7. '-v' → logprob: -15.136878967285156
    8. ' ' → logprob: -15.261878967285156
    9. '[' → logprob: -15.511878967285156
    10. ' ' → logprob: -15.511878967285156

Token 202: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.014163863845169544
    2. ' vertical' → logprob: -4.264163970947266
    3. '(vertical' → logprob: -15.764163970947266
    4. 'horizontal' → logprob: -16.639163970947266
    5. '.vertical' → logprob: -17.514163970947266
    6. 'vert' → logprob: -17.639163970947266
    7. '           ' → logprob: -17.889163970947266
    8. '   ' → logprob: -18.139163970947266
    9. '_vertical' → logprob: -19.139163970947266
    10. ' вертик' → logprob: -19.264163970947266

Token 203: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -14.875
    3. '[' → logprob: -17.75
    4. '[j' → logprob: -19.5
    5. ' [' → logprob: -20.875
    6. '[
' → logprob: -21.5
    7. '[I' → logprob: -21.5
    8. ' i' → logprob: -21.625
    9. '	i' → logprob: -21.625
    10. '```' → logprob: -21.875

Token 204: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0680309310555458
    2. ']
' → logprob: -3.068030834197998
    3. '           ' → logprob: -4.443030834197998
    4. ')' → logprob: -5.068030834197998
    5. ')
' → logprob: -7.443030834197998
    6. '       ' → logprob: -8.068031311035156
    7. '
' → logprob: -9.068031311035156
    8. ']
' → logprob: -9.318031311035156
    9. ')]' → logprob: -10.443031311035156
    10. '   ' → logprob: -10.568031311035156

Token 205: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.423219696851447e-05
    2. '   ' → logprob: -10.375083923339844
    3. '       ' → logprob: -10.375083923339844
    4. ')' → logprob: -12.250083923339844
    5. ']' → logprob: -12.500083923339844
    6. '               ' → logprob: -13.125083923339844
    7. 'segments' → logprob: -13.125083923339844
    8. '
' → logprob: -13.375083923339844
    9. ' segments' → logprob: -13.625083923339844
    10. '```' → logprob: -13.625083923339844

Token 206: ' if' (ID: 538)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.15270185470581055
    2. ' segments' → logprob: -2.0277018547058105
    3. '           ' → logprob: -4.6527018547058105
    4. ' if' → logprob: -8.027702331542969
    5. 'if' (adapté à ' if') → logprob: -9.402702331542969
    6. '   ' → logprob: -11.527702331542969
    7. '       ' → logprob: -12.152702331542969
    8. '_segments' → logprob: -12.652702331542969
    9. 'segment' → logprob: -13.027702331542969
    10. '               ' → logprob: -13.152702331542969

Token 207: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.14269179105758667
    2. ' length' → logprob: -2.0176918506622314
    3. 'segments' → logprob: -11.517691612243652
    4. ' segments' → logprob: -13.392691612243652
    5. '	length' → logprob: -13.892691612243652
    6. 'leng' → logprob: -13.892691612243652
    7. '(length' → logprob: -14.017691612243652
    8. 'ength' → logprob: -14.267691612243652
    9. 'l' → logprob: -14.517691612243652
    10. ' ' → logprob: -14.767691612243652

Token 208: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04644036293029785
    2. ' not' → logprob: -3.421440362930298
    3. 'in' → logprob: -4.421440124511719
    4. 'not' → logprob: -7.296440124511719
    5. ':' → logprob: -12.046440124511719
    6. ')' → logprob: -12.296440124511719
    7. ']' → logprob: -12.671440124511719
    8. 'n' → logprob: -14.296440124511719
    9. '>' → logprob: -14.671440124511719
    10. 's' → logprob: -14.671440124511719

Token 209: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.006715370807796717
    2. ' segments' → logprob: -5.006715297698975
    3. '_segments' → logprob: -17.131715774536133
    4. 'segment' → logprob: -18.006715774536133
    5. 'Segments' → logprob: -18.256715774536133
    6. 'seg' → logprob: -18.256715774536133
    7. 'sections' → logprob: -18.256715774536133
    8. '   ' → logprob: -18.881715774536133
    9. 'se' → logprob: -18.881715774536133
    10. ' segmentos' → logprob: -19.756715774536133

Token 210: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -1.1756367712223437e-05
    2. '_' → logprob: -11.375011444091797
    3. 's' → logprob: -16.250011444091797
    4. 'v' → logprob: -17.375011444091797
    5. '_u' → logprob: -17.750011444091797
    6. '\' → logprob: -17.750011444091797
    7. '}_' → logprob: -18.250011444091797
    8. ' _' → logprob: -18.375011444091797
    9. '_t' → logprob: -18.875011444091797
    10. '_y' → logprob: -19.250011444091797

Token 211: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5760231614112854
    2. ':' → logprob: -0.8260231614112854
    3. ':
' → logprob: -10.20102310180664
    4. '):
' → logprob: -10.45102310180664
    5. '=' → logprob: -11.95102310180664
    6. ':

' → logprob: -12.57602310180664
    7. '():
' → logprob: -12.70102310180664
    8. '       ' → logprob: -13.95102310180664
    9. '           ' → logprob: -14.07602310180664
    10. ']:
' → logprob: -14.45102310180664

Token 212: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03150862455368042
    2. 'segments' → logprob: -3.531508684158325
    3. ' segments' → logprob: -6.656508445739746
    4. '           ' → logprob: -8.531508445739746
    5. '<|end|>' → logprob: -9.656508445739746
    6. '                
' → logprob: -10.031508445739746
    7. '_segments' → logprob: -10.156508445739746
    8. 'tokens' → logprob: -10.281508445739746
    9. '```' → logprob: -10.281508445739746
    10. 'count' → logprob: -11.656508445739746

Token 213: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.7671996355056763
    2. 'segments' (adapté à ' segments') → logprob: -0.7671996355056763
    3. '               ' → logprob: -2.6421995162963867
    4. '                   ' → logprob: -9.517199516296387
    5. '_segments' → logprob: -9.642199516296387
    6. '           ' → logprob: -11.142199516296387
    7. 'Segments' → logprob: -12.017199516296387
    8. '   ' → logprob: -12.517199516296387
    9. '```' → logprob: -13.392199516296387
    10. '       ' → logprob: -13.517199516296387

Token 214: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -9.088346359931165e-07
    2. '[v' → logprob: -14.250000953674316
    3. 'v' → logprob: -16.75
    4. '[' → logprob: -16.75
    5. 's' → logprob: -17.625
    6. '_' → logprob: -17.75
    7. '[_' → logprob: -18.25
    8. '```' → logprob: -19.125
    9. '	v' → logprob: -20.0
    10. ' _' → logprob: -20.25

Token 215: '[length' (ID: 130091)
  Prédit: '[length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -1.1160349458805285e-05
    2. 'length' → logprob: -12.000011444091797
    3. '[' → logprob: -13.000011444091797
    4. '[l' → logprob: -14.250011444091797
    5. '[len' → logprob: -14.875011444091797
    6. '[count' → logprob: -14.875011444091797
    7. ',length' → logprob: -15.625011444091797
    8. '(length' → logprob: -15.750011444091797
    9. '	length' → logprob: -15.875011444091797
    10. ':length' → logprob: -16.125011444091797

Token 216: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0338929109275341
    2. ']+=' → logprob: -3.408892869949341
    3. ' ]' → logprob: -9.033892631530762
    4. '+=' → logprob: -9.158892631530762
    5. ']=' → logprob: -11.283892631530762
    6. ' +=' → logprob: -11.908892631530762
    7. '']' → logprob: -14.033892631530762
    8. '+' → logprob: -14.658892631530762
    9. ']+' → logprob: -14.783892631530762
    10. '"]' → logprob: -14.783892631530762

Token 217: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004794176667928696
    2. ' +=' → logprob: -5.504794120788574
    3. '=' → logprob: -7.254794120788574
    4. ']+=' → logprob: -11.754794120788574
    5. '+' → logprob: -14.629794120788574
    6. ' =' → logprob: -15.379794120788574
    7. '[' → logprob: -16.62979507446289
    8. ')' → logprob: -17.12979507446289
    9. '+="' → logprob: -17.25479507446289
    10. '+='' → logprob: -17.50479507446289

Token 218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024758970830589533
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -15.12747573852539
    4. ' ' → logprob: -18.25247573852539
    5. '```' → logprob: -18.87747573852539
    6. '  ' → logprob: -19.50247573852539
    7. '0' → logprob: -19.87747573852539
    8. '<|end|>' → logprob: -20.37747573852539
    9. '
' → logprob: -20.56497573852539
    10. '           ' → logprob: -21.00247573852539

Token 219: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2021673172712326
    2. 'else' → logprob: -1.827167272567749
    3. ' else' → logprob: -3.827167272567749
    4. '       ' → logprob: -7.952167510986328
    5. '               ' → logprob: -11.077167510986328
    6. '```' → logprob: -11.452167510986328
    7. '	else' → logprob: -11.952167510986328
    8. '   ' → logprob: -12.452167510986328
    9. '		' → logprob: -12.702167510986328
    10. '          ' → logprob: -12.827167510986328

Token 220: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3574449121952057
    2. 'else' → logprob: -1.2324448823928833
    3. ' else' → logprob: -4.732444763183594
    4. '       ' → logprob: -9.357444763183594
    5. '```' → logprob: -10.107444763183594
    6. '               ' → logprob: -11.732444763183594
    7. '<|end|>' → logprob: -12.357444763183594
    8. '          ' → logprob: -13.107444763183594
    9. '		' → logprob: -13.232444763183594
    10. '#else' → logprob: -13.357444763183594

Token 221: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.45820003747940063
    2. '           ' → logprob: -1.2081999778747559
    3. ' else' → logprob: -2.958199977874756
    4. '       ' → logprob: -4.083199977874756
    5. '```' → logprob: -10.833200454711914
    6. '          ' → logprob: -11.083200454711914
    7. '               ' → logprob: -11.333200454711914
    8. '   ' → logprob: -11.708200454711914
    9. '	else' → logprob: -12.208200454711914
    10. '		' → logprob: -12.333200454711914

Token 222: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06621383875608444
    2. ':
' → logprob: -2.816213846206665
    3. '               ' → logprob: -6.191213607788086
    4. ' :' → logprob: -6.691213607788086
    5. ' :
' → logprob: -7.941213607788086
    6. ' segments' → logprob: -8.066213607788086
    7. '           ' → logprob: -8.441213607788086
    8. ':

' → logprob: -11.441213607788086
    9. '   ' → logprob: -11.816213607788086
    10. 'segments' → logprob: -11.816213607788086

Token 223: '               ' (ID: 506)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.7289806008338928
    2. 'segments' → logprob: -0.7289806008338928
    3. '               ' → logprob: -3.353980541229248
    4. '           ' → logprob: -8.353981018066406
    5. '_segments' → logprob: -12.103981018066406
    6. '   ' → logprob: -12.228981018066406
    7. 'Segments' → logprob: -12.978981018066406
    8. '       ' → logprob: -13.228981018066406
    9. '                   ' → logprob: -13.728981018066406
    10. '0' → logprob: -13.728981018066406

Token 224: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' (adapté à ' segments') → logprob: -0.3132633566856384
    2. ' segments' → logprob: -1.3132634162902832
    3. '           ' → logprob: -14.188262939453125
    4. '_segments' → logprob: -14.563262939453125
    5. 'Segments' → logprob: -16.188262939453125
    6. '1' → logprob: -16.188262939453125
    7. 'segment' → logprob: -16.313262939453125
    8. '               ' → logprob: -16.438262939453125
    9. ' ' → logprob: -17.188262939453125
    10. '   ' → logprob: -17.563262939453125

Token 225: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -5.512236498361744e-07
    2. '_s' → logprob: -16.125
    3. 'v' → logprob: -16.25
    4. '[_' → logprob: -16.625
    5. ' _' → logprob: -16.875
    6. 's' → logprob: -17.375
    7. '_' → logprob: -17.375
    8. ''_' → logprob: -18.5
    9. '```' → logprob: -19.125
    10. '[' → logprob: -19.375

Token 226: '[length' (ID: 130091)
  Prédit: '[length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -0.004416347946971655
    2. '[' → logprob: -5.879416465759277
    3. '=' → logprob: -6.504416465759277
    4. ' =' → logprob: -9.254416465759277
    5. ']' → logprob: -11.754416465759277
    6. 'length' → logprob: -12.754416465759277
    7. '[len' → logprob: -13.504416465759277
    8. '[count' → logprob: -13.754416465759277
    9. '[line' → logprob: -13.754416465759277
    10. '[
' → logprob: -14.379416465759277

Token 227: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06641777604818344
    2. '=' → logprob: -2.816417694091797
    3. ']=' → logprob: -5.441417694091797
    4. ' =' → logprob: -9.191417694091797
    5. ' ]' → logprob: -12.691417694091797
    6. ')' → logprob: -13.566417694091797
    7. '']' → logprob: -15.941417694091797
    8. '']=' → logprob: -16.066417694091797
    9. ')=' → logprob: -16.691417694091797
    10. '>' → logprob: -16.816417694091797

Token 228: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001584850688232109
    2. ' =' → logprob: -8.750158309936523
    3. '=
' → logprob: -20.500158309936523
    4. ']=' → logprob: -21.125158309936523
    5. '=True' → logprob: -21.250158309936523
    6. '=

' → logprob: -22.000158309936523
    7. ']' → logprob: -22.250158309936523
    8. ')=' → logprob: -22.250158309936523
    9. '＝' → logprob: -22.250158309936523
    10. ')' → logprob: -22.500158309936523

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '0' → logprob: -16.250024795532227
    4. '   ' → logprob: -18.875024795532227
    5. '```' → logprob: -20.750024795532227
    6. ' ' → logprob: -21.125024795532227
    7. '１' → logprob: -22.062524795532227
    8. '  ' → logprob: -22.125024795532227
    9. '۱' → logprob: -22.187524795532227
    10. '2' → logprob: -22.250024795532227

Token 230: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00599385891109705
    2. 'for' → logprob: -5.505993843078613
    3. ' for' → logprob: -6.630993843078613
    4. '
' → logprob: -7.505993843078613
    5. '    
' → logprob: -10.630993843078613
    6. '<|end|>' → logprob: -12.130993843078613
    7. '```' → logprob: -12.255993843078613
    8. '	for' → logprob: -12.755993843078613
    9. '       ' → logprob: -12.880993843078613
    10. '           ' → logprob: -13.755993843078613

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003364977426826954
    2. 'for' → logprob: -5.8783650398254395
    3. ' for' → logprob: -8.003364562988281
    4. '
' → logprob: -8.878364562988281
    5. '    
' → logprob: -9.503364562988281
    6. '       ' → logprob: -12.503364562988281
    7. '	for' → logprob: -13.128364562988281
    8. '           ' → logprob: -13.753364562988281
    9. '  
' → logprob: -14.253364562988281
    10. '.' → logprob: -14.253364562988281

Token 232: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32188987731933594
    2. 'for' (adapté à ' for') → logprob: -1.571889877319336
    3. ' for' → logprob: -2.696889877319336
    4. '    
' → logprob: -9.071889877319336
    5. '	for' → logprob: -10.946889877319336
    6. '
' → logprob: -12.196889877319336
    7. '  
' → logprob: -12.196889877319336
    8. ' ' → logprob: -12.821889877319336
    9. '<|end|>' → logprob: -13.196889877319336
    10. '  ' → logprob: -13.446889877319336

Token 233: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07894454151391983
    2. ' i' → logprob: -2.578944444656372
    3. 'j' → logprob: -10.578944206237793
    4. 'k' → logprob: -12.203944206237793
    5. ' j' → logprob: -12.328944206237793
    6. '0' → logprob: -12.578944206237793
    7. 'a' → logprob: -12.953944206237793
    8. ' ' → logprob: -13.078944206237793
    9. 'x' → logprob: -13.078944206237793
    10. '_i' → logprob: -13.766444206237793

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023265395313501358
    2. 'in' → logprob: -3.7732653617858887
    3. ' ' → logprob: -11.773265838623047
    4. '(' → logprob: -12.523265838623047
    5. 'n' → logprob: -13.398265838623047
    6. '	in' → logprob: -13.523265838623047
    7. '  ' → logprob: -13.648265838623047
    8. '   ' → logprob: -14.023265838623047
    9. ' i' → logprob: -14.148265838623047
    10. '=' → logprob: -14.648265838623047

Token 235: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5761034488677979
    2. 'range' → logprob: -0.8261034488677979
    3. '(range' → logprob: -8.826103210449219
    4. '(' → logprob: -11.201103210449219
    5. ' ' → logprob: -13.451103210449219
    6. ' in' → logprob: -14.201103210449219
    7. '   ' → logprob: -14.576103210449219
    8. '0' → logprob: -15.326103210449219
    9. '(M' → logprob: -15.951103210449219
    10. '  ' → logprob: -16.07610321044922

Token 236: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.00012523093027994037
    2. 'M' → logprob: -9.62512493133545
    3. '(' → logprob: -10.25012493133545
    4. 'range' → logprob: -11.37512493133545
    5. ' (' → logprob: -11.87512493133545
    6. '   ' → logprob: -14.00012493133545
    7. ' M' → logprob: -14.25012493133545
    8. ' range' → logprob: -14.37512493133545
    9. '0' → logprob: -14.50012493133545
    10. '(len' → logprob: -14.87512493133545

Token 237: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07942858338356018
    2. '):
' → logprob: -2.5794286727905273
    3. ':' → logprob: -8.454428672790527
    4. '+' → logprob: -8.579428672790527
    5. '   ' → logprob: -9.454428672790527
    6. ')' → logprob: -10.079428672790527
    7. ' ):' → logprob: -12.079428672790527
    8. '):
' → logprob: -12.829428672790527
    9. '       ' → logprob: -13.079428672790527
    10. ']:' → logprob: -13.579428672790527

Token 238: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14939434826374054
    2. ' for' → logprob: -2.6493942737579346
    3. '	for' → logprob: -3.2743942737579346
    4. 'for' → logprob: -3.5243942737579346
    5. '       ' → logprob: -7.399394512176514
    6. ' ' → logprob: -8.899394035339355
    7. '<|end|>' → logprob: -12.274394035339355
    8. '    ' → logprob: -12.649394035339355
    9. '```' → logprob: -12.774394035339355
    10. '  ' → logprob: -13.524394035339355

Token 239: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10232897847890854
    2. ' for' → logprob: -2.3523290157318115
    3. '	for' → logprob: -6.852328777313232
    4. '   ' → logprob: -6.852328777313232
    5. ' ' → logprob: -12.22732925415039
    6. '       ' → logprob: -14.10232925415039
    7. '  ' → logprob: -15.72732925415039
    8. '```' → logprob: -16.10232925415039
    9. '_for' → logprob: -16.47732925415039
    10. '    ' → logprob: -16.60232925415039

Token 240: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.1556876301765442
    2. 'j' → logprob: -2.0306875705718994
    3. ' i' → logprob: -4.4056878089904785
    4. 'i' → logprob: -7.4056878089904785
    5. '   ' → logprob: -9.90568733215332
    6. '(j' → logprob: -11.28068733215332
    7. ' (' → logprob: -11.40568733215332
    8. '    ' → logprob: -11.40568733215332
    9. '(i' → logprob: -11.65568733215332
    10. ' ' → logprob: -12.28068733215332

Token 241: ' in' (ID: 306)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.18049709498882294
    2. '(j' → logprob: -2.055497169494629
    3. ' (' → logprob: -3.930497169494629
    4. '=' → logprob: -4.180497169494629
    5. ' in' → logprob: -7.430497169494629
    6. '=i' → logprob: -7.430497169494629
    7. '(' → logprob: -7.930497169494629
    8. ' =' → logprob: -7.930497169494629
    9. '=j' → logprob: -8.430497169494629
    10. '=(' → logprob: -10.805497169494629

Token 242: ' range' (ID: 3352)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.3856492842023727e-06
    2. ' i' → logprob: -14.500000953674316
    3. 'i' → logprob: -15.000000953674316
    4. ' (' → logprob: -15.625000953674316
    5. '(j' → logprob: -15.625000953674316
    6. '(' → logprob: -15.750000953674316
    7. '[i' → logprob: -18.000001907348633
    8. '{i' → logprob: -19.250001907348633
    9. '(ii' → logprob: -19.750001907348633
    10. '=i' → logprob: -19.875001907348633

Token 243: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.512236498361744e-07
    2. '(j' → logprob: -15.125000953674316
    3. '(' → logprob: -16.375
    4. ' (' → logprob: -16.375
    5. '[i' → logprob: -17.625
    6. 'i' → logprob: -19.5
    7. '(ii' → logprob: -19.875
    8. '(I' → logprob: -20.375
    9. '   ' → logprob: -21.0
    10. '{i' → logprob: -21.125

Token 244: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.451116051815916e-05
    2. ' +' → logprob: -11.125024795532227
    3. '+j' → logprob: -12.250024795532227
    4. '+,' → logprob: -12.500024795532227
    5. '+
' → logprob: -13.750024795532227
    6. '1' → logprob: -15.750024795532227
    7. '+)' → logprob: -18.500024795532227
    8. '+i' → logprob: -18.750024795532227
    9. '+

' → logprob: -18.875024795532227
    10. '＋' → logprob: -19.000024795532227

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.500031471252441
    3. '   ' → logprob: -13.250031471252441
    4. '       ' → logprob: -14.375031471252441
    5. '+' → logprob: -14.875031471252441
    6. 'j' → logprob: -15.000031471252441
    7. ',' → logprob: -15.375031471252441
    8. '2' → logprob: -15.500031471252441
    9. '           ' → logprob: -15.625031471252441
    10. '```' → logprob: -16.500032424926758

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001923352392623201
    2. ' ,' → logprob: -9.250192642211914
    3. ',j' → logprob: -9.500192642211914
    4. ',M' → logprob: -10.875192642211914
    5. ',
' → logprob: -14.500192642211914
    6. '   ' → logprob: -15.250192642211914
    7. '+,' → logprob: -15.375192642211914
    8. ',i' → logprob: -15.625192642211914
    9. '```' → logprob: -15.750192642211914
    10. '       ' → logprob: -15.875192642211914

Token 247: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.38687992095947266
    2. ' M' → logprob: -1.1368799209594727
    3. '   ' → logprob: -12.136879920959473
    4. ' ' → logprob: -13.386879920959473
    5. '    ' → logprob: -14.136879920959473
    6. 'j' → logprob: -14.636879920959473
    7. '  ' → logprob: -15.636879920959473
    8. '       ' → logprob: -16.011878967285156
    9. ',' → logprob: -16.261878967285156
    10. 'm' → logprob: -16.761878967285156

Token 248: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001911432045744732
    2. '1' → logprob: -9.000190734863281
    3. ' +' → logprob: -9.750190734863281
    4. '+
' → logprob: -12.500190734863281
    5. '[' → logprob: -13.875190734863281
    6. '+j' → logprob: -13.875190734863281
    7. '+)' → logprob: -14.250190734863281
    8. '   ' → logprob: -14.375190734863281
    9. ')' → logprob: -14.750190734863281
    10. 'j' → logprob: -14.750190734863281

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.25000286102295
    3. 'j' → logprob: -14.12500286102295
    4. '   ' → logprob: -16.000001907348633
    5. '+' → logprob: -17.000001907348633
    6. '```' → logprob: -17.375001907348633
    7. '2' → logprob: -17.750001907348633
    8. ' j' → logprob: -18.125001907348633
    9. ')' → logprob: -18.125001907348633
    10. ',' → logprob: -19.375001907348633

Token 250: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25971224904060364
    2. '):' → logprob: -1.6347122192382812
    3. '):
' → logprob: -4.009712219238281
    4. ':
' → logprob: -4.759712219238281
    5. '           ' → logprob: -5.134712219238281
    6. '       ' → logprob: -7.009712219238281
    7. ']:' → logprob: -8.634712219238281
    8. '   ' → logprob: -11.384712219238281
    9. ']:
' → logprob: -11.884712219238281
    10. ' :' → logprob: -12.509712219238281

Token 251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13470295071601868
    2. '       ' → logprob: -2.2597029209136963
    3. 'length' → logprob: -4.509703159332275
    4. ' length' → logprob: -4.634703159332275
    5. '   ' → logprob: -7.259703159332275
    6. '	length' → logprob: -9.884702682495117
    7. '               ' → logprob: -10.509702682495117
    8. '        ' → logprob: -10.509702682495117
    9. '	       ' → logprob: -10.634702682495117
    10. '```' → logprob: -11.134702682495117

Token 252: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.20330467820167542
    2. ' length' → logprob: -1.703304648399353
    3. '           ' → logprob: -6.703304767608643
    4. '   ' → logprob: -7.578304767608643
    5. '       ' → logprob: -9.203304290771484
    6. 'segment' → logprob: -10.703304290771484
    7. '	length' → logprob: -11.453304290771484
    8. '               ' → logprob: -12.578304290771484
    9. ' segment' → logprob: -12.953304290771484
    10. 'l' → logprob: -12.953304290771484

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788901224732399
    2. '=' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.328889846801758
    4. ' =
' → logprob: -17.078889846801758
    5. ' ==' → logprob: -17.328889846801758
    6. ' =)' → logprob: -18.078889846801758
    7. '＝' → logprob: -18.203889846801758
    8. ' ' → logprob: -18.328889846801758
    9. ')' → logprob: -18.578889846801758
    10. '==' → logprob: -18.953889846801758

Token 254: ' horizontal' (ID: 25511)
  Prédit: ' horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.38687458634376526
    2. 'horizontal' → logprob: -1.1368745565414429
    3. '(horizontal' → logprob: -13.011874198913574
    4. '.horizontal' → logprob: -14.886874198913574
    5. '   ' → logprob: -15.261874198913574
    6. 'Horizontal' → logprob: -15.886874198913574
    7. ' горизонт' → logprob: -16.13687515258789
    8. ' horiz' → logprob: -16.26187515258789
    9. '_horizontal' → logprob: -16.26187515258789
    10. ' horizont' → logprob: -16.38687515258789

Token 255: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.000000953674316
    3. 'j' → logprob: -16.625001907348633
    4. '[i' → logprob: -18.375001907348633
    5. ' [' → logprob: -18.750001907348633
    6. '```' → logprob: -18.750001907348633
    7. '(j' → logprob: -20.000001907348633
    8. ']' → logprob: -20.500001907348633
    9. '[k' → logprob: -20.500001907348633
    10. '
' → logprob: -20.625001907348633

Token 256: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013214473437983543
    2. ']-' → logprob: -9.37513256072998
    3. ' ]' → logprob: -10.37513256072998
    4. ' -' → logprob: -11.62513256072998
    5. '-' → logprob: -12.12513256072998
    6. '[' → logprob: -14.00013256072998
    7. ')' → logprob: -15.50013256072998
    8. '']' → logprob: -15.62513256072998
    9. '"]' → logprob: -16.750131607055664
    10. '   ' → logprob: -16.875131607055664

Token 257: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25193148851394653
    2. '-' → logprob: -1.5019314289093018
    3. ' ' → logprob: -13.626931190490723
    4. ' ' → logprob: -14.126931190490723
    5. '   ' → logprob: -15.751931190490723
    6. ' -
' → logprob: -17.00193214416504
    7. '[' → logprob: -17.12693214416504
    8. '-
' → logprob: -17.12693214416504
    9. '  ' → logprob: -17.37693214416504
    10. ')' → logprob: -18.12693214416504

Token 258: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.005234475247561932
    2. ' horizontal' → logprob: -5.255234241485596
    3. '           ' → logprob: -15.505234718322754
    4. '_horizontal' → logprob: -15.630234718322754
    5. '(horizontal' → logprob: -15.755234718322754
    6. 'orizontal' → logprob: -16.255233764648438
    7. '.horizontal' → logprob: -16.380233764648438
    8. '-horizontal' → logprob: -17.755233764648438
    9. ' горизонт' → logprob: -17.880233764648438
    10. '<|end|>' → logprob: -18.005233764648438

Token 259: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3144035041332245
    2. '[i' → logprob: -1.3144035339355469
    3. ' i' → logprob: -6.814403533935547
    4. '[' → logprob: -10.939403533935547
    5. 'horizontal' → logprob: -10.939403533935547
    6. '{i' → logprob: -12.439403533935547
    7. '	i' → logprob: -14.189403533935547
    8. '(i' → logprob: -14.314403533935547
    9. '[j' → logprob: -14.564403533935547
    10. ' [' → logprob: -14.564403533935547

Token 260: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7038220763206482
    2. '       ' → logprob: -1.078822135925293
    3. '           ' → logprob: -2.703822135925293
    4. '   ' → logprob: -3.078822135925293
    5. ']' → logprob: -3.203822135925293
    6. '<|end|>' → logprob: -5.453822135925293
    7. ' if' → logprob: -5.953822135925293
    8. ')
' → logprob: -7.078822135925293
    9. '):
' → logprob: -7.578822135925293
    10. ' ' → logprob: -7.703822135925293

Token 261: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1879032403230667
    2. '   ' → logprob: -2.1879031658172607
    3. '           ' → logprob: -3.5629031658172607
    4. ' if' → logprob: -3.6879031658172607
    5. ' ' → logprob: -6.81290340423584
    6. '<|end|>' → logprob: -6.81290340423584
    7. '    ' → logprob: -7.18790340423584
    8. '	if' → logprob: -8.06290340423584
    9. 'if' → logprob: -8.06290340423584
    10. '     ' → logprob: -8.06290340423584

Token 262: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.33490824699401855
    2. '           ' → logprob: -1.8349082469940186
    3. ' if' → logprob: -2.5849082469940186
    4. '       ' → logprob: -3.3349082469940186
    5. '   ' → logprob: -4.709908485412598
    6. 'count' → logprob: -5.334908485412598
    7. ' count' → logprob: -9.959908485412598
    8. '	if' → logprob: -10.334908485412598
    9. '               ' → logprob: -11.584908485412598
    10. ' ' → logprob: -12.209908485412598

Token 263: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.2519305646419525
    2. ' length' → logprob: -1.501930594444275
    3. 'segments' → logprob: -14.626930236816406
    4. '(length' → logprob: -15.001930236816406
    5. 'ength' → logprob: -15.251930236816406
    6. 'leng' → logprob: -15.876930236816406
    7. '	length' → logprob: -16.376930236816406
    8. ' segments' → logprob: -16.501930236816406
    9. 'segment' → logprob: -17.501930236816406
    10. '[length' → logprob: -17.626930236816406

Token 264: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021876145619899035
    2. 'in' → logprob: -6.127187728881836
    3. ' ' → logprob: -13.127187728881836
    4. ')' → logprob: -16.002187728881836
    5. 's' → logprob: -16.127187728881836
    6. 'In' → logprob: -16.752187728881836
    7. '[' → logprob: -16.752187728881836
    8. '>' → logprob: -16.877187728881836
    9. ' ' → logprob: -17.127187728881836
    10. '	in' → logprob: -17.377187728881836

Token 265: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.001170225441455841
    2. ' segments' → logprob: -6.7511701583862305
    3. 'sections' → logprob: -18.001171112060547
    4. '_segments' → logprob: -18.126171112060547
    5. 'segment' → logprob: -19.751171112060547
    6. 'se' → logprob: -20.001171112060547
    7. 'Segments' → logprob: -20.501171112060547
    8. '   ' → logprob: -21.251171112060547
    9. 'count' → logprob: -21.251171112060547
    10. ' segmentos' → logprob: -21.626171112060547

Token 266: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -16.375
    3. '_' → logprob: -18.25
    4. 's' → logprob: -18.5
    5. ''_' → logprob: -19.0
    6. ' _' → logprob: -20.125
    7. '"_' → logprob: -20.5
    8. '```' → logprob: -21.125
    9. '_w' → logprob: -21.25
    10. '##_' → logprob: -21.375

Token 267: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05588958039879799
    2. ':
' → logprob: -2.93088960647583
    3. '>' → logprob: -7.30588960647583
    4. '           ' → logprob: -8.430889129638672
    5. '       ' → logprob: -10.055889129638672
    6. '):' → logprob: -11.180889129638672
    7. '):
' → logprob: -11.180889129638672
    8. '               ' → logprob: -11.305889129638672
    9. '==' → logprob: -11.430889129638672
    10. '>:' → logprob: -11.805889129638672

Token 268: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06511525064706802
    2. 'count' → logprob: -3.190115213394165
    3. ':' → logprob: -4.065115451812744
    4. ':
' → logprob: -6.440115451812744
    5. '           ' → logprob: -6.565115451812744
    6. '       ' → logprob: -7.940115451812744
    7. ' count' → logprob: -8.440114974975586
    8. '[count' → logprob: -8.690114974975586
    9. '<|end|>' → logprob: -8.815114974975586
    10. '```' → logprob: -8.940114974975586

Token 269: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.005781835410743952
    2. '               ' → logprob: -6.005781650543213
    3. ' count' → logprob: -6.255781650543213
    4. '                   ' → logprob: -6.630781650543213
    5. '       ' → logprob: -10.630782127380371
    6. '           ' → logprob: -11.005782127380371
    7. '	count' → logprob: -11.630782127380371
    8. '   ' → logprob: -12.255782127380371
    9. '[count' → logprob: -12.505782127380371
    10. '                       ' → logprob: -13.380782127380371

Token 270: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25196272134780884
    2. ' +=' → logprob: -1.501962661743164
    3. ']+=' → logprob: -10.501962661743164
    4. '+' → logprob: -13.251962661743164
    5. '```' → logprob: -13.751962661743164
    6. '+=(' → logprob: -13.876962661743164
    7. '   ' → logprob: -14.001962661743164
    8. ')' → logprob: -14.626962661743164
    9. '=' → logprob: -15.376962661743164
    10. '[' → logprob: -15.626962661743164

Token 271: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.011056075803935528
    2. ' segments' → logprob: -4.511055946350098
    3. '1' → logprob: -12.136055946350098
    4. 'se' → logprob: -14.011055946350098
    5. '   ' → logprob: -14.511055946350098
    6. '           ' → logprob: -15.136055946350098
    7. '_segments' → logprob: -15.511055946350098
    8. 'Segments' → logprob: -15.636055946350098
    9. 'seg' → logprob: -15.761055946350098
    10. 'sections' → logprob: -15.761055946350098

Token 272: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -4.246537173457909e-06
    2. 'v' → logprob: -12.500003814697266
    3. 's' → logprob: -15.125003814697266
    4. 'segments' → logprob: -15.875003814697266
    5. '_segments' → logprob: -18.000003814697266
    6. '_' → logprob: -18.125003814697266
    7. '[v' → logprob: -19.750003814697266
    8. '	v' → logprob: -20.625003814697266
    9. ' segments' → logprob: -20.750003814697266
    10. '_s' → logprob: -20.750003814697266

Token 273: '[length' (ID: 130091)
  Prédit: '[length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -4.1080467781284824e-05
    2. 'length' → logprob: -10.125041007995605
    3. 'get' → logprob: -15.250041007995605
    4. '[' → logprob: -15.625041007995605
    5. '[l' → logprob: -15.750041007995605
    6. '.get' → logprob: -16.125041961669922
    7. '```' → logprob: -16.875041961669922
    8. '[len' → logprob: -17.000041961669922
    9. '[
' → logprob: -17.125041961669922
    10. '[[' → logprob: -17.250041961669922

Token 274: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.641735315322876
    2. '<|end|>' → logprob: -0.766735315322876
    3. '<|end|>' → logprob: -5.391735076904297
    4. ')' → logprob: -5.766735076904297
    5. '}' → logprob: -6.641735076904297
    6. ' ]' → logprob: -10.391735076904297
    7. ']}' → logprob: -11.516735076904297
    8. '']' → logprob: -11.516735076904297
    9. '```' → logprob: -11.891735076904297
    10. '       ' → logprob: -12.391735076904297

Token 275: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008648253045976162
    2. '   ' → logprob: -4.75864839553833
    3. ' print' → logprob: -10.383647918701172
    4. '```' → logprob: -13.758647918701172
    5. '(print' → logprob: -15.133647918701172
    6. '
' → logprob: -15.133647918701172
    7. '	print' → logprob: -15.258647918701172
    8. ')' → logprob: -15.258647918701172
    9. '<|end|>' → logprob: -15.258647918701172
    10. '    
' → logprob: -15.633647918701172

Token 276: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.038496408611536026
    2. '   ' → logprob: -3.288496494293213
    3. ' print' → logprob: -8.163496017456055
    4. '
' → logprob: -8.788496017456055
    5. '    
' → logprob: -11.788496017456055
    6. '```' → logprob: -12.163496017456055
    7. '	print' → logprob: -13.538496017456055
    8. '(print' → logprob: -13.663496017456055
    9. '<|end|>' → logprob: -14.413496017456055
    10. ')' → logprob: -14.538496017456055

Token 277: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.029760558158159256
    2. '(' → logprob: -3.5297605991363525
    3. '()' → logprob: -12.029760360717773
    4. ' (' → logprob: -13.154760360717773
    5. 'count' → logprob: -13.654760360717773
    6. '(cnt' → logprob: -15.029760360717773
    7. '(
' → logprob: -15.404760360717773
    8. '('' → logprob: -15.904760360717773
    9. '(c' → logprob: -16.029760360717773
    10. '(`' → logprob: -16.779760360717773

Token 278: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.625001907348633
    3. '())' → logprob: -14.875001907348633
    4. '()' → logprob: -15.250001907348633
    5. ')
' → logprob: -15.625001907348633
    6. ')`' → logprob: -16.000001907348633
    7. '))' → logprob: -16.625001907348633
    8. ')}' → logprob: -18.250001907348633
    9. '`)' → logprob: -18.750001907348633
    10. '')' → logprob: -19.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 276
Tokens correctement prédits (1ère position, stricte): 124
Tokens correctement prédits (1ère position, avec adaptation): 141
Tokens correctement prédits (top 10): 240
Précision stricte (1ère position): 44.93%
Précision adaptée (1ère position): 51.09%
Précision (top 10): 86.96%
================================================================================
