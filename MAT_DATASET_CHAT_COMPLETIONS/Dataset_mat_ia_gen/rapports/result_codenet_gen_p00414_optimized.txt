================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:23:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
L, N = map(int, input().split())
snake = input()

initial_len = L
initial_pairs = sum(1 for i in range(L-1) if snake[i] == 'o' and snake[i+1] == 'o')

# length recurrence: length_{n+1} = length_n + pairs_n * 3
# pairs_n+1 = pairs_n * 4 + length_n - 2 * pairs_n = length_n + 2 * pairs_n

# Define variables for iteration:
length = initial_len
pairs = initial_pairs

for _ in range(N):
    length, pairs = length + pairs * 3, length + 2 * pairs

print(length)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'L' (ID: 43)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' N' (ID: 478)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2101200670003891
    2. '.' → logprob: -3.0851199626922607
    3. '*' → logprob: -3.4601199626922607
    4. '[' → logprob: -3.7101199626922607
    5. '+' → logprob: -3.9601199626922607
    6. '(' → logprob: -4.08512020111084
    7. ',' → logprob: -4.08512020111084
    8. ' =' → logprob: -4.46012020111084
    9. ')' → logprob: -4.71012020111084
    10. ';' → logprob: -5.08512020111084

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3509637117385864
    2. '10' → logprob: -2.225963592529297
    3. 'map' → logprob: -2.975963592529297
    4. '0' → logprob: -3.100963592529297
    5. ' map' → logprob: -3.225963592529297
    6. '5' → logprob: -3.850963592529297
    7. '1' → logprob: -5.225963592529297
    8. '2' → logprob: -5.725963592529297
    9. '50' → logprob: -5.975963592529297
    10. '20' → logprob: -6.100963592529297

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01699678786098957
    2. '<|end|>' → logprob: -4.76699686050415
    3. '(lambda' → logprob: -5.01699686050415
    4. '(int' → logprob: -7.76699686050415
    5. '```' → logprob: -8.266996383666992
    6. '<|end|>' → logprob: -8.516996383666992
    7. ')' → logprob: -8.891996383666992
    8. '(str' → logprob: -8.891996383666992
    9. '(user' → logprob: -9.641996383666992
    10. '(token' → logprob: -10.016996383666992

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6129004955291748
    2. '(input' → logprob: -1.4879004955291748
    3. ')' → logprob: -2.237900495529175
    4. '(token' → logprob: -3.487900495529175
    5. '```' → logprob: -3.987900495529175
    6. '(str' → logprob: -4.362900733947754
    7. '(user' → logprob: -4.612900733947754
    8. '(range' → logprob: -4.987900733947754
    9. '(ord' → logprob: -5.487900733947754
    10. '<|end|>' → logprob: -5.737900733947754

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31328585743904114
    2. ' input' → logprob: -1.3132858276367188
    3. '(input' → logprob: -10.813285827636719
    4. ')' → logprob: -12.813285827636719
    5. ',input' → logprob: -14.688285827636719
    6. '=input' → logprob: -15.063285827636719
    7. '[input' → logprob: -16.31328582763672
    8. '<input' → logprob: -16.68828582763672
    9. ' ' → logprob: -16.68828582763672
    10. '```' → logprob: -16.81328582763672

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3689214289188385
    2. '()' → logprob: -1.2439213991165161
    3. ')' → logprob: -4.618921279907227
    4. '(""))' → logprob: -5.993921279907227
    5. '(' → logprob: -6.493921279907227
    6. '()))' → logprob: -6.743921279907227
    7. '().' → logprob: -6.993921279907227
    8. '();)' → logprob: -7.243921279907227
    9. '`()' → logprob: -7.243921279907227
    10. '());' → logprob: -7.493921279907227

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005262099206447601
    2. 'strip' → logprob: -5.2552618980407715
    3. 'rstrip' → logprob: -11.00526237487793
    4. ' split' → logprob: -12.00526237487793
    5. 'read' → logprob: -12.50526237487793
    6. ')' → logprob: -13.50526237487793
    7. '(split' → logprob: -15.50526237487793
    8. 'startswith' → logprob: -15.75526237487793
    9. 'replace' → logprob: -16.25526237487793
    10. 'spl' → logprob: -16.50526237487793

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19896404445171356
    2. '())' → logprob: -1.82396399974823
    3. '))' → logprob: -4.1989641189575195
    4. '()' → logprob: -5.9489641189575195
    5. '`)' → logprob: -7.1989641189575195
    6. '()))' → logprob: -8.07396411895752
    7. '(' → logprob: -9.07396411895752
    8. '')' → logprob: -9.82396411895752
    9. '('' → logprob: -10.19896411895752
    10. '```' → logprob: -10.94896411895752

Token 11: 'snake' (ID: 162012)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04073724523186684
    2. 'A' → logprob: -4.415737152099609
    3. 'x' → logprob: -5.040737152099609
    4. 'd' → logprob: -5.290737152099609
    5. 'for' → logprob: -5.665737152099609
    6. 'data' → logprob: -5.790737152099609
    7. 'arr' → logprob: -6.415737152099609
    8. 'array' → logprob: -6.915737152099609
    9. 's' → logprob: -7.040737152099609
    10. '`' → logprob: -7.165737152099609

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5066899061203003
    2. '_' → logprob: -1.1316899061203003
    3. '_case' → logprob: -3.75669002532959
    4. ' =' → logprob: -4.00669002532959
    5. '=' → logprob: -5.13169002532959
    6. '[]' → logprob: -5.25669002532959
    7. '_positions' → logprob: -5.75669002532959
    8. '[:]' → logprob: -5.75669002532959
    9. 's' → logprob: -6.00669002532959
    10. '.' → logprob: -6.00669002532959

Token 13: ' input' (ID: 3422)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4098418951034546
    2. '[' → logprob: -1.2848418951034546
    3. '[input' → logprob: -3.409842014312744
    4. 'list' → logprob: -4.659842014312744
    5. '[list' → logprob: -5.159842014312744
    6. '['' → logprob: -5.784842014312744
    7. '[(' → logprob: -6.159842014312744
    8. '[L' → logprob: -6.534842014312744
    9. '[int' → logprob: -7.034842014312744
    10. '[str' → logprob: -7.409842014312744

Token 14: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016772447153925896
    2. '()' → logprob: -4.141772270202637
    3. ')' → logprob: -8.016772270202637
    4. '.' → logprob: -9.016772270202637
    5. '```' → logprob: -9.891772270202637
    6. '('' → logprob: -10.141772270202637
    7. '`' → logprob: -10.266772270202637
    8. '().' → logprob: -10.641772270202637
    9. '`()' → logprob: -10.891772270202637
    10. '(
' → logprob: -11.016772270202637

Token 15: 'initial' (ID: 17493)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.140501618385315
    2. 'length' → logprob: -1.390501618385315
    3. 'positions' → logprob: -1.765501618385315
    4. 'dp' → logprob: -2.3905014991760254
    5. 'segments' → logprob: -3.5155014991760254
    6. 'counts' → logprob: -3.6405014991760254
    7. 'direction' → logprob: -3.7655014991760254
    8. 'position' → logprob: -4.015501499176025
    9. 'pos' → logprob: -4.390501499176025
    10. '_' → logprob: -4.515501499176025

Token 16: '_len' (ID: 13683)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09888170659542084
    2. '_position' → logprob: -3.473881721496582
    3. '_pos' → logprob: -3.598881721496582
    4. '_length' → logprob: -3.723881721496582
    5. '_positions' → logprob: -5.598881721496582
    6. 's' → logprob: -6.723881721496582
    7. '_head' → logprob: -6.848881721496582
    8. '_count' → logprob: -7.098881721496582
    9. '=' → logprob: -7.223881721496582
    10. '_direction' → logprob: -7.348881721496582

Token 17: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06703468412160873
    2. ' =' → logprob: -3.5670347213745117
    3. '=' → logprob: -3.9420347213745117
    4. 's' → logprob: -5.067034721374512
    5. 'ity' → logprob: -5.692034721374512
    6. '(' → logprob: -6.192034721374512
    7. ')' → logprob: -6.942034721374512
    8. '()' → logprob: -7.567034721374512
    9. 't' → logprob: -7.692034721374512
    10. '_th' → logprob: -7.817034721374512

Token 18: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.4254204332828522
    2. ' ' → logprob: -2.3004205226898193
    3. '0' → logprob: -2.8004205226898193
    4. 'L' → logprob: -2.8004205226898193
    5. ' len' → logprob: -3.0504205226898193
    6. 'len' → logprob: -3.3004205226898193
    7. ' snake' → logprob: -4.30042028427124
    8. ' int' → logprob: -4.67542028427124
    9. 'snake' → logprob: -5.17542028427124
    10. 'int' → logprob: -5.17542028427124

Token 19: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5342983603477478
    2. '
' → logprob: -1.2842984199523926
    3. '*' → logprob: -2.9092984199523926
    4. '-' → logprob: -3.7842984199523926
    5. '_' → logprob: -3.9092984199523926
    6. '<|end|>' → logprob: -4.159298419952393
    7. '#' → logprob: -5.284298419952393
    8. 'snake' → logprob: -5.784298419952393
    9. ' ' → logprob: -6.159298419952393
    10. '=' → logprob: -6.534298419952393

Token 20: 'initial' (ID: 17493)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7758321166038513
    2. '+' → logprob: -1.275832176208496
    3. 'for' → logprob: -2.900832176208496
    4. 's' → logprob: -3.775832176208496
    5. 'current' → logprob: -3.900832176208496
    6. 'count' → logprob: -3.900832176208496
    7. '_
' → logprob: -4.275832176208496
    8. '*' → logprob: -4.400832176208496
    9. ' for' → logprob: -4.650832176208496
    10. 'max' → logprob: -4.650832176208496

Token 21: '_pairs' (ID: 90005)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7529728412628174
    2. '_len' → logprob: -0.7529728412628174
    3. '_sn' → logprob: -3.8779728412628174
    4. '_pos' → logprob: -4.127972602844238
    5. '_length' → logprob: -5.127972602844238
    6. '_s' → logprob: -5.502972602844238
    7. '_l' → logprob: -6.252972602844238
    8. '_idx' → logprob: -7.127972602844238
    9. '_n' → logprob: -7.127972602844238
    10. '_count' → logprob: -7.377972602844238

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0340590737760067
    2. '=' → logprob: -3.4090590476989746
    3. '_' → logprob: -8.159059524536133
    4. '_count' → logprob: -10.284059524536133
    5. 's' → logprob: -11.034059524536133
    6. ',' → logprob: -11.034059524536133
    7. '[' → logprob: -11.284059524536133
    8. ' ' → logprob: -12.034059524536133
    9. ')' → logprob: -12.034059524536133
    10. '=[]' → logprob: -12.159059524536133

Token 23: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21217620372772217
    2. ' ' → logprob: -2.7121763229370117
    3. '{}' → logprob: -3.0871763229370117
    4. 'L' → logprob: -3.8371763229370117
    5. '[]' → logprob: -3.8371763229370117
    6. ' L' → logprob: -4.087176322937012
    7. ' []' → logprob: -5.337176322937012
    8. 'set' → logprob: -5.462176322937012
    9. ' {}' → logprob: -5.962176322937012
    10. 'snake' → logprob: -6.337176322937012

Token 24: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020303145051002502
    2. '((' → logprob: -4.020303249359131
    3. '(lambda' → logprob: -7.020303249359131
    4. '(s' → logprob: -7.270303249359131
    5. '([' → logprob: -7.770303249359131
    6. '(len' → logprob: -10.645302772521973
    7. '(int' → logprob: -10.770302772521973
    8. '([(' → logprob: -11.145302772521973
    9. '(
' → logprob: -11.270302772521973
    10. '(sn' → logprob: -11.770302772521973

Token 25: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9559236168861389
    2. '1' → logprob: -0.9559236168861389
    3. 'snake' → logprob: -2.080923557281494
    4. '(s' → logprob: -2.455923557281494
    5. ')' → logprob: -5.580923557281494
    6. '[' → logprob: -5.705923557281494
    7. 's' → logprob: -5.955923557281494
    8. '(i' → logprob: -6.705923557281494
    9. 'sn' → logprob: -6.830923557281494
    10. '(x' → logprob: -6.955923557281494

Token 26: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14379791915416718
    2. '(s' → logprob: -2.8937978744506836
    3. ')' → logprob: -3.1437978744506836
    4. '(x' → logprob: -4.893797874450684
    5. '(i' → logprob: -5.018797874450684
    6. '(lambda' → logprob: -5.768797874450684
    7. '[' → logprob: -6.018797874450684
    8. '(c' → logprob: -6.018797874450684
    9. 'for' → logprob: -6.143797874450684
    10. '(
' → logprob: -6.268797874450684

Token 27: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06107654049992561
    2. '_' → logprob: -3.8110766410827637
    3. ' _' → logprob: -3.9360766410827637
    4. 'i' → logprob: -4.186076641082764
    5. ' ' → logprob: -6.186076641082764
    6. ' s' → logprob: -9.311076164245605
    7. '_i' → logprob: -10.061076164245605
    8. '  ' → logprob: -10.311076164245605
    9. ' x' → logprob: -10.436076164245605
    10. ' j' → logprob: -10.561076164245605

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033659763634204865
    2. 'in' → logprob: -3.4086596965789795
    3. ',' → logprob: -11.908659934997559
    4. ' ' → logprob: -12.408659934997559
    5. 'i' → logprob: -13.783659934997559
    6. '```' → logprob: -14.783659934997559
    7. ' i' → logprob: -14.908659934997559
    8. '  ' → logprob: -15.283659934997559
    9. '+' → logprob: -15.408659934997559
    10. '	in' → logprob: -15.658659934997559

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018152866512537003
    2. 'range' → logprob: -4.018152713775635
    3. ' snake' → logprob: -13.143153190612793
    4. ' ' → logprob: -14.393153190612793
    5. '	range' → logprob: -15.643153190612793
    6. 'snake' → logprob: -15.893153190612793
    7. '  ' → logprob: -16.143152236938477
    8. '   ' → logprob: -16.643152236938477
    9. '(range' → logprob: -17.018152236938477
    10. ' xrange' → logprob: -17.393152236938477

Token 30: '(L' (ID: 11075)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9056390523910522
    2. '(L' → logprob: -0.9056390523910522
    3. '(len' → logprob: -1.9056390523910522
    4. '(initial' → logprob: -3.155639171600342
    5. '(N' → logprob: -10.280638694763184
    6. '(length' → logprob: -10.655638694763184
    7. 'initial' → logprob: -11.030638694763184
    8. '(
' → logprob: -12.280638694763184
    9. '(l' → logprob: -12.530638694763184
    10. ' initial' → logprob: -12.905638694763184

Token 31: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04869932681322098
    2. ' -' → logprob: -3.048699378967285
    3. ' ' → logprob: -9.548699378967285
    4. ')' → logprob: -10.298699378967285
    5. '1' → logprob: -12.673699378967285
    6. '   ' → logprob: -13.173699378967285
    7. ' )' → logprob: -14.673699378967285
    8. '+' → logprob: -15.048699378967285
    9. '  ' → logprob: -15.548699378967285
    10. ')-' → logprob: -15.798699378967285

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007141007808968425
    2. ' ' → logprob: -7.250714302062988
    3. ')' → logprob: -13.750714302062988
    4. '   ' → logprob: -14.000714302062988
    5. '2' → logprob: -14.438214302062988
    6. '-' → logprob: -14.813214302062988
    7. '```' → logprob: -15.313214302062988
    8. 'snake' → logprob: -16.000713348388672
    9. 'initial' → logprob: -16.188213348388672
    10. '  ' → logprob: -16.250713348388672

Token 33: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0024335705675184727
    2. 'if' → logprob: -6.377433776855469
    3. ' ' → logprob: -7.877433776855469
    4. ')' → logprob: -8.002433776855469
    5. ' )' → logprob: -11.127433776855469
    6. ' for' → logprob: -14.877433776855469
    7. '   ' → logprob: -15.002433776855469
    8. ' in' → logprob: -15.002433776855469
    9. ' to' → logprob: -15.127433776855469
    10. '),' → logprob: -15.127433776855469

Token 34: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.009815827012062073
    2. 'if' → logprob: -4.634815692901611
    3. ' ' → logprob: -9.88481616973877
    4. ')' → logprob: -12.38481616973877
    5. ' for' → logprob: -13.63481616973877
    6. '	if' → logprob: -13.75981616973877
    7. '-' → logprob: -14.75981616973877
    8. '   ' → logprob: -14.88481616973877
    9. ' in' → logprob: -15.00981616973877
    10. ',' → logprob: -15.00981616973877

Token 35: ' snake' (ID: 46964)
  Prédit: ' snake'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' snake' → logprob: -0.1129082441329956
    2. 'snake' → logprob: -2.237908363342285
    3. ' ' → logprob: -9.862908363342285
    4. 's' → logprob: -11.737908363342285
    5. ' snakes' → logprob: -12.362908363342285
    6. 'sn' → logprob: -12.675408363342285
    7. '	s' → logprob: -12.862908363342285
    8. '   ' → logprob: -12.862908363342285
    9. ' sn' → logprob: -13.237908363342285
    10. ' s' → logprob: -13.487908363342285

Token 36: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.673547563375905e-05
    2. '[' → logprob: -9.375086784362793
    3. '[I' → logprob: -14.375086784362793
    4. ' [' → logprob: -14.625086784362793
    5. '[
' → logprob: -14.750086784362793
    6. '\[' → logprob: -16.000085830688477
    7. '```' → logprob: -16.750085830688477
    8. 'i' → logprob: -17.000085830688477
    9. '==' → logprob: -17.500085830688477
    10. '[...]' → logprob: -17.625085830688477

Token 37: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05098699405789375
    2. ' ==' → logprob: -3.5509870052337646
    3. '!=' → logprob: -4.1759867668151855
    4. '=' → logprob: -6.3009867668151855
    5. '[' → logprob: -6.8009867668151855
    6. '>' → logprob: -7.1759867668151855
    7. ' !=' → logprob: -7.4259867668151855
    8. '+' → logprob: -7.8009867668151855
    9. ' ' → logprob: -7.9259867668151855
    10. '<' → logprob: -9.300987243652344

Token 38: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03784443065524101
    2. '!=' → logprob: -3.91284441947937
    3. ' ==' → logprob: -4.287844657897949
    4. '=' → logprob: -6.537844657897949
    5. '[' → logprob: -6.787844657897949
    6. ' !=' → logprob: -8.28784465789795
    7. '>' → logprob: -8.53784465789795
    8. '<' → logprob: -8.66284465789795
    9. '+' → logprob: -10.03784465789795
    10. ' ' → logprob: -10.41284465789795

Token 39: ' '' (ID: 461)
  Prédit: 'snake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'snake' → logprob: -0.04665541648864746
    2. ' snake' → logprob: -3.9216554164886475
    3. ''s' → logprob: -4.546655654907227
    4. 's' → logprob: -5.046655654907227
    5. ''' → logprob: -5.796655654907227
    6. ''>' → logprob: -6.671655654907227
    7. ' ' → logprob: -6.921655654907227
    8. '')' → logprob: -7.171655654907227
    9. ' '' → logprob: -7.296655654907227
    10. ')' → logprob: -8.171655654907227

Token 40: 'o' (ID: 78)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.46564966440200806
    2. 'S' → logprob: -1.9656496047973633
    3. '=' → logprob: -3.4656496047973633
    4. 'R' → logprob: -3.4656496047973633
    5. '>' → logprob: -3.5906496047973633
    6. ''' → logprob: -4.090649604797363
    7. ')' → logprob: -4.340649604797363
    8. 'snake' → logprob: -4.340649604797363
    9. '<' → logprob: -4.590649604797363
    10. 'U' → logprob: -4.715649604797363

Token 41: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09063959121704102
    2. ' and' → logprob: -3.090639591217041
    3. 'and' → logprob: -4.215639591217041
    4. '')' → logprob: -4.715639591217041
    5. 's' → logprob: -5.215639591217041
    6. 'n' → logprob: -5.715639591217041
    7. 'o' → logprob: -5.840639591217041
    8. 'a' → logprob: -6.215639591217041
    9. ' '' → logprob: -6.590639591217041
    10. 'r' → logprob: -7.465639591217041

Token 42: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08916660398244858
    2. 'and' → logprob: -2.4641666412353516
    3. ')' → logprob: -8.589166641235352
    4. ' ' → logprob: -10.589166641235352
    5. '&' → logprob: -13.089166641235352
    6. ' )' → logprob: -13.089166641235352
    7. '&&' → logprob: -13.589166641235352
    8. '    ' → logprob: -13.714166641235352
    9. '   ' → logprob: -13.714166641235352
    10. '),' → logprob: -14.089166641235352

Token 43: ' snake' (ID: 46964)
  Prédit: ' snake'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' snake' → logprob: -0.005956410430371761
    2. 'snake' → logprob: -5.130956172943115
    3. ' ' → logprob: -11.755956649780273
    4. 's' → logprob: -11.880956649780273
    5. '	s' → logprob: -12.380956649780273
    6. '蛇' → logprob: -13.255956649780273
    7. ' snakes' → logprob: -13.380956649780273
    8. ' ' → logprob: -13.505956649780273
    9. ' sn' → logprob: -13.630956649780273
    10. ' s' → logprob: -14.380956649780273

Token 44: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -15.000000953674316
    3. ' [' → logprob: -15.375000953674316
    4. '```' → logprob: -15.750000953674316
    5. 'i' → logprob: -16.375
    6. '[j' → logprob: -16.75
    7. '[
' → logprob: -17.5
    8. '[I' → logprob: -18.75
    9. '{i' → logprob: -19.125
    10. ' ' → logprob: -19.5

Token 45: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005246769287623465
    2. ' +' → logprob: -8.250524520874023
    3. ']' → logprob: -9.125524520874023
    4. '+i' → logprob: -9.500524520874023
    5. '+]' → logprob: -10.250524520874023
    6. '[i' → logprob: -10.750524520874023
    7. ']+' → logprob: -12.125524520874023
    8. '-' → logprob: -12.375524520874023
    9. '[' → logprob: -12.500524520874023
    10. ']==' → logprob: -12.750524520874023

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.46190622448921204
    2. ''s' → logprob: -2.0869061946868896
    3. ''o' → logprob: -2.3369061946868896
    4. '0' → logprob: -2.7119061946868896
    5. 'i' → logprob: -3.8369061946868896
    6. ''' → logprob: -3.9619061946868896
    7. ''l' → logprob: -4.836906433105469
    8. ' ' → logprob: -4.961906433105469
    9. ''i' → logprob: -5.211906433105469
    10. ''r' → logprob: -5.336906433105469

Token 47: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.13363897800445557
    2. ' ==' → logprob: -2.508638858795166
    3. ']' → logprob: -3.508638858795166
    4. '=='' → logprob: -5.133638858795166
    5. ']==' → logprob: -5.258638858795166
    6. ']=='' → logprob: -7.508638858795166
    7. '<|end|>' → logprob: -7.758638858795166
    8. ''' → logprob: -8.008639335632324
    9. ')' → logprob: -8.133639335632324
    10. '=' → logprob: -8.258639335632324

Token 48: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16355037689208984
    2. ' ==' → logprob: -1.9135503768920898
    3. '=='' → logprob: -6.28855037689209
    4. '=' → logprob: -6.78855037689209
    5. '==
' → logprob: -9.78855037689209
    6. ' =='' → logprob: -9.78855037689209
    7. ' ' → logprob: -10.28855037689209
    8. '	' → logprob: -10.53855037689209
    9. ''' → logprob: -10.53855037689209
    10. ')' → logprob: -10.91355037689209

Token 49: ' '' (ID: 461)
  Prédit: ''o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''o' → logprob: -0.0012664210516959429
    2. ''' → logprob: -6.8762664794921875
    3. ' '' → logprob: -8.626266479492188
    4. '	o' → logprob: -11.126266479492188
    5. '	' → logprob: -11.251266479492188
    6. ' ' → logprob: -11.251266479492188
    7. 'o' → logprob: -12.626266479492188
    8. ''s' → logprob: -12.751266479492188
    9. '  ' → logprob: -13.251266479492188
    10. '’o' → logprob: -13.626266479492188

Token 50: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.11628575623035431
    2. ''o' → logprob: -2.241285800933838
    3. ''' → logprob: -5.866285800933838
    4. ''s' → logprob: -8.11628532409668
    5. ''n' → logprob: -9.86628532409668
    6. 'n' → logprob: -9.86628532409668
    7. 's' → logprob: -10.86628532409668
    8. 'x' → logprob: -10.86628532409668
    9. '')' → logprob: -11.11628532409668
    10. ' '' → logprob: -11.11628532409668

Token 51: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16038000583648682
    2. '')' → logprob: -1.9103800058364868
    3. ''' → logprob: -9.035380363464355
    4. ')'' → logprob: -11.285380363464355
    5. '")' → logprob: -12.285380363464355
    6. ')
' → logprob: -12.535380363464355
    7. '')
' → logprob: -12.785380363464355
    8. '`)' → logprob: -12.910380363464355
    9. ' )' → logprob: -13.160380363464355
    10. ' ')' → logprob: -13.410380363464355

Token 52: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0093955993652344
    2. '#' → logprob: -1.6343955993652344
    3. 'n' → logprob: -1.8843955993652344
    4. '<|end|>' → logprob: -3.3843955993652344
    5. '+' → logprob: -3.5093955993652344
    6. '```' → logprob: -3.6343955993652344
    7. '\' → logprob: -3.7593955993652344
    8. '\n' → logprob: -4.009395599365234
    9. 'if' → logprob: -4.134395599365234
    10. 'i' → logprob: -4.134395599365234

Token 53: ' length' (ID: 5517)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.442095160484314
    2. 'i' → logprob: -1.567095160484314
    3. ' for' → logprob: -2.4420952796936035
    4. ' i' → logprob: -2.5670952796936035
    5. 'if' → logprob: -3.1920952796936035
    6. ' result' → logprob: -3.3170952796936035
    7. 'for' → logprob: -4.0670952796936035
    8. 'I' → logprob: -4.0670952796936035
    9. ' ' → logprob: -4.1920952796936035
    10. ' new' → logprob: -4.3170952796936035

Token 54: ' recurrence' (ID: 127370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04074857756495476
    2. '=' → logprob: -3.4157485961914062
    3. 's' → logprob: -5.415748596191406
    4. '_' → logprob: -6.790748596191406
    5. '_change' → logprob: -7.540748596191406
    6. ',' → logprob: -7.790748596191406
    7. '_changes' → logprob: -8.665748596191406
    8. ' +=' → logprob: -9.790748596191406
    9. ' ' → logprob: -10.415748596191406
    10. '_difference' → logprob: -10.540748596191406

Token 55: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7606185078620911
    2. '=' → logprob: -1.5106184482574463
    3. '_' → logprob: -1.6356184482574463
    4. 'for' → logprob: -2.8856184482574463
    5. 's' → logprob: -4.135618686676025
    6. 'if' → logprob: -5.010618686676025
    7. 'dp' → logprob: -5.010618686676025
    8. ' for' → logprob: -5.760618686676025
    9. 'ans' → logprob: -6.260618686676025
    10. '+' → logprob: -6.385618686676025

Token 56: ' length' (ID: 5517)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.97992742061615
    2. ' if' → logprob: -2.2299275398254395
    3. ' length' → logprob: -2.3549275398254395
    4. ' ' → logprob: -2.4799275398254395
    5. 'dp' → logprob: -2.6049275398254395
    6. ' dp' → logprob: -2.6049275398254395
    7. 'length' → logprob: -2.8549275398254395
    8. ' for' → logprob: -3.1049275398254395
    9. 'if' → logprob: -3.3549275398254395
    10. 'new' → logprob: -3.6049275398254395

Token 57: '_{' (ID: 22305)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42991557717323303
    2. '=' → logprob: -1.1799155473709106
    3. ' +=' → logprob: -3.5549156665802
    4. '+=' → logprob: -5.304915428161621
    5. 's' → logprob: -5.679915428161621
    6. '+' → logprob: -6.304915428161621
    7. ' +' → logprob: -6.804915428161621
    8. '-' → logprob: -7.179915428161621
    9. '_' → logprob: -8.054915428161621
    10. '[' → logprob: -8.679915428161621

Token 58: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08070588856935501
    2. 't' → logprob: -3.2057058811187744
    3. 'i' → logprob: -3.7057058811187744
    4. 'k' → logprob: -5.0807061195373535
    5. '}' → logprob: -5.2057061195373535
    6. '+' → logprob: -8.955705642700195
    7. '1' → logprob: -9.080705642700195
    8. 'x' → logprob: -9.455705642700195
    9. '_n' → logprob: -9.580705642700195
    10. ' n' → logprob: -9.955705642700195

Token 59: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5824701189994812
    2. '}' → logprob: -0.8324701189994812
    3. '-' → logprob: -5.082469940185547
    4. ' +' → logprob: -9.332469940185547
    5. '}=' → logprob: -9.582469940185547
    6. '_plus' → logprob: -10.707469940185547
    7. '1' → logprob: -11.207469940185547
    8. '}
' → logprob: -11.207469940185547
    9. '```' → logprob: -11.332469940185547
    10. '=}' → logprob: -11.707469940185547

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009699412039481103
    2. '}' → logprob: -7.125969886779785
    3. ' ' → logprob: -9.250969886779785
    4. '```' → logprob: -10.750969886779785
    5. '=' → logprob: -11.000969886779785
    6. '2' → logprob: -11.625969886779785
    7. '   ' → logprob: -12.375969886779785
    8. '}=' → logprob: -12.625969886779785
    9. '+' → logprob: -13.000969886779785
    10. ' =' → logprob: -13.250969886779785

Token 61: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00034273360506631434
    2. ' =' → logprob: -8.50034236907959
    3. '}=' → logprob: -9.62534236907959
    4. '=' → logprob: -9.87534236907959
    5. '+' → logprob: -12.00034236907959
    6. ' }' → logprob: -12.12534236907959
    7. '-' → logprob: -12.87534236907959
    8. ')' → logprob: -13.25034236907959
    9. ']' → logprob: -13.50034236907959
    10. '=}' → logprob: -13.75034236907959

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759519338607788
    2. '=' → logprob: -0.8259519338607788
    3. ',' → logprob: -12.32595157623291
    4. ' +=' → logprob: -12.45095157623291
    5. '+=' → logprob: -13.20095157623291
    6. ' ' → logprob: -14.70095157623291
    7. '-' → logprob: -15.20095157623291
    8. '+' → logprob: -15.57595157623291
    9. ' ' → logprob: -15.70095157623291
    10. '=

' → logprob: -15.82595157623291

Token 63: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.5880393981933594
    2. 'length' → logprob: -1.4630393981933594
    3. ' initial' → logprob: -2.3380393981933594
    4. 'initial' → logprob: -2.5880393981933594
    5. '2' → logprob: -3.3380393981933594
    6. ' ' → logprob: -5.463039398193359
    7. ' min' → logprob: -7.463039398193359
    8. '3' → logprob: -8.71303939819336
    9. 'len' → logprob: -8.96303939819336
    10. '1' → logprob: -8.96303939819336

Token 64: '_n' (ID: 2170)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4354059398174286
    2. '_n' → logprob: -1.060405969619751
    3. '+' → logprob: -5.810405731201172
    4. ' +' → logprob: -6.560405731201172
    5. '*' → logprob: -7.310405731201172
    6. '_{' → logprob: -7.435405731201172
    7. 'n' → logprob: -7.810405731201172
    8. ' *' → logprob: -9.185405731201172
    9. '+n' → logprob: -9.310405731201172
    10. '-' → logprob: -9.435405731201172

Token 65: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5944782495498657
    2. ' +' → logprob: -0.8444782495498657
    3. '*' → logprob: -4.594478130340576
    4. '-' → logprob: -5.719478130340576
    5. ' -' → logprob: -5.844478130340576
    6. ' *' → logprob: -6.469478130340576
    7. ' ' → logprob: -8.594478607177734
    8. '2' → logprob: -8.969478607177734
    9. ' plus' → logprob: -10.656978607177734
    10. '1' → logprob: -10.781978607177734

Token 66: ' pairs' (ID: 24702)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.29664623737335205
    2. 'initial' → logprob: -1.421646237373352
    3. '1' → logprob: -5.4216461181640625
    4. ' (' → logprob: -5.6716461181640625
    5. '(initial' → logprob: -5.7966461181640625
    6. ' ' → logprob: -6.4216461181640625
    7. ' max' → logprob: -7.6716461181640625
    8. ' pairs' → logprob: -7.7966461181640625
    9. '2' → logprob: -8.046646118164062
    10. ' snake' → logprob: -8.421646118164062

Token 67: '_n' (ID: 2170)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2624605894088745
    2. '<|end|>' → logprob: -2.887460708618164
    3. ' ' → logprob: -3.262460708618164
    4. ' +' → logprob: -3.387460708618164
    5. '
' → logprob: -3.762460708618164
    6. '_' → logprob: -4.387460708618164
    7. '*' → logprob: -4.387460708618164
    8. '```' → logprob: -4.512460708618164
    9. '<|end|>' → logprob: -4.762460708618164
    10. 'n' → logprob: -4.887460708618164

Token 68: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21754619479179382
    2. ' ' → logprob: -2.217546224594116
    3. '1' → logprob: -2.467546224594116
    4. '3' → logprob: -6.467545986175537
    5. 'n' → logprob: -10.030046463012695
    6. '4' → logprob: -10.030046463012695
    7. '0' → logprob: -10.280046463012695
    8. '7' → logprob: -11.030046463012695
    9. ' n' → logprob: -11.342546463012695
    10. '10' → logprob: -11.342546463012695

Token 70: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01891595870256424
    2. '1' → logprob: -4.393916130065918
    3. '3' → logprob: -5.268916130065918
    4. '4' → logprob: -8.018916130065918
    5. ' ' → logprob: -8.643916130065918
    6. '(n' → logprob: -8.768916130065918
    7. 'n' → logprob: -9.018916130065918
    8. 'k' → logprob: -9.268916130065918
    9. 'L' → logprob: -9.706416130065918
    10. '(' → logprob: -9.831416130065918

Token 71: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0631601810455322
    2. '<|end|>' → logprob: -1.3131601810455322
    3. 'n' → logprob: -1.9381601810455322
    4. 'length' → logprob: -2.5631601810455322
    5. 'pairs' → logprob: -2.5631601810455322
    6. ' pairs' → logprob: -4.313159942626953
    7. '<|end|>' → logprob: -4.563159942626953
    8. '\n' → logprob: -4.813159942626953
    9. 'new' → logprob: -5.063159942626953
    10. '_pairs' → logprob: -5.188159942626953

Token 72: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9342355728149414
    2. 'length' → logprob: -1.3092355728149414
    3. 'pairs' → logprob: -2.0592355728149414
    4. '
' → logprob: -3.0592355728149414
    5. '```' → logprob: -3.4342355728149414
    6. 'n' → logprob: -3.4342355728149414
    7. '_length' → logprob: -3.6842355728149414
    8. '_pairs' → logprob: -3.9342355728149414
    9. ' pairs' → logprob: -4.434235572814941
    10. '_n' → logprob: -5.309235572814941

Token 73: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.7369838356971741
    2. 'length' → logprob: -1.1119837760925293
    3. 'for' → logprob: -3.1119837760925293
    4. 'new' → logprob: -3.8619837760925293
    5. '#' → logprob: -3.8619837760925293
    6. ' length' → logprob: -4.111983776092529
    7. 'current' → logprob: -4.111983776092529
    8. 'growth' → logprob: -4.361983776092529
    9. ' pairs' → logprob: -4.736983776092529
    10. 'initial' → logprob: -4.986983776092529

Token 74: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.2897868752479553
    2. '_' → logprob: -1.4147868156433105
    3. ' =' → logprob: -5.5397868156433105
    4. '_next' → logprob: -5.6647868156433105
    5. '_prev' → logprob: -8.664787292480469
    6. ' _' → logprob: -9.039787292480469
    7. '_{' → logprob: -9.289787292480469
    8. '_previous' → logprob: -9.414787292480469
    9. '_tokens' → logprob: -9.539787292480469
    10. '_new' → logprob: -9.664787292480469

Token 75: '+' (ID: 10)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02714085578918457
    2. '=' → logprob: -3.6521408557891846
    3. '_' → logprob: -7.2771406173706055
    4. ',' → logprob: -10.027140617370605
    5. '_next' → logprob: -10.402140617370605
    6. '_n' → logprob: -11.027140617370605
    7. ' +=' → logprob: -11.402140617370605
    8. ' ' → logprob: -11.402140617370605
    9. ' _' → logprob: -12.277140617370605
    10. '<|end|>' → logprob: -12.527140617370605

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2297125905752182
    2. '+' → logprob: -2.22971248626709
    3. ' =' → logprob: -2.60471248626709
    4. '=' → logprob: -3.85471248626709
    5. '_' → logprob: -7.10471248626709
    6. '  ' → logprob: -8.35471248626709
    7. 'plus' → logprob: -8.35471248626709
    8. '_plus' → logprob: -8.47971248626709
    9. ' ' → logprob: -8.60471248626709
    10. '```' → logprob: -8.60471248626709

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0003025729674845934
    2. '=' → logprob: -8.1253023147583
    3. ' ' → logprob: -12.5003023147583
    4. '_' → logprob: -13.5003023147583
    5. ' =
' → logprob: -14.5003023147583
    6. ',' → logprob: -14.7503023147583
    7. ' _' → logprob: -15.2503023147583
    8. ' +=' → logprob: -16.625303268432617
    9. ')' → logprob: -17.000303268432617
    10. 's' → logprob: -17.125303268432617

Token 78: ' pairs' (ID: 24702)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.7260503768920898
    2. 'initial' → logprob: -0.7260503768920898
    3. ' pairs' → logprob: -4.22605037689209
    4. ' ' → logprob: -5.35105037689209
    5. 'pairs' → logprob: -5.35105037689209
    6. '(initial' → logprob: -5.85105037689209
    7. '2' → logprob: -6.35105037689209
    8. ' (' → logprob: -6.97605037689209
    9. ' snake' → logprob: -7.22605037689209
    10. '3' → logprob: -7.97605037689209

Token 79: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.047834210097789764
    2. '_' → logprob: -3.4228341579437256
    3. '<|end|>' → logprob: -4.422834396362305
    4. '<|end|>' → logprob: -8.172834396362305
    5. '_{' → logprob: -8.672834396362305
    6. '*' → logprob: -8.672834396362305
    7. ' _' → logprob: -8.797834396362305
    8. '_pairs' → logprob: -8.797834396362305
    9. 'n' → logprob: -8.797834396362305
    10. '[' → logprob: -9.047834396362305

Token 80: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8067477941513062
    2. ' ' → logprob: -1.5567477941513062
    3. '2' → logprob: -1.6817477941513062
    4. '4' → logprob: -2.0567479133605957
    5. '7' → logprob: -4.556747913360596
    6. '9' → logprob: -4.931747913360596
    7. '5' → logprob: -5.306747913360596
    8. '1' → logprob: -5.681747913360596
    9. '6' → logprob: -6.181747913360596
    10. '10' → logprob: -7.806747913360596

Token 82: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5898625254631042
    2. '2' → logprob: -1.339862585067749
    3. '4' → logprob: -1.839862585067749
    4. '9' → logprob: -4.58986234664917
    5. '5' → logprob: -4.71486234664917
    6. '6' → logprob: -6.08986234664917
    7. '7' → logprob: -6.83986234664917
    8. '1' → logprob: -6.96486234664917
    9. ' ' → logprob: -7.33986234664917
    10. '10' → logprob: -7.83986234664917

Token 83: ' +' (ID: 659)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5578625798225403
    2. '
' → logprob: -1.6828625202178955
    3. '#' → logprob: -3.0578625202178955
    4. '```' → logprob: -3.3078625202178955
    5. 'length' → logprob: -3.5578625202178955
    6. 'if' → logprob: -4.057862758636475
    7. '\n' → logprob: -4.182862758636475
    8. '' → logprob: -4.307862758636475
    9. '+' → logprob: -4.307862758636475
    10. 'for' → logprob: -4.682862758636475

Token 84: ' length' (ID: 5517)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.6677783131599426
    2. 'initial' → logprob: -1.4177782535552979
    3. ' (' → logprob: -2.417778253555298
    4. '(initial' → logprob: -2.667778253555298
    5. ' ' → logprob: -3.042778253555298
    6. ' pairs' → logprob: -3.917778253555298
    7. '3' → logprob: -5.292778491973877
    8. '2' → logprob: -5.417778491973877
    9. 'pairs' → logprob: -5.542778491973877
    10. '(' → logprob: -6.292778491973877

Token 85: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.09298763424158096
    2. '_' → logprob: -2.717987537384033
    3. '_len' → logprob: -5.342987537384033
    4. '<|end|>' → logprob: -5.717987537384033
    5. '_pairs' → logprob: -5.967987537384033
    6. ' _' → logprob: -5.967987537384033
    7. '[' → logprob: -6.717987537384033
    8. ')' → logprob: -7.092987537384033
    9. '```' → logprob: -7.342987537384033
    10. '_length' → logprob: -7.467987537384033

Token 86: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1655913591384888
    2. '
' → logprob: -1.9155913591384888
    3. 'for' → logprob: -2.290591239929199
    4. '```' → logprob: -2.540591239929199
    5. 'length' → logprob: -3.415591239929199
    6. ')' → logprob: -3.540591239929199
    7. '\n' → logprob: -3.665591239929199
    8. '\' → logprob: -3.665591239929199
    9. ' ' → logprob: -3.665591239929199
    10. ' =' → logprob: -3.665591239929199

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004697834141552448
    2. '2' → logprob: -5.629697799682617
    3. ' ' → logprob: -7.004697799682617
    4. '3' → logprob: -8.629697799682617
    5. 'pairs' → logprob: -12.129697799682617
    6. 'initial' → logprob: -12.879697799682617
    7. '```' → logprob: -14.629697799682617
    8. '  ' → logprob: -15.004697799682617
    9. '(' → logprob: -15.254697799682617
    10. '_pairs' → logprob: -15.504697799682617

Token 88: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002953574061393738
    2. '2' → logprob: -5.87795352935791
    3. ' ' → logprob: -10.00295352935791
    4. 'initial' → logprob: -10.12795352935791
    5. '3' → logprob: -10.25295352935791
    6. 'pairs' → logprob: -10.75295352935791
    7. 'L' → logprob: -12.75295352935791
    8. 'length' → logprob: -14.25295352935791
    9. 'pair' → logprob: -14.62795352935791
    10. '(' → logprob: -14.62795352935791

Token 89: ' *' (ID: 425)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8412942290306091
    2. '
' → logprob: -1.216294288635254
    3. 'length' → logprob: -2.216294288635254
    4. 'L' → logprob: -2.966294288635254
    5. 'for' → logprob: -3.716294288635254
    6. 'result' → logprob: -4.841294288635254
    7. 'l' → logprob: -5.091294288635254
    8. '#' → logprob: -5.091294288635254
    9. '```' → logprob: -5.216294288635254
    10. 'initial' → logprob: -5.216294288635254

Token 90: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.32067400217056274
    2. 'initial' → logprob: -1.570673942565918
    3. ' pairs' → logprob: -3.070673942565918
    4. ' initial' → logprob: -3.945673942565918
    5. '_pairs' → logprob: -7.570673942565918
    6. 'p' → logprob: -9.945673942565918
    7. '_' → logprob: -10.070673942565918
    8. '(initial' → logprob: -10.195673942565918
    9. '_initial' → logprob: -11.195673942565918
    10. '	initial' → logprob: -11.695673942565918

Token 91: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.003694731742143631
    2. '_' → logprob: -5.878694534301758
    3. 'n' → logprob: -8.128694534301758
    4. '_len' → logprob: -8.753694534301758
    5. '_l' → logprob: -9.128694534301758
    6. 'N' → logprob: -9.128694534301758
    7. 'L' → logprob: -9.753694534301758
    8. 's' → logprob: -10.753694534301758
    9. '_s' → logprob: -10.753694534301758
    10. ' _' → logprob: -11.253694534301758

Token 92: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9356313943862915
    2. '+' → logprob: -1.3106313943862915
    3. 'for' → logprob: -2.560631275177002
    4. ' ' → logprob: -2.685631275177002
    5. '=' → logprob: -2.935631275177002
    6. ')' → logprob: -3.810631275177002
    7. 'length' → logprob: -4.060631275177002
    8. 'L' → logprob: -4.310631275177002
    9. ' =' → logprob: -4.685631275177002
    10. '_' → logprob: -4.685631275177002

Token 93: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.06499417126178741
    2. 'length' → logprob: -2.8149940967559814
    3. ' ' → logprob: -6.5649943351745605
    4. '2' → logprob: -7.4399943351745605
    5. '3' → logprob: -7.8149943351745605
    6. '4' → logprob: -8.064993858337402
    7. ' pairs' → logprob: -9.439993858337402
    8. ' initial' → logprob: -9.564993858337402
    9. '(length' → logprob: -10.314993858337402
    10. ' (' → logprob: -10.439993858337402

Token 94: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -5.836499985889532e-05
    2. 'N' → logprob: -10.7500581741333
    3. '_len' → logprob: -11.3750581741333
    4. '_' → logprob: -12.0000581741333
    5. '_pairs' → logprob: -12.3750581741333
    6. ' -' → logprob: -12.5000581741333
    7. ' _' → logprob: -13.2500581741333
    8. 'n' → logprob: -13.5000581741333
    9. '[' → logprob: -14.2500581741333
    10. '_i' → logprob: -14.3750581741333

Token 95: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9042092561721802
    2. '[
' → logprob: -2.2792091369628906
    3. '\n' → logprob: -2.2792091369628906
    4. '[n' → logprob: -2.4042091369628906
    5. '[' → logprob: -2.6542091369628906
    6. '
' → logprob: -2.9042091369628906
    7. '_n' → logprob: -3.0292091369628906
    8. '```' → logprob: -4.029209136962891
    9. '+
' → logprob: -4.029209136962891
    10. '*' → logprob: -4.654209136962891

Token 96: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2998978793621063
    2. ' ' → logprob: -1.5498979091644287
    3. 'pairs' → logprob: -3.2998979091644287
    4. ' pairs' → logprob: -4.67489767074585
    5. 'p' → logprob: -9.049898147583008
    6. ' (' → logprob: -9.237398147583008
    7. ' p' → logprob: -9.299898147583008
    8. '(' → logprob: -9.362398147583008
    9. 'pair' → logprob: -10.362398147583008
    10. ' ' → logprob: -10.487398147583008

Token 97: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.150252565741539
    2. ' ' → logprob: -2.1502525806427
    3. 'pairs' → logprob: -3.9002525806427
    4. ' pairs' → logprob: -6.025252342224121
    5. 'p' → logprob: -9.400252342224121
    6. '3' → logprob: -9.650252342224121
    7. '(' → logprob: -9.837752342224121
    8. ' (' → logprob: -10.025252342224121
    9. '1' → logprob: -10.087752342224121
    10. ' p' → logprob: -10.650252342224121

Token 98: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3169366419315338
    2. '*' → logprob: -1.3169366121292114
    3. '_pairs' → logprob: -6.191936492919922
    4. '_' → logprob: -7.066936492919922
    5. ' ' → logprob: -8.566936492919922
    6. '_n' → logprob: -9.191936492919922
    7. ' _' → logprob: -9.441936492919922
    8. ' ' → logprob: -9.566936492919922
    9. '0' → logprob: -9.816936492919922
    10. 'pairs' → logprob: -10.316936492919922

Token 99: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.12693776190280914
    2. ' pairs' → logprob: -2.1269378662109375
    3. '_pairs' → logprob: -11.876937866210938
    4. 'p' → logprob: -13.501937866210938
    5. 'pair' → logprob: -14.626937866210938
    6. '-p' → logprob: -15.126937866210938
    7. ' ' → logprob: -15.251937866210938
    8. 'pares' → logprob: -16.126937866210938
    9. '	p' → logprob: -16.126937866210938
    10. '```' → logprob: -17.126937866210938

Token 100: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.005450989585369825
    2. '_' → logprob: -5.505451202392578
    3. 's' → logprob: -7.130451202392578
    4. '_s' → logprob: -7.630451202392578
    5. '_len' → logprob: -10.255451202392578
    6. 'n' → logprob: -10.255451202392578
    7. '_l' → logprob: -12.255451202392578
    8. ' _' → logprob: -12.630451202392578
    9. '_tokens' → logprob: -13.880451202392578
    10. '_sn' → logprob: -14.505451202392578

Token 101: '

' (ID: 279)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.946293830871582
    2. 'n' → logprob: -1.071293830871582
    3. 'for' → logprob: -2.196293830871582
    4. '
' → logprob: -2.946293830871582
    5. 'while' → logprob: -3.446293830871582
    6. 'L' → logprob: -3.571293830871582
    7. ' for' → logprob: -4.571293830871582
    8. ' length' → logprob: -4.696293830871582
    9. 'result' → logprob: -5.196293830871582
    10. 'len' → logprob: -5.821293830871582

Token 102: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6788021326065063
    2. 'length' → logprob: -1.1788021326065063
    3. 'L' → logprob: -2.428802013397217
    4. 'result' → logprob: -3.678802013397217
    5. 'for' → logprob: -3.928802013397217
    6. 'l' → logprob: -4.428802013397217
    7. ' length' → logprob: -4.553802013397217
    8. 'while' → logprob: -5.178802013397217
    9. ' for' → logprob: -5.553802013397217
    10. '```' → logprob: -6.053802013397217

Token 103: ' Define' (ID: 38966)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9557636380195618
    2. 'dp' → logprob: -0.9557636380195618
    3. 'length' → logprob: -2.455763578414917
    4. 'result' → logprob: -3.205763578414917
    5. 'def' → logprob: -3.830763578414917
    6. 'a' → logprob: -4.205763816833496
    7. 'from' → logprob: -4.580763816833496
    8. ' for' → logprob: -4.705763816833496
    9. '#' → logprob: -4.955763816833496
    10. 'while' → logprob: -5.205763816833496

Token 104: ' variables' (ID: 13955)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27232813835144043
    2. ' a' → logprob: -1.7723281383514404
    3. 'a' → logprob: -3.1473281383514404
    4. ' the' → logprob: -4.1473283767700195
    5. ' def' → logprob: -4.8973283767700195
    6. 'the' → logprob: -6.6473283767700195
    7. 'length' → logprob: -8.27232837677002
    8. ' initial' → logprob: -8.64732837677002
    9. ' length' → logprob: -8.89732837677002
    10. ' variables' → logprob: -9.27232837677002

Token 105: ' for' (ID: 395)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0016773181268945336
    2. 'L' → logprob: -7.376677513122559
    3. 'a' → logprob: -7.876677513122559
    4. 'l' → logprob: -8.126677513122559
    5. ' length' → logprob: -8.626677513122559
    6. '_length' → logprob: -9.751677513122559
    7. 'n' → logprob: -9.751677513122559
    8. 'initial' → logprob: -10.376677513122559
    9. 'len' → logprob: -11.001677513122559
    10. '(length' → logprob: -12.126677513122559

Token 106: ' iteration' (ID: 43155)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9154489636421204
    2. 'length' → logprob: -0.9154489636421204
    3. ' length' → logprob: -2.4154489040374756
    4. 'current' → logprob: -3.5404489040374756
    5. 'the' → logprob: -3.6654489040374756
    6. 'initial' → logprob: -4.040449142456055
    7. 'a' → logprob: -4.790449142456055
    8. ' the' → logprob: -5.415449142456055
    9. ' n' → logprob: -5.540449142456055
    10. 'i' → logprob: -5.790449142456055

Token 107: ':
' (ID: 734)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.006138053257018328
    2. ' length' → logprob: -5.756137847900391
    3. 'a' → logprob: -6.881137847900391
    4. 'current' → logprob: -7.381137847900391
    5. 'n' → logprob: -7.506137847900391
    6. 'l' → logprob: -8.13113784790039
    7. 'len' → logprob: -8.38113784790039
    8. 'curr' → logprob: -9.38113784790039
    9. 'cur' → logprob: -9.50613784790039
    10. '_length' → logprob: -10.50613784790039

Token 108: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.002597776474431157
    2. 'current' → logprob: -6.377597808837891
    3. 'curr' → logprob: -7.502597808837891
    4. 'cur' → logprob: -8.50259780883789
    5. ' length' → logprob: -9.25259780883789
    6. 'a' → logprob: -10.50259780883789
    7. 'len' → logprob: -12.12759780883789
    8. 'l' → logprob: -12.75259780883789
    9. 'pairs' → logprob: -13.00259780883789
    10. 'n' → logprob: -13.62759780883789

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46424397826194763
    2. ',' → logprob: -1.21424400806427
    3. '=' → logprob: -3.0892438888549805
    4. '_n' → logprob: -3.8392438888549805
    5. '_' → logprob: -4.9642438888549805
    6. '_,' → logprob: -8.83924388885498
    7. ' ,' → logprob: -9.33924388885498
    8. ',n' → logprob: -9.83924388885498
    9. ',_' → logprob: -9.96424388885498
    10. '=n' → logprob: -11.08924388885498

Token 110: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.049285948276519775
    2. 'L' → logprob: -3.174285888671875
    3. ' initial' → logprob: -5.174285888671875
    4. ' L' → logprob: -7.424285888671875
    5. '(initial' → logprob: -12.674285888671875
    6. '	initial' → logprob: -12.924285888671875
    7. 'length' → logprob: -13.174285888671875
    8. '   ' → logprob: -13.924285888671875
    9. ' ' → logprob: -14.424285888671875
    10. 'Initial' → logprob: -15.299285888671875

Token 111: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.9361264946837764e-07
    2. '_length' → logprob: -16.875
    3. 'len' → logprob: -17.375
    4. '_LEN' → logprob: -19.875
    5. '_' → logprob: -20.125
    6. '_val' → logprob: -20.75
    7. 'Len' → logprob: -20.75
    8. '_l' → logprob: -21.0
    9. '_le' → logprob: -21.5
    10. ' _' → logprob: -21.875

Token 112: '
' (ID: 198)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.36988261342048645
    2. '
' → logprob: -1.494882583618164
    3. ' pairs' → logprob: -2.869882583618164
    4. ',' → logprob: -3.994882583618164
    5. '<|end|>' → logprob: -5.119882583618164
    6. '_pairs' → logprob: -6.369882583618164
    7. ',
' → logprob: -7.744882583618164
    8. '  
' → logprob: -8.119882583618164
    9. 'n' → logprob: -8.119882583618164
    10. ' 
' → logprob: -8.494882583618164

Token 113: 'pairs' (ID: 175838)
  Prédit: 'pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -5.5577775128767826e-06
    2. ' pairs' → logprob: -12.625005722045898
    3. '_pairs' → logprob: -13.375005722045898
    4. 'N' → logprob: -15.625005722045898
    5. 'length' → logprob: -16.3750057220459
    6. 'Pairs' → logprob: -16.5000057220459
    7. '```' → logprob: -16.8750057220459
    8. 'n' → logprob: -17.0000057220459
    9. ',' → logprob: -18.0000057220459
    10. 'num' → logprob: -18.1250057220459

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026301691308617592
    2. '=' → logprob: -3.651301622390747
    3. ' ' → logprob: -13.901301383972168
    4. ',' → logprob: -14.776301383972168
    5. ' ,' → logprob: -17.901302337646484
    6. '＝' → logprob: -18.276302337646484
    7. '=int' → logprob: -18.276302337646484
    8. ' ' → logprob: -18.401302337646484
    9. ')' → logprob: -18.776302337646484
    10. ' =)' → logprob: -19.401302337646484

Token 115: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.02324652671813965
    2. ' initial' → logprob: -3.7732465267181396
    3. '	initial' → logprob: -14.273246765136719
    4. '(initial' → logprob: -15.648246765136719
    5. '_initial' → logprob: -15.898246765136719
    6. ' ' → logprob: -16.89824676513672
    7. '.initial' → logprob: -17.27324676513672
    8. 'Initial' → logprob: -17.64824676513672
    9. '   ' → logprob: -18.02324676513672
    10. '初' → logprob: -18.64824676513672

Token 116: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.0007923588855192065
    2. '_len' → logprob: -7.875792503356934
    3. 'pairs' → logprob: -7.875792503356934
    4. 'Pairs' → logprob: -10.875792503356934
    5. 'len' → logprob: -12.375792503356934
    6. '_pair' → logprob: -12.875792503356934
    7. ' pairs' → logprob: -13.125792503356934
    8. '_' → logprob: -13.250792503356934
    9. 's' → logprob: -14.125792503356934
    10. '```' → logprob: -14.750792503356934

Token 117: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7369362115859985
    2. 'n' → logprob: -1.1119362115859985
    3. '
' → logprob: -1.8619362115859985
    4. 'T' → logprob: -4.236936092376709
    5. ' for' → logprob: -4.736936092376709
    6. 'N' → logprob: -4.986936092376709
    7. 't' → logprob: -6.236936092376709
    8. 'steps' → logprob: -6.486936092376709
    9. '<|end|>' → logprob: -6.861936092376709
    10. 'num' → logprob: -6.986936092376709

Token 118: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.219262624857947e-05
    2. 'n' → logprob: -10.375072479248047
    3. ' for' → logprob: -10.750072479248047
    4. 'result' → logprob: -11.625072479248047
    5. 'N' → logprob: -12.375072479248047
    6. 'answer' → logprob: -12.875072479248047
    7. 'results' → logprob: -13.625072479248047
    8. '```' → logprob: -13.625072479248047
    9. 'steps' → logprob: -15.125072479248047
    10. 'answers' → logprob: -15.500072479248047

Token 119: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5931606888771057
    2. ' _' → logprob: -0.8431606888771057
    3. ' i' → logprob: -4.093160629272461
    4. ' range' → logprob: -9.218160629272461
    5. ' n' → logprob: -9.343160629272461
    6. 'i' → logprob: -9.343160629272461
    7. ' in' → logprob: -10.093160629272461
    8. ' ' → logprob: -10.218160629272461
    9. '_n' → logprob: -11.468160629272461
    10. 'n' → logprob: -11.843160629272461

Token 120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14298208057880402
    2. 'in' → logprob: -2.017982006072998
    3. ' ' → logprob: -8.392982482910156
    4. ' _' → logprob: -10.142982482910156
    5. '_' → logprob: -11.267982482910156
    6. 'range' → logprob: -11.392982482910156
    7. 'n' → logprob: -12.267982482910156
    8. ' i' → logprob: -12.392982482910156
    9. 'i' → logprob: -13.267982482910156
    10. 's' → logprob: -13.892982482910156

Token 121: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0445127372804563e-05
    2. ' range' → logprob: -11.50001049041748
    3. '(range' → logprob: -15.37501049041748
    4. '	range' → logprob: -17.875009536743164
    5. '```' → logprob: -18.125009536743164
    6. 'r' → logprob: -18.500009536743164
    7. 'rang' → logprob: -18.750009536743164
    8. ')' → logprob: -19.375009536743164
    9. 'ran' → logprob: -19.500009536743164
    10. 'ranges' → logprob: -20.250009536743164

Token 122: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.002248507458716631
    2. '(' → logprob: -6.127248287200928
    3. 'N' → logprob: -10.127248764038086
    4. ' N' → logprob: -11.502248764038086
    5. ' (' → logprob: -11.752248764038086
    6. '(
' → logprob: -12.877248764038086
    7. '(n' → logprob: -13.002248764038086
    8. ')' → logprob: -15.252248764038086
    9. ' ' → logprob: -16.502248764038086
    10. '1' → logprob: -16.502248764038086

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026445025578141212
    2. '):
' → logprob: -6.0026445388793945
    3. ' ):' → logprob: -9.002644538879395
    4. ')' → logprob: -10.877644538879395
    5. ':' → logprob: -11.252644538879395
    6. '-' → logprob: -12.002644538879395
    7. '+' → logprob: -12.252644538879395
    8. '):
' → logprob: -13.502644538879395
    9. ' ):
' → logprob: -15.252644538879395
    10. '}:' → logprob: -15.377644538879395

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15073950588703156
    2. ' length' → logprob: -2.1507394313812256
    3. 'length' → logprob: -4.150739669799805
    4. '	length' → logprob: -6.025739669799805
    5. '<|end|>' → logprob: -6.275739669799805
    6. '```' → logprob: -7.025739669799805
    7. '[length' → logprob: -7.525739669799805
    8. '_length' → logprob: -7.650739669799805
    9. '    
' → logprob: -7.650739669799805
    10. '
' → logprob: -8.150739669799805

Token 125: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.2879062294960022
    2. ' length' → logprob: -1.5379061698913574
    3. '   ' → logprob: -3.4129061698913574
    4. ' new' → logprob: -6.912906169891357
    5. 'new' → logprob: -7.037906169891357
    6. '
' → logprob: -8.787906646728516
    7. '```' → logprob: -9.162906646728516
    8. '	length' → logprob: -9.412906646728516
    9. 'next' → logprob: -10.287906646728516
    10. '_length' → logprob: -10.662906646728516

Token 126: ',' (ID: 11)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.09189894795417786
    2. '+=' → logprob: -2.7168989181518555
    3. '=' → logprob: -4.2168989181518555
    4. ' =' → logprob: -4.9668989181518555
    5. '+' → logprob: -11.716898918151855
    6. ',' → logprob: -12.716898918151855
    7. ')' → logprob: -13.841898918151855
    8. ' ' → logprob: -14.091898918151855
    9. ' ,' → logprob: -15.091898918151855
    10. ' +' → logprob: -15.216898918151855

Token 127: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.2540484070777893
    2. ' pairs' → logprob: -1.5040483474731445
    3. ' =' → logprob: -6.8790483474731445
    4. '=' → logprob: -7.3790483474731445
    5. '_pairs' → logprob: -7.8790483474731445
    6. 'length' → logprob: -10.379048347473145
    7. ' ' → logprob: -10.504048347473145
    8. ' length' → logprob: -12.129048347473145
    9. '=p' → logprob: -12.504048347473145
    10. '<|end|>' → logprob: -12.629048347473145

Token 128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150178715586662
    2. ' =' → logprob: -4.018150329589844
    3. '<|end|>' → logprob: -15.768150329589844
    4. ',' → logprob: -16.768150329589844
    5. '=}' → logprob: -16.768150329589844
    6. ')' → logprob: -16.893150329589844
    7. '=

' → logprob: -17.268150329589844
    8. '＝' → logprob: -17.393150329589844
    9. '=
' → logprob: -17.768150329589844
    10. ')=' → logprob: -17.893150329589844

Token 129: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.006288641132414341
    2. ' length' → logprob: -5.506288528442383
    3. '(length' → logprob: -6.131288528442383
    4. '[length' → logprob: -10.756288528442383
    5. '   ' → logprob: -12.006288528442383
    6. ' (' → logprob: -13.631288528442383
    7. '	length' → logprob: -13.631288528442383
    8. '(' → logprob: -13.881288528442383
    9. 'leng' → logprob: -14.006288528442383
    10. ',length' → logprob: -14.006288528442383

Token 130: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20318998396396637
    2. '+' → logprob: -1.7031899690628052
    3. '*' → logprob: -6.578189849853516
    4. ' *' → logprob: -7.953189849853516
    5. '[' → logprob: -11.078189849853516
    6. ' ' → logprob: -11.703189849853516
    7. ',' → logprob: -12.203189849853516
    8. '_' → logprob: -13.328189849853516
    9. 's' → logprob: -14.828189849853516
    10. 'length' → logprob: -14.828189849853516

Token 131: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.00156152353156358
    2. ' pairs' → logprob: -6.501561641693115
    3. '3' → logprob: -9.876561164855957
    4. '   ' → logprob: -12.126561164855957
    5. ' ' → logprob: -13.251561164855957
    6. '_pairs' → logprob: -15.626561164855957
    7. '  ' → logprob: -16.251562118530273
    8. 'p' → logprob: -16.376562118530273
    9. 'pair' → logprob: -16.376562118530273
    10. '(p' → logprob: -16.876562118530273

Token 132: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759859085083008
    2. ' *' → logprob: -0.8259859085083008
    3. '```' → logprob: -11.2009859085083
    4. '**' → logprob: -11.4509859085083
    5. ',' → logprob: -11.8259859085083
    6. '`' → logprob: -12.4509859085083
    7. ' ' → logprob: -12.9509859085083
    8. '	' → logprob: -13.0759859085083
    9. '*,' → logprob: -13.7009859085083
    10. '"' → logprob: -14.2009859085083

Token 133: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03804149478673935
    2. ' ' → logprob: -3.288041591644287
    3. '6' → logprob: -16.663042068481445
    4. ' ' → logprob: -18.288042068481445
    5. '4' → logprob: -18.913042068481445
    6. '   ' → logprob: -19.038042068481445
    7. '  ' → logprob: -19.163042068481445
    8. '' → logprob: -19.913042068481445
    9. '۳' → logprob: -19.913042068481445
    10. '	' → logprob: -20.038042068481445

Token 134: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '6' → logprob: -17.25004005432129
    4. '```' → logprob: -17.25004005432129
    5. '' → logprob: -17.87504005432129
    6. '   ' → logprob: -18.06254005432129
    7. '4' → logprob: -18.43754005432129
    8. '۳' → logprob: -18.62504005432129
    9. '  ' → logprob: -18.81254005432129
    10. '(' → logprob: -19.25004005432129

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034535606391727924
    2. ' ,' → logprob: -8.125345230102539
    3. ',length' → logprob: -10.625345230102539
    4. 'length' → logprob: -11.500345230102539
    5. ',
' → logprob: -11.750345230102539
    6. ',

' → logprob: -13.125345230102539
    7. ' length' → logprob: -14.125345230102539
    8. '(' → logprob: -14.250345230102539
    9. '`,' → logprob: -14.500345230102539
    10. '```' → logprob: -14.625345230102539

Token 136: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.014170088805258274
    2. ' length' → logprob: -4.264170169830322
    3. '(length' → logprob: -12.639169692993164
    4. 'pairs' → logprob: -13.639169692993164
    5. 'leng' → logprob: -14.264169692993164
    6. '	length' → logprob: -14.639169692993164
    7. '[length' → logprob: -15.139169692993164
    8. '2' → logprob: -15.139169692993164
    9. ' pairs' → logprob: -16.014169692993164
    10. '   ' → logprob: -16.139169692993164

Token 137: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4741346538066864
    2. '+' → logprob: -0.9741346836090088
    3. ' ' → logprob: -9.97413444519043
    4. ' plus' → logprob: -11.97413444519043
    5. 'length' → logprob: -13.22413444519043
    6. '2' → logprob: -13.59913444519043
    7. 'ength' → logprob: -14.59913444519043
    8. 'plus' → logprob: -14.84913444519043
    9. '   ' → logprob: -15.34913444519043
    10. ' ' → logprob: -15.47413444519043

Token 138: ' ' (ID: 220)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.5810117125511169
    2. '2' → logprob: -0.9560117125511169
    3. ' pairs' → logprob: -3.0810117721557617
    4. ' ' → logprob: -4.581011772155762
    5. '   ' → logprob: -10.206011772155762
    6. 'p' → logprob: -11.331011772155762
    7. '_pairs' → logprob: -11.581011772155762
    8. 'pair' → logprob: -11.831011772155762
    9. '(' → logprob: -12.706011772155762
    10. '  ' → logprob: -12.706011772155762

Token 139: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5241571068763733
    2. 'pairs' → logprob: -0.8991571068763733
    3. ' pairs' → logprob: -7.2741570472717285
    4. ' ' → logprob: -8.024157524108887
    5. '   ' → logprob: -12.399157524108887
    6. '(' → logprob: -13.024157524108887
    7. 'p' → logprob: -13.399157524108887
    8. '_pairs' → logprob: -13.399157524108887
    9. 'pair' → logprob: -14.149157524108887
    10. '  ' → logprob: -14.774157524108887

Token 140: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.012383907102048397
    2. ' *' → logprob: -4.512383937835693
    3. '*p' → logprob: -6.637383937835693
    4. '**' → logprob: -11.637383460998535
    5. '`' → logprob: -12.012383460998535
    6. ' ' → logprob: -13.262383460998535
    7. 'pairs' → logprob: -13.262383460998535
    8. 'p' → logprob: -13.637383460998535
    9. '"' → logprob: -13.637383460998535
    10. '	' → logprob: -14.262383460998535

Token 141: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.014163747429847717
    2. ' pairs' → logprob: -4.264163970947266
    3. '_pairs' → logprob: -15.514163970947266
    4. 'pair' → logprob: -17.514163970947266
    5. ' ' → logprob: -18.389163970947266
    6. 'p' → logprob: -18.389163970947266
    7. 'Pairs' → logprob: -18.514163970947266
    8. 'pares' → logprob: -18.764163970947266
    9. 'pieces' → logprob: -19.764163970947266
    10. '   ' → logprob: -20.014163970947266

Token 142: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02773202210664749
    2. '<|end|>' → logprob: -3.7777321338653564
    3. '
' → logprob: -5.527731895446777
    4. ' print' → logprob: -8.152731895446777
    5. '```' → logprob: -9.402731895446777
    6. 'length' → logprob: -10.152731895446777
    7. '#' → logprob: -10.527731895446777
    8. ')' → logprob: -10.902731895446777
    9. '#print' → logprob: -11.277731895446777
    10. '<|end|>' → logprob: -11.402731895446777

Token 143: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5048530030981055e-06
    2. '```' → logprob: -13.625001907348633
    3. '
' → logprob: -15.875001907348633
    4. ' print' → logprob: -16.625001907348633
    5. '#' → logprob: -19.250001907348633
    6. '  
' → logprob: -19.375001907348633
    7. '    
' → logprob: -20.250001907348633
    8. '#print' → logprob: -20.375001907348633
    9. '``' → logprob: -20.750001907348633
    10. ')' → logprob: -21.250001907348633

Token 144: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -3.1424973713001236e-05
    2. '(' → logprob: -10.500031471252441
    3. '(len' → logprob: -12.500031471252441
    4. 'length' → logprob: -16.375030517578125
    5. '((' → logprob: -18.375030517578125
    6. '(l' → logprob: -18.375030517578125
    7. ' (' → logprob: -18.500030517578125
    8. '[length' → logprob: -18.625030517578125
    9. '(
' → logprob: -18.875030517578125
    10. ',length' → logprob: -19.375030517578125

Token 145: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -12.750003814697266
    3. '+' → logprob: -14.875003814697266
    4. ')
' → logprob: -16.750003814697266
    5. '))' → logprob: -17.125003814697266
    6. '```' → logprob: -17.500003814697266
    7. '`)' → logprob: -17.625003814697266
    8. '*' → logprob: -17.750003814697266
    9. ')`' → logprob: -17.875003814697266
    10. '#' → logprob: -18.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 143
Tokens correctement prédits (1ère position, stricte): 55
Tokens correctement prédits (1ère position, avec adaptation): 56
Tokens correctement prédits (top 10): 107
Précision stricte (1ère position): 38.46%
Précision adaptée (1ère position): 39.16%
Précision (top 10): 74.83%
================================================================================
