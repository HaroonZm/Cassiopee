================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:59:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
coins = [500, 100, 50, 10, 5, 1]
while True:
    n = int(input())
    if n == 0:
        break
    change = 1000 - n
    count = 0
    for c in coins:
        count += change // c
        change %= c
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'coins' (ID: 48264)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' [' (ID: 723)
  → Token d'amorce (pas de prédiction)

Token 3: '500' (ID: 3234)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020830314606428146
    2. '0' → logprob: -4.520830154418945
    3. '10' → logprob: -5.145830154418945
    4. '5' → logprob: -6.395830154418945
    5. ']' → logprob: -6.645830154418945
    6. '100' → logprob: -7.270830154418945
    7. ' ' → logprob: -9.770830154418945
    8. '```' → logprob: -9.770830154418945
    9. '50' → logprob: -10.145830154418945
    10. '25' → logprob: -11.145830154418945

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011522514978423715
    2. ']' → logprob: -9.500115394592285
    3. ',
' → logprob: -11.125115394592285
    4. '0' → logprob: -11.375115394592285
    5. ' ,' → logprob: -11.750115394592285
    6. ',

' → logprob: -13.000115394592285
    7. ' ' → logprob: -13.875115394592285
    8. '00' → logprob: -14.000115394592285
    9. '500' → logprob: -14.750115394592285
    10. '000' → logprob: -14.875115394592285

Token 5: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.582298219203949
    2. '100' → logprob: -0.832298219203949
    3. '200' → logprob: -5.457298278808594
    4. '300' → logprob: -6.832298278808594
    5. '250' → logprob: -7.582298278808594
    6. ',' → logprob: -8.332298278808594
    7. '400' → logprob: -9.082298278808594
    8. '50' → logprob: -9.582298278808594
    9. '1' → logprob: -10.957298278808594
    10. '500' → logprob: -11.582298278808594

Token 6: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.015314868651330471
    2. ' ' → logprob: -4.390315055847168
    3. '200' → logprob: -6.515315055847168
    4. '300' → logprob: -7.140315055847168
    5. '400' → logprob: -8.390315055847168
    6. '500' → logprob: -9.015315055847168
    7. '250' → logprob: -9.890315055847168
    8. '50' → logprob: -9.890315055847168
    9. '1' → logprob: -10.390315055847168
    10. '10' → logprob: -11.265315055847168

Token 7: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009931529639288783
    2. ']' → logprob: -7.625993251800537
    3. '0' → logprob: -7.625993251800537
    4. ' ,' → logprob: -12.125992774963379
    5. '00' → logprob: -12.750992774963379
    6. ',
' → logprob: -13.250992774963379
    7. ' ' → logprob: -13.375992774963379
    8. ',

' → logprob: -13.875992774963379
    9. '```' → logprob: -13.875992774963379
    10. '000' → logprob: -14.250992774963379

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3524235188961029
    2. '50' → logprob: -1.2274235486984253
    3. '200' → logprob: -5.602423667907715
    4. '250' → logprob: -9.352423667907715
    5. '100' → logprob: -9.852423667907715
    6. ',' → logprob: -9.977423667907715
    7. '20' → logprob: -11.227423667907715
    8. '1' → logprob: -11.727423667907715
    9. ' ' → logprob: -11.852423667907715
    10. '500' → logprob: -11.852423667907715

Token 9: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.018290648236870766
    2. ' ' → logprob: -4.0182905197143555
    3. '25' → logprob: -10.018290519714355
    4. '   ' → logprob: -10.643290519714355
    5. '500' → logprob: -10.643290519714355
    6. '10' → logprob: -11.018290519714355
    7. '  ' → logprob: -11.518290519714355
    8. '5' → logprob: -11.518290519714355
    9. '	' → logprob: -12.018290519714355
    10. '20' → logprob: -12.643290519714355

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007241101702675223
    2. ']' → logprob: -7.2507243156433105
    3. ',
' → logprob: -12.375723838806152
    4. '```' → logprob: -12.875723838806152
    5. '0' → logprob: -13.500723838806152
    6. ' ,' → logprob: -13.875723838806152
    7. ',

' → logprob: -14.000723838806152
    8. '`,' → logprob: -14.000723838806152
    9. '`]' → logprob: -14.000723838806152
    10. ',
' → logprob: -14.250723838806152

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2507122755050659
    2. '200' → logprob: -2.0007123947143555
    3. '20' → logprob: -2.7507123947143555
    4. '100' → logprob: -4.0007123947143555
    5. '25' → logprob: -6.0007123947143555
    6. '10' → logprob: -7.3757123947143555
    7. '50' → logprob: -7.6257123947143555
    8. '1' → logprob: -8.250712394714355
    9. ',' → logprob: -8.375712394714355
    10. '```' → logprob: -9.750712394714355

Token 12: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.015674985945224762
    2. '20' → logprob: -4.765675067901611
    3. '25' → logprob: -5.015675067901611
    4. ' ' → logprob: -8.140674591064453
    5. '1' → logprob: -9.515674591064453
    6. '100' → logprob: -10.640674591064453
    7. '5' → logprob: -12.140674591064453
    8. '   ' → logprob: -13.140674591064453
    9. '500' → logprob: -13.390674591064453
    10. '30' → logprob: -13.515674591064453

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17978127300739288
    2. ']' → logprob: -1.8047813177108765
    3. ',
' → logprob: -10.804780960083008
    4. '`]' → logprob: -12.179780960083008
    5. '```' → logprob: -12.679780960083008
    6. ' ]' → logprob: -13.054780960083008
    7. ' ,' → logprob: -13.804780960083008
    8. ',
' → logprob: -13.804780960083008
    9. ',

' → logprob: -14.054780960083008
    10. '],' → logprob: -14.429780960083008

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09637890756130219
    2. '20' → logprob: -2.721378803253174
    3. '1' → logprob: -3.846378803253174
    4. '5' → logprob: -5.596378803253174
    5. '25' → logprob: -7.471378803253174
    6. '2' → logprob: -8.096379280090332
    7. '100' → logprob: -9.221379280090332
    8. '```' → logprob: -10.971379280090332
    9. '0' → logprob: -11.346379280090332
    10. '10' → logprob: -12.096379280090332

Token 15: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00451960414648056
    2. '5' → logprob: -5.504519462585449
    3. ' ' → logprob: -7.754519462585449
    4. '2' → logprob: -12.25451946258545
    5. '25' → logprob: -12.62951946258545
    6. '```' → logprob: -13.62951946258545
    7. '500' → logprob: -14.62951946258545
    8. '10' → logprob: -15.00451946258545
    9. '  ' → logprob: -15.00451946258545
    10. '	' → logprob: -15.25451946258545

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3868836760520935
    2. ']' → logprob: -1.1368837356567383
    3. ',
' → logprob: -12.636883735656738
    4. '`]' → logprob: -12.886883735656738
    5. '```' → logprob: -13.136883735656738
    6. ' ]' → logprob: -13.261883735656738
    7. ')' → logprob: -14.511883735656738
    8. '],' → logprob: -14.636883735656738
    9. '']' → logprob: -14.761883735656738
    10. '   ' → logprob: -15.011883735656738

Token 17: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03818011283874512
    2. ' ' → logprob: -3.288180112838745
    3. '2' → logprob: -8.913180351257324
    4. '```' → logprob: -12.913180351257324
    5. '   ' → logprob: -14.663180351257324
    6. '100' → logprob: -14.788180351257324
    7. '0' → logprob: -15.663180351257324
    8. '`' → logprob: -15.975680351257324
    9. '  ' → logprob: -16.350679397583008
    10. '20' → logprob: -16.725679397583008

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019362468738108873
    2. ' ' → logprob: -6.251936435699463
    3. '2' → logprob: -12.001935958862305
    4. '3' → logprob: -14.376935958862305
    5. '```' → logprob: -15.126935958862305
    6. '１' → logprob: -15.689435958862305
    7. '   ' → logprob: -16.189435958862305
    8. '۱' → logprob: -16.314435958862305
    9. ']' → logprob: -16.814435958862305
    10. '	' → logprob: -17.314435958862305

Token 19: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5048530030981055e-06
    2. ',' → logprob: -14.625001907348633
    3. '']' → logprob: -15.125001907348633
    4. '```' → logprob: -15.250001907348633
    5. '`]' → logprob: -15.625001907348633
    6. ']
' → logprob: -15.625001907348633
    7. ' ]' → logprob: -16.375001907348633
    8. '],' → logprob: -16.750001907348633
    9. ')' → logprob: -17.250001907348633
    10. '"]' → logprob: -17.500001907348633

Token 20: 'while' (ID: 7032)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.39446064829826355
    2. '[' → logprob: -2.519460678100586
    3. '`' → logprob: -3.019460678100586
    4. 'for' → logprob: -3.019460678100586
    5. 'n' → logprob: -3.519460678100586
    6. ',' → logprob: -3.644460678100586
    7. '```' → logprob: -3.894460678100586
    8. '=' → logprob: -4.519460678100586
    9. 'coins' → logprob: -4.644460678100586
    10. 'd' → logprob: -5.019460678100586

Token 21: ' True' (ID: 6432)
  Prédit: ' coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.0505024679005146
    2. ' True' → logprob: -3.4255025386810303
    3. 'coins' → logprob: -4.925502300262451
    4. ' len' → logprob: -5.925502300262451
    5. ' coin' → logprob: -6.300502300262451
    6. ' not' → logprob: -6.675502300262451
    7. ' amount' → logprob: -6.800502300262451
    8. ' count' → logprob: -7.050502300262451
    9. ' ' → logprob: -7.675502300262451
    10. ' money' → logprob: -8.05050277709961

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.534558552724775e-05
    2. ' :' → logprob: -11.125025749206543
    3. ':
' → logprob: -12.000025749206543
    4. '):' → logprob: -14.375025749206543
    5. '':'' → logprob: -14.375025749206543
    6. ':**' → logprob: -14.375025749206543
    7. ',:' → logprob: -14.750025749206543
    8. '':' → logprob: -14.750025749206543
    9. '   ' → logprob: -15.375025749206543
    10. '():' → logprob: -15.625025749206543

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00879809819161892
    2. ' ' → logprob: -6.008798122406006
    3. ' try' → logprob: -6.133798122406006
    4. ' input' → logprob: -6.383798122406006
    5. '    
' → logprob: -7.633798122406006
    6. '    ' → logprob: -8.258797645568848
    7. ' user' → logprob: -8.383797645568848
    8. 'input' → logprob: -8.508797645568848
    9. ' coin' → logprob: -8.633797645568848
    10. '  ' → logprob: -9.133797645568848

Token 24: ' n' (ID: 297)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.9112276434898376
    2. 'choice' → logprob: -1.7862277030944824
    3. 'n' (adapté à ' n') → logprob: -2.1612277030944824
    4. 'num' → logprob: -2.6612277030944824
    5. 'value' → logprob: -2.9112277030944824
    6. 'user' → logprob: -3.1612277030944824
    7. 'try' → logprob: -3.4112277030944824
    8. '   ' → logprob: -3.4112277030944824
    9. 'money' → logprob: -4.286227703094482
    10. 'change' → logprob: -4.786227703094482

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08710424602031708
    2. '=' → logprob: -2.837104320526123
    3. ' ' → logprob: -3.712104320526123
    4. '=int' → logprob: -8.712103843688965
    5. '   ' → logprob: -9.587103843688965
    6. '=input' → logprob: -9.712103843688965
    7. '  ' → logprob: -9.962103843688965
    8. 'o' → logprob: -10.962103843688965
    9. 'u' → logprob: -12.212103843688965
    10. ' ,' → logprob: -12.462103843688965

Token 26: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6932384967803955
    2. ' int' → logprob: -0.6932384967803955
    3. ' input' → logprob: -9.943238258361816
    4. ' ' → logprob: -10.818238258361816
    5. 'input' → logprob: -10.818238258361816
    6. '=int' → logprob: -13.443238258361816
    7. '[int' → logprob: -14.568238258361816
    8. '(int' → logprob: -15.193238258361816
    9. '100' → logprob: -15.318238258361816
    10. '<int' → logprob: -15.443238258361816

Token 27: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931672692298889
    2. '(input' → logprob: -0.6931672692298889
    3. 'input' → logprob: -11.193167686462402
    4. '(in' → logprob: -13.068167686462402
    5. ' (' → logprob: -13.818167686462402
    6. '(
' → logprob: -13.943167686462402
    7. '()' → logprob: -14.193167686462402
    8. '('' → logprob: -14.568167686462402
    9. '(inp' → logprob: -15.568167686462402
    10. ' input' → logprob: -15.693167686462402

Token 28: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12895064055919647
    2. '(' → logprob: -2.378950595855713
    3. '())' → logprob: -3.753950595855713
    4. '('' → logprob: -5.628950595855713
    5. ')' → logprob: -8.378951072692871
    6. '("' → logprob: -8.628951072692871
    7. '("("' → logprob: -8.628951072692871
    8. '()>' → logprob: -9.003951072692871
    9. '()))' → logprob: -9.128951072692871
    10. '(),' → logprob: -9.128951072692871

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13376611471176147
    2. ' if' → logprob: -2.5087661743164062
    3. ' ' → logprob: -4.133766174316406
    4. '<|end|>' → logprob: -4.258766174316406
    5. '    ' → logprob: -5.008766174316406
    6. '  ' → logprob: -6.383766174316406
    7. '    
' → logprob: -6.508766174316406
    8. ' 
' → logprob: -6.633766174316406
    9. '```' → logprob: -7.883766174316406
    10. '<|end|>' → logprob: -7.883766174316406

Token 30: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2688232958316803
    2. '   ' → logprob: -2.1438233852386475
    3. 'if' (adapté à ' if') → logprob: -3.3938233852386475
    4. ' ' → logprob: -3.6438233852386475
    5. '<|end|>' → logprob: -3.8938233852386475
    6. '```' → logprob: -4.393823146820068
    7. '    ' → logprob: -4.893823146820068
    8. ' 
' → logprob: -5.643823146820068
    9. ':' → logprob: -5.893823146820068
    10. ')' → logprob: -6.018823146820068

Token 31: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10515337437391281
    2. ' not' → logprob: -2.3551533222198486
    3. 'n' → logprob: -5.355153560638428
    4. 'not' → logprob: -8.48015308380127
    5. ' ' → logprob: -13.10515308380127
    6. ' ' → logprob: -14.35515308380127
    7. '	n' → logprob: -14.85515308380127
    8. ')n' → logprob: -16.230154037475586
    9. '	not' → logprob: -16.855154037475586
    10. ' н' → logprob: -17.230154037475586

Token 32: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.010020964778959751
    2. ' <=' → logprob: -5.010020732879639
    3. '==' → logprob: -6.010020732879639
    4. ' <' → logprob: -7.135020732879639
    5. '<=' → logprob: -10.510021209716797
    6. '<' → logprob: -11.760021209716797
    7. ')' → logprob: -12.635021209716797
    8. ' ' → logprob: -12.760021209716797
    9. ' =' → logprob: -13.260021209716797
    10. ' >=' → logprob: -13.760021209716797

Token 33: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17974720895290375
    2. '0' → logprob: -1.804747223854065
    3. ' ' → logprob: -12.929747581481934
    4. '  ' → logprob: -16.804746627807617
    5. '_' → logprob: -18.117246627807617
    6. '۰' → logprob: -18.492246627807617
    7. 's' → logprob: -18.554746627807617
    8. '```' → logprob: -18.554746627807617
    9. '   ' → logprob: -18.742246627807617
    10. ')' → logprob: -18.804746627807617

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.750017166137695
    3. '-' → logprob: -11.875017166137695
    4. '```' → logprob: -13.375017166137695
    5. '   ' → logprob: -16.000017166137695
    6. '``' → logprob: -16.375017166137695
    7. ')' → logprob: -16.625017166137695
    8. '`' → logprob: -16.625017166137695
    9. ' -' → logprob: -17.312517166137695
    10. '    ' → logprob: -17.312517166137695

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001264282618649304
    2. '   ' → logprob: -7.1262640953063965
    3. ' :' → logprob: -8.001264572143555
    4. ':
' → logprob: -9.376264572143555
    5. '       ' → logprob: -10.876264572143555
    6. '    ' → logprob: -11.626264572143555
    7. ' break' → logprob: -12.251264572143555
    8. '	break' → logprob: -12.751264572143555
    9. '  ' → logprob: -14.126264572143555
    10. ' ' → logprob: -14.376264572143555

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.176947600673884e-05
    2. '   ' → logprob: -11.500021934509277
    3. ' break' → logprob: -12.750021934509277
    4. ':' → logprob: -13.000021934509277
    5. '    ' → logprob: -13.375021934509277
    6. '      ' → logprob: -13.625021934509277
    7. '     ' → logprob: -14.125021934509277
    8. '	break' → logprob: -14.375021934509277
    9. '        ' → logprob: -14.500021934509277
    10. '```' → logprob: -14.625021934509277

Token 37: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.31740981340408325
    2. '       ' → logprob: -1.6924097537994385
    3. 'break' (adapté à ' break') → logprob: -2.6924097537994385
    4. '   ' → logprob: -3.9424097537994385
    5. '	break' → logprob: -7.317409992218018
    6. '```' → logprob: -9.56740951538086
    7. '\n' → logprob: -11.44240951538086
    8. '_break' → logprob: -12.06740951538086
    9. '    ' → logprob: -12.69240951538086
    10. '           ' → logprob: -12.69240951538086

Token 38: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03294510766863823
    2. '
' → logprob: -3.657945156097412
    3. '    
' → logprob: -5.532945156097412
    4. '\n' → logprob: -6.657945156097412
    5. 'n' → logprob: -7.907945156097412
    6. '<|end|>' → logprob: -8.407944679260254
    7. '```' → logprob: -8.407944679260254
    8. ':' → logprob: -8.907944679260254
    9. '    ' → logprob: -9.657944679260254
    10. '  
' → logprob: -9.782944679260254

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008131063543260098
    2. '    
' → logprob: -5.63313102722168
    3. '\n' → logprob: -6.63313102722168
    4. '```' → logprob: -7.00813102722168
    5. '
' → logprob: -7.50813102722168
    6. 'n' → logprob: -7.75813102722168
    7. ':' → logprob: -8.00813102722168
    8. '    ' → logprob: -8.50813102722168
    9. '  ' → logprob: -8.63313102722168
    10. '<|end|>' → logprob: -8.88313102722168

Token 40: ' change' (ID: 3343)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17768511176109314
    2. 'count' → logprob: -2.302685022354126
    3. '    ' → logprob: -4.427685260772705
    4. '    
' → logprob: -4.927685260772705
    5. ' count' → logprob: -4.927685260772705
    6. 'coins' → logprob: -4.927685260772705
    7. 'amount' → logprob: -5.177685260772705
    8. '```' → logprob: -5.427685260772705
    9. 'total' → logprob: -6.177685260772705
    10. 'result' → logprob: -6.427685260772705

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021748855710029602
    2. '=' → logprob: -3.8967487812042236
    3. ' ' → logprob: -7.146749019622803
    4. '_' → logprob: -8.646748542785645
    5. '_amount' → logprob: -9.646748542785645
    6. '   ' → logprob: -10.021748542785645
    7. '  ' → logprob: -10.146748542785645
    8. '_count' → logprob: -10.146748542785645
    9. 's' → logprob: -11.646748542785645
    10. ',' → logprob: -12.146748542785645

Token 42: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.28227856755256653
    2. 'n' → logprob: -1.5322785377502441
    3. '0' → logprob: -4.657278537750244
    4. ' []' → logprob: -5.032278537750244
    5. '[]' → logprob: -5.407278537750244
    6. ' [' → logprob: -5.407278537750244
    7. ' ' → logprob: -5.782278537750244
    8. '100' → logprob: -7.407278537750244
    9. '[' → logprob: -7.532278537750244
    10. '[n' → logprob: -7.657278537750244

Token 43: '100' (ID: 1353)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013581092469394207
    2. '[' → logprob: -5.013581275939941
    3. '[n' → logprob: -6.013581275939941
    4. '[]' → logprob: -6.138581275939941
    5. '0' → logprob: -7.263581275939941
    6. '100' → logprob: -7.388581275939941
    7. ' n' → logprob: -8.013581275939941
    8. '{}' → logprob: -8.638581275939941
    9. '{' → logprob: -9.013581275939941
    10. ' [' → logprob: -9.263581275939941

Token 44: '0' (ID: 15)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3519647717475891
    2. '-' → logprob: -1.2269647121429443
    3. '-n' → logprob: -5.726964950561523
    4. ' ' → logprob: -8.851964950561523
    5. '0' → logprob: -9.726964950561523
    6. '   ' → logprob: -11.101964950561523
    7. '	' → logprob: -12.226964950561523
    8. '`' → logprob: -12.601964950561523
    9. ' n' → logprob: -12.601964950561523
    10. '‌' → logprob: -12.601964950561523

Token 45: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3147486746311188
    2. ' -' → logprob: -1.3147486448287964
    3. '-n' → logprob: -6.564748764038086
    4. '   ' → logprob: -10.439748764038086
    5. ' ' → logprob: -11.189748764038086
    6. '	' → logprob: -12.314748764038086
    7. 'n' → logprob: -12.314748764038086
    8. '‌' → logprob: -12.439748764038086
    9. '-
' → logprob: -12.939748764038086
    10. '>' → logprob: -13.064748764038086

Token 46: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011708177626132965
    2. ' n' → logprob: -6.751170635223389
    3. '	n' → logprob: -14.501171112060547
    4. '   ' → logprob: -16.126171112060547
    5. ' ' → logprob: -17.751171112060547
    6. ' ' → logprob: -18.001171112060547
    7. '  ' → logprob: -18.876171112060547
    8. '`' → logprob: -20.126171112060547
    9. '```' → logprob: -20.251171112060547
    10. '    ' → logprob: -20.501171112060547

Token 47: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7420456409454346
    2. ' for' → logprob: -1.2420456409454346
    3. '   ' → logprob: -1.6170456409454346
    4. '
' → logprob: -4.3670454025268555
    5. 'coins' → logprob: -5.2420454025268555
    6. '    
' → logprob: -5.3670454025268555
    7. ' coins' → logprob: -5.4920454025268555
    8. 'print' → logprob: -6.1170454025268555
    9. 'count' → logprob: -6.6170454025268555
    10. '    ' → logprob: -6.8670454025268555

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004195694345980883
    2. 'for' → logprob: -6.129195690155029
    3. '    
' → logprob: -7.129195690155029
    4. ' for' → logprob: -8.129196166992188
    5. 'count' → logprob: -8.629196166992188
    6. 'coins' → logprob: -8.754196166992188
    7. '	for' → logprob: -8.879196166992188
    8. '
' → logprob: -9.629196166992188
    9. 'tokens' → logprob: -9.629196166992188
    10. 'amount' → logprob: -9.629196166992188

Token 49: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0810198038816452
    2. 'count' (adapté à ' count') → logprob: -2.956019878387451
    3. 'result' → logprob: -4.331019878387451
    4. 'coins' → logprob: -5.706019878387451
    5. ' for' → logprob: -6.206019878387451
    6. '   ' → logprob: -6.331019878387451
    7. 'answer' → logprob: -6.456019878387451
    8. 'counts' → logprob: -6.581019878387451
    9. 'cnt' → logprob: -6.956019878387451
    10. 'total' → logprob: -7.831019878387451

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14300325512886047
    2. '=' → logprob: -2.018003225326538
    3. ' ' → logprob: -8.268003463745117
    4. ' +=' → logprob: -10.518003463745117
    5. '_' → logprob: -10.768003463745117
    6. 's' → logprob: -12.018003463745117
    7. ',' → logprob: -12.393003463745117
    8. '  ' → logprob: -13.018003463745117
    9. '[' → logprob: -13.268003463745117
    10. ')' → logprob: -13.768003463745117

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004921489744447172
    2. ' ' → logprob: -7.625492095947266
    3. '[' → logprob: -12.625492095947266
    4. '{' → logprob: -15.250492095947266
    5. ' [' → logprob: -15.250492095947266
    6. '[]' → logprob: -16.000492095947266
    7. '{}' → logprob: -16.625492095947266
    8. '   ' → logprob: -17.375492095947266
    9. '1' → logprob: -17.750492095947266
    10. 'sum' → logprob: -18.125492095947266

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.282920129597187e-05
    2. '[' → logprob: -11.750012397766113
    3. ' ' → logprob: -12.625012397766113
    4. '{' → logprob: -14.250012397766113
    5. '[]' → logprob: -14.625012397766113
    6. '{}' → logprob: -14.875012397766113
    7. 'sum' → logprob: -17.25001335144043
    8. ' [' → logprob: -18.25001335144043
    9. '1' → logprob: -18.75001335144043
    10. '-' → logprob: -19.00001335144043

Token 53: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08551689982414246
    2. 'for' → logprob: -3.585516929626465
    3. ' for' → logprob: -4.085516929626465
    4. '<|end|>' → logprob: -4.210516929626465
    5. '
' → logprob: -4.585516929626465
    6. '    
' → logprob: -5.085516929626465
    7. '	for' → logprob: -5.960516929626465
    8. '<|end|>' → logprob: -6.835516929626465
    9. '  ' → logprob: -7.585516929626465
    10. '  
' → logprob: -7.710516929626465

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00971667468547821
    2. 'for' → logprob: -5.009716510772705
    3. ' for' → logprob: -6.759716510772705
    4. '
' → logprob: -6.884716510772705
    5. '    
' → logprob: -7.634716510772705
    6. '<|end|>' → logprob: -9.009716987609863
    7. '	for' → logprob: -9.134716987609863
    8. '```' → logprob: -9.884716987609863
    9. '<|end|>' → logprob: -11.634716987609863
    10. '\n' → logprob: -12.009716987609863

Token 55: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009523378685116768
    2. ' for' → logprob: -4.759523391723633
    3. '   ' → logprob: -7.009523391723633
    4. '	for' → logprob: -12.759523391723633
    5. '
' → logprob: -13.509523391723633
    6. '```' → logprob: -14.259523391723633
    7. '    
' → logprob: -15.259523391723633
    8. '<|end|>' → logprob: -17.259523391723633
    9. ' ' → logprob: -17.634523391723633
    10. '  ' → logprob: -17.634523391723633

Token 56: ' c' (ID: 274)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.008144191466271877
    2. ' c' → logprob: -5.508144378662109
    3. ' ' → logprob: -5.883144378662109
    4. 'coin' → logprob: -6.758144378662109
    5. ' i' → logprob: -10.13314437866211
    6. ' ' → logprob: -10.88314437866211
    7. ' money' → logprob: -11.25814437866211
    8. '  ' → logprob: -11.88314437866211
    9. ' coins' → logprob: -11.88314437866211
    10. ' space' → logprob: -12.25814437866211

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5770828127861023
    2. 'in' → logprob: -0.8270828127861023
    3. ' ' → logprob: -7.327082633972168
    4. 'i' → logprob: -8.827082633972168
    5. '  ' → logprob: -9.827082633972168
    6. '   ' → logprob: -9.827082633972168
    7. 'o' → logprob: -9.827082633972168
    8. '	in' → logprob: -9.827082633972168
    9. 'oin' → logprob: -10.327082633972168
    10. 's' → logprob: -10.327082633972168

Token 58: ' coins' (ID: 28969)
  Prédit: ' coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.6931602954864502
    2. 'coins' → logprob: -0.6931602954864502
    3. 'o' → logprob: -12.443160057067871
    4. 'Coins' → logprob: -12.693160057067871
    5. 'oin' → logprob: -13.068160057067871
    6. ' ' → logprob: -13.443160057067871
    7. 'coin' → logprob: -13.443160057067871
    8. 'c' → logprob: -15.068160057067871
    9. 'co' → logprob: -15.568160057067871
    10. 'oints' → logprob: -15.943160057067871

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000104616025055293
    2. '):' → logprob: -10.250104904174805
    3. ':
' → logprob: -10.625104904174805
    4. '   ' → logprob: -10.625104904174805
    5. ' :' → logprob: -11.625104904174805
    6. ' if' → logprob: -12.875104904174805
    7. ':**' → logprob: -13.250104904174805
    8. 'if' → logprob: -13.625104904174805
    9. '       ' → logprob: -13.750104904174805
    10. '<|end|>' → logprob: -13.875104904174805

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011941099539399147
    2. '<|end|>' → logprob: -4.761940956115723
    3. '    ' → logprob: -6.261940956115723
    4. '   ' → logprob: -7.386940956115723
    5. ' ' → logprob: -8.136940956115723
    6. '      ' → logprob: -9.636940956115723
    7. 'count' → logprob: -9.636940956115723
    8. '        
' → logprob: -9.636940956115723
    9. ' count' → logprob: -10.011940956115723
    10. '        ' → logprob: -10.261940956115723

Token 61: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.11744477599859238
    2. 'count' (adapté à ' count') → logprob: -2.2424447536468506
    3. '       ' → logprob: -5.61744499206543
    4. '    ' → logprob: -7.74244499206543
    5. '	count' → logprob: -8.24244499206543
    6. '        ' → logprob: -8.74244499206543
    7. '   ' → logprob: -10.11744499206543
    8. ' ' → logprob: -11.11744499206543
    9. ' while' → logprob: -11.24244499206543
    10. ' if' → logprob: -11.74244499206543

Token 62: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0002719449403230101
    2. '+=' → logprob: -8.250271797180176
    3. ' ' → logprob: -12.625271797180176
    4. ' +' → logprob: -12.625271797180176
    5. ' -=' → logprob: -13.500271797180176
    6. ' =' → logprob: -14.125271797180176
    7. '    ' → logprob: -14.375271797180176
    8. '   ' → logprob: -15.125271797180176
    9. '+' → logprob: -15.500271797180176
    10. '	' → logprob: -15.750271797180176

Token 63: ' change' (ID: 3343)
  Prédit: ' change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.0059631685726344585
    2. 'change' → logprob: -5.130963325500488
    3. '(change' → logprob: -10.880963325500488
    4. '	change' → logprob: -11.130963325500488
    5. ' ' → logprob: -15.130963325500488
    6. ' ' → logprob: -15.380963325500488
    7. ' chang' → logprob: -15.755963325500488
    8. ' (' → logprob: -16.255962371826172
    9. '_change' → logprob: -16.630962371826172
    10. '   ' → logprob: -16.880962371826172

Token 64: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0032140801195055246
    2. '//' → logprob: -5.753213882446289
    3. ' ' → logprob: -11.003213882446289
    4. ' ' → logprob: -11.503213882446289
    5. '<|end|>' → logprob: -12.503213882446289
    6. ' //
' → logprob: -13.628213882446289
    7. ' /' → logprob: -13.878213882446289
    8. '   ' → logprob: -14.503213882446289
    9. ' ///' → logprob: -14.753213882446289
    10. '...' → logprob: -15.003213882446289

Token 65: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0040785204619169235
    2. ' c' → logprob: -5.504078388214111
    3. '	c' → logprob: -17.629077911376953
    4. '<|end|>' → logprob: -17.879077911376953
    5. ')c' → logprob: -18.504077911376953
    6. ' ' → logprob: -18.754077911376953
    7. '   ' → logprob: -19.629077911376953
    8. '%c' → logprob: -20.129077911376953
    9. '*c' → logprob: -20.379077911376953
    10. '_c' → logprob: -20.379077911376953

Token 66: '
' (ID: 198)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -1.085258960723877
    2. '\n' → logprob: -1.835258960723877
    3. '
' → logprob: -2.210258960723877
    4. '       ' → logprob: -2.585258960723877
    5. '   ' → logprob: -2.585258960723877
    6. ' change' → logprob: -2.835258960723877
    7. 'count' → logprob: -3.335258960723877
    8. '*' → logprob: -3.960258960723877
    9. '(change' → logprob: -4.210258960723877
    10. '    
' → logprob: -4.335258960723877

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3283368945121765
    2. ' change' → logprob: -1.8283369541168213
    3. 'change' → logprob: -2.3283369541168213
    4. ''' → logprob: -4.703336715698242
    5. '(change' → logprob: -5.578336715698242
    6. '        
' → logprob: -6.453336715698242
    7. '`' → logprob: -6.578336715698242
    8. '"' → logprob: -6.703336715698242
    9. '\n' → logprob: -6.953336715698242
    10. '   ' → logprob: -7.453336715698242

Token 68: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' (adapté à ' change') → logprob: -0.3882633149623871
    2. ' change' → logprob: -1.1382633447647095
    3. '       ' → logprob: -6.63826322555542
    4. '   ' → logprob: -11.013263702392578
    5. '	change' → logprob: -11.263263702392578
    6. ' ' → logprob: -11.638263702392578
    7. '\n' → logprob: -11.638263702392578
    8. '\' → logprob: -11.888263702392578
    9. '(change' → logprob: -12.263263702392578
    10. '`' → logprob: -12.513263702392578

Token 69: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.04920957237482071
    2. '=' → logprob: -3.7992095947265625
    3. '%=' → logprob: -3.7992095947265625
    4. ' =' → logprob: -6.1742095947265625
    5. '%' → logprob: -6.7992095947265625
    6. ' %' → logprob: -10.049209594726562
    7. ' ' → logprob: -14.174209594726562
    8. ')' → logprob: -16.174209594726562
    9. ' ' → logprob: -16.299209594726562
    10. '=%' → logprob: -17.174209594726562

Token 70: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006715370807796717
    2. ' c' → logprob: -5.006715297698975
    3. '	c' → logprob: -17.506715774536133
    4. ' ' → logprob: -18.506715774536133
    5. '   ' → logprob: -19.006715774536133
    6. ')c' → logprob: -20.506715774536133
    7. '$c' → logprob: -20.631715774536133
    8. '%c' → logprob: -21.131715774536133
    9. '  ' → logprob: -21.256715774536133
    10. '<c' → logprob: -22.256715774536133

Token 71: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4708457291126251
    2. '
' → logprob: -1.8458456993103027
    3. '\n' → logprob: -2.0958456993103027
    4. 'print' → logprob: -2.8458456993103027
    5. '    
' → logprob: -3.8458456993103027
    6. '```' → logprob: -5.220845699310303
    7. '  
' → logprob: -5.845845699310303
    8. '<|end|>' → logprob: -5.970845699310303
    9. '   
' → logprob: -7.095845699310303
    10. ' 
' → logprob: -7.345845699310303

Token 72: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16202974319458008
    2. '   ' → logprob: -1.91202974319458
    3. '\n' → logprob: -7.66202974319458
    4. '```' → logprob: -7.66202974319458
    5. ' print' → logprob: -8.162029266357422
    6. '    
' → logprob: -8.287029266357422
    7. '
' → logprob: -8.412029266357422
    8. '  
' → logprob: -10.912029266357422
    9. '<|end|>' → logprob: -11.162029266357422
    10. '\' → logprob: -11.162029266357422

Token 73: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0036824976559728384
    2. '   ' → logprob: -5.753682613372803
    3. ' print' → logprob: -7.753682613372803
    4. '```' → logprob: -9.503682136535645
    5. '	print' → logprob: -15.253682136535645
    6. '    
' → logprob: -15.253682136535645
    7. '``' → logprob: -15.378682136535645
    8. '
' → logprob: -15.753682136535645
    9. '`' → logprob: -17.37868309020996
    10. '\' → logprob: -17.75368309020996

Token 74: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0005069229518994689
    2. '(' → logprob: -7.62550687789917
    3. 'count' → logprob: -11.125507354736328
    4. '()' → logprob: -13.250507354736328
    5. ' (' → logprob: -13.625507354736328
    6. '('' → logprob: -15.125507354736328
    7. '(c' → logprob: -15.250507354736328
    8. '(cnt' → logprob: -15.375507354736328
    9. '((' → logprob: -16.500507354736328
    10. '("' → logprob: -16.750507354736328

Token 75: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')`' → logprob: -17.125
    4. ')
' → logprob: -17.625
    5. '))' → logprob: -18.0
    6. '()' → logprob: -19.5
    7. ')}' → logprob: -21.0
    8. '')' → logprob: -21.0
    9. '())' → logprob: -21.0
    10. ')**' → logprob: -21.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 73
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 69
Précision stricte (1ère position): 54.79%
Précision adaptée (1ère position): 58.90%
Précision (top 10): 94.52%
================================================================================
