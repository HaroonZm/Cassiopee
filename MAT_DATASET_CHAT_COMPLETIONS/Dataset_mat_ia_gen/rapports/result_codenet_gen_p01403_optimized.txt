================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

MAX = 10**6
phi = list(range(MAX+1))
for i in range(2, MAX+1):
    if phi[i] == i:
        for j in range(i, MAX+1, i):
            phi[j] -= phi[j] // i
prefix = [0]*(MAX+1)
for i in range(1, MAX+1):
    prefix[i] = prefix[i-1] + phi[i]

t = int(input())
for _ in range(t):
    n = int(input())
    print(prefix[n]+1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3437388837337494
    2. '.' → logprob: -1.5937389135360718
    3. '<|end|>' → logprob: -2.9687387943267822
    4. '\' → logprob: -4.468739032745361
    5. 'import' → logprob: -5.093739032745361
    6. 'newline' → logprob: -5.093739032745361
    7. '<|end|>' → logprob: -5.968739032745361
    8. '' → logprob: -5.968739032745361
    9. '\r' → logprob: -6.093739032745361
    10. '
' → logprob: -6.343739032745361

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013427620753645897
    2. '.' → logprob: -4.388427734375
    3. ' (' → logprob: -8.013427734375
    4. ')' → logprob: -9.013427734375
    5. '[' → logprob: -9.138427734375
    6. '()' → logprob: -9.513427734375
    7. '('' → logprob: -9.888427734375
    8. '(
' → logprob: -9.888427734375
    9. ''' → logprob: -10.263427734375
    10. ''s' → logprob: -10.638427734375

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014413704164326191
    2. 'sys' → logprob: -4.264413833618164
    3. ' input' → logprob: -8.514413833618164
    4. 'input' → logprob: -10.389413833618164
    5. ' ' → logprob: -12.014413833618164
    6. '=sys' → logprob: -12.139413833618164
    7. '	sys' → logprob: -12.389413833618164
    8. '(sys' → logprob: -12.889413833618164
    9. ' system' → logprob: -14.514413833618164
    10. ' lambda' → logprob: -16.514413833618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013695230009034276
    2. ' .' → logprob: -7.376369476318359
    3. '.stdin' → logprob: -7.751369476318359
    4. '.import' → logprob: -9.25136947631836
    5. '.readline' → logprob: -9.50136947631836
    6. '.
' → logprob: -10.12636947631836
    7. '.argv' → logprob: -10.37636947631836
    8. '.stdout' → logprob: -11.37636947631836
    9. '.input' → logprob: -11.50136947631836
    10. '.exit' → logprob: -12.00136947631836

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3011370599269867
    2. '.' → logprob: -1.426137089729309
    3. '.read' → logprob: -3.9261369705200195
    4. '.readlines' → logprob: -10.42613697052002
    5. '```' → logprob: -11.42613697052002
    6. '.Read' → logprob: -11.92613697052002
    7. '.buffer' → logprob: -12.67613697052002
    8. 'read' → logprob: -12.92613697052002
    9. '.write' → logprob: -13.05113697052002
    10. ' .' → logprob: -13.67613697052002

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1419765055179596
    2. '(' → logprob: -2.2669765949249268
    3. '()
' → logprob: -4.266976356506348
    4. '(
' → logprob: -4.766976356506348
    5. '().' → logprob: -6.516976356506348
    6. '
' → logprob: -6.516976356506348
    7. '()\' → logprob: -7.016976356506348
    8. '()

' → logprob: -7.391976356506348
    9. '\' → logprob: -7.516976356506348
    10. '\n' → logprob: -7.641976356506348

Token 9: 'MAX' (ID: 21911)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18130798637866974
    2. '(' → logprob: -1.8063080310821533
    3. '().' → logprob: -6.806307792663574
    4. '()
' → logprob: -8.806307792663574
    5. '(
' → logprob: -9.931307792663574
    6. '()

' → logprob: -10.306307792663574
    7. ')' → logprob: -10.431307792663574
    8. '#' → logprob: -10.431307792663574
    9. 'def' → logprob: -10.681307792663574
    10. 'a' → logprob: -10.681307792663574

Token 10: ' =' (ID: 314)
  Prédit: '_SIZE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_SIZE' → logprob: -0.15634679794311523
    2. '_' → logprob: -3.0313467979431152
    3. '_LENGTH' → logprob: -3.0313467979431152
    4. '_LEN' → logprob: -3.5313467979431152
    5. '_COUNT' → logprob: -5.406346797943115
    6. '_CAP' → logprob: -5.906346797943115
    7. '(' → logprob: -6.281346797943115
    8. '_DEPTH' → logprob: -6.656346797943115
    9. '_LINE' → logprob: -6.781346797943115
    10. '_NUM' → logprob: -6.906346797943115

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09088681638240814
    2. '10' → logprob: -2.5908868312835693
    3. '100' → logprob: -4.46588659286499
    4. 'int' → logprob: -8.090887069702148
    5. ' int' → logprob: -9.840887069702148
    6. '200' → logprob: -10.965887069702148
    7. '1' → logprob: -11.090887069702148
    8. '999' → logprob: -11.840887069702148
    9. '20' → logprob: -12.340887069702148
    10. '500' → logprob: -12.340887069702148

Token 12: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.23954923450946808
    2. '100' → logprob: -1.7395492792129517
    3. ' ' → logprob: -3.364549160003662
    4. 'int' → logprob: -6.239549160003662
    5. '1' → logprob: -7.864549160003662
    6. '200' → logprob: -8.86454963684082
    7. '999' → logprob: -8.86454963684082
    8. '2' → logprob: -9.61454963684082
    9. '987' → logprob: -10.23954963684082
    10. '500' → logprob: -10.36454963684082

Token 13: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.31263524293899536
    2. '0' → logprob: -2.5626351833343506
    3. '*' → logprob: -2.6876351833343506
    4. ' **' → logprob: -3.0626351833343506
    5. '_' → logprob: -3.5626351833343506
    6. ' *' → logprob: -4.56263542175293
    7. '
' → logprob: -4.56263542175293
    8. ' ' → logprob: -4.81263542175293
    9. '+' → logprob: -5.18763542175293
    10. '00' → logprob: -5.43763542175293

Token 14: '6' (ID: 21)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.003962397575378418
    2. '6' → logprob: -6.253962516784668
    3. '7' → logprob: -6.253962516784668
    4. '8' → logprob: -9.128962516784668
    5. '5' → logprob: -15.253962516784668
    6. ' ' → logprob: -15.878962516784668
    7. '```' → logprob: -15.878962516784668
    8. '10' → logprob: -17.87896156311035
    9. '12' → logprob: -18.75396156311035
    10. '18' → logprob: -19.25396156311035

Token 15: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04380140081048012
    2. 'n' → logprob: -4.668801307678223
    3. '\n' → logprob: -4.793801307678223
    4. '
' → logprob: -5.168801307678223
    5. '*' → logprob: -5.918801307678223
    6. ' +' → logprob: -6.043801307678223
    7. ' 
' → logprob: -6.168801307678223
    8. '#' → logprob: -6.293801307678223
    9. '\' → logprob: -6.418801307678223
    10. ' ' → logprob: -6.543801307678223

Token 16: 'phi' (ID: 33893)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.5177375078201294
    2. 'n' → logprob: -1.6427375078201294
    3. '_' → logprob: -2.01773738861084
    4. '\' → logprob: -2.26773738861084
    5. 'count' → logprob: -3.14273738861084
    6. 'def' → logprob: -3.14273738861084
    7. 'dp' → logprob: -3.14273738861084
    8. '`' → logprob: -3.89273738861084
    9. '```' → logprob: -3.89273738861084
    10. 'result' → logprob: -4.01773738861084

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21195577085018158
    2. '[' → logprob: -1.8369557857513428
    3. '=' → logprob: -3.4619557857513428
    4. ' ' → logprob: -8.836956024169922
    5. ' =[' → logprob: -10.336956024169922
    6. '=[' → logprob: -10.586956024169922
    7. 's' → logprob: -10.586956024169922
    8. '[MAX' → logprob: -10.961956024169922
    9. '[]' → logprob: -10.961956024169922
    10. ',' → logprob: -11.086956024169922

Token 18: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4274939000606537
    2. ' [' → logprob: -1.177493929862976
    3. '[MAX' → logprob: -3.4274938106536865
    4. '[max' → logprob: -5.677494049072266
    5. '[list' → logprob: -5.677494049072266
    6. '[int' → logprob: -8.302494049072266
    7. '[List' → logprob: -9.927494049072266
    8. ' list' → logprob: -10.677494049072266
    9. '[value' → logprob: -10.927494049072266
    10. '[i' → logprob: -11.052494049072266

Token 19: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.03382492437958717
    2. '(' → logprob: -3.408824920654297
    3. '([' → logprob: -10.533824920654297
    4. '<|end|>' → logprob: -10.533824920654297
    5. '(map' → logprob: -10.908824920654297
    6. '(lambda' → logprob: -11.033824920654297
    7. '(
' → logprob: -11.158824920654297
    8. '((' → logprob: -11.533824920654297
    9. '(filter' → logprob: -11.783824920654297
    10. '(phi' → logprob: -12.033824920654297

Token 20: '(MAX' (ID: 129209)
  Prédit: '(MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.0040887282229959965
    2. '(' → logprob: -5.504088878631592
    3. '(M' → logprob: -12.629088401794434
    4. ')' → logprob: -13.129088401794434
    5. '(Max' → logprob: -13.254088401794434
    6. '(
' → logprob: -14.004088401794434
    7. 'MAX' → logprob: -14.379088401794434
    8. '(len' → logprob: -14.379088401794434
    9. '(max' → logprob: -14.629088401794434
    10. ')(' → logprob: -14.879088401794434

Token 21: '+' (ID: 10)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.034578561782836914
    2. '+' → logprob: -3.909578561782837
    3. ')' → logprob: -4.284578323364258
    4. ' +' → logprob: -9.159578323364258
    5. 'MAX' → logprob: -11.409578323364258
    6. '(MAX' → logprob: -11.909578323364258
    7. '),' → logprob: -12.034578323364258
    8. '1' → logprob: -12.159578323364258
    9. ')))' → logprob: -12.284578323364258
    10. ' ))' → logprob: -12.784578323364258

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3319124011322856e-05
    2. ' ' → logprob: -10.750022888183594
    3. '+' → logprob: -14.625022888183594
    4. 'MAX' → logprob: -14.625022888183594
    5. '7' → logprob: -15.500022888183594
    6. '2' → logprob: -15.500022888183594
    7. '```' → logprob: -16.000022888183594
    8. '(MAX' → logprob: -16.125022888183594
    9. '0' → logprob: -16.875022888183594
    10. '(' → logprob: -16.875022888183594

Token 23: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005258660763502121
    2. ')' → logprob: -5.255258560180664
    3. ' ))' → logprob: -11.630258560180664
    4. '))
' → logprob: -12.130258560180664
    5. '+' → logprob: -12.255258560180664
    6. ')))' → logprob: -12.630258560180664
    7. '),' → logprob: -14.505258560180664
    8. '])' → logprob: -14.630258560180664
    9. '))

' → logprob: -14.880258560180664
    10. ' )' → logprob: -15.630258560180664

Token 24: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6285145282745361
    2. '
' → logprob: -1.6285145282745361
    3. '[' → logprob: -2.253514528274536
    4. '\n' → logprob: -3.003514528274536
    5. ' for' → logprob: -3.253514528274536
    6. ' 
' → logprob: -4.003514289855957
    7. '' → logprob: -4.503514289855957
    8. '  
' → logprob: -4.628514289855957
    9. ' ' → logprob: -4.878514289855957
    10. '
' → logprob: -4.878514289855957

Token 25: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.013360216282308102
    2. ' ' → logprob: -4.388360023498535
    3. 'i' → logprob: -7.138360023498535
    4. ' _' → logprob: -10.638360023498535
    5. '_' → logprob: -11.138360023498535
    6. ' p' → logprob: -11.763360023498535
    7. ' x' → logprob: -12.888360023498535
    8. '	i' → logprob: -12.888360023498535
    9. ' a' → logprob: -14.388360023498535
    10. '2' → logprob: -14.388360023498535

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5760805010795593
    2. 'in' → logprob: -0.8260805010795593
    3. ' ' → logprob: -9.076080322265625
    4. '	in' → logprob: -11.201080322265625
    5. '1' → logprob: -12.451080322265625
    6. '2' → logprob: -12.951080322265625
    7. 'import' → logprob: -13.576080322265625
    8. ',' → logprob: -13.951080322265625
    9. '  ' → logprob: -14.076080322265625
    10. 'i' → logprob: -14.201080322265625

Token 27: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17810021340847015
    2. ' ' → logprob: -2.178100109100342
    3. 'range' → logprob: -3.178100109100342
    4. '2' → logprob: -4.803100109100342
    5. '(' → logprob: -11.6781005859375
    6. '   ' → logprob: -13.0531005859375
    7. '	range' → logprob: -13.3031005859375
    8. '  ' → logprob: -13.8031005859375
    9. '1' → logprob: -13.9281005859375
    10. ' xrange' → logprob: -14.6781005859375

Token 28: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3870249390602112
    2. '2' → logprob: -1.1370248794555664
    3. ' ' → logprob: -8.887024879455566
    4. ' (' → logprob: -11.512024879455566
    5. ',' → logprob: -12.887024879455566
    6. '```' → logprob: -13.387024879455566
    7. ')' → logprob: -14.762024879455566
    8. '   ' → logprob: -15.262024879455566
    9. '	' → logprob: -15.512024879455566
    10. '[' → logprob: -15.637024879455566

Token 29: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.125003814697266
    4. '(' → logprob: -18.125003814697266
    5. '２' → logprob: -18.375003814697266
    6. '	' → logprob: -18.375003814697266
    7. '```' → logprob: -18.500003814697266
    8. '1' → logprob: -18.875003814697266
    9. ')' → logprob: -19.000003814697266
    10. '۲' → logprob: -19.125003814697266

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1318875446449965e-05
    2. ' ,' → logprob: -10.125041007995605
    3. ',max' → logprob: -14.375041007995605
    4. ',int' → logprob: -15.500041007995605
    5. 'MAX' → logprob: -16.250041961669922
    6. ',len' → logprob: -16.750041961669922
    7. ',M' → logprob: -17.000041961669922
    8. '，' → logprob: -17.125041961669922
    9. ',num' → logprob: -17.375041961669922
    10. ',

' → logprob: -18.375041961669922

Token 31: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.0015229565324261785
    2. ' MAX' → logprob: -6.501523017883301
    3. '(MAX' → logprob: -11.0015230178833
    4. 'int' → logprob: -12.7515230178833
    5. '   ' → logprob: -14.1265230178833
    6. ' ' → logprob: -16.126522064208984
    7. '_MAX' → logprob: -16.751522064208984
    8. ' int' → logprob: -17.251522064208984
    9. 'INT' → logprob: -17.501522064208984
    10. '[MAX' → logprob: -17.876522064208984

Token 32: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005543439765460789
    2. ' +' → logprob: -7.50055456161499
    3. ',' → logprob: -14.000554084777832
    4. '):' → logprob: -15.125554084777832
    5. ' ' → logprob: -16.25055503845215
    6. '+i' → logprob: -16.37555503845215
    7. '):
' → logprob: -17.37555503845215
    8. '

' → logprob: -17.62555503845215
    9. ',+' → logprob: -17.62555503845215
    10. '+,' → logprob: -18.00055503845215

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5106782913208008
    2. '6' → logprob: -1.1356782913208008
    3. '7' → logprob: -2.635678291320801
    4. '+' → logprob: -5.510678291320801
    5. ' ' → logprob: -6.510678291320801
    6. '0' → logprob: -7.385678291320801
    7. '2' → logprob: -8.1356782913208
    8. '```' → logprob: -8.2606782913208
    9. '   ' → logprob: -9.3856782913208
    10. '//' → logprob: -9.8856782913208

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020101740956306458
    2. ':' → logprob: -4.145101547241211
    3. '):
' → logprob: -5.520101547241211
    4. ')' → logprob: -10.395101547241211
    5. ' ):' → logprob: -11.520101547241211
    6. '):
' → logprob: -12.270101547241211
    7. ',' → logprob: -12.645101547241211
    8. ':
' → logprob: -13.520101547241211
    9. '}:' → logprob: -13.520101547241211
    10. '>:' → logprob: -14.645101547241211

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0390661247074604
    2. ' if' → logprob: -3.2890660762786865
    3. '	if' → logprob: -7.914066314697266
    4. ' ' → logprob: -8.164066314697266
    5. '```' → logprob: -9.039066314697266
    6. 'if' → logprob: -9.164066314697266
    7. '    
' → logprob: -10.039066314697266
    8. '<|end|>' → logprob: -10.164066314697266
    9. '   ' → logprob: -11.789066314697266
    10. ':' → logprob: -11.789066314697266

Token 36: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5657967925071716
    2. 'if' (adapté à ' if') → logprob: -0.9407967925071716
    3. '   ' → logprob: -3.1907968521118164
    4. '    ' → logprob: -8.190796852111816
    5. '       ' → logprob: -8.565796852111816
    6. ' ' → logprob: -9.065796852111816
    7. '	if' → logprob: -10.940796852111816
    8. '```' → logprob: -10.940796852111816
    9. '  ' → logprob: -12.565796852111816
    10. '<|end|>' → logprob: -12.815796852111816

Token 37: ' phi' (ID: 40391)
  Prédit: ' phi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' phi' → logprob: -0.14268557727336884
    2. 'phi' → logprob: -2.017685651779175
    3. '(phi' → logprob: -12.017685890197754
    4. '   ' → logprob: -12.892685890197754
    5. ' ' → logprob: -13.892685890197754
    6. '_phi' → logprob: -15.017685890197754
    7. ' ph' → logprob: -16.017684936523438
    8. 'phis' → logprob: -16.142684936523438
    9. '  ' → logprob: -16.142684936523438
    10. 'ph' → logprob: -16.642684936523438

Token 38: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.3464544432936236e-05
    2. '[' → logprob: -10.125043869018555
    3. '```' → logprob: -13.375043869018555
    4. '\[' → logprob: -13.750043869018555
    5. '[I' → logprob: -14.750043869018555
    6. '[
' → logprob: -15.875043869018555
    7. 'i' → logprob: -16.000043869018555
    8. ' [' → logprob: -16.500043869018555
    9. '`' → logprob: -17.250043869018555
    10. '   ' → logprob: -18.625043869018555

Token 39: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6782552599906921
    2. ']==' → logprob: -0.8032552599906921
    3. '==' → logprob: -3.178255319595337
    4. ')' → logprob: -6.678255081176758
    5. ' ==' → logprob: -7.303255081176758
    6. '```' → logprob: -8.053255081176758
    7. ')==' → logprob: -8.053255081176758
    8. '[i' → logprob: -8.678255081176758
    9. '[' → logprob: -9.303255081176758
    10. ' ]' → logprob: -10.178255081176758

Token 40: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08179321140050888
    2. ' ==' → logprob: -2.5817933082580566
    3. '=' → logprob: -5.956793308258057
    4. ' =' → logprob: -9.081792831420898
    5. ']==' → logprob: -9.456792831420898
    6. ')==' → logprob: -10.581792831420898
    7. '===' → logprob: -10.706792831420898
    8. '=i' → logprob: -10.831792831420898
    9. ' ' → logprob: -11.581792831420898
    10. '[i' → logprob: -11.706792831420898

Token 41: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.506661833962426e-05
    2. ' i' → logprob: -9.37508487701416
    3. '	i' → logprob: -16.750085830688477
    4. '   ' → logprob: -18.625085830688477
    5. '0' → logprob: -19.125085830688477
    6. ' ' → logprob: -19.250085830688477
    7. '```' → logprob: -20.125085830688477
    8. '1' → logprob: -20.500085830688477
    9. ')i' → logprob: -21.250085830688477
    10. ''i' → logprob: -21.250085830688477

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00133595522493124
    2. ':
' → logprob: -6.626336097717285
    3. '):' → logprob: -12.001336097717285
    4. ' :' → logprob: -13.376336097717285
    5. ':
' → logprob: -13.876336097717285
    6. ':i' → logprob: -15.126336097717285
    7. '):
' → logprob: -15.376336097717285
    8. ':**' → logprob: -15.376336097717285
    9. '':' → logprob: -15.751336097717285
    10. '   ' → logprob: -15.876336097717285

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14738942682743073
    2. '<|end|>' → logprob: -2.3973894119262695
    3. '   ' → logprob: -3.7723894119262695
    4. ' for' → logprob: -4.7723894119262695
    5. ':' → logprob: -5.2723894119262695
    6. '\t' → logprob: -6.2723894119262695
    7. ',' → logprob: -6.3973894119262695
    8. '<|end|>' → logprob: -6.3973894119262695
    9. ' ' → logprob: -7.2723894119262695
    10. '	   ' → logprob: -7.5223894119262695

Token 44: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11160393804311752
    2. 'for' (adapté à ' for') → logprob: -2.3616039752960205
    3. '       ' → logprob: -4.861603736877441
    4. '   ' → logprob: -5.736603736877441
    5. '	for' → logprob: -8.236603736877441
    6. '    ' → logprob: -10.486603736877441
    7. 'phi' → logprob: -11.236603736877441
    8. ',' → logprob: -11.361603736877441
    9. '```' → logprob: -11.361603736877441
    10. '<|end|>' → logprob: -12.111603736877441

Token 45: ' j' (ID: 441)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3135314881801605
    2. ' in' → logprob: -1.313531517982483
    3. 'i' → logprob: -9.063531875610352
    4. 'range' → logprob: -10.063531875610352
    5. '	in' → logprob: -10.438531875610352
    6. '<|end|>' → logprob: -10.563531875610352
    7. ' i' → logprob: -11.063531875610352
    8. '   ' → logprob: -11.313531875610352
    9. '*i' → logprob: -12.563531875610352
    10. '```' → logprob: -12.563531875610352

Token 47: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009143244242295623
    2. ' range' → logprob: -7.000914096832275
    3. 'i' → logprob: -13.000914573669434
    4. '	range' → logprob: -14.750914573669434
    5. '(range' → logprob: -15.875914573669434
    6. 'rang' → logprob: -16.875913619995117
    7. '   ' → logprob: -17.750913619995117
    8. 'in' → logprob: -18.000913619995117
    9. 'r' → logprob: -18.125913619995117
    10. 'ange' → logprob: -18.750913619995117

Token 48: '(i' (ID: 3649)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006550124380737543
    2. 'i' → logprob: -7.500655174255371
    3. ',i' → logprob: -9.375655174255371
    4. ' ,' → logprob: -11.625655174255371
    5. 'MAX' → logprob: -12.250655174255371
    6. '*i' → logprob: -13.625655174255371
    7. ' i' → logprob: -14.625655174255371
    8. '   ' → logprob: -14.750655174255371
    9. 'I' → logprob: -15.625655174255371
    10. ',
' → logprob: -15.750655174255371

Token 50: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.004106065724045038
    2. ' MAX' → logprob: -5.504106044769287
    3. '(MAX' → logprob: -10.504106521606445
    4. '   ' → logprob: -16.254106521606445
    5. '[MAX' → logprob: -16.254106521606445
    6. '/MAX' → logprob: -18.254106521606445
    7. '_MAX' → logprob: -18.629106521606445
    8. ' ' → logprob: -19.129106521606445
    9. '.MAX' → logprob: -19.379106521606445
    10. 'Max' → logprob: -20.879106521606445

Token 51: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3663626305060461e-05
    2. ' +' → logprob: -11.62501335144043
    3. ',' → logprob: -12.62501335144043
    4. '+i' → logprob: -13.75001335144043
    5. '+,' → logprob: -16.12501335144043
    6. 'MAX' → logprob: -16.37501335144043
    7. '```' → logprob: -18.00001335144043
    8. '   ' → logprob: -18.25001335144043
    9. '1' → logprob: -18.75001335144043
    10. '+
' → logprob: -19.12501335144043

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5445984601974487
    2. '+' → logprob: -0.9195984601974487
    3. 'MAX' → logprob: -3.9195985794067383
    4. '(MAX' → logprob: -7.794598579406738
    5. '6' → logprob: -7.919598579406738
    6. ',' → logprob: -8.044598579406738
    7. 'i' → logprob: -9.544598579406738
    8. '```' → logprob: -10.169598579406738
    9. ' ' → logprob: -10.794598579406738
    10. '7' → logprob: -10.794598579406738

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001408686046488583
    2. ',i' → logprob: -6.876408576965332
    3. ' ,' → logprob: -8.001408576965332
    4. 'i' → logprob: -10.876408576965332
    5. ' i' → logprob: -10.876408576965332
    6. '```' → logprob: -13.751408576965332
    7. '(i' → logprob: -14.501408576965332
    8. '[i' → logprob: -14.751408576965332
    9. '   ' → logprob: -15.751408576965332
    10. '+i' → logprob: -16.12640953063965

Token 54: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03804286941885948
    2. ' i' → logprob: -3.2880427837371826
    3. '	i' → logprob: -14.288043022155762
    4. ')i' → logprob: -14.913043022155762
    5. ' ' → logprob: -16.038042068481445
    6. '   ' → logprob: -16.163042068481445
    7. ')' → logprob: -16.413042068481445
    8. '*i' → logprob: -17.038042068481445
    9. 'j' → logprob: -17.288042068481445
    10. '  ' → logprob: -17.288042068481445

Token 55: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18105249106884003
    2. '):' → logprob: -1.8060524463653564
    3. '):
' → logprob: -7.0560526847839355
    4. ':' → logprob: -7.9310526847839355
    5. ')' → logprob: -9.931052207946777
    6. '):

' → logprob: -11.431052207946777
    7. ':
' → logprob: -11.556052207946777
    8. ' ):
' → logprob: -12.181052207946777
    9. '```' → logprob: -12.681052207946777
    10. ',' → logprob: -13.306052207946777

Token 56: '           ' (ID: 352)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' phi' (ID: 40391)
  Prédit: 'phi'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phi' (adapté à ' phi') → logprob: -0.474122554063797
    2. ' phi' → logprob: -0.9741225242614746
    3. '           ' → logprob: -10.849123001098633
    4. '_phi' → logprob: -10.974123001098633
    5. '(phi' → logprob: -12.474123001098633
    6. '               ' → logprob: -12.974123001098633
    7. '   ' → logprob: -13.599123001098633
    8. '.ph' → logprob: -15.224123001098633
    9. '```' → logprob: -15.349123001098633
    10. '       ' → logprob: -15.474123001098633

Token 58: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.500000953674316
    3. '[' → logprob: -15.625000953674316
    4. 'j' → logprob: -17.375
    5. '[i' → logprob: -17.5
    6. '[js' → logprob: -18.625
    7. '[J' → logprob: -19.125
    8. ' [' → logprob: -19.5
    9. '	j' → logprob: -19.75
    10. '\[' → logprob: -20.25

Token 59: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0683535037969705e-05
    2. ']=' → logprob: -12.25001049041748
    3. ')' → logprob: -12.37501049041748
    4. ' ]' → logprob: -14.37501049041748
    5. '//' → logprob: -15.00001049041748
    6. '```' → logprob: -16.000011444091797
    7. '//=' → logprob: -16.250011444091797
    8. ']
' → logprob: -16.250011444091797
    9. ']

' → logprob: -16.375011444091797
    10. ' //' → logprob: -17.000011444091797

Token 60: ' -=' (ID: 12583)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' phi' (ID: 40391)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00028398085851222277
    2. '<|end|>' → logprob: -9.000284194946289
    3. '[' → logprob: -9.250284194946289
    4. 'j' → logprob: -10.875284194946289
    5. '[js' → logprob: -11.125284194946289
    6. '	j' → logprob: -11.250284194946289
    7. '```' → logprob: -12.125284194946289
    8. '<|end|>' → logprob: -12.500284194946289
    9. '_j' → logprob: -13.125284194946289
    10. '/j' → logprob: -13.125284194946289

Token 63: ']' (ID: 60)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0008289250545203686
    2. ']' → logprob: -8.250828742980957
    3. '[i' → logprob: -8.375828742980957
    4. 'j' → logprob: -8.625828742980957
    5. '[' → logprob: -9.875828742980957
    6. '```' → logprob: -10.125828742980957
    7. '][' → logprob: -10.375828742980957
    8. '   ' → logprob: -11.000828742980957
    9. '//' → logprob: -12.375828742980957
    10. '/j' → logprob: -13.000828742980957

Token 64: ' //' (ID: 602)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0004870378761552274
    2. 'j' → logprob: -8.125487327575684
    3. '[i' → logprob: -9.375487327575684
    4. '[' → logprob: -10.250487327575684
    5. '```' → logprob: -10.625487327575684
    6. 'div' → logprob: -11.000487327575684
    7. ' j' → logprob: -11.250487327575684
    8. '   ' → logprob: -12.500487327575684
    9. '//' → logprob: -12.500487327575684
    10. '/j' → logprob: -13.500487327575684

Token 65: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.4121114822482923e-06
    2. ' i' → logprob: -12.625003814697266
    3. '	i' → logprob: -18.875003814697266
    4. '   ' → logprob: -20.250003814697266
    5. ' ' → logprob: -21.625003814697266
    6. ')i' → logprob: -22.250003814697266
    7. '*i' → logprob: -22.500003814697266
    8. '  ' → logprob: -22.500003814697266
    9. '```' → logprob: -22.500003814697266
    10. '<|end|>' → logprob: -22.625003814697266

Token 66: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008133663795888424
    2. ')' → logprob: -5.508133888244629
    3. '\n' → logprob: -7.133133888244629
    4. '#' → logprob: -7.383133888244629
    5. '```' → logprob: -7.758133888244629
    6. '1' → logprob: -7.883133888244629
    7. '
' → logprob: -7.883133888244629
    8. ')
' → logprob: -8.258133888244629
    9. '*' → logprob: -8.258133888244629
    10. '#print' → logprob: -9.133133888244629

Token 67: 'prefix' (ID: 26155)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20462290942668915
    2. ' [' → logprob: -1.7046228647232056
    3. 'phi' → logprob: -5.829622745513916
    4. ' phi' → logprob: -8.329623222351074
    5. 'list' → logprob: -12.204623222351074
    6. '[list' → logprob: -12.704623222351074
    7. '[i' → logprob: -12.954623222351074
    8. '[len' → logprob: -12.954623222351074
    9. ' ' → logprob: -13.579623222351074
    10. '[int' → logprob: -13.704623222351074

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8789383830153383e-05
    2. 'phi' → logprob: -11.250019073486328
    3. ' ' → logprob: -12.250019073486328
    4. '1' → logprob: -14.250019073486328
    5. '   ' → logprob: -16.250019073486328
    6. '(' → logprob: -17.187519073486328
    7. ' phi' → logprob: -17.312519073486328
    8. '[' → logprob: -17.375019073486328
    9. '2' → logprob: -17.500019073486328
    10. '00' → logprob: -17.875019073486328

Token 71: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004356890916824341
    2. ']
' → logprob: -5.504356861114502
    3. ']*(' → logprob: -8.87935733795166
    4. ']
' → logprob: -9.75435733795166
    5. ']*' → logprob: -10.25435733795166
    6. ']+' → logprob: -10.62935733795166
    7. ')' → logprob: -11.75435733795166
    8. '0' → logprob: -12.87935733795166
    9. ' ]' → logprob: -13.00435733795166
    10. ']

' → logprob: -13.25435733795166

Token 72: 'MAX' (ID: 21911)
  Prédit: 'MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -4.127333340875339e-06
    2. '(MAX' → logprob: -13.125003814697266
    3. ' MAX' → logprob: -13.250003814697266
    4. '10' → logprob: -15.250003814697266
    5. 'max' → logprob: -16.875003814697266
    6. 'Max' → logprob: -18.000003814697266
    7. '100' → logprob: -18.375003814697266
    8. '   ' → logprob: -18.625003814697266
    9. 'len' → logprob: -19.125003814697266
    10. '_MAX' → logprob: -19.375003814697266

Token 73: '+' (ID: 10)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.875008583068848
    3. '2' → logprob: -13.500008583068848
    4. '+' → logprob: -16.250009536743164
    5. '```' → logprob: -16.312509536743164
    6. ')' → logprob: -16.500009536743164
    7. '   ' → logprob: -16.500009536743164
    8. '  ' → logprob: -18.000009536743164
    9. '１' → logprob: -18.062509536743164
    10. '`' → logprob: -18.312509536743164

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3137090504169464
    2. ')
' → logprob: -1.313709020614624
    3. ')
' → logprob: -7.813709259033203
    4. ')

' → logprob: -10.438709259033203
    5. '+' → logprob: -12.438709259033203
    6. ' )
' → logprob: -12.688709259033203
    7. '```' → logprob: -13.063709259033203
    8. ' )' → logprob: -13.688709259033203
    9. ')`
' → logprob: -13.813709259033203
    10. '`)' → logprob: -14.563709259033203

Token 76: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014657003339380026
    2. ' for' → logprob: -7.126465797424316
    3. '
' → logprob: -7.626465797424316
    4. 'prefix' → logprob: -8.876465797424316
    5. '```' → logprob: -10.376465797424316
    6. '``' → logprob: -13.751465797424316
    7. '<|end|>' → logprob: -14.626465797424316
    8. ' 
' → logprob: -15.376465797424316
    9. '`' → logprob: -15.876465797424316
    10. '
' → logprob: -16.25146484375

Token 77: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07000390440225601
    2. 'i' → logprob: -2.6950039863586426
    3. ' ' → logprob: -9.945003509521484
    4. ' range' → logprob: -11.945003509521484
    5. '_' → logprob: -12.320003509521484
    6. '	i' → logprob: -13.695003509521484
    7. 'range' → logprob: -13.820003509521484
    8. ' in' → logprob: -13.820003509521484
    9. '   ' → logprob: -14.070003509521484
    10. '`' → logprob: -14.320003509521484

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048867467790842056
    2. 'in' → logprob: -3.0488674640655518
    3. ' ' → logprob: -8.673867225646973
    4. '	in' → logprob: -10.298867225646973
    5. '+' → logprob: -10.673867225646973
    6. '1' → logprob: -10.923867225646973
    7. '   ' → logprob: -11.673867225646973
    8. '  ' → logprob: -12.173867225646973
    9. 'import' → logprob: -12.673867225646973
    10. 'In' → logprob: -12.673867225646973

Token 79: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31343451142311096
    2. ' range' → logprob: -1.3134344816207886
    3. '(range' → logprob: -8.688434600830078
    4. '	range' → logprob: -12.938434600830078
    5. ' ' → logprob: -13.813434600830078
    6. ' xrange' → logprob: -14.938434600830078
    7. '1' → logprob: -16.063434600830078
    8. '(' → logprob: -16.313434600830078
    9. '<|end|>' → logprob: -16.313434600830078
    10. '.range' → logprob: -16.688434600830078

Token 80: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.093505099765025e-05
    2. '1' → logprob: -11.625020980834961
    3. '(
' → logprob: -12.000020980834961
    4. ' (' → logprob: -12.250020980834961
    5. '2' → logprob: -14.375020980834961
    6. '<|end|>' → logprob: -16.00002098083496
    7. ' ' → logprob: -16.25002098083496
    8. '(

' → logprob: -16.75002098083496
    9. '(i' → logprob: -17.25002098083496
    10. ')' → logprob: -17.50002098083496

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. 'MAX' → logprob: -11.500024795532227
    3. '2' → logprob: -11.625024795532227
    4. ' ' → logprob: -12.125024795532227
    5. ')' → logprob: -17.125024795532227
    6. ' MAX' → logprob: -17.250024795532227
    7. '   ' → logprob: -17.875024795532227
    8. '(MAX' → logprob: -18.625024795532227
    9. 'i' → logprob: -19.250024795532227
    10. '

' → logprob: -19.500024795532227

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019407729851081967
    2. ' ,' → logprob: -6.251940727233887
    3. '(MAX' → logprob: -12.251940727233887
    4. ',max' → logprob: -13.626940727233887
    5. 'MAX' → logprob: -13.751940727233887
    6. ',
' → logprob: -13.876940727233887
    7. ' ' → logprob: -14.001940727233887
    8. '   ' → logprob: -14.376940727233887
    9. ',len' → logprob: -14.626940727233887
    10. '[MAX' → logprob: -14.751940727233887

Token 83: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.0015056940028443933
    2. ' MAX' → logprob: -6.5015058517456055
    3. '(MAX' → logprob: -12.626505851745605
    4. '_MAX' → logprob: -17.25150489807129
    5. '   ' → logprob: -17.62650489807129
    6. '[MAX' → logprob: -17.75150489807129
    7. 'len' → logprob: -17.87650489807129
    8. ')' → logprob: -18.12650489807129
    9. '/MAX' → logprob: -18.12650489807129
    10. 'MX' → logprob: -18.25150489807129

Token 84: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.2762428822461516e-05
    2. ' +' → logprob: -10.125052452087402
    3. '+
' → logprob: -11.875052452087402
    4. ')+' → logprob: -12.625052452087402
    5. '):
' → logprob: -13.750052452087402
    6. '```' → logprob: -15.250052452087402
    7. '1' → logprob: -15.625052452087402
    8. '[' → logprob: -16.25005340576172
    9. '()+' → logprob: -16.25005340576172
    10. '+i' → logprob: -16.25005340576172

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020577389746904373
    2. '+' → logprob: -3.8955774307250977
    3. ')' → logprob: -11.270577430725098
    4. '-' → logprob: -12.520577430725098
    5. '```' → logprob: -12.895577430725098
    6. '<|end|>' → logprob: -13.020577430725098
    7. '2' → logprob: -13.145577430725098
    8. ' ' → logprob: -13.270577430725098
    9. ' +' → logprob: -13.395577430725098
    10. '+)' → logprob: -13.895577430725098

Token 86: '):
' (ID: 1883)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07686752825975418
    2. 'prefix' → logprob: -3.3268675804138184
    3. ' prefix' → logprob: -3.3268675804138184
    4. '    
' → logprob: -7.451867580413818
    5. ' ' → logprob: -7.951867580413818
    6. '(prefix' → logprob: -8.07686710357666
    7. ' 
' → logprob: -8.07686710357666
    8. '```' → logprob: -8.70186710357666
    9. '    ' → logprob: -9.45186710357666
    10. '_prefix' → logprob: -9.70186710357666

Token 88: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.45135095715522766
    2. 'prefix' (adapté à ' prefix') → logprob: -1.0763509273529053
    3. '   ' → logprob: -3.8263509273529053
    4. '```' → logprob: -8.076351165771484
    5. '
' → logprob: -8.951351165771484
    6. '_prefix' → logprob: -9.826351165771484
    7. '(prefix' → logprob: -10.451351165771484
    8. ' ' → logprob: -10.951351165771484
    9. '``' → logprob: -11.201351165771484
    10. '.prefix' → logprob: -11.451351165771484

Token 89: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008314246661029756
    2. '[' → logprob: -7.125831604003906
    3. '[I' → logprob: -10.750831604003906
    4. '\[' → logprob: -13.500831604003906
    5. '```' → logprob: -13.500831604003906
    6. '[j' → logprob: -14.125831604003906
    7. '   ' → logprob: -14.875831604003906
    8. '[
' → logprob: -15.000831604003906
    9. '[int' → logprob: -15.000831604003906
    10. '[idx' → logprob: -15.500831604003906

Token 90: ']' (ID: 60)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.10022231191396713
    2. ' prefix' → logprob: -2.35022234916687
    3. 'phi' → logprob: -11.85022258758545
    4. '(prefix' → logprob: -12.47522258758545
    5. '   ' → logprob: -12.97522258758545
    6. ' phi' → logprob: -13.47522258758545
    7. '_prefix' → logprob: -15.72522258758545
    8. 'refix' → logprob: -15.85022258758545
    9. ' ' → logprob: -15.85022258758545
    10. '-prefix' → logprob: -15.85022258758545

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.36574100604048e-06
    2. '[' → logprob: -12.500004768371582
    3. '```' → logprob: -14.875004768371582
    4. '[I' → logprob: -16.125003814697266
    5. 'i' → logprob: -16.500003814697266
    6. '[
' → logprob: -17.750003814697266
    7. '`' → logprob: -17.875003814697266
    8. '\[' → logprob: -18.000003814697266
    9. ' [' → logprob: -18.750003814697266
    10. '[j' → logprob: -18.750003814697266

Token 94: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9027791495318525e-05
    2. ' -' → logprob: -11.375019073486328
    3. ']' → logprob: -12.125019073486328
    4. '-
' → logprob: -13.625019073486328
    5. '−' → logprob: -14.875019073486328
    6. '[i' → logprob: -16.250019073486328
    7. '-i' → logprob: -16.250019073486328
    8. '[-' → logprob: -17.000019073486328
    9. '```' → logprob: -17.250019073486328
    10. ']+' → logprob: -17.375019073486328

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009301839396357536
    2. ']' → logprob: -4.759301662445068
    3. ']+' → logprob: -8.384302139282227
    4. 'i' → logprob: -8.634302139282227
    5. ' ' → logprob: -8.759302139282227
    6. '-' → logprob: -9.509302139282227
    7. '   ' → logprob: -10.759302139282227
    8. '```' → logprob: -11.259302139282227
    9. '0' → logprob: -12.759302139282227
    10. ' ]' → logprob: -13.009302139282227

Token 96: ']' (ID: 60)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' +' (ID: 659)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' phi' (ID: 40391)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: '[i' (ID: 1768)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ']

' (ID: 3144)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: 't' (ID: 83)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' int' (ID: 677)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: '(input' (ID: 10054)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: '())
' (ID: 4574)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: 'for' (ID: 1938)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' _' (ID: 1175)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' in' (ID: 306)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' range' (ID: 3352)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: '(t' (ID: 2025)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: '):
' (ID: 1883)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' n' (ID: 297)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' int' (ID: 677)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: '(input' (ID: 10054)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: '())
' (ID: 4574)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' print' (ID: 2123)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: '(prefix' (ID: 59324)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: '[n' (ID: 15433)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ']+' (ID: 15344)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ')' (ID: 8)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 122
Tokens correctement prédits (1ère position, stricte): 50
Tokens correctement prédits (1ère position, avec adaptation): 51
Tokens correctement prédits (top 10): 75
Précision stricte (1ère position): 40.98%
Précision adaptée (1ère position): 41.80%
Précision (top 10): 61.48%
================================================================================
