================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:00:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
case_number = 1

while True:
    N = int(input())
    if N == 0:
        break

    result = [[0]*N for _ in range(N)]
    cnt = 1

    for s in range(2*N -1):
        if s % 2 == 0:
            # even sum: move from bottom to top
            start = max(0, s - N + 1)
            end = min(s, N-1)
            for i in range(end, start-1, -1):
                j = s - i
                result[i][j] = cnt
                cnt += 1
        else:
            # odd sum: move from top to bottom
            start = max(0, s - N + 1)
            end = min(s, N-1)
            for i in range(start, end+1):
                j = s - i
                result[i][j] = cnt
                cnt += 1

    print(f"Case {case_number}:")
    for row in result:
        print(''.join(f"{num:3d}" for num in row))
    case_number += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'case' (ID: 9994)
  → Token d'amorce (pas de prédiction)

Token 1: '_number' (ID: 11733)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13972525298595428
    2. '"' → logprob: -2.7647252082824707
    3. '1' → logprob: -3.3897252082824707
    4. '0' → logprob: -4.139725208282471
    5. ''' → logprob: -4.764725208282471
    6. '42' → logprob: -5.764725208282471
    7. '123' → logprob: -5.764725208282471
    8. ' "' → logprob: -6.764725208282471
    9. '32' → logprob: -7.639725208282471
    10. '10' → logprob: -7.889725208282471

Token 4: '1' (ID: 16)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6713066697120667
    2. '42' → logprob: -1.2963066101074219
    3. '0' → logprob: -2.421306610107422
    4. '1' → logprob: -2.921306610107422
    5. '123' → logprob: -3.546306610107422
    6. ''' → logprob: -3.796306610107422
    7. '""' → logprob: -4.421306610107422
    8. '10' → logprob: -5.546306610107422
    9. '100' → logprob: -6.296306610107422
    10. ' ' → logprob: -6.921306610107422

Token 5: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1767652928829193
    2. '=' → logprob: -2.051765203475952
    3. '.' → logprob: -4.551765441894531
    4. '```' → logprob: -5.051765441894531
    5. '_' → logprob: -5.551765441894531
    6. ' =' → logprob: -5.551765441894531
    7. '\' → logprob: -6.426765441894531
    8. ' +' → logprob: -6.426765441894531
    9. ',' → logprob: -6.676765441894531
    10. '#' → logprob: -7.051765441894531

Token 6: 'while' (ID: 7032)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3928894996643066
    2. '```' → logprob: -1.3928894996643066
    3. '=' → logprob: -1.5178894996643066
    4. '.' → logprob: -1.8928894996643066
    5. '\' → logprob: -3.2678894996643066
    6. '\n' → logprob: -3.8928894996643066
    7. '#' → logprob: -4.017889499664307
    8. ':' → logprob: -4.392889499664307
    9. ',' → logprob: -4.517889499664307
    10. ' =' → logprob: -4.892889499664307

Token 7: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.000611763505730778
    2. '  ' → logprob: -8.000611305236816
    3. ' case' → logprob: -8.375611305236816
    4. 'case' → logprob: -11.125611305236816
    5. ' ' → logprob: -11.250611305236816
    6. ' (' → logprob: -12.500611305236816
    7. ' True' → logprob: -12.750611305236816
    8. '```' → logprob: -12.875611305236816
    9. ' ```' → logprob: -13.125611305236816
    10. ' )' → logprob: -13.250611305236816

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015419373812619597
    2. ':
' → logprob: -10.250154495239258
    3. '`:' → logprob: -10.500154495239258
    4. '':'' → logprob: -11.125154495239258
    5. '```' → logprob: -11.125154495239258
    6. ':**' → logprob: -11.250154495239258
    7. '():' → logprob: -11.250154495239258
    8. ' :' → logprob: -11.625154495239258
    9. '):' → logprob: -11.875154495239258
    10. '':' → logprob: -12.125154495239258

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008182021789252758
    2. '    ' → logprob: -5.883182048797607
    3. '    
' → logprob: -6.008182048797607
    4. '```' → logprob: -6.383182048797607
    5. '     
' → logprob: -8.75818157196045
    6. '\' → logprob: -8.88318157196045
    7. ':' → logprob: -8.88318157196045
    8. ' 
' → logprob: -9.13318157196045
    9. '<|end|>' → logprob: -9.25818157196045
    10. '    
    
' → logprob: -9.25818157196045

Token 10: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0887976735830307
    2. ' if' → logprob: -2.8387975692749023
    3. ' input' → logprob: -4.213797569274902
    4. ' print' → logprob: -6.213797569274902
    5. ' user' → logprob: -6.338797569274902
    6. ' try' → logprob: -6.713797569274902
    7. ' pass' → logprob: -6.838797569274902
    8. 'input' → logprob: -7.088797569274902
    9. '    
' → logprob: -7.213797569274902
    10. '    ' → logprob: -7.338797569274902

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4280962347984314
    2. ' =' → logprob: -1.8030962944030762
    3. ' ' → logprob: -2.428096294403076
    4. '   ' → logprob: -2.803096294403076
    5. '  ' → logprob: -4.553096294403076
    6. '_' → logprob: -5.803096294403076
    7. '.' → logprob: -6.053096294403076
    8. '-' → logprob: -6.178096294403076
    9. '%' → logprob: -6.178096294403076
    10. 'o' → logprob: -6.428096294403076

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.018071038648486137
    2. ' input' → logprob: -4.143071174621582
    3. 'int' → logprob: -6.268071174621582
    4. 'input' → logprob: -9.518071174621582
    5. ' ' → logprob: -9.768071174621582
    6. '   ' → logprob: -12.893071174621582
    7. '=int' → logprob: -13.393071174621582
    8. ' eval' → logprob: -14.143071174621582
    9. ' float' → logprob: -14.768071174621582
    10. ' ' → logprob: -14.893071174621582

Token 13: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.31327685713768005
    2. '(' → logprob: -1.3132768869400024
    3. 'input' → logprob: -12.063277244567871
    4. '(
' → logprob: -12.438277244567871
    5. ' (' → logprob: -13.313277244567871
    6. '()' → logprob: -13.813277244567871
    7. ')' → logprob: -14.813277244567871
    8. '(in' → logprob: -15.063277244567871
    9. '('' → logprob: -15.313277244567871
    10. ' input' → logprob: -15.313277244567871

Token 14: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3848724961280823
    2. '(' → logprob: -1.3848724365234375
    3. ')' → logprob: -3.2598724365234375
    4. '())' → logprob: -3.5098724365234375
    5. '(
' → logprob: -8.759872436523438
    6. '('' → logprob: -8.759872436523438
    7. '))' → logprob: -9.759872436523438
    8. '("("' → logprob: -9.759872436523438
    9. '(()' → logprob: -9.884872436523438
    10. '(""))' → logprob: -10.009872436523438

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42468640208244324
    2. '```' → logprob: -2.2996864318847656
    3. ' if' → logprob: -2.6746864318847656
    4. ')' → logprob: -3.1746864318847656
    5. '<|end|>' → logprob: -3.1746864318847656
    6. '    
' → logprob: -3.6746864318847656
    7. ':' → logprob: -4.174686431884766
    8. '    ' → logprob: -4.299686431884766
    9. ' ' → logprob: -4.674686431884766
    10. '  ' → logprob: -5.424686431884766

Token 16: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7034652233123779
    2. '   ' → logprob: -1.203465223312378
    3. '<|end|>' → logprob: -2.328465223312378
    4. ')' → logprob: -3.328465223312378
    5. 'if' (adapté à ' if') → logprob: -3.578465223312378
    6. '```' → logprob: -4.453465461730957
    7. ' ' → logprob: -4.703465461730957
    8. ':' → logprob: -5.328465461730957
    9. ':
' → logprob: -5.703465461730957
    10. '    
' → logprob: -5.703465461730957

Token 17: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.012541078962385654
    2. ' ' → logprob: -5.0125412940979
    3. ' not' → logprob: -5.5125412940979
    4. 'N' → logprob: -6.3875412940979
    5. ' ' → logprob: -9.637540817260742
    6. 'not' → logprob: -11.387540817260742
    7. '  ' → logprob: -11.512540817260742
    8. '_' → logprob: -14.012540817260742
    9. ')' → logprob: -14.387540817260742
    10. ' ' → logprob: -14.637540817260742

Token 18: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.26578930020332336
    2. ' <=' → logprob: -2.140789270401001
    3. ' <' → logprob: -3.140789270401001
    4. '==' → logprob: -3.140789270401001
    5. ' >' → logprob: -3.890789270401001
    6. '>' → logprob: -6.14078950881958
    7. '<=' → logprob: -6.14078950881958
    8. '<' → logprob: -6.64078950881958
    9. ' >=' → logprob: -6.64078950881958
    10. ')' → logprob: -7.01578950881958

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.033648353070020676
    2. '0' → logprob: -3.4086482524871826
    3. ' -' → logprob: -13.158648490905762
    4. ' ' → logprob: -15.033648490905762
    5. '-' → logprob: -15.658648490905762
    6. '  ' → logprob: -16.783647537231445
    7. ' EOF' → logprob: -17.846147537231445
    8. '```' → logprob: -17.971147537231445
    9. '<|end|>' → logprob: -17.971147537231445
    10. 'EOF' → logprob: -18.033647537231445

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0029117425438016653
    2. ' ' → logprob: -5.877911567687988
    3. '-' → logprob: -9.377911567687988
    4. '```' → logprob: -11.752911567687988
    5. ' -' → logprob: -12.252911567687988
    6. '   ' → logprob: -12.627911567687988
    7. '  ' → logprob: -13.627911567687988
    8. '``' → logprob: -13.940411567687988
    9. '1' → logprob: -14.377911567687988
    10. '`' → logprob: -14.690411567687988

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007260137936100364
    2. ':
' → logprob: -7.375726222991943
    3. '   ' → logprob: -9.625725746154785
    4. '       ' → logprob: -10.500725746154785
    5. ' :' → logprob: -12.875725746154785
    6. '):' → logprob: -13.750725746154785
    7. ':return' → logprob: -14.250725746154785
    8. '    ' → logprob: -14.875725746154785
    9. ' or' → logprob: -15.625725746154785
    10. '	break' → logprob: -15.750725746154785

Token 22: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016144849359989166
    2. ':' → logprob: -7.001614570617676
    3. '   ' → logprob: -7.376614570617676
    4. '    ' → logprob: -10.001614570617676
    5. '      ' → logprob: -11.876614570617676
    6. ' break' → logprob: -12.376614570617676
    7. '     ' → logprob: -12.501614570617676
    8. '	break' → logprob: -12.751614570617676
    9. '```' → logprob: -13.126614570617676
    10. '        ' → logprob: -13.251614570617676

Token 23: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6392093300819397
    2. '       ' → logprob: -0.7642093300819397
    3. '   ' → logprob: -5.389209270477295
    4. '	break' → logprob: -6.889209270477295
    5. 'break' (adapté à ' break') → logprob: -7.139209270477295
    6. '```' → logprob: -9.764209747314453
    7. '           ' → logprob: -10.264209747314453
    8. '    ' → logprob: -10.764209747314453
    9. ' ' → logprob: -10.764209747314453
    10. ' ' → logprob: -11.014209747314453

Token 24: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9136058688163757
    2. '   ' → logprob: -1.4136059284210205
    3. '    
' → logprob: -2.0386059284210205
    4. '```' → logprob: -2.1636059284210205
    5. ':' → logprob: -2.7886059284210205
    6. '\n' → logprob: -3.5386059284210205
    7. '  
' → logprob: -5.163605690002441
    8. ':
' → logprob: -5.538605690002441
    9. '\' → logprob: -6.288605690002441
    10. ' 
' → logprob: -6.413605690002441

Token 25: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3841543197631836
    2. '   ' → logprob: -1.7591543197631836
    3. '    
' → logprob: -2.2591543197631836
    4. '```' → logprob: -4.134154319763184
    5. '<|end|>' → logprob: -4.384154319763184
    6. '\n' → logprob: -4.759154319763184
    7. '  
' → logprob: -6.509154319763184
    8. 'print' → logprob: -6.884154319763184
    9. '<|end|>' → logprob: -7.134154319763184
    10. 'n' → logprob: -7.759154319763184

Token 26: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028314609080553055
    2. '    ' → logprob: -4.278314590454102
    3. ' ' → logprob: -5.653314590454102
    4. 'print' → logprob: -5.778314590454102
    5. 'result' (adapté à ' result') → logprob: -5.778314590454102
    6. '    
' → logprob: -6.903314590454102
    7. ' print' → logprob: -7.153314590454102
    8. ' result' → logprob: -7.903314590454102
    9. '  ' → logprob: -7.903314590454102
    10. ' for' → logprob: -8.528314590454102

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004144168924540281
    2. '=' → logprob: -5.504144191741943
    3. ' ' → logprob: -10.004143714904785
    4. '_' → logprob: -11.504143714904785
    5. ':' → logprob: -12.129143714904785
    6. ' =)' → logprob: -13.504143714904785
    7. ')' → logprob: -14.004143714904785
    8. ',' → logprob: -14.754143714904785
    9. 's' → logprob: -14.879143714904785
    10. ' +=' → logprob: -15.379143714904785

Token 28: ' [[' (ID: 9237)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.16767586767673492
    2. '[]' → logprob: -2.4176759719848633
    3. '"' → logprob: -3.4176759719848633
    4. ' ' → logprob: -4.792675971984863
    5. '0' → logprob: -5.042675971984863
    6. '""' → logprob: -5.292675971984863
    7. ' ""' → logprob: -5.417675971984863
    8. ' "' → logprob: -5.417675971984863
    9. ' N' → logprob: -6.667675971984863
    10. ''' → logprob: -7.167675971984863

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08369067311286926
    2. 'False' → logprob: -3.208690643310547
    3. ''' → logprob: -3.583690643310547
    4. ' ' → logprob: -5.708690643310547
    5. '"' → logprob: -5.708690643310547
    6. ''.' → logprob: -6.458690643310547
    7. ' False' → logprob: -7.208690643310547
    8. ' '' → logprob: -7.958690643310547
    9. '-' → logprob: -8.208690643310547
    10. '1' → logprob: -8.208690643310547

Token 30: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7329853177070618
    2. ' for' → logprob: -0.7329853177070618
    3. ',' → logprob: -3.732985258102417
    4. ']*' → logprob: -5.107985496520996
    5. 'for' → logprob: -5.482985496520996
    6. ' ]' → logprob: -5.857985496520996
    7. '   ' → logprob: -7.357985496520996
    8. '][' → logprob: -7.732985496520996
    9. ']]' → logprob: -8.232985496520996
    10. ')' → logprob: -8.357985496520996

Token 31: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04802590608596802
    2. '(N' → logprob: -3.5480258464813232
    3. '(' → logprob: -4.923026084899902
    4. '10' → logprob: -5.923026084899902
    5. ' N' → logprob: -5.923026084899902
    6. '9' → logprob: -6.673026084899902
    7. ' (' → logprob: -7.048026084899902
    8. '5' → logprob: -7.173026084899902
    9. '7' → logprob: -7.423026084899902
    10. '100' → logprob: -8.173026084899902

Token 32: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22546809911727905
    2. 'for' → logprob: -1.6004681587219238
    3. '	for' → logprob: -10.850467681884766
    4. ']' → logprob: -11.225467681884766
    5. '   ' → logprob: -11.600467681884766
    6. ')' → logprob: -11.850467681884766
    7. '```' → logprob: -13.475467681884766
    8. '<|end|>' → logprob: -14.100467681884766
    9. ' ' → logprob: -14.225467681884766
    10. '    ' → logprob: -14.225467681884766

Token 33: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06286241859197617
    2. 'range' → logprob: -3.3128623962402344
    3. '<|end|>' → logprob: -3.9378623962402344
    4. '<|end|>' → logprob: -5.562862396240234
    5. '_range' → logprob: -8.187862396240234
    6. ' xrange' → logprob: -8.187862396240234
    7. '	range' → logprob: -8.187862396240234
    8. ' ' → logprob: -8.937862396240234
    9. '(range' → logprob: -9.312862396240234
    10. '_' → logprob: -10.437862396240234

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1456451714038849
    2. 'range' → logprob: -2.3956451416015625
    3. ' range' → logprob: -3.6456451416015625
    4. 'in' → logprob: -4.0206451416015625
    5. ' ' → logprob: -8.020645141601562
    6. ' _' → logprob: -11.145645141601562
    7. '	range' → logprob: -11.895645141601562
    8. '_' → logprob: -12.020645141601562
    9. '_range' → logprob: -12.270645141601562
    10. '(range' → logprob: -12.270645141601562

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014247477054596
    2. ' range' → logprob: -1.7014247179031372
    3. ' ' → logprob: -12.826424598693848
    4. '	range' → logprob: -13.076424598693848
    5. '[' → logprob: -13.451424598693848
    6. '(range' → logprob: -13.951424598693848
    7. '   ' → logprob: -14.201424598693848
    8. ' xrange' → logprob: -14.326424598693848
    9. 'rang' → logprob: -14.451424598693848
    10. '  ' → logprob: -14.576424598693848

Token 36: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0022313790395855904
    2. '(' → logprob: -6.127231597900391
    3. 'N' → logprob: -10.75223159790039
    4. ' (' → logprob: -11.00223159790039
    5. '   ' → logprob: -13.00223159790039
    6. '(n' → logprob: -13.75223159790039
    7. '	N' → logprob: -13.87723159790039
    8. '(
' → logprob: -14.00223159790039
    9. ' N' → logprob: -14.12723159790039
    10. ')' → logprob: -14.25223159790039

Token 37: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004228091274853796
    2. ']' → logprob: -8.500422477722168
    3. ')' → logprob: -8.625422477722168
    4. '   ' → logprob: -10.500422477722168
    5. '])]' → logprob: -12.500422477722168
    6. ')])' → logprob: -13.125422477722168
    7. ' )' → logprob: -13.500422477722168
    8. '')]' → logprob: -14.000422477722168
    9. ')]
' → logprob: -14.250422477722168
    10. ')],' → logprob: -14.375422477722168

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1736462116241455
    2. '<|end|>' → logprob: -2.0486462116241455
    3. '
' → logprob: -3.9236462116241455
    4. '    
' → logprob: -5.048645973205566
    5. '<|end|>' → logprob: -7.298645973205566
    6. '  ' → logprob: -7.298645973205566
    7. ' ' → logprob: -7.423645973205566
    8. '  
' → logprob: -7.423645973205566
    9. ' for' → logprob: -7.798645973205566
    10. '```' → logprob: -8.173645973205566

Token 39: ' cnt' (ID: 27340)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.209036946296692
    2. ' for' → logprob: -1.459036946296692
    3. '   ' → logprob: -2.0840368270874023
    4. '
' → logprob: -2.2090368270874023
    5. ' 
' → logprob: -2.2090368270874023
    6. ' ' → logprob: -3.0840368270874023
    7. '    
' → logprob: -3.7090368270874023
    8. '<|end|>' → logprob: -3.7090368270874023
    9. '   
' → logprob: -4.834036827087402
    10. '  
' → logprob: -5.834036827087402

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01818377524614334
    2. '=' → logprob: -4.018183708190918
    3. ' +=' → logprob: -10.893183708190918
    4. ' ' → logprob: -11.643183708190918
    5. '  ' → logprob: -13.018183708190918
    6. '<|end|>' → logprob: -14.018183708190918
    7. '   ' → logprob: -14.143183708190918
    8. '+=' → logprob: -15.143183708190918
    9. '    ' → logprob: -15.143183708190918
    10. 'space' → logprob: -15.268183708190918

Token 41: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002570544835180044
    2. ' ' → logprob: -6.002570629119873
    3. '0' → logprob: -9.627570152282715
    4. 'N' → logprob: -11.127570152282715
    5. '   ' → logprob: -12.877570152282715
    6. '  ' → logprob: -13.065070152282715
    7. 'n' → logprob: -13.252570152282715
    8. 'num' → logprob: -13.502570152282715
    9. '2' → logprob: -14.440070152282715
    10. '=' → logprob: -14.502570152282715

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006656142068095505
    2. '0' → logprob: -7.875665664672852
    3. ' ' → logprob: -8.750665664672852
    4. 'N' → logprob: -9.125665664672852
    5. '2' → logprob: -11.625665664672852
    6. 'n' → logprob: -13.125665664672852
    7. 'num' → logprob: -13.500665664672852
    8. '(' → logprob: -14.313165664672852
    9. '4' → logprob: -14.438165664672852
    10. '10' → logprob: -14.500665664672852

Token 43: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6043315529823303
    2. '<|end|>' → logprob: -1.3543314933776855
    3. ' for' → logprob: -2.3543314933776855
    4. '    
' → logprob: -3.6043314933776855
    5. '
' → logprob: -3.7293314933776855
    6. ' ' → logprob: -3.9793314933776855
    7. 'for' → logprob: -3.9793314933776855
    8. ' 
' → logprob: -5.3543314933776855
    9. '  ' → logprob: -6.2293314933776855
    10. '    ' → logprob: -6.3543314933776855

Token 45: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10115543752908707
    2. ' for' → logprob: -2.3511555194854736
    3. '   ' → logprob: -7.4761552810668945
    4. 'i' → logprob: -7.9761552810668945
    5. ' i' → logprob: -10.851155281066895
    6. 'j' → logprob: -11.101155281066895
    7. 'r' → logprob: -13.851155281066895
    8. 'row' → logprob: -14.601155281066895
    9. 'if' → logprob: -14.726155281066895
    10. 'x' → logprob: -15.226155281066895

Token 46: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07615970075130463
    2. 'i' → logprob: -2.701159715652466
    3. ' j' → logprob: -5.451159477233887
    4. 'j' → logprob: -7.576159477233887
    5. ' r' → logprob: -7.826159477233887
    6. ' layer' → logprob: -7.951159477233887
    7. ' col' → logprob: -8.826159477233887
    8. ' row' → logprob: -8.951159477233887
    9. ' y' → logprob: -9.076159477233887
    10. ' ' → logprob: -9.826159477233887

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006202280521392822
    2. 'in' → logprob: -5.256202220916748
    3. 't' → logprob: -8.506202697753906
    4. 'e' → logprob: -9.006202697753906
    5. 'i' → logprob: -9.131202697753906
    6. ' ' → logprob: -9.381202697753906
    7. ' i' → logprob: -9.506202697753906
    8. 'x' → logprob: -9.756202697753906
    9. 'n' → logprob: -10.256202697753906
    10. '	in' → logprob: -10.256202697753906

Token 48: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029780110344290733
    2. 'range' → logprob: -3.529780149459839
    3. ' ' → logprob: -11.529780387878418
    4. '	range' → logprob: -11.904780387878418
    5. '(range' → logprob: -12.404780387878418
    6. '   ' → logprob: -13.154780387878418
    7. '  ' → logprob: -13.529780387878418
    8. '[' → logprob: -13.779780387878418
    9. ' ' → logprob: -14.029780387878418
    10. ' xrange' → logprob: -14.404780387878418

Token 49: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.1271832138299942
    2. '(' → logprob: -2.127183198928833
    3. '(n' → logprob: -8.502182960510254
    4. ' (' → logprob: -10.877182960510254
    5. '((' → logprob: -11.252182960510254
    6. '(len' → logprob: -11.877182960510254
    7. '   ' → logprob: -12.877182960510254
    8. 'N' → logprob: -13.252182960510254
    9. '(s' → logprob: -13.377182960510254
    10. ' N' → logprob: -13.877182960510254

Token 50: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5008350610733032
    2. 'N' → logprob: -1.0008350610733032
    3. '0' → logprob: -4.500834941864014
    4. '1' → logprob: -4.625834941864014
    5. '(' → logprob: -5.875834941864014
    6. ' N' → logprob: -6.625834941864014
    7. ' ' → logprob: -7.250834941864014
    8. '(N' → logprob: -8.500835418701172
    9. '   ' → logprob: -9.000835418701172
    10. '3' → logprob: -9.000835418701172

Token 51: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.4342120885848999
    2. ' *' → logprob: -1.0592120885849
    3. '*' → logprob: -5.3092122077941895
    4. ',' → logprob: -7.9342122077941895
    5. '*(' → logprob: -9.809211730957031
    6. 'N' → logprob: -9.809211730957031
    7. ' ' → logprob: -10.809211730957031
    8. '*n' → logprob: -11.184211730957031
    9. '   ' → logprob: -11.559211730957031
    10. ',N' → logprob: -11.809211730957031

Token 52: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.34901025891304016
    2. '-' → logprob: -1.2240102291107178
    3. ' ' → logprob: -8.224010467529297
    4. '):' → logprob: -8.474010467529297
    5. ' ):' → logprob: -10.224010467529297
    6. ',' → logprob: -11.099010467529297
    7. ')' → logprob: -11.724010467529297
    8. '   ' → logprob: -11.974010467529297
    9. '  ' → logprob: -12.099010467529297
    10. ' )' → logprob: -12.599010467529297

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03661065921187401
    2. ' ' → logprob: -3.4116106033325195
    3. '-' → logprob: -6.1616106033325195
    4. ' -' → logprob: -7.1616106033325195
    5. '2' → logprob: -9.78661060333252
    6. '   ' → logprob: -12.59911060333252
    7. '  ' → logprob: -12.84911060333252
    8. ')' → logprob: -12.91161060333252
    9. '```' → logprob: -13.22411060333252
    10. '3' → logprob: -13.47411060333252

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011264033615589142
    2. ' ):' → logprob: -4.511263847351074
    3. ':' → logprob: -9.011263847351074
    4. '):
' → logprob: -9.636263847351074
    5. ' :' → logprob: -10.886263847351074
    6. ')' → logprob: -12.261263847351074
    7. '):
' → logprob: -12.761263847351074
    8. ' ):
' → logprob: -14.511263847351074
    9. ' ' → logprob: -14.761263847351074
    10. ' )' → logprob: -14.886263847351074

Token 55: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004989399458281696
    2. ':
' → logprob: -8.75049877166748
    3. '       ' → logprob: -9.37549877166748
    4. ' :' → logprob: -9.50049877166748
    5. '<|end|>' → logprob: -9.87549877166748
    6. '   ' → logprob: -10.00049877166748
    7. '):' → logprob: -10.25049877166748
    8. '    ' → logprob: -11.00049877166748
    9. ' if' → logprob: -11.12549877166748
    10. ' ' → logprob: -13.00049877166748

Token 56: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.46677547693252563
    2. ' for' → logprob: -1.3417754173278809
    3. ' i' → logprob: -2.966775417327881
    4. 'if' (adapté à ' if') → logprob: -3.841775417327881
    5. 'for' → logprob: -3.966775417327881
    6. '   ' → logprob: -4.591775417327881
    7. ' row' → logprob: -6.216775417327881
    8. 'i' → logprob: -6.341775417327881
    9. '    ' → logprob: -6.341775417327881
    10. ' y' → logprob: -6.966775417327881

Token 57: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.05500708520412445
    2. 's' → logprob: -2.930006980895996
    3. ' ' → logprob: -9.555006980895996
    4. '(s' → logprob: -11.305006980895996
    5. ' (' → logprob: -11.867506980895996
    6. '(' → logprob: -12.492506980895996
    7. '<' → logprob: -12.617506980895996
    8. '	s' → logprob: -12.805006980895996
    9. '0' → logprob: -12.867506980895996
    10. 'N' → logprob: -12.930006980895996

Token 58: ' %' (ID: 1851)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.015565960668027401
    2. '<' → logprob: -4.640565872192383
    3. ' %' → logprob: -5.640565872192383
    4. '%' → logprob: -6.140565872192383
    5. ' ' → logprob: -11.015565872192383
    6. '<N' → logprob: -11.640565872192383
    7. ' <=' → logprob: -11.640565872192383
    8. '<len' → logprob: -11.765565872192383
    9. 's' → logprob: -12.140565872192383
    10. '<num' → logprob: -12.265565872192383

Token 59: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005629229708574712
    2. ' ' → logprob: -7.500563144683838
    3. '==' → logprob: -12.75056266784668
    4. '```' → logprob: -13.06306266784668
    5. '=' → logprob: -14.06306266784668
    6. '3' → logprob: -14.12556266784668
    7. 's' → logprob: -14.62556266784668
    8. ' ==' → logprob: -15.12556266784668
    9. '<' → logprob: -15.25056266784668
    10. '   ' → logprob: -15.37556266784668

Token 60: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.277553620748222e-05
    2. ' ' → logprob: -9.750062942504883
    3. '==' → logprob: -14.062562942504883
    4. 's' → logprob: -14.312562942504883
    5. '```' → logprob: -14.312562942504883
    6. '3' → logprob: -14.562562942504883
    7. '4' → logprob: -15.125062942504883
    8. '=' → logprob: -15.187562942504883
    9. '   ' → logprob: -15.750062942504883
    10. '<' → logprob: -15.937562942504883

Token 61: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.523196280002594
    2. '==' → logprob: -0.898196280002594
    3. '0' → logprob: -10.39819622039795
    4. '<|end|>' → logprob: -11.14819622039795
    5. '=' → logprob: -11.64819622039795
    6. ')==' → logprob: -11.77319622039795
    7. '==
' → logprob: -12.27319622039795
    8. ']==' → logprob: -13.52319622039795
    9. ' ' → logprob: -13.64819622039795
    10. '===' → logprob: -13.89819622039795

Token 62: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010184187442064285
    2. ' ' → logprob: -4.635184288024902
    3. '1' → logprob: -7.760184288024902
    4. '   ' → logprob: -14.197684288024902
    5. '```' → logprob: -15.322684288024902
    6. '  ' → logprob: -15.760184288024902
    7. '    ' → logprob: -16.385183334350586
    8. '۰' → logprob: -16.510183334350586
    9. '	' → logprob: -16.572683334350586
    10. 's' → logprob: -17.010183334350586

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005778160993941128
    2. '1' → logprob: -7.500577926635742
    3. ' ' → logprob: -10.625577926635742
    4. '```' → logprob: -15.750577926635742
    5. '   ' → logprob: -16.500577926635742
    6. 's' → logprob: -16.500577926635742
    7. '۰' → logprob: -17.500577926635742
    8. '  ' → logprob: -17.875577926635742
    9. '०' → logprob: -18.250577926635742
    10. '	' → logprob: -18.563077926635742

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001242772996192798
    2. ':
' → logprob: -9.500123977661133
    3. ' :' → logprob: -10.000123977661133
    4. '):' → logprob: -13.250123977661133
    5. '<|end|>' → logprob: -14.125123977661133
    6. ':

' → logprob: -15.125123977661133
    7. ',' → logprob: -15.250123977661133
    8. ' and' → logprob: -15.625123977661133
    9. ':**' → logprob: -15.625123977661133
    10. ':return' → logprob: -15.875123977661133

Token 65: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8691612482070923
    2. ':' → logprob: -1.1191612482070923
    3. '       ' → logprob: -2.3691611289978027
    4. '   ' → logprob: -2.6191611289978027
    5. 'for' → logprob: -3.4941611289978027
    6. '<|end|>' → logprob: -3.6191611289978027
    7. '    ' → logprob: -4.869161128997803
    8. ' i' → logprob: -4.994161128997803
    9. '#' → logprob: -5.869161128997803
    10. '        ' → logprob: -6.744161128997803

Token 66: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28005096316337585
    2. 'i' → logprob: -1.9050509929656982
    3. ' for' → logprob: -3.1550509929656982
    4. 'x' → logprob: -3.2800509929656982
    5. '           ' → logprob: -5.655050754547119
    6. 'j' → logprob: -5.655050754547119
    7. ' i' → logprob: -5.780050754547119
    8. 'y' → logprob: -6.655050754547119
    9. 'row' → logprob: -7.030050754547119
    10. 'r' → logprob: -7.030050754547119

Token 67: ' even' (ID: 1952)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5631347894668579
    2. ' for' → logprob: -0.9381347894668579
    3. 'i' → logprob: -4.063134670257568
    4. ' i' → logprob: -4.563134670257568
    5. 'x' → logprob: -5.813134670257568
    6. '   ' → logprob: -6.063134670257568
    7. 'j' → logprob: -6.313134670257568
    8. ' x' → logprob: -6.688134670257568
    9. ' j' → logprob: -6.813134670257568
    10. ' ' → logprob: -7.688134670257568

Token 68: ' sum' (ID: 4215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4876425266265869
    2. ' for' → logprob: -2.112642526626587
    3. 'for' → logprob: -2.112642526626587
    4. ' i' → logprob: -2.737642526626587
    5. '       ' → logprob: -3.737642526626587
    6. 'x' → logprob: -4.362642288208008
    7. '           ' → logprob: -4.362642288208008
    8. '   ' → logprob: -4.737642288208008
    9. 'row' → logprob: -4.862642288208008
    10. 'j' → logprob: -5.112642288208008

Token 69: ':' (ID: 25)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7307828664779663
    2. ' i' → logprob: -0.9807828664779663
    3. '       ' → logprob: -2.980782985687256
    4. ' for' → logprob: -3.230782985687256
    5. '           ' → logprob: -4.230782985687256
    6. 'x' → logprob: -4.355782985687256
    7. 'for' → logprob: -4.980782985687256
    8. '   ' → logprob: -5.105782985687256
    9. ' x' → logprob: -5.855782985687256
    10. 'row' → logprob: -6.230782985687256

Token 70: ' move' (ID: 5275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9215191602706909
    2. 'for' → logprob: -1.421519160270691
    3. ' for' → logprob: -1.796519160270691
    4. ' i' → logprob: -2.4215192794799805
    5. 'j' → logprob: -3.1715192794799805
    6. ' j' → logprob: -4.1715192794799805
    7. 'x' → logprob: -4.2965192794799805
    8. 'r' → logprob: -4.7965192794799805
    9. 'row' → logprob: -5.0465192794799805
    10. ' x' → logprob: -5.5465192794799805

Token 71: ' from' (ID: 591)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.5536349415779114
    2. 'up' → logprob: -1.4286348819732666
    3. 'from' → logprob: -2.1786348819732666
    4. 'i' → logprob: -3.5536348819732666
    5. 'di' → logprob: -4.178635120391846
    6. 'bottom' → logprob: -4.678635120391846
    7. 'top' → logprob: -5.803635120391846
    8. ' down' → logprob: -5.928635120391846
    9. ' up' → logprob: -6.053635120391846
    10. 'row' → logprob: -6.053635120391846

Token 72: ' bottom' (ID: 8725)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7656776309013367
    2. 'i' → logprob: -2.3906776905059814
    3. 's' → logprob: -2.5156776905059814
    4. 'max' → logprob: -2.8906776905059814
    5. ' min' → logprob: -2.8906776905059814
    6. '0' → logprob: -3.0156776905059814
    7. ' bottom' → logprob: -3.6406776905059814
    8. '(s' → logprob: -3.8906776905059814
    9. ' i' → logprob: -4.015677452087402
    10. 'row' → logprob: -4.015677452087402

Token 73: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2620694637298584
    2. 'to' → logprob: -1.7620694637298584
    3. '   ' → logprob: -4.1370697021484375
    4. 'row' → logprob: -4.6370697021484375
    5. 's' → logprob: -4.8870697021484375
    6. '<|end|>' → logprob: -5.6370697021484375
    7. ' for' → logprob: -5.8870697021484375
    8. '    ' → logprob: -6.3870697021484375
    9. '       ' → logprob: -6.5120697021484375
    10. 'n' → logprob: -6.5120697021484375

Token 74: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.01832493580877781
    2. ' top' → logprob: -4.018324851989746
    3. 'up' → logprob: -9.268324851989746
    4. '<|end|>' → logprob: -10.518324851989746
    5. '_top' → logprob: -10.893324851989746
    6. ' up' → logprob: -11.268324851989746
    7. '-top' → logprob: -12.018324851989746
    8. '	top' → logprob: -12.143324851989746
    9. '[top' → logprob: -12.643324851989746
    10. 'the' → logprob: -13.268324851989746

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5501517057418823
    2. '    ' → logprob: -1.6751517057418823
    3. '       ' → logprob: -2.300151824951172
    4. ' for' → logprob: -2.675151824951172
    5. ',' → logprob: -4.175151824951172
    6. ':' → logprob: -4.800151824951172
    7. ' i' → logprob: -5.050151824951172
    8. 'for' → logprob: -5.300151824951172
    9. '    
' → logprob: -5.425151824951172
    10. '<|end|>' → logprob: -5.675151824951172

Token 76: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17554102838039398
    2. '   ' → logprob: -3.0505409240722656
    3. '<|end|>' → logprob: -3.1755409240722656
    4. ' for' → logprob: -3.6755409240722656
    5. '    ' → logprob: -4.300540924072266
    6. '        
' → logprob: -5.300540924072266
    7. ',' → logprob: -5.550540924072266
    8. '    
' → logprob: -5.550540924072266
    9. ' ' → logprob: -5.675540924072266
    10. ' i' → logprob: -5.925540924072266

Token 77: ' start' (ID: 1604)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7367910742759705
    2. 'for' → logprob: -1.7367911338806152
    3. 'i' → logprob: -2.2367911338806152
    4. '       ' → logprob: -2.4867911338806152
    5. '   ' → logprob: -2.4867911338806152
    6. ' i' → logprob: -3.1117911338806152
    7. 'j' → logprob: -4.861791133880615
    8. 'x' → logprob: -5.111791133880615
    9. '           ' → logprob: -5.486791133880615
    10. 'row' → logprob: -5.611791133880615

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06254454702138901
    2. '_row' → logprob: -3.562544584274292
    3. '=' → logprob: -3.687544584274292
    4. '_i' → logprob: -6.062544345855713
    5. 'row' → logprob: -6.312544345855713
    6. '_x' → logprob: -6.562544345855713
    7. 'x' → logprob: -7.062544345855713
    8. 'i' → logprob: -8.562544822692871
    9. '=i' → logprob: -8.687544822692871
    10. '_r' → logprob: -9.437544822692871

Token 79: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07705483585596085
    2. ' min' → logprob: -3.452054738998413
    3. 'max' → logprob: -3.577054738998413
    4. '0' → logprob: -4.952054977416992
    5. 's' → logprob: -5.702054977416992
    6. 'N' → logprob: -5.952054977416992
    7. ' max' → logprob: -7.202054977416992
    8. ' N' → logprob: -8.202054977416992
    9. '[min' → logprob: -9.077054977416992
    10. '(min' → logprob: -9.202054977416992

Token 80: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004384174826554954
    2. '(s' → logprob: -7.750438213348389
    3. 's' → logprob: -13.000438690185547
    4. ' (' → logprob: -13.000438690185547
    5. '0' → logprob: -13.750438690185547
    6. '((' → logprob: -14.000438690185547
    7. '(N' → logprob: -15.000438690185547
    8. '(n' → logprob: -15.250438690185547
    9. '}(' → logprob: -15.875438690185547
    10. '```' → logprob: -16.000438690185547

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23462709784507751
    2. '(' → logprob: -1.6096271276474
    3. ' ' → logprob: -5.3596272468566895
    4. '(s' → logprob: -6.1096272468566895
    5. 's' → logprob: -6.3596272468566895
    6. ')' → logprob: -7.9846272468566895
    7. ' s' → logprob: -9.234626770019531
    8. ' (' → logprob: -10.984626770019531
    9. ',' → logprob: -11.484626770019531
    10. '   ' → logprob: -11.484626770019531

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01241911668330431
    2. ',s' → logprob: -4.7624192237854
    3. ' ,' → logprob: -5.6374192237854
    4. 's' → logprob: -8.637418746948242
    5. ',
' → logprob: -11.137418746948242
    6. ',n' → logprob: -11.637418746948242
    7. ' s' → logprob: -11.762418746948242
    8. ',min' → logprob: -12.887418746948242
    9. ',N' → logprob: -13.012418746948242
    10. '   ' → logprob: -13.012418746948242

Token 83: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002479581395164132
    2. ' s' → logprob: -6.002479553222656
    3. '(s' → logprob: -13.627479553222656
    4. ')s' → logprob: -14.627479553222656
    5. ')' → logprob: -15.002479553222656
    6. '   ' → logprob: -15.002479553222656
    7. '{s' → logprob: -15.252479553222656
    8. '_s' → logprob: -15.377479553222656
    9. '`s' → logprob: -15.377479553222656
    10. '	s' → logprob: -15.502479553222656

Token 84: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6810251474380493
    2. ' -' → logprob: -0.9310251474380493
    3. '-N' → logprob: -2.3060250282287598
    4. '-M' → logprob: -10.556025505065918
    5. ' ' → logprob: -10.931025505065918
    6. '-n' → logprob: -11.306025505065918
    7. '-K' → logprob: -11.431025505065918
    8. '-I' → logprob: -12.306025505065918
    9. '   ' → logprob: -12.681025505065918
    10. ')' → logprob: -12.931025505065918

Token 85: ' N' (ID: 478)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3598354756832123
    2. 'N' → logprob: -1.2348355054855347
    3. ' (' → logprob: -4.609835624694824
    4. '{' → logprob: -7.359835624694824
    5. '(' → logprob: -8.484835624694824
    6. '   ' → logprob: -8.859835624694824
    7. ' N' → logprob: -9.109835624694824
    8. ')' → logprob: -9.609835624694824
    9. '(n' → logprob: -9.984835624694824
    10. ' ' → logprob: -10.359835624694824

Token 86: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16025175154209137
    2. ' +' → logprob: -1.9102517366409302
    3. ' ' → logprob: -11.66025161743164
    4. ')' → logprob: -11.78525161743164
    5. '   ' → logprob: -12.78525161743164
    6. '1' → logprob: -12.91025161743164
    7. '  ' → logprob: -13.28525161743164
    8. '```' → logprob: -13.78525161743164
    9. '    ' → logprob: -14.41025161743164
    10. ')+' → logprob: -14.53525161743164

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.949026571121067e-05
    2. ' ' → logprob: -9.250099182128906
    3. ')' → logprob: -12.875099182128906
    4. '<|end|>' → logprob: -15.437599182128906
    5. '```' → logprob: -15.625099182128906
    6. 's' → logprob: -16.125099182128906
    7. '   ' → logprob: -16.625099182128906
    8. '0' → logprob: -16.750099182128906
    9. '  ' → logprob: -17.375099182128906
    10. '2' → logprob: -17.500099182128906

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. ')' → logprob: -14.500001907348633
    4. '<|end|>' → logprob: -18.250001907348633
    5. '```' → logprob: -18.250001907348633
    6. '0' → logprob: -18.500001907348633
    7. 's' → logprob: -19.125001907348633
    8. '2' → logprob: -19.687501907348633
    9. '   ' → logprob: -19.875001907348633
    10. '۱' → logprob: -20.062501907348633

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5255523920059204
    2. ')
' → logprob: -0.9005523920059204
    3. '   ' → logprob: -6.650552272796631
    4. ')
' → logprob: -7.900552272796631
    5. ' )
' → logprob: -7.900552272796631
    6. ' )' → logprob: -8.150552749633789
    7. '       ' → logprob: -10.525552749633789
    8. ')

' → logprob: -10.775552749633789
    9. ' ' → logprob: -10.900552749633789
    10. '           ' → logprob: -11.650552749633789

Token 90: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.1021057665348053
    2. ' end' → logprob: -2.3521058559417725
    3. '       ' → logprob: -6.852105617523193
    4. 'for' → logprob: -8.102106094360352
    5. '   ' → logprob: -8.227106094360352
    6. ' for' → logprob: -8.977106094360352
    7. 'i' → logprob: -9.852106094360352
    8. 's' → logprob: -10.477106094360352
    9. '	end' → logprob: -11.852106094360352
    10. 'stop' → logprob: -12.102106094360352

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0040801819413900375
    2. '=' → logprob: -5.504080295562744
    3. 's' → logprob: -13.504079818725586
    4. ' ' → logprob: -15.754079818725586
    5. '   ' → logprob: -16.129079818725586
    6. '=s' → logprob: -16.879079818725586
    7. '    ' → logprob: -17.254079818725586
    8. '＝' → logprob: -17.504079818725586
    9. ')' → logprob: -17.879079818725586
    10. ' =
' → logprob: -17.879079818725586

Token 93: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3302009403705597
    2. ' min' → logprob: -1.3302009105682373
    3. 's' → logprob: -4.455201148986816
    4. ' s' → logprob: -5.330201148986816
    5. '   ' → logprob: -8.580201148986816
    6. 'max' → logprob: -10.580201148986816
    7. ' ' → logprob: -10.580201148986816
    8. '	min' → logprob: -10.580201148986816
    9. '=min' → logprob: -11.455201148986816
    10. '(min' → logprob: -11.705201148986816

Token 94: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.001410708879120648
    2. '(' → logprob: -6.626410484313965
    3. '(n' → logprob: -10.376410484313965
    4. '(N' → logprob: -10.376410484313965
    5. 's' → logprob: -11.376410484313965
    6. '(
' → logprob: -12.001410484313965
    7. ' (' → logprob: -12.501410484313965
    8. '((' → logprob: -15.126410484313965
    9. ' s' → logprob: -15.251410484313965
    10. '(i' → logprob: -15.501410484313965

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002964150160551071
    2. '+' → logprob: -6.877964019775391
    3. ',N' → logprob: -6.877964019775391
    4. ' +' → logprob: -7.627964019775391
    5. ' ,' → logprob: -7.877964019775391
    6. '   ' → logprob: -11.37796401977539
    7. 's' → logprob: -11.50296401977539
    8. 'N' → logprob: -11.62796401977539
    9. ')' → logprob: -14.37796401977539
    10. ' N' → logprob: -15.12796401977539

Token 96: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5234059691429138
    2. 'N' → logprob: -0.8984059691429138
    3. ' ' → logprob: -8.398406028747559
    4. '	N' → logprob: -10.148406028747559
    5. '   ' → logprob: -11.523406028747559
    6. 's' → logprob: -13.273406028747559
    7. 'n' → logprob: -13.648406028747559
    8. '  ' → logprob: -13.773406028747559
    9. '```' → logprob: -14.023406028747559
    10. ')' → logprob: -14.335906028747559

Token 97: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931591629981995
    2. ' -' → logprob: -0.6931591629981995
    3. ')' → logprob: -11.818159103393555
    4. ' ' → logprob: -12.443159103393555
    5. '   ' → logprob: -15.193159103393555
    6. '1' → logprob: -15.318159103393555
    7. 's' → logprob: -17.318159103393555
    8. '2' → logprob: -17.818159103393555
    9. ' ' → logprob: -18.318159103393555
    10. '0' → logprob: -18.443159103393555

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016086915275081992
    2. ' ' → logprob: -8.750161170959473
    3. ')' → logprob: -13.500161170959473
    4. '   ' → logprob: -15.625161170959473
    5. '
' → logprob: -16.062660217285156
    6. '-' → logprob: -16.250160217285156
    7. 's' → logprob: -16.312660217285156
    8. '

' → logprob: -16.625160217285156
    9. '```' → logprob: -16.750160217285156
    10. '  ' → logprob: -17.000160217285156

Token 99: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12966397404670715
    2. ')
' → logprob: -2.1296639442443848
    3. ')+' → logprob: -6.504663944244385
    4. ' )' → logprob: -8.004664421081543
    5. '):
' → logprob: -8.004664421081543
    6. '+' → logprob: -8.879664421081543
    7. ')

' → logprob: -9.129664421081543
    8. ' )
' → logprob: -9.129664421081543
    9. ')
' → logprob: -9.629664421081543
    10. '   ' → logprob: -9.629664421081543

Token 100: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8047680258750916
    2. '<|end|>' → logprob: -1.8047680854797363
    3. ' for' → logprob: -2.0547680854797363
    4. '   ' → logprob: -2.3047680854797363
    5. '       ' → logprob: -2.4297680854797363
    6. '
' → logprob: -3.0547680854797363
    7. 'for' → logprob: -5.054768085479736
    8. '<|end|>' → logprob: -5.179768085479736
    9. '```' → logprob: -6.304768085479736
    10. '            
' → logprob: -6.429768085479736

Token 101: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4783571660518646
    2. '           ' → logprob: -1.603357195854187
    3. ' for' → logprob: -1.728357195854187
    4. 'i' → logprob: -6.978357315063477
    5. '   ' → logprob: -8.728357315063477
    6. ' i' → logprob: -9.478357315063477
    7. 'j' → logprob: -9.478357315063477
    8. '
' → logprob: -10.353357315063477
    9. '       ' → logprob: -10.353357315063477
    10. '	for' → logprob: -10.728357315063477

Token 102: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5073224306106567
    2. ' i' → logprob: -1.7573224306106567
    3. 'j' → logprob: -2.007322311401367
    4. ' j' → logprob: -3.007322311401367
    5. 'r' → logprob: -4.257322311401367
    6. 'x' → logprob: -4.757322311401367
    7. ' r' → logprob: -5.382322311401367
    8. 'y' → logprob: -5.757322311401367
    9. ' x' → logprob: -5.882322311401367
    10. ' y' → logprob: -6.007322311401367

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023294392973184586
    2. 'in' → logprob: -3.773294448852539
    3. '	in' → logprob: -10.898294448852539
    4. ' ' → logprob: -11.648294448852539
    5. '    ' → logprob: -12.773294448852539
    6. ' =' → logprob: -13.023294448852539
    7. 'range' → logprob: -13.148294448852539
    8. '   ' → logprob: -13.148294448852539
    9. 'n' → logprob: -13.273294448852539
    10. 'd' → logprob: -13.648294448852539

Token 104: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03807741403579712
    2. ' range' → logprob: -3.2880773544311523
    3. 'end' → logprob: -11.538077354431152
    4. '   ' → logprob: -11.788077354431152
    5. 're' → logprob: -12.038077354431152
    6. '(range' → logprob: -12.163077354431152
    7. ' ' → logprob: -13.038077354431152
    8. '	range' → logprob: -13.038077354431152
    9. 'ange' → logprob: -14.663077354431152
    10. '  ' → logprob: -14.663077354431152

Token 105: '(end' (ID: 29409)
  Prédit: '(end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.004500735085457563
    2. 'end' → logprob: -6.129500865936279
    3. '(start' → logprob: -6.254500865936279
    4. '(' → logprob: -8.379500389099121
    5. ' end' → logprob: -8.879500389099121
    6. ' (' → logprob: -11.254500389099121
    7. '=end' → logprob: -12.629500389099121
    8. 'start' → logprob: -13.004500389099121
    9. '	end' → logprob: -13.879500389099121
    10. ',end' → logprob: -14.254500389099121

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009218233171850443
    2. ' ,' → logprob: -7.125921726226807
    3. ',start' → logprob: -9.750922203063965
    4. ',-' → logprob: -10.125922203063965
    5. '   ' → logprob: -12.250922203063965
    6. ',i' → logprob: -12.625922203063965
    7. ',end' → logprob: -12.750922203063965
    8. ',int' → logprob: -13.000922203063965
    9. ' -' → logprob: -13.625922203063965
    10. '    ' → logprob: -14.375922203063965

Token 107: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0005557744298130274
    2. ' start' → logprob: -7.500555992126465
    3. '-' → logprob: -13.375555992126465
    4. '=start' → logprob: -14.875555992126465
    5. ' ' → logprob: -15.125555992126465
    6. '   ' → logprob: -15.125555992126465
    7. '(start' → logprob: -15.375555992126465
    8. '[start' → logprob: -16.37555503845215
    9. '	start' → logprob: -16.62555503845215
    10. '  ' → logprob: -16.87555503845215

Token 108: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031781906727701426
    2. ' -' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.003178596496582
    4. ' ' → logprob: -15.628178596496582
    5. ',' → logprob: -17.253177642822266
    6. '       ' → logprob: -17.503177642822266
    7. '```' → logprob: -17.753177642822266
    8. '−' → logprob: -18.003177642822266
    9. '	' → logprob: -18.503177642822266
    10. '  ' → logprob: -18.628177642822266

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.875012397766113
    4. '-' → logprob: -16.250011444091797
    5. '2' → logprob: -16.875011444091797
    6. '  ' → logprob: -17.000011444091797
    7. '```' → logprob: -17.375011444091797
    8. '
' → logprob: -18.000011444091797
    9. '    ' → logprob: -18.625011444091797
    10. ',' → logprob: -18.875011444091797

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18150633573532104
    2. '-' → logprob: -1.8065063953399658
    3. ',-' → logprob: -6.556506156921387
    4. '   ' → logprob: -8.681506156921387
    5. ' -' → logprob: -9.056506156921387
    6. '```' → logprob: -11.181506156921387
    7. '       ' → logprob: -12.181506156921387
    8. ' ,' → logprob: -12.181506156921387
    9. 'Step' → logprob: -12.306506156921387
    10. '           ' → logprob: -12.431506156921387

Token 111: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007607816252857447
    2. ' -' → logprob: -4.882607936859131
    3. '   ' → logprob: -14.757607460021973
    4. '```' → logprob: -14.882607460021973
    5. ' ' → logprob: -15.007607460021973
    6. ')' → logprob: -16.00760841369629
    7. '-)' → logprob: -16.13260841369629
    8. '  ' → logprob: -16.38260841369629
    9. '-step' → logprob: -16.63260841369629
    10. '1' → logprob: -17.00760841369629

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '-' → logprob: -16.375001907348633
    4. ')' → logprob: -16.750001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '```' → logprob: -18.125001907348633
    7. ' -' → logprob: -18.250001907348633
    8. '１' → logprob: -20.437501907348633
    9. '  ' → logprob: -20.625001907348633
    10. '2' → logprob: -20.875001907348633

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5762778520584106
    2. '):
' → logprob: -0.8262778520584106
    3. '):
' → logprob: -8.701277732849121
    4. ':' → logprob: -9.451277732849121
    5. '):

' → logprob: -10.576277732849121
    6. '       ' → logprob: -10.576277732849121
    7. ')' → logprob: -10.951277732849121
    8. '   ' → logprob: -11.076277732849121
    9. ',' → logprob: -12.951277732849121
    10. '           ' → logprob: -13.576277732849121

Token 114: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05000104010105133
    2. '<|end|>' → logprob: -3.3000011444091797
    3. ' ' → logprob: -5.55000114440918
    4. '   ' → logprob: -6.30000114440918
    5. '        
' → logprob: -6.92500114440918
    6. '```' → logprob: -7.30000114440918
    7. ' x' → logprob: -7.55000114440918
    8. ')' → logprob: -7.67500114440918
    9. ' s' → logprob: -7.80000114440918
    10. ',' → logprob: -7.92500114440918

Token 115: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6053487658500671
    2. 'j' (adapté à ' j') → logprob: -0.8553487658500671
    3. ' result' → logprob: -3.980348825454712
    4. 'result' → logprob: -4.855348587036133
    5. '       ' → logprob: -7.230348587036133
    6. '                   ' → logprob: -7.355348587036133
    7. '               ' → logprob: -7.480348587036133
    8. '   ' → logprob: -8.605348587036133
    9. '```' → logprob: -9.730348587036133
    10. '	j' → logprob: -9.855348587036133

Token 116: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759967565536499
    2. ' =' → logprob: -0.8259967565536499
    3. ')' → logprob: -11.325996398925781
    4. '=s' → logprob: -11.325996398925781
    5. ' ' → logprob: -11.700996398925781
    6. '<|end|>' → logprob: -11.950996398925781
    7. '=
' → logprob: -12.575996398925781
    8. 's' → logprob: -12.575996398925781
    9. '<|end|>' → logprob: -12.700996398925781
    10. ' s' → logprob: -13.825996398925781

Token 117: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5759893655776978
    2. ' s' → logprob: -0.8259893655776978
    3. ' ' → logprob: -10.075989723205566
    4. '(s' → logprob: -12.700989723205566
    5. '  ' → logprob: -13.325989723205566
    6. '   ' → logprob: -13.450989723205566
    7. ' ' → logprob: -14.700989723205566
    8. '	s' → logprob: -15.075989723205566
    9. '{s' → logprob: -15.075989723205566
    10. '    ' → logprob: -15.325989723205566

Token 118: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.21455645561218262
    2. '-' → logprob: -1.7145564556121826
    3. '-i' → logprob: -4.339556694030762
    4. ' ' → logprob: -12.089556694030762
    5. ' i' → logprob: -12.839556694030762
    6. '<|end|>' → logprob: -13.214556694030762
    7. 'i' → logprob: -13.339556694030762
    8. '-token' → logprob: -13.714556694030762
    9. '-j' → logprob: -15.339556694030762
    10. '-ui' → logprob: -15.464556694030762

Token 119: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003802680876106024
    2. ' i' → logprob: -7.875380039215088
    3. ' ' → logprob: -17.12537956237793
    4. '[i' → logprob: -17.25037956237793
    5. '	i' → logprob: -17.25037956237793
    6. '<|end|>' → logprob: -17.37537956237793
    7. '   ' → logprob: -17.62537956237793
    8. '*i' → logprob: -17.75037956237793
    9. '{i' → logprob: -18.75037956237793
    10. '_i' → logprob: -20.00037956237793

Token 120: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11612678319215775
    2. '       ' → logprob: -2.366126775741577
    3. 'result' → logprob: -4.616127014160156
    4. ' result' → logprob: -6.241127014160156
    5. '<|end|>' → logprob: -6.241127014160156
    6. '
' → logprob: -6.991127014160156
    7. '                
' → logprob: -8.116127014160156
    8. '```' → logprob: -9.241127014160156
    9. '        
' → logprob: -9.366127014160156
    10. '   ' → logprob: -9.366127014160156

Token 121: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45956742763519287
    2. '       ' → logprob: -1.2095674276351929
    3. 'result' → logprob: -3.2095675468444824
    4. ' result' → logprob: -4.459567546844482
    5. '
' → logprob: -4.959567546844482
    6. '                
' → logprob: -5.334567546844482
    7. '        
' → logprob: -6.084567546844482
    8. '```' → logprob: -6.709567546844482
    9. '<|end|>' → logprob: -6.709567546844482
    10. ',result' → logprob: -8.084567070007324

Token 122: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.27363014221191406
    2. 'result' (adapté à ' result') → logprob: -1.523630142211914
    3. '               ' → logprob: -4.023630142211914
    4. '       ' → logprob: -5.773630142211914
    5. '
' → logprob: -8.523630142211914
    6. '                
' → logprob: -9.898630142211914
    7. '   ' → logprob: -9.898630142211914
    8. ' ' → logprob: -10.648630142211914
    9. '	result' → logprob: -10.773630142211914
    10. '[result' → logprob: -10.773630142211914

Token 123: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.739826181321405e-05
    2. '[j' → logprob: -10.50004768371582
    3. '][' → logprob: -11.62504768371582
    4. '[I' → logprob: -12.00004768371582
    5. '[' → logprob: -12.87504768371582
    6. '```' → logprob: -14.62504768371582
    7. '[s' → logprob: -14.75004768371582
    8. ' [' → logprob: -15.00004768371582
    9. '[row' → logprob: -15.87504768371582
    10. ')[' → logprob: -15.87504768371582

Token 124: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01709851063787937
    2. '[j' → logprob: -4.142098426818848
    3. '[' → logprob: -7.517098426818848
    4. ']' → logprob: -7.767098426818848
    5. ' ][' → logprob: -10.392098426818848
    6. '[i' → logprob: -11.142098426818848
    7. '[s' → logprob: -11.142098426818848
    8. ')[' → logprob: -12.017098426818848
    9. '[js' → logprob: -12.267098426818848
    10. '>[' → logprob: -12.642098426818848

Token 125: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.584861744660884e-05
    2. ' j' → logprob: -10.000045776367188
    3. ' ' → logprob: -16.625045776367188
    4. 's' → logprob: -16.625045776367188
    5. ']' → logprob: -17.000045776367188
    6. '	j' → logprob: -17.125045776367188
    7. '   ' → logprob: -17.125045776367188
    8. '[j' → logprob: -17.250045776367188
    9. '```' → logprob: -17.750045776367188
    10. ')' → logprob: -17.875045776367188

Token 126: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04793250560760498
    2. '=' → logprob: -3.6729326248168945
    3. ' =' → logprob: -4.1729326248168945
    4. ' ]' → logprob: -5.5479326248168945
    5. ']=' → logprob: -6.1729326248168945
    6. ')' → logprob: -12.172932624816895
    7. ' ' → logprob: -12.922932624816895
    8. '   ' → logprob: -13.547932624816895
    9. ']+=' → logprob: -13.922932624816895
    10. '`]' → logprob: -14.672932624816895

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519291639328003
    2. ' =' → logprob: -1.5019291639328003
    3. ']' → logprob: -17.251928329467773
    4. ' ' → logprob: -17.251928329467773
    5. ')' → logprob: -17.376928329467773
    6. ',' → logprob: -17.626928329467773
    7. '[' → logprob: -18.126928329467773
    8. '.=' → logprob: -18.376928329467773
    9. ']=' → logprob: -18.501928329467773
    10. '=
' → logprob: -18.501928329467773

Token 128: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.002805940806865692
    2. ' cnt' → logprob: -5.877805709838867
    3. '(cnt' → logprob: -14.752805709838867
    4. '	cnt' → logprob: -15.377805709838867
    5. '   ' → logprob: -15.627805709838867
    6. 'count' → logprob: -15.877805709838867
    7. '[cnt' → logprob: -16.377805709838867
    8. 'cn' → logprob: -17.002805709838867
    9. ' ' → logprob: -17.002805709838867
    10. 'counter' → logprob: -17.252805709838867

Token 129: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019521836657077074
    2. '
' → logprob: -7.001952171325684
    3. '                
' → logprob: -7.251952171325684
    4. '           ' → logprob: -9.376952171325684
    5. '              ' → logprob: -9.876952171325684
    6. '<|end|>' → logprob: -9.876952171325684
    7. '                   ' → logprob: -10.126952171325684
    8. '                ' → logprob: -10.501952171325684
    9. '
' → logprob: -11.501952171325684
    10. ' 
' → logprob: -11.501952171325684

Token 130: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014769432134926319
    2. ' cnt' → logprob: -5.139769554138184
    3. 'cnt' → logprob: -5.514769554138184
    4. '                
' → logprob: -6.389769554138184
    5. '```' → logprob: -6.389769554138184
    6. '[cnt' → logprob: -7.514769554138184
    7. '           ' → logprob: -8.264769554138184
    8. '(cnt' → logprob: -9.014769554138184
    9. '<|end|>' → logprob: -9.014769554138184
    10. '	cnt' → logprob: -9.514769554138184

Token 131: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.006729934364557266
    2. ' cnt' → logprob: -5.006730079650879
    3. '               ' → logprob: -11.506730079650879
    4. '	cnt' → logprob: -12.881730079650879
    5. '[cnt' → logprob: -14.506730079650879
    6. '                
' → logprob: -14.506730079650879
    7. '(cnt' → logprob: -14.881730079650879
    8. 'counter' → logprob: -15.506730079650879
    9. '                   ' → logprob: -15.631730079650879
    10. '_cnt' → logprob: -16.256729125976562

Token 132: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04046446830034256
    2. ' +=' → logprob: -3.290464401245117
    3. '+' → logprob: -6.040464401245117
    4. '=' → logprob: -10.415464401245117
    5. ']+=' → logprob: -12.540464401245117
    6. '   ' → logprob: -13.665464401245117
    7. '<|end|>' → logprob: -13.665464401245117
    8. '```' → logprob: -13.790464401245117
    9. '++' → logprob: -13.915464401245117
    10. '+='' → logprob: -15.165464401245117

Token 133: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -20.125019073486328
    4. '```' → logprob: -20.125019073486328
    5. '１' → logprob: -21.375019073486328
    6. '۱' → logprob: -22.500019073486328
    7. ' ' → logprob: -22.500019073486328
    8. '
' → logprob: -22.875019073486328
    9. '  ' → logprob: -23.625019073486328
    10. '१' → logprob: -24.250019073486328

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -17.75
    4. '   ' → logprob: -20.125
    5. '１' → logprob: -20.5
    6. '
' → logprob: -20.75
    7. '۱' → logprob: -21.0
    8. '<|end|>' → logprob: -21.375
    9. '-' → logprob: -21.625
    10. '१' → logprob: -22.3125

Token 135: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6403343677520752
    2. '<|end|>' → logprob: -1.1403343677520752
    3. '   ' → logprob: -2.265334367752075
    4. '```' → logprob: -3.390334367752075
    5. 'else' → logprob: -4.640334129333496
    6. ')' → logprob: -6.515334129333496
    7. 'for' → logprob: -6.515334129333496
    8. '<|end|>' → logprob: -6.890334129333496
    9. 'elif' → logprob: -7.265334129333496
    10. ' else' → logprob: -7.890334129333496

Token 137: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.746410608291626
    2. '       ' → logprob: -0.871410608291626
    3. 'else' (adapté à ' else') → logprob: -2.246410608291626
    4. '   ' → logprob: -6.371410369873047
    5. '	else' → logprob: -9.746410369873047
    6. '    ' → logprob: -11.746410369873047
    7. ' ' → logprob: -12.746410369873047
    8. '```' → logprob: -12.746410369873047
    9. ' for' → logprob: -12.996410369873047
    10. 'elif' → logprob: -13.246410369873047

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3133676052093506
    2. ':
' → logprob: -1.3133676052093506
    3. '       ' → logprob: -9.43836784362793
    4. '           ' → logprob: -11.56336784362793
    5. ' :
' → logprob: -12.18836784362793
    6. ':

' → logprob: -12.68836784362793
    7. ' :' → logprob: -12.81336784362793
    8. ':
' → logprob: -13.06336784362793
    9. '):
' → logprob: -13.68836784362793
    10. '   ' → logprob: -13.81336784362793

Token 139: '           ' (ID: 352)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2786256670951843
    2. '           ' → logprob: -1.528625726699829
    3. '       ' → logprob: -3.903625726699829
    4. ' #' → logprob: -5.15362548828125
    5. '   ' → logprob: -8.52862548828125
    6. '```' → logprob: -9.65362548828125
    7. '        ' → logprob: -10.27862548828125
    8. '          ' → logprob: -10.65362548828125
    9. '         ' → logprob: -10.90362548828125
    10. ' ' → logprob: -11.40362548828125

Token 140: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1034936010837555
    2. 'start' → logprob: -2.4784936904907227
    3. '           ' → logprob: -4.978493690490723
    4. '       ' → logprob: -5.478493690490723
    5. ' #' → logprob: -6.478493690490723
    6. '   ' → logprob: -6.978493690490723
    7. ' start' → logprob: -7.228493690490723
    8. ' ' → logprob: -9.978493690490723
    9. '         ' → logprob: -10.603493690490723
    10. '     ' → logprob: -10.728493690490723

Token 141: ' odd' (ID: 14210)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03405090048909187
    2. 'start' → logprob: -4.409050941467285
    3. ' #' → logprob: -4.534050941467285
    4. 'odd' → logprob: -4.909050941467285
    5. ' start' → logprob: -6.034050941467285
    6. ' odd' → logprob: -8.409050941467285
    7. '   ' → logprob: -8.659050941467285
    8. ' ' → logprob: -8.784050941467285
    9. '           ' → logprob: -9.534050941467285
    10. 'for' → logprob: -10.034050941467285

Token 142: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4746365547180176
    2. ' sum' → logprob: -0.9746365547180176
    3. '_sum' → logprob: -8.59963607788086
    4. ' j' → logprob: -9.34963607788086
    5. ':' → logprob: -9.59963607788086
    6. 's' → logprob: -9.59963607788086
    7. ' s' → logprob: -9.84963607788086
    8. ' start' → logprob: -10.47463607788086
    9. 'start' → logprob: -10.59963607788086
    10. 'j' → logprob: -11.34963607788086

Token 143: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00832248106598854
    2. '           ' → logprob: -5.383322715759277
    3. ' =' → logprob: -6.258322715759277
    4. ':start' → logprob: -7.508322715759277
    5. '=' → logprob: -8.008322715759277
    6. ' :' → logprob: -8.258322715759277
    7. ':
' → logprob: -8.633322715759277
    8. 'start' → logprob: -8.883322715759277
    9. '   ' → logprob: -9.008322715759277
    10. '       ' → logprob: -9.383322715759277

Token 144: ' move' (ID: 5275)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3421286642551422
    2. 'for' → logprob: -1.8421286344528198
    3. ' start' → logprob: -2.4671287536621094
    4. ' for' → logprob: -3.7171287536621094
    5. '           ' → logprob: -3.8421287536621094
    6. '   ' → logprob: -8.84212875366211
    7. ' ' → logprob: -8.96712875366211
    8. '       ' → logprob: -9.46712875366211
    9. '               ' → logprob: -9.71712875366211
    10. '            ' → logprob: -9.84212875366211

Token 145: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5759656429290771
    2. ' from' → logprob: -0.8259656429290771
    3. '	from' → logprob: -11.575965881347656
    4. '   ' → logprob: -12.075965881347656
    5. '(from' → logprob: -13.075965881347656
    6. ' ' → logprob: -13.200965881347656
    7. '(' → logprob: -13.325965881347656
    8. '           ' → logprob: -13.825965881347656
    9. '.from' → logprob: -14.200965881347656
    10. ' for' → logprob: -14.575965881347656

Token 146: ' top' (ID: 2344)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022803956642746925
    2. 'top' → logprob: -4.022803783416748
    3. 'start' → logprob: -5.772803783416748
    4. 'bottom' → logprob: -7.397803783416748
    5. ' top' → logprob: -7.772803783416748
    6. ' ' → logprob: -7.772803783416748
    7. ' bottom' → logprob: -10.772804260253906
    8. ' start' → logprob: -11.147804260253906
    9. 'range' → logprob: -11.647804260253906
    10. 'left' → logprob: -12.022804260253906

Token 147: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.49827003479003906
    2. ' to' → logprob: -0.9982700347900391
    3. '0' → logprob: -3.873270034790039
    4. '   ' → logprob: -6.123270034790039
    5. '       ' → logprob: -7.873270034790039
    6. '           ' → logprob: -8.123270034790039
    7. ' ' → logprob: -9.498270034790039
    8. ' for' → logprob: -10.123270034790039
    9. 'for' → logprob: -10.123270034790039
    10. ',' → logprob: -10.998270034790039

Token 148: ' bottom' (ID: 8725)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5873258113861084
    2. '0' → logprob: -0.8373258113861084
    3. ' start' → logprob: -4.5873260498046875
    4. ' ' → logprob: -7.3373260498046875
    5. 's' → logprob: -8.337326049804688
    6. 'bottom' → logprob: -9.212326049804688
    7. ' s' → logprob: -9.837326049804688
    8. 'min' → logprob: -10.962326049804688
    9. 'down' → logprob: -11.212326049804688
    10. 'max' → logprob: -11.337326049804688

Token 149: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09338859468698502
    2. 'start' → logprob: -2.468388557434082
    3. ' start' → logprob: -5.468388557434082
    4. '(start' → logprob: -10.468388557434082
    5. '       ' → logprob: -10.593388557434082
    6. 'for' → logprob: -10.593388557434082
    7. '
' → logprob: -10.718388557434082
    8. '            ' → logprob: -10.968388557434082
    9. '               ' → logprob: -11.218388557434082
    10. ' for' → logprob: -11.343388557434082

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005220009479671717
    2. ' for' → logprob: -6.00521993637085
    3. 'start' → logprob: -6.63021993637085
    4. 'for' → logprob: -6.88021993637085
    5. ' start' → logprob: -8.130220413208008
    6. '       ' → logprob: -10.630220413208008
    7. '   ' → logprob: -10.880220413208008
    8. '		' → logprob: -11.130220413208008
    9. '          ' → logprob: -11.880220413208008
    10. '            ' → logprob: -12.130220413208008

Token 151: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.010045044124126434
    2. ' start' → logprob: -4.760045051574707
    3. '           ' → logprob: -7.135045051574707
    4. 'for' → logprob: -7.760045051574707
    5. '   ' → logprob: -9.385045051574707
    6. '       ' → logprob: -9.385045051574707
    7. ' for' → logprob: -11.385045051574707
    8. 'end' → logprob: -11.760045051574707
    9. '	start' → logprob: -12.510045051574707
    10. ' ' → logprob: -12.635045051574707

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519320547580719
    2. '=' → logprob: -1.5019320249557495
    3. '   ' → logprob: -13.251932144165039
    4. ' ' → logprob: -14.626932144165039
    5. '=start' → logprob: -14.876932144165039
    6. '```' → logprob: -16.12693214416504
    7. '    ' → logprob: -16.25193214416504
    8. '	' → logprob: -17.12693214416504
    9. ')' → logprob: -17.50193214416504
    10. ',' → logprob: -17.50193214416504

Token 153: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04874451458454132
    2. ' max' → logprob: -3.2987444400787354
    3. '0' → logprob: -4.5487446784973145
    4. ' ' → logprob: -9.923744201660156
    5. 'min' → logprob: -11.173744201660156
    6. '	max' → logprob: -13.673744201660156
    7. '(max' → logprob: -14.173744201660156
    8. '   ' → logprob: -14.673744201660156
    9. ' min' → logprob: -16.173744201660156
    10. '=max' → logprob: -16.923744201660156

Token 154: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002655079588294029
    2. '0' → logprob: -8.250265121459961
    3. ' (' → logprob: -13.000265121459961
    4. '(
' → logprob: -13.500265121459961
    5. 'def' → logprob: -15.875265121459961
    6. '<|end|>' → logprob: -16.12526512145996
    7. ' ' → logprob: -17.25026512145996
    8. '```' → logprob: -17.75026512145996
    9. '()' → logprob: -17.75026512145996
    10. ',' → logprob: -18.12526512145996

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005054924986325204
    2. '(' → logprob: -7.625505447387695
    3. ' ' → logprob: -11.000505447387695
    4. 's' → logprob: -15.375505447387695
    5. '   ' → logprob: -16.000505447387695
    6. '[' → logprob: -16.500505447387695
    7. '```' → logprob: -17.125505447387695
    8. ',' → logprob: -17.250505447387695
    9. ' (' → logprob: -17.375505447387695
    10. '
' → logprob: -18.000505447387695

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001455951132811606
    2. '(' → logprob: -7.376455783843994
    3. ',s' → logprob: -7.376455783843994
    4. '<|end|>' → logprob: -9.876456260681152
    5. '(s' → logprob: -10.001456260681152
    6. '0' → logprob: -10.251456260681152
    7. ' ,' → logprob: -10.376456260681152
    8. 's' → logprob: -11.126456260681152
    9. ',
' → logprob: -11.876456260681152
    10. ' ' → logprob: -12.501456260681152

Token 157: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006349971517920494
    2. ' s' → logprob: -7.375635147094727
    3. '0' → logprob: -12.625635147094727
    4. '(s' → logprob: -12.750635147094727
    5. '   ' → logprob: -13.750635147094727
    6. ' ' → logprob: -15.750635147094727
    7. ',' → logprob: -15.875635147094727
    8. ')' → logprob: -16.000635147094727
    9. '{s' → logprob: -16.000635147094727
    10. '_s' → logprob: -16.500635147094727

Token 158: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4288950562477112
    2. ' -' → logprob: -1.0538949966430664
    3. '   ' → logprob: -9.803894996643066
    4. ')' → logprob: -9.803894996643066
    5. '       ' → logprob: -10.678894996643066
    6. ' ' → logprob: -11.303894996643066
    7. ',' → logprob: -11.678894996643066
    8. 's' → logprob: -12.053894996643066
    9. '        ' → logprob: -12.053894996643066
    10. '           ' → logprob: -12.178894996643066

Token 159: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008888138458132744
    2. '(N' → logprob: -4.758888244628906
    3. 'i' → logprob: -9.383888244628906
    4. 's' → logprob: -9.633888244628906
    5. ' N' → logprob: -9.633888244628906
    6. '   ' → logprob: -10.883888244628906
    7. ' (' → logprob: -11.008888244628906
    8. '(s' → logprob: -11.508888244628906
    9. '(' → logprob: -12.008888244628906
    10. '(i' → logprob: -12.633888244628906

Token 160: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026304252445697784
    2. ' +' → logprob: -3.651304244995117
    3. '```' → logprob: -13.901304244995117
    4. '   ' → logprob: -14.276304244995117
    5. '
' → logprob: -14.901304244995117
    6. '-' → logprob: -14.901304244995117
    7. '1' → logprob: -15.026304244995117
    8. ' ' → logprob: -15.151304244995117
    9. ')' → logprob: -15.526304244995117
    10. '       ' → logprob: -16.026304244995117

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012797261297237128
    2. ' ' → logprob: -9.000127792358398
    3. '0' → logprob: -13.250127792358398
    4. '   ' → logprob: -14.125127792358398
    5. 's' → logprob: -14.250127792358398
    6. '```' → logprob: -14.875127792358398
    7. '[' → logprob: -16.0001277923584
    8. '
' → logprob: -16.0001277923584
    9. '<|end|>' → logprob: -16.3126277923584
    10. ')' → logprob: -16.3751277923584

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.750009536743164
    3. '```' → logprob: -14.875009536743164
    4. '   ' → logprob: -15.000009536743164
    5. ')' → logprob: -15.250009536743164
    6. '<|end|>' → logprob: -15.812509536743164
    7. '0' → logprob: -15.937509536743164
    8. '
' → logprob: -17.250009536743164
    9. 's' → logprob: -17.312509536743164
    10. '-' → logprob: -17.500009536743164

Token 163: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.013172933831810951
    2. ')' → logprob: -4.3881731033325195
    3. '           ' → logprob: -7.5131731033325195
    4. '   ' → logprob: -9.26317310333252
    5. ')
' → logprob: -11.38817310333252
    6. '       ' → logprob: -12.88817310333252
    7. 'end' → logprob: -13.01317310333252
    8. ' )
' → logprob: -13.38817310333252
    9. '```' → logprob: -13.63817310333252
    10. ')

' → logprob: -14.13817310333252

Token 164: '           ' (ID: 352)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.005385180003941059
    2. '           ' → logprob: -5.630385398864746
    3. ' end' → logprob: -6.380385398864746
    4. '   ' → logprob: -10.130385398864746
    5. '       ' → logprob: -10.505385398864746
    6. 'for' → logprob: -11.630385398864746
    7. '	end' → logprob: -12.505385398864746
    8. '```' → logprob: -12.505385398864746
    9. '(end' → logprob: -13.755385398864746
    10. ',end' → logprob: -14.005385398864746

Token 165: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.003205519402399659
    2. ' end' → logprob: -5.753205299377441
    3. '           ' → logprob: -11.378205299377441
    4. '       ' → logprob: -11.378205299377441
    5. '   ' → logprob: -13.253205299377441
    6. 'for' → logprob: -13.503205299377441
    7. '	end' → logprob: -14.003205299377441
    8. '```' → logprob: -15.378205299377441
    9. '=end' → logprob: -15.878205299377441
    10. '(end' → logprob: -15.878205299377441

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020732134580612
    2. '=' → logprob: -2.3502073287963867
    3. '   ' → logprob: -15.225207328796387
    4. ')' → logprob: -15.600207328796387
    5. 'for' → logprob: -16.85020637512207
    6. ' ' → logprob: -17.10020637512207
    7. '=
' → logprob: -17.10020637512207
    8. '=s' → logprob: -17.22520637512207
    9. '=min' → logprob: -17.85020637512207
    10. ' for' → logprob: -18.35020637512207

Token 167: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.016138650476932526
    2. ' min' → logprob: -4.141138553619385
    3. 's' → logprob: -9.266139030456543
    4. 'max' → logprob: -12.516139030456543
    5. ' s' → logprob: -12.641139030456543
    6. '(min' → logprob: -13.141139030456543
    7. '   ' → logprob: -14.891139030456543
    8. '[min' → logprob: -16.391138076782227
    9. '	min' → logprob: -16.391138076782227
    10. '           ' → logprob: -16.641138076782227

Token 168: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.7968066206085496e-05
    2. 's' → logprob: -10.750027656555176
    3. '(' → logprob: -12.000027656555176
    4. ' (' → logprob: -15.250027656555176
    5. 'N' → logprob: -16.875028610229492
    6. '(
' → logprob: -17.000028610229492
    7. ')' → logprob: -18.375028610229492
    8. 'n' → logprob: -19.250028610229492
    9. '```' → logprob: -19.250028610229492
    10. '   ' → logprob: -19.375028610229492

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1148211732506752
    2. '+' → logprob: -2.864821195602417
    3. ' +' → logprob: -3.614821195602417
    4. ')' → logprob: -3.864821195602417
    5. ' ,' → logprob: -6.364820957183838
    6. ')+' → logprob: -6.614820957183838
    7. ',N' → logprob: -8.989821434020996
    8. '(' → logprob: -9.614821434020996
    9. '   ' → logprob: -9.739821434020996
    10. '<|end|>' → logprob: -9.739821434020996

Token 170: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012537907809019089
    2. ' N' → logprob: -4.387537956237793
    3. 's' → logprob: -11.262537956237793
    4. '   ' → logprob: -11.637537956237793
    5. ' ' → logprob: -12.387537956237793
    6. ' s' → logprob: -13.887537956237793
    7. '	N' → logprob: -14.762537956237793
    8. '  ' → logprob: -15.137537956237793
    9. '    ' → logprob: -15.762537956237793
    10. 'i' → logprob: -15.887537956237793

Token 171: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0030749214347451925
    2. ')' → logprob: -6.378075122833252
    3. ' -' → logprob: -6.628075122833252
    4. '[' → logprob: -11.253074645996094
    5. ')
' → logprob: -11.878074645996094
    6. '+' → logprob: -12.003074645996094
    7. '```' → logprob: -12.128074645996094
    8. ')-' → logprob: -12.378074645996094
    9. '   ' → logprob: -12.753074645996094
    10. '1' → logprob: -12.878074645996094

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011689399980241433
    2. '-' → logprob: -9.125117301940918
    3. ' ' → logprob: -11.875117301940918
    4. '   ' → logprob: -15.000117301940918
    5. ' -' → logprob: -15.250117301940918
    6. '```' → logprob: -15.500117301940918
    7. '<|end|>' → logprob: -16.5626163482666
    8. '
' → logprob: -16.8126163482666
    9. ')' → logprob: -16.9376163482666
    10. '2' → logprob: -17.5626163482666

Token 173: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6001746654510498
    2. ')' → logprob: -1.1001746654510498
    3. '   ' → logprob: -2.22517466545105
    4. 'for' → logprob: -5.600174903869629
    5. '):
' → logprob: -5.725174903869629
    6. ' for' → logprob: -6.225174903869629
    7. '           ' → logprob: -6.850174903869629
    8. ':
' → logprob: -8.975174903869629
    9. '):' → logprob: -9.475174903869629
    10. '```' → logprob: -9.725174903869629

Token 174: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09158127009868622
    2. '   ' → logprob: -2.716581344604492
    3. ' for' → logprob: -4.341581344604492
    4. '           ' → logprob: -5.341581344604492
    5. '```' → logprob: -5.841581344604492
    6. '       ' → logprob: -7.466581344604492
    7. '	for' → logprob: -9.091581344604492
    8. '``' → logprob: -11.966581344604492
    9. ' ' → logprob: -12.341581344604492
    10. '               ' → logprob: -13.216581344604492

Token 175: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005608303938060999
    2. ' for' → logprob: -5.255608081817627
    3. '           ' → logprob: -8.505608558654785
    4. '   ' → logprob: -9.255608558654785
    5. '```' → logprob: -10.005608558654785
    6. '	for' → logprob: -10.630608558654785
    7. '       ' → logprob: -12.380608558654785
    8. '
' → logprob: -13.255608558654785
    9. '            
' → logprob: -15.255608558654785
    10. ' ' → logprob: -15.505608558654785

Token 176: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0052671958692371845
    2. ' i' → logprob: -5.255267143249512
    3. 'j' → logprob: -10.380267143249512
    4. '   ' → logprob: -13.630267143249512
    5. '	i' → logprob: -14.505267143249512
    6. ' j' → logprob: -15.255267143249512
    7. ' ' → logprob: -15.755267143249512
    8. '```' → logprob: -16.255268096923828
    9. ' in' → logprob: -16.630268096923828
    10. '  ' → logprob: -16.880268096923828

Token 177: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01816023886203766
    2. 'in' → logprob: -4.018160343170166
    3. 'range' → logprob: -12.143159866333008
    4. '   ' → logprob: -13.518159866333008
    5. ' range' → logprob: -13.893159866333008
    6. 'from' → logprob: -14.393159866333008
    7. '[start' → logprob: -14.768159866333008
    8. ' ' → logprob: -14.893159866333008
    9. '       ' → logprob: -15.143159866333008
    10. 'import' → logprob: -15.393159866333008

Token 178: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07917739450931549
    2. ' range' → logprob: -2.5791773796081543
    3. 'start' → logprob: -8.204177856445312
    4. ' start' → logprob: -11.579177856445312
    5. '(range' → logprob: -12.454177856445312
    6. '(start' → logprob: -15.329177856445312
    7. '   ' → logprob: -15.704177856445312
    8. ' ' → logprob: -15.704177856445312
    9. '	range' → logprob: -16.329177856445312
    10. ' in' → logprob: -16.329177856445312

Token 179: '(start' (ID: 20008)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.18329639732837677
    2. '(start' → logprob: -1.9332964420318604
    3. 'range' → logprob: -3.8082964420318604
    4. ' start' → logprob: -8.058296203613281
    5. '[start' → logprob: -8.433296203613281
    6. ' range' → logprob: -10.058296203613281
    7. '   ' → logprob: -10.808296203613281
    8. '(range' → logprob: -11.308296203613281
    9. '=start' → logprob: -12.183296203613281
    10. '(' → logprob: -12.808296203613281

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0056257350370287895
    2. ' ,' → logprob: -5.8806257247924805
    3. ',end' → logprob: -5.8806257247924805
    4. '(end' → logprob: -11.63062572479248
    5. 'end' → logprob: -12.38062572479248
    6. ' in' → logprob: -13.00562572479248
    7. '=end' → logprob: -13.00562572479248
    8. ':end' → logprob: -13.50562572479248
    9. '       ' → logprob: -14.38062572479248
    10. ',
' → logprob: -14.50562572479248

Token 181: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0003357006062287837
    2. ' end' → logprob: -8.000335693359375
    3. '(end' → logprob: -15.875335693359375
    4. '   ' → logprob: -16.750335693359375
    5. '=end' → logprob: -16.750335693359375
    6. '[end' → logprob: -18.875335693359375
    7. '	end' → logprob: -19.000335693359375
    8. ' ' → logprob: -19.875335693359375
    9. 'End' → logprob: -20.250335693359375
    10. 'END' → logprob: -20.375335693359375

Token 182: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023246178403496742
    2. ' +' → logprob: -3.7732462882995605
    3. '   ' → logprob: -15.398245811462402
    4. ')+' → logprob: -15.898245811462402
    5. '+
' → logprob: -16.52324676513672
    6. '1' → logprob: -16.52324676513672
    7. ')' → logprob: -16.89824676513672
    8. '()+' → logprob: -17.02324676513672
    9. '+)' → logprob: -17.02324676513672
    10. ',' → logprob: -17.14824676513672

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.125018119812012
    3. '   ' → logprob: -13.750018119812012
    4. '```' → logprob: -13.750018119812012
    5. '):
' → logprob: -15.000018119812012
    6. ')' → logprob: -15.125018119812012
    7. '+' → logprob: -17.500017166137695
    8. ',' → logprob: -17.687517166137695
    9. '2' → logprob: -18.187517166137695
    10. '):' → logprob: -18.312517166137695

Token 184: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8089830279350281
    2. ':' → logprob: -1.4339830875396729
    3. '):' → logprob: -1.6839830875396729
    4. '               ' → logprob: -2.558983087539673
    5. ':
' → logprob: -3.058983087539673
    6. '       ' → logprob: -5.558982849121094
    7. '():
' → logprob: -6.933982849121094
    8. '           ' → logprob: -7.683982849121094
    9. '   ' → logprob: -7.808982849121094
    10. '```' → logprob: -8.183982849121094

Token 185: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1606311798095703
    2. 'j' → logprob: -1.9106311798095703
    3. '           ' → logprob: -8.78563117980957
    4. '   ' → logprob: -9.28563117980957
    5. '       ' → logprob: -9.53563117980957
    6. ' j' → logprob: -9.53563117980957
    7. '```' → logprob: -12.16063117980957
    8. '	j' → logprob: -12.53563117980957
    9. '              ' → logprob: -13.03563117980957
    10. '		       ' → logprob: -13.66063117980957

Token 186: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.0007524513057433069
    2. ' j' → logprob: -7.3757524490356445
    3. '               ' → logprob: -9.125752449035645
    4. '   ' → logprob: -11.750752449035645
    5. '                   ' → logprob: -12.875752449035645
    6. '```' → logprob: -12.875752449035645
    7. '           ' → logprob: -13.250752449035645
    8. '	j' → logprob: -13.625752449035645
    9. '       ' → logprob: -14.375752449035645
    10. ' ' → logprob: -15.625752449035645

Token 187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326398253440857
    2. ' =' → logprob: -1.313264012336731
    3. '=s' → logprob: -13.563263893127441
    4. '=
' → logprob: -14.563263893127441
    5. 's' → logprob: -15.813263893127441
    6. '＝' → logprob: -16.188264846801758
    7. ')' → logprob: -16.563264846801758
    8. ' =
' → logprob: -17.188264846801758
    9. '<|end|>' → logprob: -17.563264846801758
    10. '=i' → logprob: -17.938264846801758

Token 188: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06196970492601395
    2. ' s' → logprob: -2.811969757080078
    3. '               ' → logprob: -13.811969757080078
    4. '`s' → logprob: -14.936969757080078
    5. ' ' → logprob: -16.061969757080078
    6. '   ' → logprob: -16.186969757080078
    7. '```' → logprob: -16.311969757080078
    8. '           ' → logprob: -16.686969757080078
    9. '(s' → logprob: -16.686969757080078
    10. '<|end|>' → logprob: -16.811969757080078

Token 189: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1276380717754364
    2. '-' → logprob: -2.127638101577759
    3. '-i' → logprob: -7.25263786315918
    4. '<|end|>' → logprob: -14.25263786315918
    5. 'i' → logprob: -15.25263786315918
    6. ' i' → logprob: -16.00263786315918
    7. '[i' → logprob: -16.12763786315918
    8. '#' → logprob: -16.50263786315918
    9. ' ' → logprob: -17.25263786315918
    10. '=' → logprob: -17.37763786315918

Token 190: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.5577775128767826e-06
    2. ' i' → logprob: -12.125005722045898
    3. '<|end|>' → logprob: -18.7500057220459
    4. '	i' → logprob: -18.8750057220459
    5. '```' → logprob: -18.8750057220459
    6. '[i' → logprob: -20.2500057220459
    7. '   ' → logprob: -20.3750057220459
    8. '*i' → logprob: -21.2500057220459
    9. ')i' → logprob: -22.2500057220459
    10. 'I' → logprob: -22.3750057220459

Token 191: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11715440452098846
    2. 'result' → logprob: -2.242154359817505
    3. ' result' → logprob: -5.492154598236084
    4. '       ' → logprob: -9.867154121398926
    5. '           ' → logprob: -9.992154121398926
    6. '
' → logprob: -9.992154121398926
    7. '```' → logprob: -11.367154121398926
    8. '[result' → logprob: -11.367154121398926
    9. '<|end|>' → logprob: -11.992154121398926
    10. '                
' → logprob: -12.117154121398926

Token 192: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4755120575428009
    2. 'result' → logprob: -0.9755120277404785
    3. ' result' → logprob: -6.8505120277404785
    4. '       ' → logprob: -8.100512504577637
    5. '           ' → logprob: -10.225512504577637
    6. '              ' → logprob: -11.475512504577637
    7. '```' → logprob: -12.100512504577637
    8. '   ' → logprob: -12.350512504577637
    9. '=result' → logprob: -12.850512504577637
    10. '	result' → logprob: -12.850512504577637

Token 193: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.035137273371219635
    2. ' result' → logprob: -3.410137176513672
    3. '               ' → logprob: -6.535137176513672
    4. '                   ' → logprob: -11.035137176513672
    5. '           ' → logprob: -11.785137176513672
    6. '   ' → logprob: -12.535137176513672
    7. '       ' → logprob: -12.535137176513672
    8. '```' → logprob: -13.660137176513672
    9. '	result' → logprob: -13.660137176513672
    10. '                ' → logprob: -13.785137176513672

Token 194: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.511406809295295e-06
    2. '[j' → logprob: -12.625006675720215
    3. '][' → logprob: -13.625006675720215
    4. '[' → logprob: -14.000006675720215
    5. '[I' → logprob: -14.750006675720215
    6. '```' → logprob: -15.125006675720215
    7. ')[' → logprob: -16.6250057220459
    8. ' [' → logprob: -16.7500057220459
    9. '[int' → logprob: -17.0000057220459
    10. 'i' → logprob: -17.3750057220459

Token 195: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14471708238124847
    2. '[j' → logprob: -2.01971697807312
    3. ']' → logprob: -6.769717216491699
    4. '[' → logprob: -7.269717216491699
    5. '[i' → logprob: -9.2697172164917
    6. ' ][' → logprob: -10.5197172164917
    7. '].' → logprob: -10.6447172164917
    8. ')[' → logprob: -11.8947172164917
    9. '```' → logprob: -11.8947172164917
    10. '}[' → logprob: -12.6447172164917

Token 196: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.030042512342333794
    2. 's' → logprob: -3.5300424098968506
    3. 'i' → logprob: -9.03004264831543
    4. '<|end|>' → logprob: -9.53004264831543
    5. ' j' → logprob: -10.15504264831543
    6. ')' → logprob: -10.15504264831543
    7. ']' → logprob: -11.65504264831543
    8. '```' → logprob: -12.78004264831543
    9. '0' → logprob: -13.28004264831543
    10. ' s' → logprob: -13.78004264831543

Token 197: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24276579916477203
    2. ']' → logprob: -2.1177659034729004
    3. ' =' → logprob: -2.3677659034729004
    4. ']=' → logprob: -6.4927659034729
    5. ' ]' → logprob: -10.742765426635742
    6. ')' → logprob: -11.867765426635742
    7. '               ' → logprob: -12.367765426635742
    8. '<|end|>' → logprob: -12.992765426635742
    9. '[' → logprob: -13.242765426635742
    10. '           ' → logprob: -13.617765426635742

Token 198: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011049470864236355
    2. ' =' → logprob: -4.511049270629883
    3. ']' → logprob: -13.761049270629883
    4. ']=' → logprob: -14.511049270629883
    5. '[' → logprob: -16.886049270629883
    6. '   ' → logprob: -17.511049270629883
    7. '```' → logprob: -17.511049270629883
    8. '=
' → logprob: -18.011049270629883
    9. '<|end|>' → logprob: -18.136049270629883
    10. ')' → logprob: -18.636049270629883

Token 199: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.07890642434358597
    2. ' cnt' → logprob: -2.578906536102295
    3. '[cnt' → logprob: -11.828906059265137
    4. '(cnt' → logprob: -11.953906059265137
    5. '	cnt' → logprob: -12.828906059265137
    6. 'count' → logprob: -16.328907012939453
    7. '_cnt' → logprob: -16.703907012939453
    8. 'ct' → logprob: -16.703907012939453
    9. 'counter' → logprob: -16.953907012939453
    10. '```' → logprob: -17.078907012939453

Token 200: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03922661393880844
    2. 'cnt' → logprob: -3.414226531982422
    3. ' cnt' → logprob: -5.289226531982422
    4. '	cnt' → logprob: -8.414226531982422
    5. '[cnt' → logprob: -8.539226531982422
    6. '(cnt' → logprob: -9.664226531982422
    7. '           ' → logprob: -10.914226531982422
    8. '```' → logprob: -12.539226531982422
    9. '                   ' → logprob: -12.914226531982422
    10. '                
' → logprob: -12.914226531982422

Token 201: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10367073118686676
    2. 'cnt' → logprob: -2.353670835494995
    3. ' cnt' → logprob: -5.728670597076416
    4. '	cnt' → logprob: -9.603671073913574
    5. '           ' → logprob: -9.978671073913574
    6. '[cnt' → logprob: -10.478671073913574
    7. '       ' → logprob: -10.728671073913574
    8. '```' → logprob: -10.728671073913574
    9. '(cnt' → logprob: -11.478671073913574
    10. '              ' → logprob: -12.603671073913574

Token 202: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.011056549847126007
    2. ' cnt' → logprob: -4.511056423187256
    3. '               ' → logprob: -11.886056900024414
    4. '	cnt' → logprob: -13.511056900024414
    5. '(cnt' → logprob: -15.761056900024414
    6. '[cnt' → logprob: -16.511056900024414
    7. '_cnt' → logprob: -16.511056900024414
    8. '           ' → logprob: -16.636056900024414
    9. '                   ' → logprob: -17.761056900024414
    10. 'counter' → logprob: -18.011056900024414

Token 203: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12695194780826569
    2. ' +=' → logprob: -2.1269519329071045
    3. '+' → logprob: -11.376952171325684
    4. '```' → logprob: -12.126952171325684
    5. ']+=' → logprob: -12.876952171325684
    6. '=' → logprob: -13.001952171325684
    7. '   ' → logprob: -14.501952171325684
    8. '            ' → logprob: -15.376952171325684
    9. ' ' → logprob: -15.376952171325684
    10. '    ' → logprob: -15.501952171325684

Token 204: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3132670223712921
    2. ' ' → logprob: -1.3132669925689697
    3. ' ' → logprob: -12.81326675415039
    4. '```' → logprob: -13.31326675415039
    5. '   ' → logprob: -15.56326675415039
    6. '               ' → logprob: -16.56326675415039
    7. '`' → logprob: -16.75076675415039
    8. '0' → logprob: -16.75076675415039
    9. '[' → logprob: -16.87576675415039
    10. '	' → logprob: -16.93826675415039

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -16.250028610229492
    4. '   ' → logprob: -17.375028610229492
    5. '
' → logprob: -18.937528610229492
    6. '`' → logprob: -19.562528610229492
    7. '１' → logprob: -20.062528610229492
    8. ' ' → logprob: -20.250028610229492
    9. '+' → logprob: -20.375028610229492
    10. '           ' → logprob: -20.500028610229492

Token 206: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03592374548316002
    2. '    
' → logprob: -4.285923957824707
    3. '
' → logprob: -4.660923957824707
    4. '```' → logprob: -4.785923957824707
    5. 'print' → logprob: -5.660923957824707
    6. '  
' → logprob: -9.785923957824707
    7. ' print' → logprob: -9.910923957824707
    8. '``' → logprob: -10.410923957824707
    9. '<|end|>' → logprob: -10.410923957824707
    10. '        
' → logprob: -10.410923957824707

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2120445966720581
    2. 'print' → logprob: -1.712044596672058
    3. '```' → logprob: -4.587044715881348
    4. ' print' → logprob: -8.087044715881348
    5. 'for' → logprob: -9.837044715881348
    6. '
' → logprob: -11.212044715881348
    7. '``' → logprob: -11.337044715881348
    8. '    
' → logprob: -12.462044715881348
    9. '#' → logprob: -14.212044715881348
    10. ' for' → logprob: -14.587044715881348

Token 208: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00011403311509639025
    2. '   ' → logprob: -9.250114440917969
    3. ' print' → logprob: -11.500114440917969
    4. '```' → logprob: -12.000114440917969
    5. 'for' → logprob: -13.375114440917969
    6. '    
' → logprob: -17.12511444091797
    7. '``' → logprob: -17.12511444091797
    8. '
' → logprob: -19.62511444091797
    9. 'printf' → logprob: -20.00011444091797
    10. '#print' → logprob: -20.75011444091797

Token 209: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.321018248796463
    2. '(case' → logprob: -1.9460182189941406
    3. '(' → logprob: -2.3210182189941406
    4. '("' → logprob: -3.6960182189941406
    5. '('' → logprob: -4.946018218994141
    6. '()' → logprob: -6.571018218994141
    7. 'case' → logprob: -9.57101821899414
    8. '(
' → logprob: -9.69601821899414
    9. '(*' → logprob: -10.07101821899414
    10. 'f' → logprob: -10.94601821899414

Token 210: '"' (ID: 1)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.5408896803855896
    2. '(case' → logprob: -1.1658897399902344
    3. '(' → logprob: -2.4158897399902344
    4. '("' → logprob: -4.290889739990234
    5. 'case' → logprob: -6.540889739990234
    6. '"' → logprob: -7.665889739990234
    7. '(C' → logprob: -7.915889739990234
    8. '(#' → logprob: -8.415889739990234
    9. '{' → logprob: -8.790889739990234
    10. '('' → logprob: -9.040889739990234

Token 211: 'Case' (ID: 6187)
  Prédit: 'Case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: -0.03291742503643036
    2. 'case' → logprob: -3.9079174995422363
    3. 'Matrix' → logprob: -5.032917499542236
    4. 'Caso' → logprob: -6.907917499542236
    5. 'Quadr' → logprob: -7.032917499542236
    6. 'Pattern' → logprob: -7.282917499542236
    7. 'Snake' → logprob: -7.532917499542236
    8. 'Z' → logprob: -7.657917499542236
    9. 'Diagonal' → logprob: -8.157917022705078
    10. 'Result' → logprob: -8.532917022705078

Token 212: ' {' (ID: 354)
  Prédit: ' #{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #{' → logprob: -0.5063192248344421
    2. ' #' → logprob: -1.006319284439087
    3. '_' → logprob: -4.256319046020508
    4. '#{' → logprob: -4.881319046020508
    5. '_number' → logprob: -5.131319046020508
    6. '#' → logprob: -5.881319046020508
    7. '_Number' → logprob: -8.006319046020508
    8. '_{' → logprob: -8.256319046020508
    9. ' {' → logprob: -8.256319046020508
    10. ' #%' → logprob: -8.756319046020508

Token 213: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.001504982472397387
    2. ' case' → logprob: -6.501504898071289
    3. '{' → logprob: -13.001504898071289
    4. '(case' → logprob: -15.626504898071289
    5. '_case' → logprob: -15.626504898071289
    6. '}' → logprob: -17.12650489807129
    7. '#' → logprob: -18.87650489807129
    8. '.case' → logprob: -19.12650489807129
    9. 'Case' → logprob: -19.25150489807129
    10. '	case' → logprob: -19.25150489807129

Token 214: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: 0.0
    2. '_NUMBER' → logprob: -18.25
    3. '_Number' → logprob: -18.375
    4. 'Number' → logprob: -20.625
    5. 'number' → logprob: -20.625
    6. ' _' → logprob: -20.875
    7. '_numbers' → logprob: -21.375
    8. '_' → logprob: -21.375
    9. '_case' → logprob: -21.75
    10. '_num' → logprob: -22.5

Token 215: '}:' (ID: 33132)
  Prédit: '}:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}:' → logprob: -5.6100132496794686e-05
    2. '}")' → logprob: -10.500056266784668
    3. '}' → logprob: -11.125056266784668
    4. ':' → logprob: -11.750056266784668
    5. '}:{' → logprob: -12.250056266784668
    6. '},' → logprob: -14.625056266784668
    7. ' }:' → logprob: -14.875056266784668
    8. '):' → logprob: -15.875056266784668
    9. '>:' → logprob: -16.87505531311035
    10. '}")
' → logprob: -17.50005531311035

Token 216: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.024191254749894142
    2. '")
' → logprob: -3.77419114112854
    3. '\n' → logprob: -7.149191379547119
    4. '{' → logprob: -10.274190902709961
    5. '"' → logprob: -10.399190902709961
    6. 'result' → logprob: -11.024190902709961
    7. '[' → logprob: -11.024190902709961
    8. '")
' → logprob: -11.149190902709961
    9. '\' → logprob: -11.399190902709961
    10. '}")' → logprob: -12.149190902709961

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06255754083395004
    2. 'for' → logprob: -2.8125574588775635
    3. ' for' → logprob: -7.437557697296143
    4. '```' → logprob: -14.312557220458984
    5. '<|end|>' → logprob: -15.687557220458984
    6. 'case' → logprob: -15.937557220458984
    7. '    
' → logprob: -16.062557220458984
    8. '[' → logprob: -16.062557220458984
    9. '	for' → logprob: -17.562557220458984
    10. 'print' → logprob: -18.562557220458984

Token 218: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.0280383548888494e-06
    2. ' for' → logprob: -14.000000953674316
    3. '   ' → logprob: -16.000001907348633
    4. 'case' → logprob: -20.375001907348633
    5. '	for' → logprob: -21.375001907348633
    6. '    
' → logprob: -22.750001907348633
    7. '```' → logprob: -22.875001907348633
    8. 'print' → logprob: -24.375001907348633
    9. '
' → logprob: -25.625001907348633
    10. '[' → logprob: -26.000001907348633

Token 219: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.31448879837989807
    2. 'row' → logprob: -1.3144887685775757
    3. ' i' → logprob: -7.314488887786865
    4. 'i' → logprob: -7.564488887786865
    5. '   ' → logprob: -10.189488410949707
    6. 'r' → logprob: -13.564488410949707
    7. ' ' → logprob: -13.689488410949707
    8. 'line' → logprob: -13.939488410949707
    9. ' line' → logprob: -14.564488410949707
    10. ' r' → logprob: -15.189488410949707

Token 220: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014168800786137581
    2. 'in' → logprob: -4.264168739318848
    3. '   ' → logprob: -12.639168739318848
    4. '	in' → logprob: -14.514168739318848
    5. '_in' → logprob: -15.139168739318848
    6. ' ' → logprob: -15.514168739318848
    7. 'import' → logprob: -15.764168739318848
    8. '  ' → logprob: -15.889168739318848
    9. 'print' → logprob: -16.014169692993164
    10. 'In' → logprob: -16.139169692993164

Token 221: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04858986660838127
    2. ' result' → logprob: -3.0485899448394775
    3. 'range' → logprob: -13.048589706420898
    4. ' range' → logprob: -15.173589706420898
    5. '   ' → logprob: -15.798589706420898
    6. ' ' → logprob: -17.7985897064209
    7. '	result' → logprob: -18.6735897064209
    8. '(result' → logprob: -18.7985897064209
    9. '  ' → logprob: -19.4235897064209
    10. '    ' → logprob: -20.6735897064209

Token 222: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4946564733982086
    2. ':
' → logprob: -0.9946564435958862
    3. '       ' → logprob: -4.369656562805176
    4. '   ' → logprob: -5.119656562805176
    5. '():
' → logprob: -6.994656562805176
    6. '):
' → logprob: -8.244656562805176
    7. ' in' → logprob: -8.619656562805176
    8. '):' → logprob: -9.494656562805176
    9. '():' → logprob: -9.994656562805176
    10. 'print' → logprob: -9.994656562805176

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14400801062583923
    2. '   ' → logprob: -2.644007921218872
    3. ' print' → logprob: -2.769007921218872
    4. 'print' → logprob: -8.394007682800293
    5. '```' → logprob: -11.144007682800293
    6. ' for' → logprob: -11.269007682800293
    7. '<|end|>' → logprob: -11.269007682800293
    8. '        
' → logprob: -11.269007682800293
    9. ',' → logprob: -11.519007682800293
    10. '    
' → logprob: -11.519007682800293

Token 224: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3033224642276764
    2. ' print' → logprob: -1.553322434425354
    3. '   ' → logprob: -3.1783225536346436
    4. '       ' → logprob: -4.8033223152160645
    5. '```' → logprob: -8.803322792053223
    6. ' for' → logprob: -9.928322792053223
    7. 'for' → logprob: -10.803322792053223
    8. '	print' → logprob: -11.678322792053223
    9. '           ' → logprob: -11.928322792053223
    10. ' ' → logprob: -14.178322792053223

Token 225: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5727654695510864
    2. '("' → logprob: -1.3227654695510864
    3. '(*' → logprob: -1.8227654695510864
    4. '(' → logprob: -4.822765350341797
    5. '"' → logprob: -12.197765350341797
    6. '*' → logprob: -12.947765350341797
    7. '(f' → logprob: -13.072765350341797
    8. ''' → logprob: -13.572765350341797
    9. '   ' → logprob: -13.572765350341797
    10. '()' → logprob: -13.822765350341797

Token 226: ''.' (ID: 6120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002534759696573019
    2. ' '' → logprob: -6.252534866333008
    3. '('' → logprob: -8.252534866333008
    4. '"' → logprob: -8.752534866333008
    5. '   ' → logprob: -9.002534866333008
    6. ' ' → logprob: -10.377534866333008
    7. ' '.' → logprob: -11.252534866333008
    8. '  ' → logprob: -12.127534866333008
    9. ''.' → logprob: -12.627534866333008
    10. ''end' → logprob: -12.752534866333008

Token 227: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0837540403008461
    2. ''.' → logprob: -3.583754062652588
    3. '.join' → logprob: -3.833754062652588
    4. ''' → logprob: -4.083754062652588
    5. '('' → logprob: -5.583754062652588
    6. '   ' → logprob: -5.958754062652588
    7. '.' → logprob: -6.333754062652588
    8. '{' → logprob: -6.458754062652588
    9. 'format' → logprob: -6.458754062652588
    10. ''{' → logprob: -6.708754062652588

Token 228: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.043076153844594955
    2. '(str' → logprob: -3.7930760383605957
    3. 'f' → logprob: -4.043076038360596
    4. 'str' → logprob: -6.668076038360596
    5. '[f' → logprob: -7.668076038360596
    6. '('{' → logprob: -8.668076515197754
    7. '(map' → logprob: -9.543076515197754
    8. 'map' → logprob: -10.668076515197754
    9. ' f' → logprob: -11.043076515197754
    10. '[str' → logprob: -11.293076515197754

Token 229: '"{' (ID: 27510)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.06014218553900719
    2. 'f' → logprob: -2.9351422786712646
    3. '{' → logprob: -5.4351420402526855
    4. ' f' → logprob: -7.1851420402526855
    5. '"{' → logprob: -10.560142517089844
    6. '('{' → logprob: -10.810142517089844
    7. '("{' → logprob: -10.935142517089844
    8. '(str' → logprob: -11.060142517089844
    9. ''{' → logprob: -11.185142517089844
    10. '   ' → logprob: -11.310142517089844

Token 230: 'num' (ID: 4571)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06284382939338684
    2. 'str' → logprob: -2.8128437995910645
    3. '"{' → logprob: -7.6878437995910645
    4. '{' → logprob: -8.187844276428223
    5. ' f' → logprob: -9.687844276428223
    6. 'num' → logprob: -10.312844276428223
    7. ''{' → logprob: -10.437844276428223
    8. ' str' → logprob: -12.812844276428223
    9. 'x' → logprob: -12.812844276428223
    10. '(f' → logprob: -12.937844276428223

Token 231: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012044047005474567
    2. '"{' → logprob: -5.1370439529418945
    3. '{' → logprob: -5.2620439529418945
    4. '"' → logprob: -8.262043952941895
    5. '{:' → logprob: -9.387043952941895
    6. '   ' → logprob: -9.387043952941895
    7. ' {' → logprob: -9.762043952941895
    8. '}' → logprob: -9.762043952941895
    9. ' ' → logprob: -9.887043952941895
    10. '3' → logprob: -9.887043952941895

Token 232: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.014324045740067959
    2. '4' → logprob: -4.264324188232422
    3. '>' → logprob: -9.264324188232422
    4. '5' → logprob: -10.139324188232422
    5. ' ' → logprob: -10.639324188232422
    6. 'd' → logprob: -14.389324188232422
    7. '03' → logprob: -14.889324188232422
    8. '2' → logprob: -15.139324188232422
    9. '6' → logprob: -15.264324188232422
    10. '{' → logprob: -15.389324188232422

Token 233: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3133033514022827
    2. '}"' → logprob: -1.3133033514022827
    3. '}' → logprob: -10.438302993774414
    4. '}")' → logprob: -11.938302993774414
    5. '}'' → logprob: -13.063302993774414
    6. '```' → logprob: -14.313302993774414
    7. ' }' → logprob: -14.438302993774414
    8. '"d' → logprob: -14.438302993774414
    9. '"' → logprob: -14.813302993774414
    10. ' d' → logprob: -14.813302993774414

Token 234: '}"' (ID: 21503)
  Prédit: '}"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.00029482474201358855
    2. '}' → logprob: -8.37529468536377
    3. '"' → logprob: -10.12529468536377
    4. ' }' → logprob: -10.87529468536377
    5. ' "' → logprob: -12.25029468536377
    6. '```' → logprob: -16.125295639038086
    7. '}}"' → logprob: -16.250295639038086
    8. ')"' → logprob: -16.375295639038086
    9. '}'' → logprob: -16.875295639038086
    10. '}")' → logprob: -17.000295639038086

Token 235: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02923554554581642
    2. 'for' → logprob: -4.029235363006592
    3. ')' → logprob: -4.779235363006592
    4. ''' → logprob: -6.404235363006592
    5. '"' → logprob: -7.404235363006592
    6. ' ' → logprob: -8.90423583984375
    7. ' )' → logprob: -9.40423583984375
    8. ',' → logprob: -10.52923583984375
    9. '```' → logprob: -10.52923583984375
    10. '   ' → logprob: -10.90423583984375

Token 236: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2519305646419525
    2. ' num' → logprob: -1.501930594444275
    3. '	num' → logprob: -14.376930236816406
    4. ' ' → logprob: -14.751930236816406
    5. '_' → logprob: -15.376930236816406
    6. '_num' → logprob: -16.001930236816406
    7. ' ' → logprob: -17.001930236816406
    8. ' _' → logprob: -17.251930236816406
    9. '(num' → logprob: -17.501930236816406
    10. '<num' → logprob: -17.501930236816406

Token 237: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21873930096626282
    2. ' num' → logprob: -1.9687392711639404
    3. 'num' → logprob: -2.9687392711639404
    4. 'in' → logprob: -5.2187395095825195
    5. ' ' → logprob: -10.71873950958252
    6. ',num' → logprob: -11.46873950958252
    7. '=num' → logprob: -12.59373950958252
    8. '[num' → logprob: -12.71873950958252
    9. '<num' → logprob: -12.71873950958252
    10. '   ' → logprob: -12.96873950958252

Token 238: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.03804194927215576
    2. ' row' → logprob: -3.2880420684814453
    3. '	row' → logprob: -15.538042068481445
    4. ' ' → logprob: -15.663042068481445
    5. '[row' → logprob: -16.663042068481445
    6. '   ' → logprob: -16.788042068481445
    7. 'range' → logprob: -17.538042068481445
    8. '(row' → logprob: -18.413042068481445
    9. '=row' → logprob: -18.413042068481445
    10. '
' → logprob: -18.663042068481445

Token 239: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1802988201379776
    2. ')' → logprob: -1.9302988052368164
    3. '))
' → logprob: -3.9302988052368164
    4. ')
' → logprob: -8.555298805236816
    5. '   ' → logprob: -10.805298805236816
    6. ')))' → logprob: -11.430298805236816
    7. '       ' → logprob: -11.805298805236816
    8. ' ))' → logprob: -13.180298805236816
    9. ')}' → logprob: -14.305298805236816
    10. '))
' → logprob: -14.805298805236816

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049678951501846313
    2. 'case' → logprob: -3.0496790409088135
    3. ' case' → logprob: -7.049678802490234
    4. '
' → logprob: -8.924678802490234
    5. '```' → logprob: -9.924678802490234
    6. '    
' → logprob: -10.549678802490234
    7. '(case' → logprob: -11.549678802490234
    8. '	case' → logprob: -12.799678802490234
    9. '_case' → logprob: -14.424678802490234
    10. '``' → logprob: -15.049678802490234

Token 241: ' case' (ID: 1890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0300761591643095
    2. 'case' (adapté à ' case') → logprob: -3.530076265335083
    3. ' case' → logprob: -8.905076026916504
    4. '
' → logprob: -8.905076026916504
    5. '    
' → logprob: -10.155076026916504
    6. '```' → logprob: -11.405076026916504
    7. '(case' → logprob: -12.530076026916504
    8. '        
' → logprob: -15.655076026916504
    9. '``' → logprob: -16.03007698059082
    10. '
' → logprob: -16.53007698059082

Token 242: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.5
    3. 'number' → logprob: -17.25
    4. '_case' → logprob: -18.0
    5. '\' → logprob: -18.875
    6. '_numbers' → logprob: -19.375
    7. ' _' → logprob: -20.0
    8. '_NUMBER' → logprob: -20.25
    9. '_Number' → logprob: -20.375
    10. 'Number' → logprob: -20.875

Token 243: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0619877465069294
    2. ' +=' → logprob: -2.8119876384735107
    3. '=' → logprob: -11.31198787689209
    4. '   ' → logprob: -12.31198787689209
    5. '+' → logprob: -13.43698787689209
    6. ']+=' → logprob: -14.43698787689209
    7. '+="' → logprob: -15.06198787689209
    8. '```' → logprob: -15.18698787689209
    9. '+='' → logprob: -15.43698787689209
    10. ' ' → logprob: -15.68698787689209

Token 244: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0380416102707386
    2. ' ' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.163042068481445
    4. '   ' → logprob: -17.288042068481445
    5. '```' → logprob: -18.538042068481445
    6. '<|end|>' → logprob: -18.913042068481445
    7. '  ' → logprob: -19.413042068481445
    8. '۱' → logprob: -19.788042068481445
    9. '‌' → logprob: -19.913042068481445
    10. '    ' → logprob: -20.350542068481445

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.2500057220459
    4. '```' → logprob: -17.1250057220459
    5. '  ' → logprob: -18.7500057220459
    6. '１' → logprob: -19.0000057220459
    7. '۱' → logprob: -19.6250057220459
    8. '१' → logprob: -20.3750057220459
    9. '    ' → logprob: -20.4375057220459
    10. '       ' → logprob: -20.5625057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 243
Tokens correctement prédits (1ère position, stricte): 114
Tokens correctement prédits (1ère position, avec adaptation): 128
Tokens correctement prédits (top 10): 216
Précision stricte (1ère position): 46.91%
Précision adaptée (1ère position): 52.67%
Précision (top 10): 88.89%
================================================================================
