================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:29:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class CheckeredPatternSolver:
    class Matrix:
        def __init__(self, rows, cols, data):
            self.rows = rows
            self.cols = cols
            self.data = data

        def get_row(self, r):
            return self.data[r]

        def get_column(self, c):
            return [self.data[r][c] for r in range(self.rows)]

        def check_pattern_feasibility(self):
            # We want to check whether rows and columns can be rearranged 
            # so that the pattern is checkered. After any swapping of rows 
            # and columns, the relative pattern between rows and columns must be consistent.
            # So, we need to check if rows can be grouped into two types alternating 
            # and same for columns.

            # Consider first row pattern:
            pattern0 = self.get_row(0)
            inv_pattern0 = [1 - x for x in pattern0]
            
            # Check each row must be either pattern0 or inverse of pattern0
            for r in range(1, self.rows):
                row = self.get_row(r)
                if row != pattern0 and row != inv_pattern0:
                    return False

            # Similarly for columns:
            first_col = self.get_column(0)
            inv_first_col = [1 - x for x in first_col]

            for c in range(1, self.cols):
                col = self.get_column(c)
                if col != first_col and col != inv_first_col:
                    return False

            # Finally check that patterns are crossing consistently:
            # pattern0[0] should equal first_col[0], else impossible
            if pattern0[0] != first_col[0]:
                return False

            return True

    class InputParser:
        @staticmethod
        def parse():
            import sys
            W, H = map(int, sys.stdin.readline().strip().split())
            data = []
            for _ in range(H):
                row = list(map(int, sys.stdin.readline().strip().split()))
                data.append(row)
            return W, H, data

    class OutputWriter:
        @staticmethod
        def write(result):
            print("yes" if result else "no")

    def __init__(self):
        self.W = 0
        self.H = 0
        self.matrix = None

    def load_input(self):
        self.W, self.H, data = self.InputParser.parse()
        self.matrix = self.Matrix(self.H, self.W, data)

    def solve(self):
        return self.matrix.check_pattern_feasibility()

    def run(self):
        self.load_input()
        result = self.solve()
        self.OutputWriter.write(result)

if __name__ == "__main__":
    solver = CheckeredPatternSolver()
    solver.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Check' (ID: 6208)
  → Token d'amorce (pas de prédiction)

Token 2: 'ered' (ID: 21189)
  → Token d'amorce (pas de prédiction)

Token 3: 'Pattern' (ID: 16821)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24798369407653809
    2. '{' → logprob: -1.872983694076538
    3. '(' → logprob: -3.122983694076538
    4. ' {' → logprob: -4.497983932495117
    5. '.' → logprob: -5.247983932495117
    6. '[' → logprob: -5.997983932495117
    7. ' ' → logprob: -6.622983932495117
    8. '```' → logprob: -7.122983932495117
    9. ' :' → logprob: -7.747983932495117
    10. '_' → logprob: -9.872983932495117

Token 4: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31486189365386963
    2. '(' → logprob: -1.4398618936538696
    3. '{' → logprob: -3.43986177444458
    4. '.' → logprob: -7.31486177444458
    5. ' {' → logprob: -9.314862251281738
    6. ' :' → logprob: -9.439862251281738
    7. '(:' → logprob: -9.564862251281738
    8. '[' → logprob: -10.189862251281738
    9. '```' → logprob: -10.314862251281738
    10. '():' → logprob: -10.814862251281738

Token 5: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16728495061397552
    2. '(' → logprob: -2.0422849655151367
    3. '.' → logprob: -4.417284965515137
    4. '{' → logprob: -4.417284965515137
    5. '(:' → logprob: -9.667284965515137
    6. '```' → logprob: -10.792284965515137
    7. ' {' → logprob: -10.917284965515137
    8. ' :' → logprob: -11.292284965515137
    9. '_' → logprob: -11.542284965515137
    10. '[' → logprob: -11.917284965515137

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11555963009595871
    2. '(' → logprob: -2.2405595779418945
    3. '   ' → logprob: -7.2405595779418945
    4. '```' → logprob: -7.2405595779418945
    5. ':
' → logprob: -7.4905595779418945
    6. '.' → logprob: -7.9905595779418945
    7. '(
' → logprob: -8.490559577941895
    8. '():' → logprob: -9.490559577941895
    9. '[' → logprob: -10.490559577941895
    10. '\' → logprob: -11.490559577941895

Token 7: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.391086220741272
    2. ':' → logprob: -1.891086220741272
    3. '```' → logprob: -2.2660861015319824
    4. '\' → logprob: -4.141086101531982
    5. '(' → logprob: -4.266086101531982
    6. '<|end|>' → logprob: -4.641086101531982
    7. ' ' → logprob: -4.766086101531982
    8. '[' → logprob: -5.266086101531982
    9. '    ' → logprob: -6.141086101531982
    10. '       ' → logprob: -6.516086101531982

Token 8: ' Matrix' (ID: 23226)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6413027048110962
    2. ' Checker' → logprob: -1.6413027048110962
    3. ' Check' → logprob: -2.7663025856018066
    4. ':' → logprob: -3.2663025856018066
    5. ' Pattern' → logprob: -3.5163025856018066
    6. ' Solver' → logprob: -3.5163025856018066
    7. 'Solver' → logprob: -4.141302585601807
    8. 'Checker' → logprob: -4.391302585601807
    9. 'Check' → logprob: -4.516302585601807
    10. 'Pattern' → logprob: -4.641302585601807

Token 9: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04992007464170456
    2. '[' → logprob: -3.174920082092285
    3. '(' → logprob: -5.674920082092285
    4. '<|end|>' → logprob: -6.674920082092285
    5. ':
' → logprob: -7.049920082092285
    6. '[List' → logprob: -8.799920082092285
    7. '[row' → logprob: -8.924920082092285
    8. '```' → logprob: -9.174920082092285
    9. '(object' → logprob: -9.424920082092285
    10. '):' → logprob: -9.674920082092285

Token 10: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48628365993499756
    2. '\' → logprob: -1.6112836599349976
    3. '       ' → logprob: -2.861283779144287
    4. '[' → logprob: -3.236283779144287
    5. '(n' → logprob: -3.361283779144287
    6. ' (' → logprob: -4.611283779144287
    7. '    ' → logprob: -4.861283779144287
    8. 'n' → logprob: -5.111283779144287
    9. '   ' → logprob: -5.236283779144287
    10. '\n' → logprob: -5.361283779144287

Token 11: ' def' (ID: 1056)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9729402661323547
    2. '\n' → logprob: -1.47294020652771
    3. '\' → logprob: -2.09794020652771
    4. '[' → logprob: -3.09794020652771
    5. '       ' → logprob: -3.22294020652771
    6. ' (' → logprob: -3.22294020652771
    7. '(n' → logprob: -3.47294020652771
    8. '<|end|>' → logprob: -3.97294020652771
    9. ' ' → logprob: -4.097940444946289
    10. '   ' → logprob: -4.472940444946289

Token 12: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0027209450490772724
    2. ' init' → logprob: -6.627720832824707
    3. '__' → logprob: -6.752720832824707
    4. 'init' → logprob: -8.752720832824707
    5. ' ' → logprob: -10.502720832824707
    6. ' _' → logprob: -11.752720832824707
    7. ' initialize' → logprob: -11.752720832824707
    8. ' def' → logprob: -12.127720832824707
    9. '_init' → logprob: -12.252720832824707
    10. ' ' → logprob: -12.502720832824707

Token 13: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.339278580620885e-06
    2. ' init' → logprob: -13.250001907348633
    3. 'ini' → logprob: -15.000001907348633
    4. 'in' → logprob: -15.875001907348633
    5. 'int' → logprob: -16.500001907348633
    6. 'i' → logprob: -17.000001907348633
    7. 'inti' → logprob: -18.500001907348633
    8. '_init' → logprob: -18.500001907348633
    9. 'innit' → logprob: -18.500001907348633
    10. 'inite' → logprob: -18.750001907348633

Token 14: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.083248071372509
    2. '(' → logprob: -3.3332481384277344
    3. '(self' → logprob: -3.8332481384277344
    4. '__' → logprob: -3.9582481384277344
    5. '__(
' → logprob: -6.208248138427734
    6. ' (' → logprob: -6.958248138427734
    7. '__((' → logprob: -9.083248138427734
    8. 'self' → logprob: -9.333248138427734
    9. '_(' → logprob: -9.583248138427734
    10. '_' → logprob: -9.958248138427734

Token 15: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005932828411459923
    2. ' self' → logprob: -5.130932807922363
    3. ')' → logprob: -13.130932807922363
    4. 'matrix' → logprob: -14.505932807922363
    5. 'rows' → logprob: -14.880932807922363
    6. '(self' → logprob: -15.505932807922363
    7. '       ' → logprob: -15.505932807922363
    8. ' )' → logprob: -15.630932807922363
    9. ' ' → logprob: -15.755932807922363
    10. 'size' → logprob: -16.13093376159668

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05870663374662399
    2. ' ,' → logprob: -2.933706521987915
    3. 'self' → logprob: -5.933706760406494
    4. ')' → logprob: -7.683706760406494
    5. ',self' → logprob: -8.308706283569336
    6. ' self' → logprob: -9.308706283569336
    7. '(self' → logprob: -9.433706283569336
    8. ' ' → logprob: -9.558706283569336
    9. ' )' → logprob: -9.808706283569336
    10. '<|end|>' → logprob: -9.933706283569336

Token 17: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -1.103057622909546
    2. ' self' → logprob: -1.353057622909546
    3. 'self' → logprob: -1.478057622909546
    4. 'rows' → logprob: -1.978057622909546
    5. ' width' → logprob: -4.853057861328125
    6. ' n' → logprob: -4.853057861328125
    7. ' matrix' → logprob: -5.103057861328125
    8. ' size' → logprob: -5.353057861328125
    9. 'width' → logprob: -5.853057861328125
    10. 'matrix' → logprob: -5.853057861328125

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038431864231824875
    2. ' ,' → logprob: -5.753843307495117
    3. '):' → logprob: -7.503843307495117
    4. '=' → logprob: -9.753843307495117
    5. ':' → logprob: -10.878843307495117
    6. '<|end|>' → logprob: -11.253843307495117
    7. ')' → logprob: -12.128843307495117
    8. '   ' → logprob: -12.628843307495117
    9. ' ):' → logprob: -13.128843307495117
    10. ',int' → logprob: -13.378843307495117

Token 19: ' cols' (ID: 37134)
  Prédit: ' cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cols' → logprob: -0.026650674641132355
    2. ' columns' → logprob: -3.9016506671905518
    3. 'cols' → logprob: -5.151650905609131
    4. 'columns' → logprob: -8.151650428771973
    5. '_cols' → logprob: -11.901650428771973
    6. ' col' → logprob: -13.401650428771973
    7. '(cols' → logprob: -14.151650428771973
    8. ' ' → logprob: -14.526650428771973
    9. '.cols' → logprob: -15.026650428771973
    10. '   ' → logprob: -15.151650428771973

Token 20: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018249686807394028
    2. ',' → logprob: -4.01824951171875
    3. '):
' → logprob: -10.01824951171875
    4. ')' → logprob: -11.14324951171875
    5. ' ):' → logprob: -11.14324951171875
    6. '       ' → logprob: -11.51824951171875
    7. ' ,' → logprob: -12.14324951171875
    8. ':' → logprob: -12.51824951171875
    9. '   ' → logprob: -12.64324951171875
    10. '<|end|>' → logprob: -14.76824951171875

Token 21: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -1.1918489933013916
    2. ' value' → logprob: -1.4418489933013916
    3. ' fill' → logprob: -1.9418489933013916
    4. ' default' → logprob: -2.4418489933013916
    5. ' initial' → logprob: -3.0668489933013916
    6. ' color' → logprob: -3.4418489933013916
    7. ' values' → logprob: -3.6918489933013916
    8. ' ' → logprob: -3.8168489933013916
    9. ' grid' → logprob: -3.9418489933013916
    10. ' matrix' → logprob: -3.9418489933013916

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029270683880895376
    2. ' ):' → logprob: -6.502927303314209
    3. '=None' → logprob: -7.627927303314209
    4. '=' → logprob: -7.877927303314209
    5. ':' → logprob: -8.37792682647705
    6. '):
' → logprob: -8.87792682647705
    7. '   ' → logprob: -9.50292682647705
    8. ')' → logprob: -10.12792682647705
    9. ',' → logprob: -10.12792682647705
    10. ' =' → logprob: -11.50292682647705

Token 23: '           ' (ID: 352)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4308576285839081
    2. ':' → logprob: -1.6808576583862305
    3. '           ' → logprob: -2.0558576583862305
    4. ')' → logprob: -4.1808576583862305
    5. '       ' → logprob: -4.5558576583862305
    6. ',' → logprob: -5.0558576583862305
    7. '):
' → logprob: -6.4308576583862305
    8. '```' → logprob: -7.4308576583862305
    9. '<|end|>' → logprob: -8.05585765838623
    10. '               ' → logprob: -8.68085765838623

Token 24: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.23597924411296844
    2. '               ' → logprob: -1.8609791994094849
    3. ' self' → logprob: -3.1109793186187744
    4. '           ' → logprob: -5.110979080200195
    5. '       ' → logprob: -6.610979080200195
    6. '   ' → logprob: -6.985979080200195
    7. ' ' → logprob: -7.485979080200195
    8. '[' → logprob: -8.735979080200195
    9. '                   ' → logprob: -8.735979080200195
    10. '                ' → logprob: -8.985979080200195

Token 25: '.rows' (ID: 41542)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005793932359665632
    2. '.rows' → logprob: -5.755794048309326
    3. '.data' → logprob: -6.130794048309326
    4. ' .' → logprob: -8.130793571472168
    5. '[' → logprob: -10.380793571472168
    6. 'data' → logprob: -10.755793571472168
    7. '.columns' → logprob: -10.880793571472168
    8. 'rows' → logprob: -11.255793571472168
    9. '.cells' → logprob: -12.005793571472168
    10. '.append' → logprob: -12.255793571472168

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4151260554790497
    2. '<|end|>' → logprob: -1.665126085281372
    3. '=' → logprob: -2.165126085281372
    4. ',' → logprob: -4.040125846862793
    5. ' ' → logprob: -5.415125846862793
    6. ')' → logprob: -5.415125846862793
    7. '<|end|>' → logprob: -6.165125846862793
    8. ' ==' → logprob: -6.665125846862793
    9. '   ' → logprob: -6.790125846862793
    10. ' ,' → logprob: -6.915125846862793

Token 27: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.0006351164192892611
    2. 'rows' → logprob: -7.375635147094727
    3. '	rows' → logprob: -12.250635147094727
    4. '(rows' → logprob: -12.750635147094727
    5. ' ' → logprob: -14.875635147094727
    6. '_rows' → logprob: -15.125635147094727
    7. ' ' → logprob: -15.625635147094727
    8. ' len' → logprob: -16.500635147094727
    9. '.rows' → logprob: -17.000635147094727
    10. ' data' → logprob: -17.500635147094727

Token 28: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32373836636543274
    2. '           ' → logprob: -1.6987383365631104
    3. '<|end|>' → logprob: -2.4487383365631104
    4. '   ' → logprob: -5.4487385749816895
    5. '<|end|>' → logprob: -6.8237385749816895
    6. '```' → logprob: -7.9487385749816895
    7. '        ' → logprob: -8.323738098144531
    8. '    ' → logprob: -8.573738098144531
    9. ',' → logprob: -8.823738098144531
    10. '
' → logprob: -8.948738098144531

Token 30: ' self' (ID: 1051)
  Prédit: ' cols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cols' → logprob: -0.47435271739959717
    2. 'cols' → logprob: -0.9743527173995972
    3. ' ' → logprob: -9.849352836608887
    4. '(cols' → logprob: -9.974352836608887
    5. '            ' → logprob: -10.099352836608887
    6. '_cols' → logprob: -10.349352836608887
    7. '           ' → logprob: -10.599352836608887
    8. '.cols' → logprob: -10.724352836608887
    9. 'self' (adapté à ' self') → logprob: -11.349352836608887
    10. 'rows' → logprob: -11.349352836608887

Token 31: '.cols' (ID: 89556)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.012951615266501904
    2. '.cols' → logprob: -4.512951850891113
    3. '.columns' → logprob: -6.637951850891113
    4. '.data' → logprob: -8.262951850891113
    5. '.rows' → logprob: -8.637951850891113
    6. ' .' → logprob: -9.637951850891113
    7. 'cols' → logprob: -10.262951850891113
    8. '.cells' → logprob: -10.762951850891113
    9. '.col' → logprob: -11.762951850891113
    10. '_cols' → logprob: -11.887951850891113

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45503321290016174
    2. '=' → logprob: -1.5800331830978394
    3. '<|end|>' → logprob: -1.9550331830978394
    4. ' ' → logprob: -4.330033302307129
    5. ')' → logprob: -6.830033302307129
    6. '           ' → logprob: -7.205033302307129
    7. ',' → logprob: -7.205033302307129
    8. '            ' → logprob: -7.705033302307129
    9. '<|end|>' → logprob: -7.705033302307129
    10. '       ' → logprob: -7.830033302307129

Token 33: ' cols' (ID: 37134)
  Prédit: ' cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cols' → logprob: -0.048639487475156784
    2. 'cols' → logprob: -3.0486395359039307
    3. ' data' → logprob: -10.673639297485352
    4. '(cols' → logprob: -10.798639297485352
    5. ' col' → logprob: -12.548639297485352
    6. 'data' → logprob: -12.923639297485352
    7. 'col' → logprob: -14.048639297485352
    8. ' rows' → logprob: -14.298639297485352
    9. ' ' → logprob: -14.423639297485352
    10. '.cols' → logprob: -15.673639297485352

Token 34: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001088066608645022
    2. '
' → logprob: -7.6260881423950195
    3. '       ' → logprob: -8.37608814239502
    4. '            
' → logprob: -9.00108814239502
    5. '```' → logprob: -9.25108814239502
    6. '<|end|>' → logprob: -10.00108814239502
    7. 'newline' → logprob: -10.50108814239502
    8. '   ' → logprob: -11.12608814239502
    9. '               ' → logprob: -11.50108814239502
    10. '\' → logprob: -11.75108814239502

Token 35: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002233044244349003
    2. '       ' → logprob: -6.752233028411865
    3. '<|end|>' → logprob: -7.252233028411865
    4. '   ' → logprob: -9.252233505249023
    5. '
' → logprob: -9.377233505249023
    6. '```' → logprob: -10.127233505249023
    7. '            
' → logprob: -10.377233505249023
    8. 'newline' → logprob: -10.627233505249023
    9. '<|end|>' → logprob: -11.127233505249023
    10. '               ' → logprob: -11.127233505249023

Token 36: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020298484712839127
    2. ' self' → logprob: -4.520298480987549
    3. 'self' (adapté à ' self') → logprob: -4.770298480987549
    4. '   ' → logprob: -8.270298957824707
    5. '       ' → logprob: -8.520298957824707
    6. ' ' → logprob: -9.645298957824707
    7. '               ' → logprob: -9.770298957824707
    8. '            
' → logprob: -9.895298957824707
    9. ' ' → logprob: -10.645298957824707
    10. '```' → logprob: -10.770298957824707

Token 37: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.005115157458931208
    2. '.' → logprob: -5.380115032196045
    3. '.rows' → logprob: -8.505115509033203
    4. ' .' → logprob: -9.005115509033203
    5. 'data' → logprob: -9.255115509033203
    6. '.matrix' → logprob: -10.255115509033203
    7. '._' → logprob: -11.630115509033203
    8. '.grid' → logprob: -11.880115509033203
    9. '.cells' → logprob: -12.005115509033203
    10. '.cols' → logprob: -12.630115509033203

Token 38: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48559319972991943
    2. ' =' → logprob: -0.9855931997299194
    3. '[' → logprob: -4.485593318939209
    4. '.append' → logprob: -10.23559284210205
    5. '<|end|>' → logprob: -10.48559284210205
    6. '.' → logprob: -10.73559284210205
    7. '[:]' → logprob: -10.73559284210205
    8. ')' → logprob: -11.11059284210205
    9. '_' → logprob: -11.48559284210205
    10. ',' → logprob: -11.86059284210205

Token 39: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.062071543186903
    2. 'data' → logprob: -2.8120715618133545
    3. ' [' → logprob: -9.437071800231934
    4. ' ' → logprob: -11.562071800231934
    5. '[data' → logprob: -11.687071800231934
    6. '[' → logprob: -13.187071800231934
    7. ' []' → logprob: -13.187071800231934
    8. '	data' → logprob: -14.062071800231934
    9. '[]' → logprob: -14.687071800231934
    10. '$data' → logprob: -15.437071800231934

Token 40: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0425366163253784
    2. '       ' → logprob: -1.0425366163253784
    3. '   ' → logprob: -2.417536735534668
    4. '    
' → logprob: -2.667536735534668
    5. '\n' → logprob: -3.292536735534668
    6. '        
' → logprob: -3.542536735534668
    7. '.' → logprob: -3.917536735534668
    8. '<|end|>' → logprob: -4.292536735534668
    9. '\' → logprob: -5.042536735534668
    10. '```' → logprob: -5.667536735534668

Token 41: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08177002519369125
    2. '   ' → logprob: -3.7067699432373047
    3. '    
' → logprob: -3.8317699432373047
    4. '        
' → logprob: -4.206769943237305
    5. '       ' → logprob: -4.456769943237305
    6. '\n' → logprob: -6.831769943237305
    7. '```' → logprob: -7.081769943237305
    8. 'def' → logprob: -7.206769943237305
    9. '`
' → logprob: -8.081769943237305
    10. '
' → logprob: -8.331769943237305

Token 42: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015750790014863014
    2. '    
' → logprob: -4.890750885009766
    3. 'def' (adapté à ' def') → logprob: -5.890750885009766
    4. '   ' → logprob: -6.515750885009766
    5. '

' → logprob: -6.640750885009766
    6. '        
' → logprob: -7.015750885009766
    7. '
        
' → logprob: -7.765750885009766
    8. '
    
' → logprob: -8.140750885009766
    9. '  
' → logprob: -8.265750885009766
    10. '       ' → logprob: -8.640750885009766

Token 43: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.09563717246055603
    2. ' ' → logprob: -2.470637083053589
    3. ' is' → logprob: -6.345637321472168
    4. ' at' → logprob: -6.470637321472168
    5. 'get' → logprob: -6.845637321472168
    6. '_get' → logprob: -7.345637321472168
    7. ' __' → logprob: -7.970637321472168
    8. ' check' → logprob: -8.220637321472168
    9. ' _' → logprob: -8.220637321472168
    10. ' ' → logprob: -9.345637321472168

Token 44: '_row' (ID: 19157)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.1218491792678833
    2. '(' → logprob: -1.2468491792678833
    3. '_cell' → logprob: -1.2468491792678833
    4. '_' → logprob: -3.1218490600585938
    5. '_element' → logprob: -3.3718490600585938
    6. '_item' → logprob: -4.871849060058594
    7. '(row' → logprob: -5.871849060058594
    8. '_row' → logprob: -5.996849060058594
    9. '_pixel' → logprob: -6.246849060058594
    10. '_val' → logprob: -6.746849060058594

Token 45: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6520130038261414
    2. 's' → logprob: -1.4020130634307861
    3. '_' → logprob: -2.152013063430786
    4. '(self' → logprob: -2.652013063430786
    5. '_values' → logprob: -3.777013063430786
    6. '_data' → logprob: -4.652012825012207
    7. '_value' → logprob: -5.277012825012207
    8. '_items' → logprob: -6.652012825012207
    9. '_cells' → logprob: -6.902012825012207
    10. '_s' → logprob: -7.152012825012207

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016194197814911604
    2. ' ,' → logprob: -9.250162124633789
    3. 'self' → logprob: -10.750162124633789
    4. '):' → logprob: -10.875162124633789
    5. ',row' → logprob: -11.500162124633789
    6. 's' → logprob: -12.125162124633789
    7. ')' → logprob: -12.500162124633789
    8. ',index' → logprob: -12.625162124633789
    9. 'index' → logprob: -14.375162124633789
    10. ',i' → logprob: -14.875162124633789

Token 47: ' r' (ID: 428)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.19475781917572021
    2. ' i' → logprob: -2.1947579383850098
    3. ' r' → logprob: -3.0697579383850098
    4. ' index' → logprob: -4.94475793838501
    5. 'row' → logprob: -5.19475793838501
    6. 'i' → logprob: -6.31975793838501
    7. 'r' → logprob: -6.44475793838501
    8. ' idx' → logprob: -6.44475793838501
    9. ' self' → logprob: -7.19475793838501
    10. ' ' → logprob: -7.94475793838501

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07610634714365005
    2. ',' → logprob: -2.951106309890747
    3. ')' → logprob: -3.951106309890747
    4. '):
' → logprob: -6.701106548309326
    5. ' ):' → logprob: -9.076106071472168
    6. '_row' → logprob: -9.701106071472168
    7. 'e' → logprob: -10.076106071472168
    8. ' ,' → logprob: -10.451106071472168
    9. 's' → logprob: -10.451106071472168
    10. 'ex' → logprob: -10.576106071472168

Token 49: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46599483489990234
    2. '           ' → logprob: -1.3409948348999023
    3. '       ' → logprob: -3.4659948348999023
    4. '[:]' → logprob: -3.8409948348999023
    5. '):' → logprob: -4.090994834899902
    6. ' :' → logprob: -4.715994834899902
    7. ':
' → logprob: -5.465994834899902
    8. ' return' → logprob: -5.465994834899902
    9. '        ' → logprob: -5.590994834899902
    10. '[]' → logprob: -5.715994834899902

Token 50: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1621570587158203
    2. 'return' (adapté à ' return') → logprob: -1.9121570587158203
    3. '           ' → logprob: -6.66215705871582
    4. '       ' → logprob: -7.41215705871582
    5. '   ' → logprob: -11.16215705871582
    6. '               ' → logprob: -11.66215705871582
    7. ' self' → logprob: -12.41215705871582
    8. '```' → logprob: -12.41215705871582
    9. ' ' → logprob: -12.41215705871582
    10. 'self' → logprob: -12.53715705871582

Token 51: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.00761136319488287
    2. 'self' → logprob: -4.882611274719238
    3. ' ' → logprob: -12.882611274719238
    4. ' ' → logprob: -13.757611274719238
    5. ' [' → logprob: -14.132611274719238
    6. '[self' → logprob: -15.507611274719238
    7. '	self' → logprob: -15.632611274719238
    8. '   ' → logprob: -15.882611274719238
    9. ' []' → logprob: -16.007612228393555
    10. '[' → logprob: -16.257612228393555

Token 52: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.005290918983519077
    2. '.' → logprob: -5.255290985107422
    3. '.rows' → logprob: -10.255290985107422
    4. ' .' → logprob: -11.255290985107422
    5. 'data' → logprob: -12.505290985107422
    6. '[data' → logprob: -13.255290985107422
    7. ').' → logprob: -14.755290985107422
    8. '[' → logprob: -14.755290985107422
    9. '.user' → logprob: -14.880290985107422
    10. '.row' → logprob: -15.130290985107422

Token 53: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0021914218086749315
    2. '[' → logprob: -6.127191543579102
    3. '[
' → logprob: -13.127191543579102
    4. '[self' → logprob: -13.502191543579102
    5. '[s' → logprob: -14.502191543579102
    6. ' [' → logprob: -15.252191543579102
    7. '   ' → logprob: -15.252191543579102
    8. '[v' → logprob: -15.502191543579102
    9. '[row' → logprob: -15.627191543579102
    10. 'r' → logprob: -15.877191543579102

Token 54: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011558275582501665
    2. '][' → logprob: -10.000115394592285
    3. ' ]' → logprob: -10.000115394592285
    4. '][:' → logprob: -11.375115394592285
    5. ')' → logprob: -12.375115394592285
    6. '][]' → logprob: -12.625115394592285
    7. '<|end|>' → logprob: -13.500115394592285
    8. '[:]' → logprob: -13.625115394592285
    9. '[' → logprob: -14.000115394592285
    10. ']
' → logprob: -14.625115394592285

Token 55: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.007853971794247627
    2. 'get' → logprob: -5.132853984832764
    3. ' set' → logprob: -6.507853984832764
    4. '_get' → logprob: -8.382853507995605
    5. ' col' → logprob: -9.507853507995605
    6. ' ' → logprob: -9.757853507995605
    7. 'set' → logprob: -11.257853507995605
    8. '_set' → logprob: -11.882853507995605
    9. '_col' → logprob: -11.882853507995605
    10. ' cols' → logprob: -12.507853507995605

Token 58: '_column' (ID: 19908)
  Prédit: '_col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.010811397805809975
    2. '_column' → logprob: -5.2608113288879395
    3. '_cell' → logprob: -5.6358113288879395
    4. '_' → logprob: -6.3858113288879395
    5. '_value' → logprob: -9.010811805725098
    6. ' _' → logprob: -10.010811805725098
    7. '_val' → logprob: -10.135811805725098
    8. '_c' → logprob: -10.635811805725098
    9. '_element' → logprob: -10.760811805725098
    10. '_tile' → logprob: -11.385811805725098

Token 59: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6334121823310852
    2. '(self' → logprob: -0.7584121823310852
    3. '(s' → logprob: -8.38341236114502
    4. ' (' → logprob: -8.38341236114502
    5. 's' → logprob: -8.75841236114502
    6. '(
' → logprob: -9.13341236114502
    7. ' ' → logprob: -10.38341236114502
    8. '   ' → logprob: -10.50841236114502
    9. 'self' → logprob: -12.00841236114502
    10. '       ' → logprob: -12.00841236114502

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008529706858098507
    2. ' ,' → logprob: -4.8835296630859375
    3. '(self' → logprob: -7.6335296630859375
    4. ')' → logprob: -8.508529663085938
    5. '(' → logprob: -9.133529663085938
    6. ' (' → logprob: -9.883529663085938
    7. 'self' → logprob: -10.133529663085938
    8. 's' → logprob: -11.258529663085938
    9. ' ' → logprob: -12.008529663085938
    10. ',self' → logprob: -12.383529663085938

Token 61: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6362218856811523
    2. 'c' → logprob: -0.7612218856811523
    3. 'self' → logprob: -5.886221885681152
    4. ' self' → logprob: -7.261221885681152
    5. '   ' → logprob: -10.136221885681152
    6. ' ' → logprob: -11.011221885681152
    7. 'j' → logprob: -11.136221885681152
    8. ')c' → logprob: -11.636221885681152
    9. '       ' → logprob: -11.886221885681152
    10. '    ' → logprob: -11.886221885681152

Token 62: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5903002023696899
    2. '):' → logprob: -0.8403002023696899
    3. '):
' → logprob: -4.3403000831604
    4. ' )' → logprob: -7.8403000831604
    5. '           ' → logprob: -8.590300559997559
    6. '       ' → logprob: -8.840300559997559
    7. '   ' → logprob: -8.840300559997559
    8. ' ):' → logprob: -8.965300559997559
    9. '(self' → logprob: -9.965300559997559
    10. ',' → logprob: -10.215300559997559

Token 63: '           ' (ID: 352)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.29200100898742676
    2. '           ' → logprob: -2.1670010089874268
    3. '[' → logprob: -2.2920010089874268
    4. ' [
' → logprob: -4.292000770568848
    5. '[
' → logprob: -4.417000770568848
    6. ' return' → logprob: -5.042000770568848
    7. '   ' → logprob: -5.792000770568848
    8. '       ' → logprob: -7.167000770568848
    9. 'return' → logprob: -7.167000770568848
    10. '[self' → logprob: -8.792000770568848

Token 64: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02883153222501278
    2. ' [' → logprob: -4.528831481933594
    3. '[
' → logprob: -4.528831481933594
    4. 'return' (adapté à ' return') → logprob: -6.028831481933594
    5. '[row' → logprob: -7.028831481933594
    6. '[column' → logprob: -7.153831481933594
    7. '[col' → logprob: -7.153831481933594
    8. '   ' → logprob: -7.528831481933594
    9. '[self' → logprob: -7.778831481933594
    10. ' return' → logprob: -8.028831481933594

Token 65: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.0851682797074318
    2. '[' → logprob: -2.5851683616638184
    3. '[self' → logprob: -5.335168361663818
    4. '[col' → logprob: -7.960168361663818
    5. '[
' → logprob: -8.33516788482666
    6. '[column' → logprob: -8.71016788482666
    7. ' [
' → logprob: -8.96016788482666
    8. ' ' → logprob: -8.96016788482666
    9. '[list' → logprob: -9.21016788482666
    10. '[int' → logprob: -9.46016788482666

Token 66: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005290918983519077
    2. 'row' → logprob: -5.255290985107422
    3. ' self' → logprob: -10.005290985107422
    4. '   ' → logprob: -12.130290985107422
    5. '       ' → logprob: -12.505290985107422
    6. '           ' → logprob: -13.255290985107422
    7. ' row' → logprob: -14.755290985107422
    8. '[self' → logprob: -15.255290985107422
    9. '(self' → logprob: -16.505290985107422
    10. '               ' → logprob: -16.505290985107422

Token 67: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -9.014684110297821e-06
    2. '.' → logprob: -11.875008583068848
    3. ' .' → logprob: -13.625008583068848
    4. 'data' → logprob: -14.250008583068848
    5. '.dat' → logprob: -16.750009536743164
    6. '.get' → logprob: -17.625009536743164
    7. '.user' → logprob: -18.125009536743164
    8. '.rows' → logprob: -18.875009536743164
    9. ').' → logprob: -19.125009536743164
    10. '.datas' → logprob: -19.125009536743164

Token 68: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.007055626716464758
    2. '[i' → logprob: -5.007055759429932
    3. '[row' → logprob: -8.007055282592773
    4. '[' → logprob: -12.007055282592773
    5. 'r' → logprob: -14.632055282592773
    6. '[t' → logprob: -15.507055282592773
    7. '[x' → logprob: -15.757055282592773
    8. '[j' → logprob: -15.757055282592773
    9. ' [' → logprob: -17.257055282592773
    10. '```' → logprob: -17.507055282592773

Token 69: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002387898974120617
    2. ']' → logprob: -6.127388000488281
    3. '[' → logprob: -9.377388000488281
    4. ' ][' → logprob: -9.752388000488281
    5. '[c' → logprob: -9.877388000488281
    6. '[
' → logprob: -12.252388000488281
    7. ' ' → logprob: -13.752388000488281
    8. ']
' → logprob: -14.002388000488281
    9. '[r' → logprob: -14.502388000488281
    10. '   ' → logprob: -15.127388000488281

Token 70: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002613358374219388
    2. ' c' → logprob: -8.250261306762695
    3. ')c' → logprob: -16.375261306762695
    4. '	c' → logprob: -17.375261306762695
    5. ' ' → logprob: -18.375261306762695
    6. '   ' → logprob: -18.500261306762695
    7. '  ' → logprob: -19.625261306762695
    8. ':c' → logprob: -20.000261306762695
    9. '    ' → logprob: -20.500261306762695
    10. ']' → logprob: -21.375261306762695

Token 71: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006747700739651918
    2. ' ]' → logprob: -5.006747722625732
    3. ' for' → logprob: -10.381747245788574
    4. 'for' → logprob: -14.256747245788574
    5. ']
' → logprob: -15.381747245788574
    6. '       ' → logprob: -15.756747245788574
    7. '           ' → logprob: -16.38174819946289
    8. ')' → logprob: -16.63174819946289
    9. '']' → logprob: -17.38174819946289
    10. '        ' → logprob: -17.50674819946289

Token 72: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27701276540756226
    2. ']' → logprob: -1.652012825012207
    3. ' ]' → logprob: -3.277012825012207
    4. 'for' → logprob: -4.777012825012207
    5. '           ' → logprob: -5.652012825012207
    6. '            ' → logprob: -8.527012825012207
    7. '        ' → logprob: -9.152012825012207
    8. '       ' → logprob: -9.152012825012207
    9. '               ' → logprob: -9.652012825012207
    10. '	for' → logprob: -10.152012825012207

Token 73: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.00045188379590399563
    2. 'r' → logprob: -8.125452041625977
    3. ' ' → logprob: -9.375452041625977
    4. ' range' → logprob: -9.625452041625977
    5. '	r' → logprob: -12.625452041625977
    6. 'range' → logprob: -14.625452041625977
    7. ' р' → logprob: -14.750452041625977
    8. ' ' → logprob: -15.375452041625977
    9. ' râ' → logprob: -15.750452041625977
    10. '<|end|>' → logprob: -16.125452041625977

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009967254009097815
    2. 'in' → logprob: -7.1259965896606445
    3. ' ' → logprob: -8.625996589660645
    4. '<|end|>' → logprob: -11.750996589660645
    5. ' ]' → logprob: -13.375996589660645
    6. ' range' → logprob: -13.625996589660645
    7. 'range' → logprob: -14.500996589660645
    8. ')' → logprob: -14.875996589660645
    9. ' )' → logprob: -15.125996589660645
    10. '        ' → logprob: -15.250996589660645

Token 75: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10020796209573746
    2. 'range' → logprob: -2.350208044052124
    3. ' xrange' → logprob: -14.350208282470703
    4. '	range' → logprob: -14.600208282470703
    5. ' ' → logprob: -15.975208282470703
    6. '   ' → logprob: -17.225208282470703
    7. ' rang' → logprob: -17.225208282470703
    8. ' ran' → logprob: -17.725208282470703
    9. '(range' → logprob: -17.850208282470703
    10. 'rang' → logprob: -18.350208282470703

Token 76: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.016185104846954346
    2. '(' → logprob: -4.141185283660889
    3. ' self' → logprob: -9.14118480682373
    4. ' (' → logprob: -10.64118480682373
    5. 'self' → logprob: -11.39118480682373
    6. '(s' → logprob: -12.14118480682373
    7. '(
' → logprob: -13.64118480682373
    8. ')' → logprob: -14.51618480682373
    9. '	self' → logprob: -14.89118480682373
    10. 's' → logprob: -15.01618480682373

Token 77: '.rows' (ID: 41542)
  Prédit: '.rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rows' → logprob: -0.08912627398967743
    2. '.' → logprob: -2.4641263484954834
    3. '.cols' → logprob: -9.714126586914062
    4. ' .' → logprob: -10.089126586914062
    5. '.
' → logprob: -10.089126586914062
    6. ').' → logprob: -11.839126586914062
    7. '.Rows' → logprob: -12.089126586914062
    8. 's' → logprob: -12.589126586914062
    9. '       ' → logprob: -12.714126586914062
    10. '.ro' → logprob: -12.839126586914062

Token 78: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3277786374092102
    2. ']' → logprob: -1.3277785778045654
    3. ')' → logprob: -4.5777788162231445
    4. '])' → logprob: -5.5777788162231445
    5. ' ]' → logprob: -8.577778816223145
    6. ')])' → logprob: -9.202778816223145
    7. '])]' → logprob: -10.577778816223145
    8. ' )' → logprob: -11.077778816223145
    9. ' ])' → logprob: -11.452778816223145
    10. '       ' → logprob: -12.702778816223145

Token 79: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8250913619995117
    2. '<|end|>' → logprob: -1.0750913619995117
    3. '       ' → logprob: -1.9500913619995117
    4. '   ' → logprob: -2.7000913619995117
    5. '<|end|>' → logprob: -5.950091361999512
    6. '```' → logprob: -6.325091361999512
    7. '    
' → logprob: -7.200091361999512
    8. '

' → logprob: -7.450091361999512
    9. ')' → logprob: -7.575091361999512
    10. ' ' → logprob: -7.575091361999512

Token 80: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5430187582969666
    2. 'def' (adapté à ' def') → logprob: -1.7930188179016113
    3. '   ' → logprob: -2.0430188179016113
    4. '       ' → logprob: -2.2930188179016113
    5. ' def' → logprob: -4.793018817901611
    6. '<|end|>' → logprob: -5.668018817901611
    7. '        
' → logprob: -6.293018817901611
    8. '    
' → logprob: -6.418018817901611
    9. '```' → logprob: -6.543018817901611
    10. ' ' → logprob: -7.293018817901611

Token 81: ' check' (ID: 2371)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.6944472789764404
    2. ' transpose' → logprob: -0.9444472789764404
    3. 'transpose' → logprob: -2.9444472789764404
    4. ' is' → logprob: -3.4444472789764404
    5. ' get' → logprob: -4.1944475173950195
    6. 'set' → logprob: -5.5694475173950195
    7. ' check' → logprob: -5.9444475173950195
    8. ' count' → logprob: -7.1944475173950195
    9. ' multiply' → logprob: -7.3194475173950195
    10. ' to' → logprob: -7.8194475173950195

Token 82: '_pattern' (ID: 50002)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10673462599515915
    2. '_pattern' → logprob: -2.60673451423645
    3. '_row' → logprob: -4.231734752655029
    4. '_cell' → logprob: -5.856734752655029
    5. '_rows' → logprob: -6.106734752655029
    6. '_line' → logprob: -6.981734752655029
    7. '_space' → logprob: -7.356734752655029
    8. '_column' → logprob: -7.606734752655029
    9. '_check' → logprob: -7.731734752655029
    10. '_in' → logprob: -8.106734275817871

Token 83: '_fe' (ID: 16058)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06476692110300064
    2. '_' → logprob: -3.0647668838500977
    3. '(self' → logprob: -4.189766883850098
    4. '_(' → logprob: -7.314766883850098
    5. 's' → logprob: -8.939766883850098
    6. ' (' → logprob: -10.939766883850098
    7. '(
' → logprob: -11.189766883850098
    8. '_space' → logprob: -11.189766883850098
    9. '(s' → logprob: -11.689766883850098
    10. 'self' → logprob: -11.689766883850098

Token 84: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.3063005805015564
    2. 'asible' → logprob: -2.056300640106201
    3. 'et' → logprob: -2.681300640106201
    4. 't' → logprob: -3.681300640106201
    5. 'edback' → logprob: -5.056300640106201
    6. 'ature' → logprob: -5.431300640106201
    7. 'asi' → logprob: -5.556300640106201
    8. 'atures' → logprob: -5.681300640106201
    9. 'ets' → logprob: -5.681300640106201
    10. 'a' → logprob: -5.681300640106201

Token 85: 'ibility' (ID: 4295)
  Prédit: 'ibility'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibility' → logprob: -0.4742896854877472
    2. 'ible' → logprob: -0.9742896556854248
    3. 'ibl' → logprob: -9.599289894104004
    4. 'ability' → logprob: -10.349289894104004
    5. 'i' → logprob: -10.599289894104004
    6. 'able' → logprob: -10.974289894104004
    7. 'ibil' → logprob: -11.099289894104004
    8. '```' → logprob: -11.224289894104004
    9. 'ibly' → logprob: -11.349289894104004
    10. 'ib' → logprob: -11.849289894104004

Token 86: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05508933588862419
    2. '(self' → logprob: -2.930089235305786
    3. '(
' → logprob: -8.930088996887207
    4. ' (' → logprob: -10.555088996887207
    5. '(s' → logprob: -10.805088996887207
    6. '_' → logprob: -11.555088996887207
    7. '(

' → logprob: -11.680088996887207
    8. 'self' → logprob: -12.555088996887207
    9. 's' → logprob: -13.180088996887207
    10. '_(' → logprob: -13.180088996887207

Token 87: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026812130585312843
    2. ' ,' → logprob: -3.6518120765686035
    3. '):' → logprob: -7.7768120765686035
    4. ')' → logprob: -10.526812553405762
    5. ' ):' → logprob: -11.151812553405762
    6. ',r' → logprob: -11.276812553405762
    7. ' ' → logprob: -12.026812553405762
    8. ',p' → logprob: -12.401812553405762
    9. ',c' → logprob: -12.526812553405762
    10. '_,' → logprob: -12.776812553405762

Token 88: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5746361613273621
    2. ':' → logprob: -1.3246362209320068
    3. '       ' → logprob: -1.9496362209320068
    4. '(self' → logprob: -4.699635982513428
    5. '(
' → logprob: -4.949635982513428
    6. '   ' → logprob: -5.949635982513428
    7. '        ' → logprob: -6.074635982513428
    8. ':
' → logprob: -6.449635982513428
    9. ' ' → logprob: -6.574635982513428
    10. '()' → logprob: -7.074635982513428

Token 89: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1480298936367035
    2. '        ' → logprob: -2.8980298042297363
    3. '       ' → logprob: -3.3980298042297363
    4. ' 
' → logprob: -4.273029804229736
    5. 'n' → logprob: -4.398029804229736
    6. '    ' → logprob: -5.148029804229736
    7. '           ' → logprob: -5.523029804229736
    8. '
' → logprob: -5.898029804229736
    9. 'r' → logprob: -6.898029804229736
    10. ' ' → logprob: -6.898029804229736

Token 90: ' We' (ID: 1416)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1568859964609146
    2. '        ' → logprob: -2.406886100769043
    3. ' #' → logprob: -4.406886100769043
    4. '    ' → logprob: -4.656886100769043
    5. ' for' → logprob: -4.781886100769043
    6. 'r' → logprob: -5.781886100769043
    7. 'for' → logprob: -5.781886100769043
    8. ' ' → logprob: -6.031886100769043
    9. ' r' → logprob: -6.156886100769043
    10. '            ' → logprob: -6.156886100769043

Token 91: ' want' (ID: 1682)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3656904697418213
    2. '       ' → logprob: -1.4906904697418213
    3. ' can' → logprob: -1.6156904697418213
    4. ' ' → logprob: -2.6156904697418213
    5. ' need' → logprob: -2.6156904697418213
    6. ' def' → logprob: -3.7406904697418213
    7. ' for' → logprob: -3.8656904697418213
    8. '    ' → logprob: -4.115690231323242
    9. ' have' → logprob: -4.240690231323242
    10. ''ll' → logprob: -4.490690231323242

Token 92: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03401828557252884
    2. ' ' → logprob: -3.6590182781219482
    3. 'to' → logprob: -5.534018516540527
    4. ' t' → logprob: -6.159018516540527
    5. '    ' → logprob: -7.159018516540527
    6. ' a' → logprob: -8.659018516540527
    7. ' two' → logprob: -9.034018516540527
    8. '   ' → logprob: -9.409018516540527
    9. 'def' → logprob: -9.534018516540527
    10. ' def' → logprob: -9.659018516540527

Token 93: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.08081761747598648
    2. ' ensure' → logprob: -2.955817699432373
    3. ' ' → logprob: -4.955817699432373
    4. ' return' → logprob: -5.455817699432373
    5. 'check' → logprob: -6.080817699432373
    6. ' determine' → logprob: -6.205817699432373
    7. ' make' → logprob: -6.955817699432373
    8. ' see' → logprob: -6.955817699432373
    9. ' validate' → logprob: -7.080817699432373
    10. ' find' → logprob: -7.205817699432373

Token 94: ' whether' (ID: 5588)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.062224239110946655
    2. ' whether' → logprob: -3.8122241497039795
    3. ' for' → logprob: -4.437224388122559
    4. '   ' → logprob: -4.687224388122559
    5. ' ' → logprob: -5.187224388122559
    6. ' the' → logprob: -5.312224388122559
    7. ' that' → logprob: -6.312224388122559
    8. 'if' → logprob: -6.812224388122559
    9. '    ' → logprob: -7.187224388122559
    10. '       ' → logprob: -7.312224388122559

Token 95: ' rows' (ID: 13585)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0230281352996826
    2. ' all' → logprob: -1.0230281352996826
    3. ' any' → logprob: -2.2730281352996826
    4. ' ' → logprob: -2.8980281352996826
    5. ' there' → logprob: -3.3980281352996826
    6. ' self' → logprob: -3.7730281352996826
    7. ' each' → logprob: -3.8980281352996826
    8. ' a' → logprob: -4.148028373718262
    9. 'the' → logprob: -4.648028373718262
    10. ' (' → logprob: -5.523028373718262

Token 96: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.343326598405838
    2. ' can' → logprob: -1.9683265686035156
    3. 'and' → logprob: -2.7183265686035156
    4. ' ' → logprob: -2.8433265686035156
    5. ' have' → logprob: -4.718326568603516
    6. ' are' → logprob: -4.718326568603516
    7. '   ' → logprob: -6.218326568603516
    8. ' or' → logprob: -6.343326568603516
    9. 'can' → logprob: -6.843326568603516
    10. ',' → logprob: -7.468326568603516

Token 97: ' columns' (ID: 15697)
  Prédit: ' columns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' columns' → logprob: -0.06328155845403671
    2. ' cols' → logprob: -3.063281536102295
    3. 'columns' → logprob: -4.313281536102295
    4. 'cols' → logprob: -6.813281536102295
    5. ' ' → logprob: -10.313282012939453
    6. ' ' → logprob: -11.188282012939453
    7. '   ' → logprob: -11.563282012939453
    8. ' col' → logprob: -11.688282012939453
    9. ' the' → logprob: -11.938282012939453
    10. '  ' → logprob: -12.813282012939453

Token 98: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.11212858557701111
    2. ' follow' → logprob: -3.237128496170044
    3. ' have' → logprob: -3.612128496170044
    4. ' alternate' → logprob: -4.237128734588623
    5. ' are' → logprob: -4.362128734588623
    6. 'can' → logprob: -5.612128734588623
    7. '           ' → logprob: -6.112128734588623
    8. ' match' → logprob: -7.112128734588623
    9. ' alternating' → logprob: -7.237128734588623
    10. ' altern' → logprob: -7.237128734588623

Token 99: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.014864330179989338
    2. ' have' → logprob: -5.014864444732666
    3. ' alternate' → logprob: -5.764864444732666
    4. 'be' → logprob: -6.639864444732666
    5. ' follow' → logprob: -6.639864444732666
    6. ' form' → logprob: -7.514864444732666
    7. ' ' → logprob: -7.764864444732666
    8. 'alternate' → logprob: -7.889864444732666
    9. '<|end|>' → logprob: -8.889863967895508
    10. 'have' → logprob: -9.389863967895508

Token 100: ' rearr' (ID: 98785)
  Prédit: ' arranged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arranged' → logprob: -1.1110132932662964
    2. ' split' → logprob: -1.8610132932662964
    3. ' rearr' → logprob: -2.486013412475586
    4. ' partition' → logprob: -2.611013412475586
    5. ' divided' → logprob: -2.736013412475586
    6. ' ' → logprob: -2.986013412475586
    7. ' represented' → logprob: -3.361013412475586
    8. ' colored' → logprob: -3.361013412475586
    9. ' made' → logprob: -3.611013412475586
    10. ' assigned' → logprob: -3.861013412475586

Token 101: 'anged' (ID: 5717)
  Prédit: 'anged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anged' → logprob: -9.233804303221405e-05
    2. 'enged' → logprob: -10.250092506408691
    3. '   ' → logprob: -11.125092506408691
    4. 'anging' → logprob: -12.250092506408691
    5. 'ang' → logprob: -12.375092506408691
    6. '```' → logprob: -12.500092506408691
    7. 'an' → logprob: -13.000092506408691
    8. 'ANGED' → logprob: -13.000092506408691
    9. 'aged' → logprob: -13.125092506408691
    10. '	' → logprob: -13.375092506408691

Token 102: ' 
' (ID: 793)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03701052442193031
    2. ' so' → logprob: -4.162010669708252
    3. '           ' → logprob: -4.287010669708252
    4. '<|end|>' → logprob: -5.537010669708252
    5. ' such' → logprob: -7.162010669708252
    6. ' ' → logprob: -7.537010669708252
    7. 'to' → logprob: -7.787010669708252
    8. ',' → logprob: -8.162010192871094
    9. '       ' → logprob: -8.537010192871094
    10. ' into' → logprob: -8.787010192871094

Token 103: '           ' (ID: 352)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.056411050260066986
    2. ' so' → logprob: -3.306411027908325
    3. '           ' → logprob: -4.431411266326904
    4. ' ' → logprob: -5.806411266326904
    5. ',' → logprob: -6.931411266326904
    6. ' in' → logprob: -7.931411266326904
    7. ' and' → logprob: -8.056410789489746
    8. ' such' → logprob: -8.056410789489746
    9. '<|end|>' → logprob: -8.681410789489746
    10. '   ' → logprob: -8.681410789489746

Token 104: ' #' (ID: 1069)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04947792738676071
    2. ' so' → logprob: -3.5494778156280518
    3. 'to' → logprob: -4.174478054046631
    4. ' such' → logprob: -6.049478054046631
    5. '           ' → logprob: -6.924478054046631
    6. ' into' → logprob: -8.299477577209473
    7. 'so' → logprob: -8.549477577209473
    8. ' in' → logprob: -9.299477577209473
    9. '       ' → logprob: -9.674477577209473
    10. 'such' → logprob: -10.174477577209473

Token 105: ' so' (ID: 813)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3351195752620697
    2. ' so' → logprob: -1.960119605064392
    3. 'to' → logprob: -2.2101194858551025
    4. ' such' → logprob: -3.7101194858551025
    5. 'so' → logprob: -5.585119724273682
    6. 'such' → logprob: -5.960119724273682
    7. ' into' → logprob: -6.335119724273682
    8. '           ' → logprob: -6.835119724273682
    9. ' in' → logprob: -8.335119247436523
    10. 'in' → logprob: -9.210119247436523

Token 106: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.0013846398796886206
    2. ' ' → logprob: -7.251384735107422
    3. 'that' → logprob: -8.001384735107422
    4. '           ' → logprob: -9.376384735107422
    5. ' to' → logprob: -9.376384735107422
    6. ' the' → logprob: -9.501384735107422
    7. ' as' → logprob: -10.376384735107422
    8. ' they' → logprob: -11.251384735107422
    9. ' their' → logprob: -11.501384735107422
    10. '   ' → logprob: -12.126384735107422

Token 107: ' the' (ID: 290)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.9366273283958435
    2. ' all' → logprob: -1.4366273880004883
    3. ' each' → logprob: -1.6866273880004883
    4. ' every' → logprob: -2.5616273880004883
    5. ' the' → logprob: -3.1866273880004883
    6. ' for' → logprob: -3.5616273880004883
    7. 'each' → logprob: -4.936627388000488
    8. ' adjacent' → logprob: -5.186627388000488
    9. 'all' → logprob: -5.561627388000488
    10. ' there' → logprob: -5.561627388000488

Token 108: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -1.1763567924499512
    2. 'y' → logprob: -1.8013567924499512
    3. ' entire' → logprob: -1.9263567924499512
    4. 're' → logprob: -3.176356792449951
    5. ' matrix' → logprob: -3.176356792449951
    6. ' rows' → logprob: -3.301356792449951
    7. ' cells' → logprob: -3.426356792449951
    8. 'ir' → logprob: -3.551356792449951
    9. ' data' → logprob: -3.676356792449951
    10. 'n' → logprob: -4.051356792449951

Token 109: ' is' (ID: 382)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6858016848564148
    2. ' is' → logprob: -1.1858017444610596
    3. ' altern' → logprob: -2.6858017444610596
    4. ' matches' → logprob: -2.8108017444610596
    5. ' forms' → logprob: -3.8108017444610596
    6. ' follows' → logprob: -4.8108015060424805
    7. 's' → logprob: -5.0608015060424805
    8. '       ' → logprob: -5.4358015060424805
    9. ' alternating' → logprob: -5.8108015060424805
    10. '   ' → logprob: -6.4358015060424805

Token 110: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -1.4072712659835815
    2. ' alternating' → logprob: -1.6572712659835815
    3. ' checker' → logprob: -1.9072712659835815
    4. ' a' → logprob: -2.407271385192871
    5. ' valid' → logprob: -2.782271385192871
    6. ' consistent' → logprob: -2.782271385192871
    7. ' either' → logprob: -3.782271385192871
    8. ' possible' → logprob: -3.782271385192871
    9. ' "' → logprob: -3.907271385192871
    10. ' ' → logprob: -3.907271385192871

Token 111: 'ered' (ID: 21189)
  Prédit: 'ered'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ered' → logprob: -0.06657951325178146
    2. 'er' → logprob: -2.816579580307007
    3. 'e' → logprob: -6.691579341888428
    4. '```' → logprob: -7.191579341888428
    5. 'ere' → logprob: -7.816579341888428
    6. '   ' → logprob: -7.941579341888428
    7. ' ered' → logprob: -8.691579818725586
    8. '
' → logprob: -9.191579818725586
    9. '\' → logprob: -9.191579818725586
    10. '_' → logprob: -9.254079818725586

Token 112: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5306994915008545
    2. '.' → logprob: -2.1556994915008545
    3. '
' → logprob: -2.2806994915008545
    4. '       ' → logprob: -2.5306994915008545
    5. '<|end|>' → logprob: -2.5306994915008545
    6. ':
' → logprob: -4.530699729919434
    7. ',' → logprob: -5.155699729919434
    8. '   ' → logprob: -5.780699729919434
    9. ' ' → logprob: -6.280699729919434
    10. '.
' → logprob: -6.405699729919434

Token 113: ' After' (ID: 6311)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6000528335571289
    2. '<|end|>' → logprob: -1.600052833557129
    3. '
' → logprob: -1.725052833557129
    4. ' ' → logprob: -4.350052833557129
    5. ':' → logprob: -4.475052833557129
    6. '        
' → logprob: -4.600052833557129
    7. '        ' → logprob: -5.225052833557129
    8. '   ' → logprob: -5.350052833557129
    9. '<|end|>' → logprob: -5.475052833557129
    10. ' 
' → logprob: -5.725052833557129

Token 114: ' any' (ID: 1062)
  Prédit: ' rearr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rearr' → logprob: -1.506567120552063
    2. ' the' → logprob: -1.631567120552063
    3. ' reading' → logprob: -2.1315670013427734
    4. ' that' → logprob: -2.7565670013427734
    5. ' this' → logprob: -2.7565670013427734
    6. ' checking' → logprob: -2.8815670013427734
    7. ' all' → logprob: -3.2565670013427734
    8. ' re' → logprob: -3.6315670013427734
    9. 'all' → logprob: -3.8815670013427734
    10. '   ' → logprob: -4.006567001342773

Token 115: ' swapping' (ID: 132194)
  Prédit: ' rearr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rearr' → logprob: -0.17005197703838348
    2. 're' → logprob: -3.2950520515441895
    3. ' permutation' → logprob: -3.5450520515441895
    4. ' row' → logprob: -4.0450520515441895
    5. ' swap' → logprob: -4.2950520515441895
    6. 'row' → logprob: -4.4200520515441895
    7. '   ' → logprob: -4.5450520515441895
    8. ' re' → logprob: -4.5450520515441895
    9. ' possible' → logprob: -5.7950520515441895
    10. ' valid' → logprob: -5.7950520515441895

Token 116: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.015633463859558
    2. ' of' → logprob: -1.015633463859558
    3. ' rows' → logprob: -1.515633463859558
    4. ' the' → logprob: -3.7656335830688477
    5. 'rows' → logprob: -4.140633583068848
    6. ' ,' → logprob: -5.515633583068848
    7. '   ' → logprob: -5.515633583068848
    8. ' operations' → logprob: -6.890633583068848
    9. 'of' → logprob: -7.015633583068848
    10. ' and' → logprob: -7.015633583068848

Token 117: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.14432525634765625
    2. 'rows' → logprob: -2.0193252563476562
    3. ' the' → logprob: -7.644325256347656
    4. 'row' → logprob: -8.144325256347656
    5. ' row' → logprob: -8.269325256347656
    6. ' entire' → logprob: -9.019325256347656
    7. ' any' → logprob: -9.394325256347656
    8. 'the' → logprob: -9.644325256347656
    9. ' two' → logprob: -10.019325256347656
    10. ' a' → logprob: -10.144325256347656

Token 118: ' 
' (ID: 793)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3256365656852722
    2. ' or' → logprob: -1.325636625289917
    3. ',' → logprob: -5.200636386871338
    4. 'and' → logprob: -5.200636386871338
    5. 'or' → logprob: -7.950636386871338
    6. '           ' → logprob: -8.075636863708496
    7. '   ' → logprob: -8.575636863708496
    8. '       ' → logprob: -8.575636863708496
    9. '<|end|>' → logprob: -9.700636863708496
    10. ')' → logprob: -10.075636863708496

Token 119: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.21534010767936707
    2. ' or' → logprob: -1.8403401374816895
    3. '           ' → logprob: -3.7153401374816895
    4. 'and' → logprob: -4.8403401374816895
    5. ',' → logprob: -6.3403401374816895
    6. 'or' → logprob: -7.5903401374816895
    7. '   ' → logprob: -8.340339660644531
    8. '       ' → logprob: -8.840339660644531
    9. ' ' → logprob: -10.965339660644531
    10. '  ' → logprob: -11.840339660644531

Token 120: ' #' (ID: 1069)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7799742817878723
    2. 'and' → logprob: -1.2799742221832275
    3. ' or' → logprob: -1.4049742221832275
    4. 'or' → logprob: -4.154974460601807
    5. '   ' → logprob: -6.154974460601807
    6. '       ' → logprob: -8.279973983764648
    7. ',' → logprob: -9.654973983764648
    8. '           ' → logprob: -11.154973983764648
    9. ' ' → logprob: -12.154973983764648
    10. '  ' → logprob: -12.154973983764648

Token 121: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4488057494163513
    2. ' or' → logprob: -1.323805809020996
    3. 'and' → logprob: -2.573805809020996
    4. 'or' → logprob: -4.573805809020996
    5. ' columns' → logprob: -5.448805809020996
    6. 'columns' → logprob: -5.573805809020996
    7. ',' → logprob: -8.323805809020996
    8. ' cols' → logprob: -8.948805809020996
    9. '   ' → logprob: -9.073805809020996
    10. 'cols' → logprob: -9.323805809020996

Token 122: ' columns' (ID: 15697)
  Prédit: ' columns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' columns' → logprob: -0.12887698411941528
    2. 'columns' → logprob: -2.1288769245147705
    3. ' cols' → logprob: -6.75387716293335
    4. 'cols' → logprob: -7.37887716293335
    5. ' ' → logprob: -10.878876686096191
    6. ' of' → logprob: -11.003876686096191
    7. ' ' → logprob: -11.128876686096191
    8. ' col' → logprob: -11.253876686096191
    9. 'col' → logprob: -11.378876686096191
    10. '.columns' → logprob: -11.628876686096191

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053818728774785995
    2. '       ' → logprob: -3.178818702697754
    3. ':' → logprob: -5.303818702697754
    4. ' ,' → logprob: -6.178818702697754
    5. '           ' → logprob: -6.803818702697754
    6. '.' → logprob: -7.428818702697754
    7. '   ' → logprob: -7.553818702697754
    8. ',
' → logprob: -7.928818702697754
    9. '
' → logprob: -8.303818702697754
    10. '        
' → logprob: -8.678818702697754

Token 124: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.14254449307918549
    2. ' each' → logprob: -2.5175445079803467
    3. ' all' → logprob: -3.3925445079803467
    4. ' there' → logprob: -4.767544269561768
    5. ' return' → logprob: -6.017544269561768
    6. ' we' → logprob: -6.392544269561768
    7. ' every' → logprob: -6.642544269561768
    8. ' a' → logprob: -7.267544269561768
    9. '       ' → logprob: -7.517544269561768
    10. 'the' → logprob: -7.517544269561768

Token 125: ' relative' (ID: 15001)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.854317843914032
    2. ' pattern' → logprob: -1.3543179035186768
    3. ' cells' → logprob: -2.1043179035186768
    4. ' matrix' → logprob: -3.3543179035186768
    5. ' top' → logprob: -3.8543179035186768
    6. 'pattern' → logprob: -3.8543179035186768
    7. ' color' → logprob: -4.479317665100098
    8. ' data' → logprob: -4.729317665100098
    9. ' rows' → logprob: -4.854317665100098
    10. ' check' → logprob: -4.854317665100098

Token 126: ' pattern' (ID: 8302)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.57477205991745
    2. ' parity' → logprob: -2.1997721195220947
    3. ' differences' → logprob: -2.8247721195220947
    4. ' order' → logprob: -3.0747721195220947
    5. ' ordering' → logprob: -3.3247721195220947
    6. ' pattern' → logprob: -3.3247721195220947
    7. ' difference' → logprob: -3.4497721195220947
    8. ' arrangement' → logprob: -3.4497721195220947
    9. ' spacing' → logprob: -3.8247721195220947
    10. 'positions' → logprob: -4.199771881103516

Token 127: ' between' (ID: 2870)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.1979478597640991
    2. ' remains' → logprob: -1.3229478597640991
    3. ' will' → logprob: -1.9479478597640991
    4. ' should' → logprob: -2.4479479789733887
    5. ' must' → logprob: -2.6979479789733887
    6. ' can' → logprob: -3.3229479789733887
    7. ' would' → logprob: -4.072947978973389
    8. 's' → logprob: -4.447947978973389
    9. ' in' → logprob: -4.447947978973389
    10. ' is' → logprob: -4.572947978973389

Token 128: ' rows' (ID: 13585)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.3541849851608276
    2. ' adjacent' → logprob: -1.6041849851608276
    3. ' cells' → logprob: -1.7291849851608276
    4. ' rows' → logprob: -1.9791849851608276
    5. 'adj' → logprob: -2.854185104370117
    6. ' all' → logprob: -3.354185104370117
    7. 'any' → logprob: -3.604185104370117
    8. 'rows' → logprob: -3.854185104370117
    9. 'cells' → logprob: -4.104185104370117
    10. ' neighboring' → logprob: -4.229185104370117

Token 129: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06343071162700653
    2. 'and' → logprob: -3.1884307861328125
    3. ' must' → logprob: -5.5634307861328125
    4. '       ' → logprob: -5.5634307861328125
    5. ' will' → logprob: -5.9384307861328125
    6. ' is' → logprob: -6.0634307861328125
    7. '           ' → logprob: -6.1884307861328125
    8. ' should' → logprob: -6.5634307861328125
    9. ' remains' → logprob: -6.6884307861328125
    10. ' can' → logprob: -6.8134307861328125

Token 130: ' columns' (ID: 15697)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'columns' → logprob: -0.5248460173606873
    2. ' columns' → logprob: -0.8998460173606873
    3. 'rows' → logprob: -7.524846076965332
    4. 'cols' → logprob: -7.774846076965332
    5. ' rows' → logprob: -8.274846076965332
    6. ' ' → logprob: -8.524846076965332
    7. ' their' → logprob: -9.399846076965332
    8. ' cols' → logprob: -9.774846076965332
    9. ' the' → logprob: -10.524846076965332
    10. '.columns' → logprob: -10.649846076965332

Token 131: ' must' (ID: 2804)
  Prédit: ' remains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remains' → logprob: -0.6196760535240173
    2. ' can' → logprob: -1.744676113128662
    3. ' must' → logprob: -2.369676113128662
    4. ' will' → logprob: -2.744676113128662
    5. ' is' → logprob: -3.119676113128662
    6. '           ' → logprob: -3.869676113128662
    7. ' should' → logprob: -3.869676113128662
    8. '#' → logprob: -4.744676113128662
    9. 'must' → logprob: -5.119676113128662
    10. '       ' → logprob: -5.494676113128662

Token 132: ' be' (ID: 413)
  Prédit: ' remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remain' → logprob: -0.24365369975566864
    2. ' be' → logprob: -2.2436537742614746
    3. 'remain' → logprob: -2.6186537742614746
    4. ' alternate' → logprob: -4.118653774261475
    5. ' match' → logprob: -5.493653774261475
    6. 'be' → logprob: -5.493653774261475
    7. ' not' → logprob: -5.743653774261475
    8. ' ' → logprob: -6.493653774261475
    9. 'alternate' → logprob: -6.493653774261475
    10. ' follow' → logprob: -6.868653774261475

Token 133: ' consistent' (ID: 20434)
  Prédit: ' consistent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' consistent' → logprob: -0.6429235339164734
    2. ' preserved' → logprob: -0.8929235339164734
    3. ' maintained' → logprob: -3.392923593521118
    4. 'consistent' → logprob: -5.017923355102539
    5. 'maint' → logprob: -5.267923355102539
    6. ' such' → logprob: -5.517923355102539
    7. 'pres' → logprob: -5.642923355102539
    8. ' the' → logprob: -5.767923355102539
    9. ' ' → logprob: -7.017923355102539
    10. ' either' → logprob: -7.017923355102539

Token 134: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5331014394760132
    2. '<|end|>' → logprob: -1.6581014394760132
    3. '       ' → logprob: -1.7831014394760132
    4. ',' → logprob: -3.9081015586853027
    5. '           ' → logprob: -5.158101558685303
    6. '
' → logprob: -5.158101558685303
    7. ':' → logprob: -5.283101558685303
    8. ' ' → logprob: -5.908101558685303
    9. '        
' → logprob: -5.908101558685303
    10. '#' → logprob: -6.033101558685303

Token 135: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23012995719909668
    2. '<|end|>' → logprob: -2.3551299571990967
    3. '           ' → logprob: -3.8551299571990967
    4. '
' → logprob: -3.9801299571990967
    5. ' ' → logprob: -3.9801299571990967
    6. '        
' → logprob: -4.605130195617676
    7. '   ' → logprob: -5.105130195617676
    8. '    ' → logprob: -5.105130195617676
    9. '        ' → logprob: -5.230130195617676
    10. '\' → logprob: -5.605130195617676

Token 136: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.515524685382843
    2. '
' → logprob: -1.2655246257781982
    3. '           ' → logprob: -3.2655246257781982
    4. ' ' → logprob: -3.7655246257781982
    5. '<|end|>' → logprob: -3.7655246257781982
    6. ' 
' → logprob: -5.015524864196777
    7. '        ' → logprob: -5.140524864196777
    8. '#' (adapté à ' #') → logprob: -5.390524864196777
    9. '        
' → logprob: -5.390524864196777
    10. '   ' → logprob: -5.515524864196777

Token 137: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21989277005195618
    2. '       ' → logprob: -2.469892740249634
    3. ' for' → logprob: -3.844892740249634
    4. '        ' → logprob: -4.344892978668213
    5. '#' → logprob: -4.469892978668213
    6. 'for' → logprob: -4.719892978668213
    7. '
' → logprob: -4.719892978668213
    8. ' #' → logprob: -5.094892978668213
    9. 'pattern' → logprob: -5.219892978668213
    10. ' ' → logprob: -5.719892978668213

Token 138: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5654950737953186
    2. '    ' → logprob: -1.4404950141906738
    3. ' rows' → logprob: -2.815495014190674
    4. 'for' → logprob: -3.690495014190674
    5. ' def' → logprob: -4.065495014190674
    6. ' ' → logprob: -4.190495014190674
    7. ' row' → logprob: -4.315495014190674
    8. '   ' → logprob: -4.690495014190674
    9. ' valid' → logprob: -4.940495014190674
    10. ' n' → logprob: -5.065495014190674

Token 139: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1740812212228775
    2. ' first' → logprob: -2.174081325531006
    3. ' rows' → logprob: -4.799081325531006
    4. ' row' → logprob: -4.924081325531006
    5. ' return' → logprob: -5.174081325531006
    6. ' n' → logprob: -5.299081325531006
    7. ' base' → logprob: -5.924081325531006
    8. 'for' → logprob: -6.049081325531006
    9. ' pattern' → logprob: -6.174081325531006
    10. ' f' → logprob: -6.424081325531006

Token 140: ' need' (ID: 1309)
  Prédit: ' need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.2801647186279297
    2. ' can' → logprob: -1.9051647186279297
    3. ' want' → logprob: -3.7801647186279297
    4. ' ' → logprob: -4.53016471862793
    5. ' check' → logprob: -4.65516471862793
    6. 'def' → logprob: -4.78016471862793
    7. 'need' → logprob: -4.78016471862793
    8. ' def' → logprob: -4.90516471862793
    9. ' must' → logprob: -5.03016471862793
    10. ' should' → logprob: -5.28016471862793

Token 141: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.004617033991962671
    2. 'to' → logprob: -5.754617214202881
    3. ' ' → logprob: -7.129617214202881
    4. '    ' → logprob: -8.129616737365723
    5. '  ' → logprob: -8.754616737365723
    6. '   ' → logprob: -9.129616737365723
    7. ' a' → logprob: -10.129616737365723
    8. ' t' → logprob: -11.379616737365723
    9. ' two' → logprob: -12.754616737365723
    10. ' ' → logprob: -12.879616737365723

Token 142: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.4522702693939209
    2. ' determine' → logprob: -2.327270269393921
    3. ' compare' → logprob: -2.452270269393921
    4. ' return' → logprob: -2.827270269393921
    5. ' verify' → logprob: -3.452270269393921
    6. ' find' → logprob: -3.952270269393921
    7. ' ensure' → logprob: -4.2022705078125
    8. ' validate' → logprob: -4.3272705078125
    9. ' analyze' → logprob: -4.5772705078125
    10. ' establish' → logprob: -5.2022705078125

Token 143: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18770121037960052
    2. ' whether' → logprob: -2.3127012252807617
    3. ' the' → logprob: -3.4377012252807617
    4. ' that' → logprob: -4.437701225280762
    5. ' ' → logprob: -5.437701225280762
    6. '   ' → logprob: -5.562701225280762
    7. ' for' → logprob: -5.687701225280762
    8. '       ' → logprob: -5.812701225280762
    9. ' rows' → logprob: -5.937701225280762
    10. 'if' → logprob: -6.187701225280762

Token 144: ' rows' (ID: 13585)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.9122326374053955
    2. ' the' → logprob: -1.1622326374053955
    3. ' there' → logprob: -1.5372326374053955
    4. 'the' → logprob: -4.412232398986816
    5. ' for' → logprob: -4.787232398986816
    6. ' self' → logprob: -4.787232398986816
    7. ' ' → logprob: -4.787232398986816
    8. 'all' → logprob: -5.037232398986816
    9. 'self' → logprob: -5.537232398986816
    10. ' (' → logprob: -5.537232398986816

Token 145: ' can' (ID: 665)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1290939748287201
    2. ' can' → logprob: -2.879093885421753
    3. 'and' → logprob: -3.379093885421753
    4. ' are' → logprob: -4.379094123840332
    5. ' ' → logprob: -5.379094123840332
    6. ' or' → logprob: -5.379094123840332
    7. '[' → logprob: -5.504094123840332
    8. '   ' → logprob: -6.629094123840332
    9. ' have' → logprob: -6.754094123840332
    10. '           ' → logprob: -7.254094123840332

Token 146: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.006640290841460228
    2. 'be' → logprob: -5.131640434265137
    3. ' and' → logprob: -8.756640434265137
    4. ' not' → logprob: -8.881640434265137
    5. ' only' → logprob: -9.006640434265137
    6. ' have' → logprob: -9.631640434265137
    7. ' form' → logprob: -10.131640434265137
    8. ' ' → logprob: -10.381640434265137
    9. ' either' → logprob: -10.506640434265137
    10. '_be' → logprob: -11.256640434265137

Token 147: ' grouped' (ID: 73263)
  Prédit: ' partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partition' → logprob: -1.3747249841690063
    2. 'partition' → logprob: -1.4997249841690063
    3. ' arranged' → logprob: -1.9997249841690063
    4. 'aligned' → logprob: -2.749724864959717
    5. ' grouped' → logprob: -2.749724864959717
    6. ' rearr' → logprob: -3.249724864959717
    7. 'arr' → logprob: -3.499724864959717
    8. 'group' → logprob: -4.124724864959717
    9. ' divided' → logprob: -4.124724864959717
    10. 'matched' → logprob: -4.124724864959717

Token 148: ' into' (ID: 1511)
  Prédit: ' into'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.005575594492256641
    2. 'into' → logprob: -6.005575656890869
    3. ' in' → logprob: -6.380575656890869
    4. ' and' → logprob: -7.255575656890869
    5. ' as' → logprob: -8.005575180053711
    6. ' by' → logprob: -8.755575180053711
    7. 'and' → logprob: -9.880575180053711
    8. ' to' → logprob: -10.380575180053711
    9. ' or' → logprob: -10.630575180053711
    10. 'in' → logprob: -10.755575180053711

Token 149: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.0578765906393528
    2. 'two' → logprob: -2.9328765869140625
    3. ' exactly' → logprob: -6.9328765869140625
    4. ' at' → logprob: -7.3078765869140625
    5. ' pairs' → logprob: -7.3078765869140625
    6. ' sets' → logprob: -9.307876586914062
    7. ' ' → logprob: -9.307876586914062
    8. ' classes' → logprob: -9.432876586914062
    9. ' patterns' → logprob: -9.557876586914062
    10. '2' → logprob: -9.557876586914062

Token 150: ' types' (ID: 6009)
  Prédit: ' groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groups' → logprob: -1.1492544412612915
    2. ' sets' → logprob: -1.5242544412612915
    3. ' classes' → logprob: -1.5242544412612915
    4. ' types' → logprob: -2.399254322052002
    5. ' categories' → logprob: -3.149254322052002
    6. 'types' → logprob: -3.274254322052002
    7. ' patterns' → logprob: -3.774254322052002
    8. 'classes' → logprob: -4.149254322052002
    9. 'groups' → logprob: -4.274254322052002
    10. 'categories' → logprob: -4.774254322052002

Token 151: ' alternating' (ID: 125099)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5011121034622192
    2. ':' → logprob: -1.5011121034622192
    3. ' and' → logprob: -2.6261119842529297
    4. '       ' → logprob: -3.3761119842529297
    5. '.' → logprob: -3.6261119842529297
    6. '           ' → logprob: -3.7511119842529297
    7. ' (' → logprob: -5.87611198425293
    8. ' or' → logprob: -5.87611198425293
    9. '   ' → logprob: -6.00111198425293
    10. ' ' → logprob: -6.50111198425293

Token 152: ' 
' (ID: 793)
  Prédit: ' patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' patterns' → logprob: -0.9384796023368835
    2. ' and' → logprob: -2.0634796619415283
    3. ' rows' → logprob: -2.1884796619415283
    4. ',' → logprob: -2.4384796619415283
    5. ' or' → logprob: -3.0634796619415283
    6. ' classes' → logprob: -3.0634796619415283
    7. '   ' → logprob: -3.1884796619415283
    8. ' in' → logprob: -3.3134796619415283
    9. ' between' → logprob: -3.9384796619415283
    10. ':' → logprob: -4.313479423522949

Token 153: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6436501741409302
    2. 'ly' → logprob: -2.1436500549316406
    3. ',' → logprob: -2.3936500549316406
    4. ' in' → logprob: -2.5186500549316406
    5. ' between' → logprob: -2.8936500549316406
    6. ' patterns' → logprob: -3.1436500549316406
    7. ' and' → logprob: -3.8936500549316406
    8. ' rows' → logprob: -4.393650054931641
    9. ' colors' → logprob: -5.018650054931641
    10. ' pattern' → logprob: -5.393650054931641

Token 154: ' #' (ID: 1069)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.36987730860710144
    2. ' in' → logprob: -2.244877338409424
    3. '   ' → logprob: -3.369877338409424
    4. ',' → logprob: -3.369877338409424
    5. ' patterns' → logprob: -3.494877338409424
    6. ' and' → logprob: -3.744877338409424
    7. 'ly' → logprob: -3.869877338409424
    8. ' rows' → logprob: -4.619877338409424
    9. ' or' → logprob: -4.869877338409424
    10. ' lines' → logprob: -5.244877338409424

Token 155: ' and' (ID: 326)
  Prédit: ' patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' patterns' → logprob: -1.3544847965240479
    2. 'patterns' → logprob: -1.3544847965240479
    3. ',' → logprob: -2.604484796524048
    4. ' in' → logprob: -2.729484796524048
    5. 'colors' → logprob: -3.104484796524048
    6. ' and' → logprob: -3.354484796524048
    7. ' colors' → logprob: -3.479484796524048
    8. 'pattern' → logprob: -3.479484796524048
    9. 'and' → logprob: -3.729484796524048
    10. ' pattern' → logprob: -3.729484796524048

Token 156: ' same' (ID: 2684)
  Prédit: ' columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' columns' → logprob: -0.9629252552986145
    2. ' if' → logprob: -1.0879251956939697
    3. ' the' → logprob: -2.2129251956939697
    4. ' that' → logprob: -2.3379251956939697
    5. 'columns' → logprob: -4.087925434112549
    6. ' whether' → logprob: -4.712925434112549
    7. ' not' → logprob: -4.837925434112549
    8. 'if' → logprob: -4.962925434112549
    9. ' no' → logprob: -4.962925434112549
    10. ' cols' → logprob: -5.087925434112549

Token 157: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43712136149406433
    2. '   ' → logprob: -1.6871213912963867
    3. '_' → logprob: -2.6871213912963867
    4. ',' → logprob: -4.187121391296387
    5. '.' → logprob: -4.437121391296387
    6. ':' → logprob: -4.562121391296387
    7. ' lines' → logprob: -4.687121391296387
    8. '()' → logprob: -4.812121391296387
    9. 'def' → logprob: -4.812121391296387
    10. ')' → logprob: -5.062121391296387

Token 158: ' columns' (ID: 15697)
  Prédit: ' columns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' columns' → logprob: -0.0382971428334713
    2. 'columns' → logprob: -3.288297176361084
    3. ' the' → logprob: -8.663296699523926
    4. ' cols' → logprob: -10.413296699523926
    5. 'cols' → logprob: -10.913296699523926
    6. ' rows' → logprob: -11.663296699523926
    7. '.columns' → logprob: -12.163296699523926
    8. '   ' → logprob: -12.413296699523926
    9. 'the' → logprob: -12.538296699523926
    10. '       ' → logprob: -12.663296699523926

Token 159: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7122119665145874
    2. '<|end|>' → logprob: -1.5872119665145874
    3. '       ' → logprob: -2.587212085723877
    4. '.' → logprob: -2.587212085723877
    5. '           ' → logprob: -2.712212085723877
    6. ',' → logprob: -3.212212085723877
    7. ':' → logprob: -3.962212085723877
    8. '<|end|>' → logprob: -4.087212085723877
    9. '        
' → logprob: -6.337212085723877
    10. '```' → logprob: -6.587212085723877

Token 160: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39783933758735657
    2. '       ' → logprob: -1.3978393077850342
    3. '<|end|>' → logprob: -3.022839307785034
    4. '        
' → logprob: -4.272839546203613
    5. '           ' → logprob: -5.022839546203613
    6. '<|end|>' → logprob: -6.147839546203613
    7. '    
' → logprob: -6.772839546203613
    8. '   ' → logprob: -7.022839546203613
    9. 'def' → logprob: -7.147839546203613
    10. ' ' → logprob: -7.272839546203613

Token 161: ' #' (ID: 1069)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.284444808959961
    2. '       ' → logprob: -1.534444808959961
    3. '           ' → logprob: -1.784444808959961
    4. ' row' → logprob: -2.409444808959961
    5. 'def' → logprob: -3.034444808959961
    6. 'pattern' → logprob: -3.034444808959961
    7. 'first' → logprob: -3.409444808959961
    8. '#' (adapté à ' #') → logprob: -3.409444808959961
    9. ' first' → logprob: -4.034444808959961
    10. 'rows' → logprob: -4.534444808959961

Token 162: ' Consider' (ID: 26632)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.600399911403656
    2. ' row' → logprob: -1.4753999710083008
    3. 'rows' → logprob: -3.100399971008301
    4. '#' → logprob: -3.225399971008301
    5. 'first' → logprob: -3.725399971008301
    6. 'def' → logprob: -3.975399971008301
    7. ' first' → logprob: -3.975399971008301
    8. ' rows' → logprob: -3.975399971008301
    9. '   ' → logprob: -4.850399971008301
    10. 'for' → logprob: -5.100399971008301

Token 163: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.582253634929657
    2. 'first' → logprob: -2.0822536945343018
    3. ' row' → logprob: -2.8322536945343018
    4. 'row' → logprob: -2.9572536945343018
    5. ' self' → logprob: -3.0822536945343018
    6. 'self' → logprob: -3.3322536945343018
    7. ' the' → logprob: -3.3322536945343018
    8. 'def' → logprob: -4.207253456115723
    9. 'the' → logprob: -4.457253456115723
    10. 'rows' → logprob: -4.457253456115723

Token 164: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.020769255235791206
    2. '_row' → logprob: -4.770769119262695
    3. 'row' → logprob: -4.895769119262695
    4. ' self' → logprob: -6.145769119262695
    5. ' two' → logprob: -6.395769119262695
    6. ' ' → logprob: -8.520769119262695
    7. '_' → logprob: -8.770769119262695
    8. 'self' → logprob: -8.895769119262695
    9. 'def' → logprob: -10.145769119262695
    10. ' the' → logprob: -10.270769119262695

Token 165: ' pattern' (ID: 8302)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02527574636042118
    2. '=' → logprob: -5.025275707244873
    3. '_' → logprob: -5.025275707244873
    4. '       ' → logprob: -6.150275707244873
    5. ',' → logprob: -6.400275707244873
    6. '_pattern' → logprob: -6.775275707244873
    7. 'data' → logprob: -6.900275707244873
    8. ':' → logprob: -7.150275707244873
    9. '_data' → logprob: -7.275275707244873
    10. '[' → logprob: -7.275275707244873

Token 166: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14483827352523804
    2. ':' → logprob: -2.519838333129883
    3. '       ' → logprob: -3.894838333129883
    4. ':
' → logprob: -5.019838333129883
    5. '[' → logprob: -5.519838333129883
    6. '           ' → logprob: -5.519838333129883
    7. 'pattern' → logprob: -6.144838333129883
    8. '
' → logprob: -6.269838333129883
    9. ',' → logprob: -6.394838333129883
    10. '=' → logprob: -6.394838333129883

Token 167: '           ' (ID: 352)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.4924968183040619
    2. '           ' → logprob: -1.3674968481063843
    3. '       ' → logprob: -2.7424967288970947
    4. ' pattern' → logprob: -3.8674967288970947
    5. ' row' → logprob: -4.617496967315674
    6. 'first' → logprob: -4.742496967315674
    7. ' base' → logprob: -5.367496967315674
    8. 'pattern' → logprob: -5.617496967315674
    9. ' r' → logprob: -5.742496967315674
    10. ' f' → logprob: -5.742496967315674

Token 168: ' pattern' (ID: 8302)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.08275500684976578
    2. 'first' → logprob: -3.2077550888061523
    3. ' base' → logprob: -4.082755088806152
    4. ' pattern' → logprob: -5.207755088806152
    5. ' ref' → logprob: -5.332755088806152
    6. ' reference' → logprob: -5.832755088806152
    7. 'pattern' (adapté à ' pattern') → logprob: -6.332755088806152
    8. '       ' → logprob: -6.582755088806152
    9. ' p' → logprob: -6.832755088806152
    10. ' baseline' → logprob: -6.832755088806152

Token 169: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004623679909855127
    2. '_' → logprob: -5.629623889923096
    3. '=' → logprob: -7.379623889923096
    4. 's' → logprob: -8.504623413085938
    5. '0' → logprob: -8.754623413085938
    6. ' ' → logprob: -11.004623413085938
    7. ' =
' → logprob: -11.379623413085938
    8. '_first' → logprob: -12.629623413085938
    9. '1' → logprob: -13.129623413085938
    10. '_row' → logprob: -13.254623413085938

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00765075720846653
    2. '=' → logprob: -4.882650852203369
    3. '0' → logprob: -10.882650375366211
    4. '_' → logprob: -11.507650375366211
    5. ' ' → logprob: -11.632650375366211
    6. '_row' → logprob: -12.632650375366211
    7. ' =
' → logprob: -13.757650375366211
    8. '=row' → logprob: -14.132650375366211
    9. 's' → logprob: -14.507650375366211
    10. ',' → logprob: -14.882650375366211

Token 171: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07936129719018936
    2. ' self' → logprob: -2.5793612003326416
    3. '[self' → logprob: -8.204360961914062
    4. 'tuple' → logprob: -9.454360961914062
    5. ' [' → logprob: -9.954360961914062
    6. '[' → logprob: -10.454360961914062
    7. ' tuple' → logprob: -11.204360961914062
    8. 'set' → logprob: -11.579360961914062
    9. '   ' → logprob: -11.954360961914062
    10. '(self' → logprob: -12.079360961914062

Token 172: '.get' (ID: 775)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.10140439122915268
    2. '.get' → logprob: -2.3514044284820557
    3. ' .' → logprob: -7.601404190063477
    4. '.' → logprob: -7.601404190063477
    5. '.rows' → logprob: -8.976404190063477
    6. 'data' → logprob: -9.976404190063477
    7. 'get' → logprob: -11.726404190063477
    8. '[' → logprob: -12.226404190063477
    9. '._' → logprob: -13.226404190063477
    10. '[data' → logprob: -13.726404190063477

Token 173: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.62500286102295
    3. '_column' → logprob: -13.75000286102295
    4. '_line' → logprob: -16.500001907348633
    5. '_r' → logprob: -17.125001907348633
    6. '_rows' → logprob: -18.125001907348633
    7. 'row' → logprob: -18.875001907348633
    8. '_Row' → logprob: -19.375001907348633
    9. '_col' → logprob: -19.875001907348633
    10. '_raw' → logprob: -20.125001907348633

Token 174: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. '(
' → logprob: -14.750000953674316
    3. '0' → logprob: -16.5
    4. ' (' → logprob: -17.75
    5. 's' → logprob: -19.75
    6. '(

' → logprob: -21.25
    7. '((' → logprob: -22.0
    8. '(
' → logprob: -22.75
    9. ')(' → logprob: -22.875
    10. ' ' → logprob: -23.25

Token 175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.013994814362377e-05
    2. ' ' → logprob: -10.00005054473877
    3. '(' → logprob: -12.50005054473877
    4. ')' → logprob: -14.50005054473877
    5. '
' → logprob: -15.50005054473877
    6. '(
' → logprob: -16.875049591064453
    7. '   ' → logprob: -17.500049591064453
    8. '           ' → logprob: -17.875049591064453
    9. ')
' → logprob: -18.375049591064453
    10. '       ' → logprob: -18.750049591064453

Token 176: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008996733813546598
    2. ')
' → logprob: -7.500899791717529
    3. ' )' → logprob: -8.000899314880371
    4. ')[' → logprob: -12.875899314880371
    5. '())' → logprob: -13.250899314880371
    6. ')

' → logprob: -13.375899314880371
    7. ')`' → logprob: -14.000899314880371
    8. '))' → logprob: -14.375899314880371
    9. ' )
' → logprob: -14.375899314880371
    10. ' ' → logprob: -14.500899314880371

Token 177: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0292371716350317
    2. '       ' → logprob: -4.529237270355225
    3. ' 
' → logprob: -5.029237270355225
    4. '           ' → logprob: -6.154237270355225
    5. '        
' → logprob: -6.404237270355225
    6. '            
' → logprob: -6.654237270355225
    7. '  
' → logprob: -6.654237270355225
    8. '    
' → logprob: -6.904237270355225
    9. '#' → logprob: -7.029237270355225
    10. '<|end|>' → logprob: -7.029237270355225

Token 178: ' inv' (ID: 1827)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13037742674350739
    2. '           ' → logprob: -3.1303775310516357
    3. 'pattern' → logprob: -3.5053775310516357
    4. ' pattern' → logprob: -3.6303775310516357
    5. '            
' → logprob: -4.880377292633057
    6. ' 
' → logprob: -5.005377292633057
    7. ' for' → logprob: -5.880377292633057
    8. '       ' → logprob: -6.755377292633057
    9. '#' → logprob: -7.630377292633057
    10. ' if' → logprob: -7.755377292633057

Token 179: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.060502439737319946
    2. 'ert' → logprob: -3.060502529144287
    3. ' =' → logprob: -4.935502529144287
    4. '_pat' → logprob: -6.310502529144287
    5. '0' → logprob: -7.185502529144287
    6. 'ersion' → logprob: -7.560502529144287
    7. 'pat' → logprob: -7.685502529144287
    8. 'pattern' → logprob: -8.060502052307129
    9. '=' → logprob: -8.310502052307129
    10. '_' → logprob: -8.435502052307129

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.590876042842865
    2. ' =' → logprob: -0.840876042842865
    3. '=' → logprob: -4.21587610244751
    4. 's' → logprob: -10.590875625610352
    5. ' ' → logprob: -10.715875625610352
    6. 'o' → logprob: -11.965875625610352
    7. '_' → logprob: -12.715875625610352
    8. ' =
' → logprob: -12.840875625610352
    9. '  ' → logprob: -13.465875625610352
    10. '1' → logprob: -13.590875625610352

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751529917120934
    2. '=' → logprob: -3.5297515392303467
    3. ' ' → logprob: -14.404751777648926
    4. ' =[' → logprob: -14.654751777648926
    5. '=[' → logprob: -17.77975082397461
    6. ' =
' → logprob: -18.27975082397461
    7. ',' → logprob: -18.77975082397461
    8. '[' → logprob: -19.02975082397461
    9. ' ' → logprob: -19.02975082397461
    10. ')' → logprob: -19.27975082397461

Token 182: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001763359410688281
    2. ' [' → logprob: -6.501763343811035
    3. '[self' → logprob: -9.376763343811035
    4. '['' → logprob: -9.501763343811035
    5. '[p' → logprob: -9.626763343811035
    6. '[(' → logprob: -10.626763343811035
    7. '[in' → logprob: -13.251763343811035
    8. '[int' → logprob: -13.501763343811035
    9. '[list' → logprob: -13.626763343811035
    10. '[len' → logprob: -13.751763343811035

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0057027884759008884
    2. '(' → logprob: -5.255702972412109
    3. '0' → logprob: -8.50570297241211
    4. ' ' → logprob: -9.38070297241211
    5. '('' → logprob: -9.50570297241211
    6. ' (' → logprob: -10.75570297241211
    7. ''' → logprob: -11.13070297241211
    8. 'int' → logprob: -11.13070297241211
    9. '(not' → logprob: -11.13070297241211
    10. '   ' → logprob: -11.38070297241211

Token 184: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3872097432613373
    2. ' -' → logprob: -1.1372097730636597
    3. '-p' → logprob: -8.13720989227295
    4. '-x' → logprob: -11.01220989227295
    5. ' if' → logprob: -11.51220989227295
    6. '-if' → logprob: -12.51220989227295
    7. '-i' → logprob: -13.01220989227295
    8. '-pattern' → logprob: -13.13720989227295
    9. '-v' → logprob: -13.38720989227295
    10. '^' → logprob: -13.63720989227295

Token 185: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.111814484000206
    2. 'bit' → logprob: -2.736814498901367
    3. 'b' → logprob: -3.361814498901367
    4. 'v' → logprob: -5.736814498901367
    5. 'p' → logprob: -6.611814498901367
    6. ' x' → logprob: -7.236814498901367
    7. ' bit' → logprob: -7.236814498901367
    8. 'val' → logprob: -8.611814498901367
    9. 'cell' → logprob: -9.486814498901367
    10. ' b' → logprob: -10.611814498901367

Token 186: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.004637791775166988
    2. 'for' → logprob: -5.379637718200684
    3. ' ' → logprob: -11.254637718200684
    4. ' if' → logprob: -13.254637718200684
    5. '	for' → logprob: -13.379637718200684
    6. ')' → logprob: -14.754637718200684
    7. '   ' → logprob: -14.754637718200684
    8. '  ' → logprob: -16.004638671875
    9. '           ' → logprob: -16.129638671875
    10. ' in' → logprob: -16.379638671875

Token 187: ' x' (ID: 1215)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.6931517124176025
    2. 'pattern' → logprob: -0.6931517124176025
    3. '
' → logprob: -13.318151473999023
    4. ' ' → logprob: -13.568151473999023
    5. 'pat' → logprob: -14.193151473999023
    6. 'x' → logprob: -15.318151473999023
    7. ' x' → logprob: -15.818151473999023
    8. ' p' → logprob: -16.068151473999023
    9. '  ' → logprob: -16.193151473999023
    10. '   ' → logprob: -16.193151473999023

Token 188: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03816244378685951
    2. 'in' → logprob: -3.2881624698638916
    3. 'pattern' → logprob: -9.538162231445312
    4. ' ' → logprob: -10.538162231445312
    5. ' pattern' → logprob: -11.288162231445312
    6. '  ' → logprob: -12.663162231445312
    7. ' i' → logprob: -13.288162231445312
    8. ']' → logprob: -14.038162231445312
    9. 'import' → logprob: -14.663162231445312
    10. ')' → logprob: -14.913162231445312

Token 189: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.03364869952201843
    2. ' pattern' → logprob: -3.408648729324341
    3. ' ' → logprob: -13.658648490905762
    4. 'pat' → logprob: -14.658648490905762
    5. '   ' → logprob: -14.908648490905762
    6. '
' → logprob: -14.908648490905762
    7. '(pattern' → logprob: -15.033648490905762
    8. '  ' → logprob: -15.533648490905762
    9. 'self' → logprob: -17.283649444580078
    10. '    ' → logprob: -17.658649444580078

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.375000953674316
    3. '[' → logprob: -14.875000953674316
    4. ']' → logprob: -16.500001907348633
    5. ')' → logprob: -17.875001907348633
    6. '_' → logprob: -18.125001907348633
    7. '۰' → logprob: -18.625001907348633
    8. '])' → logprob: -19.125001907348633
    9. '(' → logprob: -19.375001907348633
    10. '[
' → logprob: -20.125001907348633

Token 191: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008666796493344009
    2. '           ' → logprob: -7.750866889953613
    3. ')' → logprob: -8.500866889953613
    4. '       ' → logprob: -9.375866889953613
    5. ']
' → logprob: -9.750866889953613
    6. ' ]' → logprob: -9.750866889953613
    7. '<|end|>' → logprob: -11.000866889953613
    8. '
' → logprob: -12.625866889953613
    9. '<|end|>' → logprob: -12.875866889953613
    10. '               ' → logprob: -13.375866889953613

Token 192: '            
' (ID: 7048)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8910010457038879
    2. '<|end|>' → logprob: -0.8910010457038879
    3. '           ' → logprob: -1.8910009860992432
    4. '       ' → logprob: -3.891000986099243
    5. '<|end|>' → logprob: -5.141001224517822
    6. '            
' → logprob: -7.141001224517822
    7. '```' → logprob: -8.516000747680664
    8. '#' → logprob: -8.641000747680664
    9. ' for' → logprob: -9.016000747680664
    10. '        
' → logprob: -9.016000747680664

Token 193: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6873190402984619
    2. ' for' → logprob: -1.187319040298462
    3. 'for' → logprob: -1.812319040298462
    4. '       ' → logprob: -3.812319040298462
    5. '#' → logprob: -6.312318801879883
    6. '
' → logprob: -6.437318801879883
    7. 'if' → logprob: -7.062318801879883
    8. 'def' → logprob: -7.562318801879883
    9. ' if' → logprob: -7.937318801879883
    10. 'n' → logprob: -8.062318801879883

Token 194: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0017169468337669969
    2. '           ' → logprob: -6.6267170906066895
    3. ' for' → logprob: -9.376716613769531
    4. 'rows' → logprob: -9.626716613769531
    5. 'row' → logprob: -9.751716613769531
    6. '       ' → logprob: -9.876716613769531
    7. 'def' → logprob: -10.376716613769531
    8. 'possible' → logprob: -10.501716613769531
    9. 'valid' → logprob: -10.751716613769531
    10. '   ' → logprob: -11.376716613769531

Token 195: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02724897675216198
    2. '#' → logprob: -3.9022488594055176
    3. 'row' → logprob: -5.902248859405518
    4. 'pattern' → logprob: -6.902248859405518
    5. 'rows' → logprob: -7.277248859405518
    6. 'def' → logprob: -7.277248859405518
    7. 'first' → logprob: -8.277249336242676
    8. 'expected' → logprob: -8.402249336242676
    9. ' for' → logprob: -8.777249336242676
    10. 'patterns' → logprob: -8.902249336242676

Token 196: ' each' (ID: 2454)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7656959295272827
    2. ' rows' → logprob: -1.2656959295272827
    3. ' for' → logprob: -1.7656959295272827
    4. ' all' → logprob: -3.8906960487365723
    5. 'rows' → logprob: -4.390696048736572
    6. '       ' → logprob: -4.515696048736572
    7. ' ' → logprob: -4.640696048736572
    8. ' whether' → logprob: -5.015696048736572
    9. '   ' → logprob: -5.515696048736572
    10. ' s' → logprob: -5.765696048736572

Token 197: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.07995882630348206
    2. 'row' → logprob: -2.579958915710449
    3. ' for' → logprob: -7.329958915710449
    4. ' subsequent' → logprob: -9.45495891571045
    5. 'for' → logprob: -9.57995891571045
    6. 'def' → logprob: -9.95495891571045
    7. ' r' → logprob: -10.32995891571045
    8. 'r' → logprob: -10.32995891571045
    9. ' next' → logprob: -10.57995891571045
    10. '           ' → logprob: -10.70495891571045

Token 198: ' must' (ID: 2804)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09469778090715408
    2. ' for' → logprob: -2.4696977138519287
    3. '       ' → logprob: -5.469697952270508
    4. 'for' → logprob: -6.969697952270508
    5. ' in' → logprob: -8.094697952270508
    6. ' to' → logprob: -9.344697952270508
    7. ':' → logprob: -9.469697952270508
    8. ',' → logprob: -9.969697952270508
    9. 's' → logprob: -10.969697952270508
    10. '   ' → logprob: -11.969697952270508

Token 199: ' be' (ID: 413)
  Prédit: ' either'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' either' → logprob: -0.2739422023296356
    2. ' be' → logprob: -2.023942232131958
    3. 'either' → logprob: -2.273942232131958
    4. 'be' → logprob: -5.398941993713379
    5. ' match' → logprob: -11.023941993713379
    6. 'match' → logprob: -11.148941993713379
    7. 'not' → logprob: -12.023941993713379
    8. ' not' → logprob: -12.023941993713379
    9. 'Either' → logprob: -13.023941993713379
    10. ' in' → logprob: -13.148941993713379

Token 200: ' either' (ID: 4784)
  Prédit: ' either'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' either' → logprob: -1.0639806985855103
    2. 'either' → logprob: -1.1889806985855103
    3. 'pattern' → logprob: -1.3139806985855103
    4. ' pattern' → logprob: -2.5639805793762207
    5. 'equal' → logprob: -5.938980579376221
    6. ' equal' → logprob: -7.188980579376221
    7. '(pattern' → logprob: -7.313980579376221
    8. ' identical' → logprob: -8.813981056213379
    9. '```' → logprob: -9.438981056213379
    10. ' one' → logprob: -9.438981056213379

Token 201: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.2519682049751282
    2. ' pattern' → logprob: -1.5019681453704834
    3. '           ' → logprob: -11.251968383789062
    4. ' equal' → logprob: -11.376968383789062
    5. 'equal' → logprob: -12.376968383789062
    6. ' identical' → logprob: -12.876968383789062
    7. '(pattern' → logprob: -13.001968383789062
    8. ' exactly' → logprob: -13.251968383789062
    9. ' the' → logprob: -14.001968383789062
    10. 'exact' → logprob: -14.376968383789062

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.319370302458992e-06
    2. 'or' → logprob: -12.875005722045898
    3. ' or' → logprob: -13.125005722045898
    4. '```' → logprob: -15.000005722045898
    5. 'pattern' → logprob: -15.625005722045898
    6. ' ' → logprob: -16.0000057220459
    7. '   ' → logprob: -16.8750057220459
    8. '
' → logprob: -17.6250057220459
    9. ',' → logprob: -17.7500057220459
    10. '[' → logprob: -18.1250057220459

Token 203: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03421149030327797
    2. 'or' → logprob: -3.4092113971710205
    3. '           ' → logprob: -7.7842116355896
    4. ',' → logprob: -9.534211158752441
    5. '            ' → logprob: -10.034211158752441
    6. '               ' → logprob: -11.159211158752441
    7. ' ' → logprob: -12.659211158752441
    8. '              ' → logprob: -12.909211158752441
    9. '          ' → logprob: -13.034211158752441
    10. '             ' → logprob: -13.159211158752441

Token 204: ' inverse' (ID: 53743)
  Prédit: ' inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.018237974494695663
    2. 'inv' → logprob: -4.018238067626953
    3. ' inverse' → logprob: -9.518238067626953
    4. ' inverted' → logprob: -12.268238067626953
    5. 'inverse' → logprob: -12.768238067626953
    6. ' its' → logprob: -13.268238067626953
    7. '(inv' → logprob: -13.268238067626953
    8. '           ' → logprob: -13.393238067626953
    9. '.inv' → logprob: -14.393238067626953
    10. '_inv' → logprob: -14.393238067626953

Token 205: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2188004106283188
    2. '0' → logprob: -1.96880042552948
    3. ' in' → logprob: -3.8438003063201904
    4. ' or' → logprob: -4.2188005447387695
    5. ',' → logprob: -5.2188005447387695
    6. ' for' → logprob: -5.8438005447387695
    7. ' of' → logprob: -5.8438005447387695
    8. '               ' → logprob: -5.9688005447387695
    9. ' pattern' → logprob: -6.4688005447387695
    10. ' ==' → logprob: -7.2188005447387695

Token 206: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.005239564459770918
    2. ' pattern' → logprob: -5.255239486694336
    3. '           ' → logprob: -12.255239486694336
    4. 'pat' → logprob: -14.380239486694336
    5. '_pattern' → logprob: -15.630239486694336
    6. '(pattern' → logprob: -16.880239486694336
    7. '   ' → logprob: -17.005239486694336
    8. ' ' → logprob: -17.630239486694336
    9. 'row' → logprob: -17.755239486694336
    10. '0' → logprob: -17.755239486694336

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043353010551072657
    2. '           ' → logprob: -8.000433921813965
    3. '[' → logprob: -10.250433921813965
    4. '       ' → logprob: -11.000433921813965
    5. '```' → logprob: -11.625433921813965
    6. '   ' → logprob: -11.750433921813965
    7. '               ' → logprob: -11.875433921813965
    8. '[i' → logprob: -12.750433921813965
    9. 'pattern' → logprob: -12.750433921813965
    10. ' ' → logprob: -13.000433921813965

Token 208: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021570377051830292
    2. '       ' → logprob: -4.021570205688477
    3. ' for' → logprob: -5.771570205688477
    4. ',' → logprob: -8.896570205688477
    5. 'for' → logprob: -9.771570205688477
    6. '
' → logprob: -10.021570205688477
    7. '.' → logprob: -10.896570205688477
    8. '            
' → logprob: -11.646570205688477
    9. ':' → logprob: -12.146570205688477
    10. '   ' → logprob: -12.146570205688477

Token 209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1096804291009903
    2. '       ' → logprob: -2.484680414199829
    3. ' for' → logprob: -3.984680414199829
    4. 'for' → logprob: -7.359680652618408
    5. '
' → logprob: -7.484680652618408
    6. '   ' → logprob: -7.984680652618408
    7. '               ' → logprob: -9.73468017578125
    8. '            
' → logprob: -9.85968017578125
    9. ',' → logprob: -9.98468017578125
    10. '        
' → logprob: -10.10968017578125

Token 210: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.177229642868042
    2. '           ' → logprob: -1.427229642868042
    3. ' for' → logprob: -1.427229642868042
    4. '       ' → logprob: -1.552229642868042
    5. '   ' → logprob: -9.177229881286621
    6. '```' → logprob: -10.552229881286621
    7. '
' → logprob: -11.802229881286621
    8. '	for' → logprob: -12.427229881286621
    9. '        
' → logprob: -13.927229881286621
    10. '               ' → logprob: -13.927229881286621

Token 211: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3922468423843384
    2. 'r' → logprob: -1.1422468423843384
    3. ' i' → logprob: -5.767246723175049
    4. 'i' → logprob: -6.642246723175049
    5. ' row' → logprob: -7.642246723175049
    6. 'row' → logprob: -8.392247200012207
    7. '   ' → logprob: -9.017247200012207
    8. '           ' → logprob: -9.642247200012207
    9. '       ' → logprob: -11.767247200012207
    10. ' ' → logprob: -12.267247200012207

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005938636604696512
    2. 'in' → logprob: -5.130938529968262
    3. ' ' → logprob: -11.880938529968262
    4. '	in' → logprob: -13.380938529968262
    5. ' i' → logprob: -15.005938529968262
    6. ',' → logprob: -15.255938529968262
    7. 'n' → logprob: -15.880938529968262
    8. ')' → logprob: -15.880938529968262
    9. '  ' → logprob: -16.005939483642578
    10. 'import' → logprob: -16.380939483642578

Token 213: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931487321853638
    2. 'range' → logprob: -0.6931487321853638
    3. ' ' → logprob: -13.943148612976074
    4. '	range' → logprob: -15.568148612976074
    5. '   ' → logprob: -15.693148612976074
    6. '  ' → logprob: -15.693148612976074
    7. '(range' → logprob: -16.19314956665039
    8. '    ' → logprob: -16.81814956665039
    9. 'self' → logprob: -17.94314956665039
    10. 'r' → logprob: -18.94314956665039

Token 214: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009185493923723698
    2. '(self' → logprob: -4.759185314178467
    3. '1' → logprob: -7.634185314178467
    4. '           ' → logprob: -9.884185791015625
    5. ' (' → logprob: -10.509185791015625
    6. 'self' → logprob: -12.134185791015625
    7. ' self' → logprob: -14.009185791015625
    8. ' ' → logprob: -14.009185791015625
    9. '   ' → logprob: -14.259185791015625
    10. '(len' → logprob: -14.634185791015625

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0789097249507904
    2. 'self' → logprob: -2.5789096355438232
    3. ' self' → logprob: -11.953909873962402
    4. '   ' → logprob: -12.328909873962402
    5. '(self' → logprob: -13.078909873962402
    6. ' ' → logprob: -13.078909873962402
    7. '           ' → logprob: -13.203909873962402
    8. '0' → logprob: -13.703909873962402
    9. '       ' → logprob: -14.703909873962402
    10. '
' → logprob: -14.828909873962402

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002201167168095708
    2. ' ,' → logprob: -6.127201080322266
    3. ',self' → logprob: -11.877201080322266
    4. '):' → logprob: -12.377201080322266
    5. ',len' → logprob: -13.127201080322266
    6. ',
' → logprob: -13.127201080322266
    7. ' ' → logprob: -15.252201080322266
    8. 'self' → logprob: -15.502201080322266
    9. '   ' → logprob: -16.627201080322266
    10. ' ):' → logprob: -16.627201080322266

Token 217: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024924222379922867
    2. ' self' → logprob: -6.002492427825928
    3. '           ' → logprob: -11.00249195098877
    4. '   ' → logprob: -16.752492904663086
    5. '               ' → logprob: -17.377492904663086
    6. '       ' → logprob: -17.627492904663086
    7. 'len' → logprob: -18.502492904663086
    8. '	self' → logprob: -18.627492904663086
    9. '(self' → logprob: -19.627492904663086
    10. '    ' → logprob: -20.002492904663086

Token 218: '.rows' (ID: 41542)
  Prédit: '.rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rows' → logprob: -0.00023512568441219628
    2. 'rows' → logprob: -8.750235557556152
    3. '.' → logprob: -9.500235557556152
    4. '	rows' → logprob: -14.250235557556152
    5. ' .' → logprob: -14.750235557556152
    6. ' rows' → logprob: -15.625235557556152
    7. '.cols' → logprob: -16.250234603881836
    8. '.Rows' → logprob: -16.250234603881836
    9. '.
' → logprob: -16.375234603881836
    10. ').' → logprob: -16.500234603881836

Token 219: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3133787512779236
    2. '):
' → logprob: -1.3133788108825684
    3. ':' → logprob: -9.81337833404541
    4. '):
' → logprob: -10.43837833404541
    5. ' ):' → logprob: -10.81337833404541
    6. ' ):
' → logprob: -12.31337833404541
    7. '       ' → logprob: -12.56337833404541
    8. '   ' → logprob: -13.56337833404541
    9. ')' → logprob: -13.68837833404541
    10. '           ' → logprob: -14.06337833404541

Token 220: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32022738456726074
    2. '               ' → logprob: -1.4452273845672607
    3. ' if' → logprob: -3.3202273845672607
    4. 'if' → logprob: -6.69522762298584
    5. ' row' → logprob: -7.94522762298584
    6. 'row' → logprob: -8.07022762298584
    7. ' current' → logprob: -10.07022762298584
    8. '       ' → logprob: -10.19522762298584
    9. '            
' → logprob: -10.57022762298584
    10. '```' → logprob: -10.82022762298584

Token 221: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -1.167468786239624
    2. '           ' → logprob: -1.292468786239624
    3. 'row' (adapté à ' row') → logprob: -1.792468786239624
    4. 'if' → logprob: -2.042468786239624
    5. ' if' → logprob: -2.417468786239624
    6. '               ' → logprob: -3.792468786239624
    7. 'current' → logprob: -6.042469024658203
    8. ' current' → logprob: -6.542469024658203
    9. 'pattern' → logprob: -6.542469024658203
    10. ' pattern' → logprob: -8.167469024658203

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16231802105903625
    2. '=' → logprob: -1.9123179912567139
    3. ' ' → logprob: -6.787318229675293
    4. '_data' → logprob: -8.412318229675293
    5. ')' → logprob: -8.662318229675293
    6. '_' → logprob: -8.787318229675293
    7. '_pattern' → logprob: -9.162318229675293
    8. ' !=' → logprob: -9.787318229675293
    9. ']' → logprob: -9.787318229675293
    10. 'data' → logprob: -10.037318229675293

Token 223: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2519298195838928
    2. ' self' → logprob: -1.501929759979248
    3. '(self' → logprob: -15.251930236816406
    4. '[self' → logprob: -15.751930236816406
    5. '	self' → logprob: -16.001930236816406
    6. '           ' → logprob: -16.751930236816406
    7. '               ' → logprob: -16.876930236816406
    8. ' ' → logprob: -16.876930236816406
    9. '=self' → logprob: -17.876930236816406
    10. '   ' → logprob: -18.251930236816406

Token 224: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.16043280065059662
    2. '.data' → logprob: -1.9104328155517578
    3. '.' → logprob: -8.660432815551758
    4. 'get' → logprob: -10.785432815551758
    5. 'data' → logprob: -11.410432815551758
    6. ' .' → logprob: -12.785432815551758
    7. ' get' → logprob: -15.535432815551758
    8. ' data' → logprob: -16.285432815551758
    9. '.
' → logprob: -16.535432815551758
    10. '   ' → logprob: -16.535432815551758

Token 225: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -6.034592388459714e-06
    2. 'row' → logprob: -12.500005722045898
    3. '_r' → logprob: -13.500005722045898
    4. 'r' → logprob: -14.500005722045898
    5. '_' → logprob: -15.125005722045898
    6. ' row' → logprob: -16.3750057220459
    7. ' ' → logprob: -17.8750057220459
    8. '_rows' → logprob: -18.0000057220459
    9. '_line' → logprob: -18.6250057220459
    10. '_column' → logprob: -18.8750057220459

Token 226: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.014205348677933216
    2. '(' → logprob: -4.264205455780029
    3. '(
' → logprob: -10.139204978942871
    4. 'r' → logprob: -13.389204978942871
    5. ' (' → logprob: -14.264204978942871
    6. '(

' → logprob: -17.139205932617188
    7. ')' → logprob: -18.139205932617188
    8. '(s' → logprob: -18.389205932617188
    9. ' r' → logprob: -18.389205932617188
    10. ' ' → logprob: -18.639205932617188

Token 227: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.016670694574713707
    2. ')' → logprob: -4.1416707038879395
    3. ' )
' → logprob: -7.3916707038879395
    4. ')
' → logprob: -11.641670227050781
    5. ')

' → logprob: -12.641670227050781
    6. ' )' → logprob: -12.766670227050781
    7. '           ' → logprob: -13.266670227050781
    8. '       ' → logprob: -13.516670227050781
    9. '               ' → logprob: -14.141670227050781
    10. ']
' → logprob: -14.641670227050781

Token 228: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013150011654943228
    2. '           ' → logprob: -6.876315116882324
    3. ' if' → logprob: -8.376315116882324
    4. '       ' → logprob: -10.376315116882324
    5. 'if' → logprob: -12.001315116882324
    6. '
' → logprob: -12.126315116882324
    7. '                
' → logprob: -12.751315116882324
    8. '   ' → logprob: -13.876315116882324
    9. '              ' → logprob: -14.251315116882324
    10. '```' → logprob: -14.376315116882324

Token 229: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009220697917044163
    2. ' if' → logprob: -4.759220600128174
    3. '               ' → logprob: -7.634220600128174
    4. '           ' → logprob: -9.134221076965332
    5. 'for' → logprob: -11.259221076965332
    6. '
' → logprob: -14.634221076965332
    7. ' for' → logprob: -15.134221076965332
    8. '       ' → logprob: -15.134221076965332
    9. '```' → logprob: -15.634221076965332
    10. '   ' → logprob: -16.134220123291016

Token 230: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.11612232029438019
    2. ' row' → logprob: -2.241122245788574
    3. 'not' → logprob: -6.366122245788574
    4. ' not' → logprob: -6.741122245788574
    5. '(row' → logprob: -8.241122245788574
    6. 'all' → logprob: -9.616122245788574
    7. ' all' → logprob: -10.491122245788574
    8. '   ' → logprob: -11.866122245788574
    9. '[row' → logprob: -11.866122245788574
    10. ' ' → logprob: -11.991122245788574

Token 231: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.13819792866706848
    2. ' !=' → logprob: -2.138197898864746
    3. ' not' → logprob: -4.513197898864746
    4. 'not' → logprob: -8.388197898864746
    5. ')!=' → logprob: -11.638197898864746
    6. ']!=' → logprob: -12.513197898864746
    7. '!==' → logprob: -13.513197898864746
    8. '!=(' → logprob: -14.263197898864746
    9. '()!=' → logprob: -14.388197898864746
    10. '==' → logprob: -15.513197898864746

Token 232: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.0001584850688232109
    2. ' pattern' → logprob: -8.750158309936523
    3. 'pat' → logprob: -17.500158309936523
    4. '   ' → logprob: -19.250158309936523
    5. ' ' → logprob: -20.250158309936523
    6. 'p' → logprob: -20.750158309936523
    7. '(pattern' → logprob: -21.000158309936523
    8. '           ' → logprob: -21.625158309936523
    9. '
' → logprob: -22.375158309936523
    10. '       ' → logprob: -22.750158309936523

Token 233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '[' → logprob: -18.125
    4. '۰' → logprob: -20.375
    5. '_' → logprob: -20.875
    6. '```' → logprob: -21.25
    7. '   ' → logprob: -21.75
    8. ')' → logprob: -21.875
    9. ',' → logprob: -22.0625
    10. '[
' → logprob: -22.375

Token 234: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00861468818038702
    2. 'and' → logprob: -4.758614540100098
    3. ' ' → logprob: -15.883614540100098
    4. '    ' → logprob: -17.258615493774414
    5. ' an' → logprob: -17.758615493774414
    6. '   ' → logprob: -18.883615493774414
    7. ' a' → logprob: -19.133615493774414
    8. '	and' → logprob: -19.508615493774414
    9. '```' → logprob: -19.883615493774414
    10. 'a' → logprob: -19.883615493774414

Token 235: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.038048259913921356
    2. ' row' → logprob: -3.288048267364502
    3. '                   ' → logprob: -12.913047790527344
    4. '               ' → logprob: -13.163047790527344
    5. '                  ' → logprob: -15.038047790527344
    6. ' ' → logprob: -15.038047790527344
    7. '                ' → logprob: -15.163047790527344
    8. '(row' → logprob: -15.288047790527344
    9. '              ' → logprob: -15.538047790527344
    10. '
' → logprob: -15.538047790527344

Token 236: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.003607317106798291
    2. ' !=' → logprob: -5.628607273101807
    3. '!=(' → logprob: -12.878607749938965
    4. '==' → logprob: -13.003607749938965
    5. ')!=' → logprob: -13.753607749938965
    6. '()!=' → logprob: -14.878607749938965
    7. ']!=' → logprob: -15.128607749938965
    8. '!=-' → logprob: -15.503607749938965
    9. '!' → logprob: -16.12860679626465
    10. '!==' → logprob: -16.25360679626465

Token 237: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.014163863845169544
    2. ' inv' → logprob: -4.264163970947266
    3. '(inv' → logprob: -15.139163970947266
    4. '_inv' → logprob: -16.389163970947266
    5. '.inv' → logprob: -17.514163970947266
    6. '
' → logprob: -17.764163970947266
    7. 'inverse' → logprob: -18.014163970947266
    8. ' ' → logprob: -18.764163970947266
    9. '```' → logprob: -19.139163970947266
    10. '[' → logprob: -19.889163970947266

Token 238: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -1.5048530030981055e-06
    2. 'pattern' → logprob: -14.125001907348633
    3. '_pat' → logprob: -14.875001907348633
    4. '_' → logprob: -15.500001907348633
    5. '_p' → logprob: -15.875001907348633
    6. ' _' → logprob: -17.500001907348633
    7. ' pattern' → logprob: -19.000001907348633
    8. '_
' → logprob: -19.375001907348633
    9. '_pa' → logprob: -20.000001907348633
    10. '_PATTERN' → logprob: -20.500001907348633

Token 239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. '_pattern' → logprob: -13.000003814697266
    3. 'pattern' → logprob: -14.250003814697266
    4. 'o' → logprob: -15.125003814697266
    5. 'Pattern' → logprob: -16.625003814697266
    6. ' ' → logprob: -17.000003814697266
    7. '_' → logprob: -17.250003814697266
    8. 'ol' → logprob: -17.625003814697266
    9. 'al' → logprob: -17.750003814697266
    10. 'attern' → logprob: -17.750003814697266

Token 240: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018305277451872826
    2. ':
' → logprob: -4.01830530166626
    3. '               ' → logprob: -9.018304824829102
    4. ':return' → logprob: -10.643304824829102
    5. '           ' → logprob: -12.018304824829102
    6. '                   ' → logprob: -13.893304824829102
    7. '):' → logprob: -14.143304824829102
    8. ':
' → logprob: -14.393304824829102
    9. ' :' → logprob: -14.518304824829102
    10. '):
' → logprob: -14.768304824829102

Token 241: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2826032042503357
    2. '               ' → logprob: -1.5326032638549805
    3. 'return' → logprob: -4.0326032638549805
    4. ' return' → logprob: -4.4076032638549805
    5. '
' → logprob: -8.90760326385498
    6. '                       ' → logprob: -9.53260326385498
    7. '           ' → logprob: -10.65760326385498
    8. ' raise' → logprob: -11.03260326385498
    9. 'raise' → logprob: -11.15760326385498
    10. '                
' → logprob: -11.65760326385498

Token 242: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5692338943481445
    2. ' return' → logprob: -1.3192338943481445
    3. '                   ' → logprob: -1.8192338943481445
    4. '               ' → logprob: -5.5692338943481445
    5. '                       ' → logprob: -7.5692338943481445
    6. '
' → logprob: -9.444233894348145
    7. '           ' → logprob: -9.569233894348145
    8. '   ' → logprob: -10.194233894348145
    9. '       ' → logprob: -10.819233894348145
    10. 'raise' → logprob: -12.444233894348145

Token 243: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0031777136027812958
    2. ' False' → logprob: -5.753177642822266
    3. '(False' → logprob: -18.378177642822266
    4. 'None' → logprob: -20.878177642822266
    5. '=False' → logprob: -21.003177642822266
    6. 'F' → logprob: -21.003177642822266
    7. '"' → logprob: -22.253177642822266
    8. '   ' → logprob: -22.503177642822266
    9. 'false' → logprob: -22.753177642822266
    10. ' ' → logprob: -23.253177642822266

Token 244: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3276169002056122
    2. '       ' → logprob: -1.3276169300079346
    3. '
' → logprob: -5.2026166915893555
    4. '        
' → logprob: -5.3276166915893555
    5. 'return' → logprob: -6.8276166915893555
    6. '            
' → logprob: -6.8276166915893555
    7. '    
' → logprob: -8.077616691589355
    8. '   ' → logprob: -8.452616691589355
    9. '		' → logprob: -8.577616691589355
    10. '	return' → logprob: -8.702616691589355

Token 245: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07677712291479111
    2. '           ' → logprob: -2.701777219772339
    3. '        
' → logprob: -5.57677698135376
    4. 'return' → logprob: -7.20177698135376
    5. '
' → logprob: -7.32677698135376
    6. '   ' → logprob: -7.57677698135376
    7. '	' → logprob: -8.076777458190918
    8. '            
' → logprob: -8.326777458190918
    9. '    
' → logprob: -8.826777458190918
    10. '	return' → logprob: -8.951777458190918

Token 246: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21817906200885773
    2. '       ' → logprob: -2.2181789875030518
    3. 'return' → logprob: -2.4681789875030518
    4. '
' → logprob: -6.968179225921631
    5. '#' (adapté à ' #') → logprob: -7.468179225921631
    6. 'for' → logprob: -7.843179225921631
    7. '            
' → logprob: -8.593178749084473
    8. '        
' → logprob: -8.968178749084473
    9. ' return' → logprob: -9.093178749084473
    10. '   ' → logprob: -9.593178749084473

Token 247: ' Similarly' (ID: 65037)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21609394252300262
    2. 'pattern' → logprob: -2.8410940170288086
    3. 'return' → logprob: -3.0910940170288086
    4. 'Consider' → logprob: -3.3410940170288086
    5. 'Check' → logprob: -4.341094017028809
    6. '       ' → logprob: -4.591094017028809
    7. 'for' → logprob: -4.841094017028809
    8. '           ' → logprob: -4.966094017028809
    9. 'col' → logprob: -5.216094017028809
    10. 'column' → logprob: -5.591094017028809

Token 248: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24704471230506897
    2. '           ' → logprob: -2.122044801712036
    3. 'for' → logprob: -2.372044801712036
    4. '       ' → logprob: -5.872044563293457
    5. '
' → logprob: -6.122044563293457
    6. '   ' → logprob: -7.622044563293457
    7. '#' → logprob: -9.372044563293457
    8. '            
' → logprob: -10.372044563293457
    9. '          ' → logprob: -10.372044563293457
    10. 'def' → logprob: -10.497044563293457

Token 249: ' columns' (ID: 15697)
  Prédit: ' columns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' columns' → logprob: -1.0445305109024048
    2. ' c' → logprob: -1.1695305109024048
    3. ' each' → logprob: -2.2945303916931152
    4. 'c' → logprob: -2.4195303916931152
    5. ' col' → logprob: -2.7945303916931152
    6. 'col' → logprob: -3.5445303916931152
    7. 'columns' → logprob: -4.294530391693115
    8. ' cols' → logprob: -4.419530391693115
    9. 'each' → logprob: -4.669530391693115
    10. 'cols' → logprob: -5.419530391693115

Token 250: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4844304621219635
    2. '
' → logprob: -1.2344304323196411
    3. '       ' → logprob: -2.9844305515289307
    4. ' for' → logprob: -3.7344305515289307
    5. 'pattern' → logprob: -5.359430313110352
    6. '            
' → logprob: -5.484430313110352
    7. ' pattern' → logprob: -6.234430313110352
    8. '```' → logprob: -6.484430313110352
    9. 'for' → logprob: -6.734430313110352
    10. '   ' → logprob: -6.734430313110352

Token 251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.183278426527977
    2. ' pattern' → logprob: -2.4332783222198486
    3. 'pattern' → logprob: -3.3082783222198486
    4. '       ' → logprob: -3.3082783222198486
    5. ' column' → logprob: -6.058278560638428
    6. ' col' → logprob: -6.683278560638428
    7. 'column' → logprob: -6.933278560638428
    8. ' columns' → logprob: -7.808278560638428
    9. '   ' → logprob: -7.933278560638428
    10. ' for' → logprob: -7.933278560638428

Token 252: ' first' (ID: 1577)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.13750965893268585
    2. ' pattern' → logprob: -2.88750958442688
    3. '           ' → logprob: -3.01250958442688
    4. 'column' → logprob: -4.387509822845459
    5. 'col' → logprob: -5.512509822845459
    6. 'for' → logprob: -5.762509822845459
    7. ' for' → logprob: -6.637509822845459
    8. ' column' → logprob: -6.762509822845459
    9. ' col' → logprob: -7.262509822845459
    10. '   ' → logprob: -8.5125093460083

Token 253: '_col' (ID: 7255)
  Prédit: '_column'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_column' → logprob: -0.25908225774765015
    2. '_col' → logprob: -1.509082317352295
    3. '_pattern' → logprob: -5.384082317352295
    4. '_' → logprob: -6.009082317352295
    5. 'column' → logprob: -10.884081840515137
    6. '_c' → logprob: -11.259081840515137
    7. 'col' → logprob: -11.259081840515137
    8. ' _' → logprob: -11.759081840515137
    9. '_
' → logprob: -12.259081840515137
    10. 'Column' → logprob: -12.259081840515137

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20181676745414734
    2. '=' → logprob: -1.7018167972564697
    3. '_pattern' → logprob: -8.32681655883789
    4. 'pattern' → logprob: -8.82681655883789
    5. '_' → logprob: -12.32681655883789
    6. '   ' → logprob: -13.07681655883789
    7. '0' → logprob: -13.20181655883789
    8. ' pattern' → logprob: -13.57681655883789
    9. ' ' → logprob: -13.82681655883789
    10. '_pat' → logprob: -14.07681655883789

Token 255: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08098252862691879
    2. ' self' → logprob: -2.5809824466705322
    3. '[self' → logprob: -6.455982685089111
    4. '           ' → logprob: -8.080982208251953
    5. ' [' → logprob: -9.205982208251953
    6. '[' → logprob: -9.455982208251953
    7. '   ' → logprob: -11.580982208251953
    8. ' ' → logprob: -12.580982208251953
    9. 's' → logprob: -12.830982208251953
    10. '(self' → logprob: -12.955982208251953

Token 256: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.005745572037994862
    2. 'get' → logprob: -5.2557454109191895
    3. '.' → logprob: -7.6307454109191895
    4. ' .' → logprob: -10.880745887756348
    5. ' get' → logprob: -12.880745887756348
    6. '   ' → logprob: -13.130745887756348
    7. 'data' → logprob: -14.255745887756348
    8. 'self' → logprob: -14.755745887756348
    9. '.data' → logprob: -14.755745887756348
    10. '       ' → logprob: -15.630745887756348

Token 257: '_column' (ID: 19908)
  Prédit: '_column'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_column' → logprob: -0.0005552975926548243
    2. 'column' → logprob: -7.500555515289307
    3. 'Column' → logprob: -13.500555038452148
    4. '_col' → logprob: -14.875555038452148
    5. ' column' → logprob: -16.12555503845215
    6. '	column' → logprob: -16.12555503845215
    7. '_' → logprob: -16.37555503845215
    8. 'COLUMN' → logprob: -16.75055503845215
    9. '_columns' → logprob: -17.00055503845215
    10. '_COLUMN' → logprob: -17.12555503845215

Token 258: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.2961512513575144e-05
    2. '0' → logprob: -10.750022888183594
    3. ' (' → logprob: -14.125022888183594
    4. '(
' → logprob: -14.125022888183594
    5. 's' → logprob: -19.125022888183594
    6. 'def' → logprob: -19.750022888183594
    7. '<|end|>' → logprob: -20.000022888183594
    8. '1' → logprob: -20.125022888183594
    9. ' ' → logprob: -20.500022888183594
    10. '(self' → logprob: -20.500022888183594

Token 259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -13.125003814697266
    3. '(' → logprob: -13.500003814697266
    4. ')' → logprob: -16.875003814697266
    5. '
' → logprob: -19.125003814697266
    6. '[' → logprob: -19.500003814697266
    7. '   ' → logprob: -19.875003814697266
    8. '1' → logprob: -20.375003814697266
    9. '۰' → logprob: -20.500003814697266
    10. ')
' → logprob: -20.750003814697266

Token 260: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029800478368997574
    2. ')' → logprob: -3.5298004150390625
    3. ' )
' → logprob: -10.404800415039062
    4. ')
' → logprob: -11.904800415039062
    5. '           ' → logprob: -12.154800415039062
    6. ')

' → logprob: -12.279800415039062
    7. '       ' → logprob: -13.404800415039062
    8. ' )' → logprob: -14.529800415039062
    9. '
' → logprob: -15.529800415039062
    10. ')`
' → logprob: -15.654800415039062

Token 261: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2898710370063782
    2. '
' → logprob: -2.0398709774017334
    3. 'inv' → logprob: -2.5398709774017334
    4. ' inv' → logprob: -3.2898709774017334
    5. 'pattern' → logprob: -6.1648712158203125
    6. ' pattern' → logprob: -6.7898712158203125
    7. '            
' → logprob: -6.9148712158203125
    8. '       ' → logprob: -7.4148712158203125
    9. 'inverse' → logprob: -8.914871215820312
    10. '   ' → logprob: -9.539871215820312

Token 262: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.055068232119083405
    2. ' inv' → logprob: -3.055068254470825
    3. '           ' → logprob: -5.055068016052246
    4. 'invert' → logprob: -10.680068016052246
    5. 'inverse' → logprob: -10.680068016052246
    6. 'in' → logprob: -10.930068016052246
    7. '   ' → logprob: -12.305068016052246
    8. ' inverted' → logprob: -12.430068016052246
    9. '_inv' → logprob: -12.930068016052246
    10. ' ' → logprob: -14.055068016052246

Token 263: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0019324433524161577
    2. 'first' → logprob: -6.376932621002197
    3. '_col' → logprob: -9.501932144165039
    4. '_' → logprob: -9.876932144165039
    5. '_pattern' → logprob: -9.876932144165039
    6. '_column' → logprob: -10.501932144165039
    7. '_f' → logprob: -11.001932144165039
    8. 'er' → logprob: -12.876932144165039
    9. ' _' → logprob: -13.751932144165039
    10. '[first' → logprob: -14.376932144165039

Token 264: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.00011927806917810813
    2. '_' → logprob: -10.12511920928955
    3. '_first' → logprob: -10.50011920928955
    4. 'col' → logprob: -10.50011920928955
    5. '=' → logprob: -12.37511920928955
    6. 'first' → logprob: -12.50011920928955
    7. '_c' → logprob: -12.50011920928955
    8. '_column' → logprob: -12.62511920928955
    9. ' _' → logprob: -12.87511920928955
    10. '_co' → logprob: -13.37511920928955

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759395360946655
    2. ' =' → logprob: -0.8259395360946655
    3. ' =[' → logprob: -16.825939178466797
    4. '=[' → logprob: -17.075939178466797
    5. ' ' → logprob: -17.450939178466797
    6. '[' → logprob: -18.700939178466797
    7. ')' → logprob: -18.825939178466797
    8. '＝' → logprob: -19.950939178466797
    9. '   ' → logprob: -19.950939178466797
    10. ' [' → logprob: -20.075939178466797

Token 266: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.5491004129871726e-05
    2. ' [' → logprob: -10.000045776367188
    3. '[
' → logprob: -16.500045776367188
    4. '   ' → logprob: -18.500045776367188
    5. ' ' → logprob: -20.625045776367188
    6. '[(' → logprob: -21.125045776367188
    7. '
' → logprob: -21.250045776367188
    8. '[len' → logprob: -21.750045776367188
    9. '[self' → logprob: -21.750045776367188
    10. '	' → logprob: -21.875045776367188

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.227250610711053e-05
    2. ' ' → logprob: -10.125041961669922
    3. '   ' → logprob: -13.625041961669922
    4. '0' → logprob: -15.000041961669922
    5. '
' → logprob: -15.125041961669922
    6. '(' → logprob: -15.625041961669922
    7. '           ' → logprob: -16.625041961669922
    8. '  ' → logprob: -16.750041961669922
    9. '       ' → logprob: -17.625041961669922
    10. '    ' → logprob: -17.625041961669922

Token 268: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3132624924182892
    2. '-' → logprob: -1.3132624626159668
    3. ' ' → logprob: -15.188262939453125
    4. '-x' → logprob: -15.813262939453125
    5. ' ' → logprob: -15.938262939453125
    6. '-c' → logprob: -16.688262939453125
    7. '-
' → logprob: -17.188262939453125
    8. '   ' → logprob: -17.438262939453125
    9. '_' → logprob: -17.563262939453125
    10. ' x' → logprob: -18.063262939453125

Token 269: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.165027217415627e-05
    2. ' x' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.62502098083496
    4. ' ' → logprob: -17.12502098083496
    5. '	x' → logprob: -17.12502098083496
    6. 'c' → logprob: -17.25002098083496
    7. '(x' → logprob: -17.37502098083496
    8. '"x' → logprob: -18.37502098083496
    9. '  ' → logprob: -19.25002098083496
    10. '```' → logprob: -19.37502098083496

Token 270: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2014193832874298
    2. 'for' → logprob: -1.7014193534851074
    3. ' ' → logprob: -12.576419830322266
    4. ' f' → logprob: -13.326419830322266
    5. '	for' → logprob: -14.951419830322266
    6. '
' → logprob: -15.451419830322266
    7. ')' → logprob: -15.826419830322266
    8. '   ' → logprob: -15.826419830322266
    9. ' fo' → logprob: -15.951419830322266
    10. '  ' → logprob: -16.701419830322266

Token 271: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03368201106786728
    2. ' x' → logprob: -3.408682107925415
    3. 'first' → logprob: -10.533681869506836
    4. ' first' → logprob: -11.783681869506836
    5. 'col' → logprob: -14.283681869506836
    6. '_' → logprob: -15.158681869506836
    7. '_x' → logprob: -15.158681869506836
    8. '	x' → logprob: -15.283681869506836
    9. ' ' → logprob: -15.408681869506836
    10. 'row' → logprob: -16.658681869506836

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5842282772064209
    2. 'in' → logprob: -0.8342282772064209
    3. 'x' → logprob: -4.834228515625
    4. ' x' → logprob: -8.709228515625
    5. 'first' → logprob: -9.209228515625
    6. 'col' → logprob: -10.959228515625
    7. 'i' → logprob: -11.959228515625
    8. ' ' → logprob: -12.084228515625
    9. ' first' → logprob: -13.709228515625
    10. ' i' → logprob: -13.834228515625

Token 273: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.0019286326132714748
    2. ' first' → logprob: -6.251928806304932
    3. '
' → logprob: -17.251928329467773
    4. 'f' → logprob: -18.126928329467773
    5. '[first' → logprob: -18.126928329467773
    6. ' ' → logprob: -18.876928329467773
    7. '	first' → logprob: -19.501928329467773
    8. 'First' → logprob: -20.251928329467773
    9. '(first' → logprob: -20.501928329467773
    10. '`' → logprob: -20.626928329467773

Token 274: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.00012809180771000683
    2. 'col' → logprob: -9.500127792358398
    3. '_' → logprob: -10.375127792358398
    4. 'first' → logprob: -11.375127792358398
    5. '_c' → logprob: -12.375127792358398
    6. '_first' → logprob: -13.250127792358398
    7. 'c' → logprob: -13.750127792358398
    8. '
' → logprob: -14.750127792358398
    9. '_cols' → logprob: -15.250127792358398
    10. '_COL' → logprob: -15.625127792358398

Token 275: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003887719241902232
    2. ']
' → logprob: -5.75388765335083
    3. '           ' → logprob: -7.62888765335083
    4. ')' → logprob: -9.003888130187988
    5. ']

' → logprob: -9.753888130187988
    6. ' ]' → logprob: -11.003888130187988
    7. '            
' → logprob: -11.128888130187988
    8. '       ' → logprob: -12.878888130187988
    9. ']
' → logprob: -13.003888130187988
    10. '
' → logprob: -13.003888130187988

Token 276: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08568762242794037
    2. '       ' → logprob: -2.9606876373291016
    3. 'for' → logprob: -3.5856876373291016
    4. ' for' → logprob: -5.960687637329102
    5. '   ' → logprob: -10.835687637329102
    6. '
' → logprob: -11.460687637329102
    7. '        
' → logprob: -12.710687637329102
    8. '            
' → logprob: -12.960687637329102
    9. '```' → logprob: -13.835687637329102
    10. '         ' → logprob: -13.960687637329102

Token 277: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00842213723808527
    2. '           ' → logprob: -5.008422374725342
    3. '       ' → logprob: -7.008422374725342
    4. ' for' → logprob: -7.133422374725342
    5. '   ' → logprob: -12.883421897888184
    6. '
' → logprob: -16.0084228515625
    7. '         ' → logprob: -16.0084228515625
    8. '	for' → logprob: -16.1334228515625
    9. '          ' → logprob: -16.3834228515625
    10. '```' → logprob: -16.7584228515625

Token 278: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.10022187232971191
    2. 'c' → logprob: -2.350221872329712
    3. '   ' → logprob: -11.600221633911133
    4. 'col' → logprob: -13.350221633911133
    5. '       ' → logprob: -13.850221633911133
    6. '(c' → logprob: -14.225221633911133
    7. ' ' → logprob: -14.475221633911133
    8. '	c' → logprob: -14.475221633911133
    9. '           ' → logprob: -14.600221633911133
    10. ' col' → logprob: -14.600221633911133

Token 279: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004915529862046242
    2. 'in' → logprob: -7.625491619110107
    3. ' ' → logprob: -12.87549114227295
    4. ' i' → logprob: -14.75049114227295
    5. '   ' → logprob: -15.87549114227295
    6. 'n' → logprob: -16.625492095947266
    7. '    ' → logprob: -16.625492095947266
    8. '	in' → logprob: -16.875492095947266
    9. '  ' → logprob: -17.000492095947266
    10. '1' → logprob: -17.250492095947266

Token 280: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38687169551849365
    2. 'range' → logprob: -1.1368716955184937
    3. ' ' → logprob: -14.636871337890625
    4. '   ' → logprob: -16.011871337890625
    5. '  ' → logprob: -17.136871337890625
    6. ' in' → logprob: -17.511871337890625
    7. '(range' → logprob: -17.636871337890625
    8. '    ' → logprob: -18.011871337890625
    9. '	range' → logprob: -18.011871337890625
    10. '1' → logprob: -18.261871337890625

Token 281: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0802738870552275e-05
    2. ' (' → logprob: -11.87501049041748
    3. '           ' → logprob: -12.87501049041748
    4. '(self' → logprob: -14.50001049041748
    5. '1' → logprob: -14.75001049041748
    6. '               ' → logprob: -15.62501049041748
    7. ',' → logprob: -16.875011444091797
    8. '(
' → logprob: -17.125011444091797
    9. '                   ' → logprob: -17.125011444091797
    10. '   ' → logprob: -18.250011444091797

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.542423165636137e-05
    2. 'self' → logprob: -9.875085830688477
    3. ' ' → logprob: -10.375085830688477
    4. '0' → logprob: -14.250085830688477
    5. '   ' → logprob: -14.250085830688477
    6. ' self' → logprob: -14.875085830688477
    7. '       ' → logprob: -15.125085830688477
    8. '           ' → logprob: -15.250085830688477
    9. '(self' → logprob: -15.875085830688477
    10. '
' → logprob: -16.812585830688477

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9146995327901095e-05
    2. ' ,' → logprob: -11.000019073486328
    3. ',self' → logprob: -14.250019073486328
    4. 'c' → logprob: -14.625019073486328
    5. ',c' → logprob: -14.625019073486328
    6. ',
' → logprob: -14.750019073486328
    7. 'self' → logprob: -15.125019073486328
    8. ' ' → logprob: -17.375019073486328
    9. '   ' → logprob: -17.375019073486328
    10. ')' → logprob: -17.625019073486328

Token 284: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006717743817716837
    2. ' self' → logprob: -5.006717681884766
    3. '           ' → logprob: -13.381717681884766
    4. '               ' → logprob: -14.631717681884766
    5. 'c' → logprob: -15.006717681884766
    6. ')' → logprob: -17.631717681884766
    7. '                   ' → logprob: -17.756717681884766
    8. '(self' → logprob: -17.756717681884766
    9. '       ' → logprob: -18.006717681884766
    10. ' ' → logprob: -18.381717681884766

Token 285: '.cols' (ID: 89556)
  Prédit: '.cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cols' → logprob: -0.00191399990580976
    2. '.rows' → logprob: -6.501914024353027
    3. '.columns' → logprob: -8.001914024353027
    4. 'cols' → logprob: -10.376914024353027
    5. '.' → logprob: -10.626914024353027
    6. ' .' → logprob: -11.001914024353027
    7. '.col' → logprob: -12.501914024353027
    8. '.cells' → logprob: -14.751914024353027
    9. ' cols' → logprob: -15.751914024353027
    10. '_cols' → logprob: -16.62691307067871

Token 286: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07963952422142029
    2. '):' → logprob: -2.579639434814453
    3. ':' → logprob: -7.704639434814453
    4. ':
' → logprob: -8.829639434814453
    5. ')' → logprob: -9.079639434814453
    6. '           ' → logprob: -11.454639434814453
    7. '):
' → logprob: -11.704639434814453
    8. '       ' → logprob: -12.454639434814453
    9. '   ' → logprob: -12.579639434814453
    10. ' ):
' → logprob: -12.579639434814453

Token 287: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10540476441383362
    2. '           ' → logprob: -2.855404853820801
    3. ' col' → logprob: -3.230404853820801
    4. 'col' → logprob: -6.480404853820801
    5. 'column' → logprob: -7.605404853820801
    6. ' column' → logprob: -7.855404853820801
    7. '       ' → logprob: -8.3554048538208
    8. '```' → logprob: -8.3554048538208
    9. '<|end|>' → logprob: -11.6054048538208
    10. ' ' → logprob: -11.9804048538208

Token 288: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' (adapté à ' col') → logprob: -0.1701125204563141
    2. ' col' → logprob: -1.9201124906539917
    3. 'column' → logprob: -5.045112609863281
    4. '           ' → logprob: -5.920112609863281
    5. ' column' → logprob: -7.420112609863281
    6. '               ' → logprob: -9.795112609863281
    7. 'first' → logprob: -10.795112609863281
    8. '	col' → logprob: -11.795112609863281
    9. ' first' → logprob: -12.170112609863281
    10. 'c' → logprob: -12.170112609863281

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269282102584839
    2. '=' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.501928329467773
    4. ')' → logprob: -17.876928329467773
    5. '   ' → logprob: -18.376928329467773
    6. ' =
' → logprob: -18.876928329467773
    7. '=get' → logprob: -19.001928329467773
    8. 's' → logprob: -19.376928329467773
    9. '  ' → logprob: -19.751928329467773
    10. ' ==' → logprob: -19.876928329467773

Token 290: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02975187823176384
    2. ' self' → logprob: -3.529751777648926
    3. '               ' → logprob: -14.904751777648926
    4. '           ' → logprob: -15.279751777648926
    5. '(self' → logprob: -15.279751777648926
    6. '[self' → logprob: -15.279751777648926
    7. 's' → logprob: -16.654752731323242
    8. '	self' → logprob: -16.779752731323242
    9. ' ' → logprob: -17.654752731323242
    10. '
' → logprob: -17.779752731323242

Token 291: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0028354227542877197
    2. 'get' → logprob: -5.877835273742676
    3. '.' → logprob: -10.502835273742676
    4. ' .' → logprob: -13.252835273742676
    5. ' get' → logprob: -14.627835273742676
    6. '
' → logprob: -16.127836227416992
    7. ' ' → logprob: -16.377836227416992
    8. '   ' → logprob: -16.627836227416992
    9. '	get' → logprob: -16.752836227416992
    10. '_get' → logprob: -16.877836227416992

Token 292: '_column' (ID: 19908)
  Prédit: '_column'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_column' → logprob: -8.77627644513268e-06
    2. 'column' → logprob: -11.875008583068848
    3. 'c' → logprob: -13.500008583068848
    4. 'Column' → logprob: -15.125008583068848
    5. '(c' → logprob: -16.750009536743164
    6. '_c' → logprob: -17.375009536743164
    7. '_col' → logprob: -18.125009536743164
    8. '_COLUMN' → logprob: -18.250009536743164
    9. '[c' → logprob: -18.375009536743164
    10. 'COLUMN' → logprob: -19.125009536743164

Token 293: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0024963486939668655
    2. '(' → logprob: -6.002496242523193
    3. '(
' → logprob: -10.877496719360352
    4. 'c' → logprob: -13.502496719360352
    5. ' (' → logprob: -14.752496719360352
    6. '(C' → logprob: -17.00249671936035
    7. '(

' → logprob: -18.62749671936035
    8. ' c' → logprob: -19.12749671936035
    9. '(s' → logprob: -19.25249671936035
    10. ')c' → logprob: -19.50249671936035

Token 294: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08035943657159805
    2. ')' → logprob: -2.58035945892334
    3. '               ' → logprob: -6.58035945892334
    4. ' )
' → logprob: -10.45535945892334
    5. '           ' → logprob: -10.58035945892334
    6. ')
' → logprob: -10.95535945892334
    7. '       ' → logprob: -12.70535945892334
    8. ')

' → logprob: -12.95535945892334
    9. ')c' → logprob: -13.58035945892334
    10. ' )' → logprob: -13.95535945892334

Token 295: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00039349604048766196
    2. 'if' → logprob: -8.750393867492676
    3. ' if' → logprob: -9.000393867492676
    4. '```' → logprob: -9.750393867492676
    5. '           ' → logprob: -10.000393867492676
    6. '       ' → logprob: -13.250393867492676
    7. ' ' → logprob: -13.375393867492676
    8. '
' → logprob: -14.250393867492676
    9. '                   ' → logprob: -14.375393867492676
    10. '                
' → logprob: -14.375393867492676

Token 296: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.018179206177592278
    2. ' if' → logprob: -4.018179416656494
    3. '               ' → logprob: -10.518178939819336
    4. '
' → logprob: -13.393178939819336
    5. '           ' → logprob: -15.143178939819336
    6. 'If' → logprob: -15.643178939819336
    7. '```' → logprob: -16.143178939819336
    8. 'for' → logprob: -16.393178939819336
    9. '                   ' → logprob: -16.393178939819336
    10. '                
' → logprob: -18.393178939819336

Token 297: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.03804344683885574
    2. 'col' → logprob: -3.28804349899292
    3. 'c' → logprob: -13.288043022155762
    4. ' c' → logprob: -16.288043975830078
    5. '(col' → logprob: -16.663043975830078
    6. '[col' → logprob: -17.163043975830078
    7. '	col' → logprob: -17.413043975830078
    8. '
' → logprob: -18.788043975830078
    9. ' not' → logprob: -19.913043975830078
    10. '```' → logprob: -20.163043975830078

Token 298: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.38704395294189453
    2. '!=' → logprob: -1.1370439529418945
    3. ' not' → logprob: -8.762043952941895
    4. ')!=' → logprob: -11.887043952941895
    5. 'not' → logprob: -13.012043952941895
    6. ']!=' → logprob: -13.512043952941895
    7. '==' → logprob: -13.637043952941895
    8. '()!=' → logprob: -13.887043952941895
    9. ' ' → logprob: -14.137043952941895
    10. ' ==' → logprob: -14.137043952941895

Token 299: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.06196824833750725
    2. ' first' → logprob: -2.8119683265686035
    3. '[first' → logprob: -15.186967849731445
    4. '	first' → logprob: -15.811967849731445
    5. '
' → logprob: -16.561967849731445
    6. '(first' → logprob: -17.186967849731445
    7. 'First' → logprob: -17.561967849731445
    8. 'inv' → logprob: -17.936967849731445
    9. 'f' → logprob: -18.436967849731445
    10. '_first' → logprob: -19.311967849731445

Token 300: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -1.1472419600977446e-06
    2. '_c' → logprob: -14.375000953674316
    3. '_' → logprob: -14.500000953674316
    4. '_first' → logprob: -17.375001907348633
    5. '_cat' → logprob: -18.000001907348633
    6. '_cols' → logprob: -18.250001907348633
    7. '_co' → logprob: -18.625001907348633
    8. 'col' → logprob: -18.750001907348633
    9. '_column' → logprob: -19.000001907348633
    10. ' _' → logprob: -19.750001907348633

Token 301: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0019286326132714748
    2. 'and' → logprob: -6.251928806304932
    3. ' an' → logprob: -18.626928329467773
    4. '&&' → logprob: -19.126928329467773
    5. '               ' → logprob: -19.376928329467773
    6. ' a' → logprob: -19.501928329467773
    7. '```' → logprob: -19.876928329467773
    8. ' &&' → logprob: -20.001928329467773
    9. '                ' → logprob: -20.001928329467773
    10. ' ' → logprob: -20.001928329467773

Token 302: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.061967797577381134
    2. 'col' → logprob: -2.8119678497314453
    3. 'c' → logprob: -16.936967849731445
    4. '	col' → logprob: -17.311967849731445
    5. '(col' → logprob: -18.061967849731445
    6. ' c' → logprob: -18.311967849731445
    7. '[col' → logprob: -18.811967849731445
    8. '               ' → logprob: -18.936967849731445
    9. ' ' → logprob: -19.186967849731445
    10. '    ' → logprob: -19.561967849731445

Token 303: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.014164801687002182
    2. '!=' → logprob: -4.264164924621582
    3. '!=(' → logprob: -14.514164924621582
    4. ')!=' → logprob: -15.389164924621582
    5. ' ' → logprob: -15.514164924621582
    6. '!=-' → logprob: -16.389163970947266
    7. '()!=' → logprob: -16.514163970947266
    8. ' ' → logprob: -16.764163970947266
    9. ' !' → logprob: -16.889163970947266
    10. '!='' → logprob: -17.139163970947266

Token 304: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.038042180240154266
    2. ' inv' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.288042068481445
    4. '   ' → logprob: -15.788042068481445
    5. '(inv' → logprob: -16.038042068481445
    6. '
' → logprob: -17.163042068481445
    7. '.inv' → logprob: -17.413042068481445
    8. '_inv' → logprob: -17.413042068481445
    9. '    ' → logprob: -17.538042068481445
    10. '  ' → logprob: -17.538042068481445

Token 305: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -6.749814019713085e-06
    2. 'first' → logprob: -12.125006675720215
    3. 'v' → logprob: -14.375006675720215
    4. 'f' → logprob: -16.00000762939453
    5. '_pattern' → logprob: -16.12500762939453
    6. 'First' → logprob: -16.50000762939453
    7. '_f' → logprob: -16.62500762939453
    8. '_FIRST' → logprob: -17.25000762939453
    9. '_inv' → logprob: -17.37500762939453
    10. '_col' → logprob: -17.37500762939453

Token 306: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.000511687423568219
    2. 'col' → logprob: -7.625511646270752
    3. '_pattern' → logprob: -11.25051212310791
    4. 'Col' → logprob: -12.50051212310791
    5. 'pattern' → logprob: -13.62551212310791
    6. '_c' → logprob: -13.87551212310791
    7. 'ed' → logprob: -13.87551212310791
    8. '_first' → logprob: -14.00051212310791
    9. '_' → logprob: -14.25051212310791
    10. 'c' → logprob: -14.62551212310791

Token 307: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47662442922592163
    2. ':
' → logprob: -0.9766244292259216
    3. '               ' → logprob: -6.226624488830566
    4. '                   ' → logprob: -7.851624488830566
    5. '):
' → logprob: -9.226624488830566
    6. ':return' → logprob: -10.101624488830566
    7. '           ' → logprob: -10.726624488830566
    8. '):' → logprob: -11.726624488830566
    9. ')' → logprob: -13.351624488830566
    10. 'return' → logprob: -13.601624488830566

Token 308: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.27909085154533386
    2. '               ' → logprob: -1.5290908813476562
    3. 'return' → logprob: -4.154090881347656
    4. ' return' → logprob: -4.529090881347656
    5. '           ' → logprob: -8.904090881347656
    6. '                       ' → logprob: -9.654090881347656
    7. '
' → logprob: -10.029090881347656
    8. '   ' → logprob: -10.779090881347656
    9. '       ' → logprob: -11.279090881347656
    10. '                  ' → logprob: -11.779090881347656

Token 309: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1279088407754898
    2. ' return' → logprob: -2.127908945083618
    3. '               ' → logprob: -7.252908706665039
    4. '                   ' → logprob: -8.377908706665039
    5. '   ' → logprob: -11.127908706665039
    6. '           ' → logprob: -11.127908706665039
    7. '	return' → logprob: -12.127908706665039
    8. '       ' → logprob: -12.377908706665039
    9. '                       ' → logprob: -13.377908706665039
    10. ' ' → logprob: -14.002908706665039

Token 310: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0206720617134124e-05
    2. ' False' → logprob: -11.50001049041748
    3. 'True' → logprob: -22.750009536743164
    4. '(False' → logprob: -24.500009536743164
    5. 'false' → logprob: -24.875009536743164
    6. 'F' → logprob: -25.375009536743164
    7. '=False' → logprob: -25.625009536743164
    8. '_false' → logprob: -25.750009536743164
    9. 'Fal' → logprob: -26.125009536743164
    10. '.False' → logprob: -27.500009536743164

Token 311: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6589734554290771
    2. '           ' → logprob: -1.2839734554290771
    3. '
' → logprob: -1.7839734554290771
    4. '        
' → logprob: -3.408973455429077
    5. 'return' → logprob: -6.533973693847656
    6. '            
' → logprob: -6.658973693847656
    7. '		
' → logprob: -7.658973693847656
    8. '    
' → logprob: -7.658973693847656
    9. ' return' → logprob: -8.783973693847656
    10. '<|end|>' → logprob: -8.783973693847656

Token 312: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07336316257715225
    2. '           ' → logprob: -2.6983630657196045
    3. '
' → logprob: -6.698363304138184
    4. 'return' → logprob: -6.823363304138184
    5. '        
' → logprob: -7.198363304138184
    6. '   ' → logprob: -8.448363304138184
    7. '            
' → logprob: -10.198363304138184
    8. '    
' → logprob: -10.573363304138184
    9. ' return' → logprob: -10.948363304138184
    10. '```' → logprob: -11.073363304138184

Token 313: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01833278127014637
    2. '       ' → logprob: -4.0183329582214355
    3. '   ' → logprob: -9.643332481384277
    4. '           ' → logprob: -9.893332481384277
    5. '
' → logprob: -10.018332481384277
    6. ' return' → logprob: -11.143332481384277
    7. '        
' → logprob: -12.268332481384277
    8. '	return' → logprob: -12.768332481384277
    9. '    
' → logprob: -14.893332481384277
    10. '            
' → logprob: -15.268332481384277

Token 314: ' Finally' (ID: 23568)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001050911727361381
    2. '#' → logprob: -7.25105094909668
    3. '       ' → logprob: -9.25105094909668
    4. '           ' → logprob: -9.25105094909668
    5. 'count' → logprob: -9.25105094909668
    6. 'Return' → logprob: -10.50105094909668
    7. ' return' → logprob: -11.62605094909668
    8. 'if' → logprob: -11.75105094909668
    9. 'counts' → logprob: -13.25105094909668
    10. 'row' → logprob: -13.50105094909668

Token 315: ' check' (ID: 2371)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.27758482098579407
    2. '           ' → logprob: -1.9025847911834717
    3. 'return' → logprob: -2.6525847911834717
    4. '
' → logprob: -4.277585029602051
    5. '       ' → logprob: -5.027585029602051
    6. '   ' → logprob: -6.277585029602051
    7. ',' → logprob: -8.65258502960205
    8. ' True' → logprob: -9.40258502960205
    9. '    ' → logprob: -9.77758502960205
    10. '  ' → logprob: -10.77758502960205

Token 316: ' that' (ID: 484)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8838722705841064
    2. ' row' → logprob: -1.7588722705841064
    3. ' (' → logprob: -2.5088722705841064
    4. 'row' → logprob: -3.0088722705841064
    5. ' that' → logprob: -3.0088722705841064
    6. ' number' → logprob: -3.5088722705841064
    7. 'if' → logprob: -3.6338722705841064
    8. ' rows' → logprob: -3.8838722705841064
    9. ' whether' → logprob: -3.8838722705841064
    10. '   ' → logprob: -4.008872032165527

Token 317: ' patterns' (ID: 18587)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.4252932667732239
    2. ' pattern' → logprob: -1.800293207168579
    3. 'sum' → logprob: -2.300293207168579
    4. ' sum' → logprob: -3.425293207168579
    5. ' (' → logprob: -4.550293445587158
    6. 'len' → logprob: -5.050293445587158
    7. 'self' → logprob: -5.050293445587158
    8. '(pattern' → logprob: -5.425293445587158
    9. '#' → logprob: -6.050293445587158
    10. '(sum' → logprob: -6.175293445587158

Token 318: ' are' (ID: 553)
  Prédit: ' alternate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alternate' → logprob: -1.2120074033737183
    2. ' of' → logprob: -1.3370074033737183
    3. ' for' → logprob: -1.3370074033737183
    4. ' are' → logprob: -2.712007522583008
    5. ' in' → logprob: -4.087007522583008
    6. '0' → logprob: -4.462007522583008
    7. 'for' → logprob: -4.587007522583008
    8. '   ' → logprob: -4.837007522583008
    9. ' between' → logprob: -4.837007522583008
    10. 'of' → logprob: -4.837007522583008

Token 319: ' crossing' (ID: 50946)
  Prédit: ' consistent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' consistent' → logprob: -0.7717705368995667
    2. 'balanced' → logprob: -2.021770477294922
    3. 'consistent' → logprob: -2.021770477294922
    4. ' balanced' → logprob: -2.396770477294922
    5. ' alternating' → logprob: -3.021770477294922
    6. ' not' → logprob: -3.146770477294922
    7. 'altern' → logprob: -3.396770477294922
    8. 'compatible' → logprob: -4.271770477294922
    9. 'not' → logprob: -4.646770477294922
    10. ' valid' → logprob: -5.021770477294922

Token 320: ' consistently' (ID: 31454)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07791402190923691
    2. ' for' → logprob: -3.327913999557495
    3. ' correctly' → logprob: -4.452914237976074
    4. ' pattern' → logprob: -5.202914237976074
    5. '
' → logprob: -5.327914237976074
    6. ' at' → logprob: -5.702914237976074
    7. '[' → logprob: -6.202914237976074
    8. ',' → logprob: -6.327914237976074
    9. '            
' → logprob: -6.702914237976074
    10. 'pattern' → logprob: -6.702914237976074

Token 321: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022451283410191536
    2. '       ' → logprob: -3.897451400756836
    3. '
' → logprob: -6.522451400756836
    4. '            
' → logprob: -8.647451400756836
    5. '        
' → logprob: -10.147451400756836
    6. ',' → logprob: -10.397451400756836
    7. '   ' → logprob: -10.397451400756836
    8. '    
' → logprob: -10.522451400756836
    9. '          ' → logprob: -10.647451400756836
    10. ' for' → logprob: -11.272451400756836

Token 322: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14470551908016205
    2. '           ' → logprob: -2.0197055339813232
    3. ' for' → logprob: -7.394705295562744
    4. 'if' → logprob: -7.769705295562744
    5. 'for' → logprob: -7.769705295562744
    6. '   ' → logprob: -8.394705772399902
    7. ' if' → logprob: -8.769705772399902
    8. 'return' → logprob: -10.269705772399902
    9. '        
' → logprob: -10.644705772399902
    10. '
' → logprob: -10.769705772399902

Token 323: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10668566077947617
    2. 'if' → logprob: -2.4816856384277344
    3. 'first' → logprob: -4.481685638427734
    4. 'return' → logprob: -5.856685638427734
    5. ' for' → logprob: -6.856685638427734
    6. 'row' → logprob: -7.481685638427734
    7. '           ' → logprob: -7.856685638427734
    8. 'base' → logprob: -8.356685638427734
    9. ' if' → logprob: -8.356685638427734
    10. 'top' → logprob: -8.731685638427734

Token 324: ' pattern' (ID: 8302)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6704628467559814
    2. ' for' → logprob: -1.0454628467559814
    3. ' if' → logprob: -3.4204628467559814
    4. 'if' → logprob: -3.4204628467559814
    5. 'first' → logprob: -3.7954628467559814
    6. ' first' → logprob: -3.9204628467559814
    7. '#' → logprob: -4.920462608337402
    8. 'pattern' → logprob: -5.670462608337402
    9. 'return' → logprob: -5.920462608337402
    10. ' base' → logprob: -6.170462608337402

Token 325: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2903192937374115
    2. '_counts' → logprob: -2.6653192043304443
    3. '_row' → logprob: -3.5403192043304443
    4. '1' → logprob: -3.5403192043304443
    5. '_count' → logprob: -3.6653192043304443
    6. '_length' → logprob: -4.540319442749023
    7. '_' → logprob: -4.540319442749023
    8. '_lengths' → logprob: -4.665319442749023
    9. 'counts' → logprob: -4.790319442749023
    10. '_type' → logprob: -4.790319442749023

Token 326: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8922407627105713
    2. '0' → logprob: -1.5172407627105713
    3. '[' → logprob: -1.7672407627105713
    4. '_' → logprob: -2.1422407627105713
    5. '=' → logprob: -3.8922407627105713
    6. '_count' → logprob: -4.392240524291992
    7. 'def' → logprob: -4.392240524291992
    8. 'and' → logprob: -5.642240524291992
    9. '_c' → logprob: -5.767240524291992
    10. 'count' → logprob: -5.892240524291992

Token 327: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001454955490771681
    2. 'c' → logprob: -9.87514591217041
    3. ' ' → logprob: -9.87514591217041
    4. ']' → logprob: -11.00014591217041
    5. '[' → logprob: -11.75014591217041
    6. '
' → logprob: -12.25014591217041
    7. 'i' → logprob: -12.62514591217041
    8. '][' → logprob: -12.62514591217041
    9. '   ' → logprob: -14.31264591217041
    10. '(' → logprob: -14.56264591217041

Token 328: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01468943152576685
    2. ' ]' → logprob: -4.3896894454956055
    3. ']==' → logprob: -6.6396894454956055
    4. '[' → logprob: -7.8896894454956055
    5. ']^' → logprob: -8.889689445495605
    6. ' ^' → logprob: -9.264689445495605
    7. '^' → logprob: -9.514689445495605
    8. ']!=' → logprob: -9.514689445495605
    9. '][' → logprob: -10.514689445495605
    10. '==' → logprob: -10.764689445495605

Token 329: ' should' (ID: 1757)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4981366991996765
    2. '^' → logprob: -1.9981367588043213
    3. ' !=' → logprob: -2.1231367588043213
    4. '==' → logprob: -2.4981367588043213
    5. ' ^' → logprob: -3.1231367588043213
    6. ' ==' → logprob: -5.123136520385742
    7. ' ' → logprob: -6.123136520385742
    8. '=' → logprob: -6.248136520385742
    9. ' ^=' → logprob: -8.873136520385742
    10. '[' → logprob: -9.248136520385742

Token 330: ' equal' (ID: 12629)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.09482789784669876
    2. ' !=' → logprob: -2.469827890396118
    3. '==' → logprob: -5.969828128814697
    4. ' be' → logprob: -6.094828128814697
    5. ' ==' → logprob: -7.594828128814697
    6. '=' → logprob: -8.719827651977539
    7. '^' → logprob: -8.719827651977539
    8. ' ' → logprob: -9.844827651977539
    9. ' not' → logprob: -10.594827651977539
    10. '==
' → logprob: -10.969827651977539

Token 331: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.8260118365287781
    2. 'inv' → logprob: -1.3260118961334229
    3. '1' → logprob: -1.8260118961334229
    4. ' first' → logprob: -2.451011896133423
    5. ' inv' → logprob: -4.076011657714844
    6. '(' → logprob: -4.076011657714844
    7. ' ' → logprob: -5.701011657714844
    8. 'pattern' → logprob: -5.701011657714844
    9. ' (' → logprob: -5.826011657714844
    10. '0' → logprob: -5.951011657714844

Token 332: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -9.968312951968983e-06
    2. 'col' → logprob: -12.000009536743164
    3. '_' → logprob: -13.375009536743164
    4. '_row' → logprob: -14.375009536743164
    5. '_c' → logprob: -14.500009536743164
    6. '_column' → logprob: -15.125009536743164
    7. '_co' → logprob: -15.625009536743164
    8. ' _' → logprob: -16.000009536743164
    9. '
' → logprob: -16.250009536743164
    10. '_cols' → logprob: -16.625009536743164

Token 333: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00024215869780164212
    2. '0' → logprob: -8.375242233276367
    3. '[
' → logprob: -11.875242233276367
    4. ' [' → logprob: -12.875242233276367
    5. '```' → logprob: -14.625242233276367
    6. '][' → logprob: -15.125242233276367
    7. '   ' → logprob: -15.250242233276367
    8. '\[' → logprob: -15.625242233276367
    9. '
' → logprob: -15.750242233276367
    10. '(' → logprob: -16.125242233276367

Token 334: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '
' → logprob: -17.000001907348633
    4. '[' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '(' → logprob: -18.125001907348633
    7. '۰' → logprob: -18.625001907348633
    8. ']' → logprob: -18.875001907348633
    9. '```' → logprob: -19.500001907348633
    10. '           ' → logprob: -19.937501907348633

Token 335: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00123332638759166
    2. ']
' → logprob: -7.251233100891113
    3. ' ]' → logprob: -7.876233100891113
    4. ']:
' → logprob: -10.001233100891113
    5. '])' → logprob: -10.376233100891113
    6. ']:' → logprob: -10.751233100891113
    7. ')' → logprob: -11.001233100891113
    8. ']==' → logprob: -11.876233100891113
    9. ' and' → logprob: -12.376233100891113
    10. '           ' → logprob: -12.376233100891113

Token 336: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8413739204406738
    2. ' and' → logprob: -1.0913739204406738
    3. 'and' → logprob: -1.7163739204406738
    4. ' True' → logprob: -3.966373920440674
    5. ' ' → logprob: -4.216373920440674
    6. ' return' → logprob: -5.341373920440674
    7. 'return' → logprob: -5.341373920440674
    8. '
' → logprob: -5.966373920440674
    9. 'True' → logprob: -6.966373920440674
    10. '0' → logprob: -6.966373920440674

Token 337: ' impossible' (ID: 19786)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20168940722942352
    2. 'return' → logprob: -1.70168936252594
    3. '           ' → logprob: -8.451689720153809
    4. 'False' → logprob: -10.951689720153809
    5. ' False' → logprob: -11.326689720153809
    6. '
' → logprob: -11.951689720153809
    7. '   ' → logprob: -11.951689720153809
    8. ' we' → logprob: -12.951689720153809
    9. 'pattern' → logprob: -13.201689720153809
    10. ' not' → logprob: -13.201689720153809

Token 338: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005865628831088543
    2. '       ' → logprob: -5.255865573883057
    3. ' if' → logprob: -7.755865573883057
    4. 'if' → logprob: -9.380866050720215
    5. '.' → logprob: -10.255866050720215
    6. '
' → logprob: -10.880866050720215
    7. '   ' → logprob: -10.880866050720215
    8. ',' → logprob: -11.630866050720215
    9. '          ' → logprob: -11.630866050720215
    10. '               ' → logprob: -12.255866050720215

Token 339: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029837964102625847
    2. '       ' → logprob: -3.5298378467559814
    3. '
' → logprob: -10.029837608337402
    4. '          ' → logprob: -11.529837608337402
    5. 'if' → logprob: -11.904837608337402
    6. '            
' → logprob: -12.154837608337402
    7. ' if' → logprob: -12.279837608337402
    8. '        
' → logprob: -12.404837608337402
    9. '               ' → logprob: -12.904837608337402
    10. '   ' → logprob: -12.904837608337402

Token 340: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6126893162727356
    2. '           ' → logprob: -0.8626893162727356
    3. 'if' (adapté à ' if') → logprob: -3.487689256668091
    4. ' if' → logprob: -5.23768949508667
    5. '   ' → logprob: -9.112689018249512
    6. 'return' → logprob: -9.737689018249512
    7. '```' → logprob: -11.862689018249512
    8. '          ' → logprob: -11.987689018249512
    9. '               ' → logprob: -12.612689018249512
    10. ' return' → logprob: -12.862689018249512

Token 341: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.10020710527896881
    2. ' pattern' → logprob: -2.3502070903778076
    3. 'pat' → logprob: -14.975207328796387
    4. '(pattern' → logprob: -15.850207328796387
    5. '           ' → logprob: -19.35020637512207
    6. 'self' → logprob: -19.47520637512207
    7. '   ' → logprob: -19.72520637512207
    8. 'Pattern' → logprob: -20.10020637512207
    9. '_pattern' → logprob: -20.60020637512207
    10. 'p' → logprob: -20.72520637512207

Token 342: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.250000953674316
    3. '۰' → logprob: -19.875
    4. ' ' → logprob: -20.0
    5. '_' → logprob: -21.25
    6. '```' → logprob: -21.375
    7. '０' → logprob: -21.75
    8. '[
' → logprob: -22.0
    9. '
' → logprob: -22.125
    10. 'o' → logprob: -22.375

Token 343: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. ' [' → logprob: -14.250000953674316
    3. '[
' → logprob: -15.500000953674316
    4. '==' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '0' → logprob: -17.125001907348633
    7. '```' → logprob: -17.500001907348633
    8. '!=' → logprob: -17.875001907348633
    9. '
' → logprob: -18.500001907348633
    10. ' ' → logprob: -18.625001907348633

Token 344: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '[' → logprob: -17.375003814697266
    4. '
' → logprob: -17.500003814697266
    5. '   ' → logprob: -18.125003814697266
    6. '  ' → logprob: -19.625003814697266
    7. '1' → logprob: -20.375003814697266
    8. '     ' → logprob: -20.625003814697266
    9. ']' → logprob: -21.000003814697266
    10. '```' → logprob: -21.000003814697266

Token 345: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.313700407743454
    2. ' !=' → logprob: -1.3137004375457764
    3. ']' → logprob: -8.188700675964355
    4. ')' → logprob: -9.438700675964355
    5. ']!=' → logprob: -10.063700675964355
    6. ')!=' → logprob: -10.688700675964355
    7. '==' → logprob: -11.438700675964355
    8. ' ]' → logprob: -13.563700675964355
    9. '=' → logprob: -14.063700675964355
    10. '!=(' → logprob: -14.188700675964355

Token 346: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0002997120900545269
    2. ' !=' → logprob: -8.125299453735352
    3. ')!=' → logprob: -13.250299453735352
    4. '()!=' → logprob: -14.125299453735352
    5. '!==' → logprob: -14.500299453735352
    6. ']!=' → logprob: -15.000299453735352
    7. '==' → logprob: -15.625299453735352
    8. '!=(' → logprob: -16.50029945373535
    9. '!' → logprob: -17.25029945373535
    10. '```' → logprob: -17.87529945373535

Token 347: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.0040785204619169235
    2. ' first' → logprob: -5.504078388214111
    3. 'f' → logprob: -16.629077911376953
    4. '	first' → logprob: -17.379077911376953
    5. '[first' → logprob: -18.879077911376953
    6. '1' → logprob: -19.379077911376953
    7. '(first' → logprob: -19.379077911376953
    8. 'First' → logprob: -19.629077911376953
    9. 'front' → logprob: -20.629077911376953
    10. 'fi' → logprob: -20.879077911376953

Token 348: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -7.107425062713446e-06
    2. 'col' → logprob: -12.250006675720215
    3. '_' → logprob: -13.875006675720215
    4. '_c' → logprob: -15.125006675720215
    5. '0' → logprob: -15.500006675720215
    6. '_COL' → logprob: -15.500006675720215
    7. 'f' → logprob: -16.50000762939453
    8. 'Col' → logprob: -16.75000762939453
    9. 'c' → logprob: -16.87500762939453
    10. '_co' → logprob: -17.12500762939453

Token 349: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016539888747502118
    2. '0' → logprob: -8.750164985656738
    3. '[
' → logprob: -12.875164985656738
    4. ' [' → logprob: -13.125164985656738
    5. '(' → logprob: -13.625164985656738
    6. '   ' → logprob: -14.750164985656738
    7. '       ' → logprob: -15.375164985656738
    8. '][' → logprob: -16.375165939331055
    9. '```' → logprob: -16.375165939331055
    10. '           ' → logprob: -16.375165939331055

Token 350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '[' → logprob: -16.375
    4. '   ' → logprob: -19.125
    5. ']' → logprob: -19.625
    6. ')' → logprob: -20.125
    7. '       ' → logprob: -21.125
    8. '۰' → logprob: -21.125
    9. '           ' → logprob: -21.5
    10. '][' → logprob: -22.125

Token 351: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13991130888462067
    2. '):
' → logprob: -2.139911413192749
    3. ':' → logprob: -5.01491117477417
    4. ')' → logprob: -5.13991117477417
    5. ':
' → logprob: -8.014911651611328
    6. ':return' → logprob: -11.014911651611328
    7. '           ' → logprob: -11.514911651611328
    8. '):
' → logprob: -11.514911651611328
    9. ')return' → logprob: -11.514911651611328
    10. ']:' → logprob: -11.639911651611328

Token 352: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0575876384973526
    2. ':' → logprob: -3.3075876235961914
    3. '           ' → logprob: -4.307587623596191
    4. ':
' → logprob: -5.557587623596191
    5. ':return' → logprob: -6.432587623596191
    6. ' return' → logprob: -9.057587623596191
    7. 'return' → logprob: -9.182587623596191
    8. '       ' → logprob: -10.182587623596191
    9. '              ' → logprob: -10.182587623596191
    10. '):
' → logprob: -10.557587623596191

Token 353: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06621082872152328
    2. ' return' → logprob: -2.8162107467651367
    3. '               ' → logprob: -5.566210746765137
    4. '           ' → logprob: -8.066210746765137
    5. '   ' → logprob: -9.441210746765137
    6. '
' → logprob: -12.316210746765137
    7. '                   ' → logprob: -12.316210746765137
    8. '	return' → logprob: -12.316210746765137
    9. '       ' → logprob: -13.691210746765137
    10. '{return' → logprob: -14.066210746765137

Token 354: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -6.2729995988775045e-06
    2. ' False' → logprob: -12.000006675720215
    3. 'True' → logprob: -21.2500057220459
    4. 'false' → logprob: -21.7500057220459
    5. 'F' → logprob: -22.1250057220459
    6. '_false' → logprob: -24.0000057220459
    7. 'Fa' → logprob: -24.0000057220459
    8. 'None' → logprob: -24.1250057220459
    9. '=False' → logprob: -24.2500057220459
    10. 'Fal' → logprob: -24.2500057220459

Token 355: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3151744604110718
    2. '       ' → logprob: -1.4401744604110718
    3. '        
' → logprob: -4.565174579620361
    4. '           ' → logprob: -4.690174579620361
    5. 'return' → logprob: -4.940174579620361
    6. '    
' → logprob: -6.065174579620361
    7. '		
' → logprob: -6.690174579620361
    8. '            
' → logprob: -7.440174579620361
    9. '   ' → logprob: -7.690174579620361
    10. '\
' → logprob: -7.690174579620361

Token 356: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057804934680461884
    2. 'return' → logprob: -3.057804822921753
    3. '           ' → logprob: -4.932805061340332
    4. '
' → logprob: -7.307805061340332
    5. '        
' → logprob: -7.432805061340332
    6. '   ' → logprob: -7.932805061340332
    7. '	return' → logprob: -8.932805061340332
    8. '	' → logprob: -9.432805061340332
    9. ' return' → logprob: -9.557805061340332
    10. '    
' → logprob: -11.057805061340332

Token 357: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003293447894975543
    2. '       ' → logprob: -5.753293514251709
    3. '
' → logprob: -9.87829303741455
    4. '           ' → logprob: -10.25329303741455
    5. ' return' → logprob: -10.75329303741455
    6. '   ' → logprob: -12.62829303741455
    7. '        
' → logprob: -13.75329303741455
    8. '#' → logprob: -14.12829303741455
    9. '            
' → logprob: -14.12829303741455
    10. '	return' → logprob: -14.37829303741455

Token 358: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.006715370807796717
    2. ' True' → logprob: -5.006715297698975
    3. 'Tr' → logprob: -18.756715774536133
    4. '   ' → logprob: -19.006715774536133
    5. '(True' → logprob: -19.631715774536133
    6. '=True' → logprob: -21.256715774536133
    7. '           ' → logprob: -22.131715774536133
    8. '       ' → logprob: -22.256715774536133
    9. ' Tru' → logprob: -22.881715774536133
    10. '               ' → logprob: -23.131715774536133

Token 359: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 361: ' class' (ID: 744)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 362: ' Input' (ID: 10090)
  Prédit: ' Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Solver' → logprob: -0.2441651076078415
    2. ' Solution' → logprob: -1.744165062904358
    3. ' Pattern' → logprob: -4.494164943695068
    4. ' Checker' → logprob: -4.619164943695068
    5. ' Row' → logprob: -5.244164943695068
    6. ' Builder' → logprob: -5.619164943695068
    7. ' Result' → logprob: -5.994164943695068
    8. ' Grid' → logprob: -6.119164943695068
    9. 'Solver' → logprob: -6.869164943695068
    10. ' Input' → logprob: -7.494164943695068

Token 363: 'Parser' (ID: 9231)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1099802553653717
    2. 'Reader' → logprob: -3.234980344772339
    3. 'Parser' → logprob: -3.734980344772339
    4. 'Data' → logprob: -4.10998010635376
    5. '():' → logprob: -4.73498010635376
    6. 'Handler' → logprob: -4.98498010635376
    7. 'Processor' → logprob: -5.98498010635376
    8. ':
' → logprob: -6.10998010635376
    9. 'Tokenizer' → logprob: -6.98498010635376
    10. 'Line' → logprob: -7.48498010635376

Token 364: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001261845463886857
    2. ':
' → logprob: -9.000125885009766
    3. ':def' → logprob: -13.625125885009766
    4. '(' → logprob: -14.750125885009766
    5. ' :' → logprob: -15.125125885009766
    6. '):' → logprob: -15.750125885009766
    7. '(object' → logprob: -15.875125885009766
    8. '   ' → logprob: -16.000125885009766
    9. '():' → logprob: -16.000125885009766
    10. ':

' → logprob: -16.375125885009766

Token 365: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3598823547363281
    2. '       ' → logprob: -1.2348823547363281
    3. ' def' → logprob: -5.609882354736328
    4. 'def' → logprob: -5.609882354736328
    5. '
' → logprob: -6.234882354736328
    6. '<|end|>' → logprob: -6.859882354736328
    7. '    
' → logprob: -7.984882354736328
    8. '    ' → logprob: -9.109882354736328
    9. '<|end|>' → logprob: -9.109882354736328
    10. '	def' → logprob: -9.359882354736328

Token 366: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.06204095482826233
    2. 'def' → logprob: -2.8120410442352295
    3. '   ' → logprob: -9.812041282653809
    4. 'class' → logprob: -11.187041282653809
    5. ' class' → logprob: -12.687041282653809
    6. '	def' → logprob: -14.187041282653809
    7. ' @' → logprob: -14.312041282653809
    8. '@' (adapté à ' @') → logprob: -15.562041282653809
    9. '    ' → logprob: -16.812040328979492
    10. ' ' → logprob: -17.312040328979492

Token 367: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0001637300301808864
    2. 'classmethod' → logprob: -8.750164031982422
    3. 'static' → logprob: -12.250164031982422
    4. 'dat' → logprob: -14.500164031982422
    5. 'st' → logprob: -18.875164031982422
    6. 'property' → logprob: -20.125164031982422
    7. 'stat' → logprob: -20.750164031982422
    8. ' static' → logprob: -20.875164031982422
    9. 'sta' → logprob: -21.250164031982422
    10. 'Static' → logprob: -23.750164031982422

Token 368: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44987231492996216
    2. '       ' → logprob: -1.4498722553253174
    3. ' def' → logprob: -2.9498722553253174
    4. '   ' → logprob: -2.9498722553253174
    5. '
' → logprob: -3.8248722553253174
    6. '	def' → logprob: -7.4498724937438965
    7. '        
' → logprob: -8.449872016906738
    8. '    
' → logprob: -8.949872016906738
    9. '(def' → logprob: -10.074872016906738
    10. '\' → logprob: -10.199872016906738

Token 369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08119545876979828
    2. 'def' → logprob: -2.70619535446167
    3. '   ' → logprob: -4.83119535446167
    4. '
' → logprob: -6.45619535446167
    5. ' def' → logprob: -6.70619535446167
    6. '	def' → logprob: -7.95619535446167
    7. '	   ' → logprob: -9.956195831298828
    8. '        
' → logprob: -11.581195831298828
    9. '    
' → logprob: -12.331195831298828
    10. '<|end|>' → logprob: -12.581195831298828

Token 370: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.165027217415627e-05
    2. ' def' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.12502098083496
    4. 'class' → logprob: -22.00002098083496
    5. 'from' → logprob: -22.12502098083496
    6. 'import' → logprob: -22.25002098083496
    7. '	def' → logprob: -22.37502098083496
    8. 'de' → logprob: -22.62502098083496
    9. '```' → logprob: -22.62502098083496
    10. '
' → logprob: -22.75002098083496

Token 371: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.044046901166439056
    2. 'read' → logprob: -3.5440468788146973
    3. ' parse' → logprob: -4.294046878814697
    4. ' read' → logprob: -8.169047355651855
    5. 'from' → logprob: -8.294047355651855
    6. ' from' → logprob: -12.544047355651855
    7. 'decode' → logprob: -13.044047355651855
    8. 'split' → logprob: -13.419047355651855
    9. 'input' → logprob: -13.669047355651855
    10. 'convert' → logprob: -14.294047355651855

Token 372: '():
' (ID: 8595)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4356588125228882
    2. '(lines' → logprob: -1.5606588125228882
    3. '_input' → logprob: -2.8106589317321777
    4. '(' → logprob: -3.5606589317321777
    5. '(line' → logprob: -3.9356589317321777
    6. '_line' → logprob: -4.060658931732178
    7. '(data' → logprob: -5.185658931732178
    8. '(rows' → logprob: -5.435658931732178
    9. '_lines' → logprob: -5.810658931732178
    10. '(inputs' → logprob: -7.685658931732178

Token 373: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025286436080932617
    2. '       ' → logprob: -4.900286674499512
    3. '()' → logprob: -5.150286674499512
    4. ' return' → logprob: -6.025286674499512
    5. 'return' → logprob: -6.400286674499512
    6. '(' → logprob: -6.400286674499512
    7. '(n' → logprob: -7.150286674499512
    8. ' (' → logprob: -7.400286674499512
    9. '(
' → logprob: -7.650286674499512
    10. '(lines' → logprob: -7.650286674499512

Token 374: ' import' (ID: 1588)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1608387678861618
    2. 'n' → logprob: -1.9108387231826782
    3. ' lines' → logprob: -8.910839080810547
    4. 'import' (adapté à ' import') → logprob: -9.160839080810547
    5. ' import' → logprob: -9.410839080810547
    6. 'rows' → logprob: -9.910839080810547
    7. ' rows' → logprob: -9.910839080810547
    8. ' return' → logprob: -10.535839080810547
    9. '       ' → logprob: -10.660839080810547
    10. ' line' → logprob: -10.660839080810547

Token 375: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1002068892121315
    2. ' sys' → logprob: -2.3502068519592285
    3. '=sys' → logprob: -16.35020637512207
    4. '	sys' → logprob: -16.72520637512207
    5. '(sys' → logprob: -18.60020637512207
    6. '_sys' → logprob: -18.72520637512207
    7. 'io' → logprob: -21.22520637512207
    8. 'json' → logprob: -21.35020637512207
    9. '.sys' → logprob: -21.35020637512207
    10. 'stdin' → logprob: -21.72520637512207

Token 376: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001944461022503674
    2. 'n' → logprob: -7.126944541931152
    3. 'input' → logprob: -7.876944541931152
    4. ' input' → logprob: -8.501944541931152
    5. '            
' → logprob: -8.751944541931152
    6. 'data' → logprob: -9.376944541931152
    7. ' n' → logprob: -9.751944541931152
    8. ' data' → logprob: -10.126944541931152
    9. ' line' → logprob: -10.501944541931152
    10. '       ' → logprob: -10.626944541931152

Token 377: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012458281125873327
    2. 'input' → logprob: -7.251245975494385
    3. 'n' → logprob: -8.126245498657227
    4. '            
' → logprob: -10.001245498657227
    5. '		' → logprob: -10.251245498657227
    6. ' input' → logprob: -10.251245498657227
    7. '       ' → logprob: -10.501245498657227
    8. 'data' → logprob: -10.626245498657227
    9. ' line' → logprob: -11.501245498657227
    10. '	       ' → logprob: -11.626245498657227

Token 378: ' W' (ID: 486)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.815861701965332
    2. 'input' → logprob: -1.315861701965332
    3. '           ' → logprob: -1.690861701965332
    4. 'n' → logprob: -3.065861701965332
    5. ' n' → logprob: -3.440861701965332
    6. ' lines' → logprob: -4.190861701965332
    7. 'data' → logprob: -5.565861701965332
    8. ' data' → logprob: -5.690861701965332
    9. ' line' → logprob: -6.315861701965332
    10. 'line' → logprob: -6.940861701965332

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7085193991661072
    2. '=' → logprob: -0.8335193991661072
    3. ' =' → logprob: -3.208519458770752
    4. '   ' → logprob: -3.833519458770752
    5. '=sys' → logprob: -5.833519458770752
    6. 'hile' → logprob: -6.083519458770752
    7. '.readline' → logprob: -6.333519458770752
    8. '           ' → logprob: -7.208519458770752
    9. 'in' → logprob: -7.708519458770752
    10. ' ' → logprob: -7.833519458770752

Token 380: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.08895037323236465
    2. ' H' → logprob: -2.4639503955841064
    3. 'L' → logprob: -11.838950157165527
    4. 'D' → logprob: -12.713950157165527
    5. ' L' → logprob: -15.588950157165527
    6. ' ' → logprob: -15.838950157165527
    7. ' D' → logprob: -15.963950157165527
    8. '   ' → logprob: -16.588951110839844
    9. ',H' → logprob: -17.088951110839844
    10. 'R' → logprob: -17.838951110839844

Token 381: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326772570610046
    2. ' =' → logprob: -0.7576772570610046
    3. ',' → logprob: -9.50767707824707
    4. '=input' → logprob: -14.25767707824707
    5. ' =
' → logprob: -14.50767707824707
    6. '=int' → logprob: -14.63267707824707
    7. '=
' → logprob: -14.75767707824707
    8. '<|end|>' → logprob: -14.88267707824707
    9. '=line' → logprob: -15.13267707824707
    10. ')=' → logprob: -15.75767707824707

Token 382: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2519661486148834
    2. 'map' → logprob: -1.501966118812561
    3. '[' → logprob: -11.50196647644043
    4. ' sys' → logprob: -11.75196647644043
    5. ' list' → logprob: -12.00196647644043
    6. 'list' → logprob: -12.37696647644043
    7. 'sys' → logprob: -12.50196647644043
    8. ' ' → logprob: -13.50196647644043
    9. '	map' → logprob: -13.50196647644043
    10. ' [' → logprob: -14.00196647644043

Token 383: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -12.75000286102295
    3. 'int' → logprob: -15.50000286102295
    4. '(str' → logprob: -16.125003814697266
    5. ' (' → logprob: -18.375003814697266
    6. '(
' → logprob: -18.625003814697266
    7. '=int' → logprob: -19.000003814697266
    8. '[int' → logprob: -19.250003814697266
    9. '(input' → logprob: -19.375003814697266
    10. ' int' → logprob: -20.125003814697266

Token 384: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0017384823877364397
    2. ')' → logprob: -7.126738548278809
    3. 'sys' → logprob: -7.876738548278809
    4. ',' → logprob: -8.001738548278809
    5. '(' → logprob: -8.626738548278809
    6. '=sys' → logprob: -10.876738548278809
    7. ' sys' → logprob: -12.126738548278809
    8. '(input' → logprob: -12.251738548278809
    9. ' (' → logprob: -12.751738548278809
    10. '	sys' → logprob: -13.001738548278809

Token 385: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.014163628220558167
    2. ' sys' → logprob: -4.264163494110107
    3. '(sys' → logprob: -16.014163970947266
    4. '	sys' → logprob: -17.764163970947266
    5. '=sys' → logprob: -18.014163970947266
    6. '           ' → logprob: -18.014163970947266
    7. 'input' → logprob: -18.639163970947266
    8. '   ' → logprob: -18.889163970947266
    9. '    ' → logprob: -21.264163970947266
    10. ')' → logprob: -21.514163970947266

Token 386: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0007884251535870135
    2. '.' → logprob: -7.25078821182251
    3. '.argv' → logprob: -9.625788688659668
    4. '.readline' → logprob: -11.875788688659668
    5. '.stdout' → logprob: -12.875788688659668
    6. '.std' → logprob: -13.125788688659668
    7. ' .' → logprob: -14.875788688659668
    8. '(stdin' → logprob: -15.250788688659668
    9. '.st' → logprob: -16.37578773498535
    10. '.input' → logprob: -16.50078773498535

Token 387: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.081584716506768e-05
    2. '.read' → logprob: -11.125020980834961
    3. '.' → logprob: -12.375020980834961
    4. '.stdin' → logprob: -13.500020980834961
    5. '.readlines' → logprob: -15.000020980834961
    6. ' .' → logprob: -18.12502098083496
    7. ').' → logprob: -18.37502098083496
    8. '.buffer' → logprob: -18.37502098083496
    9. '().' → logprob: -19.12502098083496
    10. '.Read' → logprob: -19.87502098083496

Token 388: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.0219828002154827e-05
    2. '()' → logprob: -10.875020027160645
    3. '())' → logprob: -13.875020027160645
    4. '(' → logprob: -16.25002098083496
    5. ' ().' → logprob: -16.50002098083496
    6. '()
' → logprob: -17.75002098083496
    7. '().
' → logprob: -19.62502098083496
    8. ')' → logprob: -19.87502098083496
    9. '()[' → logprob: -19.87502098083496
    10. '.readline' → logprob: -21.00002098083496

Token 389: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.576786994934082
    2. 'split' → logprob: -0.826786994934082
    3. 'rstrip' → logprob: -7.326786994934082
    4. 'read' → logprob: -8.576786994934082
    5. ' strip' → logprob: -15.076786994934082
    6. 'decode' → logprob: -15.076786994934082
    7. ' split' → logprob: -15.576786994934082
    8. '().' → logprob: -16.076786041259766
    9. '(split' → logprob: -16.326786041259766
    10. '(strip' → logprob: -17.326786041259766

Token 390: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.688212614681106e-05
    2. '()' → logprob: -11.000017166137695
    3. '()
' → logprob: -16.125017166137695
    4. '())' → logprob: -16.875017166137695
    5. ' ().' → logprob: -17.500017166137695
    6. '().
' → logprob: -18.125017166137695
    7. '(' → logprob: -18.375017166137695
    8. '.split' → logprob: -20.000017166137695
    9. '   ' → logprob: -20.375017166137695
    10. '('' → logprob: -20.875017166137695

Token 391: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. 'rstrip' → logprob: -15.625
    3. ' split' → logprob: -16.0
    4. '(split' → logprob: -16.75
    5. 'spl' → logprob: -18.625
    6. 'strip' → logprob: -20.5
    7. '.split' → logprob: -21.75
    8. 'read' → logprob: -22.625
    9. ')' → logprob: -23.375
    10. 'startswith' → logprob: -24.0

Token 392: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007503928616642952
    2. '()' → logprob: -5.007503986358643
    3. '('' → logprob: -7.882503986358643
    4. '(' → logprob: -8.382503509521484
    5. '())
' → logprob: -9.257503509521484
    6. '()))' → logprob: -10.132503509521484
    7. '(','' → logprob: -10.257503509521484
    8. ')' → logprob: -12.257503509521484
    9. '("' → logprob: -13.132503509521484
    10. '()
' → logprob: -13.382503509521484

Token 393: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10631058365106583
    2. '
' → logprob: -2.7313106060028076
    3. '            
' → logprob: -3.6063106060028076
    4. ',' → logprob: -5.9813103675842285
    5. 'return' → logprob: -6.4813103675842285
    6. ' 
' → logprob: -6.9813103675842285
    7. '<|end|>' → logprob: -6.9813103675842285
    8. '            ' → logprob: -7.4813103675842285
    9. ' return' → logprob: -7.9813103675842285
    10. '		' → logprob: -8.231310844421387

Token 394: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.6311829686164856
    2. 'data' (adapté à ' data') → logprob: -1.3811829090118408
    3. ' grid' → logprob: -2.006182909011841
    4. 'grid' → logprob: -3.256182909011841
    5. '           ' → logprob: -4.75618314743042
    6. 'matrix' → logprob: -4.88118314743042
    7. ' lines' → logprob: -5.00618314743042
    8. ' matrix' → logprob: -5.25618314743042
    9. 'D' → logprob: -6.13118314743042
    10. 'lines' → logprob: -6.25618314743042

Token 395: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759707689285278
    2. ' =' → logprob: -0.8259707689285278
    3. '=[]' → logprob: -10.450970649719238
    4. '[' → logprob: -14.200970649719238
    5. '[]' → logprob: -14.700970649719238
    6. '=[]
' → logprob: -14.825970649719238
    7. ' ' → logprob: -15.325970649719238
    8. '   ' → logprob: -15.450970649719238
    9. ',' → logprob: -15.950970649719238
    10. '_' → logprob: -16.200971603393555

Token 396: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012786880834028125
    2. '[]' → logprob: -8.0012788772583
    3. '[[' → logprob: -8.1262788772583
    4. '[int' → logprob: -8.8762788772583
    5. ' [' → logprob: -9.2512788772583
    6. '[]
' → logprob: -9.3762788772583
    7. '[array' → logprob: -9.6262788772583
    8. '[
' → logprob: -9.7512788772583
    9. '[class' → logprob: -10.2512788772583
    10. '[str' → logprob: -10.2512788772583

Token 397: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01326294057071209
    2. ' for' → logprob: -4.388262748718262
    3. '	       ' → logprob: -8.763262748718262
    4. 'for' → logprob: -8.888262748718262
    5. '		' → logprob: -9.138262748718262
    6. '<|end|>' → logprob: -9.138262748718262
    7. '	for' → logprob: -9.638262748718262
    8. '   ' → logprob: -10.013262748718262
    9. '       ' → logprob: -10.388262748718262
    10. '	   ' → logprob: -10.513262748718262

Token 398: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8621150851249695
    2. 'for' (adapté à ' for') → logprob: -0.8621150851249695
    3. '           ' → logprob: -1.8621151447296143
    4. '   ' → logprob: -9.612114906311035
    5. '       ' → logprob: -10.112114906311035
    6. '	for' → logprob: -11.487114906311035
    7. '	       ' → logprob: -14.487114906311035
    8. '	   ' → logprob: -14.612114906311035
    9. '		' → logprob: -14.987114906311035
    10. '    ' → logprob: -14.987114906311035

Token 399: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0067154900170862675
    2. ' _' → logprob: -5.006715297698975
    3. '_i' → logprob: -15.756715774536133
    4. '_
' → logprob: -17.131715774536133
    5. ' i' → logprob: -18.506715774536133
    6. ' ' → logprob: -18.631715774536133
    7. ' ' → logprob: -18.756715774536133
    8. ' _
' → logprob: -18.756715774536133
    9. '   ' → logprob: -18.881715774536133
    10. '	' → logprob: -19.756715774536133

Token 400: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22737984359264374
    2. ' in' → logprob: -1.7273797988891602
    3. ' range' → logprob: -3.72737979888916
    4. 'in' → logprob: -6.47737979888916
    5. ' ' → logprob: -10.85237979888916
    6. '  ' → logprob: -11.47737979888916
    7. '   ' → logprob: -12.35237979888916
    8. '_' → logprob: -13.10237979888916
    9. '    ' → logprob: -13.35237979888916
    10. '	range' → logprob: -14.97737979888916

Token 401: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019287518225610256
    2. ' range' → logprob: -6.251928806304932
    3. '	range' → logprob: -16.876928329467773
    4. ' ' → logprob: -17.751928329467773
    5. '(range' → logprob: -18.126928329467773
    6. '  ' → logprob: -19.626928329467773
    7. '   ' → logprob: -19.876928329467773
    8. 'rang' → logprob: -19.876928329467773
    9. '0' → logprob: -20.001928329467773
    10. 'sys' → logprob: -20.001928329467773

Token 402: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -2.4868770196917467e-05
    2. 'H' → logprob: -10.875024795532227
    3. ' (' → logprob: -12.500024795532227
    4. '(' → logprob: -13.750024795532227
    5. '(W' → logprob: -13.875024795532227
    6. ' H' → logprob: -16.625024795532227
    7. '	H' → logprob: -17.500024795532227
    8. '   ' → logprob: -18.750024795532227
    9. '(
' → logprob: -19.500024795532227
    10. '((' → logprob: -19.625024795532227

Token 403: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5763174891471863
    2. '):' → logprob: -0.8263174891471863
    3. ')' → logprob: -8.95131778717041
    4. '           ' → logprob: -9.32631778717041
    5. '):
' → logprob: -9.32631778717041
    6. ':' → logprob: -10.45131778717041
    7. '       ' → logprob: -11.20131778717041
    8. ':
' → logprob: -11.57631778717041
    9. '               ' → logprob: -12.07631778717041
    10. '   ' → logprob: -12.32631778717041

Token 404: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013402557000517845
    2. '	           ' → logprob: -4.513402462005615
    3. '   ' → logprob: -6.888402462005615
    4. '           ' → logprob: -8.013402938842773
    5. ' line' → logprob: -9.263402938842773
    6. '<|end|>' → logprob: -9.263402938842773
    7. ' data' → logprob: -9.388402938842773
    8. '		       ' → logprob: -9.638402938842773
    9. '                
' → logprob: -9.638402938842773
    10. '			   ' → logprob: -9.638402938842773

Token 405: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.6985403895378113
    2. ' line' → logprob: -1.698540449142456
    3. 'row' (adapté à ' row') → logprob: -2.073540449142456
    4. 'line' → logprob: -2.073540449142456
    5. 'data' → logprob: -3.073540449142456
    6. ' data' → logprob: -3.823540449142456
    7. '               ' → logprob: -9.948540687561035
    8. 'arr' → logprob: -10.948540687561035
    9. '           ' → logprob: -11.198540687561035
    10. '                   ' → logprob: -11.448540687561035

Token 406: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889264822006226
    2. '=' → logprob: -2.578892707824707
    3. 'data' → logprob: -14.328892707824707
    4. '           ' → logprob: -14.453892707824707
    5. '=line' → logprob: -14.578892707824707
    6. '_data' → logprob: -15.328892707824707
    7. ' =
' → logprob: -15.703892707824707
    8. '            ' → logprob: -15.828892707824707
    9. '   ' → logprob: -16.07889175415039
    10. '=[]' → logprob: -16.20389175415039

Token 407: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.000555416801944375
    2. ' list' → logprob: -7.500555515289307
    3. '[list' → logprob: -13.500555038452148
    4. '[' → logprob: -13.875555038452148
    5. 'sys' → logprob: -16.50055503845215
    6. ' [' → logprob: -17.87555503845215
    7. '	list' → logprob: -18.62555503845215
    8. '(list' → logprob: -18.75055503845215
    9. '   ' → logprob: -18.75055503845215
    10. '=list' → logprob: -19.62555503845215

Token 408: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.534558552724775e-05
    2. '(' → logprob: -10.750025749206543
    3. 'map' → logprob: -12.750025749206543
    4. '(int' → logprob: -14.125025749206543
    5. '(
' → logprob: -16.000024795532227
    6. '   ' → logprob: -17.375024795532227
    7. ' (' → logprob: -18.375024795532227
    8. '
' → logprob: -18.625024795532227
    9. ' map' → logprob: -18.750024795532227
    10. '(m' → logprob: -18.750024795532227

Token 409: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.065608562901616e-05
    2. '(lambda' → logprob: -9.875081062316895
    3. '(' → logprob: -10.875081062316895
    4. 'int' → logprob: -11.625081062316895
    5. '(
' → logprob: -14.125081062316895
    6. '   ' → logprob: -15.375081062316895
    7. ' int' → logprob: -16.250080108642578
    8. '=int' → logprob: -16.375080108642578
    9. '[int' → logprob: -17.000080108642578
    10. '<int' → logprob: -17.125080108642578

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5797884464263916
    2. '(sys' → logprob: -0.8297884464263916
    3. '(' → logprob: -5.8297882080078125
    4. ',input' → logprob: -7.8297882080078125
    5. ' ,' → logprob: -8.704788208007812
    6. '(input' → logprob: -9.454788208007812
    7. 'sys' → logprob: -9.579788208007812
    8. ' (' → logprob: -10.579788208007812
    9. '=sys' → logprob: -10.704788208007812
    10. ',int' → logprob: -10.829788208007812

Token 411: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011432335712015629
    2. 'list' → logprob: -4.51143217086792
    3. ' sys' → logprob: -7.88643217086792
    4. ' list' → logprob: -12.886432647705078
    5. '(sys' → logprob: -12.886432647705078
    6. 'input' → logprob: -13.011432647705078
    7. 'str' → logprob: -14.386432647705078
    8. '	sys' → logprob: -15.136432647705078
    9. 'lambda' → logprob: -15.261432647705078
    10. '=sys' → logprob: -16.011432647705078

Token 412: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.4782435894012451
    2. '(sys' → logprob: -1.7282435894012451
    3. '.readline' → logprob: -1.8532435894012451
    4. '=sys' → logprob: -3.728243589401245
    5. 'sys' → logprob: -4.478243827819824
    6. '(stdin' → logprob: -5.228243827819824
    7. '.' → logprob: -5.728243827819824
    8. 'stdin' → logprob: -6.603243827819824
    9. '.sys' → logprob: -9.478243827819824
    10. '.readlines' → logprob: -9.728243827819824

Token 413: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.19951239228248596
    2. '().' → logprob: -1.9495123624801636
    3. '(sys' → logprob: -3.449512481689453
    4. 'sys' → logprob: -5.574512481689453
    5. '=sys' → logprob: -5.949512481689453
    6. '.sys' → logprob: -9.074512481689453
    7. '.' → logprob: -9.074512481689453
    8. '	sys' → logprob: -10.324512481689453
    9. '.stdin' → logprob: -10.824512481689453
    10. '()' → logprob: -10.949512481689453

Token 414: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1472419600977446e-06
    2. '()' → logprob: -14.500000953674316
    3. ' ().' → logprob: -14.625000953674316
    4. '.readline' → logprob: -16.500001907348633
    5. '()
' → logprob: -18.125001907348633
    6. '.' → logprob: -18.375001907348633
    7. '.strip' → logprob: -19.000001907348633
    8. '(' → logprob: -19.125001907348633
    9. '()[' → logprob: -19.250001907348633
    10. '('').' → logprob: -19.875001907348633

Token 415: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -3.4121114822482923e-06
    2. 'split' → logprob: -13.000003814697266
    3. ' strip' → logprob: -14.000003814697266
    4. 'rstrip' → logprob: -15.500003814697266
    5. '.strip' → logprob: -16.375003814697266
    6. '(strip' → logprob: -18.625003814697266
    7. 'stripe' → logprob: -20.750003814697266
    8. 'read' → logprob: -21.625003814697266
    9. '_strip' → logprob: -21.625003814697266
    10. '-strip' → logprob: -21.625003814697266

Token 416: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -15.25
    3. ' ().' → logprob: -19.375
    4. '.split' → logprob: -19.625
    5. '(' → logprob: -20.5
    6. '.' → logprob: -21.125
    7. '   ' → logprob: -21.625
    8. '()
' → logprob: -21.75
    9. '           ' → logprob: -22.125
    10. '()[' → logprob: -22.375

Token 417: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5048530030981055e-06
    2. ' split' → logprob: -13.500001907348633
    3. '(split' → logprob: -19.000001907348633
    4. '.split' → logprob: -19.375001907348633
    5. 'spl' → logprob: -21.750001907348633
    6. 'rstrip' → logprob: -22.125001907348633
    7. ' ' → logprob: -22.500001907348633
    8. 'replace' → logprob: -24.000001907348633
    9. '   ' → logprob: -24.000001907348633
    10. 'strip' → logprob: -24.250001907348633

Token 418: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.005273480899631977
    2. '()' → logprob: -5.630273342132568
    3. '))' → logprob: -6.630273342132568
    4. '()))
' → logprob: -8.255273818969727
    5. '())' → logprob: -9.755273818969727
    6. '(' → logprob: -10.505273818969727
    7. '()));' → logprob: -12.630273818969727
    8. '()
' → logprob: -13.505273818969727
    9. '()))

' → logprob: -14.005273818969727
    10. '())))' → logprob: -14.755273818969727

Token 419: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016436419682577252
    2. ')' → logprob: -6.626643657684326
    3. '           ' → logprob: -8.126643180847168
    4. '<|end|>' → logprob: -11.501643180847168
    5. '),' → logprob: -12.876643180847168
    6. '              ' → logprob: -13.126643180847168
    7. '                   ' → logprob: -13.626643180847168
    8. ')data' → logprob: -14.001643180847168
    9. '       ' → logprob: -14.126643180847168
    10. ',' → logprob: -14.251643180847168

Token 420: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.6921566128730774
    2. ' data' → logprob: -1.1921565532684326
    3. '           ' → logprob: -1.6921565532684326
    4. '               ' → logprob: -4.442156791687012
    5. '	data' → logprob: -11.692156791687012
    6. '       ' → logprob: -11.692156791687012
    7. '   ' → logprob: -11.817156791687012
    8. '_data' → logprob: -11.942156791687012
    9. '.data' → logprob: -12.692156791687012
    10. '	       ' → logprob: -13.317156791687012

Token 421: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011922525009140372
    2. '.' → logprob: -6.751192092895508
    3. '.extend' → logprob: -11.126192092895508
    4. '.ap' → logprob: -12.626192092895508
    5. '.app' → logprob: -12.751192092895508
    6. '.add' → logprob: -14.501192092895508
    7. '.push' → logprob: -15.626192092895508
    8. '.Append' → logprob: -16.251192092895508
    9. ' .' → logprob: -16.501192092895508
    10. '.setdefault' → logprob: -16.751192092895508

Token 422: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.250001907348633
    3. 'row' → logprob: -16.000001907348633
    4. '(
' → logprob: -18.625001907348633
    5. ',row' → logprob: -19.750001907348633
    6. '=row' → logprob: -20.000001907348633
    7. '[row' → logprob: -20.500001907348633
    8. '(r' → logprob: -20.750001907348633
    9. ' row' → logprob: -21.125001907348633
    10. '(rows' → logprob: -21.625001907348633

Token 423: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005245577194727957
    2. ')
' → logprob: -7.875524520874023
    3. '           ' → logprob: -9.000524520874023
    4. '       ' → logprob: -11.625524520874023
    5. ')return' → logprob: -11.625524520874023
    6. '<|end|>' → logprob: -14.000524520874023
    7. ' )' → logprob: -14.250524520874023
    8. '
' → logprob: -15.125524520874023
    9. ')

' → logprob: -15.625524520874023
    10. '<|end|>' → logprob: -15.750524520874023

Token 424: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00033272415748797357
    2. '       ' → logprob: -8.250332832336426
    3. '		' → logprob: -10.250332832336426
    4. 'return' → logprob: -11.250332832336426
    5. '	       ' → logprob: -11.875332832336426
    6. '          ' → logprob: -12.625332832336426
    7. '
' → logprob: -12.750332832336426
    8. ' return' → logprob: -12.875332832336426
    9. '	   ' → logprob: -13.625332832336426
    10. '	return' → logprob: -13.625332832336426

Token 425: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3071601092815399
    2. 'return' (adapté à ' return') → logprob: -1.8071601390838623
    3. ' return' → logprob: -2.3071601390838623
    4. '       ' → logprob: -7.182159900665283
    5. '
' → logprob: -11.182160377502441
    6. '	return' → logprob: -11.432160377502441
    7. '   ' → logprob: -11.432160377502441
    8. '            
' → logprob: -12.932160377502441
    9. '          ' → logprob: -13.057160377502441
    10. '		' → logprob: -13.932160377502441

Token 426: ' W' (ID: 486)
  Prédit: 'Check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Check' → logprob: -0.08903532475233078
    2. ' Check' → logprob: -2.4640352725982666
    3. '(Check' → logprob: -10.339035034179688
    4. '	Check' → logprob: -10.589035034179688
    5. '[' → logprob: -11.214035034179688
    6. '[
' → logprob: -11.964035034179688
    7. 'W' → logprob: -12.589035034179688
    8. '_Check' → logprob: -12.714035034179688
    9. ' W' → logprob: -12.964035034179688
    10. '   ' → logprob: -13.214035034179688

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001979378139367327
    2. ',H' → logprob: -8.875198364257812
    3. ',W' → logprob: -10.000198364257812
    4. ' ,' → logprob: -11.375198364257812
    5. ',
' → logprob: -14.250198364257812
    6. ',h' → logprob: -15.500198364257812
    7. ',data' → logprob: -16.375198364257812
    8. '<|end|>' → logprob: -17.250198364257812
    9. ',w' → logprob: -17.375198364257812
    10. ',input' → logprob: -18.250198364257812

Token 428: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.01814994215965271
    2. ' H' → logprob: -4.0181498527526855
    3. '	H' → logprob: -19.768150329589844
    4. ' ' → logprob: -19.893150329589844
    5. '   ' → logprob: -19.893150329589844
    6. ',H' → logprob: -19.893150329589844
    7. '<|end|>' → logprob: -20.143150329589844
    8. '_H' → logprob: -21.643150329589844
    9. '  ' → logprob: -21.768150329589844
    10. 'data' → logprob: -22.018150329589844

Token 429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011989753693342209
    2. ',data' → logprob: -4.511989593505859
    3. '<|end|>' → logprob: -7.511989593505859
    4. ' ,' → logprob: -8.38698959350586
    5. ',
' → logprob: -8.88698959350586
    6. ',None' → logprob: -12.63698959350586
    7. 'data' → logprob: -12.76198959350586
    8. '           ' → logprob: -12.76198959350586
    9. ',w' → logprob: -12.88698959350586
    10. '[data' → logprob: -13.01198959350586

Token 430: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0010330495424568653
    2. ' data' → logprob: -6.876032829284668
    3. 'Check' → logprob: -15.626032829284668
    4. 'Data' → logprob: -17.001033782958984
    5. 'Matrix' → logprob: -17.126033782958984
    6. 'matrix' → logprob: -17.751033782958984
    7. 'dat' → logprob: -18.251033782958984
    8. 'd' → logprob: -18.626033782958984
    9. '[data' → logprob: -19.251033782958984
    10. '   ' → logprob: -19.376033782958984

Token 431: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 432: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03401413932442665
    2. '<|end|>' → logprob: -3.4090142250061035
    3. '
' → logprob: -8.909013748168945
    4. '    
' → logprob: -9.409013748168945
    5. '<|end|>' → logprob: -9.659013748168945
    6. 'class' → logprob: -10.034013748168945
    7. '       ' → logprob: -11.034013748168945
    8. 'def' → logprob: -11.534013748168945
    9. '```' → logprob: -11.784013748168945
    10. '#' → logprob: -12.284013748168945

Token 433: ' class' (ID: 744)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013647529296576977
    2. '   ' → logprob: -4.388647556304932
    3. ' def' → logprob: -7.263647556304932
    4. 'class' (adapté à ' class') → logprob: -7.763647556304932
    5. '	def' → logprob: -12.513647079467773
    6. ' ' → logprob: -12.888647079467773
    7. '    
' → logprob: -13.013647079467773
    8. '@' → logprob: -13.638647079467773
    9. '  ' → logprob: -14.138647079467773
    10. '
' → logprob: -15.388647079467773

Token 434: ' Output' (ID: 18315)
  Prédit: ' Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Solver' → logprob: -0.23847270011901855
    2. ' Solution' → logprob: -2.1134727001190186
    3. 'Solver' → logprob: -2.7384727001190186
    4. 'Solution' → logprob: -4.488472938537598
    5. ' Checker' → logprob: -5.238472938537598
    6. ' Result' → logprob: -5.863472938537598
    7. ' Output' → logprob: -6.488472938537598
    8. ' Pattern' → logprob: -6.488472938537598
    9. ' Validator' → logprob: -7.238472938537598
    10. ' Br' → logprob: -7.363472938537598

Token 435: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.28434228897094727
    2. 'Formatter' → logprob: -2.0343422889709473
    3. 'Printer' → logprob: -3.1593422889709473
    4. ':' → logprob: -3.4093422889709473
    5. 'ter' → logprob: -3.6593422889709473
    6. 'Handler' → logprob: -4.659342288970947
    7. 'Generator' → logprob: -5.534342288970947
    8. 'Builder' → logprob: -6.784342288970947
    9. ':
' → logprob: -8.784341812133789
    10. '():' → logprob: -8.909341812133789

Token 436: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002823181450366974
    2. ':
' → logprob: -5.877823352813721
    3. ':def' → logprob: -11.252822875976562
    4. '   ' → logprob: -13.252822875976562
    5. '<|end|>' → logprob: -13.752822875976562
    6. ':

' → logprob: -14.627822875976562
    7. '):' → logprob: -14.627822875976562
    8. ':void' → logprob: -14.752822875976562
    9. '():' → logprob: -15.877822875976562
    10. '```' → logprob: -16.002822875976562

Token 437: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005936628440394998
    2. '       ' → logprob: -7.500593662261963
    3. 'def' → logprob: -11.000594139099121
    4. ' def' → logprob: -12.250594139099121
    5. '<|end|>' → logprob: -12.250594139099121
    6. ' ' → logprob: -12.875594139099121
    7. '  ' → logprob: -13.250594139099121
    8. '    ' → logprob: -13.375594139099121
    9. '     ' → logprob: -13.500594139099121
    10. ':' → logprob: -13.750594139099121

Token 438: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.0004593862977344543
    2. '   ' → logprob: -8.000459671020508
    3. ' @' → logprob: -9.000459671020508
    4. 'def' → logprob: -14.625459671020508
    5. 'staticmethod' → logprob: -15.750459671020508
    6. '       ' → logprob: -18.375459671020508
    7. ' ' → logprob: -18.875459671020508
    8. 'class' → logprob: -20.375459671020508
    9. '  ' → logprob: -20.750459671020508
    10. 'static' → logprob: -20.875459671020508

Token 439: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: 0.0
    2. 'classmethod' → logprob: -19.75
    3. 'static' → logprob: -20.0
    4. ' static' → logprob: -26.625
    5. 'stat' → logprob: -26.625
    6. 'st' → logprob: -27.0
    7. 'dat' → logprob: -27.625
    8. '@' → logprob: -28.75
    9. '_static' → logprob: -28.75
    10. '
' → logprob: -28.875

Token 440: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1116696149110794
    2. '       ' → logprob: -2.8616695404052734
    3. '   ' → logprob: -3.2366695404052734
    4. ' def' → logprob: -4.736669540405273
    5. '
' → logprob: -8.736669540405273
    6. '	def' → logprob: -8.861669540405273
    7. ':' → logprob: -10.111669540405273
    8. ' ' → logprob: -10.486669540405273
    9. ':def' → logprob: -11.236669540405273
    10. '(' → logprob: -11.986669540405273

Token 441: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005911019630730152
    2. '       ' → logprob: -5.380910873413086
    3. '   ' → logprob: -7.255910873413086
    4. ' def' → logprob: -7.630910873413086
    5. '
' → logprob: -9.755910873413086
    6. '	def' → logprob: -10.255910873413086
    7. '        
' → logprob: -13.255910873413086
    8. '           ' → logprob: -14.005910873413086
    9. ':def' → logprob: -14.130910873413086
    10. '    
' → logprob: -14.630910873413086

Token 442: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.2471589798224159e-05
    2. ' def' → logprob: -11.500012397766113
    3. '   ' → logprob: -13.000012397766113
    4. '	def' → logprob: -17.37501335144043
    5. '       ' → logprob: -19.50001335144043
    6. '  ' → logprob: -20.75001335144043
    7. '```' → logprob: -21.00001335144043
    8. '
' → logprob: -21.12501335144043
    9. '    
' → logprob: -21.62501335144043
    10. 'print' → logprob: -21.87501335144043

Token 443: ' write' (ID: 5067)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.47570639848709106
    2. 'print' → logprob: -0.9757063984870911
    3. ' write' → logprob: -6.850706577301025
    4. ' print' → logprob: -7.850706577301025
    5. 'println' → logprob: -8.850706100463867
    6. 'output' → logprob: -10.475706100463867
    7. 'put' → logprob: -12.475706100463867
    8. 'w' → logprob: -13.350706100463867
    9. 'solve' → logprob: -14.350706100463867
    10. ' output' → logprob: -14.725706100463867

Token 444: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07763586193323135
    2. '(result' → logprob: -3.3276357650756836
    3. '(output' → logprob: -3.7026357650756836
    4. '("' → logprob: -5.702635765075684
    5. '(data' → logprob: -6.077635765075684
    6. '(line' → logprob: -6.202635765075684
    7. '(s' → logprob: -6.827635765075684
    8. '(message' → logprob: -7.202635765075684
    9. '(answer' → logprob: -7.577635765075684
    10. '(True' → logprob: -7.577635765075684

Token 445: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1734195202589035
    2. ',' → logprob: -1.92341947555542
    3. '):
' → logprob: -4.42341947555542
    4. ',result' → logprob: -7.79841947555542
    5. ')' → logprob: -8.548419952392578
    6. ':' → logprob: -8.673419952392578
    7. ' ):' → logprob: -8.798419952392578
    8. '   ' → logprob: -9.173419952392578
    9. '(result' → logprob: -10.423419952392578
    10. ' ,' → logprob: -11.173419952392578

Token 446: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14412236213684082
    2. '       ' → logprob: -2.269122362136841
    3. 'print' → logprob: -3.519122362136841
    4. ' print' → logprob: -6.894122123718262
    5. '   ' → logprob: -10.019122123718262
    6. '(' → logprob: -10.269122123718262
    7. '(print' → logprob: -10.394122123718262
    8. '               ' → logprob: -10.769122123718262
    9. '```' → logprob: -11.769122123718262
    10. '{' → logprob: -12.019122123718262

Token 447: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16324613988399506
    2. ' print' → logprob: -1.9132461547851562
    3. '           ' → logprob: -6.163246154785156
    4. 'import' → logprob: -7.288246154785156
    5. 'if' → logprob: -8.913246154785156
    6. ' if' → logprob: -9.413246154785156
    7. ' import' → logprob: -12.288246154785156
    8. '       ' → logprob: -12.913246154785156
    9. ' for' → logprob: -12.913246154785156
    10. 'for' → logprob: -13.288246154785156

Token 448: '("' (ID: 568)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.007346077356487513
    2. '(' → logprob: -5.257346153259277
    3. 'result' → logprob: -6.507346153259277
    4. '("' → logprob: -7.632346153259277
    5. '('' → logprob: -9.007346153259277
    6. '(int' → logprob: -12.257346153259277
    7. '1' → logprob: -13.257346153259277
    8. '0' → logprob: -14.007346153259277
    9. '(
' → logprob: -14.132346153259277
    10. '()' → logprob: -14.382346153259277

Token 449: 'yes' (ID: 6763)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.68757563829422
    2. 'Yes' → logprob: -0.93757563829422
    3. '"' → logprob: -3.312575578689575
    4. 'result' → logprob: -3.437575578689575
    5. 'Possible' → logprob: -3.812575578689575
    6. '{' → logprob: -6.187575817108154
    7. '{}' → logprob: -6.187575817108154
    8. '")' → logprob: -6.437575817108154
    9. '".' → logprob: -6.437575817108154
    10. '1' → logprob: -6.562575817108154

Token 450: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0019341122824698687
    2. '")' → logprob: -6.251934051513672
    3. '")
' → logprob: -12.376934051513672
    4. '\n' → logprob: -14.626934051513672
    5. '")

' → logprob: -15.376934051513672
    6. '```' → logprob: -16.251934051513672
    7. '");' → logprob: -16.501934051513672
    8. ''' → logprob: -16.501934051513672
    9. ')"' → logprob: -16.626934051513672
    10. '"""' → logprob: -17.126934051513672

Token 451: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06897000968456268
    2. ')' → logprob: -2.818969964981079
    3. 'if' → logprob: -5.693970203399658
    4. '"' → logprob: -5.693970203399658
    5. '")' → logprob: -8.4439697265625
    6. ' ' → logprob: -12.0689697265625
    7. '   ' → logprob: -12.0689697265625
    8. '()' → logprob: -12.3189697265625
    9. '""' → logprob: -12.6939697265625
    10. ')"' → logprob: -12.9439697265625

Token 452: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.16022422909736633
    2. 'result' → logprob: -1.910224199295044
    3. '(result' → logprob: -16.28522491455078
    4. '=result' → logprob: -18.78522491455078
    5. ' not' → logprob: -19.41022491455078
    6. '	result' → logprob: -19.53522491455078
    7. '[result' → logprob: -20.03522491455078
    8. '$result' → logprob: -20.66022491455078
    9. 'not' → logprob: -21.16022491455078
    10. ' ' → logprob: -21.28522491455078

Token 453: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0067154900170862675
    2. 'else' → logprob: -5.006715297698975
    3. '	else' → logprob: -16.131715774536133
    4. '==' → logprob: -17.006715774536133
    5. '<|end|>' → logprob: -18.006715774536133
    6. ' ' → logprob: -18.381715774536133
    7. '    ' → logprob: -19.881715774536133
    8. '=True' → logprob: -20.381715774536133
    9. '```' → logprob: -20.381715774536133
    10. '        ' → logprob: -20.506715774536133

Token 454: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0004320996522437781
    2. ' "' → logprob: -7.750432014465332
    3. '   ' → logprob: -14.750432014465332
    4. ''' → logprob: -15.375432014465332
    5. ' ' → logprob: -15.375432014465332
    6. '"\' → logprob: -15.500432014465332
    7. '
' → logprob: -15.875432014465332
    8. '("' → logprob: -17.50043296813965
    9. '"No' → logprob: -17.62543296813965
    10. '  ' → logprob: -17.87543296813965

Token 455: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -3.8889261304575484e-06
    2. '"' → logprob: -12.750003814697266
    3. ' no' → logprob: -13.875003814697266
    4. '	no' → logprob: -18.875003814697266
    5. '"No' → logprob: -19.125003814697266
    6. 'No' → logprob: -19.125003814697266
    7. 'NO' → logprob: -20.625003814697266
    8. '```' → logprob: -21.125003814697266
    9. '   ' → logprob: -21.250003814697266
    10. '(no' → logprob: -21.375003814697266

Token 456: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.001263567479327321
    2. ')")' → logprob: -7.251263618469238
    3. ')' → logprob: -7.501263618469238
    4. '")
' → logprob: -14.376263618469238
    5. '}")' → logprob: -14.751263618469238
    6. ')"' → logprob: -16.626262664794922
    7. '")}' → logprob: -17.501262664794922
    8. '"' → logprob: -17.626262664794922
    9. ')")
' → logprob: -18.001262664794922
    10. '')' → logprob: -18.376262664794922

Token 457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03995364159345627
    2. 'def' → logprob: -3.2899537086486816
    3. '<|end|>' → logprob: -6.414953708648682
    4. 'class' → logprob: -9.414953231811523
    5. 'if' → logprob: -9.539953231811523
    6. '<|end|>' → logprob: -9.914953231811523
    7. '    
' → logprob: -10.539953231811523
    8. '#' → logprob: -11.164953231811523
    9. ' def' → logprob: -11.414953231811523
    10. '```' → logprob: -11.789953231811523

Token 458: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01467286515980959
    2. '   ' → logprob: -4.264672756195068
    3. ' def' → logprob: -7.639672756195068
    4. 'class' → logprob: -10.514673233032227
    5. '@' → logprob: -14.514673233032227
    6. '	def' → logprob: -15.014673233032227
    7. ' ' → logprob: -15.389673233032227
    8. '  ' → logprob: -16.264673233032227
    9. '    
' → logprob: -17.139673233032227
    10. 'classmethod' → logprob: -17.389673233032227

Token 459: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.45196571946144104
    2. ' solve' → logprob: -1.2019656896591187
    3. '__' → logprob: -2.951965808868408
    4. ' check' → logprob: -5.076965808868408
    5. 'solve' → logprob: -5.451965808868408
    6. ' can' → logprob: -8.57696533203125
    7. ' is' → logprob: -10.20196533203125
    8. 'check' → logprob: -10.95196533203125
    9. 'is' → logprob: -12.70196533203125
    10. ' def' → logprob: -12.95196533203125

Token 460: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.848420551046729e-05
    2. 'i' → logprob: -9.7500581741333
    3. 'ini' → logprob: -17.000059127807617
    4. ' init' → logprob: -17.500059127807617
    5. 'in' → logprob: -17.750059127807617
    6. 'int' → logprob: -18.750059127807617
    7. 'inite' → logprob: -19.500059127807617
    8. 'def' → logprob: -19.750059127807617
    9. '_init' → logprob: -21.375059127807617
    10. ' i' → logprob: -21.750059127807617

Token 461: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.05532386153936386
    2. '(self' → logprob: -3.055323839187622
    3. '(' → logprob: -5.180324077606201
    4. '__' → logprob: -7.180324077606201
    5. ' (' → logprob: -9.055323600769043
    6. '__(
' → logprob: -9.055323600769043
    7. '_(' → logprob: -10.305323600769043
    8. ')(' → logprob: -10.305323600769043
    9. 'self' → logprob: -12.055323600769043
    10. ' ' → logprob: -12.680323600769043

Token 462: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.0391463193809614e-05
    2. ' self' → logprob: -9.750060081481934
    3. '
' → logprob: -13.750060081481934
    4. '   ' → logprob: -14.125060081481934
    5. ')' → logprob: -16.12506103515625
    6. '       ' → logprob: -16.37506103515625
    7. ' ' → logprob: -17.50006103515625
    8. ',' → logprob: -17.50006103515625
    9. '(self' → logprob: -17.87506103515625
    10. '  ' → logprob: -18.12506103515625

Token 463: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005981888971291482
    2. ',self' → logprob: -8.000597953796387
    3. 'self' → logprob: -8.625597953796387
    4. ' ,' → logprob: -9.500597953796387
    5. '(self' → logprob: -12.375597953796387
    6. ',
' → logprob: -13.500597953796387
    7. ')' → logprob: -14.250597953796387
    8. '   ' → logprob: -14.375597953796387
    9. ' self' → logprob: -14.625597953796387
    10. '):' → logprob: -14.750597953796387

Token 464: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007667198311537504
    2. ' self' → logprob: -4.882667064666748
    3. '   ' → logprob: -9.882667541503906
    4. '       ' → logprob: -12.382667541503906
    5. '0' → logprob: -13.382667541503906
    6. ' ' → logprob: -13.757667541503906
    7. '(self' → logprob: -13.757667541503906
    8. '	self' → logprob: -14.632667541503906
    9. '
' → logprob: -14.882667541503906
    10. '    ' → logprob: -15.257667541503906

Token 465: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.788237452507019
    2. 'self' (adapté à ' self') → logprob: -0.913237452507019
    3. 'pass' → logprob: -2.4132375717163086
    4. ' self' → logprob: -3.4132375717163086
    5. ' pass' → logprob: -3.9132375717163086
    6. '   ' → logprob: -6.913237571716309
    7. 'None' → logprob: -8.538237571716309
    8. 'import' → logprob: -8.913237571716309
    9. 'def' → logprob: -9.163237571716309
    10. 'class' → logprob: -9.538237571716309

Token 466: '.W' (ID: 2342)
  Prédit: '.Matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Matrix' → logprob: -0.30330827832221985
    2. '.matrix' → logprob: -2.0533082485198975
    3. '.W' → logprob: -2.4283082485198975
    4. '.Pattern' → logprob: -4.428308486938477
    5. '.rows' → logprob: -4.428308486938477
    6. '.pattern' → logprob: -4.803308486938477
    7. '.' → logprob: -5.803308486938477
    8. '.data' → logprob: -6.053308486938477
    9. '.input' → logprob: -6.678308486938477
    10. '.Parser' → logprob: -6.803308486938477

Token 467: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43768587708473206
    2. '=' → logprob: -1.5626858472824097
    3. ' =' → logprob: -1.9376858472824097
    4. ' ,' → logprob: -7.312685966491699
    5. '<|end|>' → logprob: -9.4376859664917
    6. '=None' → logprob: -9.8126859664917
    7. ',
' → logprob: -10.8126859664917
    8. ',self' → logprob: -11.0626859664917
    9. ' ' → logprob: -11.5626859664917
    10. ' =
' → logprob: -12.6876859664917

Token 468: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002561864908784628
    2. ' ' → logprob: -6.627562046051025
    3. 'None' → logprob: -7.252562046051025
    4. ' None' → logprob: -7.627562046051025
    5. 'self' → logprob: -10.377561569213867
    6. ' self' → logprob: -11.752561569213867
    7. '<|end|>' → logprob: -14.252561569213867
    8. ' 
' → logprob: -16.252561569213867
    9. '   ' → logprob: -16.877561569213867
    10. '  ' → logprob: -17.127561569213867

Token 469: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04078725725412369
    2. 'self' → logprob: -3.4157872200012207
    3. 'None' → logprob: -5.040787220001221
    4. ' ' → logprob: -8.040787696838379
    5. ' self' → logprob: -8.540787696838379
    6. ' None' → logprob: -9.040787696838379
    7. '   ' → logprob: -12.915787696838379
    8. '-' → logprob: -12.915787696838379
    9. '  ' → logprob: -13.040787696838379
    10. '
' → logprob: -14.290787696838379

Token 470: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8602763414382935
    2. '<|end|>' → logprob: -1.2352763414382935
    3. '       ' → logprob: -2.235276222229004
    4. 'self' → logprob: -2.485276222229004
    5. '
' → logprob: -2.610276222229004
    6. ' self' → logprob: -4.985276222229004
    7. '   ' → logprob: -5.485276222229004
    8. ',self' → logprob: -5.860276222229004
    9. '<|end|>' → logprob: -6.110276222229004
    10. '	self' → logprob: -6.235276222229004

Token 471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29889607429504395
    2. 'self' → logprob: -1.548896074295044
    3. ',' → logprob: -3.923896074295044
    4. ' self' → logprob: -4.673895835876465
    5. '
' → logprob: -5.048895835876465
    6. '<|end|>' → logprob: -5.423895835876465
    7. '   ' → logprob: -6.548895835876465
    8. '        
' → logprob: -6.673895835876465
    9. '	self' → logprob: -6.923895835876465
    10. ',self' → logprob: -7.173895835876465

Token 472: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.047736819833517075
    2. '       ' → logprob: -3.172736883163452
    3. ' self' → logprob: -5.422736644744873
    4. '
' → logprob: -9.297737121582031
    5. '   ' → logprob: -9.422737121582031
    6. '	self' → logprob: -9.547737121582031
    7. '           ' → logprob: -10.422737121582031
    8. '        
' → logprob: -11.672737121582031
    9. ' ' → logprob: -11.797737121582031
    10. '        ' → logprob: -12.422737121582031

Token 473: '.H' (ID: 6255)
  Prédit: '.H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.H' → logprob: -9.805981972021982e-05
    2. 'H' → logprob: -9.37509822845459
    3. '.' → logprob: -11.50009822845459
    4. '.W' → logprob: -14.00009822845459
    5. '	H' → logprob: -14.25009822845459
    6. ' .' → logprob: -15.12509822845459
    7. '.cols' → logprob: -15.25009822845459
    8. ',H' → logprob: -15.25009822845459
    9. '.L' → logprob: -15.75009822845459
    10. 'cols' → logprob: -15.87509822845459

Token 474: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410863637924194
    2. '=' → logprob: -0.9741086363792419
    3. ' =
' → logprob: -11.474108695983887
    4. ',' → logprob: -11.474108695983887
    5. '       ' → logprob: -12.849108695983887
    6. '=
' → logprob: -12.849108695983887
    7. ' ' → logprob: -13.099108695983887
    8. '   ' → logprob: -13.474108695983887
    9. '<|end|>' → logprob: -13.474108695983887
    10. '=None' → logprob: -15.849108695983887

Token 475: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324955351650715
    2. ' ' → logprob: -3.773249626159668
    3. '   ' → logprob: -12.773249626159668
    4. '  ' → logprob: -15.085749626159668
    5. '       ' → logprob: -15.398249626159668
    6. ' ' → logprob: -16.27324867248535
    7. 'self' → logprob: -16.33574867248535
    8. '    ' → logprob: -16.52324867248535
    9. '     ' → logprob: -16.71074867248535
    10. '           ' → logprob: -16.71074867248535

Token 476: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.37500762939453
    4. '۰' → logprob: -19.00000762939453
    5. 'self' → logprob: -19.87500762939453
    6. '  ' → logprob: -20.31250762939453
    7. '=' → logprob: -20.31250762939453
    8. '00' → logprob: -20.37500762939453
    9. '<|end|>' → logprob: -20.50000762939453
    10. ' ' → logprob: -20.75000762939453

Token 477: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023986784741282463
    2. '<|end|>' → logprob: -4.52398681640625
    3. 'self' → logprob: -5.39898681640625
    4. '
' → logprob: -5.52398681640625
    5. '   ' → logprob: -5.89898681640625
    6. ',' → logprob: -7.27398681640625
    7. '           ' → logprob: -8.77398681640625
    8. ',
' → logprob: -8.89898681640625
    9. ' self' → logprob: -9.02398681640625
    10. '        
' → logprob: -9.02398681640625

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19664695858955383
    2. 'self' → logprob: -1.8216469287872314
    3. ' self' → logprob: -4.1966471672058105
    4. '   ' → logprob: -6.9466471672058105
    5. '           ' → logprob: -7.9466471672058105
    6. '
' → logprob: -8.071646690368652
    7. '<|end|>' → logprob: -10.571646690368652
    8. '	self' → logprob: -10.821646690368652
    9. '(self' → logprob: -11.946646690368652
    10. ',' → logprob: -12.196646690368652

Token 479: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0021979559678584337
    2. ' self' → logprob: -6.752197742462158
    3. '       ' → logprob: -7.127197742462158
    4. '           ' → logprob: -8.877198219299316
    5. '
' → logprob: -9.877198219299316
    6. '   ' → logprob: -11.002198219299316
    7. '	self' → logprob: -12.002198219299316
    8. 'data' → logprob: -12.502198219299316
    9. 'def' → logprob: -13.502198219299316
    10. '        
' → logprob: -14.002198219299316

Token 480: '.matrix' (ID: 72944)
  Prédit: '.matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matrix' → logprob: -0.45123329758644104
    2. '.Matrix' → logprob: -1.2012332677841187
    3. '.data' → logprob: -3.201233386993408
    4. '.pattern' → logprob: -4.451233386993408
    5. '.M' → logprob: -4.951233386993408
    6. '.Pattern' → logprob: -5.951233386993408
    7. '.Data' → logprob: -8.70123291015625
    8. '.grid' → logprob: -10.45123291015625
    9. '.S' → logprob: -11.07623291015625
    10. '.mat' → logprob: -11.20123291015625

Token 481: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20166467130184174
    2. ' =' → logprob: -1.701664686203003
    3. '=None' → logprob: -8.326664924621582
    4. ' ' → logprob: -12.576664924621582
    5. 'None' → logprob: -13.701664924621582
    6. 'data' → logprob: -13.701664924621582
    7. 's' → logprob: -14.076664924621582
    8. '   ' → logprob: -14.451664924621582
    9. ' None' → logprob: -14.451664924621582
    10. '=
' → logprob: -14.701664924621582

Token 482: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04858794063329697
    2. ' None' → logprob: -3.0485880374908447
    3. 'self' → logprob: -15.673587799072266
    4. '_None' → logprob: -15.923587799072266
    5. '(None' → logprob: -15.923587799072266
    6. '=None' → logprob: -16.423587799072266
    7. ',None' → logprob: -17.923587799072266
    8. '   ' → logprob: -18.173587799072266
    9. 'none' → logprob: -18.298587799072266
    10. '
' → logprob: -18.548587799072266

Token 483: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0834142342209816
    2. '<|end|>' → logprob: -2.708414316177368
    3. '   ' → logprob: -5.083414077758789
    4. 'def' → logprob: -5.333414077758789
    5. '<|end|>' → logprob: -6.708414077758789
    6. '

' → logprob: -7.583414077758789
    7. '    
' → logprob: -7.833414077758789
    8. ' def' → logprob: -9.208414077758789
    9. '  
' → logprob: -10.333414077758789
    10. '```' → logprob: -10.458414077758789

Token 484: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011513307690620422
    2. '<|end|>' → logprob: -5.2615132331848145
    3. 'def' → logprob: -5.5115132331848145
    4. '   ' → logprob: -6.7615132331848145
    5. '    
' → logprob: -7.6365132331848145
    6. '<|end|>' → logprob: -8.636513710021973
    7. ' def' → logprob: -9.136513710021973
    8. '```' → logprob: -9.386513710021973
    9. ' 
' → logprob: -9.511513710021973
    10. '

' → logprob: -9.761513710021973

Token 485: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.547789674485102e-05
    2. ' def' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.875036239624023
    4. '	def' → logprob: -20.500036239624023
    5. 'de' → logprob: -21.000036239624023
    6. 'd' → logprob: -21.875036239624023
    7. '@' → logprob: -22.750036239624023
    8. '    
' → logprob: -22.875036239624023
    9. '
' → logprob: -23.125036239624023
    10. '```' → logprob: -24.250036239624023

Token 486: ' load' (ID: 4700)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.31599199771881104
    2. ' run' → logprob: -2.1909918785095215
    3. 'solve' → logprob: -2.4409918785095215
    4. ' load' → logprob: -2.8159918785095215
    5. 'run' → logprob: -5.6909918785095215
    6. 'load' → logprob: -5.8159918785095215
    7. 'def' → logprob: -6.1909918785095215
    8. ' def' → logprob: -6.4409918785095215
    9. ' read' → logprob: -6.9409918785095215
    10. ' initialize' → logprob: -8.31599235534668

Token 487: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11472051590681076
    2. '(' → logprob: -2.239720582962036
    3. ' (' → logprob: -6.989720344543457
    4. '_data' → logprob: -7.364720344543457
    5. '_input' → logprob: -9.239720344543457
    6. '(
' → logprob: -9.614720344543457
    7. 'self' → logprob: -10.239720344543457
    8. '_' → logprob: -10.239720344543457
    9. '_(' → logprob: -10.739720344543457
    10. 'data' → logprob: -11.239720344543457

Token 488: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002466774603817612
    2. '(' → logprob: -8.37524700164795
    3. ' (' → logprob: -11.62524700164795
    4. '()' → logprob: -12.50024700164795
    5. '(s' → logprob: -13.37524700164795
    6. '(
' → logprob: -14.37524700164795
    7. '   ' → logprob: -14.75024700164795
    8. 'self' → logprob: -15.00024700164795
    9. '(sel' → logprob: -15.75024700164795
    10. '():
' → logprob: -15.87524700164795

Token 489: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07055727392435074
    2. '):
' → logprob: -2.8205573558807373
    3. ',' → logprob: -4.820557117462158
    4. 'self' → logprob: -7.820557117462158
    5. ')' → logprob: -10.320557594299316
    6. '(self' → logprob: -10.820557594299316
    7. '   ' → logprob: -11.695557594299316
    8. '):
' → logprob: -11.820557594299316
    9. '():' → logprob: -12.570557594299316
    10. ',self' → logprob: -12.695557594299316

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031330034136772156
    2. 'W' → logprob: -3.656330108642578
    3. ' W' → logprob: -6.156330108642578
    4. 'self' → logprob: -6.906330108642578
    5. '   ' → logprob: -7.156330108642578
    6. ' self' → logprob: -8.156330108642578
    7. 'import' → logprob: -8.406330108642578
    8. ',' → logprob: -8.781330108642578
    9. '
' → logprob: -8.781330108642578
    10. '           ' → logprob: -10.156330108642578

Token 491: ' self' (ID: 1051)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.07873015105724335
    2. 'self' (adapté à ' self') → logprob: -2.7037301063537598
    3. '       ' → logprob: -4.82873010635376
    4. ' W' → logprob: -7.57873010635376
    5. ' self' → logprob: -8.453730583190918
    6. 'w' → logprob: -10.703730583190918
    7. '   ' → logprob: -12.578730583190918
    8. '```' → logprob: -12.828730583190918
    9. 'import' → logprob: -13.203730583190918
    10. '           ' → logprob: -13.953730583190918

Token 492: '.W' (ID: 2342)
  Prédit: '.W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.W' → logprob: -7.703443770878948e-06
    2. ' .' → logprob: -12.250007629394531
    3. '.' → logprob: -13.375007629394531
    4. 'W' → logprob: -14.125007629394531
    5. 'class' → logprob: -15.500007629394531
    6. '   ' → logprob: -15.875007629394531
    7. '.H' → logprob: -16.37500762939453
    8. 'self' → logprob: -16.87500762939453
    9. '.T' → logprob: -17.75000762939453
    10. 'def' → logprob: -18.12500762939453

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.114600834436715e-05
    2. ',self' → logprob: -9.375091552734375
    3. ' ,' → logprob: -12.125091552734375
    4. ',
' → logprob: -15.375091552734375
    5. ',",' → logprob: -15.500091552734375
    6. '_,' → logprob: -16.250091552734375
    7. ',\
' → logprob: -16.375091552734375
    8. 'self' → logprob: -16.625091552734375
    9. '‌,' → logprob: -16.625091552734375
    10. ',H' → logprob: -17.000091552734375

Token 494: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5761590003967285
    2. ' self' → logprob: -0.8261590003967285
    3. '<|end|>' → logprob: -8.45115852355957
    4. '	self' → logprob: -13.45115852355957
    5. '=self' → logprob: -13.82615852355957
    6. '(self' → logprob: -14.07615852355957
    7. ' 
' → logprob: -14.20115852355957
    8. 'Self' → logprob: -14.45115852355957
    9. ' ' → logprob: -14.70115852355957
    10. '[self' → logprob: -15.45115852355957

Token 495: '.H' (ID: 6255)
  Prédit: '.H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.H' → logprob: -1.2233183042553719e-05
    2. 'H' → logprob: -11.500012397766113
    3. '.W' → logprob: -13.375012397766113
    4. '.' → logprob: -14.875012397766113
    5. ' .' → logprob: -16.375011444091797
    6. '_H' → logprob: -17.625011444091797
    7. '
' → logprob: -18.000011444091797
    8. '._' → logprob: -18.125011444091797
    9. '=' → logprob: -18.375011444091797
    10. '```' → logprob: -18.500011444091797

Token 496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8074162653647363e-05
    2. ',self' → logprob: -11.625018119812012
    3. ' ,' → logprob: -11.625018119812012
    4. ',data' → logprob: -16.250017166137695
    5. '=' → logprob: -17.375017166137695
    6. ',
' → logprob: -17.500017166137695
    7. ' =' → logprob: -17.750017166137695
    8. 'self' → logprob: -17.875017166137695
    9. '<|end|>' → logprob: -18.500017166137695
    10. '_,' → logprob: -19.000017166137695

Token 497: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.4568328857421875
    2. ' data' → logprob: -1.5818328857421875
    3. 'self' → logprob: -2.0818328857421875
    4. ' self' → logprob: -3.7068328857421875
    5. '<|end|>' → logprob: -4.8318328857421875
    6. '_data' → logprob: -6.3318328857421875
    7. 'matrix' → logprob: -6.9568328857421875
    8. ' =' → logprob: -7.7068328857421875
    9. ' matrix' → logprob: -8.706832885742188
    10. '[self' → logprob: -9.206832885742188

Token 498: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020732134580612
    2. ' =' → logprob: -2.3502073287963867
    3. '=self' → logprob: -14.850207328796387
    4. '<|end|>' → logprob: -15.100207328796387
    5. '=
' → logprob: -17.85020637512207
    6. ' ' → logprob: -18.72520637512207
    7. '	' → logprob: -18.97520637512207
    8. ')' → logprob: -19.35020637512207
    9. '_=' → logprob: -19.35020637512207
    10. '＝' → logprob: -19.35020637512207

Token 499: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20266370475292206
    2. ' self' → logprob: -1.7026636600494385
    3. 'Check' → logprob: -6.702663898468018
    4. ' Check' → logprob: -10.82766342163086
    5. '(self' → logprob: -14.20266342163086
    6. '	self' → logprob: -14.57766342163086
    7. '=self' → logprob: -15.32766342163086
    8. '[self' → logprob: -15.45266342163086
    9. '
' → logprob: -15.95266342163086
    10. '       ' → logprob: -16.45266342163086

Token 500: '.Input' (ID: 22638)
  Prédit: '.Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Input' → logprob: -0.0007556661730632186
    2. '.Matrix' → logprob: -7.250755786895752
    3. 'Input' → logprob: -10.250755310058594
    4. '.Output' → logprob: -12.500755310058594
    5. '.load' → logprob: -13.750755310058594
    6. '.Load' → logprob: -13.875755310058594
    7. '.' → logprob: -14.000755310058594
    8. '.matrix' → logprob: -14.375755310058594
    9. '.Check' → logprob: -15.000755310058594
    10. '.class' → logprob: -15.250755310058594

Token 501: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.9361264946837764e-07
    2. 'Parse' → logprob: -15.875
    3. '_parser' → logprob: -18.875
    4. 'parser' → logprob: -19.375
    5. 'Par' → logprob: -19.5
    6. 'Parsing' → logprob: -20.0
    7. ' Parser' → logprob: -20.0
    8. 'Parsed' → logprob: -20.125
    9. '.Parser' → logprob: -20.125
    10. 'Reader' → logprob: -20.875

Token 502: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -3.3213025744771585e-05
    2. '.' → logprob: -10.375033378601074
    3. '().' → logprob: -13.750033378601074
    4. ' .' → logprob: -14.625033378601074
    5. '=parse' → logprob: -15.500033378601074
    6. 'parse' → logprob: -16.375032424926758
    7. '.decode' → logprob: -17.000032424926758
    8. '.load' → logprob: -17.375032424926758
    9. '```' → logprob: -18.125032424926758
    10. '
' → logprob: -18.125032424926758

Token 503: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5759512186050415
    2. '()' → logprob: -0.8259512186050415
    3. '()
' → logprob: -11.45095157623291
    4. '()

' → logprob: -14.32595157623291
    5. '()\' → logprob: -15.07595157623291
    6. '(' → logprob: -16.450950622558594
    7. '()`' → logprob: -16.700950622558594
    8. ' ()' → logprob: -17.325950622558594
    9. ' ()
' → logprob: -17.700950622558594
    10. '(
' → logprob: -18.200950622558594

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003111995756626129
    2. '           ' → logprob: -6.628111839294434
    3. 'self' → logprob: -7.128111839294434
    4. '   ' → logprob: -7.378111839294434
    5. '
' → logprob: -8.503111839294434
    6. ' self' → logprob: -9.628111839294434
    7. '<|end|>' → logprob: -9.753111839294434
    8. '        
' → logprob: -11.003111839294434
    9. '```' → logprob: -12.378111839294434
    10. '               ' → logprob: -13.378111839294434

Token 505: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007042259443551302
    2. '       ' → logprob: -5.257042407989502
    3. ' self' → logprob: -6.382042407989502
    4. '           ' → logprob: -9.132041931152344
    5. '
' → logprob: -12.632041931152344
    6. '   ' → logprob: -12.757041931152344
    7. '	self' → logprob: -15.007041931152344
    8. '```' → logprob: -15.382041931152344
    9. '        
' → logprob: -16.132041931152344
    10. '[self' → logprob: -16.632041931152344

Token 506: '.matrix' (ID: 72944)
  Prédit: '.matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matrix' → logprob: -4.127333340875339e-06
    2. '.' → logprob: -13.125003814697266
    3. '.m' → logprob: -14.000003814697266
    4. '.Matrix' → logprob: -15.000003814697266
    5. 'matrix' → logprob: -15.125003814697266
    6. ' .' → logprob: -15.125003814697266
    7. '.mat' → logprob: -15.750003814697266
    8. '.ma' → logprob: -16.875003814697266
    9. '	matrix' → logprob: -17.000003814697266
    10. '.mx' → logprob: -18.750003814697266

Token 507: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067154900170862675
    2. ' =' → logprob: -5.006715297698975
    3. '=
' → logprob: -16.381715774536133
    4. '=

' → logprob: -18.756715774536133
    5. '=self' → logprob: -19.381715774536133
    6. '=create' → logprob: -20.256715774536133
    7. '＝' → logprob: -20.631715774536133
    8. '=new' → logprob: -20.881715774536133
    9. ' =
' → logprob: -21.006715774536133
    10. '
' → logprob: -21.006715774536133

Token 508: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02987081930041313
    2. ' self' → logprob: -3.5298707485198975
    3. 'Check' → logprob: -9.029870986938477
    4. ' Check' → logprob: -14.654870986938477
    5. '(self' → logprob: -16.404870986938477
    6. '=self' → logprob: -17.404870986938477
    7. '	self' → logprob: -17.404870986938477
    8. '   ' → logprob: -17.654870986938477
    9. '[self' → logprob: -18.404870986938477
    10. 'Self' → logprob: -19.404870986938477

Token 509: '.Matrix' (ID: 116059)
  Prédit: '.Matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Matrix' → logprob: -0.00022070204431656748
    2. '.Check' → logprob: -8.50022029876709
    3. 'Matrix' → logprob: -11.75022029876709
    4. '.' → logprob: -11.87522029876709
    5. '.Pattern' → logprob: -13.75022029876709
    6. 'Check' → logprob: -15.25022029876709
    7. 'class' → logprob: -15.25022029876709
    8. '.M' → logprob: -15.50022029876709
    9. '.Class' → logprob: -15.75022029876709
    10. '.matrix' → logprob: -15.87522029876709

Token 510: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.2603901015827432e-05
    2. '(' → logprob: -10.750022888183594
    3. 'self' → logprob: -14.250022888183594
    4. '(
' → logprob: -14.750022888183594
    5. '(this' → logprob: -17.125022888183594
    6. '(s' → logprob: -17.375022888183594
    7. '((' → logprob: -17.875022888183594
    8. ' (' → logprob: -18.375022888183594
    9. '(se' → logprob: -19.000022888183594
    10. ' self' → logprob: -19.000022888183594

Token 511: '.H' (ID: 6255)
  Prédit: '.H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.H' → logprob: -0.03492720425128937
    2. 'H' → logprob: -3.5349271297454834
    3. 'self' → logprob: -5.2849273681640625
    4. '   ' → logprob: -9.409927368164062
    5. '       ' → logprob: -12.034927368164062
    6. '.W' → logprob: -13.034927368164062
    7. ' self' → logprob: -13.659927368164062
    8. ').' → logprob: -13.784927368164062
    9. '.' → logprob: -14.659927368164062
    10. ')' → logprob: -14.784927368164062

Token 512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.251091377227567e-05
    2. ' ,' → logprob: -10.125042915344238
    3. ',self' → logprob: -13.125042915344238
    4. ',
' → logprob: -15.000042915344238
    5. '       ' → logprob: -18.000041961669922
    6. '   ' → logprob: -18.500041961669922
    7. '<|end|>' → logprob: -18.500041961669922
    8. ')' → logprob: -18.625041961669922
    9. '‌,' → logprob: -18.875041961669922
    10. '           ' → logprob: -19.750041961669922

Token 513: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001502598519437015
    2. ' self' → logprob: -6.501502513885498
    3. '       ' → logprob: -15.501502990722656
    4. '           ' → logprob: -17.376502990722656
    5. '
' → logprob: -18.376502990722656
    6. '(self' → logprob: -18.501502990722656
    7. '	self' → logprob: -18.751502990722656
    8. '   ' → logprob: -19.126502990722656
    9. '[self' → logprob: -19.501502990722656
    10. 'Self' → logprob: -20.501502990722656

Token 514: '.W' (ID: 2342)
  Prédit: '.W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.W' → logprob: -0.2984600067138672
    2. 'W' → logprob: -2.048460006713867
    3. 'self' → logprob: -2.048460006713867
    4. ' self' → logprob: -8.798460006713867
    5. '   ' → logprob: -12.423460006713867
    6. '.' → logprob: -12.673460006713867
    7. '       ' → logprob: -12.798460006713867
    8. '.S' → logprob: -13.048460006713867
    9. ' W' → logprob: -13.048460006713867
    10. '[self' → logprob: -13.423460006713867

Token 515: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0325924449716695e-05
    2. ',data' → logprob: -12.12501049041748
    3. ' ,' → logprob: -12.25001049041748
    4. ',
' → logprob: -16.500009536743164
    5. 'data' → logprob: -17.750009536743164
    6. '   ' → logprob: -18.500009536743164
    7. ')' → logprob: -19.125009536743164
    8. '       ' → logprob: -19.750009536743164
    9. '           ' → logprob: -19.875009536743164
    10. '‌,' → logprob: -20.750009536743164

Token 516: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.01416350994259119
    2. ' data' → logprob: -4.264163494110107
    3. '   ' → logprob: -19.389163970947266
    4. '	data' → logprob: -20.139163970947266
    5. 'dat' → logprob: -20.264163970947266
    6. '[data' → logprob: -20.389163970947266
    7. ')data' → logprob: -21.014163970947266
    8. '(data' → logprob: -21.139163970947266
    9. 'Data' → logprob: -21.264163970947266
    10. '
' → logprob: -21.264163970947266

Token 517: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ')
' → logprob: -12.250009536743164
    3. '<|end|>' → logprob: -12.625009536743164
    4. ' )' → logprob: -13.875009536743164
    5. ')return' → logprob: -15.375009536743164
    6. '   ' → logprob: -16.125009536743164
    7. '<|end|>' → logprob: -16.375009536743164
    8. '       ' → logprob: -17.000009536743164
    9. ')}' → logprob: -18.000009536743164
    10. '),' → logprob: -18.000009536743164

Token 518: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 519: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.429896944202483e-05
    2. ' def' → logprob: -10.500043869018555
    3. '   ' → logprob: -11.000043869018555
    4. '	def' → logprob: -18.500043869018555
    5. '       ' → logprob: -18.875043869018555
    6. '    
' → logprob: -19.375043869018555
    7. '```' → logprob: -19.500043869018555
    8. ' ' → logprob: -20.375043869018555
    9. '        
' → logprob: -21.000043869018555
    10. '
' → logprob: -21.375043869018555

Token 520: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.6519932746887207
    2. 'solve' → logprob: -1.1519932746887207
    3. ' def' → logprob: -2.6519932746887207
    4. ' check' → logprob: -3.0269932746887207
    5. 'def' → logprob: -3.2769932746887207
    6. 'check' → logprob: -5.526993274688721
    7. ' run' → logprob: -7.151993274688721
    8. 's' → logprob: -7.401993274688721
    9. ' is' → logprob: -8.401992797851562
    10. 'run' → logprob: -8.776992797851562

Token 521: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005273361224681139
    2. '(' → logprob: -5.255273342132568
    3. 'self' → logprob: -10.880273818969727
    4. '(s' → logprob: -11.630273818969727
    5. '(
' → logprob: -12.755273818969727
    6. ' (' → logprob: -13.005273818969727
    7. '_' → logprob: -13.005273818969727
    8. '_(' → logprob: -14.380273818969727
    9. '(sel' → logprob: -14.505273818969727
    10. '()' → logprob: -14.755273818969727

Token 522: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008541669230908155
    2. '):
' → logprob: -7.125854015350342
    3. 'self' → logprob: -10.5008544921875
    4. ')' → logprob: -11.3758544921875
    5. '():' → logprob: -11.8758544921875
    6. ' ):' → logprob: -13.6258544921875
    7. ',' → logprob: -13.8758544921875
    8. '(self' → logprob: -14.6258544921875
    9. '   ' → logprob: -14.7508544921875
    10. '):
' → logprob: -15.2508544921875

Token 523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02121482603251934
    2. 'result' → logprob: -4.396214962005615
    3. 'if' → logprob: -5.521214962005615
    4. ' result' → logprob: -6.021214962005615
    5. ' if' → logprob: -6.396214962005615
    6. 'return' → logprob: -7.771214962005615
    7. '   ' → logprob: -9.521214485168457
    8. ' return' → logprob: -10.271214485168457
    9. '```' → logprob: -11.021214485168457
    10. ' for' → logprob: -12.146214485168457

Token 524: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06256560236215591
    2. '       ' → logprob: -2.812565565109253
    3. 'result' → logprob: -7.812565803527832
    4. ' return' → logprob: -8.562565803527832
    5. '   ' → logprob: -13.812565803527832
    6. 'if' → logprob: -14.062565803527832
    7. ' result' → logprob: -16.062564849853516
    8. '	return' → logprob: -16.687564849853516
    9. '```' → logprob: -16.812564849853516
    10. '
' → logprob: -16.937564849853516

Token 525: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02324547804892063
    2. ' self' → logprob: -3.7732455730438232
    3. '(self' → logprob: -18.648244857788086
    4. '	self' → logprob: -19.273244857788086
    5. 'not' → logprob: -20.523244857788086
    6. '   ' → logprob: -21.273244857788086
    7. '[self' → logprob: -21.398244857788086
    8. ' ' → logprob: -21.898244857788086
    9. '=self' → logprob: -22.023244857788086
    10. ' ' → logprob: -22.273244857788086

Token 526: '.matrix' (ID: 72944)
  Prédit: '.matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matrix' → logprob: -2.696889623621246e-06
    2. 'matrix' → logprob: -13.25000286102295
    3. '	matrix' → logprob: -15.00000286102295
    4. '.m' → logprob: -15.12500286102295
    5. '.' → logprob: -15.50000286102295
    6. '.Matrix' → logprob: -16.875001907348633
    7. ' .' → logprob: -17.750001907348633
    8. '.ma' → logprob: -18.125001907348633
    9. '.mat' → logprob: -18.250001907348633
    10. '
' → logprob: -18.500001907348633

Token 527: '.check' (ID: 12631)
  Prédit: '.check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.check' → logprob: -0.00023417205375153571
    2. '.' → logprob: -8.375234603881836
    3. '.is' → logprob: -13.625234603881836
    4. ' .' → logprob: -13.750234603881836
    5. '.validate' → logprob: -15.000234603881836
    6. 'check' → logprob: -15.125234603881836
    7. '.solve' → logprob: -16.125234603881836
    8. '.get' → logprob: -16.500234603881836
    9. '.has' → logprob: -16.750234603881836
    10. '.verify' → logprob: -17.000234603881836

Token 528: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.125000953674316
    3. '_p' → logprob: -16.000001907348633
    4. '_patterns' → logprob: -17.250001907348633
    5. 'pattern' → logprob: -17.375001907348633
    6. '_pat' → logprob: -17.625001907348633
    7. ' _' → logprob: -18.875001907348633
    8. '_PATTERN' → logprob: -19.750001907348633
    9. '_problem' → logprob: -19.750001907348633
    10. '"_' → logprob: -20.625001907348633

Token 529: '_fe' (ID: 16058)
  Prédit: '_fe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fe' → logprob: -3.128163257315464e-07
    2. 'fe' → logprob: -15.375
    3. 'Fe' → logprob: -17.375
    4. '_' → logprob: -17.375
    5. '_Fe' → logprob: -17.375
    6. '_f' → logprob: -18.625
    7. ' feasibility' → logprob: -18.75
    8. '(fe' → logprob: -19.375
    9. ' Fe' → logprob: -19.75
    10. '_fee' → logprob: -20.125

Token 530: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.00040457461727783084
    2. 'asib' → logprob: -7.875404357910156
    3. 'asible' → logprob: -10.750404357910156
    4. 'a' → logprob: -13.500404357910156
    5. 'asi' → logprob: -13.750404357910156
    6. 'asil' → logprob: -15.375404357910156
    7. 's' → logprob: -15.500404357910156
    8. 'ability' → logprob: -16.375404357910156
    9. '_as' → logprob: -17.375404357910156
    10. ' as' → logprob: -17.375404357910156

Token 531: 'ibility' (ID: 4295)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004770922474563122
    2. 'ibility' → logprob: -5.504770755767822
    3. 's' → logprob: -7.379770755767822
    4. 'ability' → logprob: -9.87977123260498
    5. 'as' → logprob: -11.62977123260498
    6. 'ss' → logprob: -12.25477123260498
    7. 'd' → logprob: -14.12977123260498
    8. 'ility' → logprob: -14.50477123260498
    9. 'n' → logprob: -14.87977123260498
    10. '_b' → logprob: -15.12977123260498

Token 532: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006631145952269435
    2. '()
' → logprob: -7.3756632804870605
    3. '<|end|>' → logprob: -10.750662803649902
    4. '()

' → logprob: -12.625662803649902
    5. '()\' → logprob: -13.125662803649902
    6. '(' → logprob: -13.375662803649902
    7. '()%' → logprob: -13.750662803649902
    8. '()`' → logprob: -13.750662803649902
    9. '()<' → logprob: -14.125662803649902
    10. '().' → logprob: -14.125662803649902

Token 533: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 534: ' def' (ID: 1056)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004195813555270433
    2. 'def' (adapté à ' def') → logprob: -5.504195690155029
    3. '#' → logprob: -9.879196166992188
    4. 'solver' → logprob: -10.629196166992188
    5. ' if' → logprob: -10.879196166992188
    6. '```' → logprob: -11.254196166992188
    7. 'check' → logprob: -12.129196166992188
    8. 'Check' → logprob: -12.879196166992188
    9. '<|end|>' → logprob: -14.504196166992188
    10. 'If' → logprob: -14.754196166992188

Token 535: ' run' (ID: 2461)
  Prédit: ' run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.5970426797866821
    2. ' main' → logprob: -0.8470426797866821
    3. 'run' → logprob: -4.347042560577393
    4. 'main' → logprob: -4.847042560577393
    5. ' check' → logprob: -9.59704303741455
    6. ' test' → logprob: -12.22204303741455
    7. ' output' → logprob: -12.59704303741455
    8. ' solve' → logprob: -12.72204303741455
    9. '_main' → logprob: -13.72204303741455
    10. 'check' → logprob: -13.84704303741455

Token 536: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05541126802563667
    2. '(' → logprob: -2.9304113388061523
    3. '(
' → logprob: -8.305411338806152
    4. '()' → logprob: -8.805411338806152
    5. 'self' → logprob: -10.055411338806152
    6. '(s' → logprob: -10.180411338806152
    7. '():' → logprob: -10.930411338806152
    8. ' (' → logprob: -11.680411338806152
    9. '   ' → logprob: -11.930411338806152
    10. ':' → logprob: -12.680411338806152

Token 537: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014670399948954582
    2. '):
' → logprob: -4.264670372009277
    3. ')' → logprob: -8.139670372009277
    4. 'self' → logprob: -8.514670372009277
    5. '():' → logprob: -11.764670372009277
    6. '):
' → logprob: -13.514670372009277
    7. '(self' → logprob: -13.514670372009277
    8. ',' → logprob: -13.889670372009277
    9. '   ' → logprob: -13.889670372009277
    10. ':' → logprob: -14.264670372009277

Token 538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014264254132285714
    2. '
' → logprob: -7.3764262199401855
    3. 'self' → logprob: -8.001426696777344
    4. '(self' → logprob: -8.376426696777344
    5. '   ' → logprob: -9.376426696777344
    6. '()' → logprob: -10.001426696777344
    7. ' self' → logprob: -10.501426696777344
    8. '(' → logprob: -11.001426696777344
    9. '        
' → logprob: -11.001426696777344
    10. '()
' → logprob: -11.251426696777344

Token 539: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007374239154160023
    2. '       ' → logprob: -5.007374286651611
    3. ' self' → logprob: -7.382374286651611
    4. 'result' → logprob: -10.632373809814453
    5. '   ' → logprob: -11.632373809814453
    6. 'if' → logprob: -13.257373809814453
    7. '
' → logprob: -14.257373809814453
    8. '	self' → logprob: -14.257373809814453
    9. '(self' → logprob: -15.507373809814453
    10. '```' → logprob: -16.257373809814453

Token 540: '.load' (ID: 9383)
  Prédit: '.load'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.load' → logprob: -0.03327159583568573
    2. '.' → logprob: -3.533271551132202
    3. '.run' → logprob: -5.783271789550781
    4. '.solve' → logprob: -8.033271789550781
    5. ' .' → logprob: -9.283271789550781
    6. '.W' → logprob: -11.908271789550781
    7. '   ' → logprob: -12.783271789550781
    8. '.Load' → logprob: -13.533271789550781
    9. '.check' → logprob: -13.908271789550781
    10. ' load' → logprob: -13.908271789550781

Token 541: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.463036435074173e-05
    2. '_' → logprob: -10.625024795532227
    3. '_
' → logprob: -15.875024795532227
    4. '()' → logprob: -16.250024795532227
    5. ' _' → logprob: -17.375024795532227
    6. 'input' → logprob: -17.625024795532227
    7. '_output' → logprob: -17.750024795532227
    8. '()
' → logprob: -17.875024795532227
    9. '(input' → logprob: -18.500024795532227
    10. '_Input' → logprob: -18.750024795532227

Token 542: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.011132476851344109
    2. '()' → logprob: -4.51113224029541
    3. '       ' → logprob: -9.51113224029541
    4. '()
' → logprob: -11.63613224029541
    5. '()

' → logprob: -14.01113224029541
    6. '()\' → logprob: -14.76113224029541
    7. '   ' → logprob: -15.01113224029541
    8. '()`' → logprob: -16.886133193969727
    9. '
' → logprob: -17.886133193969727
    10. '();
' → logprob: -18.011133193969727

Token 543: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1862746924161911
    2. 'result' → logprob: -1.8112746477127075
    3. ' result' → logprob: -5.061274528503418
    4. '
' → logprob: -9.186274528503418
    5. '   ' → logprob: -10.311274528503418
    6. 'if' → logprob: -12.186274528503418
    7. 'self' → logprob: -12.311274528503418
    8. '```' → logprob: -12.311274528503418
    9. ' if' → logprob: -12.436274528503418
    10. 'return' → logprob: -12.561274528503418

Token 544: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.00011284107313258573
    2. 'res' → logprob: -9.500112533569336
    3. ' result' → logprob: -10.500112533569336
    4. '       ' → logprob: -11.500112533569336
    5. 'print' → logprob: -15.500112533569336
    6. '   ' → logprob: -17.375112533569336
    7. '        
' → logprob: -18.500112533569336
    8. '```' → logprob: -18.625112533569336
    9. '	result' → logprob: -19.000112533569336
    10. 'answer' → logprob: -19.500112533569336

Token 545: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975071594119072
    2. '=' → logprob: -3.5297508239746094
    3. ' ' → logprob: -16.02975082397461
    4. '=self' → logprob: -17.52975082397461
    5. ' =
' → logprob: -17.52975082397461
    6. ')' → logprob: -17.77975082397461
    7. ' =)' → logprob: -18.15475082397461
    8. '<|end|>' → logprob: -19.27975082397461
    9. ' ' → logprob: -19.90475082397461
    10. '   ' → logprob: -19.90475082397461

Token 546: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023245595395565033
    2. ' self' → logprob: -3.7732455730438232
    3. '       ' → logprob: -16.648244857788086
    4. '(self' → logprob: -18.148244857788086
    5. '	self' → logprob: -18.773244857788086
    6. '=self' → logprob: -19.523244857788086
    7. '
' → logprob: -20.023244857788086
    8. '   ' → logprob: -20.148244857788086
    9. 'Self' → logprob: -20.523244857788086
    10. '[self' → logprob: -20.648244857788086

Token 547: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -2.546478935983032e-05
    2. '.' → logprob: -10.750025749206543
    3. 'solve' → logprob: -12.625025749206543
    4. ' .' → logprob: -15.375025749206543
    5. '.sol' → logprob: -16.125024795532227
    6. '.check' → logprob: -16.250024795532227
    7. '.run' → logprob: -16.625024795532227
    8. '.
' → logprob: -18.875024795532227
    9. '.save' → logprob: -19.125024795532227
    10. ' solve' → logprob: -19.375024795532227

Token 548: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.3132935166358948
    2. '()' → logprob: -1.31329345703125
    3. '()
' → logprob: -10.93829345703125
    4. '()

' → logprob: -11.31329345703125
    5. '()`' → logprob: -14.68829345703125
    6. '()\' → logprob: -14.81329345703125
    7. '(' → logprob: -15.18829345703125
    8. '(
' → logprob: -15.31329345703125
    9. '       ' → logprob: -15.43829345703125
    10. '(True' → logprob: -16.06329345703125

Token 549: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39639005064964294
    2. '       ' → logprob: -1.1463900804519653
    3. 'self' → logprob: -4.771389961242676
    4. ' self' → logprob: -8.271389961242676
    5. '```' → logprob: -8.521389961242676
    6. '   ' → logprob: -8.646389961242676
    7. '        
' → logprob: -8.646389961242676
    8. '
' → logprob: -9.396389961242676
    9. '<|end|>' → logprob: -10.146389961242676
    10. '	self' → logprob: -10.646389961242676

Token 550: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009731597383506596
    2. ' self' → logprob: -7.250973224639893
    3. '       ' → logprob: -8.250972747802734
    4. '
' → logprob: -13.125972747802734
    5. '   ' → logprob: -16.250972747802734
    6. '        
' → logprob: -16.625972747802734
    7. '	self' → logprob: -17.625972747802734
    8. '(self' → logprob: -17.875972747802734
    9. '[self' → logprob: -17.875972747802734
    10. 'Self' → logprob: -18.875972747802734

Token 551: '.Output' (ID: 52068)
  Prédit: '.Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Output' → logprob: -2.339278580620885e-06
    2. '.' → logprob: -13.125001907348633
    3. '.Out' → logprob: -15.375001907348633
    4. 'Output' → logprob: -16.500001907348633
    5. '.output' → logprob: -16.875001907348633
    6. ' .' → logprob: -18.750001907348633
    7. '.Input' → logprob: -18.875001907348633
    8. '.External' → logprob: -19.250001907348633
    9. '	Output' → logprob: -19.375001907348633
    10. '.Result' → logprob: -19.375001907348633

Token 552: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -1.9361264946837764e-07
    2. 'Write' → logprob: -16.375
    3. '.write' → logprob: -17.25
    4. 'write' → logprob: -18.0
    5. 'writer' → logprob: -18.25
    6. '_writer' → logprob: -18.75
    7. '.Writer' → logprob: -20.375
    8. 'Reader' → logprob: -21.0
    9. 'W' → logprob: -21.375
    10. '.Write' → logprob: -21.625

Token 553: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -1.3425219549390022e-05
    2. '.' → logprob: -11.25001335144043
    3. ' .' → logprob: -14.87501335144043
    4. '.print' → logprob: -17.62501335144043
    5. '   ' → logprob: -19.50001335144043
    6. '.run' → logprob: -20.25001335144043
    7. '.show' → logprob: -20.62501335144043
    8. '.w' → logprob: -20.62501335144043
    9. 'write' → logprob: -20.75001335144043
    10. '.save' → logprob: -21.25001335144043

Token 554: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -4.572941179503687e-05
    2. '(' → logprob: -10.000045776367188
    3. 'result' → logprob: -16.000045776367188
    4. '(results' → logprob: -16.875045776367188
    5. '(
' → logprob: -18.375045776367188
    6. '(res' → logprob: -18.500045776367188
    7. '(resultado' → logprob: -18.750045776367188
    8. ' (' → logprob: -19.500045776367188
    9. ',result' → logprob: -20.375045776367188
    10. '(response' → logprob: -20.375045776367188

Token 555: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9094359278678894
    2. '()' → logprob: -0.9094359278678894
    3. '())' → logprob: -1.6594359874725342
    4. '()
' → logprob: -5.534435749053955
    5. '())
' → logprob: -8.909436225891113
    6. ')
' → logprob: -8.909436225891113
    7. '(' → logprob: -10.909436225891113
    8. ' )' → logprob: -12.534436225891113
    9. '(
' → logprob: -13.034436225891113
    10. '(True' → logprob: -13.284436225891113

Token 556: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00027921271976083517
    2. '#' → logprob: -8.875279426574707
    3. ' if' → logprob: -10.000279426574707
    4. 'solver' → logprob: -10.250279426574707
    5. 'i' → logprob: -11.000279426574707
    6. 'c' → logprob: -11.375279426574707
    7. '```' → logprob: -11.625279426574707
    8. 'check' → logprob: -11.625279426574707
    9. '
' → logprob: -12.250279426574707
    10. '\n' → logprob: -13.750279426574707

Token 557: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03804516792297363
    2. '__' → logprob: -3.2880451679229736
    3. '_' → logprob: -12.913044929504395
    4. 'name' → logprob: -14.788044929504395
    5. '_name' → logprob: -15.163044929504395
    6. '___' → logprob: -15.413044929504395
    7. ' ' → logprob: -15.663044929504395
    8. 'Name' → logprob: -16.41304588317871
    9. ' ' → logprob: -16.78804588317871
    10. ' _' → logprob: -17.16304588317871

Token 558: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0333736352622509
    2. ' __' → logprob: -4.033373832702637
    3. ' ==' → logprob: -4.408373832702637
    4. '==' → logprob: -6.533373832702637
    5. '__.__' → logprob: -7.033373832702637
    6. '__.' → logprob: -8.408373832702637
    7. '.__' → logprob: -8.658373832702637
    8. '_' → logprob: -10.283373832702637
    9. '.py' → logprob: -10.658373832702637
    10. '.' → logprob: -11.033373832702637

Token 559: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.028536492725834e-05
    2. '==' → logprob: -9.750070571899414
    3. '__.__' → logprob: -11.625070571899414
    4. ' ==' → logprob: -13.750070571899414
    5. '=="' → logprob: -13.875070571899414
    6. '_' → logprob: -15.125070571899414
    7. '__
' → logprob: -15.250070571899414
    8. '___' → logprob: -16.000070571899414
    9. '__.' → logprob: -16.375070571899414
    10. '____' → logprob: -16.375070571899414

Token 560: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14350734651088715
    2. ' ==' → logprob: -2.143507242202759
    3. '==' → logprob: -4.268507480621338
    4. '=="' → logprob: -6.643507480621338
    5. '.__' → logprob: -7.643507480621338
    6. '__.__' → logprob: -7.643507480621338
    7. '_' → logprob: -9.39350700378418
    8. '__.' → logprob: -11.01850700378418
    9. '=='' → logprob: -11.01850700378418
    10. ' __' → logprob: -11.26850700378418

Token 561: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011091329157352448
    2. ''' → logprob: -4.511091232299805
    3. ' "__' → logprob: -10.136091232299805
    4. '__' → logprob: -13.011091232299805
    5. ' '__' → logprob: -14.386091232299805
    6. '"class' → logprob: -14.386091232299805
    7. '"user' → logprob: -16.386091232299805
    8. '"name' → logprob: -16.511091232299805
    9. '"_' → logprob: -16.511091232299805
    10. ''"' → logprob: -17.136091232299805

Token 562: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.512236498361744e-07
    2. 'name' → logprob: -14.500000953674316
    3. 'ma' → logprob: -18.625
    4. ' main' → logprob: -18.75
    5. 'built' → logprob: -20.125
    6. '_main' → logprob: -20.375
    7. '__' → logprob: -20.625
    8. 'm' → logprob: -21.125
    9. '(main' → logprob: -22.0
    10. '-main' → logprob: -22.5

Token 563: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0033017699606716633
    2. '__' → logprob: -5.753301620483398
    3. '__':
' → logprob: -9.003301620483398
    4. '__:' → logprob: -14.003301620483398
    5. '__["' → logprob: -16.2533016204834
    6. '__.' → logprob: -17.0033016204834
    7. '__
' → logprob: -17.6283016204834
    8. '__.__' → logprob: -17.8783016204834
    9. '_' → logprob: -18.7533016204834
    10. '__("' → logprob: -19.1283016204834

Token 564: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038126648869365454
    2. ' solver' → logprob: -5.878812789916992
    3. ' Check' → logprob: -7.253812789916992
    4. ' check' → logprob: -9.878812789916992
    5. ' cps' → logprob: -10.003812789916992
    6. 'solver' → logprob: -10.128812789916992
    7. 'Check' → logprob: -10.253812789916992
    8. '    
' → logprob: -10.628812789916992
    9. ' Solver' → logprob: -10.753812789916992
    10. ' CPS' → logprob: -11.253812789916992

Token 565: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.2534645199775696
    2. ' solver' → logprob: -1.5034644603729248
    3. 'Check' → logprob: -7.128464698791504
    4. 'import' → logprob: -7.878464698791504
    5. ' cps' → logprob: -8.878464698791504
    6. ' Check' → logprob: -9.753464698791504
    7. ' CPS' → logprob: -10.753464698791504
    8. '   ' → logprob: -10.878464698791504
    9. ' import' → logprob: -11.128464698791504
    10. 'sol' → logprob: -11.253464698791504

Token 566: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24216356873512268
    2. '.run' → logprob: -1.6171635389328003
    3. ' =' → logprob: -4.36716365814209
    4. '().' → logprob: -6.24216365814209
    5. '=' → logprob: -6.61716365814209
    6. '.solve' → logprob: -8.61716365814209
    7. '()' → logprob: -9.24216365814209
    8. ' .' → logprob: -9.24216365814209
    9. '   ' → logprob: -9.49216365814209
    10. '.s' → logprob: -10.24216365814209

Token 567: ' Check' (ID: 6208)
  Prédit: 'Check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Check' → logprob: -0.25192955136299133
    2. ' Check' → logprob: -1.501929521560669
    3. '	Check' → logprob: -14.75192928314209
    4. '_Check' → logprob: -16.751930236816406
    5. 'Checker' → logprob: -19.251930236816406
    6. '(Check' → logprob: -19.501930236816406
    7. '_check' → logprob: -20.251930236816406
    8. ' check' → logprob: -21.376930236816406
    9. 'Che' → logprob: -21.626930236816406
    10. ' ' → logprob: -21.751930236816406

Token 568: 'ered' (ID: 21189)
  Prédit: 'ered'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ered' → logprob: 0.0
    2. 'er' → logprob: -19.0
    3. 'ere' → logprob: -21.75
    4. ' ered' → logprob: -22.75
    5. 'ored' → logprob: -22.875
    6. 'ering' → logprob: -23.125
    7. '```' → logprob: -24.125
    8. 'erd' → logprob: -24.25
    9. 'ared' → logprob: -24.25
    10. 'bered' → logprob: -24.25

Token 569: 'Pattern' (ID: 16821)
  Prédit: 'Pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -1.9361264946837764e-07
    2. 'Patterns' → logprob: -17.25
    3. 'pattern' → logprob: -17.375
    4. 'P' → logprob: -17.75
    5. ' Pattern' → logprob: -18.0
    6. 'Pat' → logprob: -18.5
    7. 'Problem' → logprob: -19.875
    8. '_pattern' → logprob: -20.375
    9. 'attern' → logprob: -20.625
    10. ' pattern' → logprob: -20.625

Token 570: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.00030042731668800116
    2. 'solver' → logprob: -8.125300407409668
    3. '_solver' → logprob: -13.000300407409668
    4. 'Solve' → logprob: -13.750300407409668
    5. 'Sol' → logprob: -15.000300407409668
    6. ' Solver' → logprob: -15.625300407409668
    7. ' solver' → logprob: -15.750300407409668
    8. 'S' → logprob: -15.875300407409668
    9. 'solve' → logprob: -15.875300407409668
    10. '   ' → logprob: -17.000301361083984

Token 571: '()
' (ID: 1234)
  Prédit: '.run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.4489651024341583
    2. '.' → logprob: -1.073965072631836
    3. '.
' → logprob: -4.573965072631836
    4. '
' → logprob: -5.073965072631836
    5. '   ' → logprob: -6.323965072631836
    6. '.s' → logprob: -7.323965072631836
    7. '.runner' → logprob: -7.823965072631836
    8. '.solve' → logprob: -8.073965072631836
    9. '  
' → logprob: -9.198965072631836
    10. 'solver' → logprob: -10.073965072631836

Token 572: '   ' (ID: 271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -3.941161776310764e-05
    2. ' solver' → logprob: -10.375039100646973
    3. '   ' → logprob: -11.750039100646973
    4. '_solver' → logprob: -16.00004005432129
    5. '	s' → logprob: -16.75004005432129
    6. 's' → logprob: -17.12504005432129
    7. 'sol' → logprob: -17.87504005432129
    8. '
' → logprob: -18.50004005432129
    9. 'scheduler' → logprob: -18.50004005432129
    10. '```' → logprob: -19.00004005432129

Token 573: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -1.9361264946837764e-07
    2. ' solver' → logprob: -15.75
    3. 's' → logprob: -18.875
    4. 'solve' → logprob: -19.0
    5. '   ' → logprob: -19.0
    6. 'scheduler' → logprob: -19.375
    7. 'sol' → logprob: -19.75
    8. 'resolver' → logprob: -21.125
    9. 'executor' → logprob: -21.625
    10. 'solution' → logprob: -21.75

Token 574: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.0005545823951251805
    2. '.' → logprob: -7.50055456161499
    3. '.
' → logprob: -14.125555038452148
    4. ' .' → logprob: -14.250555038452148
    5. 'run' → logprob: -16.50055503845215
    6. '
' → logprob: -18.12555503845215
    7. '   ' → logprob: -18.62555503845215
    8. '().' → logprob: -18.62555503845215
    9. '.Run' → logprob: -18.62555503845215
    10. ' run' → logprob: -19.62555503845215

Token 575: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 573
Tokens correctement prédits (1ère position, stricte): 269
Tokens correctement prédits (1ère position, avec adaptation): 297
Tokens correctement prédits (top 10): 487
Précision stricte (1ère position): 46.95%
Précision adaptée (1ère position): 51.83%
Précision (top 10): 84.99%
================================================================================
