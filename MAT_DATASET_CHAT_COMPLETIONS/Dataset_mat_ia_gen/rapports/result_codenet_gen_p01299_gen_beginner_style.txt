================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def circles_touch_or_cross(c1, c2):
    x1, y1, r1 = c1
    x2, y2, r2 = c2
    dist_sq = (x1 - x2)**2 + (y1 - y2)**2
    r_sum = r1 + r2
    return dist_sq <= r_sum*r_sum

def point_inside_circle(px, py, circle):
    x, y, r = circle
    dist_sq = (px - x)**2 + (py - y)**2
    return dist_sq < r*r

def build_graph(circles):
    n = len(circles)
    graph = [[] for _ in range(n)]
    for i in range(n):
        for j in range(i+1, n):
            if circles_touch_or_cross(circles[i], circles[j]):
                graph[i].append(j)
                graph[j].append(i)
    return graph

def bfs(graph, start_nodes):
    from collections import deque
    dist = [-1]*len(graph)
    q = deque()
    for s in start_nodes:
        dist[s] = 0
        q.append(s)
    while q:
        u = q.popleft()
        for v in graph[u]:
            if dist[v] == -1:
                dist[v] = dist[u]+1
                q.append(v)
    return dist

def main():
    input_lines = sys.stdin.read().strip().split('\n')
    idx = 0
    while True:
        if idx >= len(input_lines):
            break
        n = int(input_lines[idx])
        idx += 1
        if n == 0:
            break
        xs, ys, xt, yt = map(int, input_lines[idx].split())
        idx += 1
        circles = []
        for _ in range(n):
            x, y, r = map(int, input_lines[idx].split())
            idx += 1
            circles.append((x, y, r))
        # Identify start and end circles (that contain start or end point)
        start_circles = []
        end_circles = []
        for i, c in enumerate(circles):
            if point_inside_circle(xs, ys, c):
                start_circles.append(i)
            if point_inside_circle(xt, yt, c):
                end_circles.append(i)
        # If start or end not inside any circle, that means rat or fish are outside walls.
        # The rat must cross all walls that separate start from end.
        # Build graph of circles connected if they touch/cross.
        graph = build_graph(circles)
        # If start or end not inside any circle, add them as special nodes with index n (start) and n+1 (end)
        # Connect them to circles that touch them (i.e. circles that the start or end point is inside)
        # Actually, since points are not inside any circle, they have no connections.
        # So movement from start to end is impossible only if circles form walls.
        # So we treat start and end as outside.
        # To find minimum walls climbed: think of it as shortest path on graph of circles,
        # Where crossing wall = going through a circle.
        # Another method: start point outside walls, end point outside walls.
        # The rat can go around walls outside. Walls that separate start and end must be crossed.
        # So find minimal number of circles on any path from start region to end region in plane.
        # To model start and end "outside": Consider virtual node for start and end connected to circles that contain start or end.

        # Actually from problem: Since rat and fish not inside any circle, start_circles and end_circles will be empty.
        # To handle this, define "outside" as node -1. Circles that separate start and end will be those "blocking" the path.
        # So from the problem, walls do not touch or cross if built. So Maki can place walls so that minimal climb is maximal for rat.
        # The minimal walls rat need to climb is shortest path in graph of circles from start region to end region.
        # Since start and end outside, connected to no circle, minimal wall to climb is shortest chain of circles separating start and end.
        # However, walls are built not crossing or touching each other, so if walls exist that block path, rat need to climb.

        # So formal approach:
        # Build graph between circles.
        # Build two extra nodes: start (-2), end (-3)
        # Connect start to all circles which cover start point (none in problem)
        # Connect end to all circles which cover end point (none)
        # Now to find minimal number of walls rat needs to climb, we find shortest path from start to end on this graph.
        # Since start and end have no circles connected, if there is path from start to end only via start* and end* (outside), rat cross 0 walls.
        # But if not connected, need to check via circles.

        # Since start and end outside, rat can go without crossing any circle unless walls build chain between them.
        # But the question says: walls that can be built must not touch or cross.
        # So we need to find minimal walls rat must climb over after optimal wall building.

        # The problem is minimal number of walls rat must climb to reach from start to end.

        # Idea: model the problem as finding minimal number of walls to be crossed when going from start to end.
        # The walls don't touch or cross, so the set of walls form disconnected components.

        # So rat path crosses walls if path crosses a circle (wall).
        # If we consider that the plane is divided by these circles, walls surround regions.

        # Another approach (simpler for beginner): for each dataset:
        # For all subsets of circles that do not touch each other (so can be built simultaneously), we find those that separate start and end.
        # Since that is complex, instead:
        # For each circle, check if it contains the start or end point.
        # We'll find shortest path from start to end by crossing minimal walls.

        # Simplify with BFS over circles:

        # Define for each circle if touching start point (inside or touching)
        # Define same for end point
        # BFS from circles containing start point to circles containing end point
        # Distance is number of walls climbed.

        # If start or end not inside any circles, means rat can go outside without crossing any walls, minimal is 0.

        # So answer:
        # If start and end are in same connected area outside circles => 0
        # Else, find shortest distance between circles containing start point and circles containing end point.

        if not start_circles and not end_circles:
            # No circles contain start or end: rat moves outside all walls: 0
            print(0)
            continue
        if start_circles == []:
            # Start outside, end inside some circles? rat must climb those circles starting from outside
            # So start node connects to outside (no circle)
            # Add pseudo start node: -1
            # Connect start node to circles that separate it from end

            # Since no circle contains start point, but some circles contain end point
            # rat must climb minimal walls entering end circles
            # So shortest path from outside (start) to end_circles is min distance from "outside" to end_circles

            # We add a virtual node 'start' connected to no circles (since start outside any circle)
            # So distance from start node to circles is undefined (no edges)
            # So rat must climb at least min distance from outside to end circles.

            # If no connection, no path to reach end inside circle? But can go outside? No, since end inside circle, rat must climb walls.

            # So from outside 0 jumps, to end circle => minimal jumps is the number of walls corresponding to shortest path from outside to end circle

            # Because outside is not connected to any circle, rat can only climb walls on path to end.
            # So check if any circle contains end; minimal walls to climb is minimal number of circles from outside to that circle

            # Start outside, so distance 0 at outside:
            # BFS over circles, check minimal distance from outside into end circles by climbing walls

            # Since outside not connected to any circle, distance -1 for all circles

            # Check if end_circles is empty? If yes, print 0. else minimal distance is minimal 1.

            # For beginner simplicity: if start outside circles, and end inside some circle, minimal is 1 (climb that circle wall)
            print(1)
            continue
        if end_circles == []:
            # Same as above reversed
            print(1)
            continue

        dist = bfs(graph, start_circles)
        ans = -1
        for e in end_circles:
            if dist[e] != -1:
                if ans == -1 or dist[e] < ans:
                    ans = dist[e]
        if ans == -1:
            # No path from start_circles to end_circles
            # Means rat has to climb all walls or cannot reach - since always can go outside, minimal is 0 ?
            print(0)
        else:
            print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19651642441749573
    2. '\n' → logprob: -2.696516513824463
    3. '
' → logprob: -3.696516513824463
    4. '<|end|>' → logprob: -3.821516513824463
    5. 'import' → logprob: -3.946516513824463
    6. '\' → logprob: -4.446516513824463
    7. '```' → logprob: -4.821516513824463
    8. '

' → logprob: -4.821516513824463
    9. '<|end|>' → logprob: -4.946516513824463
    10. ',' → logprob: -5.696516513824463

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7822849750518799
    2. '\' → logprob: -1.9072849750518799
    3. 'import' → logprob: -1.9072849750518799
    4. '\n' → logprob: -2.15728497505188
    5. '```' → logprob: -3.15728497505188
    6. 'def' → logprob: -3.28228497505188
    7. '#' → logprob: -4.657284736633301
    8. ',' → logprob: -4.657284736633301
    9. '
' → logprob: -5.032284736633301
    10. '*' → logprob: -5.282284736633301

Token 7: ' circles' (ID: 45131)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023089634254574776
    2. ' calculate' → logprob: -4.273089408874512
    3. ' factorial' → logprob: -5.773089408874512
    4. ' space' → logprob: -6.148089408874512
    5. '_' → logprob: -7.023089408874512
    6. ' math' → logprob: -7.648089408874512
    7. ' compute' → logprob: -7.898089408874512
    8. ' e' → logprob: -8.023089408874512
    9. ' calc' → logprob: -9.023089408874512
    10. ' my' → logprob: -9.023089408874512

Token 8: '_touch' (ID: 155310)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1906440705060959
    2. '_radius' → logprob: -2.4406440258026123
    3. '_' → logprob: -3.6906440258026123
    4. '):' → logprob: -4.440644264221191
    5. '_circle' → logprob: -4.440644264221191
    6. ':' → logprob: -5.065644264221191
    7. '_area' → logprob: -5.190644264221191
    8. '(radius' → logprob: -5.190644264221191
    9. '():' → logprob: -5.440644264221191
    10. '```' → logprob: -6.190644264221191

Token 9: '_or' (ID: 15400)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017468279227614403
    2. ' (' → logprob: -5.267468452453613
    3. '():' → logprob: -5.517468452453613
    4. 's' → logprob: -6.267468452453613
    5. '(:' → logprob: -6.267468452453613
    6. '_' → logprob: -7.392468452453613
    7. 'es' → logprob: -7.642468452453613
    8. '(e' → logprob: -7.642468452453613
    9. '(a' → logprob: -7.767468452453613
    10. 'ing' → logprob: -7.767468452453613

Token 10: '_cross' (ID: 85618)
  Prédit: '_overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.13648493587970734
    2. 'over' → logprob: -3.1364848613739014
    3. '_t' → logprob: -3.8864848613739014
    4. 'inter' → logprob: -4.1364850997924805
    5. '_inter' → logprob: -4.1364850997924805
    6. '_cont' → logprob: -5.2614850997924805
    7. 't' → logprob: -5.5114850997924805
    8. '_inside' → logprob: -5.5114850997924805
    9. '_' → logprob: -6.0114850997924805
    10. '_not' → logprob: -6.3864850997924805

Token 11: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0058592320419847965
    2. ' (' → logprob: -6.380859375
    3. '():' → logprob: -6.755859375
    4. '(:' → logprob: -6.880859375
    5. '(a' → logprob: -7.130859375
    6. '_' → logprob: -8.380859375
    7. '(x' → logprob: -9.130859375
    8. 's' → logprob: -9.255859375
    9. '(_:' → logprob: -9.505859375
    10. '(s' → logprob: -9.755859375

Token 12: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014255298301577568
    2. 'ir' → logprob: -4.889255523681641
    3. 'e' → logprob: -5.889255523681641
    4. 'ircle' → logprob: -6.139255523681641
    5. '_i' → logprob: -8.26425552368164
    6. ' i' → logprob: -8.26425552368164
    7. 'enter' → logprob: -8.38925552368164
    8. '):' → logprob: -8.63925552368164
    9. '(i' → logprob: -8.76425552368164
    10. 'o' → logprob: -8.88925552368164

Token 13: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00821383111178875
    2. ',' → logprob: -5.008213996887207
    3. ')' → logprob: -6.758213996887207
    4. '_' → logprob: -9.633213996887207
    5. 's' → logprob: -9.633213996887207
    6. '.' → logprob: -9.758213996887207
    7. ' ):' → logprob: -9.883213996887207
    8. '):
' → logprob: -10.633213996887207
    9. '.):' → logprob: -11.383213996887207
    10. ':' → logprob: -11.508213996887207

Token 14: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.011080598458647728
    2. 'c' → logprob: -4.511080741882324
    3. ' ' → logprob: -11.761080741882324
    4. ' ' → logprob: -11.761080741882324
    5. '_c' → logprob: -12.011080741882324
    6. ')' → logprob: -12.511080741882324
    7. ',' → logprob: -13.386080741882324
    8. ' )' → logprob: -13.511080741882324
    9. '_' → logprob: -13.636080741882324
    10. ')c' → logprob: -14.011080741882324

Token 15: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.554343366995454e-05
    2. '):' → logprob: -9.500085830688477
    3. '1' → logprob: -12.125085830688477
    4. 'c' → logprob: -13.250085830688477
    5. 'r' → logprob: -13.625085830688477
    6. '₂' → logprob: -14.250085830688477
    7. '_' → logprob: -14.750085830688477
    8. 's' → logprob: -15.750085830688477
    9. 'o' → logprob: -15.750085830688477
    10. ',' → logprob: -15.875085830688477

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019852598197758198
    2. ')' → logprob: -6.2519850730896
    3. ',' → logprob: -10.501985549926758
    4. ':' → logprob: -11.001985549926758
    5. '):
' → logprob: -11.876985549926758
    6. ' ):' → logprob: -13.001985549926758
    7. ''):' → logprob: -14.376985549926758
    8. ')：' → logprob: -14.376985549926758
    9. ')):' → logprob: -15.126985549926758
    10. '),' → logprob: -15.251985549926758

Token 17: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16112211346626282
    2. '(' → logprob: -2.2861220836639404
    3. '():' → logprob: -3.6611220836639404
    4. '   ' → logprob: -4.6611223220825195
    5. ':
' → logprob: -5.6611223220825195
    6. '):' → logprob: -6.2861223220825195
    7. '```' → logprob: -6.2861223220825195
    8. '(:' → logprob: -6.4111223220825195
    9. '(
' → logprob: -7.9111223220825195
    10. '(':' → logprob: -8.03612232208252

Token 18: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3268226087093353
    2. '    ' → logprob: -2.201822519302368
    3. '"' → logprob: -2.951822519302368
    4. ''' → logprob: -3.451822519302368
    5. '(' → logprob: -4.326822757720947
    6. ' ' → logprob: -4.701822757720947
    7. 'distance' → logprob: -4.701822757720947
    8. '```' → logprob: -4.826822757720947
    9. ' 
' → logprob: -5.201822757720947
    10. ' (' → logprob: -5.576822757720947

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016439995961263776
    2. '_' → logprob: -7.626644134521484
    3. '2' → logprob: -7.751644134521484
    4. '_diff' → logprob: -8.126644134521484
    5. 'diff' → logprob: -8.501644134521484
    6. ',' → logprob: -9.001644134521484
    7. '0' → logprob: -10.001644134521484
    8. 'y' → logprob: -11.126644134521484
    9. ',y' → logprob: -11.626644134521484
    10. ')' → logprob: -12.126644134521484

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049536578357219696
    2. ' ,' → logprob: -3.0495364665985107
    3. ',x' → logprob: -8.29953670501709
    4. ',y' → logprob: -8.54953670501709
    5. ' -' → logprob: -8.92453670501709
    6. '1' → logprob: -9.04953670501709
    7. '-' → logprob: -9.79953670501709
    8. ' =' → logprob: -10.29953670501709
    9. '<|end|>' → logprob: -10.29953670501709
    10. ' ' → logprob: -10.42453670501709

Token 21: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.4781757593154907
    2. 'y' → logprob: -0.9781757593154907
    3. '<|end|>' → logprob: -5.603175640106201
    4. ' ' → logprob: -8.10317611694336
    5. '<|end|>' → logprob: -9.60317611694336
    6. ',' → logprob: -12.60317611694336
    7. ' ' → logprob: -12.72817611694336
    8. ' ​' → logprob: -12.97817611694336
    9. ',y' → logprob: -12.97817611694336
    10. ' =' → logprob: -12.97817611694336

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007950599305331707
    2. '_' → logprob: -4.882950782775879
    3. ',' → logprob: -8.132950782775879
    4. '=' → logprob: -10.757950782775879
    5. '```' → logprob: -11.757950782775879
    6. '\xe2\x82' → logprob: -11.882950782775879
    7. '<|end|>' → logprob: -12.257950782775879
    8. ' =' → logprob: -13.132950782775879
    9. '_,' → logprob: -13.257950782775879
    10. ' _' → logprob: -13.882950782775879

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15379637479782104
    2. ' =' → logprob: -2.528796434402466
    3. '=' → logprob: -2.778796434402466
    4. ' ,' → logprob: -8.028796195983887
    5. ')' → logprob: -8.153796195983887
    6. '<|end|>' → logprob: -10.028796195983887
    7. ')=' → logprob: -11.778796195983887
    8. ' ' → logprob: -12.403796195983887
    9. ' =)' → logprob: -12.778796195983887
    10. '<|end|>' → logprob: -13.403796195983887

Token 24: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10022769868373871
    2. ' r' → logprob: -2.3502275943756104
    3. 'x' → logprob: -11.475227355957031
    4. '	r' → logprob: -12.850227355957031
    5. ' ' → logprob: -13.100227355957031
    6. 'radius' → logprob: -13.350227355957031
    7. ' x' → logprob: -14.100227355957031
    8. ',r' → logprob: -14.225227355957031
    9. '_r' → logprob: -14.350227355957031
    10. '=r' → logprob: -14.350227355957031

Token 25: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09994662553071976
    2. '=' → logprob: -2.7249467372894287
    3. '1' → logprob: -3.8499467372894287
    4. '_' → logprob: -5.22494649887085
    5. ')' → logprob: -6.59994649887085
    6. ',' → logprob: -6.97494649887085
    7. ' ' → logprob: -7.72494649887085
    8. ')=' → logprob: -10.599946975708008
    9. '```' → logprob: -10.599946975708008
    10. '_c' → logprob: -11.224946975708008

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1800953447818756
    2. '=' → logprob: -1.8050953149795532
    3. ',' → logprob: -8.055095672607422
    4. ')' → logprob: -10.430095672607422
    5. ' ' → logprob: -13.805095672607422
    6. ')=' → logprob: -14.180095672607422
    7. ' =
' → logprob: -14.930095672607422
    8. ' =)' → logprob: -15.180095672607422
    9. '   ' → logprob: -15.305095672607422
    10. ']' → logprob: -16.180095672607422

Token 27: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.004623322281986475
    2. 'c' → logprob: -5.3796234130859375
    3. ' ' → logprob: -12.754623413085938
    4. '	c' → logprob: -15.754623413085938
    5. '  ' → logprob: -17.879623413085938
    6. ' ' → logprob: -18.129623413085938
    7. '_c' → logprob: -18.254623413085938
    8. ')c' → logprob: -18.254623413085938
    9. '<|end|>' → logprob: -18.379623413085938
    10. '(c' → logprob: -19.004623413085938

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. '_' → logprob: -13.125004768371582
    3. '[' → logprob: -13.500004768371582
    4. '2' → logprob: -14.250004768371582
    5. '```' → logprob: -15.500004768371582
    6. ' ' → logprob: -16.375003814697266
    7. 'c' → logprob: -17.375003814697266
    8. '   ' → logprob: -17.625003814697266
    9. '１' → logprob: -17.812503814697266
    10. '[]' → logprob: -17.875003814697266

Token 29: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05888613685965538
    2. '   ' → logprob: -4.4338860511779785
    3. ',
' → logprob: -4.5588860511779785
    4. '<|end|>' → logprob: -4.5588860511779785
    5. '    
' → logprob: -4.6838860511779785
    6. '
' → logprob: -4.9338860511779785
    7. ')' → logprob: -6.6838860511779785
    8. '[' → logprob: -6.8088860511779785
    9. '  
' → logprob: -6.9338860511779785
    10. '   
' → logprob: -7.0588860511779785

Token 30: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7854333519935608
    2. '   ' → logprob: -1.535433292388916
    3. '    
' → logprob: -1.785433292388916
    4. '\n' → logprob: -3.285433292388916
    5. ',' → logprob: -3.410433292388916
    6. '  
' → logprob: -3.785433292388916
    7. 'x' → logprob: -3.910433292388916
    8. '   
' → logprob: -4.410433292388916
    9. ',
' → logprob: -4.910433292388916
    10. ' 
' → logprob: -5.160433292388916

Token 31: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.576476514339447
    2. ' x' → logprob: -0.826476514339447
    3. ' ' → logprob: -8.576476097106934
    4. ' 
' → logprob: -9.326476097106934
    5. ',' → logprob: -9.451476097106934
    6. '   ' → logprob: -10.076476097106934
    7. '`' → logprob: -11.076476097106934
    8. '    ' → logprob: -11.076476097106934
    9. '    
' → logprob: -11.076476097106934
    10. ' ,' → logprob: -11.201476097106934

Token 32: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007449488039128482
    2. ',' → logprob: -7.250744819641113
    3. '1' → logprob: -11.125744819641113
    4. ' ,' → logprob: -12.250744819641113
    5. '=' → logprob: -12.625744819641113
    6. '```' → logprob: -12.750744819641113
    7. '0' → logprob: -13.000744819641113
    8. ' ' → logprob: -13.250744819641113
    9. '_,' → logprob: -13.500744819641113
    10. ',y' → logprob: -13.625744819641113

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031865055207163095
    2. ' ,' → logprob: -5.7531867027282715
    3. ',y' → logprob: -11.878186225891113
    4. '‌,' → logprob: -14.128186225891113
    5. ' ' → logprob: -14.753186225891113
    6. '`,' → logprob: -16.00318717956543
    7. '<|end|>' → logprob: -16.12818717956543
    8. '_,' → logprob: -16.37818717956543
    9. '1' → logprob: -16.62818717956543
    10. '```' → logprob: -17.37818717956543

Token 34: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.03548859804868698
    2. ' ' → logprob: -3.6604886054992676
    3. 'y' → logprob: -5.160488605499268
    4. '<|end|>' → logprob: -5.785488605499268
    5. ' ' → logprob: -8.66048812866211
    6. ' ,' → logprob: -10.03548812866211
    7. '  ' → logprob: -10.16048812866211
    8. '<|end|>' → logprob: -10.66048812866211
    9. ',' → logprob: -11.28548812866211
    10. 'space' → logprob: -11.91048812866211

Token 35: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43233177065849304
    2. '2' → logprob: -1.6823318004608154
    3. ',' → logprob: -1.8073318004608154
    4. ' ,' → logprob: -7.432331562042236
    5. ' ' → logprob: -8.182332038879395
    6. '```' → logprob: -9.682332038879395
    7. ')' → logprob: -11.307332038879395
    8. '  ' → logprob: -11.682332038879395
    9. ',y' → logprob: -13.057332038879395
    10. '    ' → logprob: -13.182332038879395

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015310514718294144
    2. ' ,' → logprob: -6.50153112411499
    3. '=' → logprob: -11.376530647277832
    4. ' =' → logprob: -11.876530647277832
    5. ' ' → logprob: -13.126530647277832
    6. '   ' → logprob: -13.126530647277832
    7. ',r' → logprob: -13.626530647277832
    8. 'r' → logprob: -14.126530647277832
    9. '    ' → logprob: -14.376530647277832
    10. ')' → logprob: -14.376530647277832

Token 37: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.12729574739933014
    2. '<|end|>' → logprob: -3.127295732498169
    3. 'r' → logprob: -3.252295732498169
    4. ' ' → logprob: -3.377295732498169
    5. ' x' → logprob: -6.252295970916748
    6. ' y' → logprob: -7.377295970916748
    7. ' ' → logprob: -9.37729549407959
    8. 'x' → logprob: -10.00229549407959
    9. ' c' → logprob: -10.75229549407959
    10. '<|end|>' → logprob: -10.87729549407959

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '1' → logprob: -17.5
    4. '```' → logprob: -17.5
    5. ',' → logprob: -19.125
    6. '۲' → logprob: -19.25
    7. '₂' → logprob: -19.25
    8. '２' → logprob: -19.5
    9. '   ' → logprob: -20.375
    10. '_' → logprob: -20.875

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06997678428888321
    2. '=' → logprob: -2.694976806640625
    3. ' ' → logprob: -10.444976806640625
    4. ',' → logprob: -12.569976806640625
    5. ')' → logprob: -13.069976806640625
    6. '   ' → logprob: -13.444976806640625
    7. ' =
' → logprob: -13.819976806640625
    8. '    ' → logprob: -14.444976806640625
    9. ' =)' → logprob: -14.569976806640625
    10. '  ' → logprob: -14.944976806640625

Token 40: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.07892999798059464
    2. 'c' → logprob: -2.578929901123047
    3. ' ' → logprob: -10.328929901123047
    4. ' ' → logprob: -12.953929901123047
    5. '	c' → logprob: -12.953929901123047
    6. '_c' → logprob: -14.453929901123047
    7. ')c' → logprob: -14.703929901123047
    8. ' (' → logprob: -15.203929901123047
    9. '  ' → logprob: -15.203929901123047
    10. '(c' → logprob: -15.328929901123047

Token 41: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.625
    3. ' ' → logprob: -17.875
    4. '```' → logprob: -18.75
    5. '۲' → logprob: -19.125
    6. '₂' → logprob: -19.625
    7. ')' → logprob: -19.625
    8. '２' → logprob: -19.75
    9. '২' → logprob: -21.1875
    10. '  ' → logprob: -21.375

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8962084054946899
    2. '
' → logprob: -1.14620840549469
    3. '    
' → logprob: -2.1462082862854004
    4. 'distance' → logprob: -2.3962082862854004
    5. '  
' → logprob: -4.6462082862854
    6. 'd' → logprob: -4.6462082862854
    7. 'n' → logprob: -4.6462082862854
    8. '\n' → logprob: -5.1462082862854
    9. ' distances' → logprob: -5.1462082862854
    10. ' 
' → logprob: -5.2712082862854

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7920003533363342
    2. '
' → logprob: -1.7920002937316895
    3. '    
' → logprob: -1.9170002937316895
    4. 'd' → logprob: -2.1670002937316895
    5. 'distance' → logprob: -2.9170002937316895
    6. 'dist' → logprob: -3.6670002937316895
    7. '  
' → logprob: -4.6670002937316895
    8. '```' → logprob: -5.2920002937316895
    9. ' 
' → logprob: -5.4170002937316895
    10. '\' → logprob: -5.4170002937316895

Token 44: ' dist' (ID: 3601)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4831484854221344
    2. ' d' → logprob: -1.608148455619812
    3. 'dist' (adapté à ' dist') → logprob: -2.4831485748291016
    4. ' dx' → logprob: -3.6081485748291016
    5. 'distance' → logprob: -3.7331485748291016
    6. ' dist' → logprob: -3.8581485748291016
    7. '   ' → logprob: -4.358148574829102
    8. 'dx' → logprob: -4.733148574829102
    9. ' distance' → logprob: -6.108148574829102
    10. '    
' → logprob: -6.983148574829102

Token 45: '_sq' (ID: 125541)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5174061059951782
    2. '_' → logprob: -1.0174061059951782
    3. '=' → logprob: -3.3924059867858887
    4. 'ance' → logprob: -5.517405986785889
    5. ' _' → logprob: -6.267405986785889
    6. '_squared' → logprob: -7.392405986785889
    7. '<|end|>' → logprob: -7.767405986785889
    8. ' ' → logprob: -8.267406463623047
    9. '_=' → logprob: -8.517406463623047
    10. '_sq' → logprob: -8.517406463623047

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006743319798260927
    2. '=' → logprob: -5.006743431091309
    3. ' =)' → logprob: -11.381743431091309
    4. ' ' → logprob: -12.631743431091309
    5. ' ==' → logprob: -12.881743431091309
    6. ' =
' → logprob: -13.131743431091309
    7. '<|end|>' → logprob: -13.131743431091309
    8. ')' → logprob: -13.256743431091309
    9. ' |=' → logprob: -14.131743431091309
    10. ' =(' → logprob: -14.506743431091309

Token 47: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.016194021329283714
    2. '(x' → logprob: -4.141193866729736
    3. '(' → logprob: -9.266194343566895
    4. '(math' → logprob: -10.391194343566895
    5. ' ' → logprob: -10.641194343566895
    6. ' ((' → logprob: -12.891194343566895
    7. '   ' → logprob: -13.016194343566895
    8. '(dx' → logprob: -13.016194343566895
    9. '(s' → logprob: -14.141194343566895
    10. '((' → logprob: -14.641194343566895

Token 48: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006716436706483364
    2. '(x' → logprob: -5.006716251373291
    3. ' x' → logprob: -14.13171672821045
    4. ' (' → logprob: -15.25671672821045
    5. '(' → logprob: -16.381715774536133
    6. '   ' → logprob: -16.881715774536133
    7. '	x' → logprob: -18.756715774536133
    8. ')x' → logprob: -19.006715774536133
    9. ')' → logprob: -19.631715774536133
    10. '_x' → logprob: -20.256715774536133

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061991553753614426
    2. '2' → logprob: -2.8119914531707764
    3. ' -' → logprob: -10.686991691589355
    4. '```' → logprob: -14.811991691589355
    5. '-' → logprob: -14.936991691589355
    6. ' ' → logprob: -16.18699073791504
    7. '_' → logprob: -16.43699073791504
    8. '

' → logprob: -17.18699073791504
    9. ')' → logprob: -18.81199073791504
    10. '[' → logprob: -18.81199073791504

Token 50: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10020710527896881
    2. '-' → logprob: -2.3502070903778076
    3. ' ' → logprob: -15.475207328796387
    4. '-x' → logprob: -15.725207328796387
    5. ' ' → logprob: -16.72520637512207
    6. ' -
' → logprob: -17.72520637512207
    7. '	' → logprob: -18.85020637512207
    8. '_' → logprob: -19.22520637512207
    9. '  ' → logprob: -19.35020637512207
    10. '   ' → logprob: -19.60020637512207

Token 51: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07889022678136826
    2. ' x' → logprob: -2.578890323638916
    3. '<|end|>' → logprob: -14.828889846801758
    4. '	x' → logprob: -16.203889846801758
    5. ')x' → logprob: -16.453889846801758
    6. ' ' → logprob: -17.453889846801758
    7. '(x' → logprob: -18.828889846801758
    8. '"x' → logprob: -19.078889846801758
    9. ''x' → logprob: -19.828889846801758
    10. ',x' → logprob: -19.953889846801758

Token 52: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.375005722045898
    3. '<|end|>' → logprob: -14.625005722045898
    4. ')' → logprob: -14.875005722045898
    5. '₂' → logprob: -15.625005722045898
    6. '```' → logprob: -16.0000057220459
    7. '_' → logprob: -16.3750057220459
    8. '1' → logprob: -16.5000057220459
    9. '   ' → logprob: -17.7500057220459
    10. '**' → logprob: -17.8750057220459

Token 53: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.47408369183540344
    2. ')' → logprob: -0.974083662033081
    3. ' )' → logprob: -11.97408390045166
    4. '**' → logprob: -15.47408390045166
    5. '   ' → logprob: -16.224082946777344
    6. '）' → logprob: -17.474082946777344
    7. '```' → logprob: -17.724082946777344
    8. ')`' → logprob: -17.849082946777344
    9. ')*' → logprob: -18.099082946777344
    10. ' ' → logprob: -18.099082946777344

Token 54: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '۲' → logprob: -16.00002098083496
    4. '```' → logprob: -17.25002098083496
    5. '²' → logprob: -17.75002098083496
    6. '٢' → logprob: -18.00002098083496
    7. '<|end|>' → logprob: -18.37502098083496
    8. '２' → logprob: -18.62502098083496
    9. '२' → logprob: -18.75002098083496
    10. '  ' → logprob: -18.87502098083496

Token 55: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519505023956299
    2. '+' → logprob: -1.5019505023956299
    3. ' ' → logprob: -11.37695026397705
    4. '<|end|>' → logprob: -11.87695026397705
    5. ' +
' → logprob: -13.12695026397705
    6. ')' → logprob: -15.87695026397705
    7. '+)' → logprob: -16.126951217651367
    8. ' ' → logprob: -16.126951217651367
    9. ' +(' → logprob: -16.126951217651367
    10. '  ' → logprob: -16.251951217651367

Token 56: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.24470043182373047
    2. '(y' → logprob: -2.1197004318237305
    3. '<|end|>' → logprob: -2.8697004318237305
    4. '(x' → logprob: -3.2447004318237305
    5. '(' → logprob: -7.1197004318237305
    6. '(s' → logprob: -8.11970043182373
    7. ' ' → logprob: -9.49470043182373
    8. '<|end|>' → logprob: -10.61970043182373
    9. '  ' → logprob: -10.99470043182373
    10. ' `(' → logprob: -11.49470043182373

Token 57: 'y' (ID: 88)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.47443193197250366
    2. 'y' → logprob: -0.9744319319725037
    3. ' y' → logprob: -8.099431991577148
    4. ' (' → logprob: -10.849431991577148
    5. '<|end|>' → logprob: -10.974431991577148
    6. '(' → logprob: -12.224431991577148
    7. '	y' → logprob: -12.849431991577148
    8. ')y' → logprob: -12.849431991577148
    9. '[y' → logprob: -13.349431991577148
    10. ' ' → logprob: -13.974431991577148

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016218038217630237
    2. '<|end|>' → logprob: -8.750162124633789
    3. '<|end|>' → logprob: -13.250162124633789
    4. ')' → logprob: -14.250162124633789
    5. ' -' → logprob: -14.625162124633789
    6. ' ' → logprob: -15.625162124633789
    7. '-' → logprob: -15.750162124633789
    8. '```' → logprob: -15.875162124633789
    9. 'user' → logprob: -16.12516212463379
    10. '**' → logprob: -16.75016212463379

Token 59: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.001377137377858162
    2. '-' → logprob: -6.626377105712891
    3. '<|end|>' → logprob: -10.12637710571289
    4. ')' → logprob: -11.75137710571289
    5. ' ' → logprob: -13.12637710571289
    6. '<|end|>' → logprob: -14.37637710571289
    7. ' ' → logprob: -15.37637710571289
    8. ' –' → logprob: -16.12637710571289
    9. ' -
' → logprob: -16.50137710571289
    10. ' )' → logprob: -16.50137710571289

Token 60: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.029755808413028717
    2. ' y' → logprob: -3.5297558307647705
    3. '<|end|>' → logprob: -12.279755592346191
    4. ')y' → logprob: -14.904755592346191
    5. '	y' → logprob: -15.904755592346191
    6. ')' → logprob: -16.029756546020508
    7. ' ' → logprob: -16.779756546020508
    8. ''y' → logprob: -16.904756546020508
    9. 'x' → logprob: -17.779756546020508
    10. '(y' → logprob: -18.279756546020508

Token 61: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20148827135562897
    2. '2' → logprob: -1.7014882564544678
    3. '**' → logprob: -10.451488494873047
    4. ' ' → logprob: -10.826488494873047
    5. '```' → logprob: -11.701488494873047
    6. ')**' → logprob: -11.951488494873047
    7. ')' → logprob: -12.076488494873047
    8. '-' → logprob: -12.451488494873047
    9. '12' → logprob: -15.076488494873047
    10. '   ' → logprob: -15.201488494873047

Token 62: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.012534845620393753
    2. ')' → logprob: -4.3875346183776855
    3. '**' → logprob: -11.262535095214844
    4. ' )' → logprob: -11.887535095214844
    5. ' ' → logprob: -13.012535095214844
    6. '   ' → logprob: -13.512535095214844
    7. '**)' → logprob: -14.637535095214844
    8. '```' → logprob: -14.637535095214844
    9. '  ' → logprob: -15.012535095214844
    10. '）' → logprob: -16.012535095214844

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.62501049041748
    3. '**' → logprob: -14.25001049041748
    4. '```' → logprob: -14.50001049041748
    5. '1' → logprob: -15.37501049041748
    6. '²' → logprob: -16.875011444091797
    7. '   ' → logprob: -17.500011444091797
    8. '۲' → logprob: -17.562511444091797
    9. ')' → logprob: -18.187511444091797
    10. '0' → logprob: -18.250011444091797

Token 64: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15341401100158691
    2. '    
' → logprob: -2.778414011001587
    3. '
' → logprob: -3.028414011001587
    4. 'dist' → logprob: -4.153413772583008
    5. '    ' → logprob: -5.403413772583008
    6. '     
' → logprob: -5.903413772583008
    7. ' 
' → logprob: -6.278413772583008
    8. 'd' → logprob: -6.778413772583008
    9. '  
' → logprob: -7.028413772583008
    10. '   
' → logprob: -7.153413772583008

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09642880409955978
    2. '
' → logprob: -2.846428871154785
    3. '    
' → logprob: -3.971428871154785
    4. 'dist' → logprob: -5.471428871154785
    5. '    ' → logprob: -5.971428871154785
    6. '     
' → logprob: -6.346428871154785
    7. '```' → logprob: -6.346428871154785
    8. 'd' → logprob: -6.471428871154785
    9. ' 
' → logprob: -7.221428871154785
    10. '  
' → logprob: -8.096428871154785

Token 66: ' r' (ID: 428)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3451801538467407
    2. 'd' → logprob: -1.5951801538467407
    3. 'r' (adapté à ' r') → logprob: -2.595180034637451
    4. 'dr' → logprob: -5.095180034637451
    5. '   ' → logprob: -6.470180034637451
    6. 'distance' → logprob: -6.470180034637451
    7. 'radius' → logprob: -6.595180034637451
    8. 'sum' → logprob: -6.720180034637451
    9. ' dist' → logprob: -7.095180034637451
    10. ' d' → logprob: -7.845180034637451

Token 67: '_sum' (ID: 29859)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010288255289196968
    2. '_sum' → logprob: -4.760288238525391
    3. 'sum' → logprob: -6.885288238525391
    4. '_' → logprob: -8.38528823852539
    5. 'ad' → logprob: -8.51028823852539
    6. 'Sum' → logprob: -9.76028823852539
    7. 'adius' → logprob: -10.26028823852539
    8. '12' → logprob: -10.26028823852539
    9. '_diff' → logprob: -11.13528823852539
    10. 'adii' → logprob: -11.13528823852539

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048589982092380524
    2. '=' → logprob: -3.0485899448394775
    3. '_' → logprob: -14.298589706420898
    4. ',' → logprob: -14.923589706420898
    5. ' =)' → logprob: -14.923589706420898
    6. ' ' → logprob: -15.423589706420898
    7. '<|end|>' → logprob: -15.548589706420898
    8. ' ==' → logprob: -16.1735897064209
    9. '  ' → logprob: -16.4235897064209
    10. '   ' → logprob: -16.5485897064209

Token 69: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.061967797577381134
    2. ' r' → logprob: -2.8119678497314453
    3. '(r' → logprob: -15.811967849731445
    4. '	r' → logprob: -17.061967849731445
    5. '   ' → logprob: -18.186967849731445
    6. ' (' → logprob: -19.936967849731445
    7. '$r' → logprob: -20.561967849731445
    8. '+r' → logprob: -20.686967849731445
    9. '=r' → logprob: -20.936967849731445
    10. '_r' → logprob: -21.061967849731445

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -13.875000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '+' → logprob: -16.625001907348633
    5. '_sum' → logprob: -17.750001907348633
    6. '```' → logprob: -17.750001907348633
    7. '１' → logprob: -17.875001907348633
    8. '2' → logprob: -18.500001907348633
    9. '[' → logprob: -19.187501907348633
    10. ' +' → logprob: -19.312501907348633

Token 71: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14357581734657288
    2. '+' → logprob: -2.01857590675354
    3. '+r' → logprob: -7.018575668334961
    4. '<|end|>' → logprob: -12.768575668334961
    5. ' plus' → logprob: -14.268575668334961
    6. ' ' → logprob: -14.268575668334961
    7. ' ' → logprob: -15.143575668334961
    8. ' +
' → logprob: -15.518575668334961
    9. '+k' → logprob: -16.64357566833496
    10. '+m' → logprob: -16.76857566833496

Token 72: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.048587825149297714
    2. ' r' → logprob: -3.0485877990722656
    3. '   ' → logprob: -15.298587799072266
    4. '	r' → logprob: -15.798587799072266
    5. '<|end|>' → logprob: -17.423587799072266
    6. ' ' → logprob: -17.798587799072266
    7. '(r' → logprob: -18.173587799072266
    8. '_r' → logprob: -18.923587799072266
    9. '  ' → logprob: -19.798587799072266
    10. '```' → logprob: -19.923587799072266

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '₂' → logprob: -17.875
    3. '２' → logprob: -18.25
    4. ' ' → logprob: -18.375
    5. '۲' → logprob: -18.875
    6. '_' → logprob: -19.625
    7. '```' → logprob: -21.125
    8. '২' → logprob: -21.375
    9. '२' → logprob: -21.75
    10. '٢' → logprob: -22.25

Token 74: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17004695534706116
    2. '
' → logprob: -2.1700470447540283
    3. '    
' → logprob: -3.4200470447540283
    4. '  
' → logprob: -6.045046806335449
    5. ')' → logprob: -6.670046806335449
    6. ' if' → logprob: -7.420046806335449
    7. ',' → logprob: -7.420046806335449
    8. 'dist' → logprob: -7.420046806335449
    9. '   
' → logprob: -7.670046806335449
    10. '**' → logprob: -7.670046806335449

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5397123098373413
    2. '
' → logprob: -0.9147123098373413
    3. '    
' → logprob: -4.164712429046631
    4. '  
' → logprob: -8.539711952209473
    5. ' if' → logprob: -8.789711952209473
    6. ' 
' → logprob: -9.164711952209473
    7. '
' → logprob: -9.539711952209473
    8. 'if' → logprob: -9.664711952209473
    9. 'return' → logprob: -9.789711952209473
    10. ' return' → logprob: -9.914711952209473

Token 76: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15495066344738007
    2. '
' → logprob: -2.4049506187438965
    3. '    
' → logprob: -4.2799506187438965
    4. 'if' → logprob: -4.2799506187438965
    5. 'r' → logprob: -4.5299506187438965
    6. ' if' → logprob: -4.6549506187438965
    7. '\n' → logprob: -7.0299506187438965
    8. 'return' (adapté à ' return') → logprob: -7.6549506187438965
    9. '```' → logprob: -7.6549506187438965
    10. ' 
' → logprob: -7.7799506187438965

Token 77: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.020808706060051918
    2. 'dist' → logprob: -3.895808696746826
    3. '(dist' → logprob: -8.270809173583984
    4. ' (' → logprob: -12.145809173583984
    5. ' math' → logprob: -13.270809173583984
    6. ' ' → logprob: -13.895809173583984
    7. '	dist' → logprob: -13.895809173583984
    8. '(' → logprob: -14.145809173583984
    9. '   ' → logprob: -15.020809173583984
    10. ' ' → logprob: -15.395809173583984

Token 78: '_sq' (ID: 125541)
  Prédit: '_sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sq' → logprob: -0.0002406090497970581
    2. '_' → logprob: -8.375240325927734
    3. '<=' → logprob: -13.125240325927734
    4. 'sq' → logprob: -13.250240325927734
    5. '<_' → logprob: -13.625240325927734
    6. '_sum' → logprob: -14.500240325927734
    7. '_squared' → logprob: -14.875240325927734
    8. ''_' → logprob: -15.000240325927734
    9. ' _' → logprob: -15.125240325927734
    10. ')' → logprob: -15.125240325927734

Token 79: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.038279708474874496
    2. '<=' → logprob: -3.2882797718048096
    3. ' ' → logprob: -9.53827953338623
    4. '=' → logprob: -9.66327953338623
    5. ' =' → logprob: -10.41327953338623
    6. ' ==' → logprob: -10.53827953338623
    7. ')' → logprob: -11.53827953338623
    8. ' >=' → logprob: -11.66327953338623
    9. '==' → logprob: -12.28827953338623
    10. ',' → logprob: -12.53827953338623

Token 80: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006751851178705692
    2. ' r' → logprob: -5.006752014160156
    3. '(r' → logprob: -10.256752014160156
    4. '	r' → logprob: -14.006752014160156
    5. ' (' → logprob: -14.756752014160156
    6. '_r' → logprob: -17.006752014160156
    7. ' ' → logprob: -17.131752014160156
    8. '(' → logprob: -17.256752014160156
    9. 'rs' → logprob: -19.006752014160156
    10. '$r' → logprob: -20.256752014160156

Token 81: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.1186566047836095e-05
    2. '_sq' → logprob: -10.875031471252441
    3. 'um' → logprob: -11.875031471252441
    4. 'sum' → logprob: -13.625031471252441
    5. '_' → logprob: -13.750031471252441
    6. '_sup' → logprob: -14.125031471252441
    7. '_um' → logprob: -14.375031471252441
    8. '_s' → logprob: -14.875031471252441
    9. '2' → logprob: -15.500031471252441
    10. '**' → logprob: -15.750031471252441

Token 82: '*r' (ID: 92096)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -7.338466093642637e-05
    2. ' **' → logprob: -9.625073432922363
    3. '*' → logprob: -12.625073432922363
    4. '_squared' → logprob: -13.375073432922363
    5. '2' → logprob: -14.000073432922363
    6. '<|end|>' → logprob: -14.875073432922363
    7. '²' → logprob: -15.000073432922363
    8. ' ' → logprob: -15.000073432922363
    9. '**

' → logprob: -15.500073432922363
    10. '```' → logprob: -15.625073432922363

Token 83: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.015174096450209618
    2. '_' → logprob: -4.76517391204834
    3. 'sum' → logprob: -5.14017391204834
    4. 'um' → logprob: -7.51517391204834
    5. '2' → logprob: -10.39017391204834
    6. '<|end|>' → logprob: -10.76517391204834
    7. '1' → logprob: -11.01517391204834
    8. '```' → logprob: -11.51517391204834
    9. 'u' → logprob: -11.64017391204834
    10. '_s' → logprob: -12.39017391204834

Token 84: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1511981040239334
    2. '<|end|>' → logprob: -2.026198148727417
    3. '\n' → logprob: -5.401197910308838
    4. '

' → logprob: -6.151197910308838
    5. '#' → logprob: -7.651197910308838
    6. '\' → logprob: -7.776197910308838
    7. '<|end|>' → logprob: -8.276198387145996
    8. '```' → logprob: -8.651198387145996
    9. '.' → logprob: -9.651198387145996
    10. '
' → logprob: -9.776198387145996

Token 85: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6637486219406128
    2. '<|end|>' → logprob: -1.1637486219406128
    3. '\n' → logprob: -2.5387487411499023
    4. '#' → logprob: -2.9137487411499023
    5. '\' → logprob: -3.9137487411499023
    6. ')' → logprob: -5.413748741149902
    7. ' ' → logprob: -5.788748741149902
    8. '```' → logprob: -5.913748741149902
    9. '.' → logprob: -6.163748741149902
    10. '

' → logprob: -6.413748741149902

Token 86: ' point' (ID: 2438)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8397594094276428
    2. ' circles' → logprob: -1.214759349822998
    3. ' points' → logprob: -2.714759349822998
    4. ' lines' → logprob: -2.964759349822998
    5. ' space' → logprob: -3.464759349822998
    6. ' distance' → logprob: -3.589759349822998
    7. ' is' → logprob: -4.089759349822998
    8. ' line' → logprob: -4.214759349822998
    9. ' circle' → logprob: -4.214759349822998
    10. ' area' → logprob: -4.464759349822998

Token 87: '_inside' (ID: 191028)
  Prédit: '_inside'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inside' → logprob: -0.2078334391117096
    2. '_in' → logprob: -1.9578334093093872
    3. '_on' → logprob: -4.082833290100098
    4. '_circle' → logprob: -4.207833290100098
    5. '_distance' → logprob: -4.707833290100098
    6. '_to' → logprob: -6.332833290100098
    7. '_' → logprob: -6.332833290100098
    8. 's' → logprob: -7.957833290100098
    9. '_line' → logprob: -7.957833290100098
    10. '_is' → logprob: -8.207833290100098

Token 88: '_circle' (ID: 93883)
  Prédit: '_circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_circle' → logprob: -0.32541030645370483
    2. '(' → logprob: -1.8254103660583496
    3. '(c' → logprob: -2.4504103660583496
    4. '(circle' → logprob: -4.32541036605835
    5. '_c' → logprob: -4.57541036605835
    6. ' (' → logprob: -6.20041036605835
    7. '(p' → logprob: -6.70041036605835
    8. '(point' → logprob: -6.70041036605835
    9. '_rectangle' → logprob: -6.95041036605835
    10. '_point' → logprob: -7.32541036605835

Token 89: '(px' (ID: 195026)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38921788334846497
    2. '(c' → logprob: -1.1392178535461426
    3. '(point' → logprob: -6.889217853546143
    4. '(p' → logprob: -7.389217853546143
    5. ' (' → logprob: -7.514217853546143
    6. '(circle' → logprob: -9.2642183303833
    7. '(x' → logprob: -11.2642183303833
    8. '(Point' → logprob: -11.3892183303833
    9. '(a' → logprob: -11.7642183303833
    10. '(co' → logprob: -12.2642183303833

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018077615823131055
    2. ' ,' → logprob: -8.625181198120117
    3. ',p' → logprob: -14.125181198120117
    4. ',c' → logprob: -15.000181198120117
    5. ',y' → logprob: -16.375181198120117
    6. '‌,' → logprob: -17.125181198120117
    7. ' ' → logprob: -17.875181198120117
    8. '):' → logprob: -18.000181198120117
    9. ',x' → logprob: -18.250181198120117
    10. '

' → logprob: -18.375181198120117

Token 91: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.18023681640625
    2. ' py' → logprob: -1.80523681640625
    3. 'y' → logprob: -8.43023681640625
    4. '_py' → logprob: -9.18023681640625
    5. 'cy' → logprob: -10.05523681640625
    6. 'x' → logprob: -10.30523681640625
    7. '(py' → logprob: -10.80523681640625
    8. ' cy' → logprob: -10.93023681640625
    9. ' ' → logprob: -11.30523681640625
    10. 'qy' → logprob: -11.43023681640625

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7697225252486533e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ',c' → logprob: -14.750003814697266
    4. '‌,' → logprob: -17.625003814697266
    5. '):' → logprob: -17.875003814697266
    6. ',p' → logprob: -18.375003814697266
    7. ',

' → logprob: -19.375003814697266
    8. ',
' → logprob: -19.500003814697266
    9. ',r' → logprob: -19.625003814697266
    10. ',x' → logprob: -20.000003814697266

Token 93: ' circle' (ID: 22005)
  Prédit: ' cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cx' → logprob: -0.91382896900177
    2. ' x' → logprob: -1.28882896900177
    3. 'x' → logprob: -1.53882896900177
    4. 'cx' → logprob: -2.4138288497924805
    5. ' circle' → logprob: -5.0388288497924805
    6. 'circle' → logprob: -5.2888288497924805
    7. ' c' → logprob: -5.6638288497924805
    8. 'c' → logprob: -6.1638288497924805
    9. 'xc' → logprob: -6.7888288497924805
    10. ' xc' → logprob: -7.4138288497924805

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00033558503491804004
    2. ',' → logprob: -8.875335693359375
    3. '):
' → logprob: -9.125335693359375
    4. ')' → logprob: -10.375335693359375
    5. ' ):' → logprob: -10.500335693359375
    6. ':' → logprob: -11.125335693359375
    7. 's' → logprob: -12.750335693359375
    8. '):
' → logprob: -13.125335693359375
    9. '   ' → logprob: -13.500335693359375
    10. '[]):' → logprob: -13.625335693359375

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06562645733356476
    2. 'x' → logprob: -3.440626382827759
    3. ' x' → logprob: -3.815626382827759
    4. '<|end|>' → logprob: -6.065626621246338
    5. ':' → logprob: -6.565626621246338
    6. ' ' → logprob: -6.690626621246338
    7. '(x' → logprob: -6.690626621246338
    8. '    
' → logprob: -7.190626621246338
    9. ',' → logprob: -7.315626621246338
    10. '    ' → logprob: -7.815626621246338

Token 96: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.01500596385449171
    2. ' x' → logprob: -4.265006065368652
    3. '   ' → logprob: -7.265006065368652
    4. 'cx' → logprob: -9.265006065368652
    5. ' ' → logprob: -10.890006065368652
    6. 'xc' → logprob: -11.015006065368652
    7. '	x' → logprob: -12.015006065368652
    8. '  ' → logprob: -12.765006065368652
    9. ' cx' → logprob: -13.390006065368652
    10. '    
' → logprob: -14.515006065368652

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.704065213445574e-05
    2. ',y' → logprob: -10.750046730041504
    3. ' ,' → logprob: -10.750046730041504
    4. 'c' → logprob: -13.750046730041504
    5. '1' → logprob: -13.875046730041504
    6. '_,' → logprob: -14.125046730041504
    7. ',c' → logprob: -14.500046730041504
    8. '<|end|>' → logprob: -15.125046730041504
    9. '0' → logprob: -15.500046730041504
    10. '‌,' → logprob: -16.62504768371582

Token 98: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12693126499652863
    2. ' y' → logprob: -2.1269311904907227
    3. ' ' → logprob: -13.626931190490723
    4. '<|end|>' → logprob: -14.001931190490723
    5. '   ' → logprob: -14.251931190490723
    6. '  ' → logprob: -15.126931190490723
    7. '    ' → logprob: -16.25193214416504
    8. '	y' → logprob: -16.50193214416504
    9. '<|end|>' → logprob: -18.75193214416504
    10. ',y' → logprob: -18.87693214416504

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.034592388459714e-06
    2. ' ,' → logprob: -12.125005722045898
    3. ',r' → logprob: -14.875005722045898
    4. '<|end|>' → logprob: -16.5000057220459
    5. 'r' → logprob: -17.1250057220459
    6. '=' → logprob: -17.5000057220459
    7. '‌,' → logprob: -18.0000057220459
    8. '_,' → logprob: -18.2500057220459
    9. 'c' → logprob: -18.2500057220459
    10. ' r' → logprob: -19.2500057220459

Token 100: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.38687777519226074
    2. 'r' → logprob: -1.1368777751922607
    3. '	r' → logprob: -13.13687801361084
    4. ' ' → logprob: -13.38687801361084
    5. 'radius' → logprob: -13.88687801361084
    6. '<|end|>' → logprob: -13.88687801361084
    7. '   ' → logprob: -14.38687801361084
    8. '  ' → logprob: -14.88687801361084
    9. ' radius' → logprob: -15.01187801361084
    10. ',r' → logprob: -17.011877059936523

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868728280067444
    2. '=' → logprob: -1.1368727684020996
    3. ' ' → logprob: -14.136873245239258
    4. ',' → logprob: -14.886873245239258
    5. ')' → logprob: -15.136873245239258
    6. '   ' → logprob: -15.761873245239258
    7. '  ' → logprob: -16.261873245239258
    8. '1' → logprob: -16.511873245239258
    9. ')=' → logprob: -17.511873245239258
    10. '<|end|>' → logprob: -17.511873245239258

Token 102: ' circle' (ID: 22005)
  Prédit: ' circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' circle' → logprob: -0.16026952862739563
    2. 'circle' → logprob: -1.9102694988250732
    3. '(circle' → logprob: -10.660269737243652
    4. ' ' → logprob: -11.160269737243652
    5. 'cir' → logprob: -12.660269737243652
    6. 'c' → logprob: -13.285269737243652
    7. '.circle' → logprob: -14.410269737243652
    8. '_circle' → logprob: -14.535269737243652
    9. ' cercle' → logprob: -14.910269737243652
    10. '   ' → logprob: -15.160269737243652

Token 103: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0875910073518753
    2. '   ' → logprob: -2.5875909328460693
    3. '  
' → logprob: -5.712591171264648
    4. 'dist' → logprob: -5.712591171264648
    5. '    
' → logprob: -6.712591171264648
    6. '
' → logprob: -7.837591171264648
    7. '   
' → logprob: -9.087591171264648
    8. ' 
' → logprob: -9.587591171264648
    9. '	dist' → logprob: -9.962591171264648
    10. ')' → logprob: -10.462591171264648

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3142649829387665
    2. '
' → logprob: -1.3142650127410889
    3. '    
' → logprob: -7.43926477432251
    4. '  
' → logprob: -8.814265251159668
    5. ' return' → logprob: -9.189265251159668
    6. 'return' → logprob: -9.439265251159668
    7. 'dist' → logprob: -10.814265251159668
    8. '
' → logprob: -10.814265251159668
    9. '   
' → logprob: -11.814265251159668
    10. '	return' → logprob: -11.939265251159668

Token 105: ' dist' (ID: 3601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04303481802344322
    2. 'dist' (adapté à ' dist') → logprob: -3.793034791946411
    3. 'return' → logprob: -4.04303503036499
    4. ' return' → logprob: -6.91803503036499
    5. 'dx' → logprob: -7.04303503036499
    6. ' dist' → logprob: -9.668034553527832
    7. '
' → logprob: -10.293034553527832
    8. ' dx' → logprob: -10.793034553527832
    9. '  ' → logprob: -10.918034553527832
    10. 'distance' → logprob: -11.168034553527832

Token 106: '_sq' (ID: 125541)
  Prédit: '_sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sq' → logprob: -0.0007592422189190984
    2. ' =' → logprob: -7.750759124755859
    3. '_squared' → logprob: -8.75075912475586
    4. '   ' → logprob: -9.25075912475586
    5. '=' → logprob: -10.37575912475586
    6. '_' → logprob: -10.50075912475586
    7. '_x' → logprob: -11.75075912475586
    8. '_dx' → logprob: -13.50075912475586
    9. '_px' → logprob: -13.50075912475586
    10. '_s' → logprob: -14.12575912475586

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246990516781807
    2. '=' → logprob: -3.773247003555298
    3. '   ' → logprob: -14.023246765136719
    4. ' =(' → logprob: -14.398246765136719
    5. ' ' → logprob: -16.89824676513672
    6. ' =
' → logprob: -17.64824676513672
    7. ' =)' → logprob: -18.27324676513672
    8. '    ' → logprob: -18.64824676513672
    9. '=(' → logprob: -18.89824676513672
    10. ')' → logprob: -18.89824676513672

Token 108: ' (' (ID: 350)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.10028699785470963
    2. ' (' → logprob: -2.3502869606018066
    3. '(p' → logprob: -10.600287437438965
    4. '(py' → logprob: -10.850287437438965
    5. '(x' → logprob: -11.475287437438965
    6. '   ' → logprob: -11.600287437438965
    7. '(' → logprob: -11.975287437438965
    8. ' ' → logprob: -12.100287437438965
    9. '(pm' → logprob: -13.350287437438965
    10. '(P' → logprob: -14.225287437438965

Token 109: 'px' (ID: 3207)
  Prédit: 'px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.0017406281549483538
    2. '(px' → logprob: -6.501740455627441
    3. ' px' → logprob: -8.626740455627441
    4. 'x' → logprob: -9.751740455627441
    5. '_px' → logprob: -15.126740455627441
    6. ':px' → logprob: -15.501740455627441
    7. 'p' → logprob: -15.751740455627441
    8. '(x' → logprob: -16.376741409301758
    9. 'Px' → logprob: -16.376741409301758
    10. '(' → logprob: -18.001741409301758

Token 110: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0021859495900571346
    2. '-' → logprob: -6.127185821533203
    3. ' ' → logprob: -14.252185821533203
    4. '   ' → logprob: -16.627185821533203
    5. ' ' → logprob: -17.377185821533203
    6. '-x' → logprob: -17.377185821533203
    7. ' –' → logprob: -18.377185821533203
    8. '  ' → logprob: -19.502185821533203
    9. ' -
' → logprob: -20.002185821533203
    10. 'x' → logprob: -20.252185821533203

Token 111: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759527087211609
    2. ' x' → logprob: -0.8259527087211609
    3. '<|end|>' → logprob: -11.325952529907227
    4. ' ' → logprob: -14.325952529907227
    5. '	x' → logprob: -14.825952529907227
    6. ')x' → logprob: -15.700952529907227
    7. '"x' → logprob: -17.700952529907227
    8. '  ' → logprob: -17.950952529907227
    9. '(x' → logprob: -18.075952529907227
    10. ')' → logprob: -18.825952529907227

Token 112: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.02975141443312168
    2. ')' → logprob: -3.5297513008117676
    3. ' )' → logprob: -14.154751777648926
    4. ')*' → logprob: -15.779751777648926
    5. '   ' → logprob: -17.15475082397461
    6. '**' → logprob: -17.90475082397461
    7. ')*(' → logprob: -18.65475082397461
    8. ')`' → logprob: -18.77975082397461
    9. ')
' → logprob: -19.15475082397461
    10. ' ' → logprob: -19.15475082397461

Token 113: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.613945101387799e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -14.750085830688477
    4. '```' → logprob: -15.375085830688477
    5. '۲' → logprob: -15.750085830688477
    6. ')' → logprob: -16.625085830688477
    7. '<|end|>' → logprob: -16.750085830688477
    8. '²' → logprob: -17.125085830688477
    9. '  ' → logprob: -17.125085830688477
    10. '**' → logprob: -17.312585830688477

Token 114: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10021066665649414
    2. '+' → logprob: -2.350210666656494
    3. '+(' → logprob: -12.850210189819336
    4. ' +(' → logprob: -14.350210189819336
    5. ' ' → logprob: -14.850210189819336
    6. '   ' → logprob: -15.975210189819336
    7. '+y' → logprob: -16.725210189819336
    8. ' ' → logprob: -16.725210189819336
    9. '(' → logprob: -17.100210189819336
    10. ' plus' → logprob: -17.350210189819336

Token 115: ' (' (ID: 350)
  Prédit: '(py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(py' → logprob: -0.004372444003820419
    2. ' (' → logprob: -5.754372596740723
    3. '(' → logprob: -7.379372596740723
    4. '(px' → logprob: -7.504372596740723
    5. '(y' → logprob: -11.379372596740723
    6. '(Py' → logprob: -12.754372596740723
    7. '(p' → logprob: -13.379372596740723
    8. '<|end|>' → logprob: -13.504372596740723
    9. '(pb' → logprob: -14.254372596740723
    10. ' ' → logprob: -14.754372596740723

Token 116: 'py' (ID: 5823)
  Prédit: 'py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.31402787566185
    2. '(py' → logprob: -1.3140279054641724
    3. ' py' → logprob: -7.314027786254883
    4. '_py' → logprob: -9.564027786254883
    5. '.py' → logprob: -11.189027786254883
    6. '<|end|>' → logprob: -11.564027786254883
    7. 'ppy' → logprob: -13.064027786254883
    8. '(' → logprob: -13.314027786254883
    9. ')' → logprob: -14.689027786254883
    10. '(Py' → logprob: -14.814027786254883

Token 117: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005268618930131197
    2. '-' → logprob: -5.255268573760986
    3. '<|end|>' → logprob: -10.630269050598145
    4. ')' → logprob: -11.755269050598145
    5. ' ' → logprob: -13.005269050598145
    6. '-)' → logprob: -16.130268096923828
    7. ')**' → logprob: -16.255268096923828
    8. '<|end|>' → logprob: -16.255268096923828
    9. ' ' → logprob: -16.630268096923828
    10. '   ' → logprob: -16.630268096923828

Token 118: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759702920913696
    2. ' y' → logprob: -0.8259702920913696
    3. '<|end|>' → logprob: -10.575970649719238
    4. ' ' → logprob: -12.950970649719238
    5. '(y' → logprob: -13.200970649719238
    6. '	y' → logprob: -14.325970649719238
    7. ')y' → logprob: -15.700970649719238
    8. ')' → logprob: -16.075969696044922
    9. ' (' → logprob: -16.325969696044922
    10. '<|end|>' → logprob: -16.825969696044922

Token 119: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.030019832774996758
    2. ')' → logprob: -3.655019760131836
    3. '2' → logprob: -5.905019760131836
    4. '**' → logprob: -7.030019760131836
    5. ' ' → logprob: -9.530019760131836
    6. ' )' → logprob: -11.280019760131836
    7. '**)' → logprob: -11.905019760131836
    8. '```' → logprob: -12.280019760131836
    9. '   ' → logprob: -12.905019760131836
    10. '1' → logprob: -14.280019760131836

Token 120: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.375004768371582
    3. '1' → logprob: -14.625004768371582
    4. '```' → logprob: -16.6250057220459
    5. '   ' → logprob: -17.2500057220459
    6. '**' → logprob: -17.9375057220459
    7. '۲' → logprob: -17.9375057220459
    8. '

' → logprob: -18.0000057220459
    9. ')' → logprob: -18.7500057220459
    10. '  ' → logprob: -18.9375057220459

Token 121: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07825161516666412
    2. '
' → logprob: -3.703251600265503
    3. ' return' → logprob: -3.828251600265503
    4. ' <=' → logprob: -3.828251600265503
    5. 'return' → logprob: -5.578251838684082
    6. '    ' → logprob: -6.828251838684082
    7. '	return' → logprob: -7.328251838684082
    8. '<=' → logprob: -7.453251838684082
    9. ' ' → logprob: -8.203251838684082
    10. '0' → logprob: -8.953251838684082

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045015327632427216
    2. '
' → logprob: -3.295015335083008
    3. ' return' → logprob: -5.420015335083008
    4. 'return' → logprob: -6.045015335083008
    5. '    
' → logprob: -9.920015335083008
    6. '    ' → logprob: -10.295015335083008
    7. ' <=' → logprob: -11.045015335083008
    8. ' 
' → logprob: -11.295015335083008
    9. '	return' → logprob: -11.545015335083008
    10. '
' → logprob: -12.295015335083008

Token 123: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.36857110261917114
    2. ' return' → logprob: -1.4935710430145264
    3. '   ' → logprob: -2.4935710430145264
    4. '
' → logprob: -7.1185712814331055
    5. 'r' → logprob: -8.493571281433105
    6. ' r' → logprob: -10.493571281433105
    7. ' ' → logprob: -10.868571281433105
    8. '	return' → logprob: -11.368571281433105
    9. '  ' → logprob: -11.743571281433105
    10. '```' → logprob: -12.868571281433105

Token 124: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.023251304402947426
    2. 'dist' → logprob: -3.7732512950897217
    3. '(dist' → logprob: -12.1482515335083
    4. '	dist' → logprob: -14.5232515335083
    5. '_dist' → logprob: -17.273250579833984
    6. 'Dist' → logprob: -17.523250579833984
    7. ' ' → logprob: -17.898250579833984
    8. ' ' → logprob: -18.398250579833984
    9. '0' → logprob: -18.648250579833984
    10. '.dist' → logprob: -19.648250579833984

Token 125: '_sq' (ID: 125541)
  Prédit: '_sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sq' → logprob: -1.1472419600977446e-06
    2. 'sq' → logprob: -14.625000953674316
    3. '_' → logprob: -14.875000953674316
    4. '   ' → logprob: -16.000001907348633
    5. ' _' → logprob: -16.500001907348633
    6. '<_' → logprob: -17.250001907348633
    7. '_dist' → logprob: -18.250001907348633
    8. '._' → logprob: -18.375001907348633
    9. '```' → logprob: -18.500001907348633
    10. '_squared' → logprob: -18.750001907348633

Token 126: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.015425324440002441
    2. ' <' → logprob: -4.765425205230713
    3. '<=' → logprob: -5.015425205230713
    4. '<' → logprob: -9.265425682067871
    5. ' ' → logprob: -9.890425682067871
    6. ' ' → logprob: -13.140425682067871
    7. '<|end|>' → logprob: -13.265425682067871
    8. ' ≤' → logprob: -14.015425682067871
    9. ' <=",' → logprob: -14.390425682067871
    10. '0' → logprob: -14.515425682067871

Token 127: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.10020871460437775
    2. 'r' → logprob: -2.3502087593078613
    3. ' ' → logprob: -13.850208282470703
    4. '(r' → logprob: -14.225208282470703
    5. ' (' → logprob: -15.350208282470703
    6. ' ' → logprob: -15.975208282470703
    7. '	r' → logprob: -16.350208282470703
    8. '_r' → logprob: -17.225208282470703
    9. '(' → logprob: -17.475208282470703
    10. '<|end|>' → logprob: -18.100208282470703

Token 128: '*r' (ID: 92096)
  Prédit: '*r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*r' → logprob: -0.07978349924087524
    2. '*' → logprob: -2.8297834396362305
    3. '2' → logprob: -4.2047834396362305
    4. '**' → logprob: -5.9547834396362305
    5. ' *' → logprob: -9.07978343963623
    6. ' ' → logprob: -10.82978343963623
    7. 'r' → logprob: -12.45478343963623
    8. '²' → logprob: -14.20478343963623
    9. '*p' → logprob: -14.45478343963623
    10. ' **' → logprob: -15.20478343963623

Token 129: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4680194556713104
    2. '
' → logprob: -1.5930194854736328
    3. '<|end|>' → logprob: -1.8430194854736328
    4. '

' → logprob: -4.468019485473633
    5. '<|end|>' → logprob: -8.343019485473633
    6. '```' → logprob: -9.468019485473633
    7. ' def' → logprob: -9.593019485473633
    8. '  
' → logprob: -9.968019485473633
    9. '#' → logprob: -10.218019485473633
    10. ')' → logprob: -10.718019485473633

Token 130: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005060248542577028
    2. '
' → logprob: -5.505060195922852
    3. '<|end|>' → logprob: -7.130060195922852
    4. '

' → logprob: -10.255060195922852
    5. '```' → logprob: -10.630060195922852
    6. '#' → logprob: -10.630060195922852
    7. 'import' → logprob: -10.880060195922852
    8. '  
' → logprob: -11.005060195922852
    9. ' 
' → logprob: -11.130060195922852
    10. ' def' → logprob: -11.880060195922852

Token 131: ' build' (ID: 3024)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.45705413818359375
    2. ' is' → logprob: -2.5820541381835938
    3. ' find' → logprob: -2.7070541381835938
    4. ' line' → logprob: -2.8320541381835938
    5. 'main' → logprob: -3.9570541381835938
    6. ' lines' → logprob: -4.207054138183594
    7. ' segments' → logprob: -4.332054138183594
    8. ' circles' → logprob: -4.457054138183594
    9. ' rectangle' → logprob: -4.457054138183594
    10. ' rectangles' → logprob: -4.457054138183594

Token 132: '_graph' (ID: 33441)
  Prédit: '_circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_circle' → logprob: -0.2933657467365265
    2. '_graph' → logprob: -2.043365716934204
    3. '_c' → logprob: -3.293365716934204
    4. '_point' → logprob: -4.793365955352783
    5. '_polygon' → logprob: -4.793365955352783
    6. '_rectangle' → logprob: -5.168365955352783
    7. '_qu' → logprob: -5.168365955352783
    8. '_points' → logprob: -5.293365955352783
    9. '_' → logprob: -5.418365955352783
    10. '_grid' → logprob: -5.668365955352783

Token 133: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0023974133655428886
    2. '(' → logprob: -6.252397537231445
    3. ' (' → logprob: -7.877397537231445
    4. '(points' → logprob: -10.252397537231445
    5. '(nodes' → logprob: -10.752397537231445
    6. '(s' → logprob: -11.627397537231445
    7. '(circle' → logprob: -12.377397537231445
    8. '(lines' → logprob: -13.002397537231445
    9. '(co' → logprob: -13.627397537231445
    10. '(p' → logprob: -13.627397537231445

Token 134: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.057922035455703735
    2. '1' → logprob: -3.182922124862671
    3. 'cir' → logprob: -5.807921886444092
    4. ')' → logprob: -6.057921886444092
    5. 'ircle' → logprob: -6.432921886444092
    6. 's' → logprob: -6.432921886444092
    7. 'icles' → logprob: -7.057921886444092
    8. '```' → logprob: -7.182921886444092
    9. '_' → logprob: -7.557921886444092
    10. ' ir' → logprob: -7.682921886444092

Token 135: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.00046856500557623804
    2. 'les' → logprob: -7.875468730926514
    3. '```' → logprob: -10.625468254089355
    4. 'cl' → logprob: -10.875468254089355
    5. '``' → logprob: -11.625468254089355
    6. 'cle' → logprob: -11.875468254089355
    7. '#' → logprob: -12.375468254089355
    8. 'le' → logprob: -12.500468254089355
    9. 'cls' → logprob: -12.750468254089355
    10. '   ' → logprob: -13.000468254089355

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006242761737667024
    2. ',' → logprob: -7.750624179840088
    3. '):
' → logprob: -8.875624656677246
    4. ')' → logprob: -10.250624656677246
    5. ' ):' → logprob: -11.625624656677246
    6. ',c' → logprob: -12.625624656677246
    7. '):
' → logprob: -13.000624656677246
    8. ':' → logprob: -13.125624656677246
    9. ']:' → logprob: -14.750624656677246
    10. '[]):' → logprob: -15.000624656677246

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004427032079547644
    2. ' graph' → logprob: -5.879426956176758
    3. ':' → logprob: -6.879426956176758
    4. '(n' → logprob: -9.254426956176758
    5. '(graph' → logprob: -9.254426956176758
    6. ' n' → logprob: -9.379426956176758
    7. 'n' → logprob: -10.004426956176758
    8. 'graph' → logprob: -10.129426956176758
    9. '    
' → logprob: -10.254426956176758
    10. '(' → logprob: -10.254426956176758

Token 138: ' n' (ID: 297)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6483020782470703
    2. 'graph' → logprob: -1.1483020782470703
    3. ' n' → logprob: -2.6483020782470703
    4. '   ' → logprob: -2.7733020782470703
    5. 'n' (adapté à ' n') → logprob: -3.6483020782470703
    6. 'g' → logprob: -7.77330207824707
    7. ' g' → logprob: -9.27330207824707
    8. 'adj' → logprob: -10.64830207824707
    9. ' adjacency' → logprob: -11.14830207824707
    10. '	graph' → logprob: -11.27330207824707

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0008065330912359059
    2. '=' → logprob: -7.1258063316345215
    3. ' =
' → logprob: -13.50080680847168
    4. '=int' → logprob: -15.12580680847168
    5. ' ' → logprob: -15.62580680847168
    6. ' =)' → logprob: -16.25080680847168
    7. ' =
' → logprob: -16.50080680847168
    8. ',' → logprob: -16.75080680847168
    9. '=len' → logprob: -17.00080680847168
    10. '   ' → logprob: -17.50080680847168

Token 140: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0009115827269852161
    2. 'len' → logprob: -7.000911712646484
    3. '(len' → logprob: -17.250911712646484
    4. '=len' → logprob: -17.250911712646484
    5. '[len' → logprob: -18.375911712646484
    6. '	len' → logprob: -18.500911712646484
    7. ',len' → logprob: -21.750911712646484
    8. '<len' → logprob: -22.000911712646484
    9. ' ' → logprob: -22.500911712646484
    10. ' length' → logprob: -24.125911712646484

Token 141: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0007133854669518769
    2. '(' → logprob: -7.250713348388672
    3. '(circle' → logprob: -12.750713348388672
    4. 'cir' → logprob: -15.750713348388672
    5. '(
' → logprob: -16.500713348388672
    6. ' (' → logprob: -16.625713348388672
    7. ' circles' → logprob: -17.000713348388672
    8. '(cin' → logprob: -17.625713348388672
    9. '(co' → logprob: -17.875713348388672
    10. '(s' → logprob: -18.000713348388672

Token 142: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.11454034596681595
    2. 'cir' → logprob: -2.2395403385162354
    3. 'irc' → logprob: -6.9895405769348145
    4. ')' → logprob: -7.8645405769348145
    5. 'icles' → logprob: -9.489540100097656
    6. 'c' → logprob: -9.739540100097656
    7. 'cles' → logprob: -10.114540100097656
    8. '(c' → logprob: -10.239540100097656
    9. 'ircle' → logprob: -10.364540100097656
    10. 'ycles' → logprob: -10.989540100097656

Token 143: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -9.73446003627032e-05
    2. '   ' → logprob: -9.875097274780273
    3. 'les' → logprob: -10.625097274780273
    4. '```' → logprob: -11.750097274780273
    5. 'icles' → logprob: -13.000097274780273
    6. '``' → logprob: -13.625097274780273
    7. '       ' → logprob: -13.750097274780273
    8. 'cir' → logprob: -13.875097274780273
    9. 'cl' → logprob: -14.125097274780273
    10. ')
' → logprob: -14.125097274780273

Token 144: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011051355861127377
    2. ')
' → logprob: -4.511051177978516
    3. ')
' → logprob: -12.886051177978516
    4. ')

' → logprob: -14.761051177978516
    5. ' )' → logprob: -14.886051177978516
    6. '   ' → logprob: -15.636051177978516
    7. ')n' → logprob: -16.136051177978516
    8. 'def' → logprob: -17.386051177978516
    9. '))' → logprob: -17.386051177978516
    10. ' )
' → logprob: -18.136051177978516

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5977833271026611
    2. '
' → logprob: -1.0977833271026611
    3. ' graph' → logprob: -2.472783327102661
    4. 'graph' → logprob: -3.597783327102661
    5. '    
' → logprob: -5.472783088684082
    6. '	graph' → logprob: -8.097783088684082
    7. '_graph' → logprob: -9.972783088684082
    8. '```' → logprob: -10.847783088684082
    9. '   
' → logprob: -11.597783088684082
    10. ' adjacency' → logprob: -11.597783088684082

Token 146: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.38759467005729675
    2. ' graph' → logprob: -1.1375946998596191
    3. '   ' → logprob: -7.637594699859619
    4. 'adj' → logprob: -8.762594223022461
    5. ' adj' → logprob: -10.262594223022461
    6. 'g' → logprob: -10.387594223022461
    7. '	graph' → logprob: -11.387594223022461
    8. ' adjacency' → logprob: -12.637594223022461
    9. ' g' → logprob: -13.262594223022461
    10. 'Graph' → logprob: -14.137594223022461

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002478627720847726
    2. '=' → logprob: -6.00247859954834
    3. ' ' → logprob: -13.00247859954834
    4. ' =[' → logprob: -15.37747859954834
    5. '[' → logprob: -16.002479553222656
    6. ')' → logprob: -16.002479553222656
    7. ' =
' → logprob: -16.127479553222656
    8. ']' → logprob: -17.377479553222656
    9. '=[]' → logprob: -18.002479553222656
    10. ' =)' → logprob: -18.252479553222656

Token 148: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.3964994251728058
    2. '[' → logprob: -1.1464993953704834
    3. ' [' → logprob: -5.1464996337890625
    4. '{' → logprob: -6.1464996337890625
    5. ' {' → logprob: -7.2714996337890625
    6. '[]' → logprob: -7.5214996337890625
    7. '{}' → logprob: -8.146499633789062
    8. ' []' → logprob: -10.146499633789062
    9. '[[' → logprob: -10.396499633789062
    10. ' {}' → logprob: -11.646499633789062

Token 149: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2014748454093933
    2. 'for' → logprob: -1.701474905014038
    3. ']' → logprob: -10.451475143432617
    4. ')' → logprob: -11.076475143432617
    5. ' ' → logprob: -11.326475143432617
    6. ',' → logprob: -12.951475143432617
    7. 'n' → logprob: -13.951475143432617
    8. '	for' → logprob: -13.951475143432617
    9. '(n' → logprob: -14.951475143432617
    10. ',n' → logprob: -15.951475143432617

Token 150: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31367018818855286
    2. ' _' → logprob: -1.3136701583862305
    3. ' range' → logprob: -8.06367015838623
    4. 'range' → logprob: -9.93867015838623
    5. ' ' → logprob: -10.43867015838623
    6. ' i' → logprob: -12.31367015838623
    7. 'i' → logprob: -12.43867015838623
    8. '_range' → logprob: -12.56367015838623
    9. ' in' → logprob: -13.18867015838623
    10. '_i' → logprob: -14.18867015838623

Token 151: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.314820796251297
    2. 'in' → logprob: -1.8148207664489746
    3. ' range' → logprob: -2.4398207664489746
    4. ' in' → logprob: -4.064820766448975
    5. '(range' → logprob: -6.189820766448975
    6. 'ange' → logprob: -7.564820766448975
    7. 'n' → logprob: -8.439821243286133
    8. '(n' → logprob: -9.814821243286133
    9. ' xrange' → logprob: -11.814821243286133
    10. 'x' → logprob: -12.064821243286133

Token 152: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141363143920898
    2. ' range' → logprob: -1.701413631439209
    3. ' ' → logprob: -15.576414108276367
    4. '(range' → logprob: -15.826414108276367
    5. '	range' → logprob: -17.076414108276367
    6. '   ' → logprob: -17.576414108276367
    7. '  ' → logprob: -18.201414108276367
    8. '```' → logprob: -19.451414108276367
    9. ')' → logprob: -19.576414108276367
    10. ']' → logprob: -19.576414108276367

Token 153: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.796184723294573e-06
    2. '(' → logprob: -12.125005722045898
    3. ' (' → logprob: -15.125005722045898
    4. 'n' → logprob: -16.5000057220459
    5. ')n' → logprob: -17.2500057220459
    6. ')' → logprob: -19.8750057220459
    7. ' n' → logprob: -20.0000057220459
    8. '](' → logprob: -20.1250057220459
    9. ')(' → logprob: -20.2500057220459
    10. '(
' → logprob: -20.3750057220459

Token 154: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.935296834039036e-06
    2. ']' → logprob: -14.00000286102295
    3. ')]
' → logprob: -14.25000286102295
    4. ')' → logprob: -14.37500286102295
    5. ' )' → logprob: -14.75000286102295
    6. '   ' → logprob: -15.50000286102295
    7. ')]
' → logprob: -16.875003814697266
    8. ')].' → logprob: -17.250003814697266
    9. ')])' → logprob: -17.250003814697266
    10. ' ]' → logprob: -17.375003814697266

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004008115269243717
    2. '
' → logprob: -6.1290082931518555
    3. ' for' → logprob: -6.8790082931518555
    4. 'for' → logprob: -7.3790082931518555
    5. '    
' → logprob: -8.754008293151855
    6. '	for' → logprob: -12.129008293151855
    7. '' → logprob: -13.629008293151855
    8. ' 
' → logprob: -14.379008293151855
    9. '<|end|>' → logprob: -14.504008293151855
    10. '  
' → logprob: -14.629008293151855

Token 156: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.024745337665081024
    2. '   ' → logprob: -4.024745464324951
    3. ' for' → logprob: -5.024745464324951
    4. ' ' → logprob: -16.27474594116211
    5. '	for' → logprob: -16.52474594116211
    6. '```' → logprob: -16.64974594116211
    7. '    
' → logprob: -16.77474594116211
    8. '  ' → logprob: -16.89974594116211
    9. '
' → logprob: -18.02474594116211
    10. '    ' → logprob: -20.64974594116211

Token 157: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002476604888215661
    2. 'i' → logprob: -6.002476692199707
    3. ' ' → logprob: -14.377476692199707
    4. '	i' → logprob: -15.502476692199707
    5. ' ' → logprob: -16.25247573852539
    6. '_' → logprob: -18.50247573852539
    7. '   ' → logprob: -18.75247573852539
    8. '```' → logprob: -19.25247573852539
    9. ' u' → logprob: -19.37747573852539
    10. '_i' → logprob: -19.50247573852539

Token 158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001311544212512672
    2. 'in' → logprob: -6.751311779022217
    3. ' ' → logprob: -8.876311302185059
    4. ' i' → logprob: -13.751311302185059
    5. '  ' → logprob: -16.001312255859375
    6. ',' → logprob: -16.001312255859375
    7. '	in' → logprob: -16.501312255859375
    8. ' ' → logprob: -16.876312255859375
    9. 'import' → logprob: -16.876312255859375
    10. '1' → logprob: -17.126312255859375

Token 159: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008615042082965374
    2. 'range' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.258615493774414
    4. '(range' → logprob: -15.883615493774414
    5. ' xrange' → logprob: -16.758615493774414
    6. 'ange' → logprob: -17.758615493774414
    7. '	range' → logprob: -18.258615493774414
    8. 'n' → logprob: -19.883615493774414
    9. ' n' → logprob: -20.008615493774414
    10. '_range' → logprob: -20.133615493774414

Token 160: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011067155748605728
    2. '(' → logprob: -4.5110673904418945
    3. ' (' → logprob: -10.886067390441895
    4. ' ' → logprob: -15.136067390441895
    5. ' n' → logprob: -16.136066436767578
    6. '(
' → logprob: -16.636066436767578
    7. 'n' → logprob: -17.011066436767578
    8. '(len' → logprob: -17.136066436767578
    9. '   ' → logprob: -18.386066436767578
    10. '(

' → logprob: -18.511066436767578

Token 161: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012911491096019745
    2. '):
' → logprob: -4.387911319732666
    3. ' ):' → logprob: -8.012911796569824
    4. '-' → logprob: -9.887911796569824
    5. ' -' → logprob: -12.012911796569824
    6. ')' → logprob: -12.012911796569824
    7. '   ' → logprob: -12.262911796569824
    8. ' ):
' → logprob: -13.637911796569824
    9. '):
' → logprob: -14.137911796569824
    10. ':' → logprob: -14.762911796569824

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002340089064091444
    2. '   ' → logprob: -7.002340316772461
    3. ' for' → logprob: -7.002340316772461
    4. '    ' → logprob: -8.877340316772461
    5. ' ' → logprob: -9.002340316772461
    6. '<|end|>' → logprob: -9.127340316772461
    7. '	   ' → logprob: -9.877340316772461
    8. ',' → logprob: -10.252340316772461
    9. '     ' → logprob: -11.002340316772461
    10. ':' → logprob: -11.502340316772461

Token 163: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.041519895195961
    2. 'for' (adapté à ' for') → logprob: -3.2915198802948
    3. '   ' → logprob: -5.666520118713379
    4. ' ' → logprob: -11.541520118713379
    5. '	for' → logprob: -13.291520118713379
    6. '  ' → logprob: -14.541520118713379
    7. '    ' → logprob: -14.916520118713379
    8. '       ' → logprob: -15.916520118713379
    9. '    
' → logprob: -17.041519165039062
    10. '
' → logprob: -17.166519165039062

Token 164: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.001304522156715393
    2. 'j' → logprob: -7.251304626464844
    3. ' ' → logprob: -7.626304626464844
    4. ' range' → logprob: -9.251304626464844
    5. 'range' → logprob: -12.376304626464844
    6. ' i' → logprob: -12.626304626464844
    7. '    ' → logprob: -13.626304626464844
    8. ' ' → logprob: -14.251304626464844
    9. ' (' → logprob: -15.126304626464844
    10. '	j' → logprob: -15.251304626464844

Token 165: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022705162409693003
    2. 'in' → logprob: -6.377270698547363
    3. ' i' → logprob: -7.752270698547363
    4. ' ' → logprob: -9.252270698547363
    5. '	in' → logprob: -10.377270698547363
    6. ' range' → logprob: -12.127270698547363
    7. '    ' → logprob: -13.127270698547363
    8. ' (' → logprob: -14.127270698547363
    9. '   ' → logprob: -14.252270698547363
    10. 'range' → logprob: -15.002270698547363

Token 166: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16550491750240326
    2. 'range' → logprob: -1.9155049324035645
    3. ' i' → logprob: -5.4155049324035645
    4. 'i' → logprob: -7.2905049324035645
    5. '(i' → logprob: -9.665504455566406
    6. '(range' → logprob: -9.665504455566406
    7. ' ' → logprob: -12.165504455566406
    8. ' (' → logprob: -12.665504455566406
    9. '_range' → logprob: -14.665504455566406
    10. '	range' → logprob: -14.790504455566406

Token 167: '(i' (ID: 3649)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6103420257568359
    2. '(i' → logprob: -0.8603420257568359
    3. '(' → logprob: -4.110342025756836
    4. ' (' → logprob: -4.110342025756836
    5. ' range' → logprob: -7.360342025756836
    6. '(range' → logprob: -7.985342025756836
    7. 'range' → logprob: -10.860342025756836
    8. ' ' → logprob: -11.860342025756836
    9. ' i' → logprob: -12.610342025756836
    10. '(in' → logprob: -13.360342025756836

Token 168: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16023093461990356
    2. ' +' → logprob: -1.9102308750152588
    3. '1' → logprob: -12.16023063659668
    4. ' ' → logprob: -13.91023063659668
    5. ' +
' → logprob: -15.53523063659668
    6. '+
' → logprob: -15.78523063659668
    7. '   ' → logprob: -15.78523063659668
    8. '+i' → logprob: -16.53523063659668
    9. '+j' → logprob: -17.28523063659668
    10. ')' → logprob: -18.03523063659668

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. 'n' → logprob: -15.750096321105957
    4. '   ' → logprob: -16.250097274780273
    5. '```' → logprob: -17.125097274780273
    6. '2' → logprob: -17.375097274780273
    7. ' n' → logprob: -17.500097274780273
    8. '0' → logprob: -17.625097274780273
    9. ',' → logprob: -18.000097274780273
    10. ')' → logprob: -18.000097274780273

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3017362952232361
    2. ',n' → logprob: -1.9267363548278809
    3. '):' → logprob: -2.426736354827881
    4. ' ):' → logprob: -4.176736354827881
    5. ' ,' → logprob: -5.051736354827881
    6. 'n' → logprob: -5.676736354827881
    7. '):
' → logprob: -6.926736354827881
    8. '(n' → logprob: -8.926735877990723
    9. ' ):
' → logprob: -9.176735877990723
    10. ' n' → logprob: -9.926735877990723

Token 171: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38687199354171753
    2. ' n' → logprob: -1.1368720531463623
    3. ' ' → logprob: -14.761872291564941
    4. '	n' → logprob: -15.136872291564941
    5. '   ' → logprob: -15.636872291564941
    6. '
' → logprob: -16.886871337890625
    7. '    ' → logprob: -17.636871337890625
    8. ')n' → logprob: -17.636871337890625
    9. '_n' → logprob: -18.136871337890625
    10. ' 
' → logprob: -18.136871337890625

Token 172: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4740896224975586
    2. '):
' → logprob: -0.9740896224975586
    3. '):
' → logprob: -12.349089622497559
    4. ':' → logprob: -12.724089622497559
    5. ' ):' → logprob: -13.099089622497559
    6. '):

' → logprob: -13.224089622497559
    7. ' ):
' → logprob: -14.099089622497559
    8. '   ' → logprob: -14.599089622497559
    9. ')' → logprob: -16.599090576171875
    10. '():' → logprob: -16.849090576171875

Token 173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18371659517288208
    2. ':' → logprob: -1.8087165355682373
    3. '       ' → logprob: -6.183716773986816
    4. ':
' → logprob: -6.433716773986816
    5. ' :' → logprob: -9.308716773986816
    6. ' if' → logprob: -10.183716773986816
    7. '<|end|>' → logprob: -10.683716773986816
    8. ',' → logprob: -10.808716773986816
    9. ' :
' → logprob: -11.308716773986816
    10. '               ' → logprob: -11.308716773986816

Token 174: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.049146588891744614
    2. 'if' (adapté à ' if') → logprob: -3.6741466522216797
    3. '           ' → logprob: -3.9241466522216797
    4. ' 
' → logprob: -6.79914665222168
    5. '               ' → logprob: -6.92414665222168
    6. ' ' → logprob: -8.29914665222168
    7. '       ' → logprob: -8.79914665222168
    8. '
' → logprob: -9.17414665222168
    9. '            
' → logprob: -9.67414665222168
    10. '   ' → logprob: -10.17414665222168

Token 175: ' circles' (ID: 45131)
  Prédit: ' circles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' circles' → logprob: -0.038042180240154266
    2. 'cir' → logprob: -3.2880420684814453
    3. ' círc' → logprob: -15.788042068481445
    4. ' circul' → logprob: -16.038042068481445
    5. 'Cir' → logprob: -16.288042068481445
    6. 'c' → logprob: -16.288042068481445
    7. 'circ' → logprob: -16.538042068481445
    8. ' ' → logprob: -16.663042068481445
    9. 'circle' → logprob: -17.038042068481445
    10. '(c' → logprob: -17.038042068481445

Token 176: '_touch' (ID: 155310)
  Prédit: '_touch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_touch' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.0
    3. 'touch' → logprob: -17.0
    4. '_TOUCH' → logprob: -18.0
    5. '_t' → logprob: -18.625
    6. '[i' → logprob: -19.625
    7. '[' → logprob: -19.625
    8. '_to' → logprob: -19.625
    9. '_cross' → logprob: -19.75
    10. '_contact' → logprob: -19.875

Token 177: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: 0.0
    2. ' or' → logprob: -17.375
    3. 'or' → logprob: -18.25
    4. 's' → logprob: -18.625
    5. '_' → logprob: -19.5
    6. '_o' → logprob: -19.625
    7. '

' → logprob: -20.125
    8. '_OR' → logprob: -20.75
    9. '(c' → logprob: -20.875
    10. '_to' → logprob: -21.0

Token 178: '_cross' (ID: 85618)
  Prédit: '_cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cross' → logprob: -0.0005066845333203673
    2. 'cross' → logprob: -7.62550687789917
    3. '_' → logprob: -11.625506401062012
    4. ' cross' → logprob: -11.875506401062012
    5. '(c' → logprob: -13.625506401062012
    6. '_c' → logprob: -14.000506401062012
    7. ' ' → logprob: -16.250507354736328
    8. 'c' → logprob: -16.250507354736328
    9. '[c' → logprob: -16.375507354736328
    10. ' _' → logprob: -16.375507354736328

Token 179: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0004480692732613534
    2. '(' → logprob: -7.875448226928711
    3. ' (' → logprob: -9.625448226928711
    4. '((' → logprob: -14.250448226928711
    5. '(circle' → logprob: -15.000448226928711
    6. '(
' → logprob: -16.00044822692871
    7. ')(' → logprob: -16.00044822692871
    8. ' ' → logprob: -16.25044822692871
    9. '(C' → logprob: -16.37544822692871
    10. ')' → logprob: -16.50044822692871

Token 180: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0032529314048588276
    2. 'cir' → logprob: -6.128252983093262
    3. '(c' → logprob: -8.003252983093262
    4. 'irc' → logprob: -8.878252983093262
    5. 'c' → logprob: -9.128252983093262
    6. 'i' → logprob: -9.128252983093262
    7. '1' → logprob: -9.128252983093262
    8. 'icles' → logprob: -10.253252983093262
    9. 'rc' → logprob: -10.628252983093262
    10. 'cles' → logprob: -10.628252983093262

Token 181: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.00011105302110081539
    2. 'les' → logprob: -9.250110626220703
    3. 'cl' → logprob: -12.625110626220703
    4. 'cle' → logprob: -13.125110626220703
    5. 's' → logprob: -13.375110626220703
    6. 'c' → logprob: -13.625110626220703
    7. 'es' → logprob: -13.750110626220703
    8. '   ' → logprob: -14.000110626220703
    9. '
' → logprob: -14.500110626220703
    10. ')
' → logprob: -14.625110626220703

Token 182: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0043960558250546455
    2. '[j' → logprob: -5.629395961761475
    3. '[' → logprob: -7.254395961761475
    4. ')[' → logprob: -9.879396438598633
    5. ' [' → logprob: -11.379396438598633
    6. '
' → logprob: -11.754396438598633
    7. ')' → logprob: -11.879396438598633
    8. '[
' → logprob: -12.629396438598633
    9. '[c' → logprob: -14.129396438598633
    10. '[n' → logprob: -14.129396438598633

Token 183: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.6443688869476318
    2. ',' → logprob: -0.7693688869476318
    3. ',j' → logprob: -4.894369125366211
    4. '[j' → logprob: -6.019369125366211
    5. '],[' → logprob: -7.519369125366211
    6. '),' → logprob: -7.644369125366211
    7. ' ,' → logprob: -7.769369125366211
    8. '][' → logprob: -8.519369125366211
    9. ']' → logprob: -10.144369125366211
    10. ' ],' → logprob: -10.644369125366211

Token 184: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.10043483227491379
    2. ' circles' → logprob: -2.3504347801208496
    3. 'circle' → logprob: -9.600435256958008
    4. 'circ' → logprob: -9.975435256958008
    5. 'c' → logprob: -10.100435256958008
    6. ')' → logprob: -10.350435256958008
    7. ' cir' → logprob: -11.100435256958008
    8. ' circul' → logprob: -11.975435256958008
    9. ' círc' → logprob: -13.100435256958008
    10. ' ' → logprob: -13.225435256958008

Token 185: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.511406809295295e-06
    2. ')' → logprob: -13.250006675720215
    3. '[i' → logprob: -13.625006675720215
    4. 'j' → logprob: -13.625006675720215
    5. '[' → logprob: -14.375006675720215
    6. '[
' → logprob: -14.750006675720215
    7. ')[' → logprob: -14.875006675720215
    8. '   ' → logprob: -15.125006675720215
    9. ' [' → logprob: -15.500006675720215
    10. '```' → logprob: -15.875006675720215

Token 186: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00013762809976469725
    2. '):
' → logprob: -9.125137329101562
    3. ')' → logprob: -10.625137329101562
    4. ':' → logprob: -13.375137329101562
    5. ' ):' → logprob: -13.625137329101562
    6. '):

' → logprob: -14.875137329101562
    7. '):
' → logprob: -15.000137329101562
    8. ')):' → logprob: -15.125137329101562
    9. ']):' → logprob: -15.875137329101562
    10. ''):' → logprob: -16.000137329101562

Token 187: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0776582583785057
    2. ':' → logprob: -2.702658176422119
    3. '           ' → logprob: -4.952658176422119
    4. '):' → logprob: -8.327658653259277
    5. ':
' → logprob: -8.327658653259277
    6. ')' → logprob: -10.202658653259277
    7. '):
' → logprob: -10.452658653259277
    8. '                   ' → logprob: -10.952658653259277
    9. ',' → logprob: -11.327658653259277
    10. ' :' → logprob: -11.577658653259277

Token 188: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.05397799238562584
    2. 'graph' (adapté à ' graph') → logprob: -3.1789779663085938
    3. '               ' → logprob: -4.553977966308594
    4. '	graph' → logprob: -8.928977966308594
    5. '                   ' → logprob: -9.053977966308594
    6. '(graph' → logprob: -9.803977966308594
    7. '_graph' → logprob: -10.803977966308594
    8. '           ' → logprob: -11.053977966308594
    9. '```' → logprob: -11.303977966308594
    10. '                ' → logprob: -11.303977966308594

Token 189: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -16.0
    3. '[j' → logprob: -16.125
    4. '[' → logprob: -16.5
    5. ')[' → logprob: -17.5
    6. '[I' → logprob: -17.625
    7. '```' → logprob: -17.875
    8. '   ' → logprob: -18.5
    9. '\[' → logprob: -20.125
    10. '][' → logprob: -20.125

Token 190: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0002512071805540472
    2. '[i' → logprob: -8.875250816345215
    3. ']' → logprob: -9.250250816345215
    4. '.append' → logprob: -11.750250816345215
    5. '[j' → logprob: -12.625250816345215
    6. ' ].' → logprob: -13.125250816345215
    7. '][' → logprob: -14.125250816345215
    8. '.' → logprob: -14.375250816345215
    9. '[' → logprob: -14.875250816345215
    10. '   ' → logprob: -15.375250816345215

Token 191: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. '.append' → logprob: -15.250000953674316
    3. ' append' → logprob: -15.500000953674316
    4. '	append' → logprob: -20.625
    5. 'app' → logprob: -21.125
    6. 'appen' → logprob: -21.5
    7. 'push' → logprob: -21.625
    8. '_append' → logprob: -21.75
    9. 'Append' → logprob: -22.5
    10. 'add' → logprob: -23.75

Token 192: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -3.666993507067673e-05
    2. '(' → logprob: -10.250036239624023
    3. 'j' → logprob: -13.750036239624023
    4. '(
' → logprob: -15.375036239624023
    5. ' (' → logprob: -16.750036239624023
    6. ' j' → logprob: -19.250036239624023
    7. '(i' → logprob: -19.875036239624023
    8. '	j' → logprob: -20.250036239624023
    9. '[j' → logprob: -20.250036239624023
    10. '((' → logprob: -20.500036239624023

Token 193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010354298865422606
    2. ')
' → logprob: -6.876035213470459
    3. ' )' → logprob: -13.751035690307617
    4. '<|end|>' → logprob: -14.001035690307617
    5. ')

' → logprob: -15.626035690307617
    6. '),' → logprob: -16.001035690307617
    7. ')
' → logprob: -16.126035690307617
    8. ']' → logprob: -16.876035690307617
    9. ')#' → logprob: -17.001035690307617
    10. '   ' → logprob: -17.251035690307617

Token 194: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3782830137643032e-05
    2. '<|end|>' → logprob: -11.87501335144043
    3. '                
' → logprob: -12.62501335144043
    4. '           ' → logprob: -14.25001335144043
    5. '
' → logprob: -14.62501335144043
    6. '			' → logprob: -14.75001335144043
    7. '```' → logprob: -15.12501335144043
    8. '              ' → logprob: -15.12501335144043
    9. ' graph' → logprob: -15.50001335144043
    10. '       ' → logprob: -15.62501335144043

Token 195: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.5759454369544983
    2. 'graph' (adapté à ' graph') → logprob: -0.8259454369544983
    3. '               ' → logprob: -12.575945854187012
    4. '	graph' → logprob: -13.200945854187012
    5. 'Graph' → logprob: -15.700945854187012
    6. '.graph' → logprob: -15.700945854187012
    7. '                ' → logprob: -16.450944900512695
    8. '(graph' → logprob: -16.700944900512695
    9. '_graph' → logprob: -16.700944900512695
    10. '                   ' → logprob: -17.075944900512695

Token 196: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.01824464648962021
    2. '[i' → logprob: -4.018244743347168
    3. '[' → logprob: -9.268244743347168
    4. '```' → logprob: -16.14324378967285
    5. '][' → logprob: -16.51824378967285
    6. ' [' → logprob: -16.64324378967285
    7. '[s' → logprob: -16.76824378967285
    8. ')[' → logprob: -17.64324378967285
    9. '[js' → logprob: -17.76824378967285
    10. 'j' → logprob: -18.14324378967285

Token 197: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0003811025235336274
    2. ').' → logprob: -8.375381469726562
    3. ']' → logprob: -9.125381469726562
    4. '.' → logprob: -10.250381469726562
    5. ' ].' → logprob: -13.125381469726562
    6. '.append' → logprob: -13.125381469726562
    7. '[' → logprob: -13.750381469726562
    8. ')' → logprob: -14.875381469726562
    9. '][' → logprob: -15.250381469726562
    10. '[i' → logprob: -15.750381469726562

Token 198: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -15.25
    3. 'appen' → logprob: -17.5
    4. '.append' → logprob: -17.625
    5. 'app' → logprob: -17.75
    6. '	append' → logprob: -18.625
    7. 'add' → logprob: -19.625
    8. ' ' → logprob: -20.5
    9. '```' → logprob: -21.5
    10. '_append' → logprob: -21.625

Token 199: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00020389800192788243
    2. '(' → logprob: -8.500204086303711
    3. '(
' → logprob: -14.750204086303711
    4. ' (' → logprob: -18.25020408630371
    5. 'i' → logprob: -19.25020408630371
    6. '(I' → logprob: -19.87520408630371
    7. '(

' → logprob: -20.25020408630371
    8. '((' → logprob: -21.25020408630371
    9. '(ii' → logprob: -21.37520408630371
    10. ')' → logprob: -21.62520408630371

Token 200: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011009939044015482
    2. ')
' → logprob: -9.125109672546387
    3. ' )' → logprob: -14.250109672546387
    4. ')return' → logprob: -15.750109672546387
    5. '<|end|>' → logprob: -16.375110626220703
    6. ')

' → logprob: -16.500110626220703
    7. '   ' → logprob: -16.875110626220703
    8. ')#' → logprob: -17.000110626220703
    9. '),' → logprob: -17.875110626220703
    10. '       ' → logprob: -18.125110626220703

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02600869908928871
    2. '
' → logprob: -4.901008605957031
    3. '    
' → logprob: -5.026008605957031
    4. 'return' → logprob: -5.151008605957031
    5. '<|end|>' → logprob: -6.026008605957031
    6. '	return' → logprob: -6.651008605957031
    7. ' return' → logprob: -7.526008605957031
    8. '\n' → logprob: -7.526008605957031
    9. '```' → logprob: -8.276008605957031
    10. '<|end|>' → logprob: -8.526008605957031

Token 202: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04045794531702995
    2. '   ' → logprob: -3.9154579639434814
    3. ' return' → logprob: -4.165457725524902
    4. '	return' → logprob: -6.290457725524902
    5. '
' → logprob: -6.415457725524902
    6. '    
' → logprob: -8.040457725524902
    7. ':return' → logprob: -8.915457725524902
    8. '```' → logprob: -9.665457725524902
    9. '\n' → logprob: -10.165457725524902
    10. 'r' → logprob: -10.790457725524902

Token 203: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.00020354038861114532
    2. ' graph' → logprob: -8.500203132629395
    3. '	graph' → logprob: -20.37520408630371
    4. '(graph' → logprob: -20.50020408630371
    5. 'Graph' → logprob: -21.37520408630371
    6. '_graph' → logprob: -22.75020408630371
    7. 'graphs' → logprob: -23.75020408630371
    8. 'graphql' → logprob: -24.25020408630371
    9. 'grid' → logprob: -25.37520408630371
    10. 'graphic' → logprob: -25.62520408630371

Token 204: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.043957922607660294
    2. '<|end|>' → logprob: -3.4189579486846924
    3. '
' → logprob: -4.793957710266113
    4. '

' → logprob: -6.793957710266113
    5. '```' → logprob: -7.668957710266113
    6. '<|end|>' → logprob: -8.668957710266113
    7. ' def' → logprob: -9.668957710266113
    8. '    
' → logprob: -10.293957710266113
    9. '  
' → logprob: -10.418957710266113
    10. ')' → logprob: -11.418957710266113

Token 205: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.941850526549388e-06
    2. '
' → logprob: -12.250007629394531
    3. '```' → logprob: -13.125007629394531
    4. 'visited' → logprob: -14.500007629394531
    5. 'from' → logprob: -15.375007629394531
    6. 'ndef' → logprob: -16.25000762939453
    7. 'import' → logprob: -17.00000762939453
    8. ' def' → logprob: -17.12500762939453
    9. '``' → logprob: -17.37500762939453
    10. '

' → logprob: -17.50000762939453

Token 206: ' bfs' (ID: 147571)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.8139064311981201
    2. 'dfs' → logprob: -1.5639064311981201
    3. ' find' → logprob: -2.06390643119812
    4. ' bfs' → logprob: -2.18890643119812
    5. ' connected' → logprob: -3.18890643119812
    6. 'b' → logprob: -3.93890643119812
    7. ' is' → logprob: -4.688906669616699
    8. 'connected' → logprob: -4.938906669616699
    9. ' can' → logprob: -4.938906669616699
    10. 'find' → logprob: -5.313906669616699

Token 207: '(graph' (ID: 51300)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6403574347496033
    2. '(graph' → logprob: -0.8903574347496033
    3. '(start' → logprob: -3.890357494354248
    4. '(node' → logprob: -3.890357494354248
    5. '(root' → logprob: -4.515357494354248
    6. '(queue' → logprob: -4.640357494354248
    7. '(parent' → logprob: -9.01535701751709
    8. '(nodes' → logprob: -9.14035701751709
    9. '(s' → logprob: -9.26535701751709
    10. '(Graph' → logprob: -9.51535701751709

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013274075172375888
    2. ' ,' → logprob: -9.37513256072998
    3. ',start' → logprob: -10.00013256072998
    4. ',node' → logprob: -13.75013256072998
    5. ',s' → logprob: -14.75013256072998
    6. '(graph' → logprob: -14.75013256072998
    7. '(start' → logprob: -15.12513256072998
    8. '[start' → logprob: -16.625133514404297
    9. ',v' → logprob: -16.875133514404297
    10. ',u' → logprob: -16.875133514404297

Token 209: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.31326520442962646
    2. ' start' → logprob: -1.3132652044296265
    3. 's' → logprob: -13.688264846801758
    4. '	start' → logprob: -14.313264846801758
    5. '(start' → logprob: -14.688264846801758
    6. '[start' → logprob: -14.813264846801758
    7. 'source' → logprob: -15.063264846801758
    8. 'src' → logprob: -15.563264846801758
    9. '```' → logprob: -15.688264846801758
    10. '   ' → logprob: -15.938264846801758

Token 210: '_nodes' (ID: 34593)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002993544621858746
    2. '):' → logprob: -8.125299453735352
    3. '):
' → logprob: -13.000299453735352
    4. ' ,' → logprob: -14.375299453735352
    5. ',start' → logprob: -15.250299453735352
    6. ')' → logprob: -16.37529945373535
    7. ',
' → logprob: -17.00029945373535
    8. '):
' → logprob: -17.75029945373535
    9. ',node' → logprob: -17.75029945373535
    10. '   ' → logprob: -18.25029945373535

Token 211: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1144314780831337
    2. ',' → logprob: -2.239431381225586
    3. '):
' → logprob: -7.114431381225586
    4. ')' → logprob: -7.739431381225586
    5. ' ):' → logprob: -8.114431381225586
    6. '):
' → logprob: -10.364431381225586
    7. ' ,' → logprob: -10.989431381225586
    8. ':' → logprob: -13.114431381225586
    9. '):

' → logprob: -13.239431381225586
    10. ' )' → logprob: -13.739431381225586

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05103876441717148
    2. ' queue' → logprob: -3.6760387420654297
    3. ' visited' → logprob: -3.8010387420654297
    4. 'visited' → logprob: -6.80103874206543
    5. ':' → logprob: -8.30103874206543
    6. '```' → logprob: -9.30103874206543
    7. '(queue' → logprob: -9.42603874206543
    8. '	queue' → logprob: -9.55103874206543
    9. ' ' → logprob: -9.67603874206543
    10. 'queue' → logprob: -9.67603874206543

Token 213: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.21053387224674225
    2. ' visited' → logprob: -2.460533857345581
    3. 'from' (adapté à ' from') → logprob: -3.210533857345581
    4. '   ' → logprob: -3.460533857345581
    5. ' queue' → logprob: -3.710533857345581
    6. 'visited' → logprob: -4.83553409576416
    7. 'queue' → logprob: -8.21053409576416
    8. ' import' → logprob: -11.46053409576416
    9. ' ' → logprob: -11.58553409576416
    10. 'import' → logprob: -12.58553409576416

Token 214: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6931473612785339
    2. 'collections' → logprob: -0.6931473612785339
    3. 'queue' → logprob: -16.943147659301758
    4. 'collection' → logprob: -17.068147659301758
    5. '_' → logprob: -17.693147659301758
    6. ' queue' → logprob: -18.068147659301758
    7. ' collection' → logprob: -18.568147659301758
    8. '.collections' → logprob: -19.068147659301758
    9. 'col' → logprob: -19.818147659301758
    10. 'collect' → logprob: -19.818147659301758

Token 215: ' import' (ID: 1588)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8286441564559937
    2. 'ctions' → logprob: -1.5786441564559937
    3. 'import' → logprob: -1.8286441564559937
    4. 'ct' → logprob: -2.828644275665283
    5. 'n' → logprob: -3.078644275665283
    6. 'ction' → logprob: -4.078644275665283
    7. 'tion' → logprob: -4.078644275665283
    8. ' import' → logprob: -4.953644275665283
    9. 'ns' → logprob: -5.203644275665283
    10. 's' → logprob: -5.453644275665283

Token 216: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.2014143168926239
    2. ' deque' → logprob: -1.7014143466949463
    3. 'collections' → logprob: -14.576414108276367
    4. 'de' → logprob: -14.576414108276367
    5. 'queue' → logprob: -17.451414108276367
    6. ' defaultdict' → logprob: -19.326414108276367
    7. '```' → logprob: -19.451414108276367
    8. 'Deque' → logprob: -21.201414108276367
    9. ' collections' → logprob: -21.451414108276367
    10. ' dequeue' → logprob: -21.701414108276367

Token 217: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10979248583316803
    2. '   ' → logprob: -3.359792470932007
    3. ' queue' → logprob: -3.859792470932007
    4. ' 
' → logprob: -4.234792709350586
    5. 'queue' → logprob: -4.984792709350586
    6. '(queue' → logprob: -5.109792709350586
    7. '    
' → logprob: -5.109792709350586
    8. '  
' → logprob: -5.234792709350586
    9. '	queue' → logprob: -5.984792709350586
    10. 'q' → logprob: -6.734792709350586

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10076641291379929
    2. ' queue' → logprob: -3.10076642036438
    3. 'queue' → logprob: -3.97576642036438
    4. '
' → logprob: -3.97576642036438
    5. '	queue' → logprob: -5.350766181945801
    6. '    
' → logprob: -5.850766181945801
    7. 'q' → logprob: -6.600766181945801
    8. 'deque' → logprob: -6.850766181945801
    9. ' 
' → logprob: -7.350766181945801
    10. 'visited' → logprob: -7.725766181945801

Token 219: ' dist' (ID: 3601)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.05196450650691986
    2. 'queue' → logprob: -3.176964521408081
    3. ' q' → logprob: -5.801964282989502
    4. ' visited' → logprob: -5.801964282989502
    5. 'q' → logprob: -6.926964282989502
    6. 'visited' → logprob: -6.926964282989502
    7. '   ' → logprob: -7.051964282989502
    8. '
' → logprob: -11.67696475982666
    9. 'dist' (adapté à ' dist') → logprob: -11.80196475982666
    10. ' que' → logprob: -12.05196475982666

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1494167149066925
    2. '=' → logprob: -2.02441668510437
    3. 'ances' → logprob: -5.899416923522949
    4. 'ance' → logprob: -6.024416923522949
    5. ' ' → logprob: -7.524416923522949
    6. ',' → logprob: -7.524416923522949
    7. '[' → logprob: -8.14941692352295
    8. 's' → logprob: -9.39941692352295
    9. '  ' → logprob: -10.39941692352295
    10. '   ' → logprob: -10.89941692352295

Token 221: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.018423249945044518
    2. '{' → logprob: -4.268423080444336
    3. ' [-' → logprob: -6.018423080444336
    4. '[' → logprob: -7.268423080444336
    5. '{}' → logprob: -7.518423080444336
    6. '{-' → logprob: -7.518423080444336
    7. ' [' → logprob: -11.018423080444336
    8. ' {' → logprob: -11.018423080444336
    9. '{}
' → logprob: -15.018423080444336
    10. '[len' → logprob: -15.268423080444336

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.5
    3. '2' → logprob: -16.75
    4. ' ' → logprob: -17.25
    5. '(' → logprob: -19.5
    6. '   ' → logprob: -20.25
    7. 'math' → logprob: -20.75
    8. '
' → logprob: -21.0
    9. ' -' → logprob: -21.0
    10. '11' → logprob: -21.0

Token 223: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11529771238565445
    2. ' for' → logprob: -2.365297794342041
    3. ']*' → logprob: -4.365297794342041
    4. 'for' → logprob: -6.240297794342041
    5. ' ]' → logprob: -8.115297317504883
    6. ']*(' → logprob: -11.115297317504883
    7. '```' → logprob: -13.615297317504883
    8. ' if' → logprob: -14.615297317504883
    9. '	for' → logprob: -14.990297317504883
    10. ',' → logprob: -14.990297317504883

Token 224: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.841743303695694e-05
    2. '(len' → logprob: -9.25009822845459
    3. ' len' → logprob: -13.00009822845459
    4. '[len' → logprob: -19.125099182128906
    5. '	len' → logprob: -21.000099182128906
    6. '(' → logprob: -21.625099182128906
    7. '=len' → logprob: -21.875099182128906
    8. ',len' → logprob: -22.625099182128906
    9. '<len' → logprob: -22.625099182128906
    10. '
' → logprob: -23.375099182128906

Token 225: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.000432695698691532
    2. 'graph' → logprob: -7.75043249130249
    3. ' graph' → logprob: -13.625432968139648
    4. '(' → logprob: -14.125432968139648
    5. '	graph' → logprob: -16.37543296813965
    6. '(
' → logprob: -17.00043296813965
    7. ' (' → logprob: -18.50043296813965
    8. 'Graph' → logprob: -19.50043296813965
    9. '(Graph' → logprob: -19.62543296813965
    10. '_graph' → logprob: -19.75043296813965

Token 226: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017112065688706934
    2. ')
' → logprob: -8.750170707702637
    3. ' )' → logprob: -11.375170707702637
    4. ')
' → logprob: -14.250170707702637
    5. ')

' → logprob: -15.000170707702637
    6. ' ' → logprob: -16.625171661376953
    7. '),' → logprob: -17.375171661376953
    8. ' )
' → logprob: -18.000171661376953
    9. ']' → logprob: -18.125171661376953
    10. '   ' → logprob: -18.250171661376953

Token 227: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.644258975982666
    2. '   ' → logprob: -1.269258975982666
    3. '
' → logprob: -2.019258975982666
    4. 'for' → logprob: -3.144258975982666
    5. 'dist' → logprob: -4.644258975982666
    6. ' queue' → logprob: -5.769258975982666
    7. '    
' → logprob: -6.144258975982666
    8. ' dist' → logprob: -6.644258975982666
    9. 'queue' → logprob: -7.394258975982666
    10. ' 
' → logprob: -7.519258975982666

Token 228: ' q' (ID: 2335)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.02550632879137993
    2. ' queue' → logprob: -3.7755062580108643
    3. '   ' → logprob: -7.025506496429443
    4. 'for' → logprob: -7.025506496429443
    5. 'q' (adapté à ' q') → logprob: -7.775506496429443
    6. ' for' → logprob: -10.650506019592285
    7. 'deque' → logprob: -10.900506019592285
    8. 'dq' → logprob: -11.525506019592285
    9. 'que' → logprob: -12.525506019592285
    10. ' q' → logprob: -13.150506019592285

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06062987446784973
    2. '=' → logprob: -3.0606298446655273
    3. 'ue' → logprob: -4.435629844665527
    4. 'u' → logprob: -9.560629844665527
    5. '.' → logprob: -10.810629844665527
    6. ' ' → logprob: -11.685629844665527
    7. 'uer' → logprob: -11.935629844665527
    8. '  ' → logprob: -12.935629844665527
    9. '.append' → logprob: -13.060629844665527
    10. '   ' → logprob: -13.560629844665527

Token 230: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.16022604703903198
    2. ' deque' → logprob: -1.9102261066436768
    3. 'de' → logprob: -13.785225868225098
    4. 'Deque' → logprob: -14.035225868225098
    5. 'collections' → logprob: -16.035226821899414
    6. '(de' → logprob: -19.035226821899414
    7. ' collections' → logprob: -19.035226821899414
    8. ' dequeue' → logprob: -19.160226821899414
    9. '	de' → logprob: -19.410226821899414
    10. 'dq' → logprob: -20.160226821899414

Token 231: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23169951140880585
    2. '([' → logprob: -2.3566994667053223
    3. '(' → logprob: -2.4816994667053223
    4. '(start' → logprob: -3.7316994667053223
    5. '([(' → logprob: -5.731699466705322
    6. '([]' → logprob: -7.606699466705322
    7. '([
' → logprob: -8.10669994354248
    8. '()
' → logprob: -8.73169994354248
    9. '([...' → logprob: -8.85669994354248
    10. '((' → logprob: -9.73169994354248

Token 232: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.33535146713256836
    2. 'for' → logprob: -1.5853514671325684
    3. '   ' → logprob: -2.9603514671325684
    4. '
' → logprob: -3.7103514671325684
    5. ' 
' → logprob: -6.460351467132568
    6. '    
' → logprob: -6.585351467132568
    7. '	for' → logprob: -7.710351467132568
    8. '  
' → logprob: -8.835351943969727
    9. '<|end|>' → logprob: -8.960351943969727
    10. ' ' → logprob: -10.210351943969727

Token 233: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.062418222427368164
    2. 'for' (adapté à ' for') → logprob: -2.812418222427368
    3. '   ' → logprob: -7.937417984008789
    4. ' 
' → logprob: -10.312417984008789
    5. '	for' → logprob: -10.437417984008789
    6. '
' → logprob: -10.687417984008789
    7. '    
' → logprob: -12.562417984008789
    8. ' ' → logprob: -12.687417984008789
    9. '  
' → logprob: -14.812417984008789
    10. '```' → logprob: -15.062417984008789

Token 234: ' s' (ID: 265)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.8713167905807495
    2. 'node' → logprob: -1.1213167905807495
    3. ' start' → logprob: -1.9963167905807495
    4. 'start' → logprob: -2.121316909790039
    5. 'sn' → logprob: -11.121316909790039
    6. 'n' → logprob: -11.496316909790039
    7. ' s' → logprob: -11.996316909790039
    8. 's' → logprob: -12.246316909790039
    9. ' sn' → logprob: -13.496316909790039
    10. ' ' → logprob: -14.246316909790039

Token 235: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0032316597644239664
    2. 'in' → logprob: -5.753231525421143
    3. 's' → logprob: -10.3782320022583
    4. ' ' → logprob: -11.0032320022583
    5. 'n' → logprob: -13.2532320022583
    6. ' s' → logprob: -13.5032320022583
    7. 't' → logprob: -13.8782320022583
    8. ',' → logprob: -14.3782320022583
    9. ')' → logprob: -15.2532320022583
    10. '	in' → logprob: -15.3782320022583

Token 236: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0010416212026029825
    2. ' start' → logprob: -6.876041412353516
    3. '[start' → logprob: -12.001041412353516
    4. 's' → logprob: -13.626041412353516
    5. 'range' → logprob: -14.751041412353516
    6. '(start' → logprob: -14.876041412353516
    7. ' ' → logprob: -15.626041412353516
    8. '=start' → logprob: -16.126041412353516
    9. 'starter' → logprob: -16.626041412353516
    10. 'star' → logprob: -16.876041412353516

Token 237: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.005260203033685684
    2. '_node' → logprob: -5.380259990692139
    3. ' in' → logprob: -7.755259990692139
    4. '_' → logprob: -8.880260467529297
    5. ' _' → logprob: -10.255260467529297
    6. 's' → logprob: -10.755260467529297
    7. '_tokens' → logprob: -12.255260467529297
    8. '_n' → logprob: -12.630260467529297
    9. '_i' → logprob: -13.630260467529297
    10. '_s' → logprob: -13.880260467529297

Token 238: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005222928593866527
    2. ':
' → logprob: -7.625522136688232
    3. ' :' → logprob: -10.87552261352539
    4. '):' → logprob: -11.12552261352539
    5. '):
' → logprob: -14.87552261352539
    6. ':
' → logprob: -16.00052261352539
    7. '   ' → logprob: -16.75052261352539
    8. ' :
' → logprob: -17.37552261352539
    9. ':**' → logprob: -17.50052261352539
    10. ',' → logprob: -17.62552261352539

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037554673850536346
    2. ' q' → logprob: -3.6625547409057617
    3. '   ' → logprob: -4.787554740905762
    4. 'q' → logprob: -6.662554740905762
    5. '
' → logprob: -7.537554740905762
    6. '	q' → logprob: -7.912554740905762
    7. '        
' → logprob: -8.287554740905762
    8. '    
' → logprob: -9.162554740905762
    9. '    ' → logprob: -9.412554740905762
    10. ' 
' → logprob: -9.912554740905762

Token 240: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.47673913836479187
    2. 'dist' (adapté à ' dist') → logprob: -0.9767391681671143
    3. ' q' → logprob: -6.226738929748535
    4. 'q' → logprob: -7.351738929748535
    5. '
' → logprob: -10.476738929748535
    6. ' 
' → logprob: -11.976738929748535
    7. '	dist' → logprob: -13.101738929748535
    8. '_dist' → logprob: -13.726738929748535
    9. '   ' → logprob: -13.851738929748535
    10. 'Dist' → logprob: -13.851738929748535

Token 241: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.25000286102295
    3. ' [' → logprob: -14.37500286102295
    4. 's' → logprob: -17.500001907348633
    5. '

' → logprob: -17.500001907348633
    6. '```' → logprob: -17.875001907348633
    7. '[S' → logprob: -18.000001907348633
    8. '[
' → logprob: -18.625001907348633
    9. '[q' → logprob: -19.000001907348633
    10. ' s' → logprob: -19.000001907348633

Token 242: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.349075556499884e-05
    2. ']=' → logprob: -9.8750638961792
    3. ' ]' → logprob: -11.3750638961792
    4. ')' → logprob: -15.0000638961792
    5. '=' → logprob: -16.125062942504883
    6. ']=-' → logprob: -17.875062942504883
    7. ' =' → logprob: -18.000062942504883
    8. ']+=' → logprob: -18.250062942504883
    9. '`]' → logprob: -19.000062942504883
    10. ']='' → logprob: -20.000062942504883

Token 243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740806519985199
    2. '=' → logprob: -0.9740806818008423
    3. ']' → logprob: -13.349081039428711
    4. ')' → logprob: -13.974081039428711
    5. ']=' → logprob: -14.349081039428711
    6. ' ' → logprob: -15.474081039428711
    7. ')=' → logprob: -15.474081039428711
    8. ',' → logprob: -16.72408103942871
    9. '<|end|>' → logprob: -17.09908103942871
    10. '0' → logprob: -17.22408103942871

Token 244: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.0000057220459
    4. '۰' → logprob: -18.5000057220459
    5. '00' → logprob: -19.6250057220459
    6. '1' → logprob: -20.0625057220459
    7. '```' → logprob: -20.0625057220459
    8. '=' → logprob: -20.1875057220459
    9. '  ' → logprob: -20.3125057220459
    10. 's' → logprob: -20.5625057220459

Token 245: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '۰' → logprob: -17.3125057220459
    4. '   ' → logprob: -17.3750057220459
    5. 's' → logprob: -18.1875057220459
    6. '=' → logprob: -18.6250057220459
    7. '```' → logprob: -18.6250057220459
    8. '-' → logprob: -18.9375057220459
    9. '00' → logprob: -18.9375057220459
    10. '০' → logprob: -19.0000057220459

Token 246: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004993463400751352
    2. '
' → logprob: -5.629993438720703
    3. 'q' → logprob: -6.879993438720703
    4. '<|end|>' → logprob: -9.254993438720703
    5. ' q' → logprob: -9.629993438720703
    6. '	q' → logprob: -9.629993438720703
    7. '   ' → logprob: -10.129993438720703
    8. '	' → logprob: -10.254993438720703
    9. ',q' → logprob: -11.004993438720703
    10. '               ' → logprob: -12.004993438720703

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022761584841646254
    2. '   ' → logprob: -8.875227928161621
    3. '	q' → logprob: -9.875227928161621
    4. ' q' → logprob: -10.750227928161621
    5. '	' → logprob: -12.125227928161621
    6. 'q' → logprob: -12.250227928161621
    7. '	   ' → logprob: -13.875227928161621
    8. ',q' → logprob: -14.375227928161621
    9. '```' → logprob: -14.625227928161621
    10. ' ' → logprob: -14.750227928161621

Token 248: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.0008848957950249314
    2. ' q' → logprob: -7.250885009765625
    3. '   ' → logprob: -8.750885009765625
    4. '       ' → logprob: -11.375885009765625
    5. '	q' → logprob: -12.250885009765625
    6. ',q' → logprob: -16.375885009765625
    7. '
' → logprob: -16.500885009765625
    8. '           ' → logprob: -17.375885009765625
    9. '_q' → logprob: -17.375885009765625
    10. '```' → logprob: -17.875885009765625

Token 249: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011089913547039032
    2. '.' → logprob: -4.51108980178833
    3. '.extend' → logprob: -10.886090278625488
    4. '.p' → logprob: -11.136090278625488
    5. '.app' → logprob: -12.761090278625488
    6. '.enqueue' → logprob: -13.011090278625488
    7. '.put' → logprob: -13.511090278625488
    8. ' .' → logprob: -13.886090278625488
    9. '.push' → logprob: -14.636090278625488
    10. '.Append' → logprob: -15.136090278625488

Token 250: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.180879816180095e-05
    2. '(' → logprob: -9.875051498413086
    3. '((' → logprob: -15.875051498413086
    4. ' (' → logprob: -16.875051498413086
    5. '(
' → logprob: -17.625051498413086
    6. 'left' → logprob: -17.750051498413086
    7. 's' → logprob: -17.875051498413086
    8. '(q' → logprob: -19.500051498413086
    9. '(

' → logprob: -19.500051498413086
    10. ' s' → logprob: -20.000051498413086

Token 251: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3544423381972592e-05
    2. ')
' → logprob: -11.25001335144043
    3. ' )' → logprob: -15.12501335144043
    4. '))' → logprob: -15.75001335144043
    5. ')
' → logprob: -17.00001335144043
    6. '   ' → logprob: -17.12501335144043
    7. ')

' → logprob: -17.62501335144043
    8. ')`' → logprob: -18.50001335144043
    9. '())' → logprob: -18.75001335144043
    10. '`)' → logprob: -19.12501335144043

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007167255040258169
    2. ' while' → logprob: -5.382167339324951
    3. '
' → logprob: -6.632167339324951
    4. 'while' → logprob: -7.007167339324951
    5. '    
' → logprob: -8.257166862487793
    6. '	while' → logprob: -10.382166862487793
    7. ' 
' → logprob: -11.382166862487793
    8. ')' → logprob: -11.757166862487793
    9. '  
' → logprob: -12.382166862487793
    10. 'While' → logprob: -13.632166862487793

Token 253: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.10687700659036636
    2. ' while' → logprob: -2.606877088546753
    3. '   ' → logprob: -3.606877088546753
    4. '
' → logprob: -7.981876850128174
    5. '	while' → logprob: -9.231877326965332
    6. '    
' → logprob: -10.981877326965332
    7. 'While' → logprob: -13.231877326965332
    8. ' 
' → logprob: -13.231877326965332
    9. '```' → logprob: -13.856877326965332
    10. '  
' → logprob: -13.981877326965332

Token 254: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.5759477615356445
    2. 'q' → logprob: -0.8259477615356445
    3. 'len' → logprob: -12.700947761535645
    4. ' len' → logprob: -12.825947761535645
    5. '	q' → logprob: -14.075947761535645
    6. ' ' → logprob: -14.325947761535645
    7. '(q' → logprob: -14.450947761535645
    8. ' ' → logprob: -14.700947761535645
    9. '   ' → logprob: -15.825947761535645
    10. '  ' → logprob: -17.325946807861328

Token 255: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000264315924141556
    2. ':
' → logprob: -8.750264167785645
    3. '):' → logprob: -9.250264167785645
    4. '():' → logprob: -12.375264167785645
    5. '>:' → logprob: -13.875264167785645
    6. '):
' → logprob: -14.000264167785645
    7. '.pop' → logprob: -14.250264167785645
    8. 'opleft' → logprob: -14.375264167785645
    9. ':**' → logprob: -15.000264167785645
    10. ':not' → logprob: -15.000264167785645

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027444821898825467
    2. ' v' → logprob: -9.000274658203125
    3. ' u' → logprob: -9.500274658203125
    4. '   ' → logprob: -10.125274658203125
    5. ' current' → logprob: -11.125274658203125
    6. 'u' → logprob: -11.875274658203125
    7. 'v' → logprob: -12.375274658203125
    8. ' node' → logprob: -12.375274658203125
    9. '```' → logprob: -13.875274658203125
    10. '    ' → logprob: -14.000274658203125

Token 257: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.7167064547538757
    2. ' u' → logprob: -0.7167064547538757
    3. ' node' → logprob: -4.216706275939941
    4. 'node' → logprob: -5.216706275939941
    5. ' current' → logprob: -6.716706275939941
    6. 'v' → logprob: -7.091706275939941
    7. ' v' → logprob: -7.341706275939941
    8. 'current' → logprob: -8.216706275939941
    9. '   ' → logprob: -8.966706275939941
    10. 'cur' → logprob: -11.341706275939941

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022545099258423
    2. '=' → logprob: -1.9102253913879395
    3. '=q' → logprob: -13.785225868225098
    4. ' ' → logprob: -15.910225868225098
    5. '   ' → logprob: -16.03522491455078
    6. ')' → logprob: -17.41022491455078
    7. ' =
' → logprob: -17.41022491455078
    8. ',' → logprob: -17.53522491455078
    9. '    ' → logprob: -18.53522491455078
    10. '	' → logprob: -19.16022491455078

Token 259: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5759395956993103
    2. ' q' → logprob: -0.8259395956993103
    3. '	q' → logprob: -15.825939178466797
    4. '   ' → logprob: -17.450939178466797
    5. 'queue' → logprob: -18.075939178466797
    6. '
' → logprob: -18.450939178466797
    7. ' ' → logprob: -18.575939178466797
    8. '=q' → logprob: -18.950939178466797
    9. '    ' → logprob: -19.450939178466797
    10. ' ' → logprob: -19.700939178466797

Token 260: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -9.901345038088039e-05
    2. '.' → logprob: -9.750099182128906
    3. '.pop' → logprob: -10.125099182128906
    4. '   ' → logprob: -15.250099182128906
    5. ' .' → logprob: -15.250099182128906
    6. 'p' → logprob: -16.000099182128906
    7. '.dequeue' → logprob: -17.500099182128906
    8. ').' → logprob: -17.625099182128906
    9. '].' → logprob: -18.375099182128906
    10. ' p' → logprob: -19.125099182128906

Token 261: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.023284032940864563
    2. 'op' → logprob: -3.7732839584350586
    3. 'opl' → logprob: -10.773283958435059
    4. 'ople' → logprob: -11.023283958435059
    5. 'opt' → logprob: -14.773283958435059
    6. 'opf' → logprob: -14.898283958435059
    7. 'opup' → logprob: -16.023284912109375
    8. 'oplevel' → logprob: -16.148284912109375
    9. 'оп' → logprob: -16.898284912109375
    10. 'o' → logprob: -16.898284912109375

Token 262: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5973646640777588
    2. '()
' → logprob: -1.3473646640777588
    3. ')' → logprob: -1.9723646640777588
    4. ')
' → logprob: -3.347364664077759
    5. '       ' → logprob: -4.34736442565918
    6. '
' → logprob: -6.59736442565918
    7. '   ' → logprob: -7.34736442565918
    8. '<|end|>' → logprob: -8.84736442565918
    9. '(' → logprob: -9.47236442565918
    10. '```' → logprob: -9.59736442565918

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004657256882637739
    2. ' for' → logprob: -5.50465726852417
    3. 'for' → logprob: -7.50465726852417
    4. '        
' → logprob: -11.504656791687012
    5. '
' → logprob: -12.004656791687012
    6. '   ' → logprob: -12.504656791687012
    7. '<|end|>' → logprob: -12.629656791687012
    8. '           ' → logprob: -12.754656791687012
    9. ',' → logprob: -14.879656791687012
    10. ' 
' → logprob: -15.254656791687012

Token 264: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3138560652732849
    2. ' for' → logprob: -1.3138561248779297
    3. '       ' → logprob: -7.43885612487793
    4. '   ' → logprob: -12.68885612487793
    5. '
' → logprob: -13.68885612487793
    6. '           ' → logprob: -14.31385612487793
    7. '```' → logprob: -14.81385612487793
    8. '        
' → logprob: -15.18885612487793
    9. '	for' → logprob: -15.31385612487793
    10. ' ' → logprob: -15.81385612487793

Token 265: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014163863845169544
    2. ' v' → logprob: -4.264163970947266
    3. 'w' → logprob: -15.514163970947266
    4. '	v' → logprob: -15.889163970947266
    5. ' w' → logprob: -19.264163970947266
    6. '_v' → logprob: -19.514163970947266
    7. ',v' → logprob: -19.639163970947266
    8. '(v' → logprob: -20.014163970947266
    9. 'vw' → logprob: -20.889163970947266
    10. '
' → logprob: -20.889163970947266

Token 266: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019306590547785163
    2. 'in' → logprob: -6.2519307136535645
    3. ' ' → logprob: -13.376930236816406
    4. '	in' → logprob: -14.751930236816406
    5. ' ' → logprob: -17.376930236816406
    6. ' ,' → logprob: -17.626930236816406
    7. '  ' → logprob: -18.001930236816406
    8. '    ' → logprob: -18.251930236816406
    9. '<|end|>' → logprob: -18.376930236816406
    10. ',' → logprob: -18.626930236816406

Token 267: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.023246178403496742
    2. ' graph' → logprob: -3.7732462882995605
    3. '(graph' → logprob: -14.273245811462402
    4. '	graph' → logprob: -16.02324676513672
    5. '_graph' → logprob: -19.64824676513672
    6. 'raph' → logprob: -19.89824676513672
    7. '.graph' → logprob: -20.89824676513672
    8. ' ' → logprob: -21.14824676513672
    9. 'graphql' → logprob: -21.27324676513672
    10. 'Graph' → logprob: -22.64824676513672

Token 268: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.320199877838604e-07
    2. 'u' → logprob: -15.125
    3. '[' → logprob: -15.875
    4. '(u' → logprob: -20.125
    5. '	u' → logprob: -20.875
    6. ' u' → logprob: -20.875
    7. '   ' → logprob: -22.25
    8. ',u' → logprob: -22.375
    9. '<u' → logprob: -22.5
    10. ' [' → logprob: -22.625

Token 269: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.050513122230768204
    2. ':' → logprob: -3.1755130290985107
    3. ']' → logprob: -5.30051326751709
    4. '):' → logprob: -6.55051326751709
    5. ']:
' → logprob: -7.05051326751709
    6. '   ' → logprob: -9.55051326751709
    7. '}:' → logprob: -10.42551326751709
    8. '>:' → logprob: -10.92551326751709
    9. '       ' → logprob: -11.05051326751709
    10. ']:
' → logprob: -11.30051326751709

Token 270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004351555835455656
    2. ' if' → logprob: -5.754351615905762
    3. '       ' → logprob: -7.379351615905762
    4. 'if' → logprob: -8.754351615905762
    5. '               ' → logprob: -8.754351615905762
    6. ':' → logprob: -9.629351615905762
    7. '<|end|>' → logprob: -10.004351615905762
    8. ',' → logprob: -10.754351615905762
    9. '            
' → logprob: -10.754351615905762
    10. '	       ' → logprob: -11.129351615905762

Token 271: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6361843347549438
    2. ' if' → logprob: -0.7611843347549438
    3. 'if' (adapté à ' if') → logprob: -6.011184215545654
    4. '           ' → logprob: -7.011184215545654
    5. ' ' → logprob: -9.386184692382812
    6. '            ' → logprob: -10.761184692382812
    7. '<|end|>' → logprob: -10.761184692382812
    8. ' 
' → logprob: -11.261184692382812
    9. '                
' → logprob: -11.386184692382812
    10. '   ' → logprob: -11.636184692382812

Token 272: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.01815076172351837
    2. 'dist' → logprob: -4.018150806427002
    3. '(dist' → logprob: -14.643150329589844
    4. '	dist' → logprob: -14.893150329589844
    5. '_dist' → logprob: -17.268150329589844
    6. 'Dist' → logprob: -18.393150329589844
    7. ' ' → logprob: -18.518150329589844
    8. '   ' → logprob: -18.643150329589844
    9. '.dist' → logprob: -19.143150329589844
    10. ' ' → logprob: -19.768150329589844

Token 273: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -16.5
    3. '[u' → logprob: -18.25
    4. ' v' → logprob: -20.125
    5. '[' → logprob: -20.375
    6. ' [' → logprob: -20.625
    7. '<v' → logprob: -21.0
    8. '	v' → logprob: -21.375
    9. '[val' → logprob: -22.25
    10. '```' → logprob: -22.25

Token 274: ']' (ID: 60)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.026687119156122208
    2. ']' → logprob: -3.9016871452331543
    3. '[u' → logprob: -5.401687145233154
    4. '[' → logprob: -6.776687145233154
    5. ']==' → logprob: -8.526686668395996
    6. '==' → logprob: -9.026686668395996
    7. ' ==' → logprob: -9.651686668395996
    8. '==-' → logprob: -9.776686668395996
    9. ' ]' → logprob: -11.401686668395996
    10. '```' → logprob: -11.901686668395996

Token 275: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1861097365617752
    2. '==-' → logprob: -2.311109781265259
    3. '==' → logprob: -2.686109781265259
    4. '<' → logprob: -6.68610954284668
    5. '[' → logprob: -7.56110954284668
    6. ' <' → logprob: -7.81110954284668
    7. ' ' → logprob: -8.81110954284668
    8. ']==' → logprob: -9.56110954284668
    9. '=' → logprob: -10.18610954284668
    10. ')' → logprob: -10.43610954284668

Token 276: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009115827269852161
    2. ' -' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.250911712646484
    4. ' ' → logprob: -18.125911712646484
    5. '−' → logprob: -20.500911712646484
    6. '  ' → logprob: -20.625911712646484
    7. '```' → logprob: -20.750911712646484
    8. '	' → logprob: -21.125911712646484
    9. ''-' → logprob: -22.750911712646484
    10. '–' → logprob: -23.125911712646484

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.000001907348633
    4. '```' → logprob: -18.250001907348633
    5. '<|end|>' → logprob: -18.937501907348633
    6. '  ' → logprob: -19.000001907348633
    7. '0' → logprob: -19.500001907348633
    8. '

' → logprob: -19.562501907348633
    9. ',' → logprob: -19.687501907348633
    10. '১' → logprob: -20.062501907348633

Token 278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5764943957328796
    2. ':
' → logprob: -0.8264943957328796
    3. '):
' → logprob: -8.076494216918945
    4. ' :
' → logprob: -9.201494216918945
    5. '               ' → logprob: -9.451494216918945
    6. '           ' → logprob: -10.701494216918945
    7. '):' → logprob: -11.201494216918945
    8. ' :' → logprob: -11.576494216918945
    9. ':
' → logprob: -12.201494216918945
    10. ':

' → logprob: -12.326494216918945

Token 279: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006526283104903996
    2. ':
' → logprob: -7.75065279006958
    3. ':' → logprob: -8.875652313232422
    4. '           ' → logprob: -10.250652313232422
    5. '                   ' → logprob: -11.250652313232422
    6. ' :
' → logprob: -11.375652313232422
    7. '):
' → logprob: -11.875652313232422
    8. '              ' → logprob: -13.000652313232422
    9. ' :' → logprob: -13.250652313232422
    10. ',' → logprob: -13.500652313232422

Token 280: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.010194452479481697
    2. 'dist' (adapté à ' dist') → logprob: -4.635194301605225
    3. '                   ' → logprob: -8.385194778442383
    4. '               ' → logprob: -8.510194778442383
    5. '	dist' → logprob: -12.510194778442383
    6. '                ' → logprob: -13.010194778442383
    7. '                       ' → logprob: -13.885194778442383
    8. '(dist' → logprob: -14.760194778442383
    9. '_dist' → logprob: -15.135194778442383
    10. '           ' → logprob: -15.135194778442383

Token 281: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.500000953674316
    3. 'v' → logprob: -15.750000953674316
    4. ' v' → logprob: -16.625
    5. ' [' → logprob: -17.25
    6. '[u' → logprob: -17.375
    7. '=v' → logprob: -17.875
    8. '<v' → logprob: -17.875
    9. '```' → logprob: -19.0
    10. '[
' → logprob: -19.375

Token 282: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002343184780329466
    2. ' =' → logprob: -6.25234317779541
    3. ' ]' → logprob: -8.75234317779541
    4. ']=' → logprob: -8.87734317779541
    5. '=' → logprob: -9.25234317779541
    6. '[v' → logprob: -11.50234317779541
    7. ')' → logprob: -12.12734317779541
    8. '[u' → logprob: -13.12734317779541
    9. '[' → logprob: -13.50234317779541
    10. '=v' → logprob: -14.37734317779541

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858794063329697
    2. '=' → logprob: -3.0485880374908447
    3. ' =
' → logprob: -14.923587799072266
    4. ' ' → logprob: -15.798587799072266
    5. ']' → logprob: -17.548587799072266
    6. ')' → logprob: -17.548587799072266
    7. '=
' → logprob: -17.548587799072266
    8. '=v' → logprob: -18.423587799072266
    9. '.' → logprob: -19.423587799072266
    10. '```' → logprob: -19.798587799072266

Token 284: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07888989895582199
    2. ' dist' → logprob: -2.578889846801758
    3. '	dist' → logprob: -16.078889846801758
    4. '   ' → logprob: -17.078889846801758
    5. '(dist' → logprob: -18.203889846801758
    6. '_dist' → logprob: -18.453889846801758
    7. 'd' → logprob: -19.328889846801758
    8. 'Dist' → logprob: -19.578889846801758
    9. ' ' → logprob: -19.578889846801758
    10. '.dist' → logprob: -20.078889846801758

Token 285: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.531315314830863e-06
    2. 'u' → logprob: -12.625003814697266
    3. '[' → logprob: -15.750003814697266
    4. '[v' → logprob: -16.875003814697266
    5. '<u' → logprob: -18.250003814697266
    6. '	u' → logprob: -18.250003814697266
    7. ' u' → logprob: -18.250003814697266
    8. ' [' → logprob: -18.375003814697266
    9. '```' → logprob: -18.625003814697266
    10. '[
' → logprob: -19.250003814697266

Token 286: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07554267346858978
    2. ']+' → logprob: -2.825542688369751
    3. '[u' → logprob: -4.825542449951172
    4. '+' → logprob: -5.450542449951172
    5. ' +' → logprob: -6.950542449951172
    6. ' ' → logprob: -9.450542449951172
    7. ' ]' → logprob: -9.700542449951172
    8. '[' → logprob: -11.200542449951172
    9. '[v' → logprob: -11.325542449951172
    10. '```' → logprob: -11.700542449951172

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.250009536743164
    4. '```' → logprob: -18.625009536743164
    5. '
' → logprob: -19.875009536743164
    6. '  ' → logprob: -21.000009536743164
    7. '[' → logprob: -22.062509536743164
    8. '=' → logprob: -22.312509536743164
    9. '

' → logprob: -22.375009536743164
    10. ',' → logprob: -22.625009536743164

Token 288: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.790129555156454e-05
    2. 'q' → logprob: -11.375067710876465
    3. '              ' → logprob: -11.500067710876465
    4. '<|end|>' → logprob: -11.625067710876465
    5. ' q' → logprob: -11.750067710876465
    6. '                   ' → logprob: -11.875067710876465
    7. '           ' → logprob: -12.250067710876465
    8. ',' → logprob: -12.500067710876465
    9. '                ' → logprob: -12.625067710876465
    10. '
' → logprob: -12.625067710876465

Token 289: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.371605948312208e-05
    2. 'q' → logprob: -10.250053405761719
    3. ' q' → logprob: -11.500053405761719
    4. '              ' → logprob: -12.375053405761719
    5. '                   ' → logprob: -13.625053405761719
    6. '           ' → logprob: -14.125053405761719
    7. '                ' → logprob: -14.500053405761719
    8. '			' → logprob: -14.875053405761719
    9. '```' → logprob: -15.375053405761719
    10. '       ' → logprob: -15.750053405761719

Token 290: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.0009159822366200387
    2. ' q' → logprob: -7.000916004180908
    3. '               ' → logprob: -12.37591552734375
    4. '                   ' → logprob: -15.75091552734375
    5. '	q' → logprob: -16.50091552734375
    6. '
' → logprob: -17.12591552734375
    7. '   ' → logprob: -17.50091552734375
    8. '```' → logprob: -17.87591552734375
    9. '                ' → logprob: -18.37591552734375
    10. '_q' → logprob: -18.50091552734375

Token 291: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.081584716506768e-05
    2. '.' → logprob: -10.875020980834961
    3. 'append' → logprob: -13.875020980834961
    4. '.enqueue' → logprob: -14.750020980834961
    5. '.extend' → logprob: -15.750020980834961
    6. '.app' → logprob: -15.750020980834961
    7. '.put' → logprob: -16.62502098083496
    8. '.Append' → logprob: -17.37502098083496
    9. '_append' → logprob: -17.87502098083496
    10. '```' → logprob: -18.00002098083496

Token 292: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.125015258789062
    3. '(
' → logprob: -16.125015258789062
    4. ' (' → logprob: -18.250015258789062
    5. '(s' → logprob: -18.625015258789062
    6. '((' → logprob: -19.000015258789062
    7. 'v' → logprob: -19.750015258789062
    8. '(

' → logprob: -20.875015258789062
    9. '()' → logprob: -21.000015258789062
    10. '(u' → logprob: -21.000015258789062

Token 293: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5941604690160602e-05
    2. ')
' → logprob: -10.625025749206543
    3. ')v' → logprob: -13.750025749206543
    4. ' )' → logprob: -15.625025749206543
    5. '<|end|>' → logprob: -15.750025749206543
    6. '               ' → logprob: -16.75002670288086
    7. ')return' → logprob: -17.12502670288086
    8. '),' → logprob: -18.25002670288086
    9. ')view' → logprob: -18.50002670288086
    10. ')\
' → logprob: -18.50002670288086

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02888307347893715
    2. 'return' → logprob: -3.6538829803466797
    3. ' return' → logprob: -6.02888298034668
    4. '```' → logprob: -9.90388298034668
    5. '	return' → logprob: -10.65388298034668
    6. '
' → logprob: -10.65388298034668
    7. '       ' → logprob: -11.02888298034668
    8. ')' → logprob: -11.40388298034668
    9. ':return' → logprob: -11.40388298034668
    10. '    
' → logprob: -11.52888298034668

Token 295: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024755099788308144
    2. '   ' → logprob: -4.024755001068115
    3. ' return' → logprob: -5.024755001068115
    4. '	return' → logprob: -12.274755477905273
    5. ' ' → logprob: -13.149755477905273
    6. '       ' → logprob: -13.899755477905273
    7. 'eturn' → logprob: -13.899755477905273
    8. ':return' → logprob: -14.399755477905273
    9. '  ' → logprob: -14.774755477905273
    10. '```' → logprob: -15.149755477905273

Token 296: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001170225441455841
    2. ' dist' → logprob: -6.7511701583862305
    3. '(dist' → logprob: -18.501171112060547
    4. '	dist' → logprob: -19.876171112060547
    5. '_dist' → logprob: -20.751171112060547
    6. '[' → logprob: -22.626171112060547
    7. 'Dist' → logprob: -23.001171112060547
    8. 'diff' → logprob: -23.751171112060547
    9. 'd' → logprob: -24.001171112060547
    10. '.dist' → logprob: -24.001171112060547

Token 297: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03647882491350174
    2. '<|end|>' → logprob: -3.7864787578582764
    3. '
' → logprob: -4.6614789962768555
    4. '

' → logprob: -5.6614789962768555
    5. '<|end|>' → logprob: -9.536478996276855
    6. '(' → logprob: -10.161478996276855
    7. '```' → logprob: -10.286478996276855
    8. ' def' → logprob: -10.911478996276855
    9. '(def' → logprob: -11.161478996276855
    10. '(
' → logprob: -11.536478996276855

Token 298: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.8889261304575484e-06
    2. '
' → logprob: -12.875003814697266
    3. '<|end|>' → logprob: -14.125003814697266
    4. '

' → logprob: -15.750003814697266
    5. ' def' → logprob: -16.125003814697266
    6. 'import' → logprob: -16.375003814697266
    7. '\' → logprob: -16.875003814697266
    8. '```' → logprob: -17.000003814697266
    9. '  
' → logprob: -17.500003814697266
    10. 'ndef' → logprob: -18.000003814697266

Token 299: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03537766635417938
    2. ' find' → logprob: -4.160377502441406
    3. 'main' → logprob: -4.410377502441406
    4. ' can' → logprob: -5.785377502441406
    5. ' solve' → logprob: -6.410377502441406
    6. ' is' → logprob: -7.035377502441406
    7. 'solve' → logprob: -8.160377502441406
    8. ' connected' → logprob: -8.410377502441406
    9. 'find' → logprob: -8.660377502441406
    10. ' count' → logprob: -8.660377502441406

Token 300: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.051066520740278e-05
    2. '(' → logprob: -10.375060081481934
    3. ' ():' → logprob: -11.250060081481934
    4. '():
' → logprob: -11.375060081481934
    5. '()' → logprob: -12.375060081481934
    6. '(":' → logprob: -15.625060081481934
    7. '(:' → logprob: -16.25006103515625
    8. '_' → logprob: -16.87506103515625
    9. '():
' → logprob: -17.00006103515625
    10. '()>' → logprob: -17.12506103515625

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05040964484214783
    2. ' import' → logprob: -3.4254095554351807
    3. ' n' → logprob: -4.30040979385376
    4. 'n' → logprob: -6.92540979385376
    5. ' input' → logprob: -6.92540979385376
    6. 'import' → logprob: -7.05040979385376
    7. ' readline' → logprob: -9.550409317016602
    8. ' try' → logprob: -10.925409317016602
    9. ' data' → logprob: -11.050409317016602
    10. '(' → logprob: -11.300409317016602

Token 302: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3596603274345398
    2. ' input' → logprob: -1.4846603870391846
    3. ' import' → logprob: -3.1096603870391846
    4. 'n' → logprob: -3.6096603870391846
    5. '   ' → logprob: -6.4846601486206055
    6. ' t' → logprob: -6.9846601486206055
    7. 'input' (adapté à ' input') → logprob: -7.2346601486206055
    8. 'import' → logprob: -7.6096601486206055
    9. ' data' → logprob: -9.609660148620605
    10. 't' → logprob: -10.234660148620605

Token 303: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011235270649194717
    2. '_line' → logprob: -5.261235237121582
    3. '_data' → logprob: -5.386235237121582
    4. ' =' → logprob: -7.886235237121582
    5. '_lines' → logprob: -7.886235237121582
    6. '_' → logprob: -8.761235237121582
    7. '=' → logprob: -8.886235237121582
    8. '(' → logprob: -9.011235237121582
    9. '().' → logprob: -9.636235237121582
    10. 'data' → logprob: -10.011235237121582

Token 304: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31350430846214294
    2. '=' → logprob: -1.3135043382644653
    3. '()' → logprob: -8.438504219055176
    4. '_' → logprob: -12.063504219055176
    5. '=[]' → logprob: -12.063504219055176
    6. '=sys' → logprob: -12.563504219055176
    7. '[' → logprob: -12.813504219055176
    8. '   ' → logprob: -13.563504219055176
    9. '[]' → logprob: -13.688504219055176
    10. '(' → logprob: -13.688504219055176

Token 305: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1269282102584839
    2. ' sys' → logprob: -2.1269283294677734
    3. '[' → logprob: -16.376928329467773
    4. '	sys' → logprob: -17.126928329467773
    5. '=sys' → logprob: -17.251928329467773
    6. '(sys' → logprob: -18.126928329467773
    7. ' [' → logprob: -18.751928329467773
    8. 'list' → logprob: -20.876928329467773
    9. ' ' → logprob: -21.501928329467773
    10. 'input' → logprob: -21.501928329467773

Token 306: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.482821431243792e-05
    2. '.' → logprob: -9.50008487701416
    3. '.argv' → logprob: -12.25008487701416
    4. '.stdout' → logprob: -13.37508487701416
    5. 'stdin' → logprob: -13.62508487701416
    6. '.readline' → logprob: -13.62508487701416
    7. '.std' → logprob: -14.25008487701416
    8. '().' → logprob: -15.62508487701416
    9. '.input' → logprob: -16.375083923339844
    10. '(stdin' → logprob: -16.750083923339844

Token 307: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.5841255187988281
    2. '.readlines' → logprob: -0.8341255187988281
    3. '.readline' → logprob: -4.834125518798828
    4. 'read' → logprob: -8.584125518798828
    5. '.' → logprob: -11.459125518798828
    6. '.buffer' → logprob: -14.334125518798828
    7. '.stdin' → logprob: -15.334125518798828
    8. '_read' → logprob: -15.334125518798828
    9. '.Read' → logprob: -16.834125518798828
    10. ' .' → logprob: -16.959125518798828

Token 308: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002477796748280525
    2. '()' → logprob: -6.002477645874023
    3. '(' → logprob: -13.502477645874023
    4. ' ().' → logprob: -14.752477645874023
    5. '()
' → logprob: -15.627477645874023
    6. 'lines' → logprob: -16.252477645874023
    7. '_lines' → logprob: -16.752477645874023
    8. '()

' → logprob: -16.877477645874023
    9. '()`' → logprob: -17.377477645874023
    10. '()\' → logprob: -17.627477645874023

Token 309: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.575975239276886
    2. 'strip' → logprob: -0.825975239276886
    3. 'decode' → logprob: -10.32597541809082
    4. 'rstrip' → logprob: -13.32597541809082
    5. 'read' → logprob: -13.70097541809082
    6. 'replace' → logprob: -15.70097541809082
    7. ' split' → logprob: -16.45097541809082
    8. '(split' → logprob: -17.57597541809082
    9. '```' → logprob: -18.32597541809082
    10. ' strip' → logprob: -18.45097541809082

Token 310: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0052354102954268456
    2. '()' → logprob: -5.255235195159912
    3. '('' → logprob: -14.38023567199707
    4. '(' → logprob: -15.00523567199707
    5. 'split' → logprob: -15.13023567199707
    6. '().'' → logprob: -15.38023567199707
    7. '()
' → logprob: -16.13023567199707
    8. ' ().' → logprob: -16.88023567199707
    9. '()\' → logprob: -17.38023567199707
    10. '()

' → logprob: -17.63023567199707

Token 311: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.375
    3. '(split' → logprob: -17.75
    4. 'strip' → logprob: -20.75
    5. 'decode' → logprob: -21.5
    6. 'spl' → logprob: -21.75
    7. '```' → logprob: -22.0
    8. 'plit' → logprob: -22.25
    9. 'rstrip' → logprob: -22.375
    10. '.split' → logprob: -22.625

Token 312: '('\' (ID: 24345)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.7036766409873962
    2. '('\' → logprob: -0.7036766409873962
    3. '(' → logprob: -4.953676700592041
    4. '()' → logprob: -6.078676700592041
    5. 'lines' → logprob: -7.078676700592041
    6. '("\' → logprob: -8.828676223754883
    7. '("("' → logprob: -9.078676223754883
    8. '("' → logprob: -11.328676223754883
    9. '(\' → logprob: -12.578676223754883
    10. '(',' → logprob: -12.953676223754883

Token 313: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.080963092041202e-06
    2. '\n' → logprob: -12.250004768371582
    3. '
' → logprob: -16.6250057220459
    4. 'lines' → logprob: -17.8750057220459
    5. ' n' → logprob: -18.1250057220459
    6. '\' → logprob: -19.0000057220459
    7. 'newline' → logprob: -19.3750057220459
    8. ''\' → logprob: -19.6250057220459
    9. '```' → logprob: -19.8750057220459
    10. 'ndef' → logprob: -20.0000057220459

Token 314: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011346656829118729
    2. '')' → logprob: -4.511346817016602
    3. ')
' → logprob: -8.386346817016602
    4. '   ' → logprob: -10.011346817016602
    5. '')
' → logprob: -10.761346817016602
    6. '")' → logprob: -13.011346817016602
    7. ')
' → logprob: -14.386346817016602
    8. '`)' → logprob: -14.636346817016602
    9. ' )' → logprob: -14.761346817016602
    10. ']' → logprob: -15.136346817016602

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5611478090286255
    2. ' n' → logprob: -0.9361478090286255
    3. 'n' → logprob: -3.311147689819336
    4. ' for' → logprob: -9.061147689819336
    5. '    ' → logprob: -9.436147689819336
    6. ' i' → logprob: -9.436147689819336
    7. ' N' → logprob: -9.436147689819336
    8. 'num' → logprob: -9.686147689819336
    9. ' num' → logprob: -9.686147689819336
    10. 'N' → logprob: -10.186147689819336

Token 316: ' idx' (ID: 14016)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07925107330083847
    2. 't' → logprob: -2.7042510509490967
    3. 'q' → logprob: -5.954251289367676
    4. 'N' → logprob: -6.079251289367676
    5. 'T' → logprob: -6.079251289367676
    6. 'num' → logprob: -7.204251289367676
    7. '   ' → logprob: -7.704251289367676
    8. 'k' → logprob: -7.829251289367676
    9. 'Q' → logprob: -8.454251289367676
    10. 'm' → logprob: -9.329251289367676

Token 317: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197318062186241
    2. '=' → logprob: -2.8119730949401855
    3. ' +=' → logprob: -13.061973571777344
    4. ' ' → logprob: -13.436973571777344
    5. '_' → logprob: -14.061973571777344
    6. ')' → logprob: -15.311973571777344
    7. ' =
' → logprob: -15.436973571777344
    8. ' =)' → logprob: -16.311973571777344
    9. ' ' → logprob: -16.436973571777344
    10. '  ' → logprob: -16.436973571777344

Token 318: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017004783148877323
    2. ' ' → logprob: -8.75016975402832
    3. '1' → logprob: -11.37516975402832
    4. '   ' → logprob: -18.12516975402832
    5. '```' → logprob: -19.93766975402832
    6. '2' → logprob: -20.06266975402832
    7. '  ' → logprob: -20.31266975402832
    8. 'int' → logprob: -20.56266975402832
    9. '۰' → logprob: -20.56266975402832
    10. '[' → logprob: -20.93766975402832

Token 319: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.3464544432936236e-05
    2. '1' → logprob: -10.125043869018555
    3. ' ' → logprob: -12.625043869018555
    4. '   ' → logprob: -18.250043869018555
    5. '```' → logprob: -19.625043869018555
    6. '=' → logprob: -20.937543869018555
    7. '  ' → logprob: -21.000043869018555
    8. '2' → logprob: -21.062543869018555
    9. '[' → logprob: -21.250043869018555
    10. 'int' → logprob: -21.437543869018555

Token 320: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05997223034501076
    2. 'n' → logprob: -3.0599722862243652
    3. ' n' → logprob: -4.559972286224365
    4. '
' → logprob: -8.184971809387207
    5. 'num' → logprob: -8.559971809387207
    6. 'N' → logprob: -9.184971809387207
    7. 't' → logprob: -9.684971809387207
    8. '    
' → logprob: -10.059971809387207
    9. '	n' → logprob: -10.559971809387207
    10. 'count' → logprob: -10.684971809387207

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.371672660112381
    2. ' n' → logprob: -1.4966726303100586
    3. 'n' → logprob: -2.4966726303100586
    4. ' N' → logprob: -6.246672630310059
    5. ' T' → logprob: -6.996672630310059
    6. ' t' → logprob: -7.871672630310059
    7. 'N' → logprob: -8.121672630310059
    8. 't' → logprob: -9.121672630310059
    9. '    
' → logprob: -9.246672630310059
    10. '    ' → logprob: -9.496672630310059

Token 322: ' while' (ID: 2049)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4007524847984314
    2. 'T' → logprob: -1.4007525444030762
    3. 'n' → logprob: -3.400752544403076
    4. ' t' → logprob: -3.775752544403076
    5. ' T' → logprob: -4.150752544403076
    6. '   ' → logprob: -4.900752544403076
    7. 'q' → logprob: -6.900752544403076
    8. 'num' → logprob: -6.900752544403076
    9. ' n' → logprob: -7.025752544403076
    10. 'while' (adapté à ' while') → logprob: -7.275752544403076

Token 323: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.31522178649902344
    2. ' True' → logprob: -1.3152217864990234
    3. 'idx' → logprob: -6.940221786499023
    4. 'True' → logprob: -6.940221786499023
    5. ' ' → logprob: -10.940221786499023
    6. '	idx' → logprob: -13.065221786499023
    7. ' len' → logprob: -13.565221786499023
    8. '(idx' → logprob: -15.315221786499023
    9. ' ' → logprob: -15.565221786499023
    10. '  ' → logprob: -15.815221786499023

Token 324: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0550713948905468
    2. ':
' → logprob: -2.9300713539123535
    3. '   ' → logprob: -8.930071830749512
    4. '       ' → logprob: -10.555071830749512
    5. ',' → logprob: -11.555071830749512
    6. ' and' → logprob: -11.680071830749512
    7. '):
' → logprob: -12.430071830749512
    8. ' :' → logprob: -13.055071830749512
    9. '):' → logprob: -13.305071830749512
    10. ':

' → logprob: -13.680071830749512

Token 325: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17554470896720886
    2. '       ' → logprob: -2.4255447387695312
    3. ' if' → logprob: -2.6755447387695312
    4. 'if' → logprob: -6.175544738769531
    5. ' try' → logprob: -6.675544738769531
    6. 'try' → logprob: -8.800544738769531
    7. '    ' → logprob: -9.425544738769531
    8. '   ' → logprob: -10.175544738769531
    9. ' n' → logprob: -10.425544738769531
    10. '```' → logprob: -11.425544738769531

Token 326: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5815950632095337
    2. 'if' (adapté à ' if') → logprob: -1.5815950632095337
    3. ' if' → logprob: -1.7065950632095337
    4. ' n' → logprob: -3.706594944000244
    5. '   ' → logprob: -4.456594944000244
    6. 'line' → logprob: -4.706594944000244
    7. ' line' → logprob: -4.956594944000244
    8. 'N' → logprob: -6.706594944000244
    9. '       ' → logprob: -9.081595420837402
    10. 'try' → logprob: -9.331595420837402

Token 327: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.029767150059342384
    2. 'idx' → logprob: -3.5297670364379883
    3. '	idx' → logprob: -11.529767036437988
    4. '_idx' → logprob: -13.279767036437988
    5. '   ' → logprob: -13.529767036437988
    6. ' ' → logprob: -13.779767036437988
    7. ' not' → logprob: -14.029767036437988
    8. '[idx' → logprob: -14.029767036437988
    9. '(idx' → logprob: -14.154767036437988
    10. '  ' → logprob: -16.154767990112305

Token 328: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2014920711517334
    2. ' >=' → logprob: -1.7014920711517334
    3. '==' → logprob: -9.826492309570312
    4. ']>=' → logprob: -11.326492309570312
    5. ')>=' → logprob: -11.951492309570312
    6. ' ' → logprob: -12.701492309570312
    7. ' ==' → logprob: -12.951492309570312
    8. '=' → logprob: -14.701492309570312
    9. '≥' → logprob: -15.576492309570312
    10. '>' → logprob: -16.201492309570312

Token 329: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.306760805164231e-05
    2. ' len' → logprob: -11.25001335144043
    3. '(len' → logprob: -19.87501335144043
    4. '   ' → logprob: -20.00001335144043
    5. '	len' → logprob: -21.87501335144043
    6. 'length' → logprob: -22.75001335144043
    7. '
' → logprob: -22.75001335144043
    8. '=len' → logprob: -22.75001335144043
    9. ',len' → logprob: -22.87501335144043
    10. '[len' → logprob: -23.25001335144043

Token 330: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.3199920178740285e-05
    2. 'input' → logprob: -11.250022888183594
    3. '(' → logprob: -12.000022888183594
    4. ' (' → logprob: -13.000022888183594
    5. ' input' → logprob: -13.375022888183594
    6. '(
' → logprob: -15.500022888183594
    7. '=input' → logprob: -17.875022888183594
    8. ',input' → logprob: -18.375022888183594
    9. '(output' → logprob: -20.000022888183594
    10. '(sys' → logprob: -20.500022888183594

Token 331: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.125
    3. ')' → logprob: -16.5
    4. '_)' → logprob: -17.875
    5. '_LINES' → logprob: -18.0
    6. ')_' → logprob: -18.5
    7. '_
' → logprob: -18.625
    8. 'lines' → logprob: -18.75
    9. '_line' → logprob: -19.125
    10. '):
' → logprob: -19.75

Token 332: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07891909033060074
    2. ':
' → logprob: -3.0789191722869873
    3. ' or' → logprob: -3.5789191722869873
    4. '):' → logprob: -6.703918933868408
    5. '   ' → logprob: -8.078919410705566
    6. '):
' → logprob: -8.828919410705566
    7. ')' → logprob: -8.828919410705566
    8. '       ' → logprob: -10.078919410705566
    9. ':return' → logprob: -10.203919410705566
    10. ' and' → logprob: -10.578919410705566

Token 333: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4746876657009125
    2. '           ' → logprob: -0.9746876955032349
    3. '   ' → logprob: -7.474687576293945
    4. ' break' → logprob: -11.599687576293945
    5. 'break' → logprob: -12.224687576293945
    6. ':' → logprob: -12.349687576293945
    7. '     ' → logprob: -12.474687576293945
    8. '	   ' → logprob: -12.474687576293945
    9. '		' → logprob: -12.849687576293945
    10. ' ' → logprob: -12.974687576293945

Token 334: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3019346296787262
    2. '           ' → logprob: -2.0519347190856934
    3. 'return' → logprob: -2.5519347190856934
    4. ' break' → logprob: -3.3019347190856934
    5. '       ' → logprob: -4.176934719085693
    6. ' return' → logprob: -6.426934719085693
    7. '	break' → logprob: -8.551934242248535
    8. '               ' → logprob: -9.176934242248535
    9. '   ' → logprob: -9.426934242248535
    10. '
' → logprob: -10.676934242248535

Token 335: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0076981945894658566
    2. '   ' → logprob: -5.382698059082031
    3. '        
' → logprob: -6.382698059082031
    4. '    
' → logprob: -7.507698059082031
    5. '  
' → logprob: -8.257698059082031
    6. '\n' → logprob: -8.382698059082031
    7. '
' → logprob: -8.632698059082031
    8. ' ' → logprob: -10.007698059082031
    9. '<|end|>' → logprob: -10.882698059082031
    10. '   
' → logprob: -11.132698059082031

Token 336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06828471273183823
    2. '        
' → logprob: -3.068284749984741
    3. '    
' → logprob: -5.068284511566162
    4. '
' → logprob: -5.193284511566162
    5. '  
' → logprob: -5.818284511566162
    6. '   ' → logprob: -6.193284511566162
    7. ' 
' → logprob: -6.318284511566162
    8. '   
' → logprob: -8.44328498840332
    9. '\n' → logprob: -9.19328498840332
    10. '       
' → logprob: -9.19328498840332

Token 337: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.5939527153968811
    2. ' n' → logprob: -0.8439527153968811
    3. '   ' → logprob: -4.218952655792236
    4. ' line' → logprob: -6.968952655792236
    5. '       ' → logprob: -7.343952655792236
    6. 'N' → logprob: -7.468952655792236
    7. 'line' → logprob: -7.968952655792236
    8. ' parts' → logprob: -8.718953132629395
    9. ' N' → logprob: -8.843953132629395
    10. 'm' → logprob: -10.218953132629395

Token 338: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869089186191559
    2. '=' → logprob: -1.1369088888168335
    3. '=int' → logprob: -11.136908531188965
    4. ' =
' → logprob: -11.511908531188965
    5. ' ' → logprob: -12.511908531188965
    6. ',' → logprob: -12.761908531188965
    7. '   ' → logprob: -12.886908531188965
    8. ')' → logprob: -13.886908531188965
    9. '=
' → logprob: -14.011908531188965
    10. '=line' → logprob: -14.261908531188965

Token 339: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931471824645996
    2. ' int' → logprob: -0.6931471824645996
    3. ' ' → logprob: -16.818147659301758
    4. '=int' → logprob: -17.693147659301758
    5. '[int' → logprob: -17.818147659301758
    6. '(int' → logprob: -18.193147659301758
    7. '	int' → logprob: -20.318147659301758
    8. '<int' → logprob: -20.943147659301758
    9. ':int' → logprob: -20.943147659301758
    10. ',int' → logprob: -21.068147659301758

Token 340: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0016669693868607283
    2. '(' → logprob: -6.501667022705078
    3. 'input' → logprob: -8.751667022705078
    4. ' (' → logprob: -12.251667022705078
    5. ' input' → logprob: -13.501667022705078
    6. '(
' → logprob: -15.751667022705078
    7. '('' → logprob: -17.001667022705078
    8. ')' → logprob: -18.376667022705078
    9. '=input' → logprob: -18.876667022705078
    10. '[input' → logprob: -19.126667022705078

Token 341: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.4498052223643754e-05
    2. 'lines' → logprob: -12.000014305114746
    3. 'Lines' → logprob: -12.250014305114746
    4. '(lines' → logprob: -13.250014305114746
    5. ')' → logprob: -15.000014305114746
    6. '[' → logprob: -15.125014305114746
    7. '(' → logprob: -15.500014305114746
    8. '(_' → logprob: -15.750014305114746
    9. '_line' → logprob: -15.875014305114746
    10. '_LINES' → logprob: -15.875014305114746

Token 342: '[idx' (ID: 25582)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0006810996565036476
    2. '])
' → logprob: -7.625680923461914
    3. '].' → logprob: -8.750680923461914
    4. ']);' → logprob: -11.000680923461914
    5. ' ])' → logprob: -11.500680923461914
    6. ']' → logprob: -12.750680923461914
    7. ')' → logprob: -13.250680923461914
    8. '.strip' → logprob: -13.500680923461914
    9. ''])' → logprob: -14.500680923461914
    10. '])-' → logprob: -14.625680923461914

Token 344: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 345: ' idx' (ID: 14016)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.32706934213638306
    2. ' idx' → logprob: -1.9520692825317383
    3. 'idx' (adapté à ' idx') → logprob: -2.2020692825317383
    4. 'if' → logprob: -3.7020692825317383
    5. '	idx' → logprob: -7.202069282531738
    6. '<|end|>' → logprob: -8.077069282531738
    7. '[idx' → logprob: -8.452069282531738
    8. '_idx' → logprob: -9.452069282531738
    9. '   ' → logprob: -9.577069282531738
    10. '       ' → logprob: -9.577069282531738

Token 346: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006365281995385885
    2. ' +=' → logprob: -5.1313652992248535
    3. '+' → logprob: -7.7563652992248535
    4. '=' → logprob: -12.131364822387695
    5. ']+=' → logprob: -13.006364822387695
    6. '+="' → logprob: -15.381364822387695
    7. '++' → logprob: -15.631364822387695
    8. '+='' → logprob: -15.881364822387695
    9. '```' → logprob: -15.881364822387695
    10. ')' → logprob: -16.131364822387695

Token 347: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '```' → logprob: -23.000045776367188
    4. '１' → logprob: -24.000045776367188
    5. '   ' → logprob: -24.125045776367188
    6. '
' → logprob: -24.375045776367188
    7. '+' → logprob: -25.500045776367188
    8. '۱' → logprob: -25.625045776367188
    9. '0' → logprob: -25.750045776367188
    10. '`' → logprob: -26.500045776367188

Token 348: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -23.5
    4. '１' → logprob: -24.25
    5. '0' → logprob: -25.125
    6. '   ' → logprob: -25.25
    7. '
' → logprob: -25.875
    8. '`' → logprob: -26.5
    9. '۱' → logprob: -26.625
    10. '১' → logprob: -27.125

Token 349: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022538481280207634
    2. ' if' → logprob: -3.897538423538208
    3. 'if' → logprob: -6.647538661956787
    4. '<|end|>' → logprob: -7.897538661956787
    5. '        
' → logprob: -9.022538185119629
    6. '	if' → logprob: -9.772538185119629
    7. '   ' → logprob: -9.772538185119629
    8. '	' → logprob: -10.647538185119629
    9. ' ' → logprob: -10.772538185119629
    10. '
' → logprob: -11.397538185119629

Token 350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004840095527470112
    2. ' if' → logprob: -5.879839897155762
    3. 'if' → logprob: -6.754839897155762
    4. '   ' → logprob: -8.254839897155762
    5. '        
' → logprob: -8.504839897155762
    6. '```' → logprob: -8.879839897155762
    7. '
' → logprob: -9.004839897155762
    8. '<|end|>' → logprob: -9.379839897155762
    9. '           ' → logprob: -11.254839897155762
    10. '	if' → logprob: -11.379839897155762

Token 351: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002213180996477604
    2. 'cir' → logprob: -6.127213001251221
    3. ' if' → logprob: -10.752213478088379
    4. '```' → logprob: -12.877213478088379
    5. '   ' → logprob: -14.002213478088379
    6. ' circles' → logprob: -14.252213478088379
    7. 'points' → logprob: -14.252213478088379
    8. 'circle' → logprob: -14.377213478088379
    9. '       ' → logprob: -14.502213478088379
    10. 'circ' → logprob: -14.627213478088379

Token 352: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31326213479042053
    2. 'n' → logprob: -1.3132621049880981
    3. '	n' → logprob: -15.438261985778809
    4. ' not' → logprob: -15.688261985778809
    5. '_n' → logprob: -17.813262939453125
    6. '(n' → logprob: -18.063262939453125
    7. ')n' → logprob: -18.063262939453125
    8. ' ' → logprob: -18.438262939453125
    9. '0' → logprob: -18.563262939453125
    10. '   ' → logprob: -18.563262939453125

Token 353: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759883522987366
    2. '==' → logprob: -0.8259883522987366
    3. '=' → logprob: -10.57598876953125
    4. ')==' → logprob: -12.07598876953125
    5. '0' → logprob: -12.32598876953125
    6. '===' → logprob: -13.07598876953125
    7. '<=' → logprob: -13.07598876953125
    8. ' ' → logprob: -13.20098876953125
    9. '```' → logprob: -13.57598876953125
    10. '()==' → logprob: -13.82598876953125

Token 354: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '-' → logprob: -18.375123977661133
    4. ' -' → logprob: -20.750123977661133
    5. '   ' → logprob: -22.000123977661133
    6. '=' → logprob: -22.250123977661133
    7. '```' → logprob: -22.500123977661133
    8. '
' → logprob: -23.000123977661133
    9. '  ' → logprob: -23.250123977661133
    10. '_' → logprob: -23.625123977661133

Token 355: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '-' → logprob: -18.375001907348633
    4. '=' → logprob: -22.000001907348633
    5. '۰' → logprob: -22.000001907348633
    6. '```' → logprob: -22.250001907348633
    7. '０' → logprob: -22.625001907348633
    8. '
' → logprob: -22.750001907348633
    9. ' -' → logprob: -23.250001907348633
    10. '00' → logprob: -23.250001907348633

Token 356: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03807982802391052
    2. ':
' → logprob: -3.2880797386169434
    3. ':return' → logprob: -10.913080215454102
    4. '       ' → logprob: -11.663080215454102
    5. '   ' → logprob: -11.913080215454102
    6. '           ' → logprob: -12.538080215454102
    7. ':
' → logprob: -14.913080215454102
    8. '):' → logprob: -15.788080215454102
    9. ':

' → logprob: -16.1630802154541
    10. '.' → logprob: -16.1630802154541

Token 357: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.1318875446449965e-05
    2. '       ' → logprob: -10.250041007995605
    3. '   ' → logprob: -13.125041007995605
    4. '               ' → logprob: -14.000041007995605
    5. '		' → logprob: -14.000041007995605
    6. '          ' → logprob: -14.250041007995605
    7. ' break' → logprob: -14.375041007995605
    8. '	       ' → logprob: -15.250041007995605
    9. 'break' → logprob: -15.375041007995605
    10. '```' → logprob: -16.000041961669922

Token 358: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.13336068391799927
    2. ' break' → logprob: -2.1333606243133545
    3. 'return' → logprob: -5.133360862731934
    4. '           ' → logprob: -8.133360862731934
    5. ' return' → logprob: -8.633360862731934
    6. '       ' → logprob: -10.633360862731934
    7. '	break' → logprob: -11.008360862731934
    8. '               ' → logprob: -13.008360862731934
    9. '   ' → logprob: -14.758360862731934
    10. '_break' → logprob: -15.008360862731934

Token 359: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000510260637383908
    2. 'cir' → logprob: -8.625510215759277
    3. 'c' → logprob: -8.875510215759277
    4. '
' → logprob: -9.875510215759277
    5. '   ' → logprob: -10.000510215759277
    6. '        
' → logprob: -10.375510215759277
    7. '```' → logprob: -11.000510215759277
    8. '	c' → logprob: -11.500510215759277
    9. 'circle' → logprob: -11.750510215759277
    10. ' circles' → logprob: -11.875510215759277

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022046377882361412
    2. 'cir' → logprob: -4.1470465660095215
    3. '   ' → logprob: -6.0220465660095215
    4. ' circles' → logprob: -6.3970465660095215
    5. 'c' → logprob: -7.3970465660095215
    6. '	c' → logprob: -7.8970465660095215
    7. '        
' → logprob: -8.147046089172363
    8. '```' → logprob: -8.647046089172363
    9. '<|end|>' → logprob: -8.772046089172363
    10. '
' → logprob: -9.022046089172363

Token 361: ' xs' (ID: 26642)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.08893020451068878
    2. 'start' → logprob: -3.588930130004883
    3. 's' → logprob: -3.838930130004883
    4. 'sx' → logprob: -4.963930130004883
    5. ' circles' → logprob: -5.088930130004883
    6. 'x' → logprob: -5.588930130004883
    7. 'circle' → logprob: -5.838930130004883
    8. 'points' → logprob: -5.838930130004883
    9. '   ' → logprob: -6.213930130004883
    10. 'circ' → logprob: -6.213930130004883

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02882157638669014
    2. ' =' → logprob: -4.6538214683532715
    3. '=' → logprob: -4.7788214683532715
    4. 'y' → logprob: -5.5288214683532715
    5. ',y' → logprob: -6.0288214683532715
    6. 'ys' → logprob: -6.2788214683532715
    7. 's' → logprob: -6.5288214683532715
    8. ' ,' → logprob: -7.9038214683532715
    9. 'Ys' → logprob: -9.15382194519043
    10. '=[]' → logprob: -10.15382194519043

Token 363: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -7.226628895296017e-06
    2. ' ys' → logprob: -12.000007629394531
    3. '_' → logprob: -15.750007629394531
    4. '   ' → logprob: -16.25000762939453
    5. 'Ys' → logprob: -16.37500762939453
    6. 'hs' → logprob: -16.50000762939453
    7. 'ysin' → logprob: -16.87500762939453
    8. 'xe' → logprob: -16.87500762939453
    9. 'ysi' → logprob: -17.12500762939453
    10. 'xs' → logprob: -17.37500762939453

Token 364: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16492809355258942
    2. ',' → logprob: -2.1649281978607178
    3. ' =' → logprob: -3.2899281978607178
    4. ' ,' → logprob: -10.539928436279297
    5. 's' → logprob: -14.039928436279297
    6. ',s' → logprob: -14.414928436279297
    7. ' ' → logprob: -14.539928436279297
    8. '=input' → logprob: -15.039928436279297
    9. '=[],' → logprob: -15.164928436279297
    10. '=[]' → logprob: -15.664928436279297

Token 365: ' xt' (ID: 58108)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.1728065311908722
    2. 'r' → logprob: -2.54780650138855
    3. 'xe' → logprob: -3.42280650138855
    4. 'xf' → logprob: -4.297806739807129
    5. 'xt' → logprob: -4.672806739807129
    6. 'ts' → logprob: -4.797806739807129
    7. 'x' → logprob: -5.172806739807129
    8. 'cs' → logprob: -5.672806739807129
    9. 'cir' → logprob: -6.172806739807129
    10. 'xr' → logprob: -6.422806739807129

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012728133238852024
    2. 's' → logprob: -4.387728214263916
    3. ' =' → logprob: -9.012727737426758
    4. '=' → logprob: -9.387727737426758
    5. ' ,' → logprob: -11.762727737426758
    6. ',s' → logprob: -12.762727737426758
    7. '_,' → logprob: -14.512727737426758
    8. '_s' → logprob: -15.012727737426758
    9. 'x' → logprob: -15.137727737426758
    10. ',x' → logprob: -15.762727737426758

Token 367: ' yt' (ID: 116521)
  Prédit: 'yt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yt' → logprob: -0.000321995816193521
    2. ' yt' → logprob: -8.375322341918945
    3. 'ys' → logprob: -9.750322341918945
    4. ' ' → logprob: -11.875322341918945
    5. 'yti' → logprob: -12.125322341918945
    6. 'yses' → logprob: -12.375322341918945
    7. 'ytic' → logprob: -12.625322341918945
    8. '   ' → logprob: -13.125322341918945
    9. '  ' → logprob: -13.250322341918945
    10. 'yst' → logprob: -13.500322341918945

Token 368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022473573684692
    2. ' =' → logprob: -1.9102246761322021
    3. ',' → logprob: -15.035224914550781
    4. '=line' → logprob: -16.16022491455078
    5. ' ' → logprob: -16.53522491455078
    6. ')' → logprob: -18.16022491455078
    7. '=

' → logprob: -18.16022491455078
    8. '=input' → logprob: -18.28522491455078
    9. '=int' → logprob: -18.41022491455078
    10. ')=' → logprob: -19.03522491455078

Token 369: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.38687485456466675
    2. ' map' → logprob: -1.1368749141693115
    3. 'list' → logprob: -12.88687515258789
    4. '   ' → logprob: -14.76187515258789
    5. ' list' → logprob: -14.88687515258789
    6. '	map' → logprob: -15.26187515258789
    7. '[' → logprob: -15.51187515258789
    8. '(map' → logprob: -15.88687515258789
    9. '    ' → logprob: -17.76187515258789
    10. 'm' → logprob: -17.88687515258789

Token 370: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004991783644072711
    2. 'int' → logprob: -7.625499248504639
    3. '(' → logprob: -12.12549877166748
    4. '(str' → logprob: -13.00049877166748
    5. '[int' → logprob: -13.75049877166748
    6. '(lambda' → logprob: -13.87549877166748
    7. '(float' → logprob: -14.87549877166748
    8. '(input' → logprob: -15.62549877166748
    9. ',int' → logprob: -15.75049877166748
    10. '<int' → logprob: -15.87549877166748

Token 371: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.4076460301876068
    2. ',' → logprob: -1.4076460599899292
    3. '(input' → logprob: -2.4076459407806396
    4. 'input' → logprob: -11.282646179199219
    5. ',(' → logprob: -11.657646179199219
    6. ' ,' → logprob: -12.032646179199219
    7. '[input' → logprob: -12.532646179199219
    8. ' (' → logprob: -12.657646179199219
    9. '=input' → logprob: -13.282646179199219
    10. ' input' → logprob: -13.407646179199219

Token 372: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015036711702123284
    2. ' input' → logprob: -6.5015034675598145
    3. '(input' → logprob: -13.751503944396973
    4. '[input' → logprob: -15.626503944396973
    5. ',input' → logprob: -16.501502990722656
    6. ')' → logprob: -17.126502990722656
    7. '	input' → logprob: -18.251502990722656
    8. '=input' → logprob: -18.501502990722656
    9. '<input' → logprob: -19.751502990722656
    10. ' ' → logprob: -19.751502990722656

Token 373: '_lines' (ID: 42980)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 374: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.37500286102295
    3. 'idx' → logprob: -14.00000286102295
    4. '[
' → logprob: -15.37500286102295
    5. ' [' → logprob: -15.50000286102295
    6. '```' → logprob: -16.000003814697266
    7. ')[' → logprob: -16.625003814697266
    8. '   ' → logprob: -16.750003814697266
    9. '[id' → logprob: -16.875003814697266
    10. '[index' → logprob: -17.125003814697266

Token 375: '].' (ID: 1651)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.004689760971814394
    2. '].' → logprob: -5.504689693450928
    3. '][' → logprob: -7.629689693450928
    4. 'idx' → logprob: -9.504690170288086
    5. ']' → logprob: -11.254690170288086
    6. '[' → logprob: -11.254690170288086
    7. '   ' → logprob: -11.504690170288086
    8. '(idx' → logprob: -11.879690170288086
    9. ' idx' → logprob: -12.754690170288086
    10. ']
' → logprob: -14.504690170288086

Token 376: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3868759572505951
    2. 'strip' → logprob: -1.1368759870529175
    3. '.strip' → logprob: -13.261876106262207
    4. '.split' → logprob: -14.011876106262207
    5. 'rstrip' → logprob: -14.011876106262207
    6. ' strip' → logprob: -14.136876106262207
    7. ' split' → logprob: -14.261876106262207
    8. '(split' → logprob: -15.761876106262207
    9. '(strip' → logprob: -17.26187515258789
    10. 'idx' → logprob: -18.01187515258789

Token 377: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0018916261615231633
    2. '()' → logprob: -6.376891613006592
    3. ')' → logprob: -9.12689208984375
    4. '('' → logprob: -10.50189208984375
    5. '())
' → logprob: -10.50189208984375
    6. '(' → logprob: -11.62689208984375
    7. '(','' → logprob: -11.87689208984375
    8. '()))' → logprob: -12.37689208984375
    9. ' ())' → logprob: -13.12689208984375
    10. '(),' → logprob: -13.25189208984375

Token 378: '       ' (ID: 309)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.1266041249036789
    2. '```' → logprob: -3.1266040802001953
    3. '[idx' → logprob: -3.5016040802001953
    4. '\n' → logprob: -4.126604080200195
    5. '<|end|>' → logprob: -4.501604080200195
    6. ' idx' → logprob: -4.751604080200195
    7. '	idx' → logprob: -6.126604080200195
    8. '(idx' → logprob: -6.251604080200195
    9. '       ' → logprob: -6.501604080200195
    10. '``' → logprob: -7.001604080200195

Token 379: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0022558800410479307
    2. '\n' → logprob: -6.627255916595459
    3. ' idx' → logprob: -7.627255916595459
    4. '[idx' → logprob: -8.8772554397583
    5. '	idx' → logprob: -9.2522554397583
    6. '```' → logprob: -9.2522554397583
    7. '\' → logprob: -10.3772554397583
    8. '<|end|>' → logprob: -10.6272554397583
    9. '_idx' → logprob: -11.0022554397583
    10. '\x' → logprob: -11.7522554397583

Token 380: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12695205211639404
    2. ' +=' → logprob: -2.1269521713256836
    3. '+' → logprob: -10.751952171325684
    4. '=' → logprob: -13.876952171325684
    5. ']+=' → logprob: -14.001952171325684
    6. '```' → logprob: -15.001952171325684
    7. ')' → logprob: -15.751952171325684
    8. '+='' → logprob: -16.376951217651367
    9. '++' → logprob: -16.501951217651367
    10. '   ' → logprob: -16.751951217651367

Token 381: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -20.875
    4. '
' → logprob: -21.5
    5. '   ' → logprob: -22.25
    6. '１' → logprob: -23.5
    7. '+' → logprob: -23.75
    8. '(' → logprob: -24.625
    9. '۱' → logprob: -24.875
    10. '``' → logprob: -25.5

Token 382: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '```' → logprob: -20.625
    4. '１' → logprob: -22.25
    5. '   ' → logprob: -22.875
    6. '0' → logprob: -23.375
    7. '2' → logprob: -23.875
    8. '۱' → logprob: -24.125
    9. '১' → logprob: -24.375
    10. '१' → logprob: -24.625

Token 383: '
' (ID: 198)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.5780051946640015
    2. '       ' → logprob: -0.8280051946640015
    3. ' circles' → logprob: -6.703005313873291
    4. 'c' → logprob: -7.328005313873291
    5. '   ' → logprob: -9.703004837036133
    6. '	c' → logprob: -10.203004837036133
    7. 'circ' → logprob: -10.578004837036133
    8. 'circle' → logprob: -10.953004837036133
    9. '```' → logprob: -11.328004837036133
    10. '        
' → logprob: -11.953004837036133

Token 384: '       ' (ID: 309)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.00647945748642087
    2. '       ' → logprob: -5.131479263305664
    3. 'c' → logprob: -8.131479263305664
    4. ' circles' → logprob: -8.631479263305664
    5. 'circ' → logprob: -10.381479263305664
    6. '```' → logprob: -10.506479263305664
    7. 'circle' → logprob: -11.631479263305664
    8. '   ' → logprob: -12.631479263305664
    9. '	c' → logprob: -13.256479263305664
    10. 'rings' → logprob: -13.756479263305664

Token 385: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -1.7432603272027336e-06
    2. ' circles' → logprob: -14.000001907348633
    3. 'circ' → logprob: -14.125001907348633
    4. 'circle' → logprob: -17.375001907348633
    5. '```' → logprob: -17.375001907348633
    6. '
' → logprob: -17.500001907348633
    7. '       ' → logprob: -17.500001907348633
    8. 'cells' → logprob: -18.875001907348633
    9. 'c' → logprob: -19.000001907348633
    10. '   ' → logprob: -19.250001907348633

Token 386: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38692328333854675
    2. ' =' → logprob: -1.1369233131408691
    3. '=[]' → logprob: -9.886922836303711
    4. '[]' → logprob: -14.761922836303711
    5. ',' → logprob: -15.011922836303711
    6. '[' → logprob: -16.01192283630371
    7. '=[]
' → logprob: -16.13692283630371
    8. ')' → logprob: -16.26192283630371
    9. 's' → logprob: -16.26192283630371
    10. '   ' → logprob: -16.26192283630371

Token 387: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.39961376786231995
    2. '[]
' → logprob: -1.1496137380599976
    3. '[' → logprob: -4.399613857269287
    4. '[int' → logprob: -8.649613380432129
    5. '[e' → logprob: -10.649613380432129
    6. '[class' → logprob: -10.899613380432129
    7. '[c' → logprob: -11.149613380432129
    8. '[]

' → logprob: -11.149613380432129
    9. '[
' → logprob: -11.399613380432129
    10. '[s' → logprob: -11.399613380432129

Token 388: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2401299774646759
    2. 'for' → logprob: -2.2401299476623535
    3. '       ' → logprob: -2.4901299476623535
    4. '	for' → logprob: -4.4901299476623535
    5. '<|end|>' → logprob: -4.7401299476623535
    6. '   ' → logprob: -5.9901299476623535
    7. '[' → logprob: -7.7401299476623535
    8. ' ' → logprob: -7.9901299476623535
    9. '	' → logprob: -8.865130424499512
    10. ')' → logprob: -9.115130424499512

Token 389: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0019372005481272936
    2. ' for' → logprob: -6.501937389373779
    3. '       ' → logprob: -7.751937389373779
    4. '	for' → logprob: -12.376936912536621
    5. '   ' → logprob: -14.501936912536621
    6. ' ' → logprob: -16.751937866210938
    7. '```' → logprob: -17.126937866210938
    8. '
' → logprob: -18.126937866210938
    9. '        
' → logprob: -19.626937866210938
    10. '<|end|>' → logprob: -19.876937866210938

Token 390: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.7491250875755213e-05
    2. '_i' → logprob: -10.750027656555176
    3. ' _' → logprob: -12.750027656555176
    4. 'i' → logprob: -12.875027656555176
    5. '_range' → logprob: -14.625027656555176
    6. '_in' → logprob: -15.750027656555176
    7. ' i' → logprob: -16.75002670288086
    8. ' in' → logprob: -18.75002670288086
    9. '_
' → logprob: -19.25002670288086
    10. '_=' → logprob: -19.75002670288086

Token 391: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4745945930480957
    2. 'in' → logprob: -0.9745945930480957
    3. 'range' → logprob: -7.599594593048096
    4. ' ' → logprob: -11.474594116210938
    5. ' range' → logprob: -12.974594116210938
    6. 'i' → logprob: -13.224594116210938
    7. '  ' → logprob: -14.724594116210938
    8. 'import' → logprob: -14.724594116210938
    9. '	in' → logprob: -15.349594116210938
    10. '   ' → logprob: -15.474594116210938

Token 392: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '(range' → logprob: -17.125335693359375
    4. '	range' → logprob: -17.750335693359375
    5. 'ange' → logprob: -19.750335693359375
    6. 'in' → logprob: -20.125335693359375
    7. '_range' → logprob: -20.250335693359375
    8. ')' → logprob: -21.625335693359375
    9. '.range' → logprob: -21.875335693359375
    10. '
' → logprob: -22.000335693359375

Token 393: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.2842308680992573e-05
    2. 'n' → logprob: -10.750022888183594
    3. ' n' → logprob: -14.250022888183594
    4. '(' → logprob: -14.375022888183594
    5. ' (' → logprob: -16.250022888183594
    6. '	n' → logprob: -20.000022888183594
    7. '(
' → logprob: -20.000022888183594
    8. '   ' → logprob: -20.125022888183594
    9. '_n' → logprob: -20.250022888183594
    10. '(range' → logprob: -21.625022888183594

Token 394: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018522022292017937
    2. '):' → logprob: -4.018521785736084
    3. ':
' → logprob: -8.143522262573242
    4. ':' → logprob: -10.518522262573242
    5. '():
' → logprob: -10.643522262573242
    6. '       ' → logprob: -11.518522262573242
    7. '):
' → logprob: -12.143522262573242
    8. '   ' → logprob: -12.143522262573242
    9. ')' → logprob: -13.018522262573242
    10. '           ' → logprob: -13.393522262573242

Token 395: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.035598691552877426
    2. '   ' → logprob: -4.4105987548828125
    3. ' lines' → logprob: -4.4105987548828125
    4. '       ' → logprob: -5.5355987548828125
    5. ' line' → logprob: -5.9105987548828125
    6. '	       ' → logprob: -7.1605987548828125
    7. 'tokens' → logprob: -7.2855987548828125
    8. '	   ' → logprob: -7.5355987548828125
    9. '```' → logprob: -7.5355987548828125
    10. ' tokens' → logprob: -8.660598754882812

Token 396: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.01888226717710495
    2. ' x' → logprob: -4.0188822746276855
    3. 'cx' → logprob: -7.6438822746276855
    4. '           ' → logprob: -9.268881797790527
    5. 'xc' → logprob: -9.268881797790527
    6. ' cx' → logprob: -10.518881797790527
    7. 'xi' → logprob: -11.893881797790527
    8. '	x' → logprob: -12.018881797790527
    9. 'xl' → logprob: -12.143881797790527
    10. '   ' → logprob: -12.143881797790527

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027637446764856577
    2. ',y' → logprob: -6.127763748168945
    3. ' ,' → logprob: -7.502763748168945
    4. 'y' → logprob: -11.377763748168945
    5. '_,' → logprob: -11.752763748168945
    6. ' y' → logprob: -13.127763748168945
    7. ',line' → logprob: -13.752763748168945
    8. 's' → logprob: -14.377763748168945
    9. ',c' → logprob: -14.377763748168945
    10. ',int' → logprob: -15.252763748168945

Token 398: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0024756586644798517
    2. ' y' → logprob: -6.002475738525391
    3. ',' → logprob: -16.75247573852539
    4. ',y' → logprob: -17.12747573852539
    5. ' ' → logprob: -17.75247573852539
    6. '<|end|>' → logprob: -18.25247573852539
    7. '	y' → logprob: -19.50247573852539
    8. '  ' → logprob: -20.37747573852539
    9. 'yl' → logprob: -21.00247573852539
    10. '    ' → logprob: -21.12747573852539

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8312570318812504e-05
    2. ' ,' → logprob: -11.250018119812012
    3. ',r' → logprob: -12.500018119812012
    4. 'r' → logprob: -13.625018119812012
    5. '=' → logprob: -16.500019073486328
    6. '<|end|>' → logprob: -16.875019073486328
    7. ',w' → logprob: -17.250019073486328
    8. '_,' → logprob: -17.250019073486328
    9. 's' → logprob: -17.250019073486328
    10. ',int' → logprob: -18.250019073486328

Token 400: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02324547804892063
    2. ' r' → logprob: -3.7732455730438232
    3. 'R' → logprob: -16.773244857788086
    4. 'radius' → logprob: -16.898244857788086
    5. ' ' → logprob: -18.023244857788086
    6. '	r' → logprob: -18.398244857788086
    7. ',' → logprob: -18.773244857788086
    8. ',r' → logprob: -19.148244857788086
    9. ' radius' → logprob: -19.648244857788086
    10. ' R' → logprob: -19.898244857788086

Token 401: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026307616382837296
    2. ' =' → logprob: -3.6513075828552246
    3. ',' → logprob: -12.026308059692383
    4. ')' → logprob: -14.276308059692383
    5. '=int' → logprob: -14.901308059692383
    6. ')=' → logprob: -16.526308059692383
    7. ' ' → logprob: -16.526308059692383
    8. '<|end|>' → logprob: -17.276308059692383
    9. '=line' → logprob: -17.276308059692383
    10. '=

' → logprob: -17.401308059692383

Token 402: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.04858759790658951
    2. ' map' → logprob: -3.0485875606536865
    3. '(map' → logprob: -17.298587799072266
    4. '	map' → logprob: -17.298587799072266
    5. '
' → logprob: -17.423587799072266
    6. 'm' → logprob: -17.798587799072266
    7. '    ' → logprob: -18.298587799072266
    8. ' ' → logprob: -18.548587799072266
    9. '   ' → logprob: -18.798587799072266
    10. '           ' → logprob: -19.048587799072266

Token 403: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003646633995231241
    2. 'int' → logprob: -8.125364303588867
    3. '(' → logprob: -9.750364303588867
    4. '(lambda' → logprob: -12.625364303588867
    5. '(
' → logprob: -12.875364303588867
    6. '[int' → logprob: -13.625364303588867
    7. ' (' → logprob: -13.875364303588867
    8. '<int' → logprob: -13.875364303588867
    9. ' int' → logprob: -14.625364303588867
    10. '=int' → logprob: -15.125364303588867

Token 404: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.39110758900642395
    2. ',input' → logprob: -1.2661075592041016
    3. ',' → logprob: -3.3911075592041016
    4. 'input' → logprob: -4.891107559204102
    5. ' input' → logprob: -8.141107559204102
    6. ')' → logprob: -9.016107559204102
    7. '(' → logprob: -10.016107559204102
    8. ' ,' → logprob: -10.141107559204102
    9. ' (' → logprob: -10.516107559204102
    10. '[input' → logprob: -10.641107559204102

Token 405: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02975187823176384
    2. ' input' → logprob: -3.529751777648926
    3. 'map' → logprob: -13.654751777648926
    4. '(input' → logprob: -16.404752731323242
    5. ' map' → logprob: -16.404752731323242
    6. '           ' → logprob: -17.154752731323242
    7. ')' → logprob: -18.154752731323242
    8. '[input' → logprob: -18.654752731323242
    9. ' ' → logprob: -18.904752731323242
    10. '	input' → logprob: -19.154752731323242

Token 406: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.7056074738502502
    2. 'input' → logprob: -1.0806074142456055
    3. '(input' → logprob: -1.8306074142456055
    4. '[input' → logprob: -5.7056074142456055
    5. 'lines' → logprob: -6.3306074142456055
    6. 'Lines' → logprob: -6.8306074142456055
    7. ' Lines' → logprob: -9.580607414245605
    8. '=input' → logprob: -9.830607414245605
    9. ',input' → logprob: -10.330607414245605
    10. 'import' → logprob: -10.330607414245605

Token 407: '[idx' (ID: 25582)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6432198882102966
    2. '(input' → logprob: -0.8932198882102966
    3. '[input' → logprob: -2.7682199478149414
    4. ',input' → logprob: -6.518219947814941
    5. ' input' → logprob: -7.518219947814941
    6. '=input' → logprob: -9.143219947814941
    7. '[idx' → logprob: -9.768219947814941
    8. '.input' → logprob: -10.893219947814941
    9. 's' → logprob: -11.643219947814941
    10. '_input' → logprob: -11.768219947814941

Token 408: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -6.909333023941144e-05
    2. ').' → logprob: -10.250068664550781
    3. '.split' → logprob: -10.750068664550781
    4. ']' → logprob: -12.375068664550781
    5. '])' → logprob: -12.875068664550781
    6. ''].' → logprob: -13.500068664550781
    7. '().' → logprob: -13.500068664550781
    8. '.strip' → logprob: -14.250068664550781
    9. ' ].' → logprob: -14.375068664550781
    10. '"].' → logprob: -14.875068664550781

Token 409: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.848420551046729e-05
    2. 'strip' → logprob: -9.7500581741333
    3. ' split' → logprob: -16.500059127807617
    4. '.split' → logprob: -17.625059127807617
    5. '(split' → logprob: -18.625059127807617
    6. 'rstrip' → logprob: -18.750059127807617
    7. 'spl' → logprob: -20.875059127807617
    8. 's' → logprob: -21.500059127807617
    9. 'plit' → logprob: -21.750059127807617
    10. '_split' → logprob: -22.625059127807617

Token 410: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10483086109161377
    2. ')
' → logprob: -2.354830741882324
    3. '())' → logprob: -6.229830741882324
    4. '())
' → logprob: -6.354830741882324
    5. '()' → logprob: -7.104830741882324
    6. '()
' → logprob: -9.854830741882324
    7. ')
' → logprob: -11.479830741882324
    8. '   ' → logprob: -12.229830741882324
    9. ')\' → logprob: -13.229830741882324
    10. ')`' → logprob: -13.229830741882324

Token 411: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016520380973815918
    2. '<|end|>' → logprob: -4.6415205001831055
    3. '
' → logprob: -6.0165205001831055
    4. '       ' → logprob: -6.7665205001831055
    5. '            
' → logprob: -7.1415205001831055
    6. 'idx' → logprob: -7.3915205001831055
    7. '<|end|>' → logprob: -7.3915205001831055
    8. ')' → logprob: -8.516520500183105
    9. '\n' → logprob: -8.766520500183105
    10. 'n' → logprob: -9.141520500183105

Token 412: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.2176569551229477
    2. ' idx' → logprob: -2.3426568508148193
    3. '           ' → logprob: -2.5926568508148193
    4. ' circles' → logprob: -4.092657089233398
    5. 'cir' → logprob: -5.092657089233398
    6. '	idx' → logprob: -7.592657089233398
    7. '       ' → logprob: -7.967657089233398
    8. '   ' → logprob: -7.967657089233398
    9. 'indices' → logprob: -8.467657089233398
    10. ' lines' → logprob: -9.217657089233398

Token 413: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5760381817817688
    2. ' +=' → logprob: -0.8260381817817688
    3. '    ' → logprob: -10.451038360595703
    4. ']+=' → logprob: -10.576038360595703
    5. '+' → logprob: -11.201038360595703
    6. '   ' → logprob: -11.826038360595703
    7. '=' → logprob: -12.201038360595703
    8. ')' → logprob: -12.576038360595703
    9. '+='' → logprob: -12.576038360595703
    10. '```' → logprob: -12.701038360595703

Token 414: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -17.750335693359375
    4. '   ' → logprob: -19.250335693359375
    5. '           ' → logprob: -20.125335693359375
    6. '
' → logprob: -20.125335693359375
    7. '１' → logprob: -20.375335693359375
    8. ' ' → logprob: -20.625335693359375
    9. ' 
' → logprob: -21.750335693359375
    10. '۱' → logprob: -21.937835693359375

Token 415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '
' → logprob: -19.875001907348633
    4. '   ' → logprob: -20.250001907348633
    5. '```' → logprob: -20.375001907348633
    6. '１' → logprob: -21.625001907348633
    7. '3' → logprob: -22.250001907348633
    8. '۱' → logprob: -23.000001907348633
    9. '  ' → logprob: -23.250001907348633
    10. '(' → logprob: -23.687501907348633

Token 416: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015492603415623307
    2. '
' → logprob: -7.876549243927002
    3. '       ' → logprob: -8.00154972076416
    4. '<|end|>' → logprob: -8.00154972076416
    5. '   ' → logprob: -8.62654972076416
    6. ',' → logprob: -9.75154972076416
    7. ' circles' → logprob: -9.75154972076416
    8. 'cir' → logprob: -10.12654972076416
    9. '<|end|>' → logprob: -10.50154972076416
    10. ',c' → logprob: -10.87654972076416

Token 417: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7682130932807922
    2. '           ' → logprob: -1.3932130336761475
    3. 'cir' → logprob: -1.6432130336761475
    4. '   ' → logprob: -3.0182130336761475
    5. ' circles' → logprob: -3.1432130336761475
    6. 'c' → logprob: -7.018213272094727
    7. '	c' → logprob: -7.268213272094727
    8. '<|end|>' → logprob: -8.393213272094727
    9. 'circ' → logprob: -8.768213272094727
    10. 'circle' → logprob: -9.143213272094727

Token 418: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.006760010030120611
    2. ' circles' → logprob: -5.006760120391846
    3. '   ' → logprob: -10.506759643554688
    4. 'circ' → logprob: -11.506759643554688
    5. 'circle' → logprob: -12.631759643554688
    6. '           ' → logprob: -12.756759643554688
    7. '       ' → logprob: -14.756759643554688
    8. 'c' → logprob: -14.756759643554688
    9. '	c' → logprob: -16.131759643554688
    10. ' circul' → logprob: -16.756759643554688

Token 419: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.860340752406046e-05
    2. '.' → logprob: -9.7500581741333
    3. 'append' → logprob: -16.000059127807617
    4. '.app' → logprob: -16.500059127807617
    5. '.Append' → logprob: -17.375059127807617
    6. '.ap' → logprob: -17.500059127807617
    7. ' .' → logprob: -18.125059127807617
    8. ').' → logprob: -19.500059127807617
    9. '_append' → logprob: -20.125059127807617
    10. '.add' → logprob: -20.125059127807617

Token 420: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.001577236340381205
    2. '(' → logprob: -6.501577377319336
    3. '(x' → logprob: -9.501577377319336
    4. '(
' → logprob: -15.876577377319336
    5. ' (' → logprob: -18.876577377319336
    6. ' ((' → logprob: -20.126577377319336
    7. '   ' → logprob: -20.251577377319336
    8. '[(' → logprob: -20.251577377319336
    9. '([' → logprob: -20.251577377319336
    10. '```' → logprob: -20.251577377319336

Token 421: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.15310683415737e-05
    2. ' x' → logprob: -10.750021934509277
    3. '(x' → logprob: -18.25002098083496
    4. ')x' → logprob: -18.25002098083496
    5. '   ' → logprob: -19.62502098083496
    6. '
' → logprob: -20.75002098083496
    7. '	x' → logprob: -20.75002098083496
    8. ')' → logprob: -20.87502098083496
    9. ' ' → logprob: -21.37502098083496
    10. '"x' → logprob: -21.75002098083496

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012570773833431304
    2. ',y' → logprob: -9.500125885009766
    3. ' ,' → logprob: -10.000125885009766
    4. ',
' → logprob: -12.250125885009766
    5. '<|end|>' → logprob: -15.875125885009766
    6. ',x' → logprob: -16.375125885009766
    7. ')' → logprob: -16.375125885009766
    8. ' ' → logprob: -16.750125885009766
    9. '‌,' → logprob: -17.250125885009766
    10. 'y' → logprob: -17.250125885009766

Token 423: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07889099419116974
    2. ' y' → logprob: -2.5788910388946533
    3. '<|end|>' → logprob: -14.328890800476074
    4. ',y' → logprob: -14.953890800476074
    5. ' ' → logprob: -15.953890800476074
    6. ')y' → logprob: -16.57889175415039
    7. ',' → logprob: -16.82889175415039
    8. '	y' → logprob: -17.20389175415039
    9. '
' → logprob: -17.57889175415039
    10. ''y' → logprob: -18.70389175415039

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.35837464465294e-05
    2. ',r' → logprob: -10.375043869018555
    3. ' ,' → logprob: -11.875043869018555
    4. ',
' → logprob: -12.375043869018555
    5. ')' → logprob: -14.625043869018555
    6. ',x' → logprob: -16.125043869018555
    7. '<|end|>' → logprob: -16.125043869018555
    8. '```' → logprob: -16.500043869018555
    9. '),' → logprob: -16.750043869018555
    10. ',user' → logprob: -16.750043869018555

Token 425: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0006266565760597587
    2. ' r' → logprob: -7.375626564025879
    3. ' ' → logprob: -17.000627517700195
    4. '
' → logprob: -17.500627517700195
    5. '   ' → logprob: -18.125627517700195
    6. '	r' → logprob: -18.625627517700195
    7. ')' → logprob: -18.875627517700195
    8. '  ' → logprob: -20.000627517700195
    9. '```' → logprob: -20.000627517700195
    10. '       ' → logprob: -20.250627517700195

Token 426: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00044830769184045494
    2. '))
' → logprob: -7.750448226928711
    3. ')' → logprob: -11.000448226928711
    4. '))

' → logprob: -15.375448226928711
    5. ' ))' → logprob: -15.375448226928711
    6. ')))' → logprob: -16.00044822692871
    7. '   ' → logprob: -16.25044822692871
    8. ')
' → logprob: -16.37544822692871
    9. ' ' → logprob: -17.62544822692871
    10. '       ' → logprob: -18.12544822692871

Token 427: '       ' (ID: 309)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.18829962611198425
    2. '       ' → logprob: -2.4382996559143066
    3. 'starts' → logprob: -3.3132996559143066
    4. '#' → logprob: -3.8132996559143066
    5. 'touch' → logprob: -5.188299655914307
    6. '```' → logprob: -5.688299655914307
    7. 't' → logprob: -5.938299655914307
    8. 's' → logprob: -6.063299655914307
    9. ' start' → logprob: -6.188299655914307
    10. 'source' → logprob: -6.438299655914307

Token 428: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.051404695957899094
    2. 'starts' → logprob: -3.3014047145843506
    3. '#' (adapté à ' #') → logprob: -4.8014044761657715
    4. 'inside' → logprob: -6.9264044761657715
    5. 's' → logprob: -7.0514044761657715
    6. '       ' → logprob: -7.9264044761657715
    7. 'left' → logprob: -7.9264044761657715
    8. 'touch' → logprob: -8.17640495300293
    9. ' start' → logprob: -8.17640495300293
    10. ' starts' → logprob: -8.55140495300293

Token 429: ' Identify' (ID: 88495)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.04013356938958168
    2. 'starts' → logprob: -3.665133476257324
    3. '#' → logprob: -4.665133476257324
    4. 'inside' → logprob: -5.790133476257324
    5. 's' → logprob: -7.915133476257324
    6. 'source' → logprob: -9.040133476257324
    7. 'touch' → logprob: -9.165133476257324
    8. 'entr' → logprob: -9.540133476257324
    9. 'entry' → logprob: -9.790133476257324
    10. 'starting' → logprob: -10.040133476257324

Token 430: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00043805985478684306
    2. ' start' → logprob: -9.00043773651123
    3. 'starting' → logprob: -9.50043773651123
    4. 'source' → logprob: -9.62543773651123
    5. 's' → logprob: -9.87543773651123
    6. 'starts' → logprob: -10.12543773651123
    7. 'inside' → logprob: -10.37543773651123
    8. '#' → logprob: -11.75043773651123
    9. 'left' → logprob: -12.00043773651123
    10. '```' → logprob: -12.12543773651123

Token 431: ' and' (ID: 326)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.2454693764448166
    2. '_nodes' → logprob: -1.870469331741333
    3. '_circle' → logprob: -2.870469331741333
    4. '_indices' → logprob: -5.620469570159912
    5. '_set' → logprob: -6.995469570159912
    6. '_start' → logprob: -7.745469570159912
    7. ' =' → logprob: -7.870469570159912
    8. '_candidates' → logprob: -8.245469093322754
    9. '_st' → logprob: -8.495469093322754
    10. '_points' → logprob: -8.495469093322754

Token 432: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0015134313143789768
    2. 'target' → logprob: -6.501513481140137
    3. 'goal' → logprob: -11.501513481140137
    4. ' end' → logprob: -13.876513481140137
    5. 'targets' → logprob: -17.75151252746582
    6. ' target' → logprob: -18.87651252746582
    7. '[end' → logprob: -18.87651252746582
    8. '```' → logprob: -19.50151252746582
    9. 'dest' → logprob: -19.62651252746582
    10. '	end' → logprob: -20.00151252746582

Token 433: ' circles' (ID: 45131)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.536956250667572
    2. 'cir' → logprob: -1.0369563102722168
    3. '_c' → logprob: -3.286956310272217
    4. 'nodes' → logprob: -3.911956310272217
    5. 'points' → logprob: -7.036956310272217
    6. '_points' → logprob: -7.286956310272217
    7. 'c' → logprob: -7.286956310272217
    8. '_circle' → logprob: -8.411955833435059
    9. 'rings' → logprob: -8.661955833435059
    10. 'circle' → logprob: -9.036955833435059

Token 434: ' (' (ID: 350)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.009670979343354702
    2. ' start' → logprob: -4.759671211242676
    3. '
' → logprob: -7.384671211242676
    4. '[start' → logprob: -8.884671211242676
    5. '```' → logprob: -9.509671211242676
    6. '    
' → logprob: -10.259671211242676
    7. '(start' → logprob: -10.384671211242676
    8. 'starts' → logprob: -10.509671211242676
    9. '_start' → logprob: -10.509671211242676
    10. '        
' → logprob: -10.509671211242676

Token 435: 'that' (ID: 14116)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1326591670513153
    2. ')' → logprob: -2.5076591968536377
    3. ')
' → logprob: -3.6326591968536377
    4. '[start' → logprob: -5.507658958435059
    5. 'for' → logprob: -5.632658958435059
    6. 's' → logprob: -5.882658958435059
    7. 'which' → logprob: -6.382658958435059
    8. 'def' → logprob: -7.257658958435059
    9. ')s' → logprob: -7.382658958435059
    10. '#' → logprob: -7.632658958435059

Token 436: ' contain' (ID: 10232)
  Prédit: 'contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contain' → logprob: -0.2238675206899643
    2. ' contain' → logprob: -1.7238675355911255
    3. 'include' → logprob: -4.598867416381836
    4. 'cover' → logprob: -5.598867416381836
    5. ')' → logprob: -5.848867416381836
    6. ' cover' → logprob: -6.348867416381836
    7. ' include' → logprob: -6.348867416381836
    8. ' encompass' → logprob: -8.473867416381836
    9. ' the' → logprob: -8.598867416381836
    10. 'contains' → logprob: -8.723867416381836

Token 437: ' start' (ID: 1604)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.10872901231050491
    2. '(xs' → logprob: -2.358729124069214
    3. ' xs' → logprob: -5.108728885650635
    4. 'the' → logprob: -6.483728885650635
    5. ' the' → logprob: -7.483728885650635
    6. '(' → logprob: -8.608729362487793
    7. ' (' → logprob: -9.483729362487793
    8. ')' → logprob: -9.858729362487793
    9. '(x' → logprob: -10.983729362487793
    10. 'points' → logprob: -12.233729362487793

Token 438: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.093706727027893
    2. ')' → logprob: -1.593706727027893
    3. 'and' → logprob: -1.718706727027893
    4. 'point' → logprob: -2.3437066078186035
    5. ' or' → logprob: -2.9687066078186035
    6. ' point' → logprob: -3.2187066078186035
    7. ' )' → logprob: -3.2187066078186035
    8. '_point' → logprob: -3.3437066078186035
    9. 'points' → logprob: -5.0937066078186035
    10. 'or' → logprob: -5.7187066078186035

Token 439: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.07943540066480637
    2. ' end' → logprob: -2.579435348510742
    3. 'target' → logprob: -7.954435348510742
    4. 'point' → logprob: -9.454435348510742
    5. '(end' → logprob: -9.954435348510742
    6. '#' → logprob: -10.579435348510742
    7. 'stop' → logprob: -11.079435348510742
    8. ')' → logprob: -12.204435348510742
    9. '(' → logprob: -12.329435348510742
    10. ' target' → logprob: -12.579435348510742

Token 440: ' point' (ID: 2438)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.31866690516471863
    2. ' point' → logprob: -2.318666934967041
    3. 'points' → logprob: -2.443666934967041
    4. ')' → logprob: -2.943666934967041
    5. 'point' → logprob: -3.693666934967041
    6. '_point' → logprob: -5.193666934967041
    7. '_points' → logprob: -5.693666934967041
    8. ' )' → logprob: -6.943666934967041
    9. '_' → logprob: -9.818666458129883
    10. ' positions' → logprob: -10.693666458129883

Token 441: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004836888052523136
    2. ')
' → logprob: -5.3798370361328125
    3. '   ' → logprob: -9.004837036132812
    4. ' )' → logprob: -9.879837036132812
    5. 's' → logprob: -11.254837036132812
    6. ')

' → logprob: -12.129837036132812
    7. 'start' → logprob: -12.129837036132812
    8. '       ' → logprob: -12.254837036132812
    9. ',' → logprob: -12.754837036132812
    10. 'indices' → logprob: -13.504837036132812

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29691487550735474
    2. '   ' → logprob: -2.29691481590271
    3. 'start' → logprob: -2.29691481590271
    4. '        
' → logprob: -3.67191481590271
    5. '
' → logprob: -3.79691481590271
    6. '    
' → logprob: -5.671915054321289
    7. ' start' → logprob: -5.671915054321289
    8. '  
' → logprob: -7.671915054321289
    9. '_start' → logprob: -9.296915054321289
    10. '[start' → logprob: -9.421915054321289

Token 443: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.02070760168135166
    2. ' start' → logprob: -3.895707607269287
    3. '       ' → logprob: -9.020707130432129
    4. 'starts' → logprob: -10.645707130432129
    5. '        
' → logprob: -11.645707130432129
    6. ' starts' → logprob: -12.270707130432129
    7. '   ' → logprob: -12.520707130432129
    8. 's' → logprob: -13.270707130432129
    9. '```' → logprob: -13.395707130432129
    10. '
' → logprob: -16.020708084106445

Token 444: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.010977666825056076
    2. '_nodes' → logprob: -4.635977745056152
    3. '_indices' → logprob: -7.135977745056152
    4. '_circle' → logprob: -9.010977745056152
    5. ' =' → logprob: -9.260977745056152
    6. '_points' → logprob: -9.385977745056152
    7. '_candidates' → logprob: -10.385977745056152
    8. '=' → logprob: -10.510977745056152
    9. 's' → logprob: -10.635977745056152
    10. '_indexes' → logprob: -11.510977745056152

Token 445: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0013986913254484534
    2. 'ircle' → logprob: -8.126399040222168
    3. 'irc' → logprob: -8.501399040222168
    4. 'ont' → logprob: -9.001399040222168
    5. 'icles' → logprob: -9.126399040222168
    6. 'cir' → logprob: -9.376399040222168
    7. 's' → logprob: -9.501399040222168
    8. '_indices' → logprob: -9.501399040222168
    9. 'irs' → logprob: -9.626399040222168
    10. '_indexes' → logprob: -9.751399040222168

Token 446: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.00018113377154804766
    2. 'les' → logprob: -9.125181198120117
    3. 'cle' → logprob: -11.125181198120117
    4. '```' → logprob: -11.375181198120117
    5. 'cl' → logprob: -11.625181198120117
    6. 'icles' → logprob: -11.750181198120117
    7. '   ' → logprob: -11.875181198120117
    8. 'cls' → logprob: -12.500181198120117
    9. '=' → logprob: -12.875181198120117
    10. '``' → logprob: -13.000181198120117

Token 447: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029760440811514854
    2. ' =' → logprob: -3.5297603607177734
    3. '=[]' → logprob: -11.529760360717773
    4. ',' → logprob: -16.279760360717773
    5. '=[' → logprob: -18.029760360717773
    6. '=[]
' → logprob: -18.279760360717773
    7. ')' → logprob: -18.404760360717773
    8. '＝' → logprob: -18.404760360717773
    9. '[]' → logprob: -18.654760360717773
    10. '=

' → logprob: -19.279760360717773

Token 448: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2604779601097107
    2. '[]
' → logprob: -2.0104780197143555
    3. '[i' → logprob: -2.7604780197143555
    4. '[' → logprob: -3.5104780197143555
    5. '[c' → logprob: -7.0104780197143555
    6. '[s' → logprob: -8.010478019714355
    7. '[k' → logprob: -8.010478019714355
    8. '[
' → logprob: -9.010478019714355
    9. '[]

' → logprob: -9.260478019714355
    10. '[int' → logprob: -9.385478019714355

Token 449: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18551616370677948
    2. ' for' → logprob: -1.810516119003296
    3. '       ' → logprob: -5.435516357421875
    4. '[end' → logprob: -7.060516357421875
    5. '[' → logprob: -8.435516357421875
    6. 'end' → logprob: -8.685516357421875
    7. ',' → logprob: -10.560516357421875
    8. '        
' → logprob: -10.685516357421875
    9. '[]' → logprob: -10.935516357421875
    10. '<|end|>' → logprob: -11.310516357421875

Token 450: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.38740500807762146
    2. 'for' → logprob: -1.1374050378799438
    3. ' for' → logprob: -7.762404918670654
    4. ' end' → logprob: -9.137405395507812
    5. '[end' → logprob: -15.512405395507812
    6. 'stop' → logprob: -15.762405395507812
    7. '       ' → logprob: -15.887405395507812
    8. '   ' → logprob: -16.512405395507812
    9. '_end' → logprob: -16.637405395507812
    10. '(end' → logprob: -16.887405395507812

Token 451: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -5.438573680294212e-06
    2. '_s' → logprob: -12.875005722045898
    3. '_points' → logprob: -13.500005722045898
    4. '_' → logprob: -14.625005722045898
    5. ' =' → logprob: -16.1250057220459
    6. 's' → logprob: -16.1250057220459
    7. '=_' → logprob: -16.1250057220459
    8. '=' → logprob: -16.3750057220459
    9. '=[]' → logprob: -16.5000057220459
    10. '```' → logprob: -16.5000057220459

Token 452: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.001647326396778226
    2. 'cir' → logprob: -7.001647472381592
    3. 'irc' → logprob: -8.376646995544434
    4. '_c' → logprob: -8.501646995544434
    5. 'ircle' → logprob: -9.251646995544434
    6. '_' → logprob: -9.501646995544434
    7. 's' → logprob: -10.751646995544434
    8. '```' → logprob: -11.001646995544434
    9. '_ir' → logprob: -11.001646995544434
    10. '#' → logprob: -11.376646995544434

Token 453: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -6.313314952421933e-05
    2. 'icles' → logprob: -11.000062942504883
    3. 'r' → logprob: -11.375062942504883
    4. 'rc' → logprob: -11.500062942504883
    5. 'les' → logprob: -11.500062942504883
    6. 'ir' → logprob: -12.250062942504883
    7. 'cle' → logprob: -12.375062942504883
    8. '```' → logprob: -13.250062942504883
    9. '``' → logprob: -14.500062942504883
    10. '   ' → logprob: -14.875062942504883

Token 454: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005242771934717894
    2. ' =' → logprob: -5.255242824554443
    3. '=[]' → logprob: -11.630242347717285
    4. '[]' → logprob: -17.2552433013916
    5. '=[]
' → logprob: -18.1302433013916
    6. ')' → logprob: -18.2552433013916
    7. '.' → logprob: -18.7552433013916
    8. '[:]' → logprob: -18.7552433013916
    9. '>' → logprob: -18.8802433013916
    10. ':' → logprob: -19.1302433013916

Token 455: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0025348791386932135
    2. ' []' → logprob: -6.002534866333008
    3. '[]
' → logprob: -9.752534866333008
    4. '[' → logprob: -14.627534866333008
    5. '[]

' → logprob: -15.127534866333008
    6. ' []
' → logprob: -16.002534866333008
    7. '[]}' → logprob: -16.127534866333008
    8. '=[]' → logprob: -17.127534866333008
    9. '[])' → logprob: -17.502534866333008
    10. '   ' → logprob: -18.377534866333008

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8749980330467224
    2. ' for' → logprob: -1.2499980926513672
    3. 'for' → logprob: -1.6249980926513672
    4. '
' → logprob: -2.374998092651367
    5. '   ' → logprob: -5.249998092651367
    6. '        
' → logprob: -7.249998092651367
    7. ' 
' → logprob: -8.749998092651367
    8. '  
' → logprob: -8.749998092651367
    9. '<|end|>' → logprob: -8.874998092651367
    10. '    
' → logprob: -9.374998092651367

Token 457: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.908022285439074e-05
    2. ' for' → logprob: -9.750059127807617
    3. '       ' → logprob: -14.250059127807617
    4. '   ' → logprob: -18.000059127807617
    5. '
' → logprob: -18.750059127807617
    6. '	for' → logprob: -20.500059127807617
    7. '        
' → logprob: -21.500059127807617
    8. '```' → logprob: -22.000059127807617
    9. '#' → logprob: -24.125059127807617
    10. '           ' → logprob: -24.500059127807617

Token 458: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3132617771625519
    2. ' i' → logprob: -1.3132617473602295
    3. '(i' → logprob: -17.813261032104492
    4. ' ' → logprob: -17.813261032104492
    5. '	i' → logprob: -18.313261032104492
    6. '   ' → logprob: -19.563261032104492
    7. 'c' → logprob: -19.813261032104492
    8. '  ' → logprob: -20.688261032104492
    9. 'k' → logprob: -20.688261032104492
    10. '_i' → logprob: -21.438261032104492

Token 459: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31396177411079407
    2. 'in' → logprob: -1.3139617443084717
    3. ',' → logprob: -7.313961982727051
    4. ' ' → logprob: -10.93896198272705
    5. ' ,' → logprob: -11.43896198272705
    6. ',c' → logprob: -13.68896198272705
    7. ')' → logprob: -13.93896198272705
    8. 'c' → logprob: -14.93896198272705
    9. '(c' → logprob: -15.06396198272705
    10. '	in' → logprob: -15.06396198272705

Token 460: ' c' (ID: 274)
  Prédit: 'circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'circle' → logprob: -0.9220734238624573
    2. '(circle' → logprob: -1.1720733642578125
    3. '(c' → logprob: -1.2970733642578125
    4. ' (' → logprob: -5.1720733642578125
    5. 'c' → logprob: -5.1720733642578125
    6. '(x' → logprob: -5.4220733642578125
    7. '((' → logprob: -6.5470733642578125
    8. '(' → logprob: -6.7970733642578125
    9. ' circle' → logprob: -7.1720733642578125
    10. '(cx' → logprob: -9.922073364257812

Token 461: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14316526055335999
    2. 'in' → logprob: -2.018165349960327
    3. 's' → logprob: -7.893165111541748
    4. 'n' → logprob: -9.768165588378906
    5. 'ircle' → logprob: -10.268165588378906
    6. 'ircular' → logprob: -12.518165588378906
    7. 'ir' → logprob: -12.893165588378906
    8. ',' → logprob: -13.018165588378906
    9. 'i' → logprob: -13.268165588378906
    10. 'In' → logprob: -13.768165588378906

Token 462: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0067161982879042625
    2. ' enumerate' → logprob: -5.006716251373291
    3. 'in' → logprob: -14.506715774536133
    4. 'en' → logprob: -16.006715774536133
    5. 'range' → logprob: -16.506715774536133
    6. '
' → logprob: -17.256715774536133
    7. '(en' → logprob: -17.506715774536133
    8. ' in' → logprob: -17.756715774536133
    9. '```' → logprob: -17.756715774536133
    10. 'enum' → logprob: -18.881715774536133

Token 463: '(c' (ID: 2410)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.007869347929954529
    2. ' circles' → logprob: -5.382869243621826
    3. '(c' → logprob: -5.757869243621826
    4. 'c' → logprob: -9.632869720458984
    5. 'circ' → logprob: -11.757869720458984
    6. 'circle' → logprob: -12.382869720458984
    7. ')' → logprob: -12.882869720458984
    8. ')c' → logprob: -13.882869720458984
    9. '[c' → logprob: -13.882869720458984
    10. ' cir' → logprob: -14.007869720458984

Token 464: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.016084225848317146
    2. 'cir' → logprob: -4.14108419418335
    3. 'irc' → logprob: -11.141084671020508
    4. 'c' → logprob: -12.141084671020508
    5. '[c' → logprob: -12.266084671020508
    6. '[' → logprob: -12.516084671020508
    7. '(c' → logprob: -12.641084671020508
    8. 'ircle' → logprob: -12.641084671020508
    9. ' circles' → logprob: -12.641084671020508
    10. 'cles' → logprob: -13.016084671020508

Token 465: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.005075671710073948
    2. 'les' → logprob: -5.380075454711914
    3. 'ir' → logprob: -8.130075454711914
    4. 'icles' → logprob: -9.880075454711914
    5. 'le' → logprob: -10.505075454711914
    6. 'r' → logprob: -10.755075454711914
    7. 'cir' → logprob: -11.005075454711914
    8. 'rc' → logprob: -11.255075454711914
    9. '
' → logprob: -12.630075454711914
    10. 'l' → logprob: -12.630075454711914

Token 466: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.029771320521831512
    2. '):' → logprob: -3.529771327972412
    3. '):
' → logprob: -10.904770851135254
    4. '():
' → logprob: -14.029770851135254
    5. ':' → logprob: -14.279770851135254
    6. '):

' → logprob: -14.654770851135254
    7. ':
' → logprob: -14.779770851135254
    8. '   ' → logprob: -16.52977180480957
    9. ' ):
' → logprob: -17.27977180480957
    10. '       ' → logprob: -17.65477180480957

Token 467: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007310695480555296
    2. '       ' → logprob: -6.00731086730957
    3. ':' → logprob: -6.50731086730957
    4. '   ' → logprob: -6.88231086730957
    5. ' if' → logprob: -6.88231086730957
    6. ':
' → logprob: -8.25731086730957
    7. 'if' → logprob: -8.38231086730957
    8. '```' → logprob: -8.38231086730957
    9. '):
' → logprob: -8.75731086730957
    10. ',' → logprob: -9.00731086730957

Token 468: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2049979418516159
    2. ' if' → logprob: -1.7049978971481323
    3. ' px' → logprob: -6.454998016357422
    4. 'px' → logprob: -6.454998016357422
    5. '       ' → logprob: -8.954998016357422
    6. '           ' → logprob: -9.079998016357422
    7. '(px' → logprob: -9.329998016357422
    8. '   ' → logprob: -9.454998016357422
    9. 'x' → logprob: -12.079998016357422
    10. '            
' → logprob: -12.704998016357422

Token 469: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.1269284337759018
    2. 'point' → logprob: -2.1269283294677734
    3. '(point' → logprob: -15.001928329467773
    4. '	point' → logprob: -17.501928329467773
    5. '_point' → logprob: -18.251928329467773
    6. '           ' → logprob: -18.376928329467773
    7. '   ' → logprob: -18.751928329467773
    8. '.point' → logprob: -19.376928329467773
    9. 'Point' → logprob: -19.626928329467773
    10. ' ' → logprob: -19.751928329467773

Token 470: '_inside' (ID: 191028)
  Prédit: '_inside'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inside' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.500000953674316
    3. 'inside' → logprob: -15.750000953674316
    4. '_ins' → logprob: -16.0
    5. '(' → logprob: -17.25
    6. ' _' → logprob: -17.5
    7. '```' → logprob: -18.25
    8. '_out' → logprob: -18.5
    9. 'Inside' → logprob: -18.5
    10. 's' → logprob: -18.875

Token 471: '_circle' (ID: 93883)
  Prédit: '(xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.0005419504595920444
    2. 'xs' → logprob: -7.625542163848877
    3. '(' → logprob: -10.125541687011719
    4. '(x' → logprob: -11.750541687011719
    5. ' (' → logprob: -13.125541687011719
    6. '_x' → logprob: -13.625541687011719
    7. ' xs' → logprob: -13.750541687011719
    8. 'circle' → logprob: -14.875541687011719
    9. ')' → logprob: -15.375541687011719
    10. '((' → logprob: -15.500541687011719

Token 472: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -2.4153549020411447e-05
    2. '(' → logprob: -11.12502384185791
    3. '(x' → logprob: -12.62502384185791
    4. 'xs' → logprob: -12.62502384185791
    5. ' (' → logprob: -13.12502384185791
    6. '(*' → logprob: -15.37502384185791
    7. ' xs' → logprob: -15.62502384185791
    8. '(
' → logprob: -15.75002384185791
    9. '((' → logprob: -16.500024795532227
    10. ')(' → logprob: -16.625024795532227

Token 473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003620147006586194
    2. ' ,' → logprob: -5.628620147705078
    3. ',
' → logprob: -11.628620147705078
    4. ',y' → logprob: -11.878620147705078
    5. ',x' → logprob: -13.753620147705078
    6. ',c' → logprob: -14.378620147705078
    7. '‌,' → logprob: -14.878620147705078
    8. ',s' → logprob: -15.003620147705078
    9. ')' → logprob: -15.003620147705078
    10. ' ' → logprob: -15.128620147705078

Token 474: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.00033546582562848926
    2. ' ys' → logprob: -8.000335693359375
    3. 'ysi' → logprob: -19.000335693359375
    4. ' ' → logprob: -19.000335693359375
    5. '   ' → logprob: -19.000335693359375
    6. '    ' → logprob: -19.625335693359375
    7. '
' → logprob: -19.750335693359375
    8. '

' → logprob: -19.875335693359375
    9. 'yses' → logprob: -20.250335693359375
    10. 'yt' → logprob: -20.625335693359375

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014313090359792113
    2. ',c' → logprob: -6.626431465148926
    3. ' ,' → logprob: -9.501431465148926
    4. 'c' → logprob: -11.001431465148926
    5. ',
' → logprob: -11.251431465148926
    6. ')' → logprob: -15.001431465148926
    7. ' c' → logprob: -15.751431465148926
    8. '```' → logprob: -16.62643051147461
    9. ',

' → logprob: -17.00143051147461
    10. '           ' → logprob: -17.00143051147461

Token 476: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005544631858356297
    2. ' c' → logprob: -7.50055456161499
    3. ')c' → logprob: -14.000554084777832
    4. '   ' → logprob: -15.375554084777832
    5. '           ' → logprob: -15.875554084777832
    6. ')' → logprob: -16.12555503845215
    7. '(c' → logprob: -16.37555503845215
    8. '	c' → logprob: -17.75055503845215
    9. '
' → logprob: -17.87555503845215
    10. '       ' → logprob: -18.12555503845215

Token 477: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25200319290161133
    2. '):' → logprob: -1.5020031929016113
    3. ')' → logprob: -9.627002716064453
    4. '):
' → logprob: -12.127002716064453
    5. ' ):
' → logprob: -14.377002716064453
    6. '):

' → logprob: -14.627002716064453
    7. ':' → logprob: -14.752002716064453
    8. '       ' → logprob: -14.877002716064453
    9. '   ' → logprob: -15.002002716064453
    10. '           ' → logprob: -15.002002716064453

Token 478: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039129287004470825
    2. ':' → logprob: -4.039129257202148
    3. '               ' → logprob: -4.664129257202148
    4. ':
' → logprob: -4.664129257202148
    5. '):
' → logprob: -7.164129257202148
    6. ' or' → logprob: -8.039129257202148
    7. '       ' → logprob: -8.414129257202148
    8. ',' → logprob: -8.664129257202148
    9. ' and' → logprob: -8.789129257202148
    10. '):' → logprob: -9.289129257202148

Token 479: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.31379589438438416
    2. ' start' → logprob: -1.3137959241867065
    3. '               ' → logprob: -7.563796043395996
    4. '[start' → logprob: -11.938796043395996
    5. '           ' → logprob: -12.438796043395996
    6. '                   ' → logprob: -13.063796043395996
    7. '   ' → logprob: -13.688796043395996
    8. ',start' → logprob: -14.813796043395996
    9. '	start' → logprob: -15.188796043395996
    10. ' ' → logprob: -15.688796043395996

Token 480: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.9361264946837764e-07
    2. '_s' → logprob: -17.125
    3. '_' → logprob: -18.0
    4. '\' → logprob: -18.75
    5. '_start' → logprob: -18.75
    6. ' _' → logprob: -19.75
    7. ')_' → logprob: -19.75
    8. '```' → logprob: -20.625
    9. '_tokens' → logprob: -20.875
    10. '
' → logprob: -20.875

Token 481: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0004869186959695071
    2. 'cir' → logprob: -8.375487327575684
    3. 'irc' → logprob: -8.875487327575684
    4. 'ircle' → logprob: -10.250487327575684
    5. 'start' → logprob: -11.625487327575684
    6. 'irl' → logprob: -11.750487327575684
    7. '_ir' → logprob: -11.750487327575684
    8. 'icles' → logprob: -11.750487327575684
    9. 'irk' → logprob: -12.000487327575684
    10. '```' → logprob: -12.125487327575684

Token 482: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -9.13388703338569e-06
    2. 'les' → logprob: -12.000009536743164
    3. 'icles' → logprob: -13.125009536743164
    4. 'cle' → logprob: -15.000009536743164
    5. '```' → logprob: -15.500009536743164
    6. '   ' → logprob: -16.750009536743164
    7. 'cl' → logprob: -16.750009536743164
    8. 'ples' → logprob: -17.125009536743164
    9. '_' → logprob: -17.500009536743164
    10. 'r' → logprob: -17.625009536743164

Token 483: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001930301426909864
    2. '.' → logprob: -6.251930236816406
    3. '.app' → logprob: -14.501930236816406
    4. 'append' → logprob: -14.626930236816406
    5. '.Append' → logprob: -14.751930236816406
    6. '.add' → logprob: -15.501930236816406
    7. '.ap' → logprob: -16.126930236816406
    8. '.push' → logprob: -16.626930236816406
    9. ' .' → logprob: -17.001930236816406
    10. ').' → logprob: -18.001930236816406

Token 484: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00033593899570405483
    2. 'i' → logprob: -8.000335693359375
    3. ' i' → logprob: -15.125335693359375
    4. '(' → logprob: -16.000335693359375
    5. ' (' → logprob: -16.500335693359375
    6. '(
' → logprob: -17.250335693359375
    7. ')i' → logprob: -21.250335693359375
    8. ',i' → logprob: -21.875335693359375
    9. '[i' → logprob: -21.875335693359375
    10. '	i' → logprob: -22.750335693359375

Token 485: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3876851201057434
    2. ')' → logprob: -1.1376850605010986
    3. '           ' → logprob: -7.137685298919678
    4. ')
' → logprob: -11.51268482208252
    5. '       ' → logprob: -12.13768482208252
    6. '               ' → logprob: -13.38768482208252
    7. ' )
' → logprob: -13.88768482208252
    8. ')

' → logprob: -14.38768482208252
    9. ' )' → logprob: -15.26268482208252
    10. ')`
' → logprob: -15.88768482208252

Token 486: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.660315895918757e-05
    2. '<|end|>' → logprob: -10.500076293945312
    3. '       ' → logprob: -10.625076293945312
    4. '
' → logprob: -11.375076293945312
    5. '```' → logprob: -12.250076293945312
    6. '          ' → logprob: -12.875076293945312
    7. '            
' → logprob: -13.125076293945312
    8. '         ' → logprob: -14.500076293945312
    9. '               ' → logprob: -14.500076293945312
    10. ' for' → logprob: -14.750076293945312

Token 487: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6041446924209595
    2. ' if' → logprob: -1.1041446924209595
    3. '           ' → logprob: -2.10414457321167
    4. '       ' → logprob: -11.354145050048828
    5. '
' → logprob: -14.104145050048828
    6. 'elif' → logprob: -14.479145050048828
    7. '          ' → logprob: -14.979145050048828
    8. '   ' → logprob: -15.729145050048828
    9. '            
' → logprob: -16.104145050048828
    10. 'for' → logprob: -16.229145050048828

Token 488: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.0067154900170862675
    2. ' point' → logprob: -5.006715297698975
    3. '(point' → logprob: -16.631715774536133
    4. '	point' → logprob: -17.881715774536133
    5. '   ' → logprob: -19.006715774536133
    6. 'points' → logprob: -19.006715774536133
    7. 'pt' → logprob: -19.506715774536133
    8. ' ' → logprob: -19.506715774536133
    9. '_point' → logprob: -19.631715774536133
    10. '.point' → logprob: -19.631715774536133

Token 489: '_inside' (ID: 191028)
  Prédit: '_inside'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inside' → logprob: -6.64708495605737e-05
    2. 'inside' → logprob: -9.750066757202148
    3. 'Inside' → logprob: -11.750066757202148
    4. ' inside' → logprob: -15.375066757202148
    5. ' ' → logprob: -18.25006675720215
    6. '   ' → logprob: -18.37506675720215
    7. '=' → logprob: -19.00006675720215
    8. '```' → logprob: -19.00006675720215
    9. '           ' → logprob: -19.25006675720215
    10. '               ' → logprob: -19.37506675720215

Token 490: '_circle' (ID: 93883)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6491872072219849
    2. '_circle' → logprob: -0.7741872072219849
    3. 'circle' → logprob: -4.274187088012695
    4. 'c' → logprob: -6.774187088012695
    5. '(circle' → logprob: -7.649187088012695
    6. 'Circle' → logprob: -8.149187088012695
    7. '_xt' → logprob: -8.524187088012695
    8. '(c' → logprob: -8.649187088012695
    9. 'xt' → logprob: -8.899187088012695
    10. '(x' → logprob: -10.274187088012695

Token 491: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002680112374946475
    2. 'xt' → logprob: -8.25026798248291
    3. '_xt' → logprob: -12.87526798248291
    4. ' (' → logprob: -13.25026798248291
    5. '```' → logprob: -13.50026798248291
    6. '
' → logprob: -15.50026798248291
    7. ' xt' → logprob: -15.62526798248291
    8. '(
' → logprob: -15.75026798248291
    9. '``' → logprob: -16.125268936157227
    10. '

' → logprob: -16.250268936157227

Token 492: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.75
    3. ' xt' → logprob: -17.375
    4. '_xt' → logprob: -18.875
    5. '   ' → logprob: -19.0
    6. '```' → logprob: -19.125
    7. 'xto' → logprob: -19.75
    8. '
' → logprob: -19.875
    9. '.xt' → logprob: -20.0
    10. '  ' → logprob: -20.25

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.537868779967539e-06
    2. ' ,' → logprob: -11.875008583068848
    3. ',
' → logprob: -13.875008583068848
    4. 'c' → logprob: -15.125008583068848
    5. ',c' → logprob: -15.375008583068848
    6. '_,' → logprob: -17.12500762939453
    7. '‌,' → logprob: -17.50000762939453
    8. '<|end|>' → logprob: -17.87500762939453
    9. ',y' → logprob: -18.12500762939453
    10. ')' → logprob: -18.12500762939453

Token 494: ' yt' (ID: 116521)
  Prédit: 'yt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yt' → logprob: -0.00317783304490149
    2. ' yt' → logprob: -5.753177642822266
    3. 'YT' → logprob: -17.003177642822266
    4. 'ys' → logprob: -18.003177642822266
    5. ' ' → logprob: -19.378177642822266
    6. '    ' → logprob: -20.003177642822266
    7. 'ytt' → logprob: -20.003177642822266
    8. '   ' → logprob: -20.503177642822266
    9. 'yti' → logprob: -21.003177642822266
    10. 'xt' → logprob: -21.128177642822266

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001266613689949736
    2. ',c' → logprob: -9.250126838684082
    3. ' ,' → logprob: -10.500126838684082
    4. 'c' → logprob: -13.500126838684082
    5. ',
' → logprob: -13.625126838684082
    6. ')' → logprob: -15.500126838684082
    7. '_,' → logprob: -17.000125885009766
    8. '‌,' → logprob: -17.875125885009766
    9. '),' → logprob: -18.000125885009766
    10. ')c' → logprob: -18.500125885009766

Token 496: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.016036363318562508
    2. ' c' → logprob: -4.141036510467529
    3. ')c' → logprob: -13.766036033630371
    4. ',' → logprob: -15.141036033630371
    5. ')' → logprob: -15.516036033630371
    6. ' ' → logprob: -16.016036987304688
    7. '           ' → logprob: -16.641036987304688
    8. '   ' → logprob: -16.641036987304688
    9. '(c' → logprob: -16.766036987304688
    10. '	c' → logprob: -17.016036987304688

Token 497: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16090291738510132
    2. '):
' → logprob: -1.910902976989746
    3. ',' → logprob: -7.535902976989746
    4. ')' → logprob: -9.160902976989746
    5. '):

' → logprob: -11.660902976989746
    6. ' ):' → logprob: -11.660902976989746
    7. '           ' → logprob: -12.035902976989746
    8. ':' → logprob: -12.535902976989746
    9. '):
' → logprob: -12.660902976989746
    10. 'c' → logprob: -12.910902976989746

Token 498: '               ' (ID: 506)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4530617594718933
    2. '               ' → logprob: -1.203061819076538
    3. ' end' → logprob: -2.953061819076538
    4. '           ' → logprob: -4.828061580657959
    5. '(end' → logprob: -6.328061580657959
    6. '[end' → logprob: -6.828061580657959
    7. ',end' → logprob: -7.578061580657959
    8. '=end' → logprob: -8.828062057495117
    9. '       ' → logprob: -9.578062057495117
    10. ':end' → logprob: -9.828062057495117

Token 499: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.0031777136027812958
    2. ' end' → logprob: -5.753177642822266
    3. '           ' → logprob: -19.003177642822266
    4. '(end' → logprob: -19.128177642822266
    5. '[end' → logprob: -20.003177642822266
    6. '.end' → logprob: -21.003177642822266
    7. '=end' → logprob: -21.253177642822266
    8. '	end' → logprob: -21.878177642822266
    9. '               ' → logprob: -22.253177642822266
    10. '       ' → logprob: -22.378177642822266

Token 500: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.4855663721391466e-05
    2. '_s' → logprob: -11.125015258789062
    3. ')_' → logprob: -17.375015258789062
    4. ')' → logprob: -17.875015258789062
    5. '"_' → logprob: -17.875015258789062
    6. '           ' → logprob: -18.000015258789062
    7. '```' → logprob: -18.250015258789062
    8. ' _' → logprob: -18.250015258789062
    9. ''_' → logprob: -18.375015258789062
    10. '_' → logprob: -18.625015258789062

Token 501: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.04659136012196541
    2. 'cir' → logprob: -3.546591281890869
    3. '_c' → logprob: -4.171591281890869
    4. 's' → logprob: -7.046591281890869
    5. '_s' → logprob: -8.546591758728027
    6. 'irc' → logprob: -9.921591758728027
    7. 'ircle' → logprob: -10.546591758728027
    8. 'c' → logprob: -10.671591758728027
    9. 'irl' → logprob: -10.671591758728027
    10. 'ircular' → logprob: -10.796591758728027

Token 502: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.0008848957950249314
    2. 'ir' → logprob: -7.500885009765625
    3. 'icles' → logprob: -8.750885009765625
    4. 'les' → logprob: -9.500885009765625
    5. 'cir' → logprob: -10.625885009765625
    6. 'c' → logprob: -11.000885009765625
    7. 't' → logprob: -11.125885009765625
    8. 'cle' → logprob: -11.625885009765625
    9. '```' → logprob: -11.875885009765625
    10. '_c' → logprob: -12.750885009765625

Token 503: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.5861724831629544e-05
    2. 'append' → logprob: -10.375056266784668
    3. '.' → logprob: -10.750056266784668
    4. '.Append' → logprob: -13.375056266784668
    5. '.app' → logprob: -14.625056266784668
    6. 'app' → logprob: -14.750056266784668
    7. 'appen' → logprob: -15.750056266784668
    8. ' .' → logprob: -16.00005531311035
    9. '_append' → logprob: -16.00005531311035
    10. 'Append' → logprob: -16.25005531311035

Token 504: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -16.125
    3. ' (' → logprob: -16.125
    4. '[i' → logprob: -18.0
    5. '(' → logprob: -18.75
    6. ' i' → logprob: -19.75
    7. '   ' → logprob: -19.75
    8. ')' → logprob: -19.875
    9. ')i' → logprob: -20.125
    10. '(
' → logprob: -20.375

Token 505: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008934747893363237
    2. '<|end|>' → logprob: -7.500893592834473
    3. '       ' → logprob: -8.375893592834473
    4. ')
' → logprob: -9.375893592834473
    5. '<|end|>' → logprob: -11.750893592834473
    6. '
' → logprob: -12.750893592834473
    7. '())' → logprob: -12.875893592834473
    8. ' )' → logprob: -13.375893592834473
    9. '#' → logprob: -13.750893592834473
    10. '")' → logprob: -13.750893592834473

Token 506: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07993241399526596
    2. '   ' → logprob: -3.329932451248169
    3. '       ' → logprob: -3.329932451248169
    4. 'graph' → logprob: -6.07993221282959
    5. 'if' → logprob: -6.20493221282959
    6. '    
' → logprob: -8.20493221282959
    7. '        
' → logprob: -8.57993221282959
    8. '<|end|>' → logprob: -9.07993221282959
    9. ' if' → logprob: -9.20493221282959
    10. '

' → logprob: -9.45493221282959

Token 507: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5321233868598938
    2. 'graph' → logprob: -1.282123327255249
    3. '       ' → logprob: -2.157123327255249
    4. ' if' → logprob: -4.157123565673828
    5. '   ' → logprob: -6.157123565673828
    6. ' graph' → logprob: -6.907123565673828
    7. '
' → logprob: -7.532123565673828
    8. '	graph' → logprob: -9.282123565673828
    9. '        
' → logprob: -9.782123565673828
    10. '```' → logprob: -10.282123565673828

Token 508: ' If' (ID: 1843)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.22596073150634766
    2. 'if' → logprob: -1.6009607315063477
    3. '       ' → logprob: -7.850960731506348
    4. '#' → logprob: -9.225960731506348
    5. ' if' → logprob: -10.225960731506348
    6. ' graph' → logprob: -11.225960731506348
    7. '   ' → logprob: -12.600960731506348
    8. 'graphs' → logprob: -13.725960731506348
    9. '	graph' → logprob: -13.725960731506348
    10. 'for' → logprob: -13.975960731506348

Token 509: ' start' (ID: 1604)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.03129490837454796
    2. 'len' → logprob: -4.156294822692871
    3. ' not' → logprob: -4.281294822692871
    4. 'start' → logprob: -6.656294822692871
    5. ' len' → logprob: -10.656294822692871
    6. '(not' → logprob: -12.406294822692871
    7. ' start' → logprob: -13.031294822692871
    8. '(len' → logprob: -13.031294822692871
    9. ' ' → logprob: -14.156294822692871
    10. '   ' → logprob: -14.906294822692871

Token 510: ' or' (ID: 503)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.1994775377388578e-05
    2. 'in' → logprob: -12.625012397766113
    3. ' in' → logprob: -13.125012397766113
    4. 'not' → logprob: -13.375012397766113
    5. '_' → logprob: -13.875012397766113
    6. ' not' → logprob: -13.875012397766113
    7. 'cir' → logprob: -13.875012397766113
    8. 'and' → logprob: -14.000012397766113
    9. 'c' → logprob: -14.625012397766113
    10. '_s' → logprob: -15.625012397766113

Token 511: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0382361076772213
    2. 'not' → logprob: -3.538236141204834
    3. ' end' → logprob: -5.038236141204834
    4. ' not' → logprob: -6.288236141204834
    5. 'len' → logprob: -9.163235664367676
    6. '_end' → logprob: -14.538235664367676
    7. ' len' → logprob: -14.663235664367676
    8. 'stop' → logprob: -14.913235664367676
    9. ' ' → logprob: -15.663235664367676
    10. 'point' → logprob: -16.163236618041992

Token 512: ' not' (ID: 625)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.001858080504462123
    2. 'not' → logprob: -6.626858234405518
    3. ' not' → logprob: -7.876858234405518
    4. 'cir' → logprob: -9.25185775756836
    5. '_not' → logprob: -10.87685775756836
    6. 'len' → logprob: -11.62685775756836
    7. 'c' → logprob: -11.75185775756836
    8. '_s' → logprob: -12.62685775756836
    9. 'points' → logprob: -12.75185775756836
    10. '_points' → logprob: -13.25185775756836

Token 513: ' inside' (ID: 6772)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0019613439217209816
    2. 'c' → logprob: -7.5019612312316895
    3. 'cir' → logprob: -7.8769612312316895
    4. 'found' → logprob: -8.126961708068848
    5. ' or' → logprob: -8.251961708068848
    6. 'start' → logprob: -9.251961708068848
    7. 'in' → logprob: -9.376961708068848
    8. '   ' → logprob: -9.751961708068848
    9. ' in' → logprob: -10.251961708068848
    10. '_found' → logprob: -10.376961708068848

Token 514: ' any' (ID: 1062)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.48807674646377563
    2. ' not' → logprob: -1.4880766868591309
    3. ' start' → logprob: -2.363076686859131
    4. 'not' → logprob: -2.738076686859131
    5. ' ' → logprob: -7.613076686859131
    6. '(start' → logprob: -8.238077163696289
    7. 'cir' → logprob: -9.113077163696289
    8. ' (' → logprob: -9.238077163696289
    9. ' any' → logprob: -9.363077163696289
    10. '(not' → logprob: -9.488077163696289

Token 515: ' circle' (ID: 22005)
  Prédit: 'circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'circle' → logprob: -0.9283771514892578
    2. ' circle' → logprob: -1.8033771514892578
    3. ' start' → logprob: -1.9283771514892578
    4. 'start' → logprob: -2.053377151489258
    5. '_c' → logprob: -2.178377151489258
    6. '_circle' → logprob: -3.428377151489258
    7. '_' → logprob: -5.303377151489258
    8. 'if' → logprob: -5.553377151489258
    9. ' of' → logprob: -6.053377151489258
    10. ' if' → logprob: -6.178377151489258

Token 516: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3274643123149872
    2. ':
' → logprob: -1.4524643421173096
    3. ',' → logprob: -3.8274643421173096
    4. ' or' → logprob: -4.0774641036987305
    5. 'or' → logprob: -5.8274641036987305
    6. '           ' → logprob: -6.5774641036987305
    7. '       ' → logprob: -6.8274641036987305
    8. 'and' → logprob: -7.7024641036987305
    9. ' and' → logprob: -8.07746410369873
    10. ':return' → logprob: -8.70246410369873

Token 517: ' that' (ID: 484)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6990423202514648
    2. ' print' → logprob: -1.3240423202514648
    3. '       ' → logprob: -1.4490423202514648
    4. '           ' → logprob: -6.574042320251465
    5. 'if' → logprob: -8.199042320251465
    6. ' if' → logprob: -8.199042320251465
    7. '```' → logprob: -9.574042320251465
    8. '   ' → logprob: -10.199042320251465
    9. '        
' → logprob: -11.449042320251465
    10. '
' → logprob: -12.074042320251465

Token 518: ' means' (ID: 4748)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6085284352302551
    2. 'return' → logprob: -1.7335283756256104
    3. ' print' → logprob: -1.8585283756256104
    4. '   ' → logprob: -3.1085283756256104
    5. ' return' → logprob: -3.1085283756256104
    6. '
' → logprob: -4.4835286140441895
    7. '       ' → logprob: -4.6085286140441895
    8. '```' → logprob: -5.3585286140441895
    9. '        
' → logprob: -6.3585286140441895
    10. ''s' → logprob: -6.6085286140441895

Token 519: ' rat' (ID: 8908)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01311540137976408
    2. '       ' → logprob: -4.513115406036377
    3. ' print' → logprob: -7.013115406036377
    4. '   ' → logprob: -7.263115406036377
    5. 'the' → logprob: -8.888114929199219
    6. 'no' → logprob: -9.388114929199219
    7. '           ' → logprob: -9.763114929199219
    8. 'we' → logprob: -10.013114929199219
    9. 'im' → logprob: -10.638114929199219
    10. 'there' → logprob: -10.638114929199219

Token 520: ' or' (ID: 503)
  Prédit: 'cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cannot' → logprob: -0.3133852779865265
    2. ' cannot' → logprob: -1.813385248184204
    3. 's' → logprob: -3.063385248184204
    4. ' can't' → logprob: -3.313385248184204
    5. 'can't' → logprob: -4.313385486602783
    6. 'can' → logprob: -6.063385486602783
    7. ' can' → logprob: -6.563385486602783
    8. ' ' → logprob: -6.688385486602783
    9. '   ' → logprob: -6.938385486602783
    10. '
' → logprob: -7.313385486602783

Token 521: ' fish' (ID: 13897)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.5671588182449341
    2. 'che' → logprob: -1.317158818244934
    3. 'hole' → logprob: -2.1921586990356445
    4. 'target' → logprob: -3.9421586990356445
    5. 'trap' → logprob: -4.9421586990356445
    6. 'chef' → logprob: -5.4421586990356445
    7. 'human' → logprob: -6.3171586990356445
    8. 'owl' → logprob: -6.4421586990356445
    9. 'destination' → logprob: -6.5671586990356445
    10. 'food' → logprob: -6.6921586990356445

Token 522: ' are' (ID: 553)
  Prédit: ' cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cannot' → logprob: -0.8079866766929626
    2. 'cannot' → logprob: -0.9329866766929626
    3. ' can't' → logprob: -2.1829867362976074
    4. ' is' → logprob: -3.9329867362976074
    5. ' are' → logprob: -4.682986736297607
    6. ' can' → logprob: -5.057986736297607
    7. 'can't' → logprob: -5.307986736297607
    8. '   ' → logprob: -6.432986736297607
    9. ' has' → logprob: -6.807986736297607
    10. 'is' → logprob: -7.057986736297607

Token 523: ' outside' (ID: 7539)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3990842401981354
    2. 'already' → logprob: -1.274084210395813
    3. 'outside' → logprob: -3.2740843296051025
    4. 'safe' → logprob: -5.399084091186523
    5. 'caught' → logprob: -6.649084091186523
    6. 'free' → logprob: -7.149084091186523
    7. ' not' → logprob: -7.274084091186523
    8. 'st' → logprob: -7.524084091186523
    9. 'tr' → logprob: -7.649084091186523
    10. 'on' → logprob: -7.649084091186523

Token 524: ' walls' (ID: 20562)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5156778693199158
    2. 'the' → logprob: -1.7656779289245605
    3. ' the' → logprob: -2.2656779289245605
    4. ',' → logprob: -2.8906779289245605
    5. '```' → logprob: -3.7656779289245605
    6. '           ' → logprob: -3.8906779289245605
    7. ' and' → logprob: -4.5156779289245605
    8. 'and' → logprob: -4.7656779289245605
    9. ' of' → logprob: -5.2656779289245605
    10. 'of' → logprob: -6.7656779289245605

Token 525: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07335739582777023
    2. ',' → logprob: -2.698357343673706
    3. ' and' → logprob: -5.948357582092285
    4. '.' → logprob: -7.948357582092285
    5. '<|end|>' → logprob: -8.323357582092285
    6. ',
' → logprob: -10.198357582092285
    7. ' or' → logprob: -10.323357582092285
    8. ';' → logprob: -11.198357582092285
    9. '           ' → logprob: -11.323357582092285
    10. ':' → logprob: -11.323357582092285

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012213163427077234
    2. '        
' → logprob: -10.6251220703125
    3. '
' → logprob: -10.7501220703125
    4. ' if' → logprob: -11.1251220703125
    5. '```' → logprob: -11.1251220703125
    6. 'return' → logprob: -11.3751220703125
    7. '<|end|>' → logprob: -11.6251220703125
    8. 'if' → logprob: -12.0001220703125
    9. '           ' → logprob: -12.0001220703125
    10. ' return' → logprob: -12.1251220703125

Token 527: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09783444553613663
    2. ' if' → logprob: -2.722834348678589
    3. 'if' → logprob: -3.597834348678589
    4. '
' → logprob: -9.847834587097168
    5. '```' → logprob: -9.972834587097168
    6. '   ' → logprob: -11.222834587097168
    7. '        
' → logprob: -11.847834587097168
    8. '           ' → logprob: -12.597834587097168
    9. ' continue' → logprob: -13.472834587097168
    10. 'continue' → logprob: -13.722834587097168

Token 528: ' The' (ID: 623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10054177790880203
    2. 'print' → logprob: -2.975541830062866
    3. '       ' → logprob: -3.350541830062866
    4. ' if' → logprob: -4.975541591644287
    5. '#' → logprob: -6.100541591644287
    6. '
' → logprob: -9.100542068481445
    7. 'for' → logprob: -9.100542068481445
    8. ' print' → logprob: -9.350542068481445
    9. '```' → logprob: -9.975542068481445
    10. '   ' → logprob: -10.975542068481445

Token 529: ' rat' (ID: 8908)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6973962187767029
    2. 'if' → logprob: -0.8223962187767029
    3. '#' → logprob: -2.9473962783813477
    4. '       ' → logprob: -5.322396278381348
    5. ' if' → logprob: -6.072396278381348
    6. ' print' → logprob: -7.322396278381348
    7. '   ' → logprob: -7.572396278381348
    8. 'continue' → logprob: -7.697396278381348
    9. 'return' → logprob: -7.947396278381348
    10. 'import' → logprob: -8.572396278381348

Token 530: ' must' (ID: 2804)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8682087063789368
    2. ' and' → logprob: -1.368208646774292
    3. ' may' → logprob: -2.618208646774292
    4. 'and' → logprob: -2.993208646774292
    5. ' cannot' → logprob: -3.118208646774292
    6. ' is' → logprob: -3.368208646774292
    7. ' or' → logprob: -3.493208646774292
    8. 'cannot' → logprob: -3.993208646774292
    9. ' might' → logprob: -4.118208885192871
    10. 'can' → logprob: -4.368208885192871

Token 531: ' cross' (ID: 8088)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -1.366132140159607
    2. 'be' → logprob: -1.991132140159607
    3. 'not' → logprob: -1.991132140159607
    4. 'stay' → logprob: -2.1161322593688965
    5. 'start' → logprob: -2.3661322593688965
    6. 'escape' → logprob: -3.1161322593688965
    7. ' be' → logprob: -3.1161322593688965
    8. ' not' → logprob: -3.4911322593688965
    9. ' move' → logprob: -3.9911322593688965
    10. 'pass' → logprob: -4.2411322593688965

Token 532: ' all' (ID: 722)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.4802662432193756
    2. ' a' → logprob: -2.1052663326263428
    3. ' the' → logprob: -2.3552663326263428
    4. 'at' → logprob: -2.4802663326263428
    5. 'the' → logprob: -3.6052663326263428
    6. 'a' → logprob: -3.8552663326263428
    7. ' all' → logprob: -4.480266094207764
    8. 'all' → logprob: -5.105266094207764
    9. ' one' → logprob: -6.230266094207764
    10. ' outside' → logprob: -6.730266094207764

Token 533: ' walls' (ID: 20562)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.7348067164421082
    2. 'walls' → logprob: -0.8598067164421082
    3. 'the' → logprob: -2.734806776046753
    4. ' circles' → logprob: -4.984806537628174
    5. 'outer' → logprob: -5.109806537628174
    6. ' walls' → logprob: -5.734806537628174
    7. 'circle' → logprob: -5.984806537628174
    8. ' the' → logprob: -6.234806537628174
    9. 'spaces' → logprob: -6.734806537628174
    10. 'lines' → logprob: -6.734806537628174

Token 534: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011636679992079735
    2. ' if' → logprob: -5.011636734008789
    3. '
' → logprob: -6.261636734008789
    4. '        
' → logprob: -6.761636734008789
    5. '<|end|>' → logprob: -7.011636734008789
    6. ',' → logprob: -8.136636734008789
    7. ' and' → logprob: -9.386636734008789
    8. 'if' → logprob: -9.511636734008789
    9. 'If' → logprob: -10.011636734008789
    10. '```' → logprob: -10.011636734008789

Token 535: ' separate' (ID: 13574)
  Prédit: ' separate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' separate' → logprob: -1.2880741357803345
    2. 'se' → logprob: -1.7880741357803345
    3. 'are' → logprob: -1.9130741357803345
    4. 'sur' → logprob: -2.288074016571045
    5. 'en' → logprob: -2.538074016571045
    6. ' surround' → logprob: -2.663074016571045
    7. ' lie' → logprob: -3.288074016571045
    8. ' are' → logprob: -3.788074016571045
    9. 'block' → logprob: -4.038074016571045
    10. ' en' → logprob: -4.413074016571045

Token 536: ' start' (ID: 1604)
  Prédit: 'them'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'them' → logprob: -0.6506891250610352
    2. 'the' → logprob: -0.9006891250610352
    3. ' them' → logprob: -3.150689125061035
    4. 'start' → logprob: -3.775689125061035
    5. ' the' → logprob: -5.275689125061035
    6. 'it' → logprob: -7.900689125061035
    7. 'rat' → logprob: -8.275689125061035
    8. ' start' → logprob: -8.525689125061035
    9. 'both' → logprob: -9.275689125061035
    10. 'rats' → logprob: -10.025689125061035

Token 537: ' from' (ID: 591)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.10486457496881485
    2. ' and' → logprob: -2.3548645973205566
    3. 'or' → logprob: -6.479864597320557
    4. 'from' → logprob: -6.729864597320557
    5. ' or' → logprob: -7.104864597320557
    6. 'point' → logprob: -8.104864120483398
    7. '_c' → logprob: -8.229864120483398
    8. '       ' → logprob: -8.479864120483398
    9. '   ' → logprob: -9.729864120483398
    10. ' ' → logprob: -9.729864120483398

Token 538: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0016201919643208385
    2. ' end' → logprob: -6.751620292663574
    3. 'the' → logprob: -7.751620292663574
    4. ' the' → logprob: -11.126620292663574
    5. 'target' → logprob: -12.626620292663574
    6. 'fish' → logprob: -14.626620292663574
    7. 'point' → logprob: -14.751620292663574
    8. 'finish' → logprob: -14.876620292663574
    9. 'them' → logprob: -15.251620292663574
    10. 'destination' → logprob: -15.626620292663574

Token 539: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05095380172133446
    2. '
' → logprob: -3.6759538650512695
    3. ' if' → logprob: -4.8009538650512695
    4. '        
' → logprob: -4.9259538650512695
    5. '<|end|>' → logprob: -5.5509538650512695
    6. ',' → logprob: -5.8009538650512695
    7. 'if' → logprob: -7.4259538650512695
    8. ' to' → logprob: -8.17595386505127
    9. ' and' → logprob: -8.55095386505127
    10. '#' → logprob: -9.05095386505127

Token 540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0799754410982132
    2. ' if' → logprob: -3.4549753665924072
    3. 'if' → logprob: -3.4549753665924072
    4. '#' → logprob: -4.954975605010986
    5. 'graph' → logprob: -5.704975605010986
    6. ' graph' → logprob: -6.579975605010986
    7. '        
' → logprob: -7.329975605010986
    8. '   ' → logprob: -8.204975128173828
    9. ' #' → logprob: -8.704975128173828
    10. 'If' → logprob: -8.704975128173828

Token 541: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6820464134216309
    2. '       ' → logprob: -1.1820464134216309
    3. ' graph' → logprob: -2.557046413421631
    4. ' if' → logprob: -3.057046413421631
    5. 'if' → logprob: -3.182046413421631
    6. '#' (adapté à ' #') → logprob: -4.057046413421631
    7. '        
' → logprob: -6.807046413421631
    8. '
' → logprob: -7.182046413421631
    9. ' #' → logprob: -7.557046413421631
    10. '	graph' → logprob: -7.557046413421631

Token 542: ' Build' (ID: 10885)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.011693938635289669
    2. 'if' → logprob: -4.636693954467773
    3. '#' → logprob: -6.511693954467773
    4. '       ' → logprob: -8.011693954467773
    5. 'If' → logprob: -10.386693954467773
    6. '```' → logprob: -10.511693954467773
    7. ' graph' → logprob: -11.011693954467773
    8. '   ' → logprob: -12.136693954467773
    9. '	graph' → logprob: -12.136693954467773
    10. '
' → logprob: -12.261693954467773

Token 543: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.023282868787646294
    2. ' graph' → logprob: -3.773282766342163
    3. '_graph' → logprob: -11.148283004760742
    4. 'the' → logprob: -11.273283004760742
    5. '	graph' → logprob: -12.648283004760742
    6. '(graph' → logprob: -12.773283004760742
    7. ' the' → logprob: -13.023283004760742
    8. '   ' → logprob: -13.773283004760742
    9. '```' → logprob: -14.648283004760742
    10. '
' → logprob: -15.898283004760742

Token 544: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2850800156593323
    2. 'graph' → logprob: -1.6600799560546875
    3. '(graph' → logprob: -3.5350799560546875
    4. ' graph' → logprob: -3.9100799560546875
    5. '   ' → logprob: -5.2850799560546875
    6. ' =' → logprob: -6.5350799560546875
    7. '=' → logprob: -6.6600799560546875
    8. ',' → logprob: -8.160079956054688
    9. '	graph' → logprob: -8.285079956054688
    10. ' and' → logprob: -9.160079956054688

Token 545: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.015369097702205181
    2. ' circles' → logprob: -4.265368938446045
    3. 'c' → logprob: -8.140369415283203
    4. 'graph' → logprob: -8.140369415283203
    5. 'circle' → logprob: -8.640369415283203
    6. 'adj' → logprob: -8.890369415283203
    7. 'touch' → logprob: -9.140369415283203
    8. 'inter' → logprob: -9.890369415283203
    9. 'the' → logprob: -10.390369415283203
    10. 'connections' → logprob: -10.640369415283203

Token 546: ' connected' (ID: 12079)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035795968025922775
    2. 'graph' → logprob: -3.9107959270477295
    3. '(graph' → logprob: -4.660796165466309
    4. ' graph' → logprob: -6.285796165466309
    5. '   ' → logprob: -6.285796165466309
    6. ',' → logprob: -6.660796165466309
    7. ' and' → logprob: -8.785796165466309
    8. ')' → logprob: -9.160796165466309
    9. '	graph' → logprob: -9.160796165466309
    10. '=' → logprob: -9.785796165466309

Token 547: ' if' (ID: 538)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.5329192876815796
    2. '   ' → logprob: -1.5329192876815796
    3. 'by' → logprob: -1.6579192876815796
    4. '       ' → logprob: -5.782919406890869
    5. 'graph' → logprob: -7.157919406890869
    6. '           ' → logprob: -7.782919406890869
    7. '=' → logprob: -8.032918930053711
    8. ' through' → logprob: -8.032918930053711
    9. ',' → logprob: -8.407918930053711
    10. 'through' → logprob: -8.532918930053711

Token 548: ' they' (ID: 1023)
  Prédit: 'they'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'they' → logprob: -0.4176058769226074
    2. 'cir' → logprob: -1.2926058769226074
    3. ' they' → logprob: -2.7926058769226074
    4. ' circles' → logprob: -5.417605876922607
    5. '```' → logprob: -7.542605876922607
    6. 'touch' → logprob: -8.917606353759766
    7. 'their' → logprob: -9.292606353759766
    8. 'the' → logprob: -9.417606353759766
    9. ' their' → logprob: -9.917606353759766
    10. '   ' → logprob: -10.042606353759766

Token 549: ' touch' (ID: 7381)
  Prédit: '_touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_touch' → logprob: -0.6738160848617554
    2. 'touch' → logprob: -0.9238160848617554
    3. ' touch' → logprob: -2.548816204071045
    4. '```' → logprob: -5.048816204071045
    5. ' are' → logprob: -6.048816204071045
    6. ' circles' → logprob: -7.048816204071045
    7. 'cir' → logprob: -7.298816204071045
    8. '_TOUCH' → logprob: -7.423816204071045
    9. '.touch' → logprob: -7.548816204071045
    10. '   ' → logprob: -7.798816204071045

Token 550: '/c' (ID: 4308)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.5786051750183105
    2. ' or' → logprob: -0.8286051750183105
    3. '_or' → logprob: -6.5786051750183105
    4. '   ' → logprob: -7.2036051750183105
    5. '           ' → logprob: -8.328605651855469
    6. '	or' → logprob: -8.953605651855469
    7. '       ' → logprob: -9.828605651855469
    8. '               ' → logprob: -10.203605651855469
    9. '
' → logprob: -10.578605651855469
    10. '(or' → logprob: -11.953605651855469

Token 551: 'ross' (ID: 2838)
  Prédit: 'ross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ross' → logprob: -2.0100624169572257e-05
    2. 'cross' → logprob: -11.125020027160645
    3. 'rossover' → logprob: -13.125020027160645
    4. 'oss' → logprob: -13.875020027160645
    5. 'ros' → logprob: -14.500020027160645
    6. ' ross' → logprob: -15.000020027160645
    7. 'on' → logprob: -15.125020027160645
    8. 'r' → logprob: -15.250020027160645
    9. 'ro' → logprob: -15.625020027160645
    10. 'ROSS' → logprob: -16.25002098083496

Token 552: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5551067590713501
    2. 'graph' → logprob: -0.9301067590713501
    3. ' graph' → logprob: -3.9301066398620605
    4. '(graph' → logprob: -4.8051066398620605
    5. '   ' → logprob: -5.9301066398620605
    6. ',' → logprob: -8.305107116699219
    7. '	graph' → logprob: -8.805107116699219
    8. '
' → logprob: -8.805107116699219
    9. ' (' → logprob: -9.805107116699219
    10. '.' → logprob: -9.930107116699219

Token 553: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4142496585845947
    2. 'graph' → logprob: -1.1642496585845947
    3. ' graph' → logprob: -3.6642496585845947
    4. '   ' → logprob: -7.289249420166016
    5. '	graph' → logprob: -8.414249420166016
    6. '
' → logprob: -8.664249420166016
    7. '        
' → logprob: -8.914249420166016
    8. '```' → logprob: -9.039249420166016
    9. '(graph' → logprob: -11.039249420166016
    10. '    
' → logprob: -11.789249420166016

Token 554: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.09572894126176834
    2. ' graph' → logprob: -2.595728874206543
    3. '       ' → logprob: -4.095728874206543
    4. '	graph' → logprob: -10.220728874206543
    5. '```' → logprob: -11.470728874206543
    6. '   ' → logprob: -13.220728874206543
    7. '_graph' → logprob: -13.220728874206543
    8. '(graph' → logprob: -13.345728874206543
    9. 'Graph' → logprob: -14.220728874206543
    10. '.graph' → logprob: -14.970728874206543

Token 555: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868710398674011
    2. ' =' → logprob: -1.136871099472046
    3. ',' → logprob: -18.011871337890625
    4. '＝' → logprob: -18.761871337890625
    5. '=create' → logprob: -18.886871337890625
    6. ')' → logprob: -19.136871337890625
    7. '=}' → logprob: -19.511871337890625
    8. '=

' → logprob: -19.636871337890625
    9. '.=' → logprob: -20.386871337890625
    10. ' =)' → logprob: -20.386871337890625

Token 556: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.07889033854007721
    2. ' build' → logprob: -2.578890323638916
    3. '(build' → logprob: -14.453890800476074
    4. '	build' → logprob: -16.953889846801758
    5. '_build' → logprob: -18.953889846801758
    6. 'graph' → logprob: -19.328889846801758
    7. 'built' → logprob: -19.328889846801758
    8. '.build' → logprob: -19.578889846801758
    9. '   ' → logprob: -19.578889846801758
    10. 'b' → logprob: -20.203889846801758

Token 557: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -1.3425219549390022e-05
    2. '(graph' → logprob: -11.25001335144043
    3. 'graph' → logprob: -15.37501335144043
    4. '_' → logprob: -16.00001335144043
    5. '_gr' → logprob: -17.12501335144043
    6. '_GRAPH' → logprob: -17.50001335144043
    7. '```' → logprob: -18.00001335144043
    8. '_g' → logprob: -19.12501335144043
    9. '_circle' → logprob: -19.25001335144043
    10. 'Graph' → logprob: -19.25001335144043

Token 558: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.816093228830141e-06
    2. '(graph' → logprob: -12.87500286102295
    3. ')c' → logprob: -16.875001907348633
    4. '(' → logprob: -17.375001907348633
    5. '```' → logprob: -17.375001907348633
    6. '(circle' → logprob: -17.375001907348633
    7. '(
' → logprob: -17.500001907348633
    8. ' (' → logprob: -17.750001907348633
    9. '[c' → logprob: -18.750001907348633
    10. ',c' → logprob: -19.000001907348633

Token 559: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.001578301889821887
    2. 'cir' → logprob: -6.626578330993652
    3. 'irc' → logprob: -8.626578330993652
    4. '(c' → logprob: -11.626578330993652
    5. '[' → logprob: -11.751578330993652
    6. 'icles' → logprob: -11.876578330993652
    7. '```' → logprob: -12.126578330993652
    8. '(' → logprob: -12.126578330993652
    9. '#' → logprob: -12.376578330993652
    10. 'c' → logprob: -12.626578330993652

Token 560: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -1.259079363080673e-05
    2. 'les' → logprob: -11.500012397766113
    3. 'icles' → logprob: -14.125012397766113
    4. 'ph' → logprob: -15.250012397766113
    5. 'cle' → logprob: -15.500012397766113
    6. '   ' → logprob: -15.625012397766113
    7. 'ples' → logprob: -15.625012397766113
    8. 'es' → logprob: -16.12501335144043
    9. 'cl' → logprob: -16.12501335144043
    10. ')
' → logprob: -16.12501335144043

Token 561: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.847109812544659e-05
    2. ')
' → logprob: -10.125048637390137
    3. '   ' → logprob: -12.375048637390137
    4. '       ' → logprob: -12.500048637390137
    5. ' )' → logprob: -16.00004768371582
    6. ')`' → logprob: -16.62504768371582
    7. '),' → logprob: -17.00004768371582
    8. ')

' → logprob: -17.50004768371582
    9. '))' → logprob: -17.62504768371582
    10. '`)' → logprob: -17.75004768371582

Token 562: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.44248509407043457
    2. '   ' → logprob: -1.0674850940704346
    3. '```' → logprob: -5.3174848556518555
    4. '       ' → logprob: -5.4424848556518555
    5. 'start' → logprob: -6.8174848556518555
    6. ' dist' → logprob: -6.9424848556518555
    7. '    
' → logprob: -7.0674848556518555
    8. 'distance' → logprob: -7.5674848556518555
    9. '	dist' → logprob: -7.6924848556518555
    10. '_dist' → logprob: -8.942484855651855

Token 563: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04187595099210739
    2. '   ' → logprob: -4.166875839233398
    3. 'start' → logprob: -4.166875839233398
    4. 'if' → logprob: -4.666875839233398
    5. ' if' → logprob: -8.916875839233398
    6. ' dist' → logprob: -9.416875839233398
    7. '       ' → logprob: -9.541875839233398
    8. 'distance' → logprob: -9.541875839233398
    9. '```' → logprob: -9.666875839233398
    10. 'd' → logprob: -9.666875839233398

Token 564: ' If' (ID: 1843)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.028537768870592117
    2. 'if' → logprob: -3.6535377502441406
    3. 'd' → logprob: -6.528537750244141
    4. 'start' → logprob: -7.903537750244141
    5. '#' → logprob: -8.40353775024414
    6. '   ' → logprob: -10.02853775024414
    7. 'distance' → logprob: -10.15353775024414
    8. '       ' → logprob: -10.90353775024414
    9. 'end' → logprob: -11.02853775024414
    10. 'visited' → logprob: -11.52853775024414

Token 565: ' start' (ID: 1604)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.10399850457906723
    2. 'len' → logprob: -2.9789984226226807
    3. 'start' → logprob: -3.3539984226226807
    4. ' not' → logprob: -4.35399866104126
    5. ' len' → logprob: -9.603998184204102
    6. ' start' → logprob: -9.978998184204102
    7. '   ' → logprob: -12.353998184204102
    8. ' ' → logprob: -12.478998184204102
    9. '(not' → logprob: -12.728998184204102
    10. '(len' → logprob: -13.353998184204102

Token 566: ' or' (ID: 503)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -7.703443770878948e-06
    2. '_' → logprob: -12.125007629394531
    3. '_s' → logprob: -14.125007629394531
    4. ' in' → logprob: -14.875007629394531
    5. 'c' → logprob: -15.375007629394531
    6. ' not' → logprob: -15.750007629394531
    7. 'and' → logprob: -16.00000762939453
    8. 'not' → logprob: -16.12500762939453
    9. 's' → logprob: -16.37500762939453
    10. '\' → logprob: -16.37500762939453

Token 567: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.7924602031707764
    2. ' not' → logprob: -1.0424602031707764
    3. ' end' → logprob: -2.0424602031707764
    4. 'not' → logprob: -2.7924602031707764
    5. 'len' → logprob: -5.6674604415893555
    6. ' len' → logprob: -8.542460441589355
    7. '_end' → logprob: -10.167460441589355
    8. ' ' → logprob: -12.167460441589355
    9. '   ' → logprob: -13.167460441589355
    10. 'def' → logprob: -13.292460441589355

Token 568: ' not' (ID: 625)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.690834273584187e-05
    2. ' not' → logprob: -10.62503719329834
    3. 'not' → logprob: -12.00003719329834
    4. 'c' → logprob: -13.25003719329834
    5. '_not' → logprob: -13.37503719329834
    6. '_s' → logprob: -13.87503719329834
    7. '_' → logprob: -14.75003719329834
    8. 'cir' → logprob: -15.00003719329834
    9. ' ' → logprob: -15.37503719329834
    10. '   ' → logprob: -15.50003719329834

Token 569: ' inside' (ID: 6772)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.002781815826892853
    2. ' not' → logprob: -6.877781867980957
    3. 'not' → logprob: -7.002781867980957
    4. 'start' → logprob: -8.127781867980957
    5. 'cir' → logprob: -8.377781867980957
    6. 'inside' → logprob: -9.252781867980957
    7. '_inside' → logprob: -9.877781867980957
    8. 'len' → logprob: -10.502781867980957
    9. 'c' → logprob: -10.877781867980957
    10. 'in' → logprob: -11.002781867980957

Token 570: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.10538492351770401
    2. ' any' → logprob: -2.7303848266601562
    3. 'start' → logprob: -3.4803848266601562
    4. ' start' → logprob: -5.730384826660156
    5. 'cir' → logprob: -8.605384826660156
    6. '[]' → logprob: -8.855384826660156
    7. 'set' → logprob: -9.105384826660156
    8. ' ' → logprob: -9.230384826660156
    9. 'circle' → logprob: -9.230384826660156
    10. ' circles' → logprob: -10.480384826660156

Token 571: ' circle' (ID: 22005)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.6295636892318726
    2. 'start' → logprob: -0.8795636892318726
    3. 'if' → logprob: -4.129563808441162
    4. 'circle' → logprob: -4.379563808441162
    5. '_circle' → logprob: -4.879563808441162
    6. ' start' → logprob: -5.254563808441162
    7. '       ' → logprob: -5.629563808441162
    8. 'cir' → logprob: -5.879563808441162
    9. '(start' → logprob: -7.504563808441162
    10. 'of' → logprob: -7.504563808441162

Token 572: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09118448197841644
    2. ':
' → logprob: -3.216184377670288
    3. ' and' → logprob: -3.966184377670288
    4. '       ' → logprob: -4.216184616088867
    5. ' or' → logprob: -5.216184616088867
    6. ',' → logprob: -5.341184616088867
    7. 'and' → logprob: -6.216184616088867
    8. '   ' → logprob: -7.091184616088867
    9. 'or' → logprob: -9.716184616088867
    10. '):' → logprob: -9.841184616088867

Token 573: ' add' (ID: 1147)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3374822437763214
    2. '#' → logprob: -1.962482213973999
    3. '       ' → logprob: -2.837482213973999
    4. 'if' → logprob: -2.837482213973999
    5. 'start' → logprob: -4.212482452392578
    6. ' print' → logprob: -5.337482452392578
    7. ' if' → logprob: -5.587482452392578
    8. 'possible' → logprob: -7.087482452392578
    9. 'distance' → logprob: -7.212482452392578
    10. 'for' → logprob: -7.337482452392578

Token 574: ' them' (ID: 1373)
  Prédit: 'virtual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'virtual' → logprob: -0.477098673582077
    2. '-' → logprob: -1.9770987033843994
    3. 'a' → logprob: -2.7270987033843994
    4. 'special' → logprob: -3.1020987033843994
    5. '(-' → logprob: -3.2270987033843994
    6. 'pseudo' → logprob: -3.4770987033843994
    7. 'dummy' → logprob: -4.10209846496582
    8. 'start' → logprob: -5.10209846496582
    9. 'two' → logprob: -5.35209846496582
    10. 'fake' → logprob: -5.35209846496582

Token 575: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.9728743433952332
    2. '_nodes' → logprob: -1.222874402999878
    3. ' to' → logprob: -1.472874402999878
    4. ' =' → logprob: -2.972874402999878
    5. '_vertices' → logprob: -4.597874164581299
    6. 'to' → logprob: -4.972874164581299
    7. ' nodes' → logprob: -5.347874164581299
    8. ' if' → logprob: -5.597874164581299
    9. '_to' → logprob: -5.847874164581299
    10. 'as' → logprob: -6.222874164581299

Token 576: ' special' (ID: 3582)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.823781430721283
    2. 'special' → logprob: -1.5737814903259277
    3. 'virtual' → logprob: -1.6987814903259277
    4. 'new' → logprob: -2.0737814903259277
    5. 'additional' → logprob: -4.073781490325928
    6. 'extra' → logprob: -4.698781490325928
    7. 'pseudo' → logprob: -5.198781490325928
    8. ' special' → logprob: -5.573781490325928
    9. 'se' → logprob: -5.948781490325928
    10. ' nodes' → logprob: -5.948781490325928

Token 577: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.058938395231962204
    2. 'nodes' → logprob: -2.933938503265381
    3. '_nodes' → logprob: -5.933938503265381
    4. '-n' → logprob: -7.183938503265381
    5. ' start' → logprob: -8.308938026428223
    6. 'start' → logprob: -8.683938026428223
    7. ' node' → logprob: -10.308938026428223
    8. '-' → logprob: -10.558938026428223
    9. ' vertices' → logprob: -10.558938026428223
    10. '[-' → logprob: -10.808938026428223

Token 578: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8137912750244141
    2. ' if' → logprob: -0.9387912750244141
    3. ' in' → logprob: -3.063791275024414
    4. ' and' → logprob: -3.438791275024414
    5. ' to' → logprob: -3.438791275024414
    6. ',' → logprob: -4.563791275024414
    7. '        
' → logprob: -4.688791275024414
    8. 'if' → logprob: -4.688791275024414
    9. ' with' → logprob: -4.938791275024414
    10. '
' → logprob: -6.063791275024414

Token 579: ' index' (ID: 3472)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.1307104229927063
    2. '[]' → logprob: -3.3807103633880615
    3. 'edges' → logprob: -3.3807103633880615
    4. ' edges' → logprob: -4.130710601806641
    5. ' graph' → logprob: -4.380710601806641
    6. 'indices' → logprob: -5.755710601806641
    7. 'empty' → logprob: -5.755710601806641
    8. 'neighbors' → logprob: -5.880710601806641
    9. '   ' → logprob: -6.005710601806641
    10. 'start' → logprob: -6.130710601806641

Token 580: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08263494819402695
    2. ' n' → logprob: -2.582634925842285
    3. '[n' → logprob: -6.207634925842285
    4. '=n' → logprob: -7.082634925842285
    5. ' =' → logprob: -8.457634925842285
    6. '=' → logprob: -8.582634925842285
    7. '[' → logprob: -8.582634925842285
    8. '[-' → logprob: -8.832634925842285
    9. '   ' → logprob: -10.082634925842285
    10. '[len' → logprob: -10.332634925842285

Token 581: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06982949376106262
    2. ' ,' → logprob: -4.44482946395874
    3. '       ' → logprob: -4.56982946395874
    4. ')' → logprob: -4.56982946395874
    5. ' and' → logprob: -4.56982946395874
    6. ',
' → logprob: -4.94482946395874
    7. '   ' → logprob: -5.69482946395874
    8. '+' → logprob: -5.81982946395874
    9. '_' → logprob: -5.81982946395874
    10. '
' → logprob: -6.69482946395874

Token 582: 'start' (ID: 5236)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13848775625228882
    2. ' )' → logprob: -2.6384878158569336
    3. ' and' → logprob: -3.5134878158569336
    4. ' n' → logprob: -4.888487815856934
    5. 'n' → logprob: -5.013487815856934
    6. '),' → logprob: -5.513487815856934
    7. 'and' → logprob: -6.263487815856934
    8. '
' → logprob: -6.763487815856934
    9. ').' → logprob: -6.763487815856934
    10. ',' → logprob: -6.888487815856934

Token 583: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02824391983449459
    2. '),' → logprob: -4.4032440185546875
    3. '+' → logprob: -4.9032440185546875
    4. ' )' → logprob: -5.2782440185546875
    5. ' and' → logprob: -6.2782440185546875
    6. ' +' → logprob: -7.5282440185546875
    7. ')
' → logprob: -8.403244018554688
    8. ',' → logprob: -9.153244018554688
    9. ' ),' → logprob: -9.153244018554688
    10. '+n' → logprob: -10.153244018554688

Token 584: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.24160386621952057
    2. ')' → logprob: -2.4916038513183594
    3. ' or' → logprob: -2.8666038513183594
    4. ',' → logprob: -3.3666038513183594
    5. 'and' → logprob: -3.6166038513183594
    6. '       ' → logprob: -5.491603851318359
    7. '+' → logprob: -6.241603851318359
    8. 'or' → logprob: -6.866603851318359
    9. ' if' → logprob: -6.866603851318359
    10. ' ,' → logprob: -7.116603851318359

Token 585: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00091217877343297
    2. ' n' → logprob: -7.000912189483643
    3. '
' → logprob: -15.000911712646484
    4. '   ' → logprob: -16.000911712646484
    5. '(n' → logprob: -16.000911712646484
    6. '`' → logprob: -17.375911712646484
    7. '	n' → logprob: -17.500911712646484
    8. '```' → logprob: -17.875911712646484
    9. ')n' → logprob: -19.125911712646484
    10. '
' → logprob: -19.750911712646484

Token 586: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001037214300595224
    2. ' +' → logprob: -6.876037120819092
    3. '+
' → logprob: -12.37603759765625
    4. ' +
' → logprob: -16.00103759765625
    5. '+n' → logprob: -16.87603759765625
    6. ',' → logprob: -17.37603759765625
    7. '
' → logprob: -18.12603759765625
    8. ' ' → logprob: -18.37603759765625
    9. '+

' → logprob: -18.37603759765625
    10. '＋' → logprob: -18.50103759765625

Token 587: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '
' → logprob: -14.875000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '   ' → logprob: -19.5
    5. '```' → logprob: -19.625
    6. '+' → logprob: -20.875
    7. '0' → logprob: -21.125
    8. '

' → logprob: -21.25
    9. '１' → logprob: -21.5
    10. '۱' → logprob: -21.625

Token 588: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08330018073320389
    2. ' and' → logprob: -3.2083001136779785
    3. ' ,' → logprob: -3.7083001136779785
    4. ',
' → logprob: -5.4583001136779785
    5. ')' → logprob: -5.5833001136779785
    6. '
' → logprob: -6.4583001136779785
    7. ' nodes' → logprob: -6.8333001136779785
    8. '_nodes' → logprob: -6.8333001136779785
    9. 'and' → logprob: -6.9583001136779785
    10. '   ' → logprob: -7.3333001136779785

Token 589: 'end' (ID: 419)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.2021772563457489
    2. 'end' → logprob: -1.7021772861480713
    3. ')' → logprob: -7.202177047729492
    4. ' )' → logprob: -12.077177047729492
    5. ' ' → logprob: -12.452177047729492
    6. '(end' → logprob: -12.577177047729492
    7. '1' → logprob: -12.827177047729492
    8. ''end' → logprob: -14.452177047729492
    9. ' n' → logprob: -14.577177047729492
    10. '):' → logprob: -15.202177047729492

Token 590: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5810700058937073
    2. ',' → logprob: -0.9560700058937073
    3. ')
' → logprob: -3.3310699462890625
    4. ',
' → logprob: -4.0810699462890625
    5. '
' → logprob: -6.8310699462890625
    6. '):
' → logprob: -6.9560699462890625
    7. '),' → logprob: -7.8310699462890625
    8. '):' → logprob: -7.9560699462890625
    9. ' ,' → logprob: -8.456069946289062
    10. '_nodes' → logprob: -9.081069946289062

Token 591: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8945318460464478
    2. ' if' → logprob: -0.8945318460464478
    3. '
' → logprob: -1.8945318460464478
    4. 'if' → logprob: -4.519531726837158
    5. ' and' → logprob: -4.769531726837158
    6. '```' → logprob: -5.769531726837158
    7. '   ' → logprob: -6.019531726837158
    8. '        
' → logprob: -6.019531726837158
    9. ',' → logprob: -6.894531726837158
    10. '    
' → logprob: -7.144531726837158

Token 592: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2687406539916992
    2. '       ' → logprob: -1.7687406539916992
    3. 'if' → logprob: -3.018740653991699
    4. '
' → logprob: -4.643740653991699
    5. '        
' → logprob: -6.018740653991699
    6. ' 
' → logprob: -6.143740653991699
    7. '    
' → logprob: -7.143740653991699
    8. '   ' → logprob: -7.268740653991699
    9. '	if' → logprob: -9.1437406539917
    10. '        ' → logprob: -9.2687406539917

Token 593: ' Connect' (ID: 16834)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0424792654812336
    2. ' if' → logprob: -3.2924792766571045
    3. 'start' → logprob: -5.917479038238525
    4. '       ' → logprob: -7.042479038238525
    5. '   ' → logprob: -7.292479038238525
    6. 'for' → logprob: -9.292479515075684
    7. ' start' → logprob: -9.792479515075684
    8. '
' → logprob: -11.792479515075684
    9. '```' → logprob: -11.792479515075684
    10. '    
' → logprob: -12.417479515075684

Token 594: ' them' (ID: 1373)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3848714232444763
    2. ' start' → logprob: -1.884871482849121
    3. 'if' → logprob: -2.509871482849121
    4. 'n' → logprob: -3.509871482849121
    5. '(n' → logprob: -4.509871482849121
    6. '(start' → logprob: -4.884871482849121
    7. ' if' → logprob: -5.134871482849121
    8. 's' → logprob: -5.259871482849121
    9. ' n' → logprob: -5.384871482849121
    10. '(' → logprob: -5.509871482849121

Token 595: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.09829030930995941
    2. ' if' → logprob: -2.723290205001831
    3. 'if' → logprob: -4.47329044342041
    4. 'to' → logprob: -4.59829044342041
    5. '(n' → logprob: -6.34829044342041
    6. ' for' → logprob: -6.97329044342041
    7. 'for' → logprob: -7.34829044342041
    8. '[n' → logprob: -7.47329044342041
    9. '_to' → logprob: -7.97329044342041
    10. '       ' → logprob: -8.22329044342041

Token 596: ' circles' (ID: 45131)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.422637939453125
    2. 'range' → logprob: -1.422637939453125
    3. '[i' → logprob: -1.672637939453125
    4. '[' → logprob: -1.672637939453125
    5. 'cir' → logprob: -3.672637939453125
    6. '[
' → logprob: -3.922637939453125
    7. '[c' → logprob: -3.922637939453125
    8. '[node' → logprob: -4.172637939453125
    9. 'nodes' → logprob: -4.297637939453125
    10. 'c' → logprob: -4.297637939453125

Token 597: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.7227203249931335
    2. 'that' → logprob: -1.0977203845977783
    3. 'if' → logprob: -2.7227203845977783
    4. ' if' → logprob: -2.9727203845977783
    5. 'with' → logprob: -3.5977203845977783
    6. '[i' → logprob: -4.722720146179199
    7. '_that' → logprob: -5.222720146179199
    8. 's' → logprob: -5.347720146179199
    9. ' with' → logprob: -5.597720146179199
    10. 'i' → logprob: -5.722720146179199

Token 598: ' touch' (ID: 7381)
  Prédit: 'contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contain' → logprob: -0.037208206951618195
    2. ' contain' → logprob: -3.537208318710327
    3. 'touch' → logprob: -5.662208080291748
    4. 'include' → logprob: -6.662208080291748
    5. ' are' → logprob: -7.162208080291748
    6. 'are' → logprob: -7.912208080291748
    7. 'point' → logprob: -8.162208557128906
    8. ' touch' → logprob: -9.037208557128906
    9. '
' → logprob: -9.037208557128906
    10. 'for' → logprob: -9.037208557128906

Token 599: ' them' (ID: 1373)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.8887245655059814
    2. ' or' → logprob: -1.2637245655059814
    3. '(n' → logprob: -1.6387245655059814
    4. '(' → logprob: -2.8887245655059814
    5. 'n' → logprob: -4.388724327087402
    6. '(s' → logprob: -4.888724327087402
    7. 'start' → logprob: -5.138724327087402
    8. 's' → logprob: -5.138724327087402
    9. '=' → logprob: -5.513724327087402
    10. 'the' → logprob: -6.138724327087402

Token 600: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1336880922317505
    2. 'if' → logprob: -2.508687973022461
    3. '       ' → logprob: -4.383687973022461
    4. 'for' → logprob: -4.633687973022461
    5. ' for' → logprob: -4.883687973022461
    6. '   ' → logprob: -5.758687973022461
    7. ',' → logprob: -5.883687973022461
    8. '
' → logprob: -6.258687973022461
    9. '.' → logprob: -6.258687973022461
    10. ' or' → logprob: -6.883687973022461

Token 601: 'i' (ID: 72)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22121082246303558
    2. ' if' → logprob: -2.8462107181549072
    3. ' or' → logprob: -2.8462107181549072
    4. 'if' → logprob: -3.7212107181549072
    5. ' )' → logprob: -3.7212107181549072
    6. ' the' → logprob: -4.346210956573486
    7. 'the' → logprob: -5.596210956573486
    8. 'or' → logprob: -5.846210956573486
    9. ')
' → logprob: -6.346210956573486
    10. ' for' → logprob: -6.971210956573486

Token 602: '.e' (ID: 2560)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04248166084289551
    2. 'n' → logprob: -3.9174816608428955
    3. 's' → logprob: -4.667481422424316
    4. '=' → logprob: -5.542481422424316
    5. ')' → logprob: -5.792481422424316
    6. 'nt' → logprob: -6.167481422424316
    7. 'nd' → logprob: -6.292481422424316
    8. 'm' → logprob: -7.417481422424316
    9. 't' → logprob: -8.542481422424316
    10. ' f' → logprob: -8.792481422424316

Token 603: '.' (ID: 13)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0556056872010231
    2. '=' → logprob: -3.43060564994812
    3. 'n' → logprob: -5.180605888366699
    4. ')' → logprob: -5.555605888366699
    5. 'if' → logprob: -6.055605888366699
    6. 'for' → logprob: -6.055605888366699
    7. '==' → logprob: -6.430605888366699
    8. '.e' → logprob: -6.555605888366699
    9. '.' → logprob: -6.805605888366699
    10. 'nd' → logprob: -7.680605888366699

Token 604: ' circles' (ID: 45131)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.22242958843708038
    2. ' point' → logprob: -1.722429633140564
    3. 'cir' → logprob: -5.3474297523498535
    4. 'for' → logprob: -5.4724297523498535
    5. 'if' → logprob: -6.5974297523498535
    6. ')' → logprob: -6.7224297523498535
    7. ' for' → logprob: -6.8474297523498535
    8. ' any' → logprob: -6.8474297523498535
    9. ' circles' → logprob: -6.8474297523498535
    10. ' if' → logprob: -7.3474297523498535

Token 605: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.6634231805801392
    2. ' that' → logprob: -0.9134231805801392
    3. ')' → logprob: -3.0384230613708496
    4. 'for' → logprob: -5.16342306137085
    5. '=' → logprob: -5.28842306137085
    6. '_that' → logprob: -5.41342306137085
    7. '
' → logprob: -5.91342306137085
    8. 'def' → logprob: -6.41342306137085
    9. 'inside' → logprob: -6.41342306137085
    10. 'with' → logprob: -6.53842306137085

Token 606: ' the' (ID: 290)
  Prédit: 'contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contain' → logprob: -0.013229521922767162
    2. 'point' → logprob: -4.8882293701171875
    3. ' contain' → logprob: -5.2632293701171875
    4. 'have' → logprob: -8.638229370117188
    5. 'include' → logprob: -9.263229370117188
    6. 'cont' → logprob: -10.638229370117188
    7. ' point' → logprob: -10.638229370117188
    8. 'def' → logprob: -11.263229370117188
    9. 'contains' → logprob: -11.388229370117188
    10. 'cover' → logprob: -11.513229370117188

Token 607: ' start' (ID: 1604)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.03795496001839638
    2. 'rat' → logprob: -3.9129550457000732
    3. ' point' → logprob: -4.287954807281494
    4. 'start' → logprob: -6.537954807281494
    5. ' rat' → logprob: -6.537954807281494
    6. 'circle' → logprob: -8.537955284118652
    7. 'points' → logprob: -9.412955284118652
    8. 'def' → logprob: -9.662955284118652
    9. ')' → logprob: -10.037955284118652
    10. 'import' → logprob: -10.162955284118652

Token 608: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7149862051010132
    2. ' point' → logprob: -0.9649862051010132
    3. 'point' → logprob: -2.5899863243103027
    4. ')' → logprob: -3.5899863243103027
    5. 'or' → logprob: -4.964986324310303
    6. '_point' → logprob: -5.089986324310303
    7. 's' → logprob: -5.964986324310303
    8. ' and' → logprob: -6.089986324310303
    9. '_points' → logprob: -6.339986324310303
    10. ' points' → logprob: -6.464986324310303

Token 609: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.004029718693345785
    2. ' end' → logprob: -5.629029750823975
    3. 'point' → logprob: -8.379029273986816
    4. '#' → logprob: -9.004029273986816
    5. ')' → logprob: -10.879029273986816
    6. '```' → logprob: -11.504029273986816
    7. '
' → logprob: -11.879029273986816
    8. 'or' → logprob: -12.129029273986816
    9. ''end' → logprob: -12.254029273986816
    10. ' ' → logprob: -12.754029273986816

Token 610: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.4787372946739197
    2. 'point' → logprob: -1.7287373542785645
    3. ' points' → logprob: -2.6037373542785645
    4. '_points' → logprob: -3.2287373542785645
    5. 'points' → logprob: -3.2287373542785645
    6. ')' → logprob: -3.9787373542785645
    7. '_point' → logprob: -4.4787373542785645
    8. ' or' → logprob: -5.1037373542785645
    9. ' is' → logprob: -5.8537373542785645
    10. 's' → logprob: -5.9787373542785645

Token 611: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6519163250923157
    2. ' is' → logprob: -0.9019163250923157
    3. 'is' → logprob: -3.151916265487671
    4. ' are' → logprob: -4.77691650390625
    5. 'are' → logprob: -5.77691650390625
    6. 'touch' → logprob: -5.77691650390625
    7. ' lies' → logprob: -5.90191650390625
    8. ' )' → logprob: -5.90191650390625
    9. ' touches' → logprob: -6.15191650390625
    10. '),' → logprob: -6.65191650390625

Token 612: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.06476100534200668
    2. ' inside' → logprob: -3.06476092338562
    3. 'on' → logprob: -4.939761161804199
    4. '_inside' → logprob: -6.189761161804199
    5. 'point' → logprob: -6.314761161804199
    6. 'outside' → logprob: -6.439761161804199
    7. ' on' → logprob: -6.814761161804199
    8. 'not' → logprob: -7.814761161804199
    9. ')' → logprob: -7.939761161804199
    10. 'contained' → logprob: -7.939761161804199

Token 613: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019253956153988838
    2. ' or' → logprob: -4.394253730773926
    3. 'or' → logprob: -5.519253730773926
    4. ')
' → logprob: -6.144253730773926
    5. ' )' → logprob: -9.269253730773926
    6. '       ' → logprob: -9.769253730773926
    7. '   ' → logprob: -9.894253730773926
    8. ')`' → logprob: -10.269253730773926
    9. '`)' → logprob: -10.394253730773926
    10. 's' → logprob: -10.519253730773926

Token 614: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011916598305106163
    2. ' if' → logprob: -5.136916637420654
    3. '        
' → logprob: -5.761916637420654
    4. 'if' → logprob: -6.886916637420654
    5. '<|end|>' → logprob: -7.261916637420654
    6. '   ' → logprob: -7.761916637420654
    7. '
' → logprob: -8.886916160583496
    8. '```' → logprob: -8.886916160583496
    9. '    
' → logprob: -9.261916160583496
    10. '           ' → logprob: -10.136916160583496

Token 615: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2724914848804474
    2. ' if' → logprob: -1.522491455078125
    3. 'if' → logprob: -4.397491455078125
    4. '        ' → logprob: -5.647491455078125
    5. '        
' → logprob: -6.022491455078125
    6. '   ' → logprob: -7.772491455078125
    7. ' 
' → logprob: -8.147491455078125
    8. ' start' → logprob: -8.272491455078125
    9. '```' → logprob: -8.522491455078125
    10. ' ' → logprob: -8.522491455078125

Token 616: ' Actually' (ID: 50557)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2660715579986572
    2. 'if' → logprob: -1.7660715579986572
    3. '       ' → logprob: -3.0160715579986572
    4. '
' → logprob: -5.641071319580078
    5. '   ' → logprob: -5.766071319580078
    6. '        
' → logprob: -5.891071319580078
    7. ' 
' → logprob: -6.141071319580078
    8. '    
' → logprob: -7.391071319580078
    9. ' start' → logprob: -8.141071319580078
    10. 'start' → logprob: -8.141071319580078

Token 617: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7050471901893616
    2. ',' → logprob: -1.4550471305847168
    3. 'if' → logprob: -1.4550471305847168
    4. ':' → logprob: -4.205047130584717
    5. ' continue' → logprob: -4.955047130584717
    6. '#' → logprob: -5.205047130584717
    7. 'continue' → logprob: -6.330047130584717
    8. ' the' → logprob: -6.580047130584717
    9. '
' → logprob: -6.830047130584717
    10. 'the' → logprob: -7.080047130584717

Token 618: ' since' (ID: 3630)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17422112822532654
    2. ' if' → logprob: -1.924221158027649
    3. '#' → logprob: -4.924221038818359
    4. 'pass' → logprob: -5.549221038818359
    5. 'for' → logprob: -6.549221038818359
    6. ' pass' → logprob: -7.549221038818359
    7. 'continue' → logprob: -7.924221038818359
    8. ' for' → logprob: -8.79922103881836
    9. ' continue' → logprob: -9.42422103881836
    10. '   ' → logprob: -9.42422103881836

Token 619: ' points' (ID: 5571)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.9100993871688843
    2. 'start' → logprob: -1.0350993871688843
    3. ' not' → logprob: -1.9100993871688843
    4. ' start' → logprob: -3.160099506378174
    5. 'the' → logprob: -3.660099506378174
    6. 'they' → logprob: -5.035099506378174
    7. 'point' → logprob: -5.285099506378174
    8. ' the' → logprob: -5.410099506378174
    9. 'points' → logprob: -6.285099506378174
    10. 'we' → logprob: -6.285099506378174

Token 620: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.20317624509334564
    2. 'are' → logprob: -2.703176259994507
    3. ' not' → logprob: -2.953176259994507
    4. 'not' → logprob: -3.453176259994507
    5. ' outside' → logprob: -4.953176021575928
    6. 'outside' → logprob: -4.953176021575928
    7. '_are' → logprob: -5.328176021575928
    8. ' may' → logprob: -5.453176021575928
    9. ' can' → logprob: -6.078176021575928
    10. '_not' → logprob: -6.078176021575928

Token 621: ' not' (ID: 625)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.509675145149231
    2. 'not' → logprob: -1.009675145149231
    3. 'inside' → logprob: -3.6346750259399414
    4. ' not' → logprob: -5.634675025939941
    5. ' outside' → logprob: -5.884675025939941
    6. 'either' → logprob: -7.759675025939941
    7. ' guaranteed' → logprob: -7.884675025939941
    8. 'gu' → logprob: -8.509675025939941
    9. 'on' → logprob: -8.634675025939941
    10. 'given' → logprob: -9.009675025939941

Token 622: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.024797556921839714
    2. ' inside' → logprob: -4.024797439575195
    3. 'necessarily' → logprob: -5.649797439575195
    4. ' guaranteed' → logprob: -6.274797439575195
    5. 'gu' → logprob: -7.649797439575195
    6. 'in' → logprob: -8.399797439575195
    7. ' necessarily' → logprob: -8.774797439575195
    8. '```' → logprob: -9.399797439575195
    9. 'always' → logprob: -9.899797439575195
    10. '
' → logprob: -9.899797439575195

Token 623: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.0211446862667799
    2. ' any' → logprob: -3.8961446285247803
    3. 'cir' → logprob: -7.521144866943359
    4. 'the' → logprob: -10.77114486694336
    5. ' circles' → logprob: -11.39614486694336
    6. 'anything' → logprob: -11.77114486694336
    7. 'start' → logprob: -12.39614486694336
    8. '_any' → logprob: -12.64614486694336
    9. 'a' → logprob: -12.77114486694336
    10. 'circle' → logprob: -13.14614486694336

Token 624: ' circle' (ID: 22005)
  Prédit: 'circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'circle' → logprob: -0.5839055776596069
    2. ' circle' → logprob: -0.8339055776596069
    3. 'cir' → logprob: -5.3339056968688965
    4. ' circles' → logprob: -5.8339056968688965
    5. '_circle' → logprob: -8.958905220031738
    6. '(circle' → logprob: -11.458905220031738
    7. 'circ' → logprob: -11.583905220031738
    8. ',' → logprob: -11.833905220031738
    9. 'c' → logprob: -11.833905220031738
    10. 'space' → logprob: -12.833905220031738

Token 625: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00794030912220478
    2. ':' → logprob: -5.382940292358398
    3. '.' → logprob: -5.882940292358398
    4. ',
' → logprob: -8.507940292358398
    5. ' if' → logprob: -9.757940292358398
    6. ')' → logprob: -10.007940292358398
    7. ' and' → logprob: -10.257940292358398
    8. '       ' → logprob: -10.632940292358398
    9. '<|end|>' → logprob: -10.882940292358398
    10. ' we' → logprob: -11.382940292358398

Token 626: ' they' (ID: 1023)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2025901973247528
    2. ' pass' → logprob: -3.452590227127075
    3. ' if' → logprob: -3.577590227127075
    4. 'pass' → logprob: -3.577590227127075
    5. ' #' → logprob: -3.702590227127075
    6. '       ' → logprob: -3.952590227127075
    7. ' for' → logprob: -4.327589988708496
    8. ' we' → logprob: -4.327589988708496
    9. 'if' → logprob: -4.827589988708496
    10. 'we' → logprob: -4.952589988708496

Token 627: ' have' (ID: 679)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.0054528713226318
    2. ' need' → logprob: -1.1304528713226318
    3. ' can' → logprob: -3.255452871322632
    4. 'are' → logprob: -3.255452871322632
    5. ')' → logprob: -3.380452871322632
    6. ' cannot' → logprob: -3.755452871322632
    7. ' won't' → logprob: -3.880452871322632
    8. ' should' → logprob: -3.880452871322632
    9. 'need' → logprob: -3.880452871322632
    10. ' must' → logprob: -4.005453109741211

Token 628: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.2101532220840454
    2. 'to' → logprob: -2.335153102874756
    3. ' no' → logprob: -2.960153102874756
    4. ' to' → logprob: -3.210153102874756
    5. '```' → logprob: -8.210153579711914
    6. 'neighbors' → logprob: -8.960153579711914
    7. '0' → logprob: -9.210153579711914
    8. 'not' → logprob: -11.085153579711914
    9. 'distance' → logprob: -11.335153579711914
    10. 'neighbor' → logprob: -11.710153579711914

Token 629: ' connections' (ID: 21069)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6355816125869751
    2. ' edges' → logprob: -1.260581612586975
    3. 'connections' → logprob: -2.5105814933776855
    4. 'neighbors' → logprob: -2.6355814933776855
    5. ' connections' → logprob: -4.0105814933776855
    6. 'adj' → logprob: -5.1355814933776855
    7. ' neighbors' → logprob: -5.6355814933776855
    8. 'direct' → logprob: -6.1355814933776855
    9. 'connection' → logprob: -7.2605814933776855
    10. 'edge' → logprob: -7.2605814933776855

Token 630: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21528185904026031
    2. '<|end|>' → logprob: -1.9652818441390991
    3. '        
' → logprob: -3.5902819633483887
    4. '
' → logprob: -4.090281963348389
    5. ',' → logprob: -5.340281963348389
    6. '<|end|>' → logprob: -6.215281963348389
    7. ' if' → logprob: -7.090281963348389
    8. '.' → logprob: -7.715281963348389
    9. '#' → logprob: -8.34028148651123
    10. '```' → logprob: -8.46528148651123

Token 631: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02524319477379322
    2. ' if' → logprob: -4.775243282318115
    3. '
' → logprob: -5.025243282318115
    4. 'if' → logprob: -5.775243282318115
    5. '<|end|>' → logprob: -5.775243282318115
    6. '        
' → logprob: -6.025243282318115
    7. 'continue' → logprob: -8.275242805480957
    8. '```' → logprob: -8.400242805480957
    9. '   ' → logprob: -8.525242805480957
    10. 'n' → logprob: -9.025242805480957

Token 632: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09694471210241318
    2. ' if' → logprob: -2.846944808959961
    3. 'if' → logprob: -3.471944808959961
    4. 'continue' → logprob: -6.721944808959961
    5. '```' → logprob: -6.846944808959961
    6. ' continue' → logprob: -7.971944808959961
    7. '        
' → logprob: -8.221944808959961
    8. '   ' → logprob: -8.971944808959961
    9. '<|end|>' → logprob: -9.346944808959961
    10. '
' → logprob: -9.721944808959961

Token 633: ' So' (ID: 2632)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0985051840543747
    2. '       ' → logprob: -2.9735052585601807
    3. '#' → logprob: -3.5985052585601807
    4. ' if' → logprob: -4.348505020141602
    5. 'start' → logprob: -7.223505020141602
    6. 'distance' → logprob: -7.348505020141602
    7. '
' → logprob: -8.598505020141602
    8. 'for' → logprob: -8.848505020141602
    9. 'continue' → logprob: -8.973505020141602
    10. '        
' → logprob: -8.973505020141602

Token 634: ' movement' (ID: 12772)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11672839522361755
    2. '#' → logprob: -3.3667283058166504
    3. '       ' → logprob: -3.3667283058166504
    4. ' if' → logprob: -3.9917283058166504
    5. 'print' → logprob: -4.11672830581665
    6. 'distance' → logprob: -6.24172830581665
    7. 'dist' → logprob: -6.74172830581665
    8. '   ' → logprob: -7.36672830581665
    9. 'start' → logprob: -7.36672830581665
    10. 'pass' → logprob: -7.99172830581665

Token 635: ' from' (ID: 591)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.42023345828056335
    2. ' is' → logprob: -1.4202334880828857
    3. 'between' → logprob: -3.1702334880828857
    4. 'from' → logprob: -4.545233249664307
    5. ' cannot' → logprob: -4.670233249664307
    6. ' from' → logprob: -4.795233249664307
    7. 'is' → logprob: -5.045233249664307
    8. ' outside' → logprob: -5.170233249664307
    9. ' to' → logprob: -6.045233249664307
    10. 'cannot' → logprob: -6.170233249664307

Token 636: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.004820868838578463
    2. 'outside' → logprob: -6.129820823669434
    3. ' start' → logprob: -6.879820823669434
    4. 'the' → logprob: -7.379820823669434
    5. 'point' → logprob: -7.879820823669434
    6. 'rat' → logprob: -8.504820823669434
    7. 'points' → logprob: -9.504820823669434
    8. 'n' → logprob: -9.629820823669434
    9. 'one' → logprob: -9.629820823669434
    10. 'special' → logprob: -10.379820823669434

Token 637: ' to' (ID: 316)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.14021120965480804
    2. 'or' → logprob: -2.8902111053466797
    3. ' to' → logprob: -3.0152111053466797
    4. 'and' → logprob: -5.01521110534668
    5. 'point' → logprob: -5.14021110534668
    6. ' and' → logprob: -5.39021110534668
    7. 'to' → logprob: -5.64021110534668
    8. 'node' → logprob: -6.26521110534668
    9. ' point' → logprob: -6.26521110534668
    10. ' node' → logprob: -6.89021110534668

Token 638: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0040793512016534805
    2. ' end' → logprob: -5.504079341888428
    3. 'outside' → logprob: -15.254079818725586
    4. ''end' → logprob: -15.754079818725586
    5. 'finish' → logprob: -16.379079818725586
    6. 'start' → logprob: -16.504079818725586
    7. '#' → logprob: -17.004079818725586
    8. '"' → logprob: -17.129079818725586
    9. 'point' → logprob: -17.129079818725586
    10. '=end' → logprob: -17.129079818725586

Token 639: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.09759173542261124
    2. 'is' → logprob: -3.0975916385650635
    3. 'cannot' → logprob: -4.347591876983643
    4. ' cannot' → logprob: -4.847591876983643
    5. ' will' → logprob: -5.347591876983643
    6. 'would' → logprob: -5.847591876983643
    7. 'must' → logprob: -5.972591876983643
    8. ' can' → logprob: -6.222591876983643
    9. ' would' → logprob: -6.347591876983643
    10. ' must' → logprob: -6.597591876983643

Token 640: ' impossible' (ID: 19786)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.08627316355705261
    2. ' impossible' → logprob: -3.211273193359375
    3. '-' → logprob: -4.086273193359375
    4. 'not' → logprob: -4.711273193359375
    5. '0' → logprob: -4.836273193359375
    6. 'possible' → logprob: -5.211273193359375
    7. 'only' → logprob: -7.086273193359375
    8. '   ' → logprob: -7.336273193359375
    9. '-im' → logprob: -7.836273193359375
    10. 'Impossible' → logprob: -7.961273193359375

Token 641: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7517303228378296
    2. '<|end|>' → logprob: -1.6267303228378296
    3. '
' → logprob: -1.8767303228378296
    4. '.' → logprob: -2.251730442047119
    5. ',' → logprob: -3.001730442047119
    6. ' if' → logprob: -4.751730442047119
    7. '<|end|>' → logprob: -5.251730442047119
    8. '        
' → logprob: -5.626730442047119
    9. 'if' → logprob: -6.751730442047119
    10. '...' → logprob: -6.876730442047119

Token 642: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07900524139404297
    2. ' if' → logprob: -2.579005241394043
    3. '   ' → logprob: -9.704005241394043
    4. 'when' → logprob: -11.454005241394043
    5. ' when' → logprob: -11.704005241394043
    6. '
' → logprob: -11.704005241394043
    7. '       ' → logprob: -12.079005241394043
    8. ' in' → logprob: -12.579005241394043
    9. ' ' → logprob: -12.579005241394043
    10. ' by' → logprob: -12.704005241394043

Token 643: ' circles' (ID: 45131)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6357412338256836
    2. 'len' → logprob: -1.2607412338256836
    3. ' not' → logprob: -1.7607412338256836
    4. ' len' → logprob: -5.260741233825684
    5. 'start' → logprob: -5.510741233825684
    6. '(not' → logprob: -5.885741233825684
    7. '(len' → logprob: -6.010741233825684
    8. ' start' → logprob: -8.135741233825684
    9. 'n' → logprob: -8.885741233825684
    10. ' (' → logprob: -9.260741233825684

Token 644: ' form' (ID: 1625)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.7951101660728455
    2. 'do' → logprob: -2.4201102256774902
    3. 'touch' → logprob: -3.0451102256774902
    4. 'se' → logprob: -3.1701102256774902
    5. 'that' → logprob: -3.1701102256774902
    6. 'contain' → logprob: -3.1701102256774902
    7. 'are' → logprob: -3.2951102256774902
    8. '_touch' → logprob: -3.4201102256774902
    9. 'start' → logprob: -3.5451102256774902
    10. 'block' → logprob: -3.5451102256774902

Token 645: ' walls' (ID: 20562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5767897963523865
    2. ' a' → logprob: -0.8267897963523865
    3. ' two' → logprob: -8.576789855957031
    4. 'an' → logprob: -8.951789855957031
    5. ' separate' → logprob: -8.951789855957031
    6. ' an' → logprob: -9.076789855957031
    7. ' no' → logprob: -9.201789855957031
    8. '```' → logprob: -9.826789855957031
    9. 'two' → logprob: -10.451789855957031
    10. 'no' → logprob: -11.076789855957031

Token 646: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2105216979980469
    2. '
' → logprob: -1.4605216979980469
    3. ' if' → logprob: -1.4605216979980469
    4. '        
' → logprob: -2.210521697998047
    5. '<|end|>' → logprob: -2.335521697998047
    6. ',' → logprob: -4.585521697998047
    7. 'if' → logprob: -5.335521697998047
    8. ' and' → logprob: -5.960521697998047
    9. '<|end|>' → logprob: -5.960521697998047
    10. '#' → logprob: -6.585521697998047

Token 647: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2431682050228119
    2. ' if' → logprob: -1.9931682348251343
    3. '<|end|>' → logprob: -3.1181681156158447
    4. 'if' → logprob: -3.6181681156158447
    5. '
' → logprob: -5.868168354034424
    6. '        
' → logprob: -6.743168354034424
    7. '```' → logprob: -6.868168354034424
    8. '<|end|>' → logprob: -7.118168354034424
    9. '   ' → logprob: -7.243168354034424
    10. 'If' → logprob: -7.743168354034424

Token 648: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33064302802085876
    2. '
' → logprob: -1.4556430578231812
    3. '        
' → logprob: -3.9556429386138916
    4. ' if' → logprob: -4.330643177032471
    5. 'if' → logprob: -4.705643177032471
    6. '   ' → logprob: -6.205643177032471
    7. '```' → logprob: -6.705643177032471
    8. '<|end|>' → logprob: -6.705643177032471
    9. '    
' → logprob: -7.705643177032471
    10. '#' (adapté à ' #') → logprob: -7.955643177032471

Token 649: ' So' (ID: 2632)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.021344827488064766
    2. '#' → logprob: -4.5213446617126465
    3. '       ' → logprob: -5.0213446617126465
    4. ' if' → logprob: -6.6463446617126465
    5. 'start' → logprob: -6.7713446617126465
    6. 'distance' → logprob: -7.5213446617126465
    7. 'dist' → logprob: -8.271345138549805
    8. 'for' → logprob: -8.896345138549805
    9. 'visited' → logprob: -9.646345138549805
    10. '   ' → logprob: -9.771345138549805

Token 650: ' we' (ID: 581)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3636150360107422
    2. ' if' → logprob: -1.2386150360107422
    3. '#' → logprob: -4.738615036010742
    4. 'dist' → logprob: -6.363615036010742
    5. '       ' → logprob: -6.613615036010742
    6. 'distance' → logprob: -6.863615036010742
    7. ' #' → logprob: -7.988615036010742
    8. 'start' → logprob: -8.238615036010742
    9. '
' → logprob: -8.863615036010742
    10. 'import' → logprob: -8.863615036010742

Token 651: ' treat' (ID: 4665)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.5315999984741211
    2. 'continue' → logprob: -1.031599998474121
    3. ' need' → logprob: -3.406599998474121
    4. '       ' → logprob: -5.031599998474121
    5. '   ' → logprob: -5.281599998474121
    6. ' continue' → logprob: -5.906599998474121
    7. 'if' → logprob: -6.156599998474121
    8. 'should' → logprob: -6.406599998474121
    9. 'can' → logprob: -6.781599998474121
    10. 'must' → logprob: -7.531599998474121

Token 652: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1339344084262848
    2. 'the' → logprob: -2.383934497833252
    3. 'them' → logprob: -4.008934497833252
    4. ' start' → logprob: -5.508934497833252
    5. 'points' → logprob: -5.633934497833252
    6. ' them' → logprob: -5.883934497833252
    7. 'special' → logprob: -6.633934497833252
    8. ' the' → logprob: -6.883934497833252
    9. 'n' → logprob: -8.008934020996094
    10. 'both' → logprob: -8.258934020996094

Token 653: ' and' (ID: 326)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.8115130662918091
    2. ' and' → logprob: -1.186513066291809
    3. '_nodes' → logprob: -2.5615129470825195
    4. '_' → logprob: -2.5615129470825195
    5. 'and' → logprob: -3.0615129470825195
    6. ',' → logprob: -3.3115129470825195
    7. ')' → logprob: -5.3115129470825195
    8. '_points' → logprob: -6.1865129470825195
    9. ' or' → logprob: -6.5615129470825195
    10. ' ,' → logprob: -7.6865129470825195

Token 654: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.000158842682139948
    2. ' end' → logprob: -8.75015926361084
    3. '(end' → logprob: -16.125158309936523
    4. 'n' → logprob: -16.625158309936523
    5. ''end' → logprob: -16.625158309936523
    6. '[end' → logprob: -17.750158309936523
    7. ',end' → logprob: -18.000158309936523
    8. '_end' → logprob: -18.375158309936523
    9. '=end' → logprob: -18.375158309936523
    10. '
' → logprob: -18.375158309936523

Token 655: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.3671785891056061
    2. '_c' → logprob: -1.6171785593032837
    3. 'as' → logprob: -3.2421786785125732
    4. '_nodes' → logprob: -3.2421786785125732
    5. ' nodes' → logprob: -4.617178440093994
    6. 'points' → logprob: -4.867178440093994
    7. 'nodes' → logprob: -5.117178440093994
    8. ' points' → logprob: -5.742178440093994
    9. '_' → logprob: -6.367178440093994
    10. '_points' → logprob: -6.742178440093994

Token 656: ' outside' (ID: 7539)
  Prédit: 'special'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'special' → logprob: -0.6353292465209961
    2. 'isol' → logprob: -2.010329246520996
    3. 'nodes' → logprob: -2.260329246520996
    4. 'virtual' → logprob: -2.885329246520996
    5. 'additional' → logprob: -3.010329246520996
    6. 'se' → logprob: -3.260329246520996
    7. 'free' → logprob: -4.260329246520996
    8. 'n' → logprob: -4.260329246520996
    9. 'two' → logprob: -4.385329246520996
    10. ' separate' → logprob: -4.635329246520996

Token 657: '.
' (ID: 558)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.3150169253349304
    2. ' nodes' → logprob: -2.815016984939575
    3. ',' → logprob: -2.940016984939575
    4. 'points' → logprob: -3.190016984939575
    5. 'nodes' → logprob: -3.565016984939575
    6. '_points' → logprob: -3.940016984939575
    7. ' points' → logprob: -4.440016746520996
    8. ' if' → logprob: -4.565016746520996
    9. ' and' → logprob: -4.690016746520996
    10. '_' → logprob: -4.940016746520996

Token 658: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21990473568439484
    2. ' if' → logprob: -1.7199047803878784
    3. 'if' → logprob: -4.844904899597168
    4. '        
' → logprob: -4.969904899597168
    5. '<|end|>' → logprob: -6.094904899597168
    6. '```' → logprob: -8.719904899597168
    7. '   ' → logprob: -8.969904899597168
    8. 'start' → logprob: -9.094904899597168
    9. 'continue' → logprob: -9.219904899597168
    10. ' ' → logprob: -9.344904899597168

Token 659: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9943093657493591
    2. '       ' → logprob: -1.119309425354004
    3. 'if' → logprob: -1.369309425354004
    4. '#' (adapté à ' #') → logprob: -3.619309425354004
    5. 'start' → logprob: -4.869309425354004
    6. 'continue' → logprob: -5.619309425354004
    7. ' start' → logprob: -5.869309425354004
    8. ' #' → logprob: -5.994309425354004
    9. ' continue' → logprob: -6.369309425354004
    10. '        
' → logprob: -6.494309425354004

Token 660: ' To' (ID: 2514)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4101009964942932
    2. ' if' → logprob: -1.2851009368896484
    3. '       ' → logprob: -3.0351009368896484
    4. 'start' → logprob: -5.160100936889648
    5. '#' → logprob: -5.535100936889648
    6. ' start' → logprob: -7.785100936889648
    7. ' #' → logprob: -7.910100936889648
    8. '   ' → logprob: -8.285100936889648
    9. 'for' → logprob: -8.535100936889648
    10. 'continue' → logprob: -8.660100936889648

Token 661: ' find' (ID: 1646)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.44017475843429565
    2. 'handle' → logprob: -2.0651748180389404
    3. 'if' → logprob: -2.9401748180389404
    4. ' continue' → logprob: -3.3151748180389404
    5. 'det' → logprob: -4.065174579620361
    6. 'connect' → logprob: -4.190174579620361
    7. 'do' → logprob: -4.315174579620361
    8. '#' → logprob: -4.440174579620361
    9. 'def' → logprob: -4.565174579620361
    10. 'find' → logprob: -4.815174579620361

Token 662: ' minimum' (ID: 11085)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.5056158304214478
    2. 'minimal' → logprob: -1.7556158304214478
    3. 'if' → logprob: -2.380615711212158
    4. ' minimal' → logprob: -2.505615711212158
    5. 'paths' → logprob: -2.880615711212158
    6. '#' → logprob: -2.880615711212158
    7. 'minimum' → logprob: -2.880615711212158
    8. 'whether' → logprob: -3.255615711212158
    9. 'answer' → logprob: -3.380615711212158
    10. ' the' → logprob: -3.880615711212158

Token 663: ' walls' (ID: 20562)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -1.2011243104934692
    2. 'distance' → logprob: -1.3261243104934692
    3. ' number' → logprob: -1.5761243104934692
    4. 'steps' → logprob: -2.2011241912841797
    5. 'cross' → logprob: -2.9511241912841797
    6. ' distance' → logprob: -4.32612419128418
    7. '#' → logprob: -4.32612419128418
    8. 'cuts' → logprob: -4.82612419128418
    9. 'dist' → logprob: -5.07612419128418
    10. ' steps' → logprob: -5.20112419128418

Token 664: ' climbed' (ID: 85578)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.22468073666095734
    2. 'cross' → logprob: -2.5996806621551514
    3. ' to' → logprob: -2.7246806621551514
    4. '_to' → logprob: -3.8496806621551514
    5. ' crossed' → logprob: -4.4746809005737305
    6. '_cross' → logprob: -4.5996809005737305
    7. 'that' → logprob: -4.5996809005737305
    8. 'def' → logprob: -5.5996809005737305
    9. ' that' → logprob: -6.4746809005737305
    10. '   ' → logprob: -6.9746809005737305

Token 665: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01314529124647379
    2. 'over' → logprob: -5.013145446777344
    3. ' over' → logprob: -6.263145446777344
    4. ' to' → logprob: -6.388145446777344
    5. 'to' → logprob: -7.138145446777344
    6. '   ' → logprob: -7.888145446777344
    7. 'through' → logprob: -7.888145446777344
    8. 'for' → logprob: -8.638145446777344
    9. 'def' → logprob: -8.888145446777344
    10. ' through' → logprob: -9.263145446777344

Token 666: ' think' (ID: 2411)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7290031909942627
    2. 'dist' → logprob: -1.7290031909942627
    3. '       ' → logprob: -2.1040031909942627
    4. ' if' → logprob: -2.6040031909942627
    5. 'start' → logprob: -2.6040031909942627
    6. 'visited' → logprob: -2.6040031909942627
    7. 'if' → logprob: -2.7290031909942627
    8. ' #' → logprob: -3.6040031909942627
    9. 'distance' → logprob: -3.6040031909942627
    10. ' distances' → logprob: -3.6040031909942627

Token 667: ' of' (ID: 328)
  Prédit: ' about'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' about' → logprob: -0.08763500303030014
    2. 'about' → logprob: -2.962635040283203
    3. ' of' → logprob: -4.212635040283203
    4. 'of' → logprob: -4.712635040283203
    5. '```' → logprob: -6.462635040283203
    6. ' in' → logprob: -6.587635040283203
    7. '   ' → logprob: -6.962635040283203
    8. '#' → logprob: -7.337635040283203
    9. ' how' → logprob: -7.462635040283203
    10. ' to' → logprob: -7.462635040283203

Token 668: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.0554134845733643
    2. 'the' → logprob: -1.3054134845733643
    3. 'cir' → logprob: -2.4304134845733643
    4. ' it' → logprob: -2.5554134845733643
    5. 'each' → logprob: -3.1804134845733643
    6. 'this' → logprob: -3.3054134845733643
    7. 'b' → logprob: -3.3054134845733643
    8. 'start' → logprob: -4.055413246154785
    9. 'all' → logprob: -4.305413246154785
    10. 'walls' → logprob: -4.680413246154785

Token 669: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.16058966517448425
    2. 'as' → logprob: -1.9105896949768066
    3. ' in' → logprob: -9.785589218139648
    4. 'of' → logprob: -9.785589218139648
    5. ' like' → logprob: -10.035589218139648
    6. ' of' → logprob: -10.285589218139648
    7. 'in' → logprob: -10.535589218139648
    8. '   ' → logprob: -10.660589218139648
    9. 'like' → logprob: -10.910589218139648
    10. '```' → logprob: -11.035589218139648

Token 670: ' shortest' (ID: 70564)
  Prédit: 'finding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'finding' → logprob: -0.6399758458137512
    2. 'cut' → logprob: -1.7649757862091064
    3. 'minimum' → logprob: -2.2649757862091064
    4. 'a' → logprob: -2.7649757862091064
    5. 'count' → logprob: -3.2649757862091064
    6. 'cross' → logprob: -4.2649760246276855
    7. 'layers' → logprob: -4.3899760246276855
    8. 'the' → logprob: -4.3899760246276855
    9. 'min' → logprob: -4.6399760246276855
    10. 'b' → logprob: -5.0149760246276855

Token 671: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.40616169571876526
    2. ' path' → logprob: -1.1561616659164429
    3. '_path' → logprob: -4.031161785125732
    4. 'distance' → logprob: -7.031161785125732
    5. ' distance' → logprob: -8.656161308288574
    6. '-path' → logprob: -8.656161308288574
    7. '_paths' → logprob: -10.281161308288574
    8. 'paths' → logprob: -10.531161308288574
    9. '_distance' → logprob: -11.031161308288574
    10. ' paths' → logprob: -11.156161308288574

Token 672: ' on' (ID: 402)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0991567373275757
    2. ' from' → logprob: -1.2241567373275757
    3. 'from' → logprob: -1.2241567373275757
    4. ' between' → logprob: -3.0991568565368652
    5. 'in' → logprob: -4.599156856536865
    6. ' through' → logprob: -5.099156856536865
    7. ' with' → logprob: -5.974156856536865
    8. ' search' → logprob: -6.224156856536865
    9. 'finding' → logprob: -6.724156856536865
    10. ' problem' → logprob: -6.849156856536865

Token 673: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.1364351511001587
    2. ' graph' → logprob: -1.3864351511001587
    3. 'the' → logprob: -1.5114351511001587
    4. ' the' → logprob: -1.6364351511001587
    5. ' a' → logprob: -5.886435031890869
    6. 'a' → logprob: -5.886435031890869
    7. 'b' → logprob: -6.261435031890869
    8. 'cir' → logprob: -6.261435031890869
    9. ' circles' → logprob: -7.011435031890869
    10. 'circle' → logprob: -7.136435031890869

Token 674: ' of' (ID: 328)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.24153269827365875
    2. '   ' → logprob: -2.741532802581787
    3. 'from' → logprob: -2.991532802581787
    4. ' with' → logprob: -3.366532802581787
    5. ' between' → logprob: -3.366532802581787
    6. ',' → logprob: -4.991532802581787
    7. ' through' → logprob: -5.241532802581787
    8. ' in' → logprob: -5.366532802581787
    9. ' to' → logprob: -6.116532802581787
    10. ' for' → logprob: -6.366532802581787

Token 675: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.007907784543931484
    2. ' circles' → logprob: -5.132907867431641
    3. 'nodes' → logprob: -6.507907867431641
    4. ' nodes' → logprob: -8.50790786743164
    5. 'walls' → logprob: -9.75790786743164
    6. 'sets' → logprob: -9.88290786743164
    7. ' sets' → logprob: -10.13290786743164
    8. 'circle' → logprob: -10.38290786743164
    9. '```' → logprob: -10.75790786743164
    10. 'tokens' → logprob: -11.00790786743164

Token 676: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0899420976638794
    2. ' from' → logprob: -1.4649420976638794
    3. ',' → logprob: -1.7149420976638794
    4. 'from' → logprob: -2.33994197845459
    5. '   ' → logprob: -2.83994197845459
    6. '.' → logprob: -3.58994197845459
    7. ' with' → logprob: -4.46494197845459
    8. ' if' → logprob: -4.58994197845459
    9. ' between' → logprob: -4.71494197845459
    10. '#' → logprob: -5.08994197845459

Token 677: '       ' (ID: 309)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -1.3920307159423828
    2. '       ' → logprob: -1.8920307159423828
    3. ' considering' → logprob: -2.392030715942383
    4. '   ' → logprob: -2.392030715942383
    5. '#' → logprob: -2.517030715942383
    6. ' with' → logprob: -2.642030715942383
    7. ' but' → logprob: -2.767030715942383
    8. ' counting' → logprob: -3.267030715942383
    9. 'with' → logprob: -3.642030715942383
    10. 'consider' → logprob: -3.767030715942383

Token 678: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.3594560623168945
    2. '       ' → logprob: -1.9844560623168945
    3. '   ' → logprob: -2.1094560623168945
    4. ' but' → logprob: -2.1094560623168945
    5. 'from' → logprob: -2.6094560623168945
    6. ' where' → logprob: -2.9844560623168945
    7. ' or' → logprob: -3.2344560623168945
    8. 'but' → logprob: -3.4844560623168945
    9. 'with' → logprob: -3.7344560623168945
    10. ' with' → logprob: -3.8594560623168945

Token 679: ' Where' (ID: 16349)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.028218310326337814
    2. '       ' → logprob: -3.6532182693481445
    3. 'but' → logprob: -7.9032182693481445
    4. 'where' → logprob: -8.153218269348145
    5. ' #' → logprob: -8.653218269348145
    6. ' where' → logprob: -8.653218269348145
    7. 'with' → logprob: -8.778218269348145
    8. ' but' → logprob: -8.778218269348145
    9. 'consider' → logprob: -9.153218269348145
    10. 'which' → logprob: -9.278218269348145

Token 680: ' crossing' (ID: 50946)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.0256738662719727
    2. 'edges' → logprob: -2.0256738662719727
    3. ' each' → logprob: -2.1506738662719727
    4. ' crossing' → logprob: -2.1506738662719727
    5. ' edges' → logprob: -2.2756738662719727
    6. ' the' → logprob: -3.1506738662719727
    7. 'the' → logprob: -3.1506738662719727
    8. 'cross' → logprob: -4.025673866271973
    9. 'we' → logprob: -4.150673866271973
    10. ' nodes' → logprob: -4.775673866271973

Token 681: ' wall' (ID: 9688)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.09900566190481186
    2. 'a' → logprob: -3.099005699157715
    3. ' an' → logprob: -3.099005699157715
    4. ' any' → logprob: -6.349005699157715
    5. 'an' → logprob: -6.599005699157715
    6. ' edges' → logprob: -7.724005699157715
    7. ' each' → logprob: -9.099005699157715
    8. ' the' → logprob: -9.224005699157715
    9. 'edges' → logprob: -9.849005699157715
    10. ' one' → logprob: -9.974005699157715

Token 682: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07011182606220245
    2. ' means' → logprob: -3.3201117515563965
    3. ' edges' → logprob: -4.0701117515563965
    4. ' s' → logprob: -4.9451117515563965
    5. ' is' → logprob: -5.6951117515563965
    6. 'means' → logprob: -6.8201117515563965
    7. 'edges' → logprob: -6.9451117515563965
    8. ' represents' → logprob: -6.9451117515563965
    9. ' corresponds' → logprob: -8.695112228393555
    10. ' ' → logprob: -9.070112228393555

Token 683: ' going' (ID: 2966)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04238934814929962
    2. ' ' → logprob: -3.917389392852783
    3. '2' → logprob: -4.542389392852783
    4. 'distance' → logprob: -6.292389392852783
    5. 'graph' → logprob: -6.417389392852783
    6. ' one' → logprob: -6.792389392852783
    7. ' graph' → logprob: -7.042389392852783
    8. '+' → logprob: -7.292389392852783
    9. 'dist' → logprob: -7.667389392852783
    10. ' a' → logprob: -7.667389392852783

Token 684: ' through' (ID: 1819)
  Prédit: ' through'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' through' → logprob: -0.14727327227592468
    2. 'through' → logprob: -2.022273302078247
    3. ' to' → logprob: -6.022273063659668
    4. 'to' → logprob: -6.897273063659668
    5. 'from' → logprob: -7.272273063659668
    6. ' from' → logprob: -8.272273063659668
    7. '+' → logprob: -9.647273063659668
    8. ' ' → logprob: -10.272273063659668
    9. ' across' → logprob: -10.522273063659668
    10. ' into' → logprob: -11.022273063659668

Token 685: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2288844883441925
    2. 'a' → logprob: -1.8538844585418701
    3. ' an' → logprob: -4.103884696960449
    4. ' nodes' → logprob: -4.728884696960449
    5. ' one' → logprob: -4.853884696960449
    6. ' edges' → logprob: -6.103884696960449
    7. ' another' → logprob: -6.103884696960449
    8. 'an' → logprob: -6.228884696960449
    9. ' vertices' → logprob: -6.228884696960449
    10. 'nodes' → logprob: -6.978884696960449

Token 686: ' circle' (ID: 22005)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -1.207594394683838
    2. 'node' → logprob: -1.207594394683838
    3. 'circle' → logprob: -1.207594394683838
    4. 'vertex' → logprob: -2.957594394683838
    5. ' circle' → logprob: -4.207594394683838
    6. ' vertex' → logprob: -4.457594394683838
    7. 'wall' → logprob: -4.832594394683838
    8. 'space' → logprob: -5.332594394683838
    9. 'edge' → logprob: -5.457594394683838
    10. ' wall' → logprob: -5.582594394683838

Token 687: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06919284909963608
    2. ' if' → logprob: -2.944192886352539
    3. 'if' → logprob: -5.194192886352539
    4. '        
' → logprob: -5.569192886352539
    5. '
' → logprob: -5.944192886352539
    6. '#' → logprob: -6.569192886352539
    7. '<|end|>' → logprob: -8.819192886352539
    8. 'start' → logprob: -8.944192886352539
    9. ' start' → logprob: -9.069192886352539
    10. 'import' → logprob: -9.694192886352539

Token 688: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14613661170005798
    2. '
' → logprob: -2.146136522293091
    3. ' if' → logprob: -4.89613676071167
    4. '        
' → logprob: -5.14613676071167
    5. '<|end|>' → logprob: -6.02113676071167
    6. '   ' → logprob: -6.64613676071167
    7. '#' → logprob: -7.64613676071167
    8. '    
' → logprob: -8.271136283874512
    9. 'if' → logprob: -8.271136283874512
    10. '<|end|>' → logprob: -8.521136283874512

Token 689: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3023642301559448
    2. '
' → logprob: -1.6773642301559448
    3. '        
' → logprob: -3.0523643493652344
    4. ' if' → logprob: -4.177364349365234
    5. '   ' → logprob: -5.302364349365234
    6. '    
' → logprob: -6.302364349365234
    7. ' 
' → logprob: -6.927364349365234
    8. 'if' → logprob: -7.177364349365234
    9. ' start' → logprob: -7.302364349365234
    10. '```' → logprob: -7.427364349365234

Token 690: ' Another' (ID: 20064)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.802415132522583
    2. 'if' → logprob: -1.302415132522583
    3. '#' → logprob: -1.427415132522583
    4. '       ' → logprob: -4.052414894104004
    5. 'visited' → logprob: -4.302414894104004
    6. ' if' → logprob: -6.552414894104004
    7. 'dist' → logprob: -6.802414894104004
    8. '   ' → logprob: -6.927414894104004
    9. 'distance' → logprob: -6.927414894104004
    10. 'outside' → logprob: -7.052414894104004

Token 691: ' method' (ID: 2595)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 692: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6633691191673279
    2. '       ' → logprob: -1.2883691787719727
    3. ':
' → logprob: -2.4133691787719727
    4. ' =' → logprob: -3.5383691787719727
    5. '   ' → logprob: -3.7883691787719727
    6. '
' → logprob: -4.038369178771973
    7. 'def' → logprob: -4.288369178771973
    8. '=' → logprob: -5.038369178771973
    9. '#' → logprob: -5.538369178771973
    10. ' for' → logprob: -5.663369178771973

Token 693: ' start' (ID: 1604)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05348644033074379
    2. ' #' → logprob: -4.303486347198486
    3. '       ' → logprob: -4.553486347198486
    4. 'pass' → logprob: -5.553486347198486
    5. 'from' → logprob: -5.803486347198486
    6. ' pass' → logprob: -5.928486347198486
    7. 'continue' → logprob: -6.053486347198486
    8. 'start' → logprob: -6.053486347198486
    9. 'def' → logprob: -6.178486347198486
    10. '
' → logprob: -6.428486347198486

Token 694: ' point' (ID: 2438)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.19775868952274323
    2. '_c' → logprob: -1.947758674621582
    3. '_points' → logprob: -3.822758674621582
    4. '_set' → logprob: -5.697758674621582
    5. '<|end|>' → logprob: -5.947758674621582
    6. '_sets' → logprob: -6.447758674621582
    7. '_tokens' → logprob: -6.447758674621582
    8. '_s' → logprob: -7.197758674621582
    9. '_neighbors' → logprob: -7.322758674621582
    10. '_' → logprob: -7.322758674621582

Token 695: ' outside' (ID: 7539)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4172306060791016
    2. '<|end|>' → logprob: -1.7922306060791016
    3. '_neighbors' → logprob: -2.0422306060791016
    4. 's' → logprob: -2.9172306060791016
    5. ' =' → logprob: -3.0422306060791016
    6. '_c' → logprob: -3.0422306060791016
    7. ' is' → logprob: -3.2922306060791016
    8. ',' → logprob: -3.2922306060791016
    9. '_nodes' → logprob: -3.6672306060791016
    10. '_is' → logprob: -4.042230606079102

Token 696: ' walls' (ID: 20562)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9744859337806702
    2. '#' → logprob: -1.5994858741760254
    3. ' or' → logprob: -2.4744858741760254
    4. '_c' → logprob: -2.4744858741760254
    5. ',' → logprob: -3.3494858741760254
    6. 'and' → logprob: -3.4744858741760254
    7. ' if' → logprob: -3.9744858741760254
    8. ')' → logprob: -4.099485874176025
    9. ' =' → logprob: -4.099485874176025
    10. '       ' → logprob: -4.224485874176025

Token 697: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.890558123588562
    2. ' if' → logprob: -0.890558123588562
    3. ' and' → logprob: -3.1405582427978516
    4. ',' → logprob: -3.5155582427978516
    5. '
' → logprob: -3.6405582427978516
    6. '#' → logprob: -4.015558242797852
    7. 'if' → logprob: -4.140558242797852
    8. '        
' → logprob: -4.765558242797852
    9. ' (' → logprob: -5.640558242797852
    10. ' to' → logprob: -5.765558242797852

Token 698: ' end' (ID: 1268)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0770419836044312
    2. 'end' → logprob: -1.5770419836044312
    3. ' end' → logprob: -1.8270419836044312
    4. ' continue' → logprob: -2.5770421028137207
    5. 'continue' → logprob: -2.8270421028137207
    6. ' #' → logprob: -2.9520421028137207
    7. ' and' → logprob: -3.5770421028137207
    8. '       ' → logprob: -3.5770421028137207
    9. ' so' → logprob: -4.327042102813721
    10. 'and' → logprob: -4.827042102813721

Token 699: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.7348718047142029
    2. 'point' → logprob: -1.3598718643188477
    3. '_c' → logprob: -2.1098718643188477
    4. 'points' → logprob: -2.3598718643188477
    5. '_points' → logprob: -4.609871864318848
    6. ' outside' → logprob: -5.234871864318848
    7. '_nodes' → logprob: -5.734871864318848
    8. ' points' → logprob: -5.734871864318848
    9. 'outside' → logprob: -5.984871864318848
    10. ',' → logprob: -6.109871864318848

Token 700: ' outside' (ID: 7539)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.2853626012802124
    2. ' outside' → logprob: -2.160362720489502
    3. 'inside' → logprob: -2.285362720489502
    4. ' is' → logprob: -4.535362720489502
    5. ' inside' → logprob: -4.660362720489502
    6. 'is' → logprob: -5.785362720489502
    7. ' also' → logprob: -6.035362720489502
    8. 'also' → logprob: -6.160362720489502
    9. 'on' → logprob: -7.910362720489502
    10. ' must' → logprob: -7.910362720489502

Token 701: ' walls' (ID: 20562)
  Prédit: 'walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walls' → logprob: -0.012951384298503399
    2. ' walls' → logprob: -4.387951374053955
    3. '...' → logprob: -9.137951850891113
    4. 'points' → logprob: -9.637951850891113
    5. ' of' → logprob: -9.762951850891113
    6. 'cir' → logprob: -10.262951850891113
    7. ',' → logprob: -10.387951850891113
    8. 'wall' → logprob: -10.887951850891113
    9. 's' → logprob: -11.262951850891113
    10. 'w' → logprob: -11.387951850891113

Token 702: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7186771035194397
    2. ',' → logprob: -1.343677043914795
    3. '
' → logprob: -2.343677043914795
    4. '<|end|>' → logprob: -2.593677043914795
    5. ' and' → logprob: -4.093677043914795
    6. '.' → logprob: -4.218677043914795
    7. '...' → logprob: -4.343677043914795
    8. '#' → logprob: -4.843677043914795
    9. ',
' → logprob: -4.968677043914795
    10. '        
' → logprob: -5.218677043914795

Token 703: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05305536463856697
    2. '<|end|>' → logprob: -3.4280552864074707
    3. '        
' → logprob: -4.678055286407471
    4. '
' → logprob: -4.803055286407471
    5. '<|end|>' → logprob: -7.303055286407471
    6. '#' → logprob: -8.178055763244629
    7. ' if' → logprob: -8.178055763244629
    8. ',' → logprob: -8.803055763244629
    9. ' and' → logprob: -9.178055763244629
    10. '...' → logprob: -10.678055763244629

Token 704: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01969343051314354
    2. ' if' → logprob: -4.769693374633789
    3. '#' (adapté à ' #') → logprob: -5.144693374633789
    4. 'if' → logprob: -6.019693374633789
    5. '        
' → logprob: -6.394693374633789
    6. ' for' → logprob: -9.019693374633789
    7. 'continue' → logprob: -9.019693374633789
    8. 'start' → logprob: -9.394693374633789
    9. 'If' → logprob: -9.644693374633789
    10. ' #' → logprob: -9.644693374633789

Token 705: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3573019802570343
    2. 'if' → logprob: -1.982301950454712
    3. '       ' → logprob: -1.982301950454712
    4. 'start' → logprob: -4.857302188873291
    5. ' if' → logprob: -5.107302188873291
    6. ' #' → logprob: -6.482302188873291
    7. 'graph' → logprob: -6.732302188873291
    8. 'for' → logprob: -6.732302188873291
    9. 'distance' → logprob: -6.732302188873291
    10. 'from' → logprob: -6.857302188873291

Token 706: ' rat' (ID: 8908)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.40279677510261536
    2. 'if' → logprob: -2.152796745300293
    3. '       ' → logprob: -2.777796745300293
    4. 'def' → logprob: -3.027796745300293
    5. ' if' → logprob: -3.152796745300293
    6. ' #' → logprob: -4.527796745300293
    7. ' next' → logprob: -5.027796745300293
    8. 'for' → logprob: -5.152796745300293
    9. '   ' → logprob: -5.277796745300293
    10. 'next' → logprob: -5.527796745300293

Token 707: ' can' (ID: 665)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.9503167271614075
    2. ' must' → logprob: -1.2003166675567627
    3. ' and' → logprob: -2.0753166675567627
    4. ' can' → logprob: -2.4503166675567627
    5. 'and' → logprob: -4.075316905975342
    6. ' has' → logprob: -4.075316905975342
    7. ' needs' → logprob: -4.325316905975342
    8. 'can' → logprob: -4.575316905975342
    9. '#' → logprob: -4.700316905975342
    10. 'needs' → logprob: -5.200316905975342

Token 708: ' go' (ID: 810)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.5302141904830933
    2. 'pass' → logprob: -2.155214309692383
    3. 'try' → logprob: -2.530214309692383
    4. 'go' → logprob: -3.155214309692383
    5. ' cross' → logprob: -3.280214309692383
    6. 'only' → logprob: -3.655214309692383
    7. 'move' → logprob: -4.030214309692383
    8. 'start' → logprob: -4.155214309692383
    9. ' only' → logprob: -4.280214309692383
    10. ' pass' → logprob: -4.530214309692383

Token 709: ' around' (ID: 2846)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.4925449788570404
    2. 'outside' → logprob: -1.4925450086593628
    3. ' through' → logprob: -2.4925448894500732
    4. 'around' → logprob: -2.8675448894500732
    5. ' around' → logprob: -4.617545127868652
    6. ' outside' → logprob: -4.867545127868652
    7. 'out' → logprob: -6.242545127868652
    8. 'from' → logprob: -6.492545127868652
    9. 'either' → logprob: -7.117545127868652
    10. 'direct' → logprob: -7.117545127868652

Token 710: ' walls' (ID: 20562)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9009052515029907
    2. ' the' → logprob: -1.5259052515029907
    3. 'all' → logprob: -1.6509052515029907
    4. 'them' → logprob: -2.775905132293701
    5. ' all' → logprob: -3.025905132293701
    6. 'any' → logprob: -3.650905132293701
    7. ' them' → logprob: -4.650905132293701
    8. 'outside' → logprob: -4.900905132293701
    9. 'walls' → logprob: -5.025905132293701
    10. 'without' → logprob: -5.025905132293701

Token 711: ' outside' (ID: 7539)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05176518112421036
    2. ',' → logprob: -3.301765203475952
    3. '<|end|>' → logprob: -5.676764965057373
    4. '.' → logprob: -6.176764965057373
    5. '        
' → logprob: -6.551764965057373
    6. '
' → logprob: -6.551764965057373
    7. ' and' → logprob: -6.676764965057373
    8. ' if' → logprob: -6.801764965057373
    9. ' but' → logprob: -7.051764965057373
    10. '#' → logprob: -7.801764965057373

Token 712: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1971142292022705
    2. ' if' → logprob: -1.8221142292022705
    3. ' or' → logprob: -2.3221142292022705
    4. '.' → logprob: -2.4471142292022705
    5. 'the' → logprob: -2.5721142292022705
    6. 'if' → logprob: -2.8221142292022705
    7. ' the' → logprob: -2.9471142292022705
    8. '       ' → logprob: -3.1971142292022705
    9. ' and' → logprob: -3.8221142292022705
    10. ' of' → logprob: -4.197113990783691

Token 713: ' Walls' (ID: 120584)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2198328822851181
    2. '
' → logprob: -1.8448328971862793
    3. '#' → logprob: -4.469832897186279
    4. ' if' → logprob: -4.844832897186279
    5. '<|end|>' → logprob: -4.969832897186279
    6. '        
' → logprob: -5.094832897186279
    7. '   ' → logprob: -6.094832897186279
    8. 'if' → logprob: -6.094832897186279
    9. '...' → logprob: -7.844832897186279
    10. '```' → logprob: -8.219832420349121

Token 714: ' that' (ID: 484)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -1.4999805688858032
    2. 'may' → logprob: -1.9999805688858032
    3. 'that' → logprob: -1.9999805688858032
    4. 'can' → logprob: -2.2499804496765137
    5. ' may' → logprob: -2.6249804496765137
    6. ' can' → logprob: -2.9999804496765137
    7. 'might' → logprob: -2.9999804496765137
    8. ' that' → logprob: -3.1249804496765137
    9. 'must' → logprob: -3.4999804496765137
    10. ' might' → logprob: -3.4999804496765137

Token 715: ' separate' (ID: 13574)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.36025121808052063
    2. 'must' → logprob: -2.1102511882781982
    3. 'are' → logprob: -3.1102511882781982
    4. 'sur' → logprob: -3.3602511882781982
    5. 'block' → logprob: -3.6102511882781982
    6. 'com' → logprob: -4.110251426696777
    7. 'need' → logprob: -4.485251426696777
    8. 'en' → logprob: -4.610251426696777
    9. 'inter' → logprob: -4.610251426696777
    10. 'have' → logprob: -5.110251426696777

Token 716: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7889087796211243
    2. 'the' → logprob: -1.4139087200164795
    3. 'them' → logprob: -1.4139087200164795
    4. ' them' → logprob: -3.5389087200164795
    5. ' the' → logprob: -4.038908958435059
    6. ' start' → logprob: -5.038908958435059
    7. 'points' → logprob: -5.538908958435059
    8. 'inside' → logprob: -7.663908958435059
    9. 's' → logprob: -8.163908958435059
    10. 'spaces' → logprob: -8.788908958435059

Token 717: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.49819400906562805
    2. ' and' → logprob: -1.2481939792633057
    3. 'from' → logprob: -2.3731939792633057
    4. ' from' → logprob: -4.623194217681885
    5. ' or' → logprob: -6.373194217681885
    6. 'or' → logprob: -7.498194217681885
    7. '       ' → logprob: -11.123193740844727
    8. ' are' → logprob: -11.373193740844727
    9. ' ' → logprob: -11.498193740844727
    10. 'are' → logprob: -11.748193740844727

Token 718: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0005536287208087742
    2. ' end' → logprob: -7.500553607940674
    3. '#' → logprob: -14.375554084777832
    4. '```' → logprob: -17.000553131103516
    5. 'the' → logprob: -17.375553131103516
    6. '   ' → logprob: -18.125553131103516
    7. '       ' → logprob: -18.625553131103516
    8. '
' → logprob: -19.125553131103516
    9. ' ' → logprob: -19.125553131103516
    10. 'fish' → logprob: -19.375553131103516

Token 719: ' must' (ID: 2804)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.48205268383026123
    2. ' must' → logprob: -2.232052803039551
    3. ',' → logprob: -2.607052803039551
    4. ' will' → logprob: -3.482052803039551
    5. 'are' → logprob: -3.982052803039551
    6. '#' → logprob: -4.107052803039551
    7. ')' → logprob: -4.357052803039551
    8. '   ' → logprob: -4.357052803039551
    9. ' can' → logprob: -4.357052803039551
    10. ' may' → logprob: -4.607052803039551

Token 720: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.024949772283434868
    2. ' be' → logprob: -3.774949789047241
    3. 'have' → logprob: -7.149949550628662
    4. 'cross' → logprob: -8.39995002746582
    5. 'block' → logprob: -9.14995002746582
    6. '   ' → logprob: -9.39995002746582
    7. 'also' → logprob: -9.77495002746582
    8. 'inter' → logprob: -9.89995002746582
    9. '	be' → logprob: -10.14995002746582
    10. '
' → logprob: -10.39995002746582

Token 721: ' crossed' (ID: 47928)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0030556656420230865
    2. ' crossed' → logprob: -6.003055572509766
    3. 'count' → logprob: -7.878055572509766
    4. 'passed' → logprob: -9.503055572509766
    5. '
' → logprob: -9.753055572509766
    6. 'cut' → logprob: -10.503055572509766
    7. ' cross' → logprob: -11.378055572509766
    8. '```' → logprob: -12.128055572509766
    9. '   ' → logprob: -12.253055572509766
    10. '_cross' → logprob: -12.503055572509766

Token 722: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03409144654870033
    2. '<|end|>' → logprob: -4.034091472625732
    3. '.' → logprob: -5.159091472625732
    4. ',' → logprob: -5.534091472625732
    5. ' or' → logprob: -6.659091472625732
    6. '        
' → logprob: -7.034091472625732
    7. ' by' → logprob: -7.159091472625732
    8. '<|end|>' → logprob: -7.159091472625732
    9. ' to' → logprob: -7.534091472625732
    10. '...' → logprob: -8.034090995788574

Token 723: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006187583319842815
    2. '<|end|>' → logprob: -5.631187438964844
    3. '#' → logprob: -7.006187438964844
    4. '        
' → logprob: -7.381187438964844
    5. '
' → logprob: -7.631187438964844
    6. '<|end|>' → logprob: -9.256187438964844
    7. ',' → logprob: -9.381187438964844
    8. '...' → logprob: -9.631187438964844
    9. ' if' → logprob: -9.756187438964844
    10. '```' → logprob: -9.756187438964844

Token 724: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012175836600363255
    2. '        
' → logprob: -5.387176036834717
    3. '#' (adapté à ' #') → logprob: -5.512176036834717
    4. '<|end|>' → logprob: -6.762176036834717
    5. ' if' → logprob: -7.012176036834717
    6. '
' → logprob: -7.887176036834717
    7. 'if' → logprob: -8.387175559997559
    8. '   ' → logprob: -8.887175559997559
    9. ' #' → logprob: -9.137175559997559
    10. '...' → logprob: -10.387175559997559

Token 725: ' So' (ID: 2632)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6671478152275085
    2. '       ' → logprob: -1.0421478748321533
    3. 'if' → logprob: -3.4171478748321533
    4. 'graph' → logprob: -3.7921478748321533
    5. 'start' → logprob: -3.9171478748321533
    6. 'visited' → logprob: -3.9171478748321533
    7. 'outside' → logprob: -5.167147636413574
    8. 'dist' → logprob: -5.542147636413574
    9. 'distance' → logprob: -5.667147636413574
    10. 'from' → logprob: -5.792147636413574

Token 726: ' find' (ID: 1646)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8037323355674744
    2. 'visited' → logprob: -1.0537323951721191
    3. 'def' → logprob: -3.178732395172119
    4. 'outside' → logprob: -3.303732395172119
    5. 'walls' → logprob: -3.553732395172119
    6. 'dist' → logprob: -3.678732395172119
    7. 'from' → logprob: -4.178732395172119
    8. 'all' → logprob: -4.928732395172119
    9. 'import' → logprob: -4.928732395172119
    10. 'outer' → logprob: -4.928732395172119

Token 727: ' minimal' (ID: 19957)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9939770102500916
    2. ' the' → logprob: -1.1189770698547363
    3. 'all' → logprob: -2.6189770698547363
    4. ' minimal' → logprob: -2.8689770698547363
    5. 'minimum' → logprob: -3.4939770698547363
    6. 'connected' → logprob: -3.6189770698547363
    7. 'minimal' → logprob: -3.7439770698547363
    8. 'number' → logprob: -3.7439770698547363
    9. ' all' → logprob: -4.618977069854736
    10. ' connected' → logprob: -4.743977069854736

Token 728: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.13203781843185425
    2. ' cut' → logprob: -3.007037878036499
    3. 'number' → logprob: -3.757037878036499
    4. 'cut' → logprob: -4.13203763961792
    5. ' cuts' → logprob: -5.25703763961792
    6. ' set' → logprob: -5.50703763961792
    7. 'cuts' → logprob: -5.50703763961792
    8. ' walls' → logprob: -5.50703763961792
    9. ' distance' → logprob: -5.63203763961792
    10. 'distance' → logprob: -5.88203763961792

Token 729: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.740939736366272
    2. ' of' → logprob: -0.865939736366272
    3. 'of' → logprob: -2.6159396171569824
    4. '   ' → logprob: -4.490939617156982
    5. '       ' → logprob: -4.615939617156982
    6. '           ' → logprob: -5.865939617156982
    7. ' =' → logprob: -6.990939617156982
    8. '_c' → logprob: -7.365939617156982
    9. '=' → logprob: -7.365939617156982
    10. ' ' → logprob: -7.865939617156982

Token 730: ' circles' (ID: 45131)
  Prédit: 'walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walls' → logprob: -0.5126978158950806
    2. 'cir' → logprob: -1.0126978158950806
    3. ' circles' → logprob: -4.012697696685791
    4. 'cross' → logprob: -5.137697696685791
    5. 'circle' → logprob: -5.137697696685791
    6. ' walls' → logprob: -5.262697696685791
    7. 'wall' → logprob: -7.137697696685791
    8. 'layers' → logprob: -7.137697696685791
    9. 'steps' → logprob: -8.13769817352295
    10. 'edges' → logprob: -8.51269817352295

Token 731: ' on' (ID: 402)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.8610886931419373
    2. ' to' → logprob: -1.111088752746582
    3. 'that' → logprob: -2.611088752746582
    4. 'def' → logprob: -3.111088752746582
    5. 'to' → logprob: -3.236088752746582
    6. '       ' → logprob: -3.861088752746582
    7. 'needed' → logprob: -4.111088752746582
    8. ' needed' → logprob: -4.986088752746582
    9. ' crossed' → logprob: -5.236088752746582
    10. '   ' → logprob: -5.236088752746582

Token 732: ' any' (ID: 1062)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2844574451446533
    2. ' the' → logprob: -1.4094574451446533
    3. 'the' → logprob: -1.5344574451446533
    4. ' a' → logprob: -1.6594574451446533
    5. 'path' → logprob: -3.4094574451446533
    6. ' path' → logprob: -3.7844574451446533
    7. ' paths' → logprob: -5.284457206726074
    8. ' which' → logprob: -5.909457206726074
    9. 'paths' → logprob: -6.034457206726074
    10. 'which' → logprob: -6.534457206726074

Token 733: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.1429697871208191
    2. 'path' → logprob: -2.017969846725464
    3. '_path' → logprob: -9.767970085144043
    4. ' ' → logprob: -9.767970085144043
    5. ' paths' → logprob: -10.142970085144043
    6. 'cut' → logprob: -10.642970085144043
    7. 'paths' → logprob: -10.892970085144043
    8. 'cross' → logprob: -11.392970085144043
    9. 'circle' → logprob: -11.392970085144043
    10. ' cut' → logprob: -12.142970085144043

Token 734: ' from' (ID: 591)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.886081337928772
    2. '       ' → logprob: -1.261081337928772
    3. ' that' → logprob: -2.5110812187194824
    4. ' to' → logprob: -2.6360812187194824
    5. '   ' → logprob: -3.6360812187194824
    6. ' from' → logprob: -3.6360812187194824
    7. 'from' → logprob: -3.7610812187194824
    8. ' between' → logprob: -4.011081218719482
    9. '
' → logprob: -4.261081218719482
    10. ' (' → logprob: -4.636081218719482

Token 735: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.17431576550006866
    2. ' start' → logprob: -2.2993156909942627
    3. 'a' → logprob: -3.4243156909942627
    4. ' a' → logprob: -3.7993156909942627
    5. 'any' → logprob: -6.174315929412842
    6. ' any' → logprob: -6.799315929412842
    7. 'the' → logprob: -7.674315929412842
    8. ' the' → logprob: -7.924315929412842
    9. 'points' → logprob: -9.174315452575684
    10. 'point' → logprob: -9.299315452575684

Token 736: ' region' (ID: 7967)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.07352464646100998
    2. 'to' → logprob: -3.3235247135162354
    3. ' to' → logprob: -4.323524475097656
    4. '_nodes' → logprob: -4.948524475097656
    5. '_to' → logprob: -5.823524475097656
    6. 'cir' → logprob: -5.948524475097656
    7. 'or' → logprob: -6.073524475097656
    8. '_points' → logprob: -6.198524475097656
    9. ' or' → logprob: -6.323524475097656
    10. '_s' → logprob: -7.573524475097656

Token 737: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.009646181017160416
    2. 'to' → logprob: -5.759646415710449
    3. ' or' → logprob: -5.759646415710449
    4. ' (' → logprob: -6.634646415710449
    5. ' if' → logprob: -7.634646415710449
    6. ' and' → logprob: -8.25964641571045
    7. ',' → logprob: -8.50964641571045
    8. ' that' → logprob: -8.63464641571045
    9. '       ' → logprob: -8.75964641571045
    10. '   ' → logprob: -8.88464641571045

Token 738: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.5759486556053162
    2. ' end' → logprob: -0.8259486556053162
    3. ' the' → logprob: -12.575948715209961
    4. 'the' → logprob: -13.825948715209961
    5. '=end' → logprob: -13.825948715209961
    6. ' ' → logprob: -14.075948715209961
    7. '(end' → logprob: -14.200948715209961
    8. ''end' → logprob: -15.075948715209961
    9. '[end' → logprob: -15.325948715209961
    10. 'target' → logprob: -15.325948715209961

Token 739: ' region' (ID: 7967)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.6251423358917236
    2. '_nodes' → logprob: -1.1251423358917236
    3. '       ' → logprob: -2.7501423358917236
    4. '_' → logprob: -3.0001423358917236
    5. '   ' → logprob: -5.0001420974731445
    6. '_points' → logprob: -5.1251420974731445
    7. '_regions' → logprob: -5.8751420974731445
    8. ',' → logprob: -6.5001420974731445
    9. '#' → logprob: -6.7501420974731445
    10. '.' → logprob: -7.0001420974731445

Token 740: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2002137303352356
    2. '<|end|>' → logprob: -2.075213670730591
    3. '
' → logprob: -3.450213670730591
    4. '        
' → logprob: -4.07521390914917
    5. '<|end|>' → logprob: -6.07521390914917
    6. '#' → logprob: -6.45021390914917
    7. ' if' → logprob: -6.57521390914917
    8. ',' → logprob: -7.70021390914917
    9. 'def' → logprob: -8.575213432312012
    10. 'if' → logprob: -8.825213432312012

Token 741: ' plane' (ID: 16499)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -1.0512477159500122
    2. 'the' → logprob: -1.1762477159500122
    3. 'graph' → logprob: -1.3012477159500122
    4. 'terms' → logprob: -3.0512475967407227
    5. ' graph' → logprob: -5.176247596740723
    6. ' the' → logprob: -5.551247596740723
    7. 'range' → logprob: -5.676247596740723
    8. 'def' → logprob: -6.551247596740723
    9. ' circles' → logprob: -6.801247596740723
    10. 'order' → logprob: -7.051247596740723

Token 742: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31278330087661743
    2. '
' → logprob: -2.0627832412719727
    3. '<|end|>' → logprob: -2.5627832412719727
    4. '        
' → logprob: -2.8127832412719727
    5. '<|end|>' → logprob: -6.312783241271973
    6. '#' → logprob: -7.687783241271973
    7. '        
        
' → logprob: -7.812783241271973
    8. '        

' → logprob: -7.937783241271973
    9. ',' → logprob: -8.062783241271973
    10. 'def' → logprob: -8.562783241271973

Token 743: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03878910094499588
    2. '<|end|>' → logprob: -3.6637890338897705
    3. '        
' → logprob: -4.91378927230835
    4. '
' → logprob: -5.66378927230835
    5. '#' → logprob: -7.28878927230835
    6. '<|end|>' → logprob: -8.038788795471191
    7. '...' → logprob: -9.163788795471191
    8. ' if' → logprob: -9.413788795471191
    9. '   ' → logprob: -9.663788795471191
    10. '        
        
' → logprob: -10.038788795471191

Token 744: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0235319584608078
    2. '        
' → logprob: -4.398531913757324
    3. '
' → logprob: -5.898531913757324
    4. 'if' → logprob: -6.023531913757324
    5. ' if' → logprob: -6.148531913757324
    6. '<|end|>' → logprob: -6.398531913757324
    7. '#' (adapté à ' #') → logprob: -6.648531913757324
    8. '   ' → logprob: -8.523531913757324
    9. 'def' → logprob: -9.773531913757324
    10. '        
        
' → logprob: -9.898531913757324

Token 745: ' To' (ID: 2514)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4015102684497833
    2. 'if' → logprob: -2.401510238647461
    3. '       ' → logprob: -2.526510238647461
    4. 'visited' → logprob: -2.526510238647461
    5. 'start' → logprob: -3.901510238647461
    6. ' if' → logprob: -4.401510238647461
    7. 'from' → logprob: -4.651510238647461
    8. 'dist' → logprob: -4.901510238647461
    9. ' #' → logprob: -5.276510238647461
    10. 'outside' → logprob: -5.401510238647461

Token 746: ' model' (ID: 2359)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.8086588978767395
    2. 'find' → logprob: -1.8086588382720947
    3. 'ach' → logprob: -2.3086588382720947
    4. 'solve' → logprob: -2.3086588382720947
    5. 'handle' → logprob: -3.0586588382720947
    6. 'continue' → logprob: -3.1836588382720947
    7. 'det' → logprob: -3.5586588382720947
    8. 'pass' → logprob: -4.058659076690674
    9. 'complete' → logprob: -4.683659076690674
    10. 'implement' → logprob: -4.808659076690674

Token 747: ' start' (ID: 1604)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3422495722770691
    2. ' the' → logprob: -1.7172496318817139
    3. ' this' → logprob: -2.967249631881714
    4. 'this' → logprob: -3.217249631881714
    5. '#' → logprob: -5.717249393463135
    6. ' them' → logprob: -6.217249393463135
    7. 'that' → logprob: -6.467249393463135
    8. '<|end|>' → logprob: -6.717249393463135
    9. 'them' → logprob: -6.842249393463135
    10. ' that' → logprob: -6.842249393463135

Token 748: ' and' (ID: 326)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.2022254467010498
    2. '_c' → logprob: -1.9522254467010498
    3. '_points' → logprob: -4.077225685119629
    4. '_regions' → logprob: -4.327225685119629
    5. ',' → logprob: -6.202225685119629
    6. '_region' → logprob: -6.327225685119629
    7. '_set' → logprob: -6.827225685119629
    8. 'and' → logprob: -6.827225685119629
    9. '_and' → logprob: -7.327225685119629
    10. '_indices' → logprob: -7.577225685119629

Token 749: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.055851250886917114
    2. ' end' → logprob: -2.9308512210845947
    3. '_end' → logprob: -7.055851459503174
    4. 'outside' → logprob: -10.430850982666016
    5. 'continue' → logprob: -11.305850982666016
    6. '...' → logprob: -11.555850982666016
    7. ' outside' → logprob: -11.555850982666016
    8. 'point' → logprob: -11.805850982666016
    9. '[end' → logprob: -11.930850982666016
    10. '=end' → logprob: -11.930850982666016

Token 750: ' "' (ID: 392)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.33511248230934143
    2. 'points' → logprob: -2.0851125717163086
    3. 'nodes' → logprob: -2.5851125717163086
    4. '_points' → logprob: -3.4601125717163086
    5. ',' → logprob: -4.210112571716309
    6. '_c' → logprob: -4.710112571716309
    7. ' nodes' → logprob: -4.835112571716309
    8. ' points' → logprob: -5.210112571716309
    9. 'regions' → logprob: -5.835112571716309
    10. '<|end|>' → logprob: -6.085112571716309

Token 751: 'outside' (ID: 141623)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.8385834097862244
    2. 'regions' → logprob: -1.3385834693908691
    3. ' points' → logprob: -2.213583469390869
    4. ' regions' → logprob: -2.463583469390869
    5. 'outside' → logprob: -3.463583469390869
    6. '"' → logprob: -4.338583469390869
    7. 'areas' → logprob: -4.338583469390869
    8. 'positions' → logprob: -4.588583469390869
    9. 'nodes' → logprob: -4.713583469390869
    10. ' positions' → logprob: -5.088583469390869

Token 752: '":' (ID: 1243)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8530053496360779
    2. '",' → logprob: -1.7280054092407227
    3. 'regions' → logprob: -2.2280054092407227
    4. ' regions' → logprob: -2.7280054092407227
    5. 'areas' → logprob: -3.1030054092407227
    6. 'region' → logprob: -3.6030054092407227
    7. ' areas' → logprob: -3.8530054092407227
    8. '":' → logprob: -3.8530054092407227
    9. 'space' → logprob: -4.353005409240723
    10. 'nodes' → logprob: -4.478005409240723

Token 753: ' Consider' (ID: 26632)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8508912920951843
    2. 'outside' → logprob: -0.8508912920951843
    3. 'outer' → logprob: -2.975891351699829
    4. '       ' → logprob: -3.475891351699829
    5. 'start' → logprob: -3.725891351699829
    6. 'all' → logprob: -4.85089111328125
    7. ' outside' → logprob: -5.22589111328125
    8. 'inside' → logprob: -5.35089111328125
    9. 'empty' → logprob: -5.72589111328125
    10. 'visited' → logprob: -5.97589111328125

Token 754: ' virtual' (ID: 7346)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3944689929485321
    2. 'the' → logprob: -1.3944690227508545
    3. 'cir' → logprob: -3.6444690227508545
    4. 'adding' → logprob: -4.894468784332275
    5. 'in' → logprob: -5.144468784332275
    6. 'a' → logprob: -5.269468784332275
    7. ' all' → logprob: -5.269468784332275
    8. 'two' → logprob: -5.394468784332275
    9. 'virtual' → logprob: -5.519468784332275
    10. 'start' → logprob: -5.769468784332275

Token 755: ' node' (ID: 4596)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.33186155557632446
    2. 'cir' → logprob: -1.8318614959716797
    3. 'points' → logprob: -3.0818614959716797
    4. ' nodes' → logprob: -3.2068614959716797
    5. 'node' → logprob: -4.70686149597168
    6. 'circle' → logprob: -5.20686149597168
    7. ' circles' → logprob: -5.70686149597168
    8. 'spaces' → logprob: -5.70686149597168
    9. 'start' → logprob: -6.20686149597168
    10. 'lines' → logprob: -6.45686149597168

Token 756: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04097115993499756
    2. '(n' → logprob: -3.915971279144287
    3. '(s' → logprob: -4.915971279144287
    4. ' =' → logprob: -5.290971279144287
    5. ' n' → logprob: -6.790971279144287
    6. 'es' → logprob: -6.790971279144287
    7. '=' → logprob: -6.915971279144287
    8. 'n' → logprob: -7.040971279144287
    9. '0' → logprob: -7.290971279144287
    10. '<|end|>' → logprob: -7.290971279144287

Token 757: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.10251244157552719
    2. 'outside' → logprob: -3.1025123596191406
    3. '"' → logprob: -3.4775123596191406
    4. '-' → logprob: -4.227512359619141
    5. 'the' → logprob: -6.102512359619141
    6. ''' → logprob: -6.227512359619141
    7. 'both' → logprob: -6.477512359619141
    8. 'walls' → logprob: -8.22751235961914
    9. ''s' → logprob: -8.47751235961914
    10. 'all' → logprob: -8.97751235961914

Token 758: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03255528584122658
    2. 'and' → logprob: -4.157555103302002
    3. '<|end|>' → logprob: -4.657555103302002
    4. ',' → logprob: -5.532555103302002
    5. ')' → logprob: -6.157555103302002
    6. 's' → logprob: -8.15755558013916
    7. '=' → logprob: -9.53255558013916
    8. ' =' → logprob: -9.78255558013916
    9. '<|end|>' → logprob: -9.90755558013916
    10. '(s' → logprob: -10.15755558013916

Token 759: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.007232589181512594
    2. ' end' → logprob: -5.257232666015625
    3. 'virtual' → logprob: -6.382232666015625
    4. '"' → logprob: -8.632232666015625
    5. 'for' → logprob: -10.382232666015625
    6. ' virtual' → logprob: -10.507232666015625
    7. '#' → logprob: -10.507232666015625
    8. ''end' → logprob: -10.882232666015625
    9. 'outside' → logprob: -12.007232666015625
    10. '   ' → logprob: -12.507232666015625

Token 760: ' connected' (ID: 12079)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7823090553283691
    2. 's' → logprob: -2.032309055328369
    3. ' and' → logprob: -2.282309055328369
    4. ' with' → logprob: -2.282309055328369
    5. '_nodes' → logprob: -3.032309055328369
    6. '.' → logprob: -3.282309055328369
    7. ' nodes' → logprob: -3.782309055328369
    8. '
' → logprob: -4.157309055328369
    9. ')' → logprob: -4.532309055328369
    10. ',
' → logprob: -4.657309055328369

Token 761: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5335138440132141
    2. 'to' → logprob: -0.9085138440132141
    3. '_to' → logprob: -6.033514022827148
    4. '[]' → logprob: -6.658514022827148
    5. '```' → logprob: -7.033514022827148
    6. 's' → logprob: -7.158514022827148
    7. '<|end|>' → logprob: -7.283514022827148
    8. '=' → logprob: -7.658514022827148
    9. '_nodes' → logprob: -7.783514022827148
    10. '   ' → logprob: -7.783514022827148

Token 762: ' circles' (ID: 45131)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.43314436078071594
    2. 'cir' → logprob: -1.0581443309783936
    3. ' all' → logprob: -5.683144569396973
    4. 'any' → logprob: -7.808144569396973
    5. 'the' → logprob: -8.433144569396973
    6. ' circles' → logprob: -8.933144569396973
    7. 'every' → logprob: -9.808144569396973
    8. 'each' → logprob: -10.058144569396973
    9. 'those' → logprob: -10.183144569396973
    10. 'no' → logprob: -10.558144569396973

Token 763: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.6962102055549622
    2. 'that' → logprob: -0.6962102055549622
    3. '   ' → logprob: -7.0712103843688965
    4. 'inside' → logprob: -7.9462103843688965
    5. '_that' → logprob: -8.321209907531738
    6. '           ' → logprob: -8.446209907531738
    7. 'which' → logprob: -8.571209907531738
    8. ')' → logprob: -8.821209907531738
    9. '[i' → logprob: -8.946209907531738
    10. ' if' → logprob: -8.946209907531738

Token 764: ' contain' (ID: 10232)
  Prédit: 'contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contain' → logprob: -0.3771176040172577
    2. 'are' → logprob: -2.25211763381958
    3. 'touch' → logprob: -3.00211763381958
    4. 'point' → logprob: -3.37711763381958
    5. 'have' → logprob: -3.50211763381958
    6. 'do' → logprob: -3.87711763381958
    7. 'the' → logprob: -4.12711763381958
    8. 'circle' → logprob: -4.12711763381958
    9. 'en' → logprob: -5.00211763381958
    10. ' contain' → logprob: -5.00211763381958

Token 765: ' start' (ID: 1604)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6340685486793518
    2. 'start' → logprob: -1.259068489074707
    3. 'xs' → logprob: -2.384068489074707
    4. 'points' → logprob: -3.509068489074707
    5. 's' → logprob: -4.634068489074707
    6. '0' → logprob: -4.634068489074707
    7. 'a' → logprob: -4.884068489074707
    8. 'point' → logprob: -5.009068489074707
    9. '(xs' → logprob: -5.134068489074707
    10. '#' → logprob: -5.259068489074707

Token 766: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.06854655593633652
    2. 'or' → logprob: -3.3185465335845947
    3. ')' → logprob: -3.6935465335845947
    4. ' and' → logprob: -6.193546772003174
    5. '<|end|>' → logprob: -6.693546772003174
    6. 'and' → logprob: -7.443546772003174
    7. ',' → logprob: -7.443546772003174
    8. '),' → logprob: -8.068546295166016
    9. '	or' → logprob: -9.443546295166016
    10. ' )' → logprob: -9.443546295166016

Token 767: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.008778125047683716
    2. ' end' → logprob: -4.758778095245361
    3. '#' → logprob: -8.75877857208252
    4. 'point' → logprob: -13.38377857208252
    5. ' #' → logprob: -13.63377857208252
    6. '
' → logprob: -14.63377857208252
    7. '```' → logprob: -15.00877857208252
    8. 'start' → logprob: -15.13377857208252
    9. '1' → logprob: -15.25877857208252
    10. '##' → logprob: -15.63377857208252

Token 768: '.

' (ID: 364)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.35636892914772034
    2. ' if' → logprob: -2.4813690185546875
    3. ')' → logprob: -2.7313690185546875
    4. ' points' → logprob: -3.3563690185546875
    5. ' point' → logprob: -3.6063690185546875
    6. ' and' → logprob: -3.6063690185546875
    7. 'points' → logprob: -4.3563690185546875
    8. '_points' → logprob: -4.3563690185546875
    9. ',' → logprob: -4.4813690185546875
    10. '       ' → logprob: -5.1063690185546875

Token 769: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21437464654445648
    2. ' ' → logprob: -3.089374542236328
    3. '   ' → logprob: -3.214374542236328
    4. '        
' → logprob: -3.339374542236328
    5. '<|end|>' → logprob: -3.964374542236328
    6. ' 
' → logprob: -4.339374542236328
    7. '    
' → logprob: -4.714374542236328
    8. '    ' → logprob: -5.339374542236328
    9. '        ' → logprob: -5.464374542236328
    10. '
' → logprob: -5.464374542236328

Token 770: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3681280016899109
    2. ' if' → logprob: -1.7431280612945557
    3. 'if' → logprob: -2.7431280612945557
    4. '#' (adapté à ' #') → logprob: -2.9931280612945557
    5. 'start' → logprob: -4.993127822875977
    6. ' #' → logprob: -5.243127822875977
    7. ' start' → logprob: -6.118127822875977
    8. '        
' → logprob: -6.243127822875977
    9. 'graph' → logprob: -7.993127822875977
    10. '        ' → logprob: -8.118127822875977

Token 771: ' Actually' (ID: 50557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35914796590805054
    2. '#' → logprob: -1.4841480255126953
    3. 'start' → logprob: -3.3591480255126953
    4. 'for' → logprob: -4.234148025512695
    5. 'visited' → logprob: -4.484148025512695
    6. 'outside' → logprob: -5.359148025512695
    7. 'graph' → logprob: -5.609148025512695
    8. 'virtual' → logprob: -6.859148025512695
    9. 'all' → logprob: -6.859148025512695
    10. '   ' → logprob: -7.109148025512695

Token 772: ' from' (ID: 591)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18904165923595428
    2. 'if' → logprob: -1.9390416145324707
    3. '#' → logprob: -4.439041614532471
    4. '       ' → logprob: -5.314041614532471
    5. ',' → logprob: -5.439041614532471
    6. '
' → logprob: -6.064041614532471
    7. ' the' → logprob: -6.314041614532471
    8. ' continue' → logprob: -7.564041614532471
    9. ' for' → logprob: -7.939041614532471
    10. 'continue' → logprob: -8.064042091369629

Token 773: ' problem' (ID: 4792)
  Prédit: 'here'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'here' → logprob: -0.7386079430580139
    2. 'the' → logprob: -1.2386078834533691
    3. ' here' → logprob: -1.9886078834533691
    4. 'start' → logprob: -3.863607883453369
    5. 'previous' → logprob: -3.863607883453369
    6. 'len' → logprob: -4.988607883453369
    7. 'collections' → logprob: -4.988607883453369
    8. '#' → logprob: -5.113607883453369
    9. 'this' → logprob: -5.238607883453369
    10. 'comments' → logprob: -5.488607883453369

Token 774: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0804216861724854
    2. '#' → logprob: -1.7054216861724854
    3. ',' → logprob: -1.8304216861724854
    4. '...' → logprob: -3.0804216861724854
    5. '<|end|>' → logprob: -3.4554216861724854
    6. '<|end|>' → logprob: -3.4554216861724854
    7. 'continue' → logprob: -3.8304216861724854
    8. 'def' → logprob: -3.9554216861724854
    9. ' continues' → logprob: -4.205421447753906
    10. ' code' → logprob: -4.205421447753906

Token 775: ' Since' (ID: 12265)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1432344615459442
    2. 'pass' → logprob: -3.2682344913482666
    3. ' pass' → logprob: -3.5182344913482666
    4. ' #' → logprob: -3.8932344913482666
    5. '       ' → logprob: -4.0182342529296875
    6. ' if' → logprob: -4.2682342529296875
    7. 'if' → logprob: -5.2682342529296875
    8. 'continue' → logprob: -6.0182342529296875
    9. ' continue' → logprob: -6.3932342529296875
    10. 'start' → logprob: -6.3932342529296875

Token 776: ' rat' (ID: 8908)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.05953126400709152
    2. 'the' → logprob: -3.9345312118530273
    3. 'not' → logprob: -4.309531211853027
    4. ' start' → logprob: -4.309531211853027
    5. 'points' → logprob: -5.934531211853027
    6. 'point' → logprob: -6.309531211853027
    7. 'both' → logprob: -6.434531211853027
    8. ' not' → logprob: -6.559531211853027
    9. ' the' → logprob: -7.184531211853027
    10. 'rat' → logprob: -7.434531211853027

Token 777: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.8334293961524963
    2. ' and' → logprob: -0.9584293961524963
    3. ' or' → logprob: -2.5834293365478516
    4. 'or' → logprob: -3.3334293365478516
    5. ' is' → logprob: -4.083429336547852
    6. 'is' → logprob: -4.333429336547852
    7. ' can' → logprob: -4.458429336547852
    8. 'can' → logprob: -5.083429336547852
    9. ' may' → logprob: -5.083429336547852
    10. 'must' → logprob: -5.333429336547852

Token 778: ' fish' (ID: 13897)
  Prédit: 'fish'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fish' → logprob: -0.17975886166095734
    2. ' fish' → logprob: -1.804758906364441
    3. 'f' → logprob: -12.80475902557373
    4. 'the' → logprob: -13.55475902557373
    5. '   ' → logprob: -13.55475902557373
    6. 'Fish' → logprob: -13.67975902557373
    7. '鱼' → logprob: -13.80475902557373
    8. '魚' → logprob: -13.80475902557373
    9. ' ' → logprob: -13.92975902557373
    10. ' the' → logprob: -14.05475902557373

Token 779: ' not' (ID: 625)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.6637644171714783
    2. ' are' → logprob: -1.413764476776123
    3. 'can' → logprob: -2.413764476776123
    4. ' can' → logprob: -2.788764476776123
    5. 'start' → logprob: -3.163764476776123
    6. 'may' → logprob: -4.288764476776123
    7. ' may' → logprob: -4.413764476776123
    8. ' start' → logprob: -5.663764476776123
    9. 'might' → logprob: -5.913764476776123
    10. ' might' → logprob: -6.038764476776123

Token 780: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.0036193125415593386
    2. 'in' → logprob: -6.628619194030762
    3. ' inside' → logprob: -7.378619194030762
    4. 'always' → logprob: -7.503619194030762
    5. 'necessarily' → logprob: -8.128619194030762
    6. 'contained' → logprob: -8.378619194030762
    7. '_inside' → logprob: -8.503619194030762
    8. 'outside' → logprob: -9.378619194030762
    9. 'allowed' → logprob: -10.253619194030762
    10. 'only' → logprob: -10.253619194030762

Token 781: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.030663272365927696
    2. ' any' → logprob: -3.530663251876831
    3. 'cir' → logprob: -7.15566349029541
    4. 'a' → logprob: -9.40566349029541
    5. 'circle' → logprob: -10.65566349029541
    6. ' circles' → logprob: -11.03066349029541
    7. '_any' → logprob: -12.90566349029541
    8. 'the' → logprob: -13.28066349029541
    9. ' a' → logprob: -13.53066349029541
    10. ' circle' → logprob: -13.90566349029541

Token 782: ' circle' (ID: 22005)
  Prédit: 'circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'circle' → logprob: -0.18325591087341309
    2. ' circle' → logprob: -1.808255910873413
    3. 'cir' → logprob: -6.058256149291992
    4. 'wall' → logprob: -8.058256149291992
    5. '_circle' → logprob: -8.433256149291992
    6. '#' → logprob: -8.558256149291992
    7. ' circles' → logprob: -8.808256149291992
    8. ' wall' → logprob: -9.308256149291992
    9. ' of' → logprob: -9.933256149291992
    10. 'c' → logprob: -10.683256149291992

Token 783: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016579126939177513
    2. ':' → logprob: -5.0165791511535645
    3. '       ' → logprob: -5.0165791511535645
    4. ' and' → logprob: -7.0165791511535645
    5. ',
' → logprob: -7.2665791511535645
    6. ' if' → logprob: -7.7665791511535645
    7. ' or' → logprob: -7.7665791511535645
    8. ':
' → logprob: -8.391578674316406
    9. '.' → logprob: -8.641578674316406
    10. 'and' → logprob: -9.141578674316406

Token 784: ' start' (ID: 1604)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.016357390210032463
    2. '       ' → logprob: -5.016357421875
    3. 'if' → logprob: -5.641357421875
    4. 'continue' → logprob: -6.516357421875
    5. 'start' → logprob: -6.766357421875
    6. 'pass' → logprob: -7.016357421875
    7. 'we' → logprob: -7.266357421875
    8. 'the' → logprob: -7.516357421875
    9. 'print' → logprob: -8.016357421875
    10. 'they' → logprob: -8.641357421875

Token 785: '_c' (ID: 1303)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8866103887557983
    2. '_c' → logprob: -1.1366103887557983
    3. ' or' → logprob: -1.7616103887557983
    4. 'and' → logprob: -2.886610507965088
    5. '_nodes' → logprob: -4.386610507965088
    6. ')' → logprob: -4.511610507965088
    7. ',' → logprob: -5.386610507965088
    8. 'or' → logprob: -5.761610507965088
    9. ' =' → logprob: -7.011610507965088
    10. 'points' → logprob: -7.136610507965088

Token 786: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0005516022793017328
    2. '_' → logprob: -9.250551223754883
    3. 'irc' → logprob: -9.625551223754883
    4. '_ir' → logprob: -9.625551223754883
    5. '_c' → logprob: -9.875551223754883
    6. 'icles' → logprob: -10.000551223754883
    7. 's' → logprob: -10.625551223754883
    8. 'cir' → logprob: -10.750551223754883
    9. '__' → logprob: -11.125551223754883
    10. 'irl' → logprob: -11.250551223754883

Token 787: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.0019721693824976683
    2. 'les' → logprob: -6.251972198486328
    3. '```' → logprob: -11.251972198486328
    4. 'icles' → logprob: -11.501972198486328
    5. 'cle' → logprob: -12.501972198486328
    6. '``' → logprob: -12.626972198486328
    7. '   ' → logprob: -13.126972198486328
    8. '=' → logprob: -13.751972198486328
    9. 'cl' → logprob: -14.126972198486328
    10. 'le' → logprob: -14.251972198486328

Token 788: ' and' (ID: 326)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02288866601884365
    2. '=' → logprob: -4.272888660430908
    3. ' ==' → logprob: -5.147888660430908
    4. 'and' → logprob: -6.647888660430908
    5. ' =' → logprob: -7.147888660430908
    6. ' and' → logprob: -8.272889137268066
    7. '=[]' → logprob: -9.272889137268066
    8. ' or' → logprob: -9.397889137268066
    9. ')==' → logprob: -9.397889137268066
    10. ')' → logprob: -9.647889137268066

Token 789: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.04855784401297569
    2. 'not' → logprob: -3.548557758331299
    3. ' end' → logprob: -4.548557758331299
    4. ' not' → logprob: -5.048557758331299
    5. 'len' → logprob: -6.423557758331299
    6. '
' → logprob: -13.423558235168457
    7. ' len' → logprob: -13.423558235168457
    8. 'and' → logprob: -13.548558235168457
    9. '[]' → logprob: -14.298558235168457
    10. 'or' → logprob: -14.548558235168457

Token 790: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0014826052356511354
    2. '_points' → logprob: -8.126482963562012
    3. 's' → logprob: -8.626482963562012
    4. ' =' → logprob: -8.626482963562012
    5. '_s' → logprob: -8.876482963562012
    6. '_are' → logprob: -9.251482963562012
    7. '=[]' → logprob: -9.251482963562012
    8. '_cont' → logprob: -9.876482963562012
    9. 'if' → logprob: -10.126482963562012
    10. '_nodes' → logprob: -10.251482963562012

Token 791: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0019418458687141538
    2. '```' → logprob: -7.751941680908203
    3. 'ircle' → logprob: -8.001941680908203
    4. 'irc' → logprob: -8.126941680908203
    5. '``' → logprob: -8.751941680908203
    6. 'icles' → logprob: -8.876941680908203
    7. 'cles' → logprob: -10.001941680908203
    8. 'ircular' → logprob: -10.001941680908203
    9. '_' → logprob: -10.126941680908203
    10. '#' → logprob: -10.376941680908203

Token 792: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -8.518582762917504e-05
    2. 'icles' → logprob: -10.00008487701416
    3. 'les' → logprob: -10.62508487701416
    4. '```' → logprob: -12.00008487701416
    5. 'ir' → logprob: -13.37508487701416
    6. '``' → logprob: -13.50008487701416
    7. 'cle' → logprob: -13.50008487701416
    8. 'r' → logprob: -14.00008487701416
    9. 'cl' → logprob: -14.25008487701416
    10. 'des' → logprob: -14.37508487701416

Token 793: ' will' (ID: 738)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.26978740096092224
    2. ' ==' → logprob: -1.6447874307632446
    3. '=' → logprob: -3.769787311553955
    4. ' =' → logprob: -4.269787311553955
    5. ':' → logprob: -5.894787311553955
    6. '=[]' → logprob: -6.519787311553955
    7. ')' → logprob: -7.019787311553955
    8. ')==' → logprob: -8.019787788391113
    9. ']==' → logprob: -8.394787788391113
    10. '<|end|>' → logprob: -8.769787788391113

Token 794: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.5432416200637817
    2. 'be' → logprob: -1.0432416200637817
    3. '=' → logprob: -3.793241500854492
    4. 'remain' → logprob: -4.168241500854492
    5. '==' → logprob: -4.543241500854492
    6. '=[]' → logprob: -5.418241500854492
    7. 'empty' → logprob: -5.543241500854492
    8. ' remain' → logprob: -5.793241500854492
    9. 'not' → logprob: -6.543241500854492
    10. ' =' → logprob: -6.543241500854492

Token 795: ' empty' (ID: 8213)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0002084277366520837
    2. 'empty' → logprob: -8.750208854675293
    3. '[]
' → logprob: -10.000208854675293
    4. ' []' → logprob: -12.750208854675293
    5. '[]}' → logprob: -13.875208854675293
    6. '[' → logprob: -15.000208854675293
    7. '[]

' → logprob: -16.000207901000977
    8. '[]>' → logprob: -16.375207901000977
    9. '[],' → logprob: -16.500207901000977
    10. '=[]' → logprob: -17.000207901000977

Token 796: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5074973702430725
    2. '<|end|>' → logprob: -1.6324973106384277
    3. ',' → logprob: -2.0074973106384277
    4. '
' → logprob: -3.3824973106384277
    5. '.' → logprob: -4.007497310638428
    6. '        
' → logprob: -5.007497310638428
    7. '<|end|>' → logprob: -5.632497310638428
    8. ' if' → logprob: -5.757497310638428
    9. ',
' → logprob: -7.132497310638428
    10. ')' → logprob: -8.257497787475586

Token 797: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00294465571641922
    2. '<|end|>' → logprob: -6.502944469451904
    3. 'if' → logprob: -7.502944469451904
    4. '        
' → logprob: -7.877944469451904
    5. ' if' → logprob: -7.877944469451904
    6. '   ' → logprob: -10.377944946289062
    7. '#' → logprob: -11.002944946289062
    8. '<|end|>' → logprob: -11.127944946289062
    9. '
' → logprob: -11.377944946289062
    10. ',' → logprob: -11.377944946289062

Token 798: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017608139663934708
    2. '#' (adapté à ' #') → logprob: -4.767608165740967
    3. 'if' → logprob: -5.767608165740967
    4. '        
' → logprob: -6.517608165740967
    5. '<|end|>' → logprob: -6.642608165740967
    6. 'dist' → logprob: -7.267608165740967
    7. 'continue' → logprob: -7.267608165740967
    8. 'start' → logprob: -7.642608165740967
    9. 'distance' → logprob: -7.892608165740967
    10. ' if' → logprob: -8.267607688903809

Token 799: ' To' (ID: 2514)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8094255328178406
    2. 'if' → logprob: -1.3094255924224854
    3. '       ' → logprob: -1.4344255924224854
    4. 'start' → logprob: -3.1844255924224854
    5. 'visited' → logprob: -7.059425354003906
    6. 'distance' → logprob: -7.184425354003906
    7. 'outside' → logprob: -7.184425354003906
    8. 'dist' → logprob: -7.184425354003906
    9. '        
' → logprob: -7.309425354003906
    10. ' if' → logprob: -7.934425354003906

Token 800: ' handle' (ID: 5318)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7334487438201904
    2. '#' → logprob: -0.9834487438201904
    3. 'connect' → logprob: -3.1084487438201904
    4. 'find' → logprob: -3.6084487438201904
    5. 'for' → logprob: -3.8584487438201904
    6. 'pass' → logprob: -4.2334489822387695
    7. 'def' → logprob: -4.2334489822387695
    8. 'handle' → logprob: -4.7334489822387695
    9. 'solve' → logprob: -5.7334489822387695
    10. 'det' → logprob: -6.3584489822387695

Token 801: ' this' (ID: 495)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.3553191125392914
    2. 'the' → logprob: -2.480319023132324
    3. 'cases' → logprob: -2.480319023132324
    4. 'cir' → logprob: -2.855319023132324
    5. 'that' → logprob: -2.980319023132324
    6. 'points' → logprob: -5.480319023132324
    7. 'outside' → logprob: -5.480319023132324
    8. 'them' → logprob: -5.855319023132324
    9. 'start' → logprob: -6.355319023132324
    10. 'walls' → logprob: -6.480319023132324

Token 802: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2933270037174225
    2. '#' → logprob: -2.1683270931243896
    3. ',' → logprob: -2.7933270931243896
    4. ' if' → logprob: -3.1683270931243896
    5. 'if' → logprob: -3.9183270931243896
    6. 'continue' → logprob: -5.1683268547058105
    7. ':' → logprob: -5.5433268547058105
    8. 'outside' → logprob: -6.7933268547058105
    9. 'def' → logprob: -7.0433268547058105
    10. '   ' → logprob: -7.2933268547058105

Token 803: ' define' (ID: 13174)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.35741645097732544
    2. 'outside' → logprob: -1.4824163913726807
    3. 'outer' → logprob: -3.8574163913726807
    4. 'start' → logprob: -3.9824163913726807
    5. ' #' → logprob: -4.73241662979126
    6. 'visited' → logprob: -4.98241662979126
    7. 'all' → logprob: -5.23241662979126
    8. ' outside' → logprob: -5.85741662979126
    9. '   ' → logprob: -6.60741662979126
    10. 'def' → logprob: -6.98241662979126

Token 804: ' "' (ID: 392)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.04713189974427223
    2. 'outer' → logprob: -3.5471320152282715
    3. 'def' → logprob: -4.7971320152282715
    4. 'start' → logprob: -5.4221320152282715
    5. 'inside' → logprob: -6.2971320152282715
    6. 'virtual' → logprob: -7.5471320152282715
    7. ' outside' → logprob: -7.7971320152282715
    8. 'visited' → logprob: -8.297131538391113
    9. 'walls' → logprob: -8.547131538391113
    10. '#' → logprob: -8.547131538391113

Token 805: 'outside' (ID: 141623)
  Prédit: 'outside'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.01796180196106434
    2. 'outer' → logprob: -4.8929619789123535
    3. 'virtual' → logprob: -5.5179619789123535
    4. 'start' → logprob: -6.0179619789123535
    5. 'def' → logprob: -6.3929619789123535
    6. 'inside' → logprob: -7.3929619789123535
    7. 'outs' → logprob: -7.5179619789123535
    8. ' outside' → logprob: -8.142961502075195
    9. 'boundary' → logprob: -9.017961502075195
    10. 'visited' → logprob: -9.017961502075195

Token 806: '"' (ID: 1)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.7354206442832947
    2. '_nodes' → logprob: -0.8604206442832947
    3. '"' → logprob: -2.3604207038879395
    4. '_set' → logprob: -6.7354207038879395
    5. '_indices' → logprob: -7.4854207038879395
    6. '_points' → logprob: -7.7354207038879395
    7. '_sets' → logprob: -7.9854207038879395
    8. '_circle' → logprob: -9.235420227050781
    9. 'cir' → logprob: -9.360420227050781
    10. '_out' → logprob: -9.360420227050781

Token 807: ' as' (ID: 472)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.17435620725154877
    2. '_c' → logprob: -1.92435622215271
    3. '_sets' → logprob: -5.174355983734131
    4. '_start' → logprob: -5.549355983734131
    5. '_out' → logprob: -5.924355983734131
    6. ' =' → logprob: -7.674355983734131
    7. '_set' → logprob: -8.049356460571289
    8. '_regions' → logprob: -8.299356460571289
    9. 'nodes' → logprob: -8.674356460571289
    10. '_neighbors' → logprob: -9.174356460571289

Token 808: ' node' (ID: 4596)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.31940722465515137
    2. '-' → logprob: -1.5694072246551514
    3. '[]' → logprob: -3.9444072246551514
    4. '[-' → logprob: -4.0694074630737305
    5. 'sets' → logprob: -5.1944074630737305
    6. '[n' → logprob: -5.3194074630737305
    7. '{-' → logprob: -5.4444074630737305
    8. 'n' → logprob: -5.5694074630737305
    9. 'start' → logprob: -5.6944074630737305
    10. 'a' → logprob: -5.6944074630737305

Token 809: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.45178622007369995
    2. 's' → logprob: -1.7017862796783447
    3. ' n' → logprob: -1.9517862796783447
    4. '0' → logprob: -4.326786041259766
    5. '=n' → logprob: -5.076786041259766
    6. '(n' → logprob: -5.326786041259766
    7. '[n' → logprob: -5.451786041259766
    8. ' =' → logprob: -5.451786041259766
    9. 'indices' → logprob: -6.326786041259766
    10. '=' → logprob: -7.201786041259766

Token 810: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.25000286102295
    3. '2' → logprob: -15.25000286102295
    4. '=' → logprob: -15.25000286102295
    5. 'outside' → logprob: -16.125003814697266
    6. '-' → logprob: -16.375003814697266
    7. '   ' → logprob: -16.500003814697266
    8. ' -' → logprob: -17.000003814697266
    9. '`' → logprob: -17.250003814697266
    10. 's' → logprob: -17.500003814697266

Token 811: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 812: ' Cir' (ID: 39325)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1058560162782669
    2. '   ' → logprob: -3.230855941772461
    3. '<|end|>' → logprob: -3.605855941772461
    4. '
' → logprob: -4.355855941772461
    5. '#' → logprob: -4.605855941772461
    6. ')' → logprob: -5.980855941772461
    7. '        
' → logprob: -6.230855941772461
    8. ',' → logprob: -6.730855941772461
    9. '.' → logprob: -6.855855941772461
    10. '<|end|>' → logprob: -6.980855941772461

Token 813: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.027677295729517937
    2. 'les' → logprob: -4.527677059173584
    3. '#' → logprob: -5.152677059173584
    4. 'le' → logprob: -5.652677059173584
    5. 't' → logprob: -6.027677059173584
    6. 'cle' → logprob: -6.027677059173584
    7. 'icles' → logprob: -6.527677059173584
    8. '```' → logprob: -7.902677059173584
    9. 'k' → logprob: -9.527677536010742
    10. 'c' → logprob: -10.027677536010742

Token 814: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.7527291178703308
    2. 'that' → logprob: -1.0027291774749756
    3. '_touch' → logprob: -3.2527291774749756
    4. 'touch' → logprob: -3.3777291774749756
    5. 'outside' → logprob: -3.3777291774749756
    6. 'connected' → logprob: -4.5027289390563965
    7. 't' → logprob: -4.8777289390563965
    8. ' touching' → logprob: -5.1277289390563965
    9. 'def' → logprob: -5.2527289390563965
    10. '_that' → logprob: -5.3777289390563965

Token 815: ' separate' (ID: 13574)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.8842401504516602
    2. 'se' → logprob: -1.6342401504516602
    3. 'touch' → logprob: -1.7592401504516602
    4. 'contain' → logprob: -2.50924015045166
    5. 'do' → logprob: -3.50924015045166
    6. 'inter' → logprob: -3.63424015045166
    7. ' are' → logprob: -3.88424015045166
    8. 'have' → logprob: -4.13424015045166
    9. ' separate' → logprob: -4.88424015045166
    10. 'en' → logprob: -4.88424015045166

Token 816: ' start' (ID: 1604)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5776462554931641
    2. 'start' → logprob: -1.952646255493164
    3. '-' → logprob: -2.202646255493164
    4. '#' → logprob: -2.327646255493164
    5. ' the' → logprob: -2.702646255493164
    6. 'them' → logprob: -5.827646255493164
    7. 'from' → logprob: -5.827646255493164
    8. ' start' → logprob: -6.077646255493164
    9. '<|end|>' → logprob: -6.202646255493164
    10. 'both' → logprob: -6.577646255493164

Token 817: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7300978302955627
    2. 'and' → logprob: -0.7300978302955627
    3. ' or' → logprob: -3.980097770690918
    4. 'from' → logprob: -4.355097770690918
    5. ' from' → logprob: -5.980097770690918
    6. 'or' → logprob: -6.355097770690918
    7. ',' → logprob: -8.355097770690918
    8. '#' → logprob: -9.730097770690918
    9. '-' → logprob: -10.355097770690918
    10. '   ' → logprob: -10.605097770690918

Token 818: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.056759025901556015
    2. 'outside' → logprob: -2.9317591190338135
    3. ' end' → logprob: -6.681758880615234
    4. ' outside' → logprob: -8.181758880615234
    5. '"' → logprob: -8.931758880615234
    6. '-' → logprob: -9.556758880615234
    7. ''end' → logprob: -9.931758880615234
    8. '1' → logprob: -10.681758880615234
    9. '0' → logprob: -11.181758880615234
    10. 'out' → logprob: -11.181758880615234

Token 819: ' will' (ID: 738)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.6101801991462708
    2. ' that' → logprob: -2.110180139541626
    3. ',' → logprob: -2.235180139541626
    4. '#' → logprob: -2.735180139541626
    5. ' can' → logprob: -3.110180139541626
    6. 'are' → logprob: -3.860180139541626
    7. 'that' → logprob: -4.110180377960205
    8. ' and' → logprob: -4.235180377960205
    9. '.' → logprob: -4.610180377960205
    10. 'and' → logprob: -4.860180377960205

Token 820: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.965487003326416
    2. 'have' → logprob: -1.590487003326416
    3. 'be' → logprob: -1.965487003326416
    4. ' have' → logprob: -2.465487003326416
    5. ' separate' → logprob: -3.590487003326416
    6. 'touch' → logprob: -3.590487003326416
    7. ' intersect' → logprob: -3.715487003326416
    8. ' lie' → logprob: -3.715487003326416
    9. 'inter' → logprob: -3.840487003326416
    10. 'not' → logprob: -4.840487003326416

Token 821: ' those' (ID: 2617)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.7076438069343567
    2. 'those' → logprob: -0.9576438069343567
    3. 'adj' → logprob: -3.707643747329712
    4. 'the' → logprob: -3.957643747329712
    5. 't' → logprob: -4.332643985748291
    6. 'on' → logprob: -4.707643985748291
    7. 'cir' → logprob: -4.832643985748291
    8. ' connected' → logprob: -4.832643985748291
    9. 'cross' → logprob: -5.332643985748291
    10. ' those' → logprob: -5.457643985748291

Token 822: ' "' (ID: 392)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.4993268847465515
    2. ' that' → logprob: -1.1243269443511963
    3. 'inside' → logprob: -4.249326705932617
    4. 'connected' → logprob: -4.374326705932617
    5. '#' → logprob: -4.624326705932617
    6. 'with' → logprob: -5.124326705932617
    7. 't' → logprob: -5.624326705932617
    8. 'for' → logprob: -5.874326705932617
    9. 'which' → logprob: -5.999326705932617
    10. 'touch' → logprob: -6.374326705932617

Token 823: 'blocking' (ID: 143731)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.26148977875709534
    2. ' that' → logprob: -2.5114898681640625
    3. 'which' → logprob: -3.1364898681640625
    4. 't' → logprob: -3.2614898681640625
    5. 'i' → logprob: -3.8864898681640625
    6. 'whose' → logprob: -4.2614898681640625
    7. 'with' → logprob: -5.3864898681640625
    8. ' whose' → logprob: -5.6364898681640625
    9. 'on' → logprob: -5.7614898681640625
    10. 'for' → logprob: -5.8864898681640625

Token 824: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2630411982536316
    2. ' the' → logprob: -2.3880412578582764
    3. 'the' → logprob: -2.7630412578582764
    4. ' lines' → logprob: -4.138041019439697
    5. ' them' → logprob: -4.263041019439697
    6. ' any' → logprob: -5.388041019439697
    7. ' all' → logprob: -5.513041019439697
    8. 'them' → logprob: -5.638041019439697
    9. ' "' → logprob: -6.013041019439697
    10. 'points' → logprob: -6.138041019439697

Token 825: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0429234504699707
    2. ' the' → logprob: -1.7929234504699707
    3. 'points' → logprob: -2.1679234504699707
    4. '<|end|>' → logprob: -2.1679234504699707
    5. ' points' → logprob: -3.2929234504699707
    6. 'spaces' → logprob: -3.6679234504699707
    7. ' edges' → logprob: -3.7929234504699707
    8. 'edges' → logprob: -4.042923450469971
    9. ' nodes' → logprob: -4.292923450469971
    10. 'nodes' → logprob: -4.542923450469971

Token 826: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.08590720593929291
    2. 'line' → logprob: -3.335907220840454
    3. ' path' → logprob: -3.960907220840454
    4. ' line' → logprob: -4.960906982421875
    5. 'space' → logprob: -5.710906982421875
    6. 'pass' → logprob: -5.835906982421875
    7. ' rat' → logprob: -6.210906982421875
    8. 'rat' → logprob: -6.210906982421875
    9. 'direct' → logprob: -6.460906982421875
    10. 'way' → logprob: -6.585906982421875

Token 827: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5772966742515564
    2. '<|end|>' → logprob: -1.0772967338562012
    3. '
' → logprob: -2.952296733856201
    4. '   ' → logprob: -4.452296733856201
    5. '<|end|>' → logprob: -4.702296733856201
    6. '.' → logprob: -4.702296733856201
    7. ',' → logprob: -4.952296733856201
    8. ')' → logprob: -5.952296733856201
    9. '        
' → logprob: -6.577296733856201
    10. '#' → logprob: -7.327296733856201

Token 828: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014649372547864914
    2. '#' → logprob: -5.014649391174316
    3. '<|end|>' → logprob: -5.514649391174316
    4. '        
' → logprob: -6.139649391174316
    5. '
' → logprob: -7.139649391174316
    6. '        ' → logprob: -8.014649391174316
    7. '   ' → logprob: -8.764649391174316
    8. '<|end|>' → logprob: -9.889649391174316
    9. 'def' → logprob: -10.014649391174316
    10. '...' → logprob: -10.264649391174316

Token 829: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.646014392375946
    2. '       ' → logprob: -0.771014392375946
    3. '        
' → logprob: -6.021014213562012
    4. 'outside' → logprob: -6.146014213562012
    5. 'def' → logprob: -6.271014213562012
    6. ' #' → logprob: -6.521014213562012
    7. 'graph' → logprob: -7.146014213562012
    8. 'import' → logprob: -7.396014213562012
    9. '   ' → logprob: -7.646014213562012
    10. 'dist' → logprob: -7.896014213562012

Token 830: ' So' (ID: 2632)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.34846168756484985
    2. '#' → logprob: -1.348461627960205
    3. 'outer' → logprob: -4.848461627960205
    4. '       ' → logprob: -5.348461627960205
    5. 'visited' → logprob: -5.348461627960205
    6. '   ' → logprob: -5.348461627960205
    7. 'inside' → logprob: -6.223461627960205
    8. 'graph' → logprob: -6.223461627960205
    9. 'def' → logprob: -6.598461627960205
    10. 'out' → logprob: -6.723461627960205

Token 831: ' from' (ID: 591)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.36486896872520447
    2. '#' → logprob: -1.2398689985275269
    3. 'visited' → logprob: -4.989869117736816
    4. 'def' → logprob: -5.364869117736816
    5. 'outer' → logprob: -6.489869117736816
    6. ' outside' → logprob: -6.864869117736816
    7. 'inside' → logprob: -7.614869117736816
    8. 'for' → logprob: -7.614869117736816
    9. ' #' → logprob: -8.614869117736816
    10. 'pass' → logprob: -8.864869117736816

Token 832: ' the' (ID: 290)
  Prédit: 'here'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'here' → logprob: -1.1532580852508545
    2. 'outside' → logprob: -1.6532580852508545
    3. 'the' → logprob: -1.7782580852508545
    4. '-' → logprob: -2.0282580852508545
    5. 'collections' → logprob: -2.6532580852508545
    6. ' here' → logprob: -2.9032580852508545
    7. 'cir' → logprob: -3.5282580852508545
    8. 'def' → logprob: -4.778258323669434
    9. 'start' → logprob: -5.278258323669434
    10. 'previous' → logprob: -5.778258323669434

Token 833: ' problem' (ID: 4792)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'outside' → logprob: -1.4499015808105469
    2. 'code' → logprob: -1.5749015808105469
    3. 'point' → logprob: -2.324901580810547
    4. '#' → logprob: -2.824901580810547
    5. 'previous' → logprob: -2.824901580810547
    6. 'comments' → logprob: -3.074901580810547
    7. 'problem' → logprob: -3.199901580810547
    8. 'user' → logprob: -3.449901580810547
    9. 'comment' → logprob: -3.699901580810547
    10. 'current' → logprob: -3.949901580810547

Token 834: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3460945188999176
    2. ':' → logprob: -1.8460944890975952
    3. '#' → logprob: -2.4710946083068848
    4. ''s' → logprob: -4.471094608306885
    5. 'def' → logprob: -4.846094608306885
    6. '...' → logprob: -5.096094608306885
    7. '.' → logprob: -5.096094608306885
    8. '       ' → logprob: -5.596094608306885
    9. '   ' → logprob: -6.221094608306885
    10. ' context' → logprob: -6.471094608306885

Token 835: ' walls' (ID: 20562)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.020650383085012436
    2. 'pass' → logprob: -4.770650386810303
    3. 'outside' → logprob: -5.020650386810303
    4. 'continue' → logprob: -6.395650386810303
    5. 'we' → logprob: -7.270650386810303
    6. 'def' → logprob: -7.520650386810303
    7. 'import' → logprob: -7.770650386810303
    8. 'print' → logprob: -7.895650386810303
    9. 'the' → logprob: -8.020649909973145
    10. '   ' → logprob: -8.645649909973145

Token 836: ' do' (ID: 621)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5475980639457703
    2. '<|end|>' → logprob: -1.547598123550415
    3. ',' → logprob: -2.672598123550415
    4. ')' → logprob: -3.047598123550415
    5. '#' → logprob: -4.297597885131836
    6. '.' → logprob: -4.297597885131836
    7. ':' → logprob: -4.547597885131836
    8. '   ' → logprob: -4.672597885131836
    9. ' that' → logprob: -4.797597885131836
    10. ' continue' → logprob: -5.047597885131836

Token 837: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.31355011463165283
    2. 'not' → logprob: -1.3135501146316528
    3. 'n't' → logprob: -8.938549995422363
    4. '_not' → logprob: -9.063549995422363
    5. '```' → logprob: -10.938549995422363
    6. 'exist' → logprob: -11.313549995422363
    7. ' exist' → logprob: -12.813549995422363
    8. '	not' → logprob: -12.938549995422363
    9. ' intersect' → logprob: -13.938549995422363
    10. 'cut' → logprob: -13.938549995422363

Token 838: ' touch' (ID: 7381)
  Prédit: 'allow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allow' → logprob: -0.7673593759536743
    2. ' overlap' → logprob: -1.6423593759536743
    3. ' allow' → logprob: -2.3923592567443848
    4. 'exist' → logprob: -3.8923592567443848
    5. ' intersect' → logprob: -3.8923592567443848
    6. 'inter' → logprob: -3.8923592567443848
    7. ' separate' → logprob: -4.017359256744385
    8. ' lie' → logprob: -4.017359256744385
    9. ' exist' → logprob: -4.267359256744385
    10. ' completely' → logprob: -4.267359256744385

Token 839: ' or' (ID: 503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 840: ' cross' (ID: 8088)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.22305504977703094
    2. ' overlap' → logprob: -1.9730550050735474
    3. 'cross' → logprob: -2.973055124282837
    4. 'contain' → logprob: -5.848054885864258
    5. 'inter' → logprob: -6.223054885864258
    6. ' cross' → logprob: -6.348054885864258
    7. ' intersect' → logprob: -6.598054885864258
    8. 'block' → logprob: -8.473054885864258
    9. 'connect' → logprob: -8.473054885864258
    10. 'cover' → logprob: -8.598054885864258

Token 841: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 842: ' built' (ID: 8113)
  Prédit: ' they'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' they' → logprob: -1.7684777975082397
    2. ' circles' → logprob: -1.8934777975082397
    3. 'r' → logprob: -2.2684779167175293
    4. ' the' → logprob: -2.5184779167175293
    5. 'they' → logprob: -2.6434779167175293
    6. ' not' → logprob: -2.6434779167175293
    7. ' any' → logprob: -2.8934779167175293
    8. 'cir' → logprob: -2.8934779167175293
    9. ' all' → logprob: -3.5184779167175293
    10. 'dist' → logprob: -3.8934779167175293

Token 843: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 844: ' So' (ID: 2632)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 845: ' M' (ID: 391)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9958421587944031
    2. ' the' → logprob: -2.370842218399048
    3. 'pass' → logprob: -2.370842218399048
    4. 'continue' → logprob: -2.620842218399048
    5. ' for' → logprob: -2.745842218399048
    6. '   ' → logprob: -2.995842218399048
    7. 'the' → logprob: -2.995842218399048
    8. ' continue' → logprob: -3.245842218399048
    9. 'for' → logprob: -3.245842218399048
    10. 'def' → logprob: -4.245841979980469

Token 846: 'aki' (ID: 7132)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.820227324962616
    2. 'aybe' → logprob: -1.6952273845672607
    3. '#' → logprob: -2.3202273845672607
    4. 'ust' → logprob: -2.3202273845672607
    5. 'for' → logprob: -3.4452273845672607
    6. ' for' → logprob: -4.195227146148682
    7. '<|end|>' → logprob: -4.195227146148682
    8. 'issing' → logprob: -4.570227146148682
    9. 'ultiple' → logprob: -4.695227146148682
    10. '<|end|>' → logprob: -4.695227146148682

Token 847: ' can' (ID: 665)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1075401306152344
    2. 'e' → logprob: -1.8575401306152344
    3. ',' → logprob: -2.2325401306152344
    4. '<|end|>' → logprob: -2.4825401306152344
    5. 'ng' → logprob: -3.6075401306152344
    6. 'def' → logprob: -3.8575401306152344
    7. 'o' → logprob: -3.9825401306152344
    8. '<|end|>' → logprob: -4.107540130615234
    9. 'nd' → logprob: -4.357540130615234
    10. ' must' → logprob: -4.357540130615234

Token 848: ' place' (ID: 2475)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.690941572189331
    2. 'pass' → logprob: -1.315941572189331
    3. 'move' → logprob: -3.190941572189331
    4. ' pass' → logprob: -3.565941572189331
    5. 'cross' → logprob: -3.690941572189331
    6. ' go' → logprob: -3.815941572189331
    7. 'continue' → logprob: -4.44094181060791
    8. ' cross' → logprob: -4.44094181060791
    9. 'try' → logprob: -4.69094181060791
    10. ' move' → logprob: -5.06594181060791

Token 849: ' walls' (ID: 20562)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -1.1872934103012085
    2. ' circles' → logprob: -1.4372934103012085
    3. ' walls' → logprob: -2.187293529510498
    4. ' them' → logprob: -2.562293529510498
    5. 'walls' → logprob: -2.562293529510498
    6. 'them' → logprob: -2.812293529510498
    7. 'the' → logprob: -3.062293529510498
    8. ' the' → logprob: -3.562293529510498
    9. 'points' → logprob: -4.937293529510498
    10. 'circle' → logprob: -5.062293529510498

Token 850: ' so' (ID: 813)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 851: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.43610209226608276
    2. ' that' → logprob: -1.0611021518707275
    3. 'they' → logprob: -5.686101913452148
    4. ' they' → logprob: -7.186101913452148
    5. 'the' → logprob: -7.436101913452148
    6. 'no' → logprob: -7.561101913452148
    7. ' no' → logprob: -7.561101913452148
    8. '   ' → logprob: -7.561101913452148
    9. ' all' → logprob: -8.936101913452148
    10. ' none' → logprob: -9.186101913452148

Token 852: ' minimal' (ID: 19957)
  Prédit: 'they'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'they' → logprob: -1.0776127576828003
    2. 'the' → logprob: -1.3276127576828003
    3. ' no' → logprob: -2.57761287689209
    4. ' they' → logprob: -2.70261287689209
    5. ' the' → logprob: -2.70261287689209
    6. 'there' → logprob: -2.82761287689209
    7. ' there' → logprob: -3.57761287689209
    8. 'no' → logprob: -3.70261287689209
    9. 'none' → logprob: -3.95261287689209
    10. 'cir' → logprob: -4.20261287689209

Token 853: ' climb' (ID: 27049)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.8920841217041016
    2. 'number' → logprob: -1.2670841217041016
    3. 'distance' → logprob: -2.2670841217041016
    4. 'cross' → logprob: -2.5170841217041016
    5. 'cuts' → logprob: -3.8920841217041016
    6. ' crossing' → logprob: -4.017084121704102
    7. 'walls' → logprob: -4.392084121704102
    8. ' crossings' → logprob: -4.517084121704102
    9. 'cut' → logprob: -4.892084121704102
    10. ' distance' → logprob: -5.017084121704102

Token 854: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0073442459106445
    2. '       ' → logprob: -2.0073442459106445
    3. ' is' → logprob: -2.5073442459106445
    4. 's' → logprob: -2.5073442459106445
    5. 'over' → logprob: -2.6323442459106445
    6. 'ing' → logprob: -2.8823442459106445
    7. 'through' → logprob: -3.0073442459106445
    8. '=' → logprob: -3.1323442459106445
    9. '               ' → logprob: -3.5073442459106445
    10. '   ' → logprob: -3.7573442459106445

Token 855: ' maximal' (ID: 65414)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.041996899992227554
    2. '1' → logprob: -3.666996955871582
    3. 'at' → logprob: -5.166996955871582
    4. ' ' → logprob: -6.041996955871582
    5. ' at' → logprob: -6.291996955871582
    6. 'more' → logprob: -6.666996955871582
    7. 'greater' → logprob: -7.041996955871582
    8. 'always' → logprob: -7.291996955871582
    9. '>' → logprob: -7.541996955871582
    10. 'r' → logprob: -7.916996955871582

Token 856: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 857: ' rat' (ID: 8908)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.210225224494934
    2. ' the' → logprob: -2.2102251052856445
    3. ' this' → logprob: -2.7102251052856445
    4. ' rat' → logprob: -2.8352251052856445
    5. 'some' → logprob: -2.8352251052856445
    6. ' all' → logprob: -3.0852251052856445
    7. 'this' → logprob: -3.2102251052856445
    8. ' some' → logprob: -3.5852251052856445
    9. 'rat' → logprob: -3.5852251052856445
    10. 'all' → logprob: -3.7102251052856445

Token 858: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08591464161872864
    2. '   ' → logprob: -3.4609146118164062
    3. '#' → logprob: -4.085914611816406
    4. '<|end|>' → logprob: -4.460914611816406
    5. '
' → logprob: -5.210914611816406
    6. ' if' → logprob: -5.585914611816406
    7. '        
' → logprob: -5.710914611816406
    8. '...' → logprob: -5.710914611816406
    9. ')' → logprob: -6.085914611816406
    10. 'if' → logprob: -7.085914611816406

Token 859: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47480207681655884
    2. '<|end|>' → logprob: -1.099802017211914
    3. '#' → logprob: -4.224802017211914
    4. '...' → logprob: -4.349802017211914
    5. '   ' → logprob: -5.224802017211914
    6. ')' → logprob: -5.599802017211914
    7. '<|end|>' → logprob: -6.099802017211914
    8. '        
' → logprob: -6.599802017211914
    9. '
' → logprob: -7.224802017211914
    10. '        ' → logprob: -7.474802017211914

Token 860: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5245804190635681
    2. '#' (adapté à ' #') → logprob: -1.024580478668213
    3. '<|end|>' → logprob: -3.649580478668213
    4. 'continue' → logprob: -5.524580478668213
    5. ' #' → logprob: -5.649580478668213
    6. '...' → logprob: -5.649580478668213
    7. 'if' → logprob: -6.024580478668213
    8. 'dist' → logprob: -6.149580478668213
    9. ' if' → logprob: -6.524580478668213
    10. '        
' → logprob: -6.774580478668213

Token 861: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.38984107971191406
    2. '       ' → logprob: -2.514841079711914
    3. 'dist' → logprob: -2.514841079711914
    4. 'start' → logprob: -3.014841079711914
    5. 'if' → logprob: -3.764841079711914
    6. 'continue' → logprob: -3.764841079711914
    7. 'graph' → logprob: -4.264841079711914
    8. 'pass' → logprob: -4.514841079711914
    9. 'distance' → logprob: -4.514841079711914
    10. '<|end|>' → logprob: -4.764841079711914

Token 862: ' minimal' (ID: 19957)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22782766819000244
    2. 'def' → logprob: -2.977827548980713
    3. 'if' → logprob: -3.102827548980713
    4. 'for' → logprob: -3.477827548980713
    5. 'outside' → logprob: -4.102827548980713
    6. 'graph' → logprob: -4.352827548980713
    7. 'continue' → logprob: -4.977827548980713
    8. ' if' → logprob: -5.227827548980713
    9. ' for' → logprob: -5.727827548980713
    10. 'dist' → logprob: -5.727827548980713

Token 863: ' walls' (ID: 20562)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.30118611454963684
    2. 'number' → logprob: -1.8011860847473145
    3. 'token' → logprob: -3.4261860847473145
    4. 'distance' → logprob: -3.6761860847473145
    5. 'cl' → logprob: -4.9261860847473145
    6. 'tokens' → logprob: -5.3011860847473145
    7. '_number' → logprob: -5.9261860847473145
    8. ' token' → logprob: -6.4261860847473145
    9. '_token' → logprob: -6.4261860847473145
    10. '#' → logprob: -6.4261860847473145

Token 864: ' rat' (ID: 8908)
  Prédit: '_cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cross' → logprob: -0.7851738929748535
    2. '_to' → logprob: -1.0351738929748535
    3. '_' → logprob: -2.6601738929748535
    4. ' to' → logprob: -3.4101738929748535
    5. '<|end|>' → logprob: -3.9101738929748535
    6. ' crossed' → logprob: -4.0351738929748535
    7. '_cl' → logprob: -4.2851738929748535
    8. ')' → logprob: -4.7851738929748535
    9. '_needed' → logprob: -4.9101738929748535
    10. ' =' → logprob: -5.5351738929748535

Token 865: ' need' (ID: 1309)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3277621567249298
    2. ' that' → logprob: -2.8277621269226074
    3. '_' → logprob: -3.0777621269226074
    4. '_cl' → logprob: -3.3277621269226074
    5. '_to' → logprob: -3.4527621269226074
    6. ' must' → logprob: -3.5777621269226074
    7. '_cross' → logprob: -3.8277621269226074
    8. ' crossed' → logprob: -4.577762126922607
    9. ' can' → logprob: -4.577762126922607
    10. '   ' → logprob: -5.327762126922607

Token 866: ' to' (ID: 316)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.3963739573955536
    2. ' to' → logprob: -1.396373987197876
    3. 'to' → logprob: -2.646373987197876
    4. '_cross' → logprob: -5.021373748779297
    5. '_' → logprob: -7.146373748779297
    6. '_cl' → logprob: -7.396373748779297
    7. '_have' → logprob: -8.021373748779297
    8. '   ' → logprob: -8.646373748779297
    9. 'cross' → logprob: -10.146373748779297
    10. ' =' → logprob: -10.146373748779297

Token 867: ' climb' (ID: 27049)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.04370589554309845
    2. 'cl' → logprob: -3.168705940246582
    3. ' cross' → logprob: -7.668705940246582
    4. 'pass' → logprob: -9.293705940246582
    5. '_cross' → logprob: -9.543705940246582
    6. ' climb' → logprob: -9.793705940246582
    7. '_cl' → logprob: -12.793705940246582
    8. 'c' → logprob: -12.918705940246582
    9. 'jump' → logprob: -13.043705940246582
    10. '```' → logprob: -13.043705940246582

Token 868: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5324621796607971
    2. ')' → logprob: -2.2824621200561523
    3. '       ' → logprob: -2.2824621200561523
    4. '<|end|>' → logprob: -2.5324621200561523
    5. '   ' → logprob: -2.7824621200561523
    6. '.' → logprob: -4.407462120056152
    7. ' =' → logprob: -4.532462120056152
    8. ' is' → logprob: -4.782462120056152
    9. '=' → logprob: -4.907462120056152
    10. '<|end|>' → logprob: -5.032462120056152

Token 869: ' shortest' (ID: 70564)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10931651294231415
    2. 'min' → logprob: -3.48431658744812
    3. ' ' → logprob: -3.73431658744812
    4. 'len' → logprob: -3.85931658744812
    5. 'max' → logprob: -4.734316349029541
    6. ' min' → logprob: -4.859316349029541
    7. 'r' → logprob: -5.734316349029541
    8. '1' → logprob: -6.484316349029541
    9. ' max' → logprob: -6.484316349029541
    10. ' len' → logprob: -6.484316349029541

Token 870: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.02013504132628441
    2. 'path' → logprob: -4.895134925842285
    3. '_distance' → logprob: -4.895134925842285
    4. ' path' → logprob: -6.145134925842285
    5. '_' → logprob: -6.645134925842285
    6. 'distance' → logprob: -7.270134925842285
    7. '_dist' → logprob: -7.645134925842285
    8. '_paths' → logprob: -8.770134925842285
    9. ' distance' → logprob: -9.895134925842285
    10. '_to' → logprob: -10.770134925842285

Token 871: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.288838505744934
    2. '       ' → logprob: -1.413838505744934
    3. ':' → logprob: -1.663838505744934
    4. ' =' → logprob: -1.913838505744934
    5. '<|end|>' → logprob: -3.4138383865356445
    6. ')' → logprob: -3.5388383865356445
    7. '=' → logprob: -4.2888383865356445
    8. '.' → logprob: -4.6638383865356445
    9. '#' → logprob: -4.6638383865356445
    10. ' if' → logprob: -4.7888383865356445

Token 872: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.5022578835487366
    2. 'graph' → logprob: -1.0022578239440918
    3. 'the' → logprob: -3.877257823944092
    4. ' the' → logprob: -5.127257823944092
    5. ' terms' → logprob: -7.627257823944092
    6. 'terms' → logprob: -8.25225830078125
    7. 'circle' → logprob: -9.12725830078125
    8. ' circles' → logprob: -9.50225830078125
    9. 'cir' → logprob: -9.62725830078125
    10. 'graphs' → logprob: -10.50225830078125

Token 873: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7955406904220581
    2. ' =' → logprob: -1.920540690422058
    3. ')' → logprob: -2.0455408096313477
    4. '<|end|>' → logprob: -2.6705408096313477
    5. ':' → logprob: -2.7955408096313477
    6. '.' → logprob: -3.2955408096313477
    7. '       ' → logprob: -3.7955408096313477
    8. ',' → logprob: -4.295540809631348
    9. '(n' → logprob: -4.670540809631348
    10. '=' → logprob: -4.670540809631348

Token 874: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.012675516307353973
    2. ' circles' → logprob: -4.3876752853393555
    3. 'c' → logprob: -9.262675285339355
    4. 'circle' → logprob: -10.387675285339355
    5. '```' → logprob: -11.262675285339355
    6. 'walls' → logprob: -11.887675285339355
    7. 'connected' → logprob: -12.387675285339355
    8. ' cir' → logprob: -12.637675285339355
    9. 'circ' → logprob: -13.637675285339355
    10. 'nodes' → logprob: -13.887675285339355

Token 875: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 876: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.027223221957683563
    2. 'any' → logprob: -4.277223110198975
    3. ' start' → logprob: -5.027223110198975
    4. 'the' → logprob: -5.777223110198975
    5. 'a' → logprob: -6.902223110198975
    6. ' any' → logprob: -7.777223110198975
    7. 'one' → logprob: -7.777223110198975
    8. 'set' → logprob: -7.902223110198975
    9. 'point' → logprob: -8.527223587036133
    10. ' the' → logprob: -8.902223587036133

Token 877: ' region' (ID: 7967)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.498507022857666
    2. '_c' → logprob: -1.498507022857666
    3. ' or' → logprob: -1.623507022857666
    4. '_' → logprob: -1.748507022857666
    5. '_nodes' → logprob: -2.373507022857666
    6. ')' → logprob: -3.748507022857666
    7. ',' → logprob: -4.373507022857666
    8. '_to' → logprob: -4.748507022857666
    9. ' and' → logprob: -5.373507022857666
    10. '   ' → logprob: -5.373507022857666

Token 878: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 879: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.5759440064430237
    2. 'end' → logprob: -0.8259440064430237
    3. ' the' → logprob: -13.700943946838379
    4. ' ' → logprob: -13.700943946838379
    5. '(end' → logprob: -14.325943946838379
    6. 'the' → logprob: -14.825943946838379
    7. '[end' → logprob: -15.075943946838379
    8. ''end' → logprob: -15.825943946838379
    9. '	end' → logprob: -16.075944900512695
    10. '=end' → logprob: -16.200944900512695

Token 880: ' region' (ID: 7967)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.7702606916427612
    2. '_nodes' → logprob: -1.3952606916427612
    3. '_' → logprob: -2.020260810852051
    4. ')' → logprob: -2.645260810852051
    5. 's' → logprob: -3.145260810852051
    6. '   ' → logprob: -4.520260810852051
    7. ':' → logprob: -4.895260810852051
    8. '_s' → logprob: -5.395260810852051
    9. '_regions' → logprob: -5.770260810852051
    10. '_points' → logprob: -6.145260810852051

Token 881: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08114258944988251
    2. '<|end|>' → logprob: -3.4561426639556885
    3. '
' → logprob: -3.8311426639556885
    4. '#' → logprob: -4.706142425537109
    5. '   ' → logprob: -5.206142425537109
    6. '        
' → logprob: -5.331142425537109
    7. ' if' → logprob: -6.581142425537109
    8. '<|end|>' → logprob: -6.956142425537109
    9. ',' → logprob: -7.456142425537109
    10. 'def' → logprob: -7.581142425537109

Token 882: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1027323305606842
    2. '<|end|>' → logprob: -2.6027324199676514
    3. '
' → logprob: -4.477732181549072
    4. '#' → logprob: -5.352732181549072
    5. '        
' → logprob: -5.727732181549072
    6. '   ' → logprob: -6.977732181549072
    7. '...' → logprob: -7.102732181549072
    8. 'if' → logprob: -7.477732181549072
    9. '<|end|>' → logprob: -7.602732181549072
    10. ' if' → logprob: -7.852732181549072

Token 883: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11496909707784653
    2. 'if' → logprob: -3.23996901512146
    3. 'dist' → logprob: -3.73996901512146
    4. '#' (adapté à ' #') → logprob: -3.98996901512146
    5. 'distance' → logprob: -4.489969253540039
    6. ' if' → logprob: -5.239969253540039
    7. '        
' → logprob: -5.864969253540039
    8. '<|end|>' → logprob: -6.239969253540039
    9. 'start' → logprob: -6.489969253540039
    10. ' distances' → logprob: -6.864969253540039

Token 884: ' Since' (ID: 12265)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9284207224845886
    2. '       ' → logprob: -1.1784207820892334
    3. 'dist' → logprob: -1.8034207820892334
    4. 'start' → logprob: -3.0534207820892334
    5. 'if' → logprob: -3.4284207820892334
    6. 'distance' → logprob: -3.9284207820892334
    7. 'graph' → logprob: -4.678420543670654
    8. 'visited' → logprob: -5.053420543670654
    9. 'outside' → logprob: -5.178420543670654
    10. '        
' → logprob: -6.303420543670654

Token 885: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.06645224243402481
    2. 'not' → logprob: -3.4414522647857666
    3. ' start' → logprob: -4.4414520263671875
    4. ' not' → logprob: -5.0664520263671875
    5. 'the' → logprob: -5.0664520263671875
    6. 'len' → logprob: -5.3164520263671875
    7. 'both' → logprob: -6.8164520263671875
    8. 'points' → logprob: -7.6914520263671875
    9. ' the' → logprob: -8.316452026367188
    10. 'point' → logprob: -8.691452026367188

Token 886: ' and' (ID: 326)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.14004646241664886
    2. ' or' → logprob: -3.2650463581085205
    3. '_' → logprob: -3.5150463581085205
    4. ' and' → logprob: -3.5150463581085205
    5. 'and' → logprob: -4.5150465965271
    6. '_points' → logprob: -5.1400465965271
    7. '<|end|>' → logprob: -5.6400465965271
    8. ',' → logprob: -6.1400465965271
    9. ')' → logprob: -6.2650465965271
    10. 'points' → logprob: -6.2650465965271

Token 887: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.2014172375202179
    2. ' end' → logprob: -1.7014172077178955
    3. '(end' → logprob: -13.201416969299316
    4. '#' → logprob: -15.201416969299316
    5. 'not' → logprob: -15.326416969299316
    6. ')' → logprob: -15.326416969299316
    7. 'outside' → logprob: -15.326416969299316
    8. '[end' → logprob: -15.576416969299316
    9. ''end' → logprob: -15.576416969299316
    10. ' not' → logprob: -15.951416969299316

Token 888: ' outside' (ID: 7539)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.3214104175567627
    2. ' points' → logprob: -2.0714104175567627
    3. '_c' → logprob: -2.6964104175567627
    4. 'points' → logprob: -3.4464104175567627
    5. '_points' → logprob: -3.8214104175567627
    6. 'are' → logprob: -5.196410179138184
    7. '<|end|>' → logprob: -5.321410179138184
    8. 's' → logprob: -5.946410179138184
    9. '_are' → logprob: -6.071410179138184
    10. ' not' → logprob: -6.071410179138184

Token 889: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06068114563822746
    2. '<|end|>' → logprob: -4.060681343078613
    3. '.' → logprob: -4.560681343078613
    4. ':' → logprob: -5.435681343078613
    5. ')' → logprob: -5.560681343078613
    6. ' if' → logprob: -5.685681343078613
    7. ' ,' → logprob: -5.810681343078613
    8. 'points' → logprob: -5.935681343078613
    9. ',
' → logprob: -5.935681343078613
    10. ' nodes' → logprob: -6.310681343078613

Token 890: ' connected' (ID: 12079)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08624090254306793
    2. 'outside' → logprob: -3.0862410068511963
    3. 'start' → logprob: -4.461240768432617
    4. 'print' → logprob: -4.836240768432617
    5. 'continue' → logprob: -5.586240768432617
    6. 'pass' → logprob: -5.586240768432617
    7. 'visited' → logprob: -6.336240768432617
    8. 'dist' → logprob: -6.336240768432617
    9. '       ' → logprob: -6.586240768432617
    10. 'break' → logprob: -6.836240768432617

Token 891: ' to' (ID: 316)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.2039424329996109
    2. 'components' → logprob: -2.7039425373077393
    3. '_components' → logprob: -3.3289425373077393
    4. 'to' → logprob: -3.5789425373077393
    5. 'nodes' → logprob: -3.5789425373077393
    6. '_c' → logprob: -4.70394229888916
    7. '=' → logprob: -6.07894229888916
    8. ' =' → logprob: -6.07894229888916
    9. 'component' → logprob: -6.32894229888916
    10. ' to' → logprob: -6.45394229888916

Token 892: ' no' (ID: 860)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5669970512390137
    2. 'no' → logprob: -1.0669970512390137
    3. 'cir' → logprob: -3.4419970512390137
    4. '"' → logprob: -4.066997051239014
    5. 'none' → logprob: -4.191997051239014
    6. 'the' → logprob: -4.816997051239014
    7. '-' → logprob: -6.191997051239014
    8. 'virtual' → logprob: -6.191997051239014
    9. 'nothing' → logprob: -6.191997051239014
    10. ' no' → logprob: -6.316997051239014

Token 893: ' circle' (ID: 22005)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.2492782473564148
    2. ' circles' → logprob: -2.4992783069610596
    3. 'circle' → logprob: -2.7492783069610596
    4. 'one' → logprob: -2.8742783069610596
    5. 'thing' → logprob: -4.8742780685424805
    6. ' circle' → logprob: -6.1242780685424805
    7. 'c' → logprob: -6.2492780685424805
    8. 's' → logprob: -6.8742780685424805
    9. ' one' → logprob: -6.9992780685424805
    10. 'ne' → logprob: -7.1242780685424805

Token 894: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38439545035362244
    2. '<|end|>' → logprob: -1.3843954801559448
    3. '
' → logprob: -3.1343953609466553
    4. '        
' → logprob: -4.134395599365234
    5. '<|end|>' → logprob: -5.884395599365234
    6. 'if' → logprob: -6.259395599365234
    7. ' if' → logprob: -6.509395599365234
    8. ',' → logprob: -7.134395599365234
    9. '#' → logprob: -7.259395599365234
    10. '   ' → logprob: -8.509395599365234

Token 895: ' minimal' (ID: 19957)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.334764301776886
    2. '       ' → logprob: -2.084764242172241
    3. '#' → logprob: -2.709764242172241
    4. 'if' → logprob: -3.334764242172241
    5. ' if' → logprob: -3.959764242172241
    6. 'continue' → logprob: -4.20976448059082
    7. ' print' → logprob: -5.08476448059082
    8. 'distance' → logprob: -5.45976448059082
    9. ' continue' → logprob: -5.95976448059082
    10. 'dist' → logprob: -6.20976448059082

Token 896: ' wall' (ID: 9688)
  Prédit: 'walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'walls' → logprob: -1.0628405809402466
    2. 'distance' → logprob: -1.6878405809402466
    3. 'number' → logprob: -2.187840461730957
    4. '_w' → logprob: -2.187840461730957
    5. '_cl' → logprob: -2.687840461730957
    6. 'cl' → logprob: -3.687840461730957
    7. '_' → logprob: -3.937840461730957
    8. '_number' → logprob: -3.937840461730957
    9. ' number' → logprob: -4.062840461730957
    10. '0' → logprob: -4.062840461730957

Token 897: ' to' (ID: 316)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03438911959528923
    2. '_cross' → logprob: -4.159389019012451
    3. '_count' → logprob: -4.534389019012451
    4. 'cross' → logprob: -5.784389019012451
    5. 'count' → logprob: -6.909389019012451
    6. '_cl' → logprob: -7.159389019012451
    7. '   ' → logprob: -7.909389019012451
    8. ' =' → logprob: -8.03438949584961
    9. ' crossings' → logprob: -8.03438949584961
    10. '_to' → logprob: -8.15938949584961

Token 898: ' climb' (ID: 27049)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0664646252989769
    2. 'cl' → logprob: -3.31646466255188
    3. ' cross' → logprob: -3.69146466255188
    4. ' climb' → logprob: -6.066464424133301
    5. '_cross' → logprob: -7.566464424133301
    6. 'pass' → logprob: -9.1914644241333
    7. '_cl' → logprob: -10.8164644241333
    8. ' ' → logprob: -10.8164644241333
    9. 'break' → logprob: -10.9414644241333
    10. 'block' → logprob: -11.3164644241333

Token 899: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.886333167552948
    2. '=' → logprob: -1.1363332271575928
    3. '       ' → logprob: -2.2613332271575928
    4. ':' → logprob: -2.6363332271575928
    5. ' is' → logprob: -2.7613332271575928
    6. '   ' → logprob: -4.511332988739014
    7. '.' → logprob: -5.011332988739014
    8. ')' → logprob: -5.761332988739014
    9. ',' → logprob: -6.386332988739014
    10. 's' → logprob: -6.761332988739014

Token 900: ' shortest' (ID: 70564)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.040889229625463486
    2. '-' → logprob: -3.790889263153076
    3. 'len' → logprob: -4.665889263153076
    4. 'min' → logprob: -5.415889263153076
    5. 'abs' → logprob: -6.915889263153076
    6. 'max' → logprob: -7.165889263153076
    7. 'dist' → logprob: -7.165889263153076
    8. '1' → logprob: -7.790889263153076
    9. 'r' → logprob: -8.290888786315918
    10. 'math' → logprob: -8.540888786315918

Token 901: ' chain' (ID: 13464)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.7143369317054749
    2. 'path' → logprob: -1.83933687210083
    3. 'distance' → logprob: -2.08933687210083
    4. ' path' → logprob: -2.33933687210083
    5. ' line' → logprob: -3.83933687210083
    6. '
' → logprob: -3.96433687210083
    7. '   ' → logprob: -3.96433687210083
    8. '_distance' → logprob: -4.08933687210083
    9. ' distance' → logprob: -4.33933687210083
    10. '_' → logprob: -4.71433687210083

Token 902: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.3277236223220825
    2. ')' → logprob: -1.4527236223220825
    3. '<|end|>' → logprob: -1.5777236223220825
    4. '.' → logprob: -2.452723503112793
    5. '   ' → logprob: -3.327723503112793
    6. ' =' → logprob: -3.827723503112793
    7. ' between' → logprob: -4.077723503112793
    8. '=' → logprob: -4.077723503112793
    9. ' to' → logprob: -4.327723503112793
    10. ' in' → logprob: -4.327723503112793

Token 903: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.0473337322473526
    2. ' circles' → logprob: -3.2973337173461914
    3. 'walls' → logprob: -5.297333717346191
    4. 'circle' → logprob: -6.172333717346191
    5. 'cross' → logprob: -7.797333717346191
    6. ' touching' → logprob: -8.172333717346191
    7. 'c' → logprob: -8.297333717346191
    8. 'touch' → logprob: -8.422333717346191
    9. ' walls' → logprob: -8.797333717346191
    10. 'adj' → logprob: -8.922333717346191

Token 904: ' separating' (ID: 91998)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 905: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1390533745288849
    2. ' start' → logprob: -2.2640533447265625
    3. 'the' → logprob: -4.1390533447265625
    4. ' the' → logprob: -5.1390533447265625
    5. ' them' → logprob: -6.1390533447265625
    6. 'them' → logprob: -6.3890533447265625
    7. 's' → logprob: -9.389053344726562
    8. 'space' → logprob: -10.264053344726562
    9. 'both' → logprob: -10.389053344726562
    10. ' ' → logprob: -10.514053344726562

Token 906: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.6071523427963257
    2. '<|end|>' → logprob: -1.6071523427963257
    3. ' or' → logprob: -1.7321523427963257
    4. '       ' → logprob: -2.1071524620056152
    5. 'from' → logprob: -2.6071524620056152
    6. ')' → logprob: -2.7321524620056152
    7. ',' → logprob: -2.9821524620056152
    8. '   ' → logprob: -3.1071524620056152
    9. 'and' → logprob: -4.732152462005615
    10. '    ' → logprob: -5.107152462005615

Token 907: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.029750604182481766
    2. ' end' → logprob: -3.5297505855560303
    3. '_end' → logprob: -17.15475082397461
    4. ''end' → logprob: -17.15475082397461
    5. '(end' → logprob: -18.27975082397461
    6. '
' → logprob: -18.52975082397461
    7. '	end' → logprob: -18.65475082397461
    8. ' ' → logprob: -18.77975082397461
    9. '[end' → logprob: -18.77975082397461
    10. '.end' → logprob: -18.77975082397461

Token 908: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2640867829322815
    2. '<|end|>' → logprob: -1.6390867233276367
    3. '
' → logprob: -4.014086723327637
    4. '#' → logprob: -5.014086723327637
    5. '        
' → logprob: -5.514086723327637
    6. '<|end|>' → logprob: -5.889086723327637
    7. '...' → logprob: -6.014086723327637
    8. ',' → logprob: -7.264086723327637
    9. ' if' → logprob: -7.389086723327637
    10. 'def' → logprob: -7.639086723327637

Token 909: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01343609020113945
    2. '<|end|>' → logprob: -4.888436317443848
    3. '        
' → logprob: -6.388436317443848
    4. '#' → logprob: -6.763436317443848
    5. 'if' → logprob: -7.013436317443848
    6. ' if' → logprob: -7.638436317443848
    7. '   ' → logprob: -7.888436317443848
    8. '
' → logprob: -8.138436317443848
    9. '...' → logprob: -8.513436317443848
    10. 'continue' → logprob: -9.513436317443848

Token 910: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5245699882507324
    2. 'if' → logprob: -1.6495699882507324
    3. '#' (adapté à ' #') → logprob: -2.1495699882507324
    4. 'dist' → logprob: -3.3995699882507324
    5. ' if' → logprob: -4.024569988250732
    6. 'graph' → logprob: -4.649569988250732
    7. 'start' → logprob: -5.024569988250732
    8. 'def' → logprob: -5.149569988250732
    9. 'distance' → logprob: -5.149569988250732
    10. '        
' → logprob: -5.149569988250732

Token 911: ' However' (ID: 5551)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6178483963012695
    2. '       ' → logprob: -1.6178483963012695
    3. 'dist' → logprob: -2.1178483963012695
    4. 'start' → logprob: -2.9928483963012695
    5. 'visited' → logprob: -3.8678483963012695
    6. 'distance' → logprob: -4.1178483963012695
    7. 'continue' → logprob: -4.4928483963012695
    8. 'pass' → logprob: -4.7428483963012695
    9. 'graph' → logprob: -4.7428483963012695
    10. 'if' → logprob: -5.2428483963012695

Token 912: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1897338181734085
    2. ' if' → logprob: -2.6897337436676025
    3. 'if' → logprob: -3.1897337436676025
    4. '       ' → logprob: -3.3147337436676025
    5. 'continue' → logprob: -4.189733982086182
    6. ' continue' → logprob: -5.689733982086182
    7. 'for' → logprob: -6.439733982086182
    8. ' for' → logprob: -6.439733982086182
    9. ' #' → logprob: -6.439733982086182
    10. '   ' → logprob: -7.439733982086182

Token 913: ' walls' (ID: 20562)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22355937957763672
    2. 'if' → logprob: -2.5985593795776367
    3. ' if' → logprob: -2.9735593795776367
    4. 'continue' → logprob: -3.8485593795776367
    5. 'for' → logprob: -4.348559379577637
    6. '       ' → logprob: -4.598559379577637
    7. ' for' → logprob: -4.848559379577637
    8. ' #' → logprob: -5.223559379577637
    9. 'pass' → logprob: -5.348559379577637
    10. ' continue' → logprob: -5.348559379577637

Token 914: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.768104612827301
    2. ' can' → logprob: -2.0181045532226562
    3. ' may' → logprob: -2.2681045532226562
    4. ' that' → logprob: -2.3931045532226562
    5. ' might' → logprob: -3.2681045532226562
    6. '<|end|>' → logprob: -3.2681045532226562
    7. ' must' → logprob: -3.3931045532226562
    8. 'are' → logprob: -4.268104553222656
    9. '#' → logprob: -4.393104553222656
    10. ' cannot' → logprob: -4.518104553222656

Token 915: ' built' (ID: 8113)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.9562502503395081
    2. 'represented' → logprob: -1.4562501907348633
    3. 'not' → logprob: -2.7062501907348633
    4. 'always' → logprob: -3.4562501907348633
    5. 'conv' → logprob: -3.4562501907348633
    6. 'dis' → logprob: -3.4562501907348633
    7. 'placed' → logprob: -3.9562501907348633
    8. 'c' → logprob: -4.456250190734863
    9. 'either' → logprob: -4.456250190734863
    10. ' represented' → logprob: -4.456250190734863

Token 916: ' not' (ID: 625)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.390669822692871
    2. '```' → logprob: -1.765669822692871
    3. '   ' → logprob: -2.390669822692871
    4. ' that' → logprob: -2.515669822692871
    5. 'that' → logprob: -2.765669822692871
    6. '.' → logprob: -2.765669822692871
    7. 'to' → logprob: -3.015669822692871
    8. ',' → logprob: -3.015669822692871
    9. '       ' → logprob: -3.515669822692871
    10. 'in' → logprob: -3.890669822692871

Token 917: ' crossing' (ID: 50946)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.1910482943058014
    2. 'to' → logprob: -2.4410483837127686
    3. ' only' → logprob: -4.0660481452941895
    4. 'as' → logprob: -4.4410481452941895
    5. 'just' → logprob: -4.5660481452941895
    6. 'in' → logprob: -4.6910481452941895
    7. 'connected' → logprob: -5.0660481452941895
    8. ' to' → logprob: -5.3160481452941895
    9. 'necessarily' → logprob: -5.5660481452941895
    10. 'on' → logprob: -5.9410481452941895

Token 918: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3495546281337738
    2. ',' → logprob: -2.2245545387268066
    3. 'each' → logprob: -3.0995545387268066
    4. 'or' → logprob: -3.0995545387268066
    5. ' each' → logprob: -3.7245545387268066
    6. '.' → logprob: -3.9745545387268066
    7. '<|end|>' → logprob: -4.224554538726807
    8. ' and' → logprob: -4.974554538726807
    9. '```' → logprob: -5.599554538726807
    10. 's' → logprob: -5.599554538726807

Token 919: ' touching' (ID: 52058)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.016588972881436348
    2. ' touching' → logprob: -4.266589164733887
    3. 'over' → logprob: -6.141589164733887
    4. ' overlapping' → logprob: -9.141589164733887
    5. 'sharing' → logprob: -9.766589164733887
    6. '   ' → logprob: -10.641589164733887
    7. '_touch' → logprob: -11.266589164733887
    8. 'adj' → logprob: -11.391589164733887
    9. 'inter' → logprob: -11.391589164733887
    10. 'Touch' → logprob: -11.516589164733887

Token 920: ' each' (ID: 2454)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 921: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.14280392229557037
    2. ' other' → logprob: -2.017803907394409
    3. '-other' → logprob: -10.142804145812988
    4. '_other' → logprob: -10.892804145812988
    5. '(other' → logprob: -10.892804145812988
    6. 'else' → logprob: -11.142804145812988
    7. ' other's' → logprob: -11.892804145812988
    8. 'others' → logprob: -12.017804145812988
    9. 'Other' → logprob: -12.142804145812988
    10. '#' → logprob: -12.517804145812988

Token 922: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18385416269302368
    2. '#' → logprob: -2.433854103088379
    3. 'if' → logprob: -3.308854103088379
    4. ' if' → logprob: -4.308854103088379
    5. '<|end|>' → logprob: -4.433854103088379
    6. 'def' → logprob: -5.558854103088379
    7. '   ' → logprob: -5.808854103088379
    8. '        
' → logprob: -5.808854103088379
    9. '...' → logprob: -5.933854103088379
    10. ',' → logprob: -6.683854103088379

Token 923: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.951255202293396
    2. ' so' → logprob: -2.2012553215026855
    3. '       ' → logprob: -2.3262553215026855
    4. ' continue' → logprob: -2.5762553215026855
    5. ' but' → logprob: -2.7012553215026855
    6. 'continue' → logprob: -2.7012553215026855
    7. '<|end|>' → logprob: -2.8262553215026855
    8. '...' → logprob: -2.8262553215026855
    9. ' and' → logprob: -4.2012553215026855
    10. 'def' → logprob: -5.2012553215026855

Token 924: ' if' (ID: 538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04870932176709175
    2. 'the' → logprob: -4.048709392547607
    3. 'continue' → logprob: -4.798709392547607
    4. '...' → logprob: -5.048709392547607
    5. '       ' → logprob: -5.298709392547607
    6. ' the' → logprob: -6.048709392547607
    7. 'if' → logprob: -7.048709392547607
    8. ' continue' → logprob: -7.173709392547607
    9. 'for' → logprob: -7.298709392547607
    10. 'they' → logprob: -7.423709392547607

Token 925: ' walls' (ID: 20562)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.9263300895690918
    2. ' start' → logprob: -1.9263300895690918
    3. ' the' → logprob: -2.551330089569092
    4. 'the' → logprob: -2.676330089569092
    5. ' not' → logprob: -2.926330089569092
    6. ' there' → logprob: -3.176330089569092
    7. 'not' → logprob: -3.426330089569092
    8. 'n' → logprob: -3.551330089569092
    9. 'there' → logprob: -3.676330089569092
    10. 'cir' → logprob: -3.926330089569092

Token 926: ' exist' (ID: 4310)
  Prédit: ' do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' do' → logprob: -0.789796769618988
    2. 'do' → logprob: -1.6647968292236328
    3. 'are' → logprob: -2.539796829223633
    4. ' are' → logprob: -2.664796829223633
    5. '#' → logprob: -3.039796829223633
    6. ' don't' → logprob: -3.664796829223633
    7. '```' → logprob: -3.789796829223633
    8. '   ' → logprob: -3.914796829223633
    9. 'don't' → logprob: -4.289796829223633
    10. 'def' → logprob: -4.664796829223633

Token 927: ' that' (ID: 484)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1577097177505493
    2. ':' → logprob: -1.1577097177505493
    3. ' and' → logprob: -1.2827097177505493
    4. 'and' → logprob: -3.4077095985412598
    5. ':
' → logprob: -4.15770959854126
    6. '   ' → logprob: -4.28270959854126
    7. '       ' → logprob: -4.78270959854126
    8. ' that' → logprob: -5.15770959854126
    9. '.' → logprob: -5.78270959854126
    10. 'that' → logprob: -6.65770959854126

Token 928: ' block' (ID: 4355)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.3116530179977417
    2. ' separate' → logprob: -1.4366530179977417
    3. 'block' → logprob: -4.186653137207031
    4. ' block' → logprob: -5.561653137207031
    5. '#' → logprob: -6.686653137207031
    6. '
' → logprob: -6.936653137207031
    7. 'must' → logprob: -7.061653137207031
    8. 'com' → logprob: -7.061653137207031
    9. 'divide' → logprob: -7.061653137207031
    10. '```' → logprob: -7.311653137207031

Token 929: ' path' (ID: 3104)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.43231964111328125
    2. ' the' → logprob: -1.1823196411132812
    3. ' movement' → logprob: -3.9323196411132812
    4. ' passage' → logprob: -5.057319641113281
    5. 'movement' → logprob: -5.057319641113281
    6. ' any' → logprob: -5.932319641113281
    7. ' access' → logprob: -6.807319641113281
    8. 'pass' → logprob: -6.932319641113281
    9. 'path' → logprob: -6.932319641113281
    10. 'any' → logprob: -7.307319641113281

Token 930: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7347903251647949
    2. '       ' → logprob: -1.109790325164795
    3. ':' → logprob: -2.609790325164795
    4. '   ' → logprob: -2.859790325164795
    5. 'from' → logprob: -4.484790325164795
    6. ' to' → logprob: -4.734790325164795
    7. ',
' → logprob: -4.734790325164795
    8. ':
' → logprob: -4.859790325164795
    9. '#' → logprob: -5.734790325164795
    10. ' and' → logprob: -5.984790325164795

Token 931: ' rat' (ID: 8908)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4570026695728302
    2. '       ' → logprob: -1.8320026397705078
    3. 'continue' → logprob: -2.207002639770508
    4. ' continue' → logprob: -3.707002639770508
    5. '...' → logprob: -3.832002639770508
    6. 'the' → logprob: -4.457002639770508
    7. ' the' → logprob: -4.832002639770508
    8. ' if' → logprob: -5.207002639770508
    9. 'if' → logprob: -5.207002639770508
    10. 'pass' → logprob: -5.332002639770508

Token 932: ' need' (ID: 1309)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.7660818099975586
    2. 'must' → logprob: -1.0160818099975586
    3. ')' → logprob: -3.0160818099975586
    4. ' needs' → logprob: -3.2660818099975586
    5. '   ' → logprob: -3.3910818099975586
    6. 'needs' → logprob: -3.7660818099975586
    7. 'cannot' → logprob: -5.141081809997559
    8. '#' → logprob: -5.766081809997559
    9. ' has' → logprob: -5.891081809997559
    10. ' can' → logprob: -6.016081809997559

Token 933: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.25263842940330505
    2. 'to' → logprob: -1.5026384592056274
    3. ')' → logprob: -8.127638816833496
    4. '   ' → logprob: -8.377638816833496
    5. '_to' → logprob: -9.752638816833496
    6. '```' → logprob: -9.877638816833496
    7. '#' → logprob: -10.877638816833496
    8. '           ' → logprob: -11.127638816833496
    9. '       ' → logprob: -11.502638816833496
    10. '               ' → logprob: -12.377638816833496

Token 934: ' climb' (ID: 27049)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.12334402650594711
    2. 'cl' → logprob: -2.6233439445495605
    3. ' cross' → logprob: -3.2483439445495605
    4. 'pass' → logprob: -6.4983439445495605
    5. 'go' → logprob: -6.6233439445495605
    6. ' climb' → logprob: -6.7483439445495605
    7. '```' → logprob: -8.998344421386719
    8. '
' → logprob: -9.123344421386719
    9. ' go' → logprob: -9.373344421386719
    10. ' pass' → logprob: -9.373344421386719

Token 935: '.

' (ID: 364)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'more' → logprob: -1.4054522514343262
    2. 'one' → logprob: -1.5304522514343262
    3. 'through' → logprob: -2.280452251434326
    4. '1' → logprob: -2.530452251434326
    5. ' one' → logprob: -2.780452251434326
    6. 'all' → logprob: -2.905452251434326
    7. 'the' → logprob: -3.030452251434326
    8. 'at' → logprob: -3.405452251434326
    9. 'them' → logprob: -3.655452251434326
    10. '...' → logprob: -3.780452251434326

Token 936: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3881779909133911
    2. 'if' → logprob: -1.3881779909133911
    3. '#' → logprob: -2.8881778717041016
    4. ' if' → logprob: -4.638177871704102
    5. 'start' → logprob: -6.638177871704102
    6. 'def' → logprob: -6.888177871704102
    7. '        
' → logprob: -7.013177871704102
    8. '   ' → logprob: -7.638177871704102
    9. 'outside' → logprob: -7.888177871704102
    10. 'import' → logprob: -8.013177871704102

Token 937: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33611106872558594
    2. '#' (adapté à ' #') → logprob: -2.086111068725586
    3. 'if' → logprob: -2.336111068725586
    4. 'def' → logprob: -3.461111068725586
    5. ' if' → logprob: -4.836111068725586
    6. 'from' → logprob: -5.086111068725586
    7. ' #' → logprob: -5.461111068725586
    8. 'for' → logprob: -6.086111068725586
    9. '   ' → logprob: -6.336111068725586
    10. 'outside' → logprob: -6.461111068725586

Token 938: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.811025857925415
    2. 'if' → logprob: -1.061025857925415
    3. '#' → logprob: -1.686025857925415
    4. 'outside' → logprob: -4.311025619506836
    5. '   ' → logprob: -5.561025619506836
    6. 'start' → logprob: -6.561025619506836
    7. 'visited' → logprob: -6.936025619506836
    8. 'graph' → logprob: -7.061025619506836
    9. 'connected' → logprob: -7.561025619506836
    10. 'inside' → logprob: -7.936025619506836

Token 939: ' formal' (ID: 19536)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12467459589242935
    2. ' if' → logprob: -2.8746745586395264
    3. '#' → logprob: -3.2496745586395264
    4. 'outside' → logprob: -4.4996747970581055
    5. 'start' → logprob: -5.1246747970581055
    6. 'dist' → logprob: -6.9996747970581055
    7. '
' → logprob: -7.2496747970581055
    8. ' #' → logprob: -7.8746747970581055
    9. 'visited' → logprob: -7.8746747970581055
    10. 'from' → logprob: -7.9996747970581055

Token 940: ' approach' (ID: 7139)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.13061083853244781
    2. 'def' → logprob: -2.130610942840576
    3. '
' → logprob: -6.630610942840576
    4. '#' → logprob: -7.005610942840576
    5. 'izing' → logprob: -7.255610942840576
    6. 'ized' → logprob: -8.505610466003418
    7. '```' → logprob: -9.130610466003418
    8. '       ' → logprob: -9.380610466003418
    9. 'ly' → logprob: -9.505610466003418
    10. '   ' → logprob: -9.880610466003418

Token 941: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.101470947265625
    2. '        
' → logprob: -4.101470947265625
    3. 'def' → logprob: -4.101470947265625
    4. '#' → logprob: -4.351470947265625
    5. ':' → logprob: -4.601470947265625
    6. '<|end|>' → logprob: -4.851470947265625
    7. '
' → logprob: -5.101470947265625
    8. ' is' → logprob: -5.101470947265625
    9. ' if' → logprob: -5.476470947265625
    10. ':
' → logprob: -6.101470947265625

Token 942: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020258408039808273
    2. '#' → logprob: -4.39525842666626
    3. '        
' → logprob: -5.52025842666626
    4. '<|end|>' → logprob: -6.89525842666626
    5. '
' → logprob: -7.02025842666626
    6. ' #' → logprob: -7.89525842666626
    7. ' if' → logprob: -8.145257949829102
    8. '   ' → logprob: -8.520257949829102
    9. 'def' → logprob: -8.770257949829102
    10. 'if' → logprob: -9.020257949829102

Token 943: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7036369442939758
    2. '       ' → logprob: -0.8286369442939758
    3. 'outside' → logprob: -3.578636884689331
    4. ' #' → logprob: -4.57863712310791
    5. ' outside' → logprob: -4.82863712310791
    6. 'start' → logprob: -5.07863712310791
    7. ' start' → logprob: -5.45363712310791
    8. 'from' → logprob: -6.45363712310791
    9. ' outer' → logprob: -6.45363712310791
    10. 'outer' → logprob: -6.57863712310791

Token 944: ' Build' (ID: 10885)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8164631724357605
    2. 'start' → logprob: -1.5664632320404053
    3. 'outside' → logprob: -1.8164632320404053
    4. '       ' → logprob: -2.0664632320404053
    5. 'if' → logprob: -4.316462993621826
    6. 'inside' → logprob: -4.566462993621826
    7. 'outer' → logprob: -4.816462993621826
    8. ' start' → logprob: -4.941462993621826
    9. 'from' → logprob: -5.441462993621826
    10. ' outside' → logprob: -6.066462993621826

Token 945: ' graph' (ID: 7465)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'outside' → logprob: -1.1540621519088745
    2. '#' → logprob: -1.7790621519088745
    3. 'left' → logprob: -1.7790621519088745
    4. 'outer' → logprob: -2.654062271118164
    5. 'inside' → logprob: -2.904062271118164
    6. 'top' → logprob: -3.029062271118164
    7. '   ' → logprob: -3.654062271118164
    8. 'up' → logprob: -3.779062271118164
    9. 'two' → logprob: -4.279062271118164
    10. 'a' → logprob: -4.279062271118164

Token 946: ' between' (ID: 2870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5174387693405151
    2. ' =' → logprob: -1.2674387693405151
    3. ' of' → logprob: -3.3924388885498047
    4. '       ' → logprob: -3.7674388885498047
    5. '=' → logprob: -4.017438888549805
    6. ' for' → logprob: -4.642438888549805
    7. ':' → logprob: -4.767438888549805
    8. ',' → logprob: -4.892438888549805
    9. '
' → logprob: -5.892438888549805
    10. ' with' → logprob: -6.267438888549805

Token 947: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.004218840040266514
    2. ' circles' → logprob: -6.004219055175781
    3. 'all' → logprob: -6.629219055175781
    4. ' all' → logprob: -8.504219055175781
    5. 'nodes' → logprob: -9.504219055175781
    6. 'walls' → logprob: -10.129219055175781
    7. 'circle' → logprob: -10.379219055175781
    8. 'the' → logprob: -10.629219055175781
    9. '```' → logprob: -11.379219055175781
    10. 'c' → logprob: -11.629219055175781

Token 948: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009955943562090397
    2. '<|end|>' → logprob: -6.259955883026123
    3. ',' → logprob: -6.509955883026123
    4. '   ' → logprob: -6.634955883026123
    5. '        
' → logprob: -6.759955883026123
    6. ' and' → logprob: -6.759955883026123
    7. '#' → logprob: -7.134955883026123
    8. ' for' → logprob: -7.509955883026123
    9. '
' → logprob: -7.759955883026123
    10. 'for' → logprob: -8.384956359863281

Token 949: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018355604261159897
    2. '
' → logprob: -4.518355369567871
    3. '#' → logprob: -5.518355369567871
    4. '        
' → logprob: -6.143355369567871
    5. '   ' → logprob: -8.143355369567871
    6. '```' → logprob: -8.268355369567871
    7. '<|end|>' → logprob: -8.393355369567871
    8. ',' → logprob: -10.018355369567871
    9. '  
' → logprob: -10.143355369567871
    10. 'for' → logprob: -10.143355369567871

Token 950: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19840885698795319
    2. '#' (adapté à ' #') → logprob: -2.323408842086792
    3. '
' → logprob: -2.698408842086792
    4. '        
' → logprob: -4.448409080505371
    5. '```' → logprob: -6.698409080505371
    6. '   ' → logprob: -8.698409080505371
    7. 'for' → logprob: -8.823409080505371
    8. 'start' → logprob: -8.823409080505371
    9. 'graph' → logprob: -9.073409080505371
    10. 'def' → logprob: -9.073409080505371

Token 951: ' Build' (ID: 10885)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05013450235128403
    2. '#' → logprob: -3.1751344203948975
    3. 'start' → logprob: -5.300134658813477
    4. '        
' → logprob: -7.050134658813477
    5. 'outside' → logprob: -8.300134658813477
    6. 'top' → logprob: -8.925134658813477
    7. 'left' → logprob: -8.925134658813477
    8. '
' → logprob: -9.050134658813477
    9. 'from' → logprob: -9.050134658813477
    10. 'inside' → logprob: -9.425134658813477

Token 952: ' two' (ID: 1920)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.9159286022186279
    2. 'start' → logprob: -1.290928602218628
    3. '#' → logprob: -2.540928602218628
    4. ' outside' → logprob: -3.290928602218628
    5. ' start' → logprob: -3.415928602218628
    6. 'virtual' → logprob: -3.540928602218628
    7. 'special' → logprob: -4.040928840637207
    8. ' two' → logprob: -4.165928840637207
    9. ' virtual' → logprob: -4.540928840637207
    10. ' sets' → logprob: -4.665928840637207

Token 953: ' extra' (ID: 5018)
  Prédit: 'sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sets' → logprob: -0.1210317313671112
    2. ' sets' → logprob: -2.2460317611694336
    3. '_sets' → logprob: -4.871031761169434
    4. 'layers' → logprob: -8.871031761169434
    5. 'lists' → logprob: -9.246031761169434
    6. 'set' → logprob: -9.871031761169434
    7. '```' → logprob: -10.121031761169434
    8. 's' → logprob: -10.871031761169434
    9. 'special' → logprob: -10.996031761169434
    10. 'import' → logprob: -11.246031761169434

Token 954: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.6278302073478699
    2. ' sets' → logprob: -1.8778302669525146
    3. 'nodes' → logprob: -2.0028302669525146
    4. '_nodes' → logprob: -2.0028302669525146
    5. ' lists' → logprob: -4.3778300285339355
    6. ' virtual' → logprob: -4.3778300285339355
    7. 'virtual' → logprob: -4.8778300285339355
    8. 'sets' → logprob: -5.8778300285339355
    9. ' lines' → logprob: -7.0028300285339355
    10. '_virtual' → logprob: -7.1278300285339355

Token 955: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1309993863105774
    2. '=' → logprob: -3.0059993267059326
    3. ',' → logprob: -3.1309993267059326
    4. ':' → logprob: -4.755999565124512
    5. ' (' → logprob: -5.130999565124512
    6. '(n' → logprob: -5.505999565124512
    7. ' for' → logprob: -5.755999565124512
    8. '[n' → logprob: -6.380999565124512
    9. ' and' → logprob: -6.755999565124512
    10. ' with' → logprob: -7.505999565124512

Token 956: ' start' (ID: 1604)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1439143717288971
    2. 'n' → logprob: -2.0189144611358643
    3. ' -' → logprob: -8.393914222717285
    4. '(n' → logprob: -8.518914222717285
    5. ' start' → logprob: -9.018914222717285
    6. '0' → logprob: -9.018914222717285
    7. ' outside' → logprob: -9.393914222717285
    8. '[n' → logprob: -9.518914222717285
    9. ',' → logprob: -9.643914222717285
    10. 'start' → logprob: -9.643914222717285

Token 957: ' (-' (ID: 21382)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5931463837623596
    2. ' and' → logprob: -1.3431463241577148
    3. '_nodes' → logprob: -1.9681463241577148
    4. '_c' → logprob: -3.468146324157715
    5. 'and' → logprob: -5.968146324157715
    6. '_' → logprob: -5.968146324157715
    7. ' ,' → logprob: -6.218146324157715
    8. '_and' → logprob: -6.218146324157715
    9. ' =' → logprob: -6.718146324157715
    10. ')' → logprob: -6.968146324157715

Token 958: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02983391284942627
    2. '2' → logprob: -3.5298337936401367
    3. ' ' → logprob: -9.654833793640137
    4. ')' → logprob: -11.654833793640137
    5. '   ' → logprob: -12.654833793640137
    6. '-' → logprob: -13.654833793640137
    7. '       ' → logprob: -14.029833793640137
    8. '
' → logprob: -14.154833793640137
    9. '3' → logprob: -14.154833793640137
    10. ',' → logprob: -14.654833793640137

Token 959: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10878182202577591
    2. ',' → logprob: -2.3587818145751953
    3. '),' → logprob: -5.233781814575195
    4. ' and' → logprob: -5.858781814575195
    5. '2' → logprob: -9.358781814575195
    6. ' )' → logprob: -9.358781814575195
    7. ' ,' → logprob: -9.733781814575195
    8. '
' → logprob: -9.733781814575195
    9. ',
' → logprob: -11.483781814575195
    10. 'and' → logprob: -11.733781814575195

Token 960: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.3894502520561218
    2. 'end' → logprob: -1.1394503116607666
    3. ' and' → logprob: -6.1394500732421875
    4. 'and' → logprob: -8.764450073242188
    5. ' n' → logprob: -9.514450073242188
    6. '-' → logprob: -10.014450073242188
    7. 'n' → logprob: -10.014450073242188
    8. ' -' → logprob: -10.139450073242188
    9. ' ' → logprob: -10.889450073242188
    10. ')' → logprob: -11.014450073242188

Token 961: ' (-' (ID: 21382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1230087280273438
    2. '_nodes' → logprob: -1.3730087280273438
    3. ',' → logprob: -1.6230087280273438
    4. ' and' → logprob: -2.1230087280273438
    5. ')' → logprob: -3.1230087280273438
    6. ' (-' → logprob: -3.9980087280273438
    7. '
' → logprob: -4.748008728027344
    8. '_c' → logprob: -4.998008728027344
    9. '(-' → logprob: -5.248008728027344
    10. '_' → logprob: -5.998008728027344

Token 962: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2017844170331955
    2. '1' → logprob: -1.701784372329712
    3. '3' → logprob: -7.951784610748291
    4. ' ' → logprob: -11.451784133911133
    5. ' -' → logprob: -13.326784133911133
    6. '```' → logprob: -13.326784133911133
    7. '-' → logprob: -13.576784133911133
    8. '0' → logprob: -14.201784133911133
    9. '
' → logprob: -14.826784133911133
    10. '+' → logprob: -14.826784133911133

Token 963: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20147746801376343
    2. ',' → logprob: -1.8264775276184082
    3. '),' → logprob: -4.701477527618408
    4. ')
' → logprob: -4.826477527618408
    5. '
' → logprob: -6.076477527618408
    6. ' and' → logprob: -6.951477527618408
    7. '):
' → logprob: -8.32647705078125
    8. ' )' → logprob: -8.70147705078125
    9. ',
' → logprob: -8.82647705078125
    10. '_nodes' → logprob: -9.07647705078125

Token 964: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18857863545417786
    2. '       ' → logprob: -1.9385786056518555
    3. ' and' → logprob: -4.5635786056518555
    4. ',' → logprob: -4.6885786056518555
    5. '#' → logprob: -6.5635786056518555
    6. ',
' → logprob: -6.8135786056518555
    7. ')' → logprob: -6.9385786056518555
    8. ')
' → logprob: -6.9385786056518555
    9. '        
' → logprob: -7.0635786056518555
    10. '
' → logprob: -8.063578605651855

Token 965: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033633122220635414
    2. '
' → logprob: -6.503363132476807
    3. '#' (adapté à ' #') → logprob: -6.878363132476807
    4. ' and' → logprob: -8.253363609313965
    5. ',' → logprob: -9.128363609313965
    6. '        
' → logprob: -9.128363609313965
    7. 'start' → logprob: -9.378363609313965
    8. '   ' → logprob: -9.378363609313965
    9. ' start' → logprob: -10.128363609313965
    10. '```' → logprob: -10.628363609313965

Token 966: ' Connect' (ID: 16834)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3157707154750824
    2. ' start' → logprob: -2.3157706260681152
    3. 'start' → logprob: -2.5657706260681152
    4. ' for' → logprob: -2.9407706260681152
    5. 'for' → logprob: -4.065770626068115
    6. '   ' → logprob: -4.315770626068115
    7. '#' → logprob: -5.065770626068115
    8. 'import' → logprob: -6.940770626068115
    9. ' if' → logprob: -7.190770626068115
    10. '
' → logprob: -7.190770626068115

Token 967: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.21248257160186768
    2. ' start' → logprob: -1.9624825716018677
    3. 'them' → logprob: -4.587482452392578
    4. '(-' → logprob: -4.712482452392578
    5. ' them' → logprob: -4.712482452392578
    6. '-' → logprob: -5.087482452392578
    7. '(start' → logprob: -5.087482452392578
    8. 'the' → logprob: -5.337482452392578
    9. ' the' → logprob: -6.712482452392578
    10. '(' → logprob: -6.837482452392578

Token 968: ' to' (ID: 316)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.1198267936706543
    2. ',' → logprob: -1.6198267936706543
    3. ' (-' → logprob: -1.9948267936706543
    4. ' and' → logprob: -1.9948267936706543
    5. '_nodes' → logprob: -2.9948267936706543
    6. '[-' → logprob: -3.4948267936706543
    7. ')' → logprob: -3.4948267936706543
    8. ' to' → logprob: -3.6198267936706543
    9. '   ' → logprob: -4.119826793670654
    10. '(-' → logprob: -4.369826793670654

Token 969: ' all' (ID: 722)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.13048090040683746
    2. 'i' → logprob: -3.505481004714966
    3. '[' → logprob: -3.755481004714966
    4. 'cir' → logprob: -3.880481004714966
    5. '[]' → logprob: -4.255480766296387
    6. 'c' → logprob: -5.005480766296387
    7. '[c' → logprob: -5.005480766296387
    8. '[node' → logprob: -5.130480766296387
    9. '[n' → logprob: -6.005480766296387
    10. 'all' → logprob: -6.005480766296387

Token 970: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.035442572087049484
    2. 'circle' → logprob: -4.535442352294922
    3. 'c' → logprob: -4.785442352294922
    4. '[i' → logprob: -5.535442352294922
    5. ' circles' → logprob: -5.535442352294922
    6. 'i' → logprob: -5.785442352294922
    7. 'nodes' → logprob: -5.785442352294922
    8. '[' → logprob: -8.035442352294922
    9. '[-' → logprob: -8.410442352294922
    10. ' i' → logprob: -8.660442352294922

Token 971: ' which' (ID: 1118)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.31550997495651245
    2. ' that' → logprob: -1.4405100345611572
    3. '_that' → logprob: -5.190509796142578
    4. '[-' → logprob: -5.440509796142578
    5. '```' → logprob: -5.815509796142578
    6. ',' → logprob: -5.815509796142578
    7. '[i' → logprob: -5.940509796142578
    8. 'and' → logprob: -5.940509796142578
    9. '[' → logprob: -6.065509796142578
    10. ')' → logprob: -6.190509796142578

Token 972: ' cover' (ID: 4321)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.3109116554260254
    2. ' point' → logprob: -1.6859116554260254
    3. 'contain' → logprob: -3.6859116554260254
    4. ' are' → logprob: -4.310911655426025
    5. 'are' → logprob: -4.435911655426025
    6. 'touch' → logprob: -4.935911655426025
    7. 'inter' → logprob: -5.185911655426025
    8. ' contain' → logprob: -5.935911655426025
    9. '   ' → logprob: -6.310911655426025
    10. '(point' → logprob: -6.435911655426025

Token 973: ' start' (ID: 1604)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3160359859466553
    2. 'the' → logprob: -1.4410359859466553
    3. ' start' → logprob: -4.191036224365234
    4. 'start' → logprob: -4.441036224365234
    5. ' xs' → logprob: -6.066036224365234
    6. 'xs' → logprob: -6.816036224365234
    7. ' ' → logprob: -7.066036224365234
    8. ' their' → logprob: -7.191036224365234
    9. '(xs' → logprob: -7.191036224365234
    10. 's' → logprob: -8.316036224365234

Token 974: ' point' (ID: 2438)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5537041425704956
    2. '_points' → logprob: -2.178704261779785
    3. '_point' → logprob: -2.428704261779785
    4. 's' → logprob: -2.678704261779785
    5. '_' → logprob: -2.678704261779785
    6. ',' → logprob: -3.053704261779785
    7. '_s' → logprob: -5.053704261779785
    8. ' and' → logprob: -5.803704261779785
    9. '),' → logprob: -5.803704261779785
    10. ')_' → logprob: -5.803704261779785

Token 975: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08119282126426697
    2. ' and' → logprob: -3.8311927318573
    3. ',' → logprob: -4.081192970275879
    4. ')' → logprob: -4.206192970275879
    5. '   ' → logprob: -4.706192970275879
    6. '
' → logprob: -5.206192970275879
    7. ' if' → logprob: -5.706192970275879
    8. ')
' → logprob: -6.831192970275879
    9. '.' → logprob: -7.331192970275879
    10. '           ' → logprob: -7.581192970275879

Token 976: 'none' (ID: 12851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24075956642627716
    2. '),' → logprob: -1.8657596111297607
    3. ' )' → logprob: -3.3657596111297607
    4. ' ),' → logprob: -4.990759372711182
    5. 'and' → logprob: -5.865759372711182
    6. 'xs' → logprob: -6.365759372711182
    7. ')
' → logprob: -6.615759372711182
    8. '-' → logprob: -6.740759372711182
    9. '0' → logprob: -6.865759372711182
    10. ' and' → logprob: -7.115759372711182

Token 977: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04038902744650841
    2. '),' → logprob: -3.915389060974121
    3. ' or' → logprob: -4.415389060974121
    4. ')
' → logprob: -5.915389060974121
    5. '       ' → logprob: -6.165389060974121
    6. ' if' → logprob: -6.290389060974121
    7. 'if' → logprob: -8.415389060974121
    8. 'or' → logprob: -8.790389060974121
    9. ').' → logprob: -9.290389060974121
    10. ' )' → logprob: -9.415389060974121

Token 978: ' problem' (ID: 4792)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.15053166449069977
    2. '#' → logprob: -3.025531768798828
    3. 'the' → logprob: -3.025531768798828
    4. 'current' → logprob: -4.150531768798828
    5. 'cir' → logprob: -4.525531768798828
    6. 'code' → logprob: -5.025531768798828
    7. '[]' → logprob: -6.025531768798828
    8. ')' → logprob: -6.275531768798828
    9. 'start' → logprob: -6.900531768798828
    10. 'point' → logprob: -7.275531768798828

Token 979: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020678751170635223
    2. ')
' → logprob: -4.395678520202637
    3. '       ' → logprob: -5.520678520202637
    4. '),' → logprob: -5.895678520202637
    5. ' or' → logprob: -7.270678520202637
    6. ',' → logprob: -8.770678520202637
    7. ').' → logprob: -9.020678520202637
    8. '   ' → logprob: -9.770678520202637
    9. '):
' → logprob: -9.895678520202637
    10. ' because' → logprob: -10.020678520202637

Token 980: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01326399389654398
    2. ' and' → logprob: -5.138264179229736
    3. ')' → logprob: -6.013264179229736
    4. ',' → logprob: -6.138264179229736
    5. '#' → logprob: -7.138264179229736
    6. '
' → logprob: -7.263264179229736
    7. 'and' → logprob: -7.638264179229736
    8. '<|end|>' → logprob: -8.513263702392578
    9. '           ' → logprob: -9.763263702392578
    10. ')
' → logprob: -9.888263702392578

Token 981: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031070110853761435
    2. '#' (adapté à ' #') → logprob: -6.003107070922852
    3. ' and' → logprob: -9.003107070922852
    4. '           ' → logprob: -9.253107070922852
    5. '   ' → logprob: -9.378107070922852
    6. ')' → logprob: -9.378107070922852
    7. ',' → logprob: -9.378107070922852
    8. '
' → logprob: -10.503107070922852
    9. '        
' → logprob: -10.503107070922852
    10. '               ' → logprob: -11.128107070922852

Token 982: ' Connect' (ID: 16834)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08246711641550064
    2. '#' → logprob: -2.5824670791625977
    3. ' #' → logprob: -7.082467079162598
    4. 'start' → logprob: -7.332467079162598
    5. 'end' → logprob: -7.707467079162598
    6. ' and' → logprob: -8.082467079162598
    7. ' end' → logprob: -8.582467079162598
    8. ' for' → logprob: -8.707467079162598
    9. 'Connect' → logprob: -8.707467079162598
    10. 'for' → logprob: -8.832467079162598

Token 983: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.2278730571269989
    2. ' end' → logprob: -1.6028730869293213
    3. 'start' → logprob: -6.102872848510742
    4. ' start' → logprob: -8.977872848510742
    5. '#' → logprob: -9.977872848510742
    6. '(end' → logprob: -11.352872848510742
    7. '   ' → logprob: -12.352872848510742
    8. '       ' → logprob: -12.352872848510742
    9. 'the' → logprob: -12.477872848510742
    10. 'all' → logprob: -12.602872848510742

Token 984: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.11428773403167725
    2. 'to' → logprob: -2.239287853240967
    3. '_to' → logprob: -6.614287853240967
    4. ')' → logprob: -10.114287376403809
    5. '   ' → logprob: -10.864287376403809
    6. ' ' → logprob: -10.864287376403809
    7. ',' → logprob: -10.989287376403809
    8. '```' → logprob: -11.864287376403809
    9. '	to' → logprob: -12.489287376403809
    10. '=' → logprob: -12.864287376403809

Token 985: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0028259195387363434
    2. ' all' → logprob: -5.877825736999512
    3. '...' → logprob: -11.377825736999512
    4. '[]' → logprob: -12.377825736999512
    5. 'any' → logprob: -13.377825736999512
    6. '	all' → logprob: -13.627825736999512
    7. 'end' → logprob: -14.002825736999512
    8. 'set' → logprob: -14.877825736999512
    9. '[' → logprob: -15.127825736999512
    10. ' ' → logprob: -15.877825736999512

Token 986: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.009776394814252853
    2. ' circles' → logprob: -4.634776592254639
    3. 'circle' → logprob: -12.25977611541748
    4. 'c' → logprob: -12.50977611541748
    5. 'end' → logprob: -12.63477611541748
    6. '#' → logprob: -12.75977611541748
    7. 'circ' → logprob: -13.50977611541748
    8. 'points' → logprob: -14.00977611541748
    9. ' cir' → logprob: -14.00977611541748
    10. '[-' → logprob: -14.50977611541748

Token 987: ' which' (ID: 1118)
  Prédit: ' which'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.5457713007926941
    2. 'which' → logprob: -0.9207713007926941
    3. '#' → logprob: -4.79577112197876
    4. ' that' → logprob: -5.04577112197876
    5. '   ' → logprob: -6.17077112197876
    6. 'that' → logprob: -6.29577112197876
    7. '       ' → logprob: -6.67077112197876
    8. '(which' → logprob: -7.17077112197876
    9. ')' → logprob: -7.54577112197876
    10. ' #' → logprob: -8.920771598815918

Token 988: ' cover' (ID: 4321)
  Prédit: 'cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cover' → logprob: -0.00480758398771286
    2. 'contain' → logprob: -5.879807472229004
    3. ' cover' → logprob: -6.254807472229004
    4. '#' → logprob: -11.254807472229004
    5. 'touch' → logprob: -11.504807472229004
    6. '
' → logprob: -11.504807472229004
    7. ' contain' → logprob: -11.504807472229004
    8. '_cover' → logprob: -11.879807472229004
    9. 'include' → logprob: -12.004807472229004
    10. ' ' → logprob: -12.629807472229004

Token 989: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.023391995579004288
    2. ' end' → logprob: -3.7733919620513916
    3. 'xt' → logprob: -9.023391723632812
    4. 'yt' → logprob: -11.148391723632812
    5. 'target' → logprob: -12.898391723632812
    6. '#' → logprob: -13.023391723632812
    7. 'start' → logprob: -13.273391723632812
    8. ' ' → logprob: -14.023391723632812
    9. '```' → logprob: -14.023391723632812
    10. 'nt' → logprob: -14.523391723632812

Token 990: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.42657750844955444
    2. ' point' → logprob: -1.6765775680541992
    3. '_points' → logprob: -2.926577568054199
    4. '_point' → logprob: -3.176577568054199
    5. '_c' → logprob: -3.551577568054199
    6. 'points' → logprob: -3.926577568054199
    7. ')' → logprob: -4.426577568054199
    8. '   ' → logprob: -6.676577568054199
    9. ',' → logprob: -7.176577568054199
    10. '_nodes' → logprob: -7.301577568054199

Token 991: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056467268615961075
    2. '
' → logprob: -3.056467294692993
    3. ',' → logprob: -6.181467056274414
    4. '        
' → logprob: -6.306467056274414
    5. '   ' → logprob: -7.056467056274414
    6. ')' → logprob: -7.181467056274414
    7. '<|end|>' → logprob: -7.306467056274414
    8. '```' → logprob: -7.931467056274414
    9. '#' → logprob: -8.431467056274414
    10. '.' → logprob: -9.056467056274414

Token 992: 'none' (ID: 12851)
  Prédit: 'none'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'none' → logprob: -0.0022865685168653727
    2. 'None' → logprob: -6.752286434173584
    3. ' none' → logprob: -7.377286434173584
    4. '0' → logprob: -8.252286911010742
    5. ')' → logprob: -9.252286911010742
    6. '#' → logprob: -10.252286911010742
    7. '<|end|>' → logprob: -10.252286911010742
    8. 'no' → logprob: -10.877286911010742
    9. '-' → logprob: -11.627286911010742
    10. '_none' → logprob: -11.877286911010742

Token 993: ')
' (ID: 446)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48060956597328186
    2. 'in' → logprob: -0.9806095361709595
    3. ')' → logprob: -5.10560941696167
    4. ',' → logprob: -7.98060941696167
    5. '```' → logprob: -10.355609893798828
    6. '
' → logprob: -11.355609893798828
    7. '-' → logprob: -11.605609893798828
    8. '+' → logprob: -11.980609893798828
    9. '),' → logprob: -12.105609893798828
    10. ')
' → logprob: -12.355609893798828

Token 994: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0113971047103405
    2. '
' → logprob: -5.386396884918213
    3. '#' → logprob: -5.761396884918213
    4. '<|end|>' → logprob: -6.636396884918213
    5. '```' → logprob: -6.886396884918213
    6. '        
' → logprob: -6.886396884918213
    7. '   ' → logprob: -10.011397361755371
    8. '<|end|>' → logprob: -10.386397361755371
    9. ',' → logprob: -10.511397361755371
    10. '        ' → logprob: -10.636397361755371

Token 995: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028370823711156845
    2. '
' → logprob: -4.5283708572387695
    3. '<|end|>' → logprob: -4.5283708572387695
    4. '        
' → logprob: -5.9033708572387695
    5. '#' (adapté à ' #') → logprob: -6.9033708572387695
    6. '   ' → logprob: -7.1533708572387695
    7. '```' → logprob: -7.7783708572387695
    8. '<|end|>' → logprob: -7.9033708572387695
    9. ')' → logprob: -8.15337085723877
    10. '        ' → logprob: -8.90337085723877

Token 996: ' Now' (ID: 6549)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6445905566215515
    2. '       ' → logprob: -1.0195906162261963
    3. 'start' → logprob: -2.8945906162261963
    4. 'if' → logprob: -3.7695906162261963
    5. 'graph' → logprob: -4.269590377807617
    6. 'from' → logprob: -4.519590377807617
    7. 'visited' → logprob: -5.894590377807617
    8. '
' → logprob: -6.394590377807617
    9. '   ' → logprob: -6.519590377807617
    10. 'import' → logprob: -6.519590377807617

Token 997: ' to' (ID: 316)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.44171142578125
    2. 'dist' → logprob: -2.19171142578125
    3. 'from' → logprob: -2.69171142578125
    4. 'import' → logprob: -2.81671142578125
    5. '       ' → logprob: -3.31671142578125
    6. 'visited' → logprob: -3.81671142578125
    7. 'if' → logprob: -4.31671142578125
    8. '   ' → logprob: -4.31671142578125
    9. 'start' → logprob: -4.94171142578125
    10. 'for' → logprob: -5.06671142578125

Token 998: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.16962991654872894
    2. 'import' → logprob: -2.4196298122406006
    3. 'from' → logprob: -3.9196298122406006
    4. 'det' → logprob: -4.41963005065918
    5. '#' → logprob: -4.66963005065918
    6. 'continue' → logprob: -5.16963005065918
    7. ' find' → logprob: -5.54463005065918
    8. 'def' → logprob: -5.91963005065918
    9. 'check' → logprob: -5.91963005065918
    10. 'search' → logprob: -6.41963005065918

Token 999: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -1.3549314737319946
    2. 'if' → logprob: -1.6049314737319946
    3. 'the' → logprob: -1.7299314737319946
    4. 'minimum' → logprob: -2.229931354522705
    5. '#' → logprob: -2.479931354522705
    6. 'short' → logprob: -3.104931354522705
    7. 'answer' → logprob: -3.479931354522705
    8. 'path' → logprob: -4.104931354522705
    9. 'min' → logprob: -4.229931354522705
    10. 'whether' → logprob: -4.229931354522705

Token 1000: ' number' (ID: 2086)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.8880550265312195
    2. 'dist' → logprob: -1.2630550861358643
    3. 'walls' → logprob: -1.8880550861358643
    4. 'path' → logprob: -2.7630550861358643
    5. 'steps' → logprob: -4.013054847717285
    6. '_distance' → logprob: -4.638054847717285
    7. '```' → logprob: -4.638054847717285
    8. '#' → logprob: -4.763054847717285
    9. 'cross' → logprob: -4.888054847717285
    10. 'cl' → logprob: -5.388054847717285

Token 1001: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.09912021458148956
    2. ' of' → logprob: -2.9741201400756836
    3. 'of' → logprob: -3.4741201400756836
    4. '_' → logprob: -4.974120140075684
    5. '_tokens' → logprob: -6.349120140075684
    6. '_to' → logprob: -6.599120140075684
    7. '
' → logprob: -7.349120140075684
    8. '_nodes' → logprob: -7.599120140075684
    9. '   ' → logprob: -8.224120140075684
    10. '_paths' → logprob: -8.849120140075684

Token 1002: ' walls' (ID: 20562)
  Prédit: 'walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walls' → logprob: -0.21930697560310364
    2. 'cir' → logprob: -1.7193069458007812
    3. 'steps' → logprob: -4.969306945800781
    4. 'cross' → logprob: -5.344306945800781
    5. 'edges' → logprob: -6.594306945800781
    6. 'circle' → logprob: -6.844306945800781
    7. ' walls' → logprob: -6.844306945800781
    8. '
' → logprob: -7.344306945800781
    9. ' circles' → logprob: -7.594306945800781
    10. 'wall' → logprob: -7.844306945800781

Token 1003: ' rat' (ID: 8908)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.15282759070396423
    2. 'to' → logprob: -2.402827501296997
    3. '_cross' → logprob: -3.652827501296997
    4. ' to' → logprob: -4.277827739715576
    5. 'cross' → logprob: -5.652827739715576
    6. '   ' → logprob: -5.777827739715576
    7. '=' → logprob: -7.152827739715576
    8. '```' → logprob: -7.527827739715576
    9. '_needed' → logprob: -7.902827739715576
    10. '_tr' → logprob: -8.152827262878418

Token 1004: ' needs' (ID: 4414)
  Prédit: 'needs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needs' → logprob: -0.3335278332233429
    2. 'need' → logprob: -2.0835278034210205
    3. ' needs' → logprob: -2.4585278034210205
    4. 'must' → logprob: -2.8335278034210205
    5. ' need' → logprob: -5.2085280418396
    6. ' must' → logprob: -5.4585280418396
    7. '   ' → logprob: -6.9585280418396
    8. 'has' → logprob: -7.3335280418396
    9. ' has' → logprob: -7.4585280418396
    10. '
' → logprob: -7.4585280418396

Token 1005: ' to' (ID: 316)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.20539847016334534
    2. 'to' → logprob: -1.955398440361023
    3. '_cross' → logprob: -3.2053985595703125
    4. '_' → logprob: -6.3303985595703125
    5. '_cl' → logprob: -7.4553985595703125
    6. ' to' → logprob: -7.4553985595703125
    7. '   ' → logprob: -8.080398559570312
    8. 'cross' → logprob: -8.955398559570312
    9. '_tr' → logprob: -10.080398559570312
    10. '_t' → logprob: -10.205398559570312

Token 1006: ' climb' (ID: 27049)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.2520992159843445
    2. 'cl' → logprob: -1.5020992755889893
    3. 'pass' → logprob: -9.00209903717041
    4. 'go' → logprob: -11.37709903717041
    5. '
' → logprob: -11.50209903717041
    6. 'jump' → logprob: -11.87709903717041
    7. ' climb' → logprob: -12.37709903717041
    8. ' cross' → logprob: -12.75209903717041
    9. '```' → logprob: -13.25209903717041
    10. '_cross' → logprob: -13.37709903717041

Token 1007: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12346035987138748
    2. '       ' → logprob: -2.373460292816162
    3. '#' → logprob: -4.748460292816162
    4. 'from' → logprob: -5.373460292816162
    5. 'import' → logprob: -5.748460292816162
    6. '
' → logprob: -6.123460292816162
    7. 'if' → logprob: -6.998460292816162
    8. ' if' → logprob: -7.123460292816162
    9. ' from' → logprob: -7.873460292816162
    10. ',' → logprob: -7.998460292816162

Token 1008: ' we' (ID: 581)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8185506463050842
    2. '#' → logprob: -1.0685505867004395
    3. 'dist' → logprob: -1.9435505867004395
    4. ' if' → logprob: -3.6935505867004395
    5. '   ' → logprob: -4.0685505867004395
    6. 'print' → logprob: -4.6935505867004395
    7. 'for' → logprob: -5.5685505867004395
    8. 'we' → logprob: -5.9435505867004395
    9. '       ' → logprob: -6.0685505867004395
    10. 'visited' → logprob: -6.3185505867004395

Token 1009: ' find' (ID: 1646)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.6003606915473938
    2. ' need' → logprob: -1.975360631942749
    3. 'must' → logprob: -2.225360631942749
    4. '   ' → logprob: -2.975360631942749
    5. 'continue' → logprob: -2.975360631942749
    6. ' must' → logprob: -3.225360631942749
    7. '#' → logprob: -3.600360631942749
    8. 'should' → logprob: -4.225360870361328
    9. ' should' → logprob: -5.475360870361328
    10. 'try' → logprob: -5.600360870361328

Token 1010: ' shortest' (ID: 70564)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.34879615902900696
    2. 'the' → logprob: -1.7237961292266846
    3. 'distance' → logprob: -3.0987961292266846
    4. ' distances' → logprob: -3.7237961292266846
    5. 'short' → logprob: -4.473796367645264
    6. 'min' → logprob: -4.598796367645264
    7. 'from' → logprob: -5.223796367645264
    8. 'minimal' → logprob: -5.598796367645264
    9. 'minimum' → logprob: -6.098796367645264
    10. 'a' → logprob: -6.098796367645264

Token 1011: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.07995685189962387
    2. '_path' → logprob: -2.5799567699432373
    3. 'distance' → logprob: -7.204957008361816
    4. ' path' → logprob: -8.579957008361816
    5. '_distance' → logprob: -9.829957008361816
    6. 'dist' → logprob: -10.954957008361816
    7. '-path' → logprob: -11.079957008361816
    8. '_paths' → logprob: -11.204957008361816
    9. '_dist' → logprob: -11.454957008361816
    10. '```' → logprob: -12.204957008361816

Token 1012: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.36626309156417847
    2. ' from' → logprob: -1.3662631511688232
    3. '   ' → logprob: -3.7412631511688232
    4. ' between' → logprob: -4.366262912750244
    5. ' in' → logprob: -4.991262912750244
    6. ')' → logprob: -5.991262912750244
    7. 'between' → logprob: -6.991262912750244
    8. '(' → logprob: -7.116262912750244
    9. 'in' → logprob: -7.616262912750244
    10. ' ' → logprob: -7.741262912750244

Token 1013: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.012298429384827614
    2. '-' → logprob: -5.137298583984375
    3. ' start' → logprob: -5.387298583984375
    4. 'the' → logprob: -7.137298583984375
    5. 'n' → logprob: -8.137298583984375
    6. '-start' → logprob: -8.512298583984375
    7. 'any' → logprob: -8.887298583984375
    8. '...' → logprob: -9.387298583984375
    9. '#' → logprob: -10.012298583984375
    10. '-n' → logprob: -10.137298583984375

Token 1014: ' to' (ID: 316)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.6753865480422974
    2. '_to' → logprob: -1.5503865480422974
    3. ' to' → logprob: -2.175386428833008
    4. '_' → logprob: -2.675386428833008
    5. '_c' → logprob: -3.300386428833008
    6. ')' → logprob: -3.425386428833008
    7. ',' → logprob: -4.425386428833008
    8. 'to' → logprob: -5.550386428833008
    9. ' ' → logprob: -5.800386428833008
    10. '_node' → logprob: -6.550386428833008

Token 1015: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.001170225441455841
    2. ' end' → logprob: -6.7511701583862305
    3. '```' → logprob: -17.001171112060547
    4. ' ' → logprob: -19.001171112060547
    5. '(end' → logprob: -19.251171112060547
    6. '
' → logprob: -19.626171112060547
    7. '-' → logprob: -19.626171112060547
    8. '`' → logprob: -20.501171112060547
    9. '[end' → logprob: -20.501171112060547
    10. 'n' → logprob: -20.876171112060547

Token 1016: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12707708775997162
    2. ':' → logprob: -3.252077102661133
    3. '
' → logprob: -3.627077102661133
    4. '       ' → logprob: -4.377077102661133
    5. ',' → logprob: -5.002077102661133
    6. ')' → logprob: -5.127077102661133
    7. ':
' → logprob: -5.752077102661133
    8. ' if' → logprob: -6.002077102661133
    9. ' ' → logprob: -6.377077102661133
    10. '_' → logprob: -6.502077102661133

Token 1017: ' this' (ID: 495)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.07203441858291626
    2. ' graph' → logprob: -2.6970343589782715
    3. 'the' → logprob: -6.4470343589782715
    4. ' the' → logprob: -8.19703483581543
    5. '(graph' → logprob: -8.94703483581543
    6. '	graph' → logprob: -9.69703483581543
    7. '```' → logprob: -11.19703483581543
    8. ')' → logprob: -12.07203483581543
    9. 'cir' → logprob: -12.19703483581543
    10. '`' → logprob: -12.32203483581543

Token 1018: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.8632767796516418
    2. '_graph' → logprob: -0.8632767796516418
    3. 'graph' → logprob: -1.863276720046997
    4. '(graph' → logprob: -7.988276958465576
    5. ' _' → logprob: -8.113276481628418
    6. '_' → logprob: -9.113276481628418
    7. '`' → logprob: -9.363276481628418
    8. '   ' → logprob: -9.363276481628418
    9. '_nodes' → logprob: -9.363276481628418
    10. '	graph' → logprob: -9.613276481628418

Token 1019: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3413601219654083
    2. '   ' → logprob: -1.966360092163086
    3. '
' → logprob: -3.341360092163086
    4. ',' → logprob: -3.466360092163086
    5. ')' → logprob: -3.966360092163086
    6. ' =' → logprob: -4.716360092163086
    7. '):' → logprob: -4.716360092163086
    8. ':
' → logprob: -4.966360092163086
    9. '.' → logprob: -4.966360092163086
    10. '()' → logprob: -5.841360092163086

Token 1020: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48580965399742126
    2. '   ' → logprob: -0.9858096837997437
    3. '
' → logprob: -5.235809803009033
    4. '<|end|>' → logprob: -5.485809803009033
    5. '<|end|>' → logprob: -7.360809803009033
    6. ')' → logprob: -8.360809326171875
    7. '    
' → logprob: -8.360809326171875
    8. '#' → logprob: -8.485809326171875
    9. '        
' → logprob: -8.485809326171875
    10. 'import' → logprob: -8.985809326171875

Token 1021: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33796945214271545
    2. '       ' → logprob: -1.337969422340393
    3. 'graph' → logprob: -4.9629693031311035
    4. 'start' → logprob: -5.2129693031311035
    5. '
' → logprob: -5.4629693031311035
    6. 'import' → logprob: -5.8379693031311035
    7. '#' (adapté à ' #') → logprob: -6.4629693031311035
    8. 'if' → logprob: -6.5879693031311035
    9. ' if' → logprob: -7.5879693031311035
    10. 'from' → logprob: -7.8379693031311035

Token 1022: ' Since' (ID: 12265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28148335218429565
    2. '       ' → logprob: -2.6564834117889404
    3. '#' → logprob: -2.9064834117889404
    4. 'start' → logprob: -3.0314834117889404
    5. 'from' → logprob: -3.2814834117889404
    6. 'if' → logprob: -4.406483173370361
    7. 'import' → logprob: -4.781483173370361
    8. 'dist' → logprob: -5.281483173370361
    9. '
' → logprob: -5.781483173370361
    10. 'graph' → logprob: -6.531483173370361

Token 1023: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.018740950152277946
    2. ' start' → logprob: -4.143741130828857
    3. 'the' → logprob: -6.768741130828857
    4. 'n' → logprob: -7.143741130828857
    5. 'len' → logprob: -8.0187406539917
    6. '#' → logprob: -9.3937406539917
    7. 'outside' → logprob: -9.8937406539917
    8. 'there' → logprob: -10.1437406539917
    9. '
' → logprob: -10.1437406539917
    10. 'they' → logprob: -10.5187406539917

Token 1024: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2317935824394226
    2. '_c' → logprob: -2.6067936420440674
    3. ',' → logprob: -3.3567936420440674
    4. '_' → logprob: -3.4817936420440674
    5. 'and' → logprob: -3.8567936420440674
    6. '_nodes' → logprob: -3.9817936420440674
    7. ')' → logprob: -4.231793403625488
    8. ' =' → logprob: -5.981793403625488
    9. '=' → logprob: -6.106793403625488
    10. ' is' → logprob: -6.606793403625488

Token 1025: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.008617054671049118
    2. ' end' → logprob: -4.758616924285889
    3. '(end' → logprob: -14.258617401123047
    4. ''end' → logprob: -14.633617401123047
    5. '`' → logprob: -15.008617401123047
    6. ' ' → logprob: -15.633617401123047
    7. '```' → logprob: -15.633617401123047
    8. '_end' → logprob: -15.758617401123047
    9. '[end' → logprob: -15.758617401123047
    10. '=end' → logprob: -16.008617401123047

Token 1026: ' have' (ID: 679)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.014238715171814
    2. '_nodes' → logprob: -1.014238715171814
    3. '_' → logprob: -2.3892388343811035
    4. ')' → logprob: -3.0142388343811035
    5. ' have' → logprob: -3.8892388343811035
    6. ' nodes' → logprob: -4.0142388343811035
    7. ',' → logprob: -4.0142388343811035
    8. ' _' → logprob: -4.3892388343811035
    9. '_c' → logprob: -4.8892388343811035
    10. 'are' → logprob: -4.8892388343811035

Token 1027: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.05540844798088074
    2. ' no' → logprob: -2.930408477783203
    3. '```' → logprob: -9.055408477783203
    4. '-' → logprob: -9.180408477783203
    5. 'neighbors' → logprob: -9.430408477783203
    6. '-no' → logprob: -9.430408477783203
    7. '_no' → logprob: -9.680408477783203
    8. '	no' → logprob: -10.430408477783203
    9. '   ' → logprob: -11.055408477783203
    10. 'not' → logprob: -12.555408477783203

Token 1028: ' circles' (ID: 45131)
  Prédit: 'connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connections' → logprob: -0.8998925685882568
    2. 'neighbors' → logprob: -1.1498925685882568
    3. ' connections' → logprob: -1.7748925685882568
    4. ' neighbors' → logprob: -2.524892568588257
    5. ' edges' → logprob: -4.399892807006836
    6. 'edges' → logprob: -4.524892807006836
    7. '_neighbors' → logprob: -7.149892807006836
    8. '_connections' → logprob: -7.399892807006836
    9. 'connected' → logprob: -8.024892807006836
    10. 'connection' → logprob: -8.024892807006836

Token 1029: ' connected' (ID: 12079)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6869754195213318
    2. ':' → logprob: -1.0619754791259766
    3. '_' → logprob: -2.8119754791259766
    4. '):' → logprob: -3.9369754791259766
    5. ')' → logprob: -4.311975479125977
    6. ',
' → logprob: -4.436975479125977
    7. ':
' → logprob: -4.936975479125977
    8. '   ' → logprob: -4.936975479125977
    9. '.' → logprob: -5.436975479125977
    10. ' and' → logprob: -5.561975479125977

Token 1030: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1894264966249466
    2. ':' → logprob: -2.0644264221191406
    3. ',
' → logprob: -3.8144264221191406
    4. '.' → logprob: -4.189426422119141
    5. ':
' → logprob: -5.814426422119141
    6. ')' → logprob: -6.314426422119141
    7. '
' → logprob: -7.189426422119141
    8. '_' → logprob: -7.189426422119141
    9. '   ' → logprob: -7.314426422119141
    10. '(' → logprob: -8.56442642211914

Token 1031: ' if' (ID: 538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3894020318984985
    2. 'continue' → logprob: -1.3894020318984985
    3. ' continue' → logprob: -1.6394020318984985
    4. 'pass' → logprob: -1.8894020318984985
    5. ' pass' → logprob: -3.389401912689209
    6. 'return' → logprob: -4.014401912689209
    7. ' if' → logprob: -4.139401912689209
    8. 'break' → logprob: -4.264401912689209
    9. ' the' → logprob: -4.639401912689209
    10. 'print' → logprob: -4.889401912689209

Token 1032: ' there' (ID: 1354)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.33330219984054565
    2. 'not' → logprob: -1.7083022594451904
    3. 'there' → logprob: -3.4583022594451904
    4. 'no' → logprob: -4.333302021026611
    5. 'they' → logprob: -4.583302021026611
    6. ' start' → logprob: -4.583302021026611
    7. ' not' → logprob: -4.833302021026611
    8. 'len' → logprob: -4.958302021026611
    9. 'the' → logprob: -5.333302021026611
    10. 'n' → logprob: -5.458302021026611

Token 1033: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.012873002327978611
    2. ' is' → logprob: -4.38787317276001
    3. 'are' → logprob: -8.262872695922852
    4. '```' → logprob: -10.012872695922852
    5. 'no' → logprob: -10.512872695922852
    6. ' are' → logprob: -11.637872695922852
    7. ''s' → logprob: -11.887872695922852
    8. '#' → logprob: -12.137872695922852
    9. 'exists' → logprob: -12.137872695922852
    10. 'continue' → logprob: -13.762872695922852

Token 1034: ' path' (ID: 3104)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.25436174869537354
    2. 'no' → logprob: -1.5043617486953735
    3. ' a' → logprob: -6.754361629486084
    4. 'a' → logprob: -7.254361629486084
    5. '```' → logprob: -7.754361629486084
    6. ' any' → logprob: -10.004362106323242
    7. 'any' → logprob: -10.254362106323242
    8. 'an' → logprob: -11.754362106323242
    9. 'n' → logprob: -11.754362106323242
    10. ' an' → logprob: -12.254362106323242

Token 1035: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.11888737231492996
    2. ' from' → logprob: -3.493887424468994
    3. '_to' → logprob: -4.243887424468994
    4. ',' → logprob: -4.493887424468994
    5. ' to' → logprob: -4.868887424468994
    6. '   ' → logprob: -4.993887424468994
    7. '_from' → logprob: -4.993887424468994
    8. ':' → logprob: -4.993887424468994
    9. ')' → logprob: -5.368887424468994
    10. '```' → logprob: -5.368887424468994

Token 1036: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.004575257655233145
    2. ' start' → logprob: -5.504575252532959
    3. '-' → logprob: -8.254575729370117
    4. 'end' → logprob: -9.129575729370117
    5. 'outside' → logprob: -9.379575729370117
    6. 'the' → logprob: -11.254575729370117
    7. '```' → logprob: -12.504575729370117
    8. '
' → logprob: -12.754575729370117
    9. 'n' → logprob: -12.754575729370117
    10. 'any' → logprob: -13.004575729370117

Token 1037: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6200099587440491
    2. '_to' → logprob: -1.4950098991394043
    3. ' to' → logprob: -1.8700098991394043
    4. ')' → logprob: -3.7450098991394043
    5. 'to' → logprob: -3.9950098991394043
    6. ',' → logprob: -4.495009899139404
    7. ' ' → logprob: -4.745009899139404
    8. '```' → logprob: -4.870009899139404
    9. ' _' → logprob: -5.370009899139404
    10. '
' → logprob: -6.370009899139404

Token 1038: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.01296103373169899
    2. ' end' → logprob: -4.762960910797119
    3. 'start' → logprob: -5.762960910797119
    4. '-' → logprob: -7.387960910797119
    5. 'outside' → logprob: -7.637960910797119
    6. 'circle' → logprob: -11.137961387634277
    7. ' outside' → logprob: -11.262961387634277
    8. ''end' → logprob: -11.387961387634277
    9. ' start' → logprob: -11.762961387634277
    10. 'cir' → logprob: -11.887961387634277

Token 1039: ' only' (ID: 1606)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35460323095321655
    2. ':
' → logprob: -2.6046032905578613
    3. ',
' → logprob: -2.9796032905578613
    4. ' to' → logprob: -3.1046032905578613
    5. ':' → logprob: -3.2296032905578613
    6. '   ' → logprob: -3.7296032905578613
    7. ' is' → logprob: -4.729603290557861
    8. '_' → logprob: -4.979603290557861
    9. '_to' → logprob: -5.104603290557861
    10. '```' → logprob: -5.104603290557861

Token 1040: ' via' (ID: 4493)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.257966160774231
    2. ':' → logprob: -2.1329660415649414
    3. ' through' → logprob: -2.1329660415649414
    4. '_' → logprob: -2.2579660415649414
    5. ' to' → logprob: -2.2579660415649414
    6. '   ' → logprob: -2.7579660415649414
    7. ':
' → logprob: -3.7579660415649414
    8. '
' → logprob: -4.132966041564941
    9. ' by' → logprob: -4.132966041564941
    10. '.' → logprob: -4.257966041564941

Token 1041: ' start' (ID: 1604)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.05915403738617897
    2. ' circles' → logprob: -3.1841540336608887
    3. ' graph' → logprob: -5.684154033660889
    4. 'graph' → logprob: -5.934154033660889
    5. 'existing' → logprob: -5.934154033660889
    6. ' existing' → logprob: -6.309154033660889
    7. ' the' → logprob: -6.684154033660889
    8. 'the' → logprob: -7.184154033660889
    9. 'outside' → logprob: -7.684154033660889
    10. ' nodes' → logprob: -7.809154033660889

Token 1042: '*' (ID: 9)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.4931979775428772
    2. '_' → logprob: -0.9931979775428772
    3. ')' → logprob: -5.118197917938232
    4. ',' → logprob: -5.493197917938232
    5. '_node' → logprob: -6.118197917938232
    6. ' _' → logprob: -6.493197917938232
    7. '_c' → logprob: -6.868197917938232
    8. ' and' → logprob: -7.243197917938232
    9. '_,' → logprob: -7.743197917938232
    10. '`' → logprob: -8.11819839477539

Token 1043: ' and' (ID: 326)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.6884542107582092
    2. '_nodes' → logprob: -1.0634541511535645
    3. ' and' → logprob: -2.1884541511535645
    4. 'and' → logprob: -3.9384541511535645
    5. ',' → logprob: -4.8134541511535645
    6. 'nodes' → logprob: -5.9384541511535645
    7. '`' → logprob: -6.3134541511535645
    8. ' or' → logprob: -6.3134541511535645
    9. '```' → logprob: -6.3134541511535645
    10. '_' → logprob: -7.0634541511535645

Token 1044: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.04325072094798088
    2. ' end' → logprob: -3.168250799179077
    3. '#' → logprob: -8.793251037597656
    4. '
' → logprob: -10.168251037597656
    5. '```' → logprob: -11.168251037597656
    6. '`' → logprob: -11.793251037597656
    7. ' ' → logprob: -11.918251037597656
    8. '-' → logprob: -12.168251037597656
    9. '   ' → logprob: -12.293251037597656
    10. 'graph' → logprob: -12.668251037597656

Token 1045: '*' (ID: 9)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.07552653551101685
    2. '_c' → logprob: -3.075526475906372
    3. '_' → logprob: -3.950526475906372
    4. '_points' → logprob: -5.325526714324951
    5. '```' → logprob: -7.575526714324951
    6. '`' → logprob: -7.950526714324951
    7. '_node' → logprob: -8.200526237487793
    8. ')' → logprob: -8.825526237487793
    9. ''_' → logprob: -9.075526237487793
    10. '_*' → logprob: -9.075526237487793

Token 1046: ' (' (ID: 350)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.10791794210672379
    2. '_c' → logprob: -2.7329180240631104
    3. '_' → logprob: -3.4829180240631104
    4. '_points' → logprob: -5.732917785644531
    5. ')' → logprob: -7.107917785644531
    6. ',' → logprob: -7.857917785644531
    7. '*' → logprob: -8.357917785644531
    8. '`' → logprob: -8.482917785644531
    9. ')_' → logprob: -8.607917785644531
    10. '```' → logprob: -8.732917785644531

Token 1047: 'outside' (ID: 141623)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22681824862957
    2. '_' → logprob: -2.476818323135376
    3. ' ' → logprob: -3.101818323135376
    4. ',' → logprob: -3.601818323135376
    5. ' )' → logprob: -3.976818323135376
    6. '),' → logprob: -5.351818084716797
    7. '-' → logprob: -5.726818084716797
    8. ''' → logprob: -5.976818084716797
    9. ' ,' → logprob: -5.976818084716797
    10. '):' → logprob: -6.726818084716797

Token 1048: '),' (ID: 936)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.04349350556731224
    2. ')' → logprob: -3.9184935092926025
    3. '_' → logprob: -4.168493270874023
    4. ',' → logprob: -6.168493270874023
    5. ')_' → logprob: -6.668493270874023
    6. '_node' → logprob: -6.793493270874023
    7. 'nodes' → logprob: -7.293493270874023
    8. '),' → logprob: -7.793493270874023
    9. '_points' → logprob: -8.043493270874023
    10. ' nodes' → logprob: -8.293493270874023

Token 1049: ' rat' (ID: 8908)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2552621066570282
    2. '_' → logprob: -2.3802621364593506
    3. ')' → logprob: -3.6302621364593506
    4. ',' → logprob: -3.6302621364593506
    5. ''' → logprob: -4.3802618980407715
    6. ' ' → logprob: -4.5052618980407715
    7. '
' → logprob: -4.7552618980407715
    8. ':
' → logprob: -5.0052618980407715
    9. '   ' → logprob: -5.0052618980407715
    10. '=' → logprob: -5.5052618980407715

Token 1050: ' cross' (ID: 8088)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.025638453662395477
    2. ' _' → logprob: -4.900638580322266
    3. '_can' → logprob: -5.525638580322266
    4. ')' → logprob: -6.025638580322266
    5. ' can' → logprob: -6.400638580322266
    6. ' ' → logprob: -7.025638580322266
    7. ' must' → logprob: -7.025638580322266
    8. ' needs' → logprob: -7.025638580322266
    9. '_
' → logprob: -7.150638580322266
    10. '
' → logprob: -7.150638580322266

Token 1051: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7280101180076599
    2. '_' → logprob: -1.3530101776123047
    3. 'es' → logprob: -1.6030101776123047
    4. 'ing' → logprob: -4.103010177612305
    5. '```' → logprob: -4.603010177612305
    6. ' ' → logprob: -5.103010177612305
    7. '_space' → logprob: -5.228010177612305
    8. '_s' → logprob: -5.728010177612305
    9. ' _' → logprob: -5.853010177612305
    10. 'space' → logprob: -6.353010177612305

Token 1052: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9946120381355286
    2. 'es' → logprob: -1.2446119785308838
    3. 'ing' → logprob: -2.244611978530884
    4. '_' → logprob: -2.744611978530884
    5. ' ' → logprob: -2.869611978530884
    6. 'space' → logprob: -3.369611978530884
    7. ' all' → logprob: -3.869611978530884
    8. 'all' → logprob: -4.744612216949463
    9. ' the' → logprob: -4.994612216949463
    10. ' space' → logprob: -5.369612216949463

Token 1053: ' walls' (ID: 20562)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7147702574729919
    2. '_nodes' → logprob: -0.9647702574729919
    3. ')' → logprob: -3.8397703170776367
    4. '
' → logprob: -3.9647703170776367
    5. '_tokens' → logprob: -3.9647703170776367
    6. '_points' → logprob: -4.214770317077637
    7. '_spaces' → logprob: -4.464770317077637
    8. '_c' → logprob: -4.714770317077637
    9. '_
' → logprob: -5.464770317077637
    10. '_wall' → logprob: -5.589770317077637

Token 1054: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2356865108013153
    2. '
' → logprob: -2.3606865406036377
    3. '       ' → logprob: -2.9856865406036377
    4. ')' → logprob: -3.7356865406036377
    5. ' if' → logprob: -4.860686302185059
    6. 'if' → logprob: -5.110686302185059
    7. ':' → logprob: -5.235686302185059
    8. '<|end|>' → logprob: -5.485686302185059
    9. '    
' → logprob: -5.735686302185059
    10. ')
' → logprob: -6.110686302185059

Token 1055: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7255997061729431
    2. '
' → logprob: -1.225599765777588
    3. '<|end|>' → logprob: -1.725599765777588
    4. ')' → logprob: -4.350599765777588
    5. '   ' → logprob: -4.725599765777588
    6. '        
' → logprob: -5.475599765777588
    7. '<|end|>' → logprob: -5.475599765777588
    8. '#' → logprob: -5.600599765777588
    9. ',' → logprob: -6.350599765777588
    10. ' if' → logprob: -6.725599765777588

Token 1056: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.234939843416214
    2. '
' → logprob: -1.7349398136138916
    3. '   ' → logprob: -4.484940052032471
    4. 'if' → logprob: -4.609940052032471
    5. '        
' → logprob: -4.984940052032471
    6. ' if' → logprob: -5.859940052032471
    7. '    
' → logprob: -7.734940052032471
    8. '#' (adapté à ' #') → logprob: -7.984940052032471
    9. 'graph' → logprob: -8.734939575195312
    10. '```' → logprob: -8.859939575195312

Token 1057: ' But' (ID: 3072)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.307830810546875
    2. '       ' → logprob: -1.932830810546875
    3. 'dist' → logprob: -3.182830810546875
    4. '   ' → logprob: -3.557830810546875
    5. ' if' → logprob: -4.307830810546875
    6. 'graph' → logprob: -4.432830810546875
    7. 'start' → logprob: -4.932830810546875
    8. '#' → logprob: -5.057830810546875
    9. 'from' → logprob: -5.307830810546875
    10. '
' → logprob: -5.682830810546875

Token 1058: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4137729406356812
    2. '#' → logprob: -1.7887729406356812
    3. ' the' → logprob: -1.7887729406356812
    4. ' start' → logprob: -2.2887730598449707
    5. 'start' → logprob: -2.7887730598449707
    6. 'if' → logprob: -2.9137730598449707
    7. 'the' → logprob: -3.2887730598449707
    8. '   ' → logprob: -3.5387730598449707
    9. '
' → logprob: -3.5387730598449707
    10. ' graph' → logprob: -3.7887730598449707

Token 1059: ' not' (ID: 625)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2667831778526306
    2. ' start' → logprob: -1.5167832374572754
    3. ' there' → logprob: -5.266783237457275
    4. 'there' → logprob: -6.016783237457275
    5. 'the' → logprob: -6.766783237457275
    6. ' the' → logprob: -6.766783237457275
    7. 'cir' → logprob: -6.891783237457275
    8. ' we' → logprob: -7.141783237457275
    9. 'len' → logprob: -7.141783237457275
    10. ' circles' → logprob: -8.391782760620117

Token 1060: ' connected' (ID: 12079)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3215428292751312
    2. '_' → logprob: -1.8215428590774536
    3. ',' → logprob: -2.946542739868164
    4. ':
' → logprob: -3.446542739868164
    5. ' _' → logprob: -4.946542739868164
    6. ' :' → logprob: -6.321542739868164
    7. '   ' → logprob: -6.321542739868164
    8. ')' → logprob: -6.571542739868164
    9. '_:' → logprob: -6.696542739868164
    10. '.' → logprob: -6.821542739868164

Token 1061: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3282546401023865
    2. ':' → logprob: -1.3282546997070312
    3. '.' → logprob: -5.578254699707031
    4. '_' → logprob: -6.078254699707031
    5. '   ' → logprob: -6.203254699707031
    6. ' to' → logprob: -6.328254699707031
    7. '       ' → logprob: -6.953254699707031
    8. ',
' → logprob: -7.203254699707031
    9. ':
' → logprob: -7.578254699707031
    10. '_to' → logprob: -7.703254699707031

Token 1062: ' need' (ID: 1309)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6953535676002502
    2. ' break' → logprob: -0.9453535676002502
    3. ' #' → logprob: -3.8203535079956055
    4. 'continue' → logprob: -3.9453535079956055
    5. '       ' → logprob: -4.0703535079956055
    6. '   ' → logprob: -4.4453535079956055
    7. ' graph' → logprob: -4.8203535079956055
    8. '#' → logprob: -5.0703535079956055
    9. 'break' → logprob: -5.1953535079956055
    10. ' if' → logprob: -5.4453535079956055

Token 1063: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0232801903039217
    2. 'to' → logprob: -3.773280143737793
    3. '_to' → logprob: -11.398280143737793
    4. ' ' → logprob: -12.273280143737793
    5. '   ' → logprob: -12.648280143737793
    6. ' ' → logprob: -12.898280143737793
    7. '
' → logprob: -13.398280143737793
    8. '```' → logprob: -13.773280143737793
    9. 'def' → logprob: -14.148280143737793
    10. ' more' → logprob: -14.273280143737793

Token 1064: ' check' (ID: 2371)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0031476542353630066
    2. 'pass' → logprob: -6.503147602081299
    3. 'cross' → logprob: -6.753147602081299
    4. 'return' → logprob: -8.628148078918457
    5. 'go' → logprob: -9.253148078918457
    6. 'output' → logprob: -9.628148078918457
    7. ' print' → logprob: -9.878148078918457
    8. 'find' → logprob: -10.503148078918457
    9. 'visit' → logprob: -11.128148078918457
    10. 'cl' → logprob: -12.003148078918457

Token 1065: ' via' (ID: 4493)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5747644305229187
    2. ' if' → logprob: -1.1997644901275635
    3. 'if' → logprob: -2.4497644901275635
    4. '   ' → logprob: -3.4497644901275635
    5. '
' → logprob: -5.074764251708984
    6. '```' → logprob: -5.699764251708984
    7. 'graph' → logprob: -6.824764251708984
    8. '        
' → logprob: -6.824764251708984
    9. ',' → logprob: -7.074764251708984
    10. 'dist' → logprob: -7.199764251708984

Token 1066: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.006094689015299082
    2. ' circles' → logprob: -5.381094455718994
    3. 'inter' → logprob: -7.506094455718994
    4. 'walls' → logprob: -8.131094932556152
    5. 'the' → logprob: -8.256094932556152
    6. 'graph' → logprob: -9.006094932556152
    7. 'circle' → logprob: -9.256094932556152
    8. 'any' → logprob: -10.256094932556152
    9. 'some' → logprob: -11.006094932556152
    10. ' the' → logprob: -11.131094932556152

Token 1067: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7063302993774414
    2. '_' → logprob: -2.2063302993774414
    3. '       ' → logprob: -2.2063302993774414
    4. ',' → logprob: -2.5813302993774414
    5. ':' → logprob: -2.8313302993774414
    6. ')' → logprob: -3.3313302993774414
    7. '_
' → logprob: -3.5813302993774414
    8. '.' → logprob: -4.331330299377441
    9. ':
' → logprob: -4.706330299377441
    10. ' =' → logprob: -4.956330299377441

Token 1068: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05278535187244415
    2. '   ' → logprob: -3.1777853965759277
    3. '
' → logprob: -5.302785396575928
    4. '        
' → logprob: -5.677785396575928
    5. '    
' → logprob: -7.427785396575928
    6. '```' → logprob: -8.42778491973877
    7. '<|end|>' → logprob: -9.05278491973877
    8. '#' → logprob: -9.05278491973877
    9. ',' → logprob: -9.67778491973877
    10. ' if' → logprob: -9.80278491973877

Token 1069: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11086156219244003
    2. '   ' → logprob: -2.6108615398406982
    3. 'if' → logprob: -3.8608615398406982
    4. '
' → logprob: -5.485861778259277
    5. '#' (adapté à ' #') → logprob: -5.985861778259277
    6. 'graph' → logprob: -6.485861778259277
    7. 'start' → logprob: -6.610861778259277
    8. 'import' → logprob: -8.485861778259277
    9. 'from' → logprob: -8.735861778259277
    10. '        
' → logprob: -8.860861778259277

Token 1070: ' Since' (ID: 12265)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7416521310806274
    2. 'if' → logprob: -0.9916521310806274
    3. '#' → logprob: -2.866652011871338
    4. '       ' → logprob: -3.491652011871338
    5. 'start' → logprob: -3.491652011871338
    6. 'from' → logprob: -4.366652011871338
    7. 'dist' → logprob: -4.741652011871338
    8. 'outside' → logprob: -5.116652011871338
    9. 'import' → logprob: -5.991652011871338
    10. '   ' → logprob: -6.366652011871338

Token 1071: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.050912678241729736
    2. ' start' → logprob: -3.050912618637085
    3. 'len' → logprob: -6.675912857055664
    4. 'outside' → logprob: -8.175912857055664
    5. '#' → logprob: -8.425912857055664
    6. 'not' → logprob: -9.050912857055664
    7. '(start' → logprob: -9.675912857055664
    8. 'n' → logprob: -9.675912857055664
    9. '(' → logprob: -10.050912857055664
    10. ' outside' → logprob: -10.050912857055664

Token 1072: ' and' (ID: 326)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.016579480841755867
    2. '_' → logprob: -4.141579627990723
    3. ',' → logprob: -9.016579627990723
    4. '_nodes' → logprob: -9.141579627990723
    5. '_points' → logprob: -9.516579627990723
    6. '_s' → logprob: -9.641579627990723
    7. '_,' → logprob: -10.141579627990723
    8. '_
' → logprob: -10.891579627990723
    9. ' =' → logprob: -11.016579627990723
    10. '=' → logprob: -11.016579627990723

Token 1073: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0015602122293785214
    2. 'outside' → logprob: -7.251560211181641
    3. ' end' → logprob: -7.501560211181641
    4. '#' → logprob: -9.12656021118164
    5. 'and' → logprob: -10.50156021118164
    6. '
' → logprob: -10.75156021118164
    7. ' outside' → logprob: -11.25156021118164
    8. '   ' → logprob: -11.37656021118164
    9. 'points' → logprob: -11.37656021118164
    10. 'no' → logprob: -11.37656021118164

Token 1074: ' outside' (ID: 7539)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.032685086131095886
    2. '_' → logprob: -4.282685279846191
    3. '_nodes' → logprob: -5.407685279846191
    4. ' are' → logprob: -5.407685279846191
    5. '_out' → logprob: -6.157685279846191
    6. '_points' → logprob: -6.282685279846191
    7. '_are' → logprob: -6.657685279846191
    8. ')' → logprob: -7.282685279846191
    9. ',' → logprob: -8.282685279846191
    10. ' _' → logprob: -8.407685279846191

Token 1075: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9563901424407959
    2. ':
' → logprob: -1.456390142440796
    3. '       ' → logprob: -1.706390142440796
    4. ',' → logprob: -2.456390142440796
    5. '   ' → logprob: -2.956390142440796
    6. '
' → logprob: -4.206390380859375
    7. ' if' → logprob: -4.456390380859375
    8. '_c' → logprob: -4.956390380859375
    9. '_' → logprob: -5.456390380859375
    10. 'if' → logprob: -5.706390380859375

Token 1076: ' rat' (ID: 8908)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.028035415336489677
    2. 'outside' → logprob: -5.278035640716553
    3. 'graph' → logprob: -5.528035640716553
    4. 'if' → logprob: -5.528035640716553
    5. '       ' → logprob: -5.653035640716553
    6. 'dist' → logprob: -5.778035640716553
    7. 'visited' → logprob: -5.778035640716553
    8. 'start' → logprob: -6.528035640716553
    9. 'all' → logprob: -7.153035640716553
    10. 'import' → logprob: -7.903035640716553

Token 1077: ' can' (ID: 665)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.7116028070449829
    2. ' needs' → logprob: -1.336602807044983
    3. 'must' → logprob: -2.5866026878356934
    4. 'needs' → logprob: -3.0866026878356934
    5. ' need' → logprob: -3.2116026878356934
    6. ' can' → logprob: -3.9616026878356934
    7. 'need' → logprob: -4.586602687835693
    8. ' has' → logprob: -4.961602687835693
    9. ' cannot' → logprob: -5.086602687835693
    10. '_' → logprob: -5.211602687835693

Token 1078: ' go' (ID: 810)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.3031980097293854
    2. 'move' → logprob: -1.928197979927063
    3. 'pass' → logprob: -2.6781980991363525
    4. ' go' → logprob: -3.9281980991363525
    5. 'walk' → logprob: -4.553197860717773
    6. 'cross' → logprob: -5.053197860717773
    7. ' move' → logprob: -5.053197860717773
    8. ' pass' → logprob: -6.803197860717773
    9. ' cross' → logprob: -7.428197860717773
    10. 'try' → logprob: -7.428197860717773

Token 1079: ' without' (ID: 2935)
  Prédit: 'around'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'around' → logprob: -0.11518934369087219
    2. 'through' → logprob: -2.74018931388855
    3. ' around' → logprob: -4.240189552307129
    4. 'outside' → logprob: -4.615189552307129
    5. 'any' → logprob: -4.865189552307129
    6. ' through' → logprob: -5.115189552307129
    7. ' anywhere' → logprob: -5.740189552307129
    8. 'every' → logprob: -7.490189552307129
    9. '#' → logprob: -7.615189552307129
    10. 'either' → logprob: -7.740189552307129

Token 1080: ' crossing' (ID: 50946)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.16852793097496033
    2. 'cross' → logprob: -2.043527841567993
    3. 'walls' → logprob: -3.793527841567993
    4. ' crossing' → logprob: -6.543528079986572
    5. ' climbing' → logprob: -7.168528079986572
    6. 'touch' → logprob: -8.418527603149414
    7. 'any' → logprob: -8.918527603149414
    8. ' walls' → logprob: -9.043527603149414
    9. 'going' → logprob: -9.043527603149414
    10. 'wall' → logprob: -10.168527603149414

Token 1081: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.05907886102795601
    2. 'any' → logprob: -4.309078693389893
    3. ' walls' → logprob: -4.559078693389893
    4. 'walls' → logprob: -4.684078693389893
    5. ' the' → logprob: -4.934078693389893
    6. '_' → logprob: -5.309078693389893
    7. '```' → logprob: -6.059078693389893
    8. 'the' → logprob: -6.184078693389893
    9. ' a' → logprob: -6.684078693389893
    10. ' all' → logprob: -7.434078693389893

Token 1082: ' circle' (ID: 22005)
  Prédit: 'walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walls' → logprob: -0.20331519842147827
    2. ' walls' → logprob: -2.203315258026123
    3. 'wall' → logprob: -2.953315258026123
    4. ' wall' → logprob: -4.453315258026123
    5. 'cir' → logprob: -5.328315258026123
    6. 'circle' → logprob: -5.953315258026123
    7. ' circle' → logprob: -7.328315258026123
    8. '_wall' → logprob: -7.453315258026123
    9. '#' → logprob: -8.078314781188965
    10. ' circles' → logprob: -8.203314781188965

Token 1083: ' unless' (ID: 12604)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.899657130241394
    2. '       ' → logprob: -1.524657130241394
    3. '<|end|>' → logprob: -1.524657130241394
    4. '   ' → logprob: -2.5246572494506836
    5. ' if' → logprob: -3.3996572494506836
    6. 'if' → logprob: -4.274657249450684
    7. ',' → logprob: -4.524657249450684
    8. '<|end|>' → logprob: -5.274657249450684
    9. '        
' → logprob: -5.649657249450684
    10. '.' → logprob: -6.149657249450684

Token 1084: ' walls' (ID: 20562)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.6665809154510498
    2. 'there' → logprob: -1.1665809154510498
    3. ' there' → logprob: -2.91658091545105
    4. 'the' → logprob: -3.29158091545105
    5. 'any' → logprob: -3.66658091545105
    6. 'some' → logprob: -3.91658091545105
    7. ' any' → logprob: -4.416581153869629
    8. ' the' → logprob: -5.041581153869629
    9. '#' → logprob: -5.291581153869629
    10. '```' → logprob: -5.541581153869629

Token 1085: ' build' (ID: 3024)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3857932090759277
    2. ' if' → logprob: -1.5107932090759277
    3. '   ' → logprob: -1.6357932090759277
    4. '
' → logprob: -2.2607932090759277
    5. ',' → logprob: -2.8857932090759277
    6. 'if' → logprob: -3.3857932090759277
    7. ':' → logprob: -3.7607932090759277
    8. ' and' → logprob: -4.260793209075928
    9. '.' → logprob: -4.385793209075928
    10. '=' → logprob: -4.385793209075928

Token 1086: ' chain' (ID: 13464)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6087902784347534
    2. '
' → logprob: -1.9837902784347534
    3. '<|end|>' → logprob: -2.608790397644043
    4. ' if' → logprob: -2.733790397644043
    5. '.' → logprob: -3.108790397644043
    6. '   ' → logprob: -3.233790397644043
    7. ',' → logprob: -3.483790397644043
    8. 'if' → logprob: -4.608790397644043
    9. '#' → logprob: -4.733790397644043
    10. '...' → logprob: -4.858790397644043

Token 1087: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28876638412475586
    2. 'if' → logprob: -2.038766384124756
    3. ' if' → logprob: -2.538766384124756
    4. '   ' → logprob: -4.288766384124756
    5. '
' → logprob: -4.413766384124756
    6. '#' → logprob: -5.038766384124756
    7. ',' → logprob: -6.163766384124756
    8. '        
' → logprob: -6.538766384124756
    9. ')' → logprob: -6.788766384124756
    10. 'def' → logprob: -6.913766384124756

Token 1088: ' them' (ID: 1373)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.037927865982055664
    2. 'the' → logprob: -4.162927627563477
    3. 'them' → logprob: -4.662927627563477
    4. ' start' → logprob: -4.787927627563477
    5. ' them' → logprob: -6.412927627563477
    6. 'points' → logprob: -6.912927627563477
    7. ')' → logprob: -7.912927627563477
    8. ' the' → logprob: -8.037927627563477
    9. 'outside' → logprob: -9.162927627563477
    10. 'end' → logprob: -9.162927627563477

Token 1089: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26012006402015686
    2. '
' → logprob: -2.010120153427124
    3. '   ' → logprob: -3.510120153427124
    4. 'if' → logprob: -3.635120153427124
    5. ' if' → logprob: -4.010119915008545
    6. '        
' → logprob: -4.510119915008545
    7. '<|end|>' → logprob: -5.260119915008545
    8. '    
' → logprob: -7.010119915008545
    9. '```' → logprob: -7.010119915008545
    10. '#' → logprob: -7.260119915008545

Token 1090: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005580098368227482
    2. '
' → logprob: -6.755579948425293
    3. 'if' → logprob: -6.755579948425293
    4. '        
' → logprob: -6.755579948425293
    5. '   ' → logprob: -7.130579948425293
    6. '<|end|>' → logprob: -7.505579948425293
    7. ' if' → logprob: -8.380579948425293
    8. '#' → logprob: -8.505579948425293
    9. '```' → logprob: -9.130579948425293
    10. 'If' → logprob: -10.755579948425293

Token 1091: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09791292995214462
    2. '
' → logprob: -2.8479130268096924
    3. 'if' → logprob: -4.472912788391113
    4. '#' (adapté à ' #') → logprob: -4.972912788391113
    5. '<|end|>' → logprob: -5.222912788391113
    6. '   ' → logprob: -5.472912788391113
    7. '        
' → logprob: -5.597912788391113
    8. '```' → logprob: -6.347912788391113
    9. ' if' → logprob: -6.847912788391113
    10. '...' → logprob: -8.722912788391113

Token 1092: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08390794694423676
    2. 'if' → logprob: -3.4589078426361084
    3. '#' → logprob: -4.3339080810546875
    4. 'dist' → logprob: -4.3339080810546875
    5. 'from' → logprob: -4.9589080810546875
    6. 'distance' → logprob: -5.5839080810546875
    7. '   ' → logprob: -5.8339080810546875
    8. 'visited' → logprob: -6.0839080810546875
    9. 'start' → logprob: -6.4589080810546875
    10. '        
' → logprob: -6.9589080810546875

Token 1093: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12198037654161453
    2. 'if' → logprob: -3.4969804286956787
    3. ' if' → logprob: -4.1219801902771
    4. 'the' → logprob: -4.3719801902771
    5. ' the' → logprob: -4.6219801902771
    6. '
' → logprob: -4.6219801902771
    7. 'graph' → logprob: -4.6219801902771
    8. ' #' → logprob: -5.6219801902771
    9. 'for' → logprob: -5.8719801902771
    10. '   ' → logprob: -5.8719801902771

Token 1094: ' question' (ID: 4928)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1518147736787796
    2. 'if' → logprob: -2.6518146991729736
    3. 'rat' → logprob: -3.9018146991729736
    4. ' rat' → logprob: -4.401814937591553
    5. ' if' → logprob: -5.151814937591553
    6. ' #' → logprob: -5.151814937591553
    7. 'outside' → logprob: -5.901814937591553
    8. 'distance' → logprob: -6.276814937591553
    9. '
' → logprob: -6.401814937591553
    10. 'for' → logprob: -6.526814937591553

Token 1095: ' says' (ID: 5003)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6902307868003845
    2. ':' → logprob: -1.9402308464050293
    3. '   ' → logprob: -2.6902308464050293
    4. ':
' → logprob: -2.9402308464050293
    5. ' is' → logprob: -2.9402308464050293
    6. '
' → logprob: -3.0652308464050293
    7. ' if' → logprob: -3.4402308464050293
    8. '=' → logprob: -3.8152308464050293
    9. ' =' → logprob: -3.8152308464050293
    10. '#' → logprob: -4.190230846405029

Token 1096: ':' (ID: 25)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.38681063055992126
    2. '       ' → logprob: -1.3868106603622437
    3. 'if' → logprob: -3.261810541152954
    4. 'the' → logprob: -4.761810779571533
    5. '
' → logprob: -4.886810779571533
    6. '   ' → logprob: -5.136810779571533
    7. 'rat' → logprob: -5.761810779571533
    8. 'def' → logprob: -6.261810779571533
    9. 'continue' → logprob: -6.761810779571533
    10. '```' → logprob: -7.011810779571533

Token 1097: ' walls' (ID: 20562)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19662903249263763
    2. '       ' → logprob: -2.696629047393799
    3. 'if' → logprob: -2.696629047393799
    4. 'continue' → logprob: -4.321629047393799
    5. '```' → logprob: -4.946629047393799
    6. '
' → logprob: -5.321629047393799
    7. 'pass' → logprob: -5.446629047393799
    8. 'start' → logprob: -5.946629047393799
    9. 'for' → logprob: -6.071629047393799
    10. 'return' → logprob: -6.196629047393799

Token 1098: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.860869288444519
    2. ' =' → logprob: -1.610869288444519
    3. '       ' → logprob: -1.860869288444519
    4. '=' → logprob: -2.9858694076538086
    5. '_' → logprob: -3.2358694076538086
    6. ' if' → logprob: -3.8608694076538086
    7. ')' → logprob: -3.9858694076538086
    8. ':' → logprob: -4.235869407653809
    9. ',' → logprob: -4.360869407653809
    10. '#' → logprob: -4.735869407653809

Token 1099: ' can' (ID: 665)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.12915149331092834
    2. ' separate' → logprob: -2.8791515827178955
    3. 'block' → logprob: -3.2541515827178955
    4. 'must' → logprob: -5.504151344299316
    5. 'cross' → logprob: -5.629151344299316
    6. ' block' → logprob: -6.004151344299316
    7. 'inter' → logprob: -6.254151344299316
    8. 'are' → logprob: -6.254151344299316
    9. 'touch' → logprob: -6.629151344299316
    10. 'divide' → logprob: -6.754151344299316

Token 1100: ' be' (ID: 413)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.9972419142723083
    2. 'block' → logprob: -0.9972419142723083
    3. ' block' → logprob: -2.247241973876953
    4. ' separate' → logprob: -2.497241973876953
    5. 'be' → logprob: -3.372241973876953
    6. ' be' → logprob: -4.497241973876953
    7. '```' → logprob: -4.872241973876953
    8. '
' → logprob: -5.872241973876953
    9. 'divide' → logprob: -5.872241973876953
    10. 'cross' → logprob: -6.372241973876953

Token 1101: ' built' (ID: 8113)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.4901863634586334
    2. 'built' → logprob: -2.3651864528656006
    3. 'placed' → logprob: -2.6151864528656006
    4. 'passed' → logprob: -2.8651864528656006
    5. ' crossed' → logprob: -3.3651864528656006
    6. '```' → logprob: -3.4901864528656006
    7. 'consider' → logprob: -3.7401864528656006
    8. 'used' → logprob: -4.1151862144470215
    9. 'represented' → logprob: -4.4901862144470215
    10. 'cl' → logprob: -5.2401862144470215

Token 1102: ' must' (ID: 2804)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8949609994888306
    2. '
' → logprob: -1.2699609994888306
    3. '   ' → logprob: -2.144960880279541
    4. ':' → logprob: -3.144960880279541
    5. ' if' → logprob: -3.394960880279541
    6. ':
' → logprob: -3.769960880279541
    7. '<|end|>' → logprob: -3.894960880279541
    8. ',' → logprob: -4.144960880279541
    9. '#' → logprob: -4.394960880279541
    10. ')' → logprob: -5.144960880279541

Token 1103: ' not' (ID: 625)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.9683906435966492
    2. ' be' → logprob: -1.843390703201294
    3. ' cross' → logprob: -2.093390703201294
    4. '#' → logprob: -2.718390703201294
    5. '```' → logprob: -3.218390703201294
    6. ' connected' → logprob: -3.593390703201294
    7. '
' → logprob: -3.718390703201294
    8. 'not' → logprob: -3.843390703201294
    9. ' crossed' → logprob: -3.843390703201294
    10. ' not' → logprob: -4.093390464782715

Token 1104: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.07188621163368225
    2. ' touch' → logprob: -2.8218863010406494
    3. 'cross' → logprob: -5.44688606262207
    4. '
' → logprob: -6.57188606262207
    5. 'be' → logprob: -6.69688606262207
    6. ' be' → logprob: -7.32188606262207
    7. ' overlap' → logprob: -7.69688606262207
    8. ' cross' → logprob: -7.82188606262207
    9. '```' → logprob: -8.07188606262207
    10. 'over' → logprob: -8.07188606262207

Token 1105: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03363117203116417
    2. '
' → logprob: -3.6586310863494873
    3. '#' → logprob: -6.658631324768066
    4. '        
' → logprob: -6.658631324768066
    5. '```' → logprob: -6.783631324768066
    6. 'if' → logprob: -7.283631324768066
    7. ' if' → logprob: -7.408631324768066
    8. ' or' → logprob: -7.408631324768066
    9. '   ' → logprob: -7.658631324768066
    10. ',' → logprob: -7.658631324768066

Token 1106: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.02892453223466873
    2. ' cross' → logprob: -3.7789244651794434
    3. 'touch' → logprob: -5.278924465179443
    4. ' touch' → logprob: -7.653924465179443
    5. '
' → logprob: -10.653924942016602
    6. '```' → logprob: -10.903924942016602
    7. '``' → logprob: -11.903924942016602
    8. '   ' → logprob: -11.903924942016602
    9. ' or' → logprob: -12.028924942016602
    10. ' overlap' → logprob: -12.153924942016602

Token 1107: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5865143537521362
    2. 'if' → logprob: -1.2115143537521362
    3. ' if' → logprob: -2.961514472961426
    4. '
' → logprob: -3.086514472961426
    5. '#' → logprob: -3.836514472961426
    6. '   ' → logprob: -4.336514472961426
    7. 'graph' → logprob: -4.961514472961426
    8. '```' → logprob: -5.961514472961426
    9. '        
' → logprob: -7.211514472961426
    10. 'start' → logprob: -7.461514472961426

Token 1108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.224789097905159
    2. '<|end|>' → logprob: -1.8497891426086426
    3. '
' → logprob: -3.8497891426086426
    4. '#' → logprob: -4.599789142608643
    5. '<|end|>' → logprob: -4.974789142608643
    6. '...' → logprob: -6.724789142608643
    7. ')' → logprob: -6.849789142608643
    8. '        
' → logprob: -6.974789142608643
    9. '   ' → logprob: -7.224789142608643
    10. '```' → logprob: -7.474789142608643

Token 1109: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03648917004466057
    2. '
' → logprob: -4.161489009857178
    3. '   ' → logprob: -4.911489009857178
    4. '        
' → logprob: -5.661489009857178
    5. '```' → logprob: -5.786489009857178
    6. ' if' → logprob: -6.036489009857178
    7. '#' (adapté à ' #') → logprob: -7.036489009857178
    8. 'if' → logprob: -7.036489009857178
    9. ',' → logprob: -8.286489486694336
    10. ')' → logprob: -8.411489486694336

Token 1110: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2085263729095459
    2. '#' → logprob: -1.833526372909546
    3. 'if' → logprob: -4.083526611328125
    4. '
' → logprob: -5.083526611328125
    5. '   ' → logprob: -6.458526611328125
    6. '```' → logprob: -7.208526611328125
    7. 'continue' → logprob: -7.208526611328125
    8. '        
' → logprob: -7.583526611328125
    9. ' if' → logprob: -7.958526611328125
    10. 'from' → logprob: -8.458526611328125

Token 1111: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.024348219856619835
    2. 'if' → logprob: -4.524348258972168
    3. 'graph' → logprob: -5.524348258972168
    4. 'dist' → logprob: -6.149348258972168
    5. 'continue' → logprob: -6.649348258972168
    6. '
' → logprob: -6.774348258972168
    7. 'start' → logprob: -7.149348258972168
    8. '       ' → logprob: -7.524348258972168
    9. 'for' → logprob: -7.524348258972168
    10. 'pass' → logprob: -7.774348258972168

Token 1112: ' need' (ID: 1309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5324956774711609
    2. 'continue' → logprob: -2.2824957370758057
    3. ' continue' → logprob: -2.7824957370758057
    4. ' need' → logprob: -2.7824957370758057
    5. '
' → logprob: -2.9074957370758057
    6. 'need' → logprob: -3.1574957370758057
    7. ' can' → logprob: -3.5324957370758057
    8. 'cannot' → logprob: -4.907495498657227
    9. ' #' → logprob: -5.032495498657227
    10. ' cannot' → logprob: -5.157495498657227

Token 1113: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.292985737323761
    2. ' to' → logprob: -1.4179856777191162
    3. '   ' → logprob: -5.417985916137695
    4. '```' → logprob: -5.542985916137695
    5. '       ' → logprob: -6.292985916137695
    6. 'continue' → logprob: -7.542985916137695
    7. '#' → logprob: -8.167985916137695
    8. 'def' → logprob: -8.292985916137695
    9. '           ' → logprob: -8.917985916137695
    10. 'return' → logprob: -9.667985916137695

Token 1114: ' find' (ID: 1646)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.47064492106437683
    2. '#' → logprob: -2.220644950866699
    3. 'find' → logprob: -2.345644950866699
    4. 'print' → logprob: -2.470644950866699
    5. 'connect' → logprob: -3.720644950866699
    6. 'consider' → logprob: -4.470644950866699
    7. 'check' → logprob: -4.595644950866699
    8. 'pass' → logprob: -4.720644950866699
    9. '```' → logprob: -5.220644950866699
    10. 'det' → logprob: -5.470644950866699

Token 1115: ' minimal' (ID: 19957)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.289715051651001
    2. 'the' → logprob: -1.414715051651001
    3. 'minimal' → logprob: -2.039715051651001
    4. 'all' → logprob: -2.164715051651001
    5. '#' → logprob: -2.914715051651001
    6. 'a' → logprob: -3.539715051651001
    7. 'components' → logprob: -3.789715051651001
    8. ' minimal' → logprob: -4.164714813232422
    9. 'minimum' → logprob: -4.164714813232422
    10. 'min' → logprob: -4.289714813232422

Token 1116: ' walls' (ID: 20562)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.19986550509929657
    2. 'number' → logprob: -2.0748655796051025
    3. 'distance' → logprob: -3.8248655796051025
    4. '_number' → logprob: -4.199865341186523
    5. ' distance' → logprob: -5.949865341186523
    6. '#' → logprob: -6.199865341186523
    7. '```' → logprob: -6.449865341186523
    8. 'walls' → logprob: -6.449865341186523
    9. '_distance' → logprob: -6.574865341186523
    10. '_' → logprob: -6.949865341186523

Token 1117: ' rat' (ID: 8908)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.6270216703414917
    2. ' to' → logprob: -1.5020216703414917
    3. '_' → logprob: -2.6270217895507812
    4. ' =' → logprob: -3.2520217895507812
    5. '_needed' → logprob: -3.5020217895507812
    6. '   ' → logprob: -3.7520217895507812
    7. ' that' → logprob: -4.627021789550781
    8. ')' → logprob: -4.752021789550781
    9. '```' → logprob: -4.752021789550781
    10. '#' → logprob: -4.877021789550781

Token 1118: ' must' (ID: 2804)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.6737470626831055
    2. '_' → logprob: -1.4237470626831055
    3. '_need' → logprob: -2.1737470626831055
    4. '_needed' → logprob: -2.9237470626831055
    5. '```' → logprob: -4.0487470626831055
    6. '_ne' → logprob: -4.7987470626831055
    7. ')' → logprob: -5.0487470626831055
    8. 'need' → logprob: -5.2987470626831055
    9. '   ' → logprob: -5.2987470626831055
    10. '_cl' → logprob: -5.2987470626831055

Token 1119: ' climb' (ID: 27049)
  Prédit: '_cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cross' → logprob: -0.2186438888311386
    2. 'cross' → logprob: -1.7186439037322998
    3. ' cross' → logprob: -4.843643665313721
    4. '_cl' → logprob: -4.968643665313721
    5. '_' → logprob: -7.218643665313721
    6. 'cl' → logprob: -7.343643665313721
    7. '   ' → logprob: -8.093644142150879
    8. '```' → logprob: -8.343644142150879
    9. '
' → logprob: -8.843644142150879
    10. '_to' → logprob: -10.093644142150879

Token 1120: ' over' (ID: 1072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.24173104763031
    2. '       ' → logprob: -1.36673104763031
    3. '
' → logprob: -1.49173104763031
    4. '#' → logprob: -2.3667311668395996
    5. ' if' → logprob: -3.1167311668395996
    6. 'if' → logprob: -3.6167311668395996
    7. ':
' → logprob: -4.1167311668396
    8. ':' → logprob: -4.6167311668396
    9. '```' → logprob: -4.8667311668396
    10. ',' → logprob: -5.1167311668396

Token 1121: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2945176064968109
    2. '#' → logprob: -1.7945176362991333
    3. '
' → logprob: -3.1695175170898438
    4. 'if' → logprob: -4.294517517089844
    5. '   ' → logprob: -4.794517517089844
    6. ' if' → logprob: -5.294517517089844
    7. '...' → logprob: -5.544517517089844
    8. 'def' → logprob: -5.794517517089844
    9. '```' → logprob: -5.794517517089844
    10. '<|end|>' → logprob: -5.919517517089844

Token 1122: ' optimal' (ID: 24174)
  Prédit: 'reading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reading' → logprob: -1.1964929103851318
    2. 'the' → logprob: -1.4464929103851318
    3. 'building' → logprob: -2.446492910385132
    4. '#' → logprob: -2.821492910385132
    5. '```' → logprob: -2.821492910385132
    6. 'connecting' → logprob: -3.321492910385132
    7. 'adding' → logprob: -3.446492910385132
    8. 'all' → logprob: -3.696492910385132
    9. 'checking' → logprob: -3.821492910385132
    10. 'cross' → logprob: -4.196493148803711

Token 1123: ' wall' (ID: 9688)
  Prédit: 'walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'walls' → logprob: -0.573948085308075
    2. 'placement' → logprob: -1.4489481449127197
    3. 'cir' → logprob: -3.0739481449127197
    4. 'wall' → logprob: -3.3239481449127197
    5. ' placement' → logprob: -3.8239481449127197
    6. 'solution' → logprob: -4.073947906494141
    7. 'circle' → logprob: -4.448947906494141
    8. 'arr' → logprob: -4.573947906494141
    9. 'path' → logprob: -5.198947906494141
    10. '   ' → logprob: -5.198947906494141

Token 1124: ' building' (ID: 6282)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3383637070655823
    2. '   ' → logprob: -2.3383636474609375
    3. '       ' → logprob: -2.3383636474609375
    4. '```' → logprob: -3.9633636474609375
    5. '_lines' → logprob: -4.0883636474609375
    6. ')' → logprob: -4.3383636474609375
    7. ':' → logprob: -4.9633636474609375
    8. '_' → logprob: -5.2133636474609375
    9. ':
' → logprob: -5.8383636474609375
    10. '.' → logprob: -5.8383636474609375

Token 1125: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5440900325775146
    2. '#' → logprob: -1.2940900325775146
    3. '
' → logprob: -3.2940900325775146
    4. '   ' → logprob: -3.9190900325775146
    5. '        
' → logprob: -4.044090270996094
    6. '<|end|>' → logprob: -4.169090270996094
    7. '...' → logprob: -4.419090270996094
    8. 'def' → logprob: -4.419090270996094
    9. 'if' → logprob: -5.169090270996094
    10. ' if' → logprob: -5.419090270996094

Token 1126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12545955181121826
    2. '#' → logprob: -2.625459671020508
    3. '
' → logprob: -4.625459671020508
    4. '```' → logprob: -4.625459671020508
    5. 'if' → logprob: -4.875459671020508
    6. '   ' → logprob: -5.250459671020508
    7. '        
' → logprob: -5.750459671020508
    8. ' if' → logprob: -6.250459671020508
    9. '...' → logprob: -6.875459671020508
    10. 'def' → logprob: -7.000459671020508

Token 1127: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04333416745066643
    2. '#' (adapté à ' #') → logprob: -3.2933342456817627
    3. '   ' → logprob: -6.168334007263184
    4. '        
' → logprob: -6.918334007263184
    5. '
' → logprob: -7.543334007263184
    6. '```' → logprob: -7.543334007263184
    7. 'graph' → logprob: -7.793334007263184
    8. 'if' → logprob: -8.043334007263184
    9. ' #' → logprob: -9.043334007263184
    10. 'def' → logprob: -10.418334007263184

Token 1128: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9633292555809021
    2. 'dist' → logprob: -1.9633293151855469
    3. 'if' → logprob: -2.088329315185547
    4. 'visited' → logprob: -2.213329315185547
    5. '       ' → logprob: -2.588329315185547
    6. 'graph' → logprob: -2.588329315185547
    7. 'start' → logprob: -3.463329315185547
    8. 'from' → logprob: -3.838329315185547
    9. 'distance' → logprob: -3.963329315185547
    10. 'import' → logprob: -5.088329315185547

Token 1129: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18165934085845947
    2. 'graph' → logprob: -2.93165922164917
    3. 'start' → logprob: -3.68165922164917
    4. 'if' → logprob: -3.68165922164917
    5. '   ' → logprob: -4.55665922164917
    6. 'for' → logprob: -4.80665922164917
    7. 'def' → logprob: -5.05665922164917
    8. 'outside' → logprob: -5.18165922164917
    9. 'dist' → logprob: -5.55665922164917
    10. 'distance' → logprob: -5.55665922164917

Token 1130: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8545248508453369
    2. '       ' → logprob: -1.229524850845337
    3. '=' → logprob: -2.604524850845337
    4. ' =' → logprob: -2.979524850845337
    5. ':
' → logprob: -3.604524850845337
    6. '   ' → logprob: -3.604524850845337
    7. '#' → logprob: -3.854524850845337
    8. ',' → logprob: -4.229524612426758
    9. '
' → logprob: -4.604524612426758
    10. '):' → logprob: -5.104524612426758

Token 1131: ' minimal' (ID: 19957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6232404708862305
    2. 'def' → logprob: -1.9982404708862305
    3. '```' → logprob: -1.9982404708862305
    4. '#' → logprob: -2.3732404708862305
    5. ':' → logprob: -2.3732404708862305
    6. ')' → logprob: -2.9982404708862305
    7. '   ' → logprob: -2.9982404708862305
    8. 'graph' → logprob: -3.1232404708862305
    9. 'continue' → logprob: -3.1232404708862305
    10. 'n' → logprob: -3.6232404708862305

Token 1132: ' number' (ID: 2086)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7965515851974487
    2. '   ' → logprob: -1.9215515851974487
    3. 'walls' → logprob: -2.1715517044067383
    4. 'distance' → logprob: -2.2965517044067383
    5. ' walls' → logprob: -2.7965517044067383
    6. 'dist' → logprob: -2.9215517044067383
    7. '_c' → logprob: -3.1715517044067383
    8. 'number' → logprob: -3.5465517044067383
    9. ' number' → logprob: -3.5465517044067383
    10. '_distance' → logprob: -3.7965517044067383

Token 1133: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1096000671386719
    2. '_' → logprob: -1.9846000671386719
    3. '       ' → logprob: -1.9846000671386719
    4. ' =' → logprob: -2.109600067138672
    5. '   ' → logprob: -2.984600067138672
    6. ' ' → logprob: -3.234600067138672
    7. '=' → logprob: -3.359600067138672
    8. '           ' → logprob: -3.609600067138672
    9. '_tokens' → logprob: -4.859600067138672
    10. '        ' → logprob: -5.109600067138672

Token 1134: ' walls' (ID: 20562)
  Prédit: 'walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walls' → logprob: -0.029382336884737015
    2. 'cir' → logprob: -4.029382228851318
    3. ' walls' → logprob: -4.904382228851318
    4. 'steps' → logprob: -6.529382228851318
    5. ' circles' → logprob: -8.154382705688477
    6. 'tokens' → logprob: -8.279382705688477
    7. '#' → logprob: -8.404382705688477
    8. 'lines' → logprob: -8.404382705688477
    9. '```' → logprob: -8.404382705688477
    10. 'cross' → logprob: -8.904382705688477

Token 1135: ' rat' (ID: 8908)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5590240955352783
    2. '   ' → logprob: -2.0590240955352783
    3. '#' → logprob: -2.1840240955352783
    4. '
' → logprob: -2.9340240955352783
    5. ':' → logprob: -3.3090240955352783
    6. ':
' → logprob: -4.059023857116699
    7. ' =' → logprob: -4.434023857116699
    8. 'def' → logprob: -4.559023857116699
    9. '```' → logprob: -4.809023857116699
    10. ' if' → logprob: -5.059023857116699

Token 1136: ' must' (ID: 2804)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.8632746338844299
    2. ' must' → logprob: -1.9882745742797852
    3. 'must' → logprob: -2.238274574279785
    4. '   ' → logprob: -2.488274574279785
    5. ' to' → logprob: -2.488274574279785
    6. '_' → logprob: -3.738274574279785
    7. 's' → logprob: -4.113274574279785
    8. '_needed' → logprob: -4.238274574279785
    9. ' =' → logprob: -4.363274574279785
    10. 'to' → logprob: -4.488274574279785

Token 1137: ' climb' (ID: 27049)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.8605490922927856
    2. '_cross' → logprob: -1.4855490922927856
    3. ' cross' → logprob: -1.9855490922927856
    4. '_cl' → logprob: -2.360548973083496
    5. 'cl' → logprob: -2.985548973083496
    6. ' climb' → logprob: -3.485548973083496
    7. '_' → logprob: -3.735548973083496
    8. '
' → logprob: -5.360548973083496
    9. '   ' → logprob: -6.360548973083496
    10. ' ' → logprob: -6.735548973083496

Token 1138: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0333701372146606
    2. '#' → logprob: -1.6583701372146606
    3. '       ' → logprob: -1.7833701372146606
    4. '
' → logprob: -2.283370018005371
    5. 'if' → logprob: -2.783370018005371
    6. ' if' → logprob: -3.033370018005371
    7. 'def' → logprob: -4.408370018005371
    8. '```' → logprob: -4.533370018005371
    9. ')' → logprob: -4.908370018005371
    10. ':' → logprob: -5.033370018005371

Token 1139: ' reach' (ID: 7627)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.737447202205658
    2. 'pass' → logprob: -0.987447202205658
    3. 'reach' → logprob: -2.4874472618103027
    4. 'go' → logprob: -3.6124472618103027
    5. 'escape' → logprob: -4.112447261810303
    6. '```' → logprob: -5.237447261810303
    7. ' cross' → logprob: -5.737447261810303
    8. '
' → logprob: -5.737447261810303
    9. 'get' → logprob: -5.987447261810303
    10. 'def' → logprob: -6.737447261810303

Token 1140: ' from' (ID: 591)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.17208479344844818
    2. 'the' → logprob: -1.9220848083496094
    3. ' the' → logprob: -5.922084808349609
    4. 'xt' → logprob: -6.422084808349609
    5. ' end' → logprob: -6.547084808349609
    6. 'target' → logprob: -6.672084808349609
    7. 'destination' → logprob: -6.797084808349609
    8. 'from' → logprob: -6.922084808349609
    9. 'fish' → logprob: -7.047084808349609
    10. '```' → logprob: -7.422084808349609

Token 1141: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2813173532485962
    2. ' start' → logprob: -1.4063173532485962
    3. ' the' → logprob: -10.281317710876465
    4. 'the' → logprob: -10.781317710876465
    5. '```' → logprob: -10.781317710876465
    6. ' ' → logprob: -11.281317710876465
    7. 'outside' → logprob: -11.531317710876465
    8. 'point' → logprob: -11.781317710876465
    9. 's' → logprob: -11.781317710876465
    10. ' point' → logprob: -11.906317710876465

Token 1142: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.11320741474628448
    2. ' point' → logprob: -3.9882073402404785
    3. ',' → logprob: -4.1132073402404785
    4. '   ' → logprob: -4.2382073402404785
    5. '       ' → logprob: -4.2382073402404785
    6. 'to' → logprob: -4.7382073402404785
    7. '```' → logprob: -4.9882073402404785
    8. '_points' → logprob: -5.4882073402404785
    9. '_to' → logprob: -5.6132073402404785
    10. ' ' → logprob: -5.7382073402404785

Token 1143: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0007310202927328646
    2. ' end' → logprob: -7.250730991363525
    3. '```' → logprob: -11.625731468200684
    4. '
' → logprob: -12.250731468200684
    5. 'to' → logprob: -13.500731468200684
    6. ' ' → logprob: -13.750731468200684
    7. '#' → logprob: -14.125731468200684
    8. 'the' → logprob: -14.625731468200684
    9. ' to' → logprob: -14.750731468200684
    10. 'from' → logprob: -15.000731468200684

Token 1144: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2762098014354706
    2. '#' → logprob: -1.651209831237793
    3. 'if' → logprob: -3.651209831237793
    4. '   ' → logprob: -5.151209831237793
    5. 'start' → logprob: -5.901209831237793
    6. 'graph' → logprob: -6.026209831237793
    7. 'from' → logprob: -6.026209831237793
    8. 'def' → logprob: -6.276209831237793
    9. '        
' → logprob: -6.401209831237793
    10. '
' → logprob: -6.526209831237793

Token 1145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04920366406440735
    2. '   ' → logprob: -4.049203872680664
    3. '
' → logprob: -4.549203872680664
    4. '        
' → logprob: -4.799203872680664
    5. '#' → logprob: -5.549203872680664
    6. 'if' → logprob: -5.924203872680664
    7. '```' → logprob: -6.049203872680664
    8. '<|end|>' → logprob: -7.299203872680664
    9. ' if' → logprob: -7.424203872680664
    10. '    
' → logprob: -7.674203872680664

Token 1146: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.9179992079734802
    2. '       ' → logprob: -0.9179992079734802
    3. 'if' → logprob: -2.417999267578125
    4. 'graph' → logprob: -3.417999267578125
    5. 'dist' → logprob: -3.667999267578125
    6. 'start' → logprob: -3.792999267578125
    7. 'distance' → logprob: -4.917999267578125
    8. 'from' → logprob: -5.042999267578125
    9. 'visited' → logprob: -5.292999267578125
    10. '        
' → logprob: -6.167999267578125

Token 1147: ' Idea' (ID: 74190)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2360424995422363
    2. '#' → logprob: -1.4860424995422363
    3. 'start' → logprob: -1.6110424995422363
    4. '       ' → logprob: -1.7360424995422363
    5. 'visited' → logprob: -3.3610424995422363
    6. 'outside' → logprob: -3.4860424995422363
    7. 'dist' → logprob: -4.236042499542236
    8. 'graph' → logprob: -4.611042499542236
    9. 'outer' → logprob: -6.111042499542236
    10. 'connected' → logprob: -6.236042499542236

Token 1148: ':' (ID: 25)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4428956508636475
    2. '   ' → logprob: -1.6928956508636475
    3. '       ' → logprob: -1.8178956508636475
    4. ' =' → logprob: -2.3178956508636475
    5. 'graph' → logprob: -2.8178956508636475
    6. ':' → logprob: -2.9428956508636475
    7. 'dist' → logprob: -3.0678956508636475
    8. ':
' → logprob: -3.3178956508636475
    9. '=' → logprob: -3.5678956508636475
    10. '
' → logprob: -3.6928956508636475

Token 1149: ' model' (ID: 2359)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27628642320632935
    2. 'start' → logprob: -3.0262863636016846
    3. 'outside' → logprob: -3.0262863636016846
    4. '       ' → logprob: -3.1512863636016846
    5. 'visited' → logprob: -3.4012863636016846
    6. 'if' → logprob: -4.151286602020264
    7. 'from' → logprob: -4.276286602020264
    8. 'walls' → logprob: -5.401286602020264
    9. 'outer' → logprob: -5.776286602020264
    10. 'import' → logprob: -6.026286602020264

Token 1150: ' the' (ID: 290)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5610907077789307
    2. ' graph' → logprob: -1.1860907077789307
    3. '   ' → logprob: -3.1860907077789307
    4. ' =' → logprob: -4.436090469360352
    5. '       ' → logprob: -4.561090469360352
    6. '```' → logprob: -4.811090469360352
    7. '#' → logprob: -5.436090469360352
    8. ':' → logprob: -5.561090469360352
    9. 'distance' → logprob: -5.811090469360352
    10. 'def' → logprob: -5.811090469360352

Token 1151: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6471145153045654
    2. 'outside' → logprob: -2.0221145153045654
    3. 'points' → logprob: -3.3971145153045654
    4. 'graph' → logprob: -3.5221145153045654
    5. ' #' → logprob: -3.7721145153045654
    6. '   ' → logprob: -4.0221147537231445
    7. 'dist' → logprob: -4.1471147537231445
    8. 'layers' → logprob: -4.1471147537231445
    9. 'union' → logprob: -4.2721147537231445
    10. 'from' → logprob: -4.2721147537231445

Token 1152: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5611444115638733
    2. '#' → logprob: -1.9361443519592285
    3. '   ' → logprob: -2.3111443519592285
    4. '
' → logprob: -3.0611443519592285
    5. ':' → logprob: -3.8111443519592285
    6. 'graph' → logprob: -3.8111443519592285
    7. ':
' → logprob: -3.9361443519592285
    8. ' graph' → logprob: -4.1861443519592285
    9. ' if' → logprob: -4.6861443519592285
    10. ' #' → logprob: -5.3111443519592285

Token 1153: ' finding' (ID: 12129)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5276342034339905
    2. 'a' → logprob: -1.7776341438293457
    3. '#' → logprob: -2.2776341438293457
    4. 'two' → logprob: -3.5276341438293457
    5. ' a' → logprob: -3.6526341438293457
    6. '```' → logprob: -3.6526341438293457
    7. 'def' → logprob: -4.652634143829346
    8. '   ' → logprob: -5.152634143829346
    9. ' two' → logprob: -5.277634143829346
    10. 'union' → logprob: -5.277634143829346

Token 1154: ' minimal' (ID: 19957)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.4409862756729126
    2. 'a' → logprob: -1.5659862756729126
    3. 'b' → logprob: -1.6909862756729126
    4. 'all' → logprob: -2.190986156463623
    5. 'two' → logprob: -2.440986156463623
    6. ' a' → logprob: -3.565986156463623
    7. ' two' → logprob: -3.690986156463623
    8. '```' → logprob: -3.690986156463623
    9. 'layers' → logprob: -4.190986156463623
    10. ' all' → logprob: -4.190986156463623

Token 1155: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.5540814995765686
    2. 'number' → logprob: -1.4290814399719238
    3. 'distance' → logprob: -2.554081439971924
    4. 'cut' → logprob: -3.304081439971924
    5. 'cuts' → logprob: -3.804081439971924
    6. ' distance' → logprob: -5.054081439971924
    7. '```' → logprob: -5.179081439971924
    8. ' cut' → logprob: -5.304081439971924
    9. 'dist' → logprob: -5.679081439971924
    10. 'steps' → logprob: -5.679081439971924

Token 1156: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6635268926620483
    2. '_of' → logprob: -1.1635268926620483
    3. 'of' → logprob: -1.9135268926620483
    4. '_tokens' → logprob: -4.663527011871338
    5. '_' → logprob: -5.163527011871338
    6. '   ' → logprob: -6.163527011871338
    7. '       ' → logprob: -7.038527011871338
    8. 'o' → logprob: -7.163527011871338
    9. '
' → logprob: -7.163527011871338
    10. ' _' → logprob: -7.288527011871338

Token 1157: ' walls' (ID: 20562)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.21452653408050537
    2. 'walls' → logprob: -1.8395265340805054
    3. ' circles' → logprob: -4.089526653289795
    4. ' walls' → logprob: -5.839526653289795
    5. 'cuts' → logprob: -6.089526653289795
    6. 'tokens' → logprob: -6.214526653289795
    7. 'layers' → logprob: -6.214526653289795
    8. 'sets' → logprob: -6.589526653289795
    9. ' sets' → logprob: -6.964526653289795
    10. 'c' → logprob: -7.214526653289795

Token 1158: ' to' (ID: 316)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.2630828022956848
    2. ' to' → logprob: -2.26308274269104
    3. '   ' → logprob: -2.76308274269104
    4. '_needed' → logprob: -4.138082981109619
    5. '```' → logprob: -4.763082981109619
    6. '_' → logprob: -5.013082981109619
    7. '       ' → logprob: -5.138082981109619
    8. ' =' → logprob: -5.638082981109619
    9. 'to' → logprob: -5.638082981109619
    10. ' that' → logprob: -5.638082981109619

Token 1159: ' be' (ID: 413)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.012807926163077354
    2. ' cross' → logprob: -5.387807846069336
    3. 'cl' → logprob: -5.762807846069336
    4. 'pass' → logprob: -6.262807846069336
    5. 'cut' → logprob: -6.387807846069336
    6. 'block' → logprob: -7.387807846069336
    7. '_cross' → logprob: -8.387807846069336
    8. '
' → logprob: -8.887807846069336
    9. '```' → logprob: -9.262807846069336
    10. 'break' → logprob: -10.262807846069336

Token 1160: ' crossed' (ID: 47928)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.033930711448192596
    2. ' crossed' → logprob: -4.033930778503418
    3. 'cl' → logprob: -4.283930778503418
    4. '```' → logprob: -7.408930778503418
    5. '_cross' → logprob: -7.658930778503418
    6. 'passed' → logprob: -8.533930778503418
    7. ' cross' → logprob: -8.658930778503418
    8. ' climbed' → logprob: -8.783930778503418
    9. '-cross' → logprob: -9.283930778503418
    10. '
' → logprob: -9.408930778503418

Token 1161: ' when' (ID: 1261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6714887022972107
    2. '   ' → logprob: -2.2964887619018555
    3. ':' → logprob: -2.6714887619018555
    4. ')' → logprob: -2.7964887619018555
    5. '=' → logprob: -3.1714887619018555
    6. ',' → logprob: -3.2964887619018555
    7. ' =' → logprob: -3.2964887619018555
    8. ' if' → logprob: -3.2964887619018555
    9. '
' → logprob: -3.6714887619018555
    10. ':
' → logprob: -4.0464887619018555

Token 1162: ' going' (ID: 2966)
  Prédit: 'moving'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moving' → logprob: -1.0131913423538208
    2. 'going' → logprob: -1.1381913423538208
    3. 'passing' → logprob: -2.1381912231445312
    4. 'travel' → logprob: -3.3881912231445312
    5. 'cross' → logprob: -3.3881912231445312
    6. 'enter' → logprob: -3.6381912231445312
    7. 'rat' → logprob: -4.138191223144531
    8. 'the' → logprob: -4.138191223144531
    9. 'trav' → logprob: -4.388191223144531
    10. 'trying' → logprob: -4.638191223144531

Token 1163: ' from' (ID: 591)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.32297223806381226
    2. ' through' → logprob: -1.322972297668457
    3. 'from' → logprob: -4.697972297668457
    4. '   ' → logprob: -8.322972297668457
    5. ' from' → logprob: -9.447972297668457
    6. 'ac' → logprob: -10.197972297668457
    7. '=' → logprob: -10.197972297668457
    8. '```' → logprob: -10.322972297668457
    9. ' ' → logprob: -10.572972297668457
    10. '#' → logprob: -10.947972297668457

Token 1164: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1297195702791214
    2. ' start' → logprob: -2.1297194957733154
    3. 'outside' → logprob: -6.5047197341918945
    4. 'the' → logprob: -7.7547197341918945
    5. ' outside' → logprob: -8.129719734191895
    6. ' the' → logprob: -8.879719734191895
    7. 'circle' → logprob: -9.004719734191895
    8. '(start' → logprob: -9.504719734191895
    9. 'point' → logprob: -9.879719734191895
    10. ')' → logprob: -10.629719734191895

Token 1165: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.19370931386947632
    2. '_to' → logprob: -2.943709373474121
    3. '_' → logprob: -3.068709373474121
    4. ' ' → logprob: -4.068709373474121
    5. '   ' → logprob: -4.068709373474121
    6. 'to' → logprob: -4.568709373474121
    7. ',' → logprob: -4.943709373474121
    8. '```' → logprob: -5.068709373474121
    9. ')' → logprob: -5.568709373474121
    10. '_nodes' → logprob: -5.818709373474121

Token 1166: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.004079589620232582
    2. ' end' → logprob: -5.504079818725586
    3. '
' → logprob: -15.629079818725586
    4. '=end' → logprob: -15.754079818725586
    5. '_end' → logprob: -16.004079818725586
    6. 'the' → logprob: -16.004079818725586
    7. '```' → logprob: -16.504079818725586
    8. ' ' → logprob: -16.504079818725586
    9. 'next' → logprob: -16.629079818725586
    10. ' the' → logprob: -16.879079818725586

Token 1167: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14522527158260345
    2. '   ' → logprob: -3.5202252864837646
    3. '#' → logprob: -3.7702252864837646
    4. '
' → logprob: -3.7702252864837646
    5. '<|end|>' → logprob: -4.2702250480651855
    6. ',' → logprob: -4.5202250480651855
    7. ')' → logprob: -4.8952250480651855
    8. '.' → logprob: -5.6452250480651855
    9. ':
' → logprob: -5.7702250480651855
    10. ':' → logprob: -5.7702250480651855

Token 1168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20324639976024628
    2. '#' → logprob: -2.0782463550567627
    3. 'if' → logprob: -3.8282463550567627
    4. 'graph' → logprob: -4.703246593475342
    5. '```' → logprob: -5.078246593475342
    6. '
' → logprob: -5.328246593475342
    7. '   ' → logprob: -5.703246593475342
    8. ' if' → logprob: -5.828246593475342
    9. '        
' → logprob: -6.203246593475342
    10. 'dist' → logprob: -6.328246593475342

Token 1169: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12059859931468964
    2. '#' (adapté à ' #') → logprob: -2.495598554611206
    3. '   ' → logprob: -4.245598793029785
    4. '
' → logprob: -5.120598793029785
    5. 'if' → logprob: -5.995598793029785
    6. '```' → logprob: -6.370598793029785
    7. 'graph' → logprob: -6.620598793029785
    8. '        
' → logprob: -6.620598793029785
    9. ' if' → logprob: -6.745598793029785
    10. ' #' → logprob: -7.495598793029785

Token 1170: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.227596253156662
    2. '#' → logprob: -2.1025962829589844
    3. 'if' → logprob: -4.102596282958984
    4. 'dist' → logprob: -4.102596282958984
    5. 'from' → logprob: -4.352596282958984
    6. '   ' → logprob: -4.602596282958984
    7. 'start' → logprob: -5.352596282958984
    8. 'graph' → logprob: -5.477596282958984
    9. 'distance' → logprob: -5.477596282958984
    10. '
' → logprob: -5.977596282958984

Token 1171: ' walls' (ID: 20562)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6136542558670044
    2. 'dist' → logprob: -1.2386542558670044
    3. 'start' → logprob: -2.738654136657715
    4. 'distance' → logprob: -3.738654136657715
    5. 'visited' → logprob: -4.363654136657715
    6. 'from' → logprob: -4.488654136657715
    7. 'graph' → logprob: -4.738654136657715
    8. ' #' → logprob: -4.863654136657715
    9. 'outside' → logprob: -5.238654136657715
    10. 'def' → logprob: -5.488654136657715

Token 1172: ' don't' (ID: 4128)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.2224239110946655
    2. ' =' → logprob: -1.4724239110946655
    3. '_' → logprob: -2.222424030303955
    4. '_graph' → logprob: -2.847424030303955
    5. ' must' → logprob: -2.972424030303955
    6. '   ' → logprob: -3.347424030303955
    7. 'must' → logprob: -3.472424030303955
    8. ' are' → logprob: -3.847424030303955
    9. '=' → logprob: -3.972424030303955
    10. '#' → logprob: -3.972424030303955

Token 1173: ' touch' (ID: 7381)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'must' → logprob: -1.2891088724136353
    2. ' separate' → logprob: -1.9141088724136353
    3. 'touch' → logprob: -2.2891087532043457
    4. '#' → logprob: -2.2891087532043457
    5. '
' → logprob: -2.7891087532043457
    6. ' must' → logprob: -2.9141087532043457
    7. 'need' → logprob: -3.1641087532043457
    8. 'cross' → logprob: -3.2891087532043457
    9. 'exist' → logprob: -4.289108753204346
    10. 'form' → logprob: -4.414108753204346

Token 1174: ' or' (ID: 503)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.340346097946167
    2. ' or' → logprob: -1.340346097946167
    3. '   ' → logprob: -2.090346097946167
    4. '       ' → logprob: -2.340346097946167
    5. ',' → logprob: -2.465346097946167
    6. '#' → logprob: -2.965346097946167
    7. ' and' → logprob: -2.965346097946167
    8. '```' → logprob: -4.465346336364746
    9. ' if' → logprob: -5.090346336364746
    10. ',
' → logprob: -5.090346336364746

Token 1175: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.3185455799102783
    2. ' cross' → logprob: -1.3185455799102783
    3. '#' → logprob: -5.693545341491699
    4. '
' → logprob: -7.318545341491699
    5. ' #' → logprob: -7.943545341491699
    6. '   ' → logprob: -7.943545341491699
    7. '       ' → logprob: -9.5685453414917
    8. ' ' → logprob: -9.8185453414917
    9. '``' → logprob: -9.9435453414917
    10. '.' → logprob: -10.1935453414917

Token 1176: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1180768013000488
    2. '
' → logprob: -1.2430768013000488
    3. '#' → logprob: -2.243076801300049
    4. ',' → logprob: -2.368076801300049
    5. ')' → logprob: -3.368076801300049
    6. '.' → logprob: -3.618076801300049
    7. '   ' → logprob: -3.868076801300049
    8. '```' → logprob: -3.868076801300049
    9. '<|end|>' → logprob: -4.243076801300049
    10. '.
' → logprob: -4.368076801300049

Token 1177: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.9122682809829712
    2. '#' → logprob: -1.1622682809829712
    3. ' but' → logprob: -2.0372681617736816
    4. '
' → logprob: -3.1622681617736816
    5. '       ' → logprob: -3.2872681617736816
    6. 'so' → logprob: -4.162268161773682
    7. 'but' → logprob: -4.162268161773682
    8. ' and' → logprob: -5.037268161773682
    9. ')' → logprob: -5.162268161773682
    10. '...' → logprob: -5.287268161773682

Token 1178: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0576576329767704
    2. 'the' → logprob: -3.3076577186584473
    3. ' the' → logprob: -4.932657718658447
    4. '
' → logprob: -5.932657718658447
    5. ' #' → logprob: -6.682657718658447
    6. 'we' → logprob: -6.932657718658447
    7. 'graph' → logprob: -7.057657718658447
    8. 'def' → logprob: -7.057657718658447
    9. ' we' → logprob: -7.932657718658447
    10. 'import' → logprob: -7.932657718658447

Token 1179: ' set' (ID: 920)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10133244097232819
    2. ' rat' → logprob: -3.726332426071167
    3. ' #' → logprob: -4.101332664489746
    4. ' graph' → logprob: -4.476332664489746
    5. 'distance' → logprob: -4.851332664489746
    6. 'graph' → logprob: -4.851332664489746
    7. 'def' → logprob: -5.476332664489746
    8. 'dist' → logprob: -5.976332664489746
    9. ' minimal' → logprob: -6.226332664489746
    10. 'spaces' → logprob: -6.601332664489746

Token 1180: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.40061208605766296
    2. ')' → logprob: -2.9006121158599854
    3. ' =' → logprob: -2.9006121158599854
    4. '_' → logprob: -3.1506121158599854
    5. 'of' → logprob: -3.4006121158599854
    6. 's' → logprob: -3.6506121158599854
    7. '```' → logprob: -4.150611877441406
    8. '   ' → logprob: -4.275611877441406
    9. '=' → logprob: -4.650611877441406
    10. '       ' → logprob: -4.650611877441406

Token 1181: ' walls' (ID: 20562)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.12738516926765442
    2. 'walls' → logprob: -3.377385139465332
    3. ' circles' → logprob: -3.627385139465332
    4. 'nodes' → logprob: -3.877385139465332
    5. 'connected' → logprob: -5.127385139465332
    6. 'neighbors' → logprob: -5.502385139465332
    7. 'lines' → logprob: -5.627385139465332
    8. 'indices' → logprob: -5.877385139465332
    9. 'points' → logprob: -6.002385139465332
    10. 'c' → logprob: -6.002385139465332

Token 1182: ' form' (ID: 1625)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0274326801300049
    2. ' is' → logprob: -2.027432680130005
    3. ' that' → logprob: -2.652432680130005
    4. ',' → logprob: -2.777432680130005
    5. '```' → logprob: -3.027432680130005
    6. ' must' → logprob: -3.277432680130005
    7. 's' → logprob: -3.277432680130005
    8. '   ' → logprob: -3.402432680130005
    9. ' =' → logprob: -3.652432680130005
    10. ' are' → logprob: -3.902432680130005

Token 1183: ' disconnected' (ID: 78152)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8018574714660645
    2. 'a' → logprob: -0.9268574714660645
    3. 'layers' → logprob: -2.8018574714660645
    4. ' layers' → logprob: -3.5518574714660645
    5. ' an' → logprob: -3.8018574714660645
    6. 'an' → logprob: -4.8018574714660645
    7. ' connected' → logprob: -4.9268574714660645
    8. 'dis' → logprob: -5.5518574714660645
    9. '```' → logprob: -5.6768574714660645
    10. 'connected' → logprob: -5.8018574714660645

Token 1184: ' components' (ID: 10674)
  Prédit: ' components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' components' → logprob: -1.0048716068267822
    2. '_components' → logprob: -1.5048716068267822
    3. 'components' → logprob: -1.7548716068267822
    4. '_' → logprob: -2.5048716068267822
    5. '_graph' → logprob: -3.8798716068267822
    6. ' sets' → logprob: -4.004871368408203
    7. 's' → logprob: -4.254871368408203
    8. '
' → logprob: -4.629871368408203
    9. '_
' → logprob: -4.629871368408203
    10. '_sets' → logprob: -4.879871368408203

Token 1185: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2089332342147827
    2. '       ' → logprob: -1.4589332342147827
    3. '#' → logprob: -1.5839332342147827
    4. '   ' → logprob: -3.3339333534240723
    5. ')' → logprob: -3.7089333534240723
    6. ',' → logprob: -3.8339333534240723
    7. ':
' → logprob: -3.8339333534240723
    8. 'def' → logprob: -3.8339333534240723
    9. ')
' → logprob: -4.083933353424072
    10. ' if' → logprob: -4.083933353424072

Token 1186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1726529896259308
    2. '#' → logprob: -2.4226529598236084
    3. '```' → logprob: -3.9226529598236084
    4. 'if' → logprob: -4.2976531982421875
    5. ' if' → logprob: -5.1726531982421875
    6. '...' → logprob: -5.1726531982421875
    7. '
' → logprob: -5.4226531982421875
    8. 'graph' → logprob: -5.5476531982421875
    9. ')' → logprob: -5.6726531982421875
    10. ',' → logprob: -5.9226531982421875

Token 1187: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21783684194087982
    2. 'if' → logprob: -2.342836856842041
    3. '#' (adapté à ' #') → logprob: -2.592836856842041
    4. '   ' → logprob: -4.967836856842041
    5. '
' → logprob: -4.967836856842041
    6. ' if' → logprob: -5.467836856842041
    7. '        
' → logprob: -5.842836856842041
    8. 'start' → logprob: -7.592836856842041
    9. 'from' → logprob: -7.592836856842041
    10. 'dist' → logprob: -8.217836380004883

Token 1188: ' So' (ID: 2632)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8402882218360901
    2. 'if' → logprob: -1.0902881622314453
    3. 'graph' → logprob: -2.9652881622314453
    4. 'outside' → logprob: -3.0902881622314453
    5. 'start' → logprob: -3.4652881622314453
    6. '       ' → logprob: -3.4652881622314453
    7. 'visited' → logprob: -3.8402881622314453
    8. 'from' → logprob: -4.465288162231445
    9. 'dist' → logprob: -4.465288162231445
    10. 'import' → logprob: -5.465288162231445

Token 1189: ' rat' (ID: 8908)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.5707281231880188
    2. '#' → logprob: -1.320728063583374
    3. 'visited' → logprob: -3.070728063583374
    4. 'components' → logprob: -3.945728063583374
    5. 'from' → logprob: -4.070728302001953
    6. 'outer' → logprob: -4.195728302001953
    7. 'import' → logprob: -4.445728302001953
    8. '   ' → logprob: -4.820728302001953
    9. 'if' → logprob: -4.945728302001953
    10. 'inside' → logprob: -5.070728302001953

Token 1190: ' path' (ID: 3104)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2764267921447754
    2. '_m' → logprob: -1.6514267921447754
    3. '_' → logprob: -1.7764267921447754
    4. '_can' → logprob: -1.9014267921447754
    5. ' can' → logprob: -3.1514267921447754
    6. '_c' → logprob: -3.6514267921447754
    7. ' must' → logprob: -3.7764267921447754
    8. '   ' → logprob: -4.151426792144775
    9. 'must' → logprob: -4.276426792144775
    10. ')' → logprob: -4.526426792144775

Token 1191: ' crosses' (ID: 95853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10024764388799667
    2. '=' → logprob: -3.475247621536255
    3. '   ' → logprob: -3.850247621536255
    4. ':' → logprob: -3.975247621536255
    5. 's' → logprob: -4.350247859954834
    6. ':
' → logprob: -6.475247859954834
    7. ')' → logprob: -6.725247859954834
    8. '#' → logprob: -6.975247859954834
    9. '       ' → logprob: -6.975247859954834
    10. ',' → logprob: -7.225247859954834

Token 1192: ' walls' (ID: 20562)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -1.1286619901657104
    2. ' the' → logprob: -1.8786619901657104
    3. ' a' → logprob: -2.003662109375
    4. ' at' → logprob: -2.253662109375
    5. ' all' → logprob: -2.628662109375
    6. ' any' → logprob: -3.003662109375
    7. ' walls' → logprob: -3.628662109375
    8. ' no' → logprob: -3.878662109375
    9. ' circles' → logprob: -4.253662109375
    10. ' one' → logprob: -4.378662109375

Token 1193: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1196154356002808
    2. '.' → logprob: -1.4946154356002808
    3. ',' → logprob: -2.2446155548095703
    4. 's' → logprob: -2.9946155548095703
    5. '<|end|>' → logprob: -3.1196155548095703
    6. ' if' → logprob: -3.4946155548095703
    7. ')' → logprob: -3.6196155548095703
    8. ' =' → logprob: -3.7446155548095703
    9. '```' → logprob: -4.11961555480957
    10. '#' → logprob: -4.24461555480957

Token 1194: ' path' (ID: 3104)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1484508514404297
    2. ' there' → logprob: -1.1484508514404297
    3. ' any' → logprob: -2.2734508514404297
    4. 'the' → logprob: -2.6484508514404297
    5. 'there' → logprob: -2.8984508514404297
    6. ' circles' → logprob: -3.6484508514404297
    7. ' it' → logprob: -3.7734508514404297
    8. ' they' → logprob: -4.27345085144043
    9. ' a' → logprob: -4.27345085144043
    10. 'they' → logprob: -4.89845085144043

Token 1195: ' crosses' (ID: 95853)
  Prédit: ' crosses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crosses' → logprob: -0.15059708058834076
    2. 'cross' → logprob: -3.150597095489502
    3. 'must' → logprob: -3.900597095489502
    4. ' must' → logprob: -4.650597095489502
    5. '```' → logprob: -4.650597095489502
    6. '   ' → logprob: -4.900597095489502
    7. '_cross' → logprob: -5.025597095489502
    8. ' passes' → logprob: -5.150597095489502
    9. ' is' → logprob: -5.400597095489502
    10. 'does' → logprob: -5.650597095489502

Token 1196: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2675131857395172
    2. 'a' → logprob: -2.0175132751464844
    3. ' any' → logprob: -2.7675132751464844
    4. ' the' → logprob: -4.642513275146484
    5. '```' → logprob: -4.642513275146484
    6. ' an' → logprob: -5.517513275146484
    7. ''' → logprob: -5.892513275146484
    8. ' at' → logprob: -6.142513275146484
    9. 'the' → logprob: -6.767513275146484
    10. '`' → logprob: -7.142513275146484

Token 1197: ' circle' (ID: 22005)
  Prédit: ' circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' circle' → logprob: -0.4014170467853546
    2. 'circle' → logprob: -1.4014170169830322
    3. ' wall' → logprob: -3.9014170169830322
    4. '"' → logprob: -4.026417255401611
    5. ' space' → logprob: -4.401417255401611
    6. 'wall' → logprob: -4.526417255401611
    7. 'space' → logprob: -4.651417255401611
    8. ')' → logprob: -6.026417255401611
    9. ' line' → logprob: -6.776417255401611
    10. ' connected' → logprob: -6.776417255401611

Token 1198: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6154233813285828
    2. 'if' → logprob: -1.7404234409332275
    3. '#' → logprob: -2.1154234409332275
    4. '   ' → logprob: -2.9904234409332275
    5. ' if' → logprob: -2.9904234409332275
    6. '
' → logprob: -3.3654234409332275
    7. '```' → logprob: -5.115423202514648
    8. ',' → logprob: -5.365423202514648
    9. 'def' → logprob: -5.740423202514648
    10. ')' → logprob: -6.115423202514648

Token 1199: 'wall' (ID: 22776)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.057542622089385986
    2. 's' → logprob: -4.43254280090332
    3. ').' → logprob: -5.05754280090332
    4. ')
' → logprob: -5.18254280090332
    5. '.' → logprob: -5.30754280090332
    6. '   ' → logprob: -5.55754280090332
    7. ' )' → logprob: -5.55754280090332
    8. '):
' → logprob: -5.80754280090332
    9. ',' → logprob: -6.30754280090332
    10. '
' → logprob: -6.43254280090332

Token 1200: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02787567675113678
    2. 's' → logprob: -4.902875900268555
    3. '):' → logprob: -5.152875900268555
    4. '   ' → logprob: -5.652875900268555
    5. ')
' → logprob: -5.777875900268555
    6. ').' → logprob: -5.777875900268555
    7. '):
' → logprob: -6.652875900268555
    8. '.' → logprob: -7.652875900268555
    9. '),' → logprob: -7.777875900268555
    10. ')s' → logprob: -8.027875900268555

Token 1201: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1202: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06115368381142616
    2. '#' (adapté à ' #') → logprob: -3.1861536502838135
    3. '```' → logprob: -4.936153888702393
    4. 'if' → logprob: -5.561153888702393
    5. '
' → logprob: -6.436153888702393
    6. 'continue' → logprob: -7.061153888702393
    7. ')' → logprob: -7.186153888702393
    8. '        
' → logprob: -7.436153888702393
    9. ' if' → logprob: -7.561153888702393
    10. '   ' → logprob: -7.561153888702393

Token 1203: ' If' (ID: 1843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029399007558822632
    2. '#' → logprob: -4.0293989181518555
    3. 'if' → logprob: -5.0293989181518555
    4. '   ' → logprob: -6.2793989181518555
    5. '
' → logprob: -7.7793989181518555
    6. '        
' → logprob: -7.7793989181518555
    7. 'dist' → logprob: -8.154398918151855
    8. 'from' → logprob: -8.154398918151855
    9. 'graph' → logprob: -8.279398918151855
    10. '```' → logprob: -8.654398918151855

Token 1204: ' we' (ID: 581)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.21049506962299347
    2. ' start' → logprob: -1.710495114326477
    3. 'len' → logprob: -5.5854949951171875
    4. ' not' → logprob: -6.2104949951171875
    5. 'not' → logprob: -6.4604949951171875
    6. ' len' → logprob: -7.5854949951171875
    7. 'end' → logprob: -7.7104949951171875
    8. 'point' → logprob: -9.085494995117188
    9. 'the' → logprob: -9.585494995117188
    10. ' end' → logprob: -9.710494995117188

Token 1205: ' consider' (ID: 3331)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.837251901626587
    2. ' have' → logprob: -2.087251901626587
    3. 'continue' → logprob: -2.087251901626587
    4. ' can' → logprob: -2.212251901626587
    5. 'have' → logprob: -2.212251901626587
    6. '#' → logprob: -2.337251901626587
    7. ' want' → logprob: -3.087251901626587
    8. '
' → logprob: -3.212251901626587
    9. ' find' → logprob: -3.587251901626587
    10. 'can' → logprob: -3.712251901626587

Token 1206: ' that' (ID: 484)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7112752795219421
    2. 'the' → logprob: -2.211275339126587
    3. ' the' → logprob: -2.461275339126587
    4. ' a' → logprob: -3.586275339126587
    5. ' ' → logprob: -3.586275339126587
    6. ' (' → logprob: -3.836275339126587
    7. '(' → logprob: -3.836275339126587
    8. ''' → logprob: -3.836275339126587
    9. '(
' → logprob: -4.086275100708008
    10. ' start' → logprob: -4.086275100708008

Token 1207: ' the' (ID: 290)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.726639449596405
    2. ')' → logprob: -1.6016395092010498
    3. 'the' → logprob: -2.22663950920105
    4. '#' → logprob: -2.72663950920105
    5. ' the' → logprob: -4.101639270782471
    6. ' start' → logprob: -4.351639270782471
    7. 'points' → logprob: -4.601639270782471
    8. 'cir' → logprob: -4.726639270782471
    9. '.' → logprob: -4.976639270782471
    10. '
' → logprob: -5.226639270782471

Token 1208: ' plane' (ID: 16499)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.16824425756931305
    2. ' start' → logprob: -3.1682443618774414
    3. 'rat' → logprob: -3.6682443618774414
    4. '#' → logprob: -3.7932443618774414
    5. ' rat' → logprob: -3.9182443618774414
    6. 'outside' → logprob: -4.543244361877441
    7. 'dist' → logprob: -4.793244361877441
    8. 'cir' → logprob: -5.793244361877441
    9. 'graph' → logprob: -5.793244361877441
    10. 'distance' → logprob: -6.043244361877441

Token 1209: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2367183268070221
    2. '
' → logprob: -1.9867182970046997
    3. 'is' → logprob: -4.48671817779541
    4. ' outside' → logprob: -4.73671817779541
    5. ')' → logprob: -4.98671817779541
    6. ' can' → logprob: -5.11171817779541
    7. ' contains' → logprob: -5.23671817779541
    8. ' has' → logprob: -5.36171817779541
    9. '   ' → logprob: -5.48671817779541
    10. ' represents' → logprob: -5.48671817779541

Token 1210: ' divided' (ID: 28261)
  Prédit: ' divided'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divided' → logprob: -0.2931820750236511
    2. ' partition' → logprob: -2.043182134628296
    3. 'div' → logprob: -3.043182134628296
    4. 'partition' → logprob: -3.043182134628296
    5. ' separated' → logprob: -3.918182134628296
    6. 'se' → logprob: -5.668181896209717
    7. 'split' → logprob: -5.793181896209717
    8. ' split' → logprob: -6.293181896209717
    9. 'covered' → logprob: -8.043182373046875
    10. '   ' → logprob: -8.418182373046875

Token 1211: ' by' (ID: 656)
  Prédit: ' into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.4860670864582062
    2. 'into' → logprob: -0.9860670566558838
    3. 'by' → logprob: -5.111067295074463
    4. '```' → logprob: -5.861067295074463
    5. ' by' → logprob: -5.986067295074463
    6. '_into' → logprob: -8.361066818237305
    7. '#' → logprob: -9.861066818237305
    8. '
' → logprob: -10.111066818237305
    9. '``' → logprob: -10.236066818237305
    10. '`' → logprob: -10.611066818237305

Token 1212: ' these' (ID: 1879)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.07987264543771744
    2. 'the' → logprob: -3.3298726081848145
    3. 'walls' → logprob: -4.0798726081848145
    4. ' circles' → logprob: -4.3298726081848145
    5. ' the' → logprob: -4.7048726081848145
    6. ' walls' → logprob: -6.8298726081848145
    7. 'these' → logprob: -8.704873085021973
    8. ' these' → logprob: -8.954873085021973
    9. 'spaces' → logprob: -9.079873085021973
    10. 'circle' → logprob: -9.579873085021973

Token 1213: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.17197369039058685
    2. ' circles' → logprob: -2.046973705291748
    3. 'walls' → logprob: -3.921973705291748
    4. ' walls' → logprob: -4.796973705291748
    5. '#' → logprob: -9.04697322845459
    6. '\n' → logprob: -9.29697322845459
    7. ' cir' → logprob: -9.54697322845459
    8. 'spaces' → logprob: -9.92197322845459
    9. '``' → logprob: -10.04697322845459
    10. 'circle' → logprob: -10.04697322845459

Token 1214: ',' (ID: 11)
  Prédit: ' into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.4405141770839691
    2. ',' → logprob: -1.3155142068862915
    3. ',
' → logprob: -2.940514087677002
    4. 'into' → logprob: -4.815514087677002
    5. '   ' → logprob: -5.190514087677002
    6. ' (' → logprob: -5.690514087677002
    7. '#' → logprob: -6.065514087677002
    8. '.' → logprob: -6.190514087677002
    9. '
' → logprob: -6.315514087677002
    10. ' and' → logprob: -6.440514087677002

Token 1215: ' walls' (ID: 20562)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5902281999588013
    2. ' then' → logprob: -1.7152281999588013
    3. ' and' → logprob: -2.0902280807495117
    4. '...' → logprob: -2.2152280807495117
    5. '       ' → logprob: -2.5902280807495117
    6. ' the' → logprob: -2.5902280807495117
    7. ',' → logprob: -3.0902280807495117
    8. ')' → logprob: -3.3402280807495117
    9. 'the' → logprob: -3.4652280807495117
    10. ' we' → logprob: -4.215228080749512

Token 1216: ' surround' (ID: 11924)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.2502349615097046
    2. ' are' → logprob: -1.6252349615097046
    3. ')' → logprob: -2.500235080718994
    4. ',' → logprob: -2.625235080718994
    5. 's' → logprob: -2.750235080718994
    6. '   ' → logprob: -3.125235080718994
    7. ' must' → logprob: -3.375235080718994
    8. '#' → logprob: -3.500235080718994
    9. ' form' → logprob: -3.750235080718994
    10. '```' → logprob: -3.750235080718994

Token 1217: ' regions' (ID: 21043)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3857552111148834
    2. 'the' → logprob: -1.385755181312561
    3. ' a' → logprob: -4.3857550621032715
    4. ' regions' → logprob: -4.8857550621032715
    5. ' an' → logprob: -5.1357550621032715
    6. ' areas' → logprob: -5.1357550621032715
    7. ' spaces' → logprob: -5.2607550621032715
    8. ' them' → logprob: -5.3857550621032715
    9. 'areas' → logprob: -5.7607550621032715
    10. 'spaces' → logprob: -5.7607550621032715

Token 1218: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.542829990386963
    2. ',' → logprob: -2.042829990386963
    3. '...' → logprob: -2.167829990386963
    4. '   ' → logprob: -2.292829990386963
    5. ' and' → logprob: -2.542829990386963
    6. ')' → logprob: -2.542829990386963
    7. '```' → logprob: -2.542829990386963
    8. '.' → logprob: -3.167829990386963
    9. '
' → logprob: -3.292829990386963
    10. ',
' → logprob: -3.792829990386963

Token 1219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37867894768714905
    2. '<|end|>' → logprob: -1.8786789178848267
    3. '...' → logprob: -2.378679037094116
    4. '#' → logprob: -3.503679037094116
    5. ')' → logprob: -3.753679037094116
    6. '```' → logprob: -4.753678798675537
    7. '
' → logprob: -6.503678798675537
    8. '<|end|>' → logprob: -6.628678798675537
    9. ',' → logprob: -6.753678798675537
    10. '   ' → logprob: -7.128678798675537

Token 1220: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05309639498591423
    2. '
' → logprob: -3.428096294403076
    3. '   ' → logprob: -5.303096294403076
    4. '#' (adapté à ' #') → logprob: -5.428096294403076
    5. '        
' → logprob: -5.428096294403076
    6. '```' → logprob: -6.803096294403076
    7. 'if' → logprob: -7.178096294403076
    8. ' if' → logprob: -7.303096294403076
    9. ',' → logprob: -7.428096294403076
    10. '    
' → logprob: -8.053096771240234

Token 1221: ' Another' (ID: 20064)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5278710126876831
    2. 'if' → logprob: -1.527871012687683
    3. '       ' → logprob: -2.4028711318969727
    4. 'visited' → logprob: -3.6528711318969727
    5. 'outside' → logprob: -4.027871131896973
    6. 'from' → logprob: -4.152871131896973
    7. 'dist' → logprob: -4.277871131896973
    8. 'start' → logprob: -4.902871131896973
    9. '   ' → logprob: -5.527871131896973
    10. 'import' → logprob: -5.777871131896973

Token 1222: ' approach' (ID: 7139)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3243359327316284
    2. ':' → logprob: -1.8243359327316284
    3. '_' → logprob: -2.324336051940918
    4. '
' → logprob: -2.449336051940918
    5. 'def' → logprob: -2.449336051940918
    6. ')' → logprob: -2.574336051940918
    7. 'for' → logprob: -3.324336051940918
    8. 'graph' → logprob: -4.199336051940918
    9. ' approach' → logprob: -4.324336051940918
    10. ':
' → logprob: -4.324336051940918

Token 1223: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1931212991476059
    2. ':' → logprob: -2.8181211948394775
    3. '#' → logprob: -3.1931211948394775
    4. '   ' → logprob: -4.068121433258057
    5. ':
' → logprob: -4.443121433258057
    6. '...' → logprob: -4.693121433258057
    7. ',' → logprob: -5.068121433258057
    8. ' if' → logprob: -5.568121433258057
    9. 'def' → logprob: -5.568121433258057
    10. '```' → logprob: -5.818121433258057

Token 1224: 'simpl' (ID: 174735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7981937527656555
    2. '#' → logprob: -1.9231936931610107
    3. ':' → logprob: -2.0481936931610107
    4. '       ' → logprob: -2.1731936931610107
    5. '):' → logprob: -2.7981936931610107
    6. '):
' → logprob: -3.2981936931610107
    7. ':
' → logprob: -3.9231936931610107
    8. 'def' → logprob: -4.67319393157959
    9. ')
' → logprob: -4.92319393157959
    10. '...' → logprob: -5.29819393157959

Token 1225: 'er' (ID: 259)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6130672693252563
    2. ')' → logprob: -1.6130672693252563
    3. ':' → logprob: -1.9880672693252563
    4. 'def' → logprob: -3.113067150115967
    5. '):' → logprob: -4.238067150115967
    6. '   ' → logprob: -4.613067150115967
    7. '``' → logprob: -4.988067150115967
    8. '):
' → logprob: -4.988067150115967
    9. '#' → logprob: -5.113067150115967
    10. '       ' → logprob: -5.363067150115967

Token 1226: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5017074346542358
    2. '):
' → logprob: -1.7517074346542358
    3. '):' → logprob: -2.0017075538635254
    4. ':
' → logprob: -2.8767075538635254
    5. ')' → logprob: -4.251707553863525
    6. '
' → logprob: -5.626707553863525
    7. '...' → logprob: -5.876707553863525
    8. '```' → logprob: -6.501707553863525
    9. '       ' → logprob: -6.751707553863525
    10. ',' → logprob: -6.876707553863525

Token 1227: ' beginner' (ID: 57062)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7625067234039307
    2. ')' → logprob: -2.3875067234039307
    3. 'point' → logprob: -2.6375067234039307
    4. 'def' → logprob: -2.6375067234039307
    5. '   ' → logprob: -3.0125067234039307
    6. 'circle' → logprob: -3.7625067234039307
    7. 'this' → logprob: -3.7625067234039307
    8. '):
' → logprob: -3.8875067234039307
    9. 'i' → logprob: -4.012506484985352
    10. 'continu' → logprob: -4.387506484985352

Token 1228: '):' (ID: 3127)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9042997360229492
    2. ':' → logprob: -1.2792997360229492
    3. '):
' → logprob: -2.029299736022949
    4. ')' → logprob: -2.779299736022949
    5. '):' → logprob: -3.279299736022949
    6. ':
' → logprob: -4.154299736022949
    7. '
' → logprob: -4.279299736022949
    8. 'def' → logprob: -4.654299736022949
    9. '   ' → logprob: -4.654299736022949
    10. '``' → logprob: -5.154299736022949

Token 1229: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28160449862480164
    2. '#' → logprob: -1.531604528427124
    3. '   ' → logprob: -5.406604290008545
    4. 'if' → logprob: -5.656604290008545
    5. ' #' → logprob: -6.031604290008545
    6. '```' → logprob: -6.156604290008545
    7. 'def' → logprob: -6.406604290008545
    8. 'start' → logprob: -6.531604290008545
    9. 'graph' → logprob: -6.531604290008545
    10. 'from' → logprob: -6.656604290008545

Token 1230: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0322592668235302
    2. ' i' → logprob: -4.157259464263916
    3. 'c' → logprob: -4.407259464263916
    4. 'circle' → logprob: -7.282259464263916
    5. 's' → logprob: -7.532259464263916
    6. 'start' → logprob: -7.657259464263916
    7. ' c' → logprob: -8.157258987426758
    8. '_' → logprob: -8.532258987426758
    9. 'w' → logprob: -8.782258987426758
    10. 'cir' → logprob: -8.907258987426758

Token 1231: ' dataset' (ID: 20830)
  Prédit: 'circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'circle' → logprob: -0.45623844861984253
    2. ' circle' → logprob: -1.3312385082244873
    3. 'c' → logprob: -2.9562385082244873
    4. 'i' → logprob: -3.2062385082244873
    5. ' i' → logprob: -5.956238269805908
    6. ' c' → logprob: -6.081238269805908
    7. ')' → logprob: -6.706238269805908
    8. '_circle' → logprob: -7.956238269805908
    9. '(circle' → logprob: -8.456238746643066
    10. '```' → logprob: -8.456238746643066

Token 1232: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6144028306007385
    2. ':' → logprob: -1.2394027709960938
    3. ',' → logprob: -2.8644027709960938
    4. '   ' → logprob: -3.1144027709960938
    5. ':
' → logprob: -3.4894027709960938
    6. ' :' → logprob: -5.239402770996094
    7. ' if' → logprob: -5.364402770996094
    8. '```' → logprob: -5.614402770996094
    9. '):' → logprob: -5.739402770996094
    10. ' ,' → logprob: -6.114402770996094

Token 1233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005080294795334339
    2. '```' → logprob: -6.755080223083496
    3. ' if' → logprob: -7.630080223083496
    4. ' continue' → logprob: -7.755080223083496
    5. ' for' → logprob: -7.880080223083496
    6. '   ' → logprob: -8.005080223083496
    7. '#' → logprob: -8.005080223083496
    8. ')' → logprob: -8.130080223083496
    9. ' lines' → logprob: -8.380080223083496
    10. '           ' → logprob: -8.380080223083496

Token 1234: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00817823689430952
    2. '```' → logprob: -6.133178234100342
    3. '   ' → logprob: -6.633178234100342
    4. ' for' → logprob: -6.883178234100342
    5. ' if' → logprob: -7.133178234100342
    6. 'for' → logprob: -7.383178234100342
    7. 'continue' → logprob: -8.1331787109375
    8. ')' → logprob: -8.1331787109375
    9. '           ' → logprob: -8.2581787109375
    10. ' continue' → logprob: -8.3831787109375

Token 1235: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23787513375282288
    2. '#' → logprob: -2.36287522315979
    3. 'if' → logprob: -3.11287522315979
    4. 'for' → logprob: -3.73787522315979
    5. '   ' → logprob: -4.237874984741211
    6. 'graph' → logprob: -5.112874984741211
    7. ' if' → logprob: -5.362874984741211
    8. 'visited' → logprob: -5.362874984741211
    9. 'dist' → logprob: -5.612874984741211
    10. 'def' → logprob: -5.612874984741211

Token 1236: ' all' (ID: 722)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4695875942707062
    2. ' i' → logprob: -2.344587564468384
    3. 'circle' → logprob: -2.719587564468384
    4. 'each' → logprob: -2.844587564468384
    5. 'c' → logprob: -3.469587564468384
    6. ' circle' → logprob: -3.594587564468384
    7. ' each' → logprob: -3.719587564468384
    8. 'all' → logprob: -4.219587802886963
    9. ' all' → logprob: -4.594587802886963
    10. ' c' → logprob: -5.219587802886963

Token 1237: ' subsets' (ID: 165377)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18153686821460724
    2. 'c' → logprob: -2.931536912918091
    3. 'cir' → logprob: -3.306536912918091
    4. 'circle' → logprob: -3.431536912918091
    5. 'pairs' → logprob: -3.556536912918091
    6. ' i' → logprob: -4.931536674499512
    7. ' pairs' → logprob: -5.931536674499512
    8. ' circles' → logprob: -6.681536674499512
    9. '   ' → logprob: -7.056536674499512
    10. ' circle' → logprob: -7.306536674499512

Token 1238: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24814917147159576
    2. ',' → logprob: -2.9981491565704346
    3. '   ' → logprob: -3.7481491565704346
    4. ' _' → logprob: -3.7481491565704346
    5. '[' → logprob: -3.9981491565704346
    6. ':' → logprob: -4.373149394989014
    7. '       ' → logprob: -4.498149394989014
    8. ' =' → logprob: -4.498149394989014
    9. '```' → logprob: -4.498149394989014
    10. ')' → logprob: -4.873149394989014

Token 1239: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.09265030175447464
    2. ' circles' → logprob: -2.7176504135131836
    3. 'n' → logprob: -4.967650413513184
    4. '```' → logprob: -5.467650413513184
    5. ' the' → logprob: -6.092650413513184
    6. 'c' → logprob: -6.217650413513184
    7. 'the' → logprob: -6.842650413513184
    8. ' n' → logprob: -6.967650413513184
    9. ')' → logprob: -7.092650413513184
    10. '``' → logprob: -7.717650413513184

Token 1240: ' that' (ID: 484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1535851955413818
    2. '[' → logprob: -1.9035851955413818
    3. ')' → logprob: -2.153585195541382
    4. ',' → logprob: -2.403585195541382
    5. '<|end|>' → logprob: -2.403585195541382
    6. '   ' → logprob: -3.528585195541382
    7. '#' → logprob: -3.653585195541382
    8. '       ' → logprob: -3.903585195541382
    9. '.' → logprob: -4.153585433959961
    10. '[
' → logprob: -4.278585433959961

Token 1241: ' do' (ID: 621)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.4080548286437988
    2. ' cover' → logprob: -1.6580548286437988
    3. 'cover' → logprob: -1.7830548286437988
    4. ' can' → logprob: -2.283054828643799
    5. '       ' → logprob: -3.033054828643799
    6. '   ' → logprob: -3.658054828643799
    7. ')' → logprob: -4.158054828643799
    8. 'size' → logprob: -4.283054828643799
    9. 'are' → logprob: -4.408054828643799
    10. '```' → logprob: -4.533054828643799

Token 1242: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3807414174079895
    2. 'not' → logprob: -1.3807413578033447
    3. 'f' → logprob: -3.2557413578033447
    4. 'es' → logprob: -3.8807413578033447
    5. ')' → logprob: -6.630741596221924
    6. '```' → logprob: -7.130741596221924
    7. '   ' → logprob: -7.505741596221924
    8. 'n't' → logprob: -7.630741596221924
    9. ' ' → logprob: -7.755741596221924
    10. '``' → logprob: -7.880741596221924

Token 1243: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.10716801881790161
    2. '
' → logprob: -3.107167959213257
    3. ' touch' → logprob: -3.482167959213257
    4. 'inter' → logprob: -4.607168197631836
    5. ' overlap' → logprob: -4.732168197631836
    6. 'over' → logprob: -5.982168197631836
    7. ' intersect' → logprob: -6.732168197631836
    8. '```' → logprob: -6.982168197631836
    9. '   ' → logprob: -7.732168197631836
    10. ' ' → logprob: -7.857168197631836

Token 1244: ' each' (ID: 2454)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.029868733137845993
    2. '_touch' → logprob: -4.7798686027526855
    3. ' or' → logprob: -5.4048686027526855
    4. ' _' → logprob: -5.7798686027526855
    5. ')' → logprob: -5.7798686027526855
    6. '   ' → logprob: -6.5298686027526855
    7. '_
' → logprob: -6.5298686027526855
    8. '```' → logprob: -7.0298686027526855
    9. '[' → logprob: -7.7798686027526855
    10. ',' → logprob: -8.029869079589844

Token 1245: ' other' (ID: 1273)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22296872735023499
    2. ' or' → logprob: -2.097968816757202
    3. '_
' → logprob: -3.722968816757202
    4. '```' → logprob: -4.472968578338623
    5. '
' → logprob: -4.972968578338623
    6. '   ' → logprob: -5.347968578338623
    7. 'or' → logprob: -5.472968578338623
    8. ',' → logprob: -5.847968578338623
    9. '       ' → logprob: -6.222968578338623
    10. 'and' → logprob: -6.347968578338623

Token 1246: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5081318616867065
    2. ')' → logprob: -2.008131980895996
    3. '       ' → logprob: -2.133131980895996
    4. '   ' → logprob: -2.258131980895996
    5. '<|end|>' → logprob: -2.383131980895996
    6. ']' → logprob: -3.008131980895996
    7. ',' → logprob: -3.008131980895996
    8. '[' → logprob: -3.258131980895996
    9. ' if' → logprob: -3.508131980895996
    10. ' and' → logprob: -4.008131980895996

Token 1247: 'so' (ID: 786)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16830359399318695
    2. ' ' → logprob: -3.6683034896850586
    3. ' )' → logprob: -3.6683034896850586
    4. '   ' → logprob: -3.9183034896850586
    5. '#' → logprob: -4.293303489685059
    6. '),' → logprob: -4.668303489685059
    7. ',' → logprob: -4.793303489685059
    8. ' subsets' → logprob: -4.918303489685059
    9. '<|end|>' → logprob: -5.418303489685059
    10. ' ,' → logprob: -5.418303489685059

Token 1248: ' can' (ID: 665)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8071797490119934
    2. ' ' → logprob: -1.4321796894073486
    3. '#' → logprob: -2.3071796894073486
    4. ' )' → logprob: -2.8071796894073486
    5. '   ' → logprob: -3.4321796894073486
    6. ' #' → logprob: -4.057179927825928
    7. '       ' → logprob: -4.682179927825928
    8. ' subsets' → logprob: -4.682179927825928
    9. ' sets' → logprob: -4.932179927825928
    10. ' not' → logprob: -4.932179927825928

Token 1249: ' be' (ID: 413)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.7163357734680176
    2. ' not' → logprob: -1.8413357734680176
    3. '   ' → logprob: -2.3413357734680176
    4. ')' → logprob: -2.4663357734680176
    5. '
' → logprob: -2.8413357734680176
    6. ' #' → logprob: -2.8413357734680176
    7. ' ' → logprob: -2.8413357734680176
    8. ' be' → logprob: -2.9663357734680176
    9. ' )' → logprob: -3.0913357734680176
    10. '       ' → logprob: -4.091335773468018

Token 1250: ' built' (ID: 8113)
  Prédit: ' placed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placed' → logprob: -0.8673855662345886
    2. 'placed' → logprob: -1.6173856258392334
    3. 'built' → logprob: -1.8673856258392334
    4. ' built' → logprob: -2.1173856258392334
    5. ' chosen' → logprob: -4.117385387420654
    6. 'chosen' → logprob: -4.242385387420654
    7. ' considered' → logprob: -4.367385387420654
    8. ')' → logprob: -4.617385387420654
    9. 'added' → logprob: -4.867385387420654
    10. 'consider' → logprob: -4.992385387420654

Token 1251: ' simultaneously' (ID: 38328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5217636227607727
    2. '_' → logprob: -1.646763563156128
    3. '):' → logprob: -2.396763563156128
    4. '),' → logprob: -3.896763563156128
    5. ' or' → logprob: -4.146763801574707
    6. ')_' → logprob: -4.146763801574707
    7. '   ' → logprob: -4.396763801574707
    8. ':' → logprob: -4.896763801574707
    9. ',' → logprob: -5.021763801574707
    10. '):
' → logprob: -5.146763801574707

Token 1252: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49068400263786316
    2. '_' → logprob: -1.9906840324401855
    3. '```' → logprob: -2.7406840324401855
    4. '[' → logprob: -2.9906840324401855
    5. ':' → logprob: -3.8656840324401855
    6. ',' → logprob: -4.2406840324401855
    7. '<|end|>' → logprob: -4.2406840324401855
    8. '#' → logprob: -4.4906840324401855
    9. '   ' → logprob: -4.4906840324401855
    10. '):' → logprob: -4.4906840324401855

Token 1253: ' we' (ID: 581)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9247311353683472
    2. '[' → logprob: -2.1747312545776367
    3. '       ' → logprob: -2.4247312545776367
    4. ':' → logprob: -2.6747312545776367
    5. '```' → logprob: -2.7997312545776367
    6. '   ' → logprob: -2.9247312545776367
    7. '#' → logprob: -3.5497312545776367
    8. ']' → logprob: -3.9247312545776367
    9. '<|end|>' → logprob: -3.9247312545776367
    10. 'for' → logprob: -4.299731254577637

Token 1254: ' find' (ID: 1646)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.21299012005329132
    2. ' can' → logprob: -2.3379900455474854
    3. ' need' → logprob: -3.7129900455474854
    4. 'continue' → logprob: -4.3379902839660645
    5. ' try' → logprob: -4.7129902839660645
    6. '#' → logprob: -4.7129902839660645
    7. ' ' → logprob: -5.3379902839660645
    8. ' want' → logprob: -5.3379902839660645
    9. '
' → logprob: -5.3379902839660645
    10. ' have' → logprob: -5.5879902839660645

Token 1255: ' those' (ID: 2617)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.410384178161621
    2. ' all' → logprob: -1.910384178161621
    3. ' subsets' → logprob: -1.910384178161621
    4. ')' → logprob: -2.410384178161621
    5. ' the' → logprob: -2.535384178161621
    6. ' a' → logprob: -2.660384178161621
    7. '_' → logprob: -3.785384178161621
    8. '   ' → logprob: -3.910384178161621
    9. '<|end|>' → logprob: -4.160384178161621
    10. '[' → logprob: -4.410384178161621

Token 1256: ' that' (ID: 484)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1257: ' separate' (ID: 13574)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8524342775344849
    2. ' are' → logprob: -1.4774342775344849
    3. ' cover' → logprob: -2.1024341583251953
    4. ' form' → logprob: -3.3524341583251953
    5. 'cover' → logprob: -3.9774341583251953
    6. ' intersect' → logprob: -3.9774341583251953
    7. ' separate' → logprob: -3.9774341583251953
    8. ' do' → logprob: -4.227434158325195
    9. ' must' → logprob: -4.602434158325195
    10. ' overlap' → logprob: -4.602434158325195

Token 1258: ' start' (ID: 1604)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7626451253890991
    2. ' ' → logprob: -1.7626451253890991
    3. '<|end|>' → logprob: -2.0126452445983887
    4. '_' → logprob: -2.6376452445983887
    5. ' the' → logprob: -3.8876452445983887
    6. ' '' → logprob: -4.387645244598389
    7. ' "' → logprob: -4.512645244598389
    8. 's' → logprob: -4.512645244598389
    9. 'the' → logprob: -4.637645244598389
    10. ' _' → logprob: -4.887645244598389

Token 1259: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2617926001548767
    2. ')' → logprob: -2.0117926597595215
    3. ' _' → logprob: -3.2617926597595215
    4. '_c' → logprob: -4.0117926597595215
    5. '<|end|>' → logprob: -4.5117926597595215
    6. ',' → logprob: -4.7617926597595215
    7. ' and' → logprob: -5.8867926597595215
    8. '_points' → logprob: -6.1367926597595215
    9. ' or' → logprob: -6.2617926597595215
    10. ')_' → logprob: -6.6367926597595215

Token 1260: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0889534205198288
    2. ' end' → logprob: -2.4639534950256348
    3. '```' → logprob: -12.338953018188477
    4. '#' → logprob: -13.338953018188477
    5. ' ' → logprob: -13.463953018188477
    6. '_end' → logprob: -13.963953018188477
    7. ''end' → logprob: -14.088953018188477
    8. '	end' → logprob: -14.213953018188477
    9. '
' → logprob: -14.213953018188477
    10. '=end' → logprob: -14.338953018188477

Token 1261: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8803746700286865
    2. '       ' → logprob: -1.8803746700286865
    3. '   ' → logprob: -2.1303746700286865
    4. ')' → logprob: -2.1303746700286865
    5. ':
' → logprob: -3.5053746700286865
    6. '#' → logprob: -3.8803746700286865
    7. ']' → logprob: -4.005374908447266
    8. ',' → logprob: -4.005374908447266
    9. '[' → logprob: -4.255374908447266
    10. '=' → logprob: -4.380374908447266

Token 1262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0767945647239685
    2. '#' → logprob: -3.5767946243286133
    3. '   ' → logprob: -4.826794624328613
    4. '<|end|>' → logprob: -5.076794624328613
    5. '...' → logprob: -5.326794624328613
    6. '[' → logprob: -5.826794624328613
    7. ')' → logprob: -5.826794624328613
    8. ',' → logprob: -6.326794624328613
    9. ' if' → logprob: -6.451794624328613
    10. ']' → logprob: -6.701794624328613

Token 1263: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18752709031105042
    2. ')' → logprob: -2.5625271797180176
    3. '#' (adapté à ' #') → logprob: -3.0625271797180176
    4. '<|end|>' → logprob: -3.8125271797180176
    5. '   ' → logprob: -5.687527179718018
    6. ':' → logprob: -5.937527179718018
    7. '<|end|>' → logprob: -6.187527179718018
    8. '
' → logprob: -6.312527179718018
    9. ',' → logprob: -6.312527179718018
    10. '[' → logprob: -6.562527179718018

Token 1264: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2690331041812897
    2. '#' → logprob: -1.8940330743789673
    3. ')' → logprob: -3.644033193588257
    4. '   ' → logprob: -4.644032955169678
    5. ':
' → logprob: -5.144032955169678
    6. '.' → logprob: -5.394032955169678
    7. ',' → logprob: -5.519032955169678
    8. ':' → logprob: -5.894032955169678
    9. ' if' → logprob: -5.894032955169678
    10. 'for' → logprob: -5.894032955169678

Token 1265: ' that' (ID: 484)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.222927212715149
    2. 'n' → logprob: -2.0979270935058594
    3. '(' → logprob: -2.4729270935058594
    4. '#' → logprob: -2.5979270935058594
    5. 'start' → logprob: -2.7229270935058594
    6. 'not' → logprob: -3.3479270935058594
    7. 'len' → logprob: -3.3479270935058594
    8. ' not' → logprob: -3.4729270935058594
    9. ' ' → logprob: -3.7229270935058594
    10. ' (' → logprob: -3.8479270935058594

Token 1266: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.534619152545929
    2. ':' → logprob: -2.784619092941284
    3. 'graph' → logprob: -2.909619092941284
    4. '_' → logprob: -3.159619092941284
    5. '=' → logprob: -3.284619092941284
    6. '#' → logprob: -3.534619092941284
    7. '_graph' → logprob: -3.659619092941284
    8. ' graph' → logprob: -3.784619092941284
    9. 's' → logprob: -4.159619331359863
    10. ' is' → logprob: -4.159619331359863

Token 1267: ' complex' (ID: 8012)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6342381834983826
    2. 'not' → logprob: -1.0092382431030273
    3. ')' → logprob: -3.3842382431030273
    4. 'n' → logprob: -4.259238243103027
    5. ' too' → logprob: -4.259238243103027
    6. '#' → logprob: -5.259238243103027
    7. '```' → logprob: -5.509238243103027
    8. 'too' → logprob: -5.634238243103027
    9. '   ' → logprob: -5.759238243103027
    10. ']' → logprob: -6.384238243103027

Token 1268: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8171625137329102
    2. ')' → logprob: -1.6921625137329102
    3. '<|end|>' → logprob: -2.31716251373291
    4. '       ' → logprob: -2.94216251373291
    5. '#' → logprob: -3.19216251373291
    6. '...' → logprob: -3.56716251373291
    7. '):' → logprob: -3.94216251373291
    8. '   ' → logprob: -3.94216251373291
    9. ':
' → logprob: -4.19216251373291
    10. '[' → logprob: -4.19216251373291

Token 1269: ' instead' (ID: 7665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07705748826265335
    2. '...' → logprob: -3.3270576000213623
    3. '#' → logprob: -4.702057361602783
    4. ' continue' → logprob: -4.702057361602783
    5. ')' → logprob: -4.952057361602783
    6. '        
' → logprob: -6.452057361602783
    7. ' ...' → logprob: -6.452057361602783
    8. 'continue' → logprob: -6.702057361602783
    9. '<|end|>' → logprob: -6.827057361602783
    10. '.' → logprob: -6.952057361602783

Token 1270: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08938499540090561
    2. ':' → logprob: -3.0893850326538086
    3. '   ' → logprob: -4.089385032653809
    4. '#' → logprob: -4.589385032653809
    5. '...' → logprob: -6.089385032653809
    6. '           ' → logprob: -6.089385032653809
    7. 'for' → logprob: -6.339385032653809
    8. ':
' → logprob: -6.839385032653809
    9. 'continue' → logprob: -7.089385032653809
    10. 'graph' → logprob: -7.464385032653809

Token 1271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0062085469253361225
    2. ' if' → logprob: -6.756208419799805
    3. '
' → logprob: -6.881208419799805
    4. '#' → logprob: -7.256208419799805
    5. '        
' → logprob: -7.506208419799805
    6. 'continue' → logprob: -7.756208419799805
    7. '   ' → logprob: -8.006208419799805
    8. '           ' → logprob: -8.006208419799805
    9. '```' → logprob: -8.006208419799805
    10. '...' → logprob: -8.256208419799805

Token 1272: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03716433048248291
    2. '#' (adapté à ' #') → logprob: -3.4121642112731934
    3. 'continue' → logprob: -7.287164211273193
    4. '
' → logprob: -7.662164211273193
    5. '           ' → logprob: -7.912164211273193
    6. '...' → logprob: -8.037164688110352
    7. '```' → logprob: -8.162164688110352
    8. '        
' → logprob: -8.287164688110352
    9. 'for' → logprob: -8.912164688110352
    10. ' continue' → logprob: -9.162164688110352

Token 1273: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49636900424957275
    2. '#' → logprob: -1.6213690042495728
    3. 'dist' → logprob: -2.371368885040283
    4. 'graph' → logprob: -3.496368885040283
    5. 'if' → logprob: -3.621368885040283
    6. 'distance' → logprob: -4.621368885040283
    7. 'for' → logprob: -4.871368885040283
    8. 'start' → logprob: -4.871368885040283
    9. 'visited' → logprob: -5.246368885040283
    10. 'from' → logprob: -6.371368885040283

Token 1274: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.44816532731056213
    2. ' i' → logprob: -2.3231654167175293
    3. 'graph' → logprob: -3.5731654167175293
    4. '#' → logprob: -3.5731654167175293
    5. 's' → logprob: -3.6981654167175293
    6. 'dist' → logprob: -3.6981654167175293
    7. 'c' → logprob: -3.9481654167175293
    8. 'start' → logprob: -4.323165416717529
    9. 'rest' → logprob: -4.573165416717529
    10. ' line' → logprob: -4.698165416717529

Token 1275: ' circle' (ID: 22005)
  Prédit: 'circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'circle' → logprob: -0.5523999333381653
    2. ' circle' → logprob: -1.8023998737335205
    3. 'i' → logprob: -2.0523998737335205
    4. 'c' → logprob: -3.0523998737335205
    5. 'subset' → logprob: -3.0523998737335205
    6. ' subset' → logprob: -3.9273998737335205
    7. ' i' → logprob: -4.6774001121521
    8. ' c' → logprob: -6.3024001121521
    9. ' pair' → logprob: -7.1774001121521
    10. 'pair' → logprob: -7.3024001121521

Token 1276: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0494345426559448
    2. ':' → logprob: -1.5494345426559448
    3. '       ' → logprob: -1.6744345426559448
    4. '           ' → logprob: -2.2994346618652344
    5. ' in' → logprob: -2.9244346618652344
    6. ',' → logprob: -3.7994346618652344
    7. ' for' → logprob: -4.299434661865234
    8. ' if' → logprob: -4.549434661865234
    9. 'for' → logprob: -4.674434661865234
    10. '   ' → logprob: -4.674434661865234

Token 1277: ' check' (ID: 2371)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17099033296108246
    2. ' for' → logprob: -2.170990228652954
    3. '           ' → logprob: -4.670990467071533
    4. 'if' → logprob: -5.295990467071533
    5. ' continue' → logprob: -5.295990467071533
    6. '   ' → logprob: -5.545990467071533
    7. 'for' → logprob: -5.670990467071533
    8. '       ' → logprob: -5.920990467071533
    9. ' we' → logprob: -6.045990467071533
    10. '#' → logprob: -6.670990467071533

Token 1278: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0712173581123352
    2. 'if' → logprob: -3.5712172985076904
    3. '           ' → logprob: -3.8212172985076904
    4. ' for' → logprob: -5.0712175369262695
    5. '   ' → logprob: -5.6962175369262695
    6. '       ' → logprob: -6.0712175369262695
    7. ' whether' → logprob: -6.4462175369262695
    8. ' the' → logprob: -6.8212175369262695
    9. 'for' → logprob: -7.0712175369262695
    10. ' i' → logprob: -7.1962175369262695

Token 1279: ' it' (ID: 480)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.8985479474067688
    2. ' point' → logprob: -1.148547887802124
    3. ' it' → logprob: -2.148547887802124
    4. ' the' → logprob: -2.898547887802124
    5. 'the' → logprob: -3.773547887802124
    6. 'it' → logprob: -3.898547887802124
    7. ' any' → logprob: -4.023548126220703
    8. ' circles' → logprob: -4.898548126220703
    9. 'cir' → logprob: -5.148548126220703
    10. 'they' → logprob: -5.398548126220703

Token 1280: ' contains' (ID: 8895)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5370162725448608
    2. 'is' → logprob: -1.5370162725448608
    3. 'contains' → logprob: -3.2870163917541504
    4. ' touches' → logprob: -3.4120163917541504
    5. 'inter' → logprob: -3.5370163917541504
    6. ' can' → logprob: -3.9120163917541504
    7. ' contains' → logprob: -4.28701639175415
    8. ' intersects' → logprob: -4.53701639175415
    9. 'covers' → logprob: -4.91201639175415
    10. 'can' → logprob: -4.91201639175415

Token 1281: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9041777849197388
    2. 'the' → logprob: -2.279177665710449
    3. ' xs' → logprob: -2.279177665710449
    4. 'xs' → logprob: -2.279177665710449
    5. 'start' → logprob: -2.404177665710449
    6. '(xs' → logprob: -2.904177665710449
    7. ' start' → logprob: -3.029177665710449
    8. ' (' → logprob: -3.279177665710449
    9. 's' → logprob: -4.154177665710449
    10. ' a' → logprob: -4.654177665710449

Token 1282: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.015546360053122044
    2. 'xs' → logprob: -4.6405463218688965
    3. ' start' → logprob: -6.0155463218688965
    4. 'point' → logprob: -6.2655463218688965
    5. 'x' → logprob: -7.7655463218688965
    6. 's' → logprob: -7.8905463218688965
    7. 'rat' → logprob: -8.265546798706055
    8. 'starting' → logprob: -8.890546798706055
    9. 'current' → logprob: -10.515546798706055
    10. ' point' → logprob: -10.640546798706055

Token 1283: ' or' (ID: 503)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.0835413932800293
    2. '_' → logprob: -1.4585413932800293
    3. '_points' → logprob: -2.3335413932800293
    4. ' or' → logprob: -2.4585413932800293
    5. '_point' → logprob: -2.9585413932800293
    6. ',' → logprob: -3.0835413932800293
    7. ')' → logprob: -3.5835413932800293
    8. 'point' → logprob: -4.083541393280029
    9. '```' → logprob: -4.083541393280029
    10. ')_' → logprob: -4.458541393280029

Token 1284: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.6776065230369568
    2. 'end' → logprob: -0.8026065230369568
    3. '#' → logprob: -3.1776065826416016
    4. '=end' → logprob: -7.052606582641602
    5. ' or' → logprob: -7.927606582641602
    6. ' #' → logprob: -8.302606582641602
    7. ')' → logprob: -8.927606582641602
    8. 'point' → logprob: -9.052606582641602
    9. ' point' → logprob: -9.302606582641602
    10. 'or' → logprob: -9.427606582641602

Token 1285: ' point' (ID: 2438)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.5601885318756104
    2. '_' → logprob: -1.8101885318756104
    3. '_c' → logprob: -2.0601885318756104
    4. ',' → logprob: -2.0601885318756104
    5. '_point' → logprob: -2.6851885318756104
    6. ')' → logprob: -2.8101885318756104
    7. 'point' → logprob: -2.9351885318756104
    8. ' or' → logprob: -2.9351885318756104
    9. ':' → logprob: -3.8101885318756104
    10. '       ' → logprob: -4.310188293457031

Token 1286: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27084195613861084
    2. ':' → logprob: -3.0208420753479004
    3. ' if' → logprob: -3.2708420753479004
    4. ':
' → logprob: -3.5208420753479004
    5. ',' → logprob: -4.0208420753479
    6. ' and' → logprob: -4.2708420753479
    7. '   ' → logprob: -4.3958420753479
    8. '           ' → logprob: -4.3958420753479
    9. ')' → logprob: -4.6458420753479
    10. '.' → logprob: -4.7708420753479

Token 1287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017711792141199112
    2. '```' → logprob: -5.142711639404297
    3. '           ' → logprob: -5.517711639404297
    4. '<|end|>' → logprob: -6.017711639404297
    5. ')' → logprob: -6.517711639404297
    6. ' if' → logprob: -6.517711639404297
    7. ' for' → logprob: -8.017711639404297
    8. ',' → logprob: -8.142711639404297
    9. '#' → logprob: -8.392711639404297
    10. 'for' → logprob: -8.392711639404297

Token 1288: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025711646303534508
    2. ' if' → logprob: -5.150711536407471
    3. '           ' → logprob: -5.150711536407471
    4. ',' → logprob: -6.025711536407471
    5. ' or' → logprob: -6.025711536407471
    6. '#' (adapté à ' #') → logprob: -6.275711536407471
    7. ' and' → logprob: -6.650711536407471
    8. '```' → logprob: -6.775711536407471
    9. '<|end|>' → logprob: -6.900711536407471
    10. 'if' → logprob: -7.150711536407471

Token 1289: ' We'll' (ID: 46830)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023227889090776443
    2. ' if' → logprob: -4.648227691650391
    3. '#' → logprob: -5.398227691650391
    4. '           ' → logprob: -5.898227691650391
    5. 'if' → logprob: -6.148227691650391
    6. '```' → logprob: -6.273227691650391
    7. ' for' → logprob: -7.398227691650391
    8. 'for' → logprob: -7.773227691650391
    9. 'continue' → logprob: -8.89822769165039
    10. '
' → logprob: -9.14822769165039

Token 1290: ' find' (ID: 1646)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.29133570194244385
    2. ' continue' → logprob: -2.4163355827331543
    3. '       ' → logprob: -2.5413355827331543
    4. 'for' → logprob: -3.6663355827331543
    5. '#' → logprob: -3.9163355827331543
    6. '   ' → logprob: -4.666335582733154
    7. 'if' → logprob: -5.041335582733154
    8. '
' → logprob: -5.166335582733154
    9. ' for' → logprob: -5.541335582733154
    10. '```' → logprob: -5.666335582733154

Token 1291: ' shortest' (ID: 70564)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6253793239593506
    2. ' the' → logprob: -1.5003793239593506
    3. 'the' → logprob: -2.8753793239593506
    4. 'if' → logprob: -3.1253793239593506
    5. '       ' → logprob: -3.1253793239593506
    6. ' for' → logprob: -3.5003793239593506
    7. 'for' → logprob: -4.62537956237793
    8. '```' → logprob: -4.62537956237793
    9. ')' → logprob: -4.87537956237793
    10. '   ' → logprob: -5.25037956237793

Token 1292: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.4000093936920166
    2. '_path' → logprob: -1.1500093936920166
    3. ' path' → logprob: -5.4000091552734375
    4. 'distance' → logprob: -5.9000091552734375
    5. '_paths' → logprob: -6.0250091552734375
    6. 'paths' → logprob: -6.9000091552734375
    7. '   ' → logprob: -8.150009155273438
    8. '_' → logprob: -8.275009155273438
    9. '_c' → logprob: -8.275009155273438
    10. '`' → logprob: -8.275009155273438

Token 1293: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9851744174957275
    2. '=' → logprob: -1.4851744174957275
    3. '_' → logprob: -1.8601744174957275
    4. '   ' → logprob: -3.2351744174957275
    5. 'from' → logprob: -3.2351744174957275
    6. '_c' → logprob: -3.6101744174957275
    7. '(' → logprob: -3.6101744174957275
    8. ')' → logprob: -3.9851744174957275
    9. '```' → logprob: -4.110174179077148
    10. '_from' → logprob: -4.610174179077148

Token 1294: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.06468121707439423
    2. 'i' → logprob: -3.8146812915802
    3. ' start' → logprob: -4.314681053161621
    4. 'the' → logprob: -4.439681053161621
    5. '0' → logprob: -5.064681053161621
    6. 'cir' → logprob: -6.189681053161621
    7. 'circle' → logprob: -6.439681053161621
    8. 'each' → logprob: -7.314681053161621
    9. 'any' → logprob: -7.814681053161621
    10. ' the' → logprob: -7.814681053161621

Token 1295: ' to' (ID: 316)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.010331671684980392
    2. '_nodes' → logprob: -4.885331630706787
    3. '_' → logprob: -7.385331630706787
    4. ',' → logprob: -7.885331630706787
    5. ')' → logprob: -8.260332107543945
    6. '_to' → logprob: -8.260332107543945
    7. '```' → logprob: -8.385332107543945
    8. '`' → logprob: -8.760332107543945
    9. '_points' → logprob: -9.135332107543945
    10. 'to' → logprob: -9.135332107543945

Token 1296: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0033395520877093077
    2. ' end' → logprob: -5.753339767456055
    3. 'circle' → logprob: -9.503339767456055
    4. '```' → logprob: -10.753339767456055
    5. 'cir' → logprob: -11.378339767456055
    6. 'all' → logprob: -11.378339767456055
    7. 'c' → logprob: -12.003339767456055
    8. 'n' → logprob: -12.128339767456055
    9. 'start' → logprob: -12.253339767456055
    10. 'any' → logprob: -12.503339767456055

Token 1297: ' by' (ID: 656)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2681684494018555
    2. '       ' → logprob: -1.6431684494018555
    3. ')' → logprob: -1.7681684494018555
    4. '   ' → logprob: -2.3931684494018555
    5. ':' → logprob: -2.6431684494018555
    6. '_c' → logprob: -3.0181684494018555
    7. ' =' → logprob: -3.6431684494018555
    8. ',' → logprob: -3.7681684494018555
    9. ']' → logprob: -4.7681684494018555
    10. '```' → logprob: -4.7681684494018555

Token 1298: ' crossing' (ID: 50946)
  Prédit: 'checking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'checking' → logprob: -1.532374382019043
    2. 'cir' → logprob: -1.657374382019043
    3. '   ' → logprob: -2.407374382019043
    4. 'b' → logprob: -2.532374382019043
    5. 'going' → logprob: -2.907374382019043
    6. 'finding' → logprob: -3.282374382019043
    7. 'passing' → logprob: -3.282374382019043
    8. 'def' → logprob: -3.407374382019043
    9. ' travers' → logprob: -3.657374382019043
    10. 'using' → logprob: -3.782374382019043

Token 1299: ' minimal' (ID: 19957)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -1.1895928382873535
    2. ' a' → logprob: -1.5645928382873535
    3. ' one' → logprob: -1.5645928382873535
    4. 'a' → logprob: -2.5645928382873535
    5. ' circles' → logprob: -2.8145928382873535
    6. ' the' → logprob: -3.1895928382873535
    7. ' at' → logprob: -3.5645928382873535
    8. '```' → logprob: -3.9395928382873535
    9. 'the' → logprob: -4.0645928382873535
    10. 'one' → logprob: -4.9395928382873535

Token 1300: ' walls' (ID: 20562)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.13910171389579773
    2. 'number' → logprob: -3.01410174369812
    3. '_c' → logprob: -3.38910174369812
    4. '_number' → logprob: -4.264101505279541
    5. '_' → logprob: -5.014101505279541
    6. ' _' → logprob: -5.014101505279541
    7. '`' → logprob: -5.139101505279541
    8. '```' → logprob: -5.639101505279541
    9. 'cir' → logprob: -5.889101505279541
    10. '_circle' → logprob: -5.889101505279541

Token 1301: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29871419072151184
    2. '   ' → logprob: -1.7987141609191895
    3. '
' → logprob: -2.7987141609191895
    4. ' if' → logprob: -5.0487141609191895
    5. ')' → logprob: -5.4237141609191895
    6. '        
' → logprob: -5.7987141609191895
    7. ',' → logprob: -5.9237141609191895
    8. '```' → logprob: -6.0487141609191895
    9. 'def' → logprob: -6.2987141609191895
    10. ':
' → logprob: -6.7987141609191895

Token 1302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0076987906359136105
    2. '   ' → logprob: -5.757699012756348
    3. ')' → logprob: -6.382699012756348
    4. '           ' → logprob: -6.757699012756348
    5. ',' → logprob: -7.882699012756348
    6. '.' → logprob: -8.257699012756348
    7. '<|end|>' → logprob: -8.632699012756348
    8. '        
' → logprob: -9.007699012756348
    9. ' if' → logprob: -9.632699012756348
    10. '...' → logprob: -9.757699012756348

Token 1303: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04799431934952736
    2. '   ' → logprob: -3.797994375228882
    3. 'if' → logprob: -4.922994136810303
    4. ' if' → logprob: -4.922994136810303
    5. '#' (adapté à ' #') → logprob: -5.422994136810303
    6. '
' → logprob: -5.922994136810303
    7. '        
' → logprob: -6.672994136810303
    8. '```' → logprob: -7.547994136810303
    9. '    
' → logprob: -9.172994613647461
    10. 'start' → logprob: -9.172994613647461

Token 1304: ' Simpl' (ID: 92258)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.0280935764312744
    2. 'if' → logprob: -1.6530935764312744
    3. 'dist' → logprob: -1.7780935764312744
    4. '#' → logprob: -2.0280935764312744
    5. '       ' → logprob: -2.6530935764312744
    6. 'distance' → logprob: -3.5280935764312744
    7. 'graph' → logprob: -4.153093338012695
    8. 'from' → logprob: -4.528093338012695
    9. 'queue' → logprob: -5.153093338012695
    10. '   ' → logprob: -5.528093338012695

Token 1305: 'ify' (ID: 1985)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8923637866973877
    2. '```' → logprob: -1.7673637866973877
    3. '#' → logprob: -2.0173637866973877
    4. 'e' → logprob: -2.7673637866973877
    5. '   ' → logprob: -2.8923637866973877
    6. 'if' → logprob: -3.0173637866973877
    7. 'def' → logprob: -3.2673637866973877
    8. 'er' → logprob: -3.7673637866973877
    9. '           ' → logprob: -4.892363548278809
    10. 'ified' → logprob: -5.142363548278809

Token 1306: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0057788812555372715
    2. ' if' → logprob: -6.380778789520264
    3. '```' → logprob: -6.630778789520264
    4. '   ' → logprob: -6.755778789520264
    5. '        
' → logprob: -8.130779266357422
    6. '
' → logprob: -8.255779266357422
    7. 'if' → logprob: -8.255779266357422
    8. '#' → logprob: -8.380779266357422
    9. 'graph' → logprob: -9.630779266357422
    10. ',' → logprob: -9.630779266357422

Token 1307: ' BFS' (ID: 190016)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1962019205093384
    2. 'if' → logprob: -1.3212019205093384
    3. 'start' → logprob: -2.196201801300049
    4. 'graph' → logprob: -3.071201801300049
    5. 'def' → logprob: -3.321201801300049
    6. 'the' → logprob: -3.446201801300049
    7. '#' → logprob: -3.571201801300049
    8. 'dist' → logprob: -3.696201801300049
    9. 'import' → logprob: -3.821201801300049
    10. '   ' → logprob: -3.821201801300049

Token 1308: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7300997972488403
    2. '   ' → logprob: -1.1050997972488403
    3. 'graph' → logprob: -2.105099678039551
    4. 'if' → logprob: -3.480099678039551
    5. 'start' → logprob: -4.355099678039551
    6. '#' → logprob: -4.480099678039551
    7. 'dist' → logprob: -5.605099678039551
    8. ' if' → logprob: -6.355099678039551
    9. '
' → logprob: -6.480099678039551
    10. 'visited' → logprob: -7.230099678039551

Token 1309: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.4809284806251526
    2. 'graph' → logprob: -1.6059284210205078
    3. 'range' → logprob: -2.105928421020508
    4. 'start' → logprob: -3.730928421020508
    5. 'the' → logprob: -4.730928421020508
    6. 'circle' → logprob: -5.355928421020508
    7. '[start' → logprob: -5.605928421020508
    8. 'c' → logprob: -5.730928421020508
    9. ' circles' → logprob: -5.855928421020508
    10. '[' → logprob: -5.980928421020508

Token 1310: ':

' (ID: 1402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06107889488339424
    2. '   ' → logprob: -3.4360787868499756
    3. 'if' → logprob: -4.936079025268555
    4. 'graph' → logprob: -4.936079025268555
    5. 'start' → logprob: -5.561079025268555
    6. '#' → logprob: -5.686079025268555
    7. 'dist' → logprob: -6.311079025268555
    8. ' if' → logprob: -6.436079025268555
    9. '
' → logprob: -7.936079025268555
    10. 'distance' → logprob: -8.186079025268555

Token 1311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01922764629125595
    2. '   ' → logprob: -4.019227504730225
    3. 'graph' → logprob: -7.269227504730225
    4. 'start' → logprob: -9.019227981567383
    5. '#' → logprob: -9.769227981567383
    6. 'if' → logprob: -9.769227981567383
    7. '        
' → logprob: -10.019227981567383
    8. '```' → logprob: -10.519227981567383
    9. ' graph' → logprob: -11.394227981567383
    10. '
' → logprob: -11.394227981567383

Token 1312: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04218536987900734
    2. '   ' → logprob: -3.2921853065490723
    3. 'if' → logprob: -6.792185306549072
    4. 'graph' → logprob: -7.042185306549072
    5. '#' (adapté à ' #') → logprob: -7.417185306549072
    6. 'dist' → logprob: -7.417185306549072
    7. 'visited' → logprob: -8.16718578338623
    8. 'start' → logprob: -8.41718578338623
    9. '
' → logprob: -9.16718578338623
    10. 'distance' → logprob: -9.29218578338623

Token 1313: ' Define' (ID: 38966)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6093563437461853
    2. 'start' → logprob: -1.23435640335083
    3. '       ' → logprob: -2.98435640335083
    4. '#' → logprob: -3.48435640335083
    5. 'dist' → logprob: -3.48435640335083
    6. 'graph' → logprob: -3.85935640335083
    7. 'visited' → logprob: -4.10935640335083
    8. '   ' → logprob: -4.85935640335083
    9. 'distance' → logprob: -5.98435640335083
    10. 'for' → logprob: -6.10935640335083

Token 1314: ' for' (ID: 395)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.22920919954776764
    2. ' start' → logprob: -1.6042091846466064
    3. '```' → logprob: -6.7292094230651855
    4. 'outside' → logprob: -7.1042094230651855
    5. 'visited' → logprob: -7.3542094230651855
    6. '`' → logprob: -8.104208946228027
    7. 'distance' → logprob: -8.229208946228027
    8. '   ' → logprob: -8.979208946228027
    9. '``' → logprob: -9.354208946228027
    10. ' outside' → logprob: -9.479208946228027

Token 1315: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19064021110534668
    2. 'each' → logprob: -2.6906402111053467
    3. ' i' → logprob: -3.5656402111053467
    4. 's' → logprob: -4.065640449523926
    5. 'u' → logprob: -4.565640449523926
    6. 'circle' → logprob: -4.690640449523926
    7. 'c' → logprob: -4.815640449523926
    8. 'start' → logprob: -5.065640449523926
    9. ' each' → logprob: -5.315640449523926
    10. 'the' → logprob: -5.565640449523926

Token 1316: ' circle' (ID: 22005)
  Prédit: 'circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'circle' → logprob: -0.5254471898078918
    2. ' circle' → logprob: -1.025447130203247
    3. 'i' → logprob: -3.400447130203247
    4. ' i' → logprob: -5.525447368621826
    5. 'node' → logprob: -5.650447368621826
    6. ' node' → logprob: -5.900447368621826
    7. 'c' → logprob: -6.025447368621826
    8. ' line' → logprob: -6.525447368621826
    9. 'line' → logprob: -7.650447368621826
    10. '_circle' → logprob: -7.900447368621826

Token 1317: ' if' (ID: 538)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6495463848114014
    2. ',' → logprob: -2.2745463848114014
    3. ' the' → logprob: -2.5245463848114014
    4. 'the' → logprob: -3.2745463848114014
    5. ' a' → logprob: -3.5245463848114014
    6. 'a' → logprob: -3.5245463848114014
    7. ':' → logprob: -3.6495463848114014
    8. ' visited' → logprob: -3.8995463848114014
    9. '   ' → logprob: -4.0245466232299805
    10. ' whether' → logprob: -4.1495466232299805

Token 1318: ' touching' (ID: 52058)
  Prédit: ' it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' it' → logprob: -1.1044931411743164
    2. 'point' → logprob: -1.3544931411743164
    3. ' point' → logprob: -1.3544931411743164
    4. 'it' → logprob: -3.2294931411743164
    5. ' they' → logprob: -3.3544931411743164
    6. ' the' → logprob: -3.7294931411743164
    7. ' start' → logprob: -4.229493141174316
    8. 'they' → logprob: -4.479493141174316
    9. 'start' → logprob: -4.729493141174316
    10. 'the' → logprob: -5.354493141174316

Token 1319: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.085371732711792
    2. '_' → logprob: -1.835371732711792
    3. '_start' → logprob: -2.335371732711792
    4. 's' → logprob: -2.460371732711792
    5. 'the' → logprob: -2.835371732711792
    6. ' the' → logprob: -3.085371732711792
    7. ' start' → logprob: -3.460371732711792
    8. ' or' → logprob: -3.585371732711792
    9. '_c' → logprob: -4.085371971130371
    10. 'them' → logprob: -4.210371971130371

Token 1320: ' point' (ID: 2438)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.47389504313468933
    2. '_' → logprob: -1.5988950729370117
    3. ' or' → logprob: -2.8488950729370117
    4. '_points' → logprob: -3.0988950729370117
    5. '_or' → logprob: -3.7238950729370117
    6. 's' → logprob: -5.098895072937012
    7. '_s' → logprob: -5.098895072937012
    8. ',' → logprob: -5.348895072937012
    9. '_nodes' → logprob: -5.473895072937012
    10. '   ' → logprob: -5.473895072937012

Token 1321: ' (' (ID: 350)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.1339788436889648
    2. '       ' → logprob: -1.3839788436889648
    3. ' or' → logprob: -2.008978843688965
    4. '_' → logprob: -2.508978843688965
    5. '           ' → logprob: -3.383978843688965
    6. 'if' → logprob: -3.633978843688965
    7. '   ' → logprob: -3.758978843688965
    8. '_or' → logprob: -3.758978843688965
    9. ' if' → logprob: -3.883978843688965
    10. '_inside' → logprob: -4.383978843688965

Token 1322: 'inside' (ID: 79475)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.49241340160369873
    2. ')' → logprob: -1.3674134016036987
    3. 'or' → logprob: -3.3674135208129883
    4. ' )' → logprob: -3.8674135208129883
    5. ' not' → logprob: -3.9924135208129883
    6. '=' → logprob: -4.742413520812988
    7. ',' → logprob: -5.367413520812988
    8. ''' → logprob: -5.367413520812988
    9. ' outside' → logprob: -5.367413520812988
    10. '):
' → logprob: -5.492413520812988

Token 1323: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4657614827156067
    2. ' or' → logprob: -1.340761423110962
    3. '),' → logprob: -2.715761423110962
    4. '_circle' → logprob: -4.090761661529541
    5. '):' → logprob: -4.840761661529541
    6. '):
' → logprob: -5.215761661529541
    7. ',' → logprob: -5.715761661529541
    8. ' )' → logprob: -6.090761661529541
    9. '_c' → logprob: -6.465761661529541
    10. '_or' → logprob: -6.590761661529541

Token 1324: ' touching' (ID: 52058)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.24506241083145142
    2. 'not' → logprob: -2.4950623512268066
    3. 'equal' → logprob: -2.9950623512268066
    4. 'equals' → logprob: -3.9950623512268066
    5. '==' → logprob: -4.245062351226807
    6. ' outside' → logprob: -4.245062351226807
    7. ' not' → logprob: -4.370062351226807
    8. 'on' → logprob: -4.745062351226807
    9. ')' → logprob: -5.120062351226807
    10. ' equal' → logprob: -6.245062351226807

Token 1325: ')
' (ID: 446)
  Prédit: '_circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_circle' → logprob: -0.9136081337928772
    2. '_c' → logprob: -1.2886080741882324
    3. ')' → logprob: -1.5386080741882324
    4. ')_' → logprob: -2.7886080741882324
    5. ' or' → logprob: -3.7886080741882324
    6. '_' → logprob: -5.413608074188232
    7. ' )' → logprob: -5.413608074188232
    8. '),' → logprob: -5.913608074188232
    9. '_point' → logprob: -6.038608074188232
    10. '):
' → logprob: -6.538608074188232

Token 1326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.06454598903656
    2. ' or' → logprob: -2.1895461082458496
    3. ':' → logprob: -2.3145461082458496
    4. '_' → logprob: -2.5645461082458496
    5. ' =' → logprob: -2.6895461082458496
    6. ')' → logprob: -2.9395461082458496
    7. '```' → logprob: -3.0645461082458496
    8. '   ' → logprob: -3.4395461082458496
    9. '):' → logprob: -4.06454610824585
    10. '=' → logprob: -4.06454610824585

Token 1327: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7975426316261292
    2. ' or' → logprob: -0.7975426316261292
    3. ' and' → logprob: -3.4225425720214844
    4. '   ' → logprob: -3.4225425720214844
    5. ' if' → logprob: -4.922542572021484
    6. ' =' → logprob: -5.047542572021484
    7. ':' → logprob: -5.797542572021484
    8. '=' → logprob: -5.922542572021484
    9. '           ' → logprob: -6.172542572021484
    10. ',' → logprob: -6.422542572021484

Token 1328: ' Define' (ID: 38966)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14546266198158264
    2. ' or' → logprob: -3.14546275138855
    3. ' and' → logprob: -3.89546275138855
    4. ' if' → logprob: -4.145462512969971
    5. ' =' → logprob: -4.395462512969971
    6. ' for' → logprob: -4.895462512969971
    7. '#' → logprob: -5.520462512969971
    8. '   ' → logprob: -5.645462512969971
    9. '=' → logprob: -5.645462512969971
    10. ',' → logprob: -5.645462512969971

Token 1329: ' same' (ID: 2684)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35078591108322144
    2. ' for' → logprob: -1.2257859706878662
    3. 'if' → logprob: -7.975785732269287
    4. '   ' → logprob: -8.100786209106445
    5. '       ' → logprob: -8.100786209106445
    6. 'start' → logprob: -8.475786209106445
    7. '#' → logprob: -8.475786209106445
    8. ' start' → logprob: -8.600786209106445
    9. ' if' → logprob: -8.600786209106445
    10. '```' → logprob: -8.850786209106445

Token 1330: ' for' (ID: 395)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.7528413534164429
    2. '       ' → logprob: -1.1278413534164429
    3. 'for' → logprob: -2.7528414726257324
    4. 'if' → logprob: -3.1278414726257324
    5. ' if' → logprob: -3.5028414726257324
    6. ' for' → logprob: -4.502841472625732
    7. '   ' → logprob: -4.627841472625732
    8. ' or' → logprob: -4.877841472625732
    9. '```' → logprob: -5.002841472625732
    10. '_' → logprob: -5.252841472625732

Token 1331: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4782640337944031
    2. ' end' → logprob: -0.9782640337944031
    3. 'for' → logprob: -5.978263854980469
    4. ' for' → logprob: -7.603263854980469
    5. 'the' → logprob: -7.728263854980469
    6. ' the' → logprob: -8.478263854980469
    7. 'each' → logprob: -8.978263854980469
    8. '   ' → logprob: -8.978263854980469
    9. ' each' → logprob: -9.478263854980469
    10. 'circle' → logprob: -9.978263854980469

Token 1332: ' point' (ID: 2438)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.03272292762994766
    2. '_touch' → logprob: -4.2827229499816895
    3. '_s' → logprob: -4.7827229499816895
    4. '_start' → logprob: -5.7827229499816895
    5. '_points' → logprob: -5.7827229499816895
    6. '_' → logprob: -7.0327229499816895
    7. '\' → logprob: -7.4077229499816895
    8. '       ' → logprob: -7.7827229499816895
    9. '```' → logprob: -8.032722473144531
    10. '_to' → logprob: -9.032722473144531

Token 1333: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6805073618888855
    2. 'start' → logprob: -1.5555074214935303
    3. '   ' → logprob: -2.1805074214935303
    4. '_start' → logprob: -3.3055074214935303
    5. '_touch' → logprob: -3.3055074214935303
    6. '
' → logprob: -3.8055074214935303
    7. '#' → logprob: -4.555507183074951
    8. '```' → logprob: -4.805507183074951
    9. '_' → logprob: -4.930507183074951
    10. ',' → logprob: -4.930507183074951

Token 1334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019843061454594135
    2. '```' → logprob: -8.001984596252441
    3. ',' → logprob: -8.126984596252441
    4. '           ' → logprob: -8.501984596252441
    5. '        
' → logprob: -8.751984596252441
    6. ')' → logprob: -8.876984596252441
    7. '
' → logprob: -8.876984596252441
    8. ':' → logprob: -9.126984596252441
    9. '   ' → logprob: -9.251984596252441
    10. ' for' → logprob: -9.376984596252441

Token 1335: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012146407971158624
    2. '
' → logprob: -7.376214504241943
    3. '        
' → logprob: -9.001214981079102
    4. '   ' → logprob: -9.376214981079102
    5. '#' (adapté à ' #') → logprob: -9.376214981079102
    6. 'start' → logprob: -9.876214981079102
    7. ',' → logprob: -10.001214981079102
    8. '           ' → logprob: -10.126214981079102
    9. '```' → logprob: -10.126214981079102
    10. ' for' → logprob: -11.126214981079102

Token 1336: ' BFS' (ID: 190016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006150735076516867
    2. 'for' → logprob: -6.256150722503662
    3. 'start' → logprob: -6.506150722503662
    4. '#' → logprob: -6.756150722503662
    5. 'if' → logprob: -7.506150722503662
    6. '   ' → logprob: -8.13115119934082
    7. '
' → logprob: -8.63115119934082
    8. '        
' → logprob: -9.25615119934082
    9. 'from' → logprob: -9.38115119934082
    10. '```' → logprob: -9.63115119934082

Token 1337: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3031695485115051
    2. '   ' → logprob: -2.0531694889068604
    3. 'graph' → logprob: -3.9281694889068604
    4. ' =' → logprob: -4.3031697273254395
    5. '_' → logprob: -4.6781697273254395
    6. 'start' → logprob: -4.6781697273254395
    7. '(start' → logprob: -4.8031697273254395
    8. ':' → logprob: -5.1781697273254395
    9. '```' → logprob: -5.1781697273254395
    10. '=' → logprob: -5.3031697273254395

Token 1338: ' circles' (ID: 45131)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.09638724476099014
    2. 'the' → logprob: -3.2213871479034424
    3. 'each' → logprob: -4.3463873863220215
    4. ' start' → logprob: -4.4713873863220215
    5. 'cir' → logprob: -4.4713873863220215
    6. 'i' → logprob: -5.2213873863220215
    7. 'all' → logprob: -5.5963873863220215
    8. 'circle' → logprob: -5.9713873863220215
    9. ' the' → logprob: -6.4713873863220215
    10. ' each' → logprob: -7.5963873863220215

Token 1339: ' containing' (ID: 15683)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23500517010688782
    2. '   ' → logprob: -2.6100051403045654
    3. 'start' → logprob: -3.2350051403045654
    4. ' if' → logprob: -3.3600051403045654
    5. '
' → logprob: -4.3600053787231445
    6. ' start' → logprob: -4.6100053787231445
    7. 'if' → logprob: -4.7350053787231445
    8. '_start' → logprob: -4.9850053787231445
    9. '#' → logprob: -5.3600053787231445
    10. '[start' → logprob: -6.4850053787231445

Token 1340: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00703125074505806
    2. 'the' → logprob: -5.007031440734863
    3. ' start' → logprob: -8.757031440734863
    4. 'xs' → logprob: -9.007031440734863
    5. '0' → logprob: -11.632031440734863
    6. ' the' → logprob: -11.757031440734863
    7. '```' → logprob: -12.007031440734863
    8. '
' → logprob: -13.132031440734863
    9. '`' → logprob: -13.632031440734863
    10. 's' → logprob: -13.632031440734863

Token 1341: ' point' (ID: 2438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4314347207546234
    2. '_c' → logprob: -1.3064347505569458
    3. '   ' → logprob: -3.8064346313476562
    4. ',' → logprob: -4.181434631347656
    5. '_' → logprob: -4.931434631347656
    6. ' to' → logprob: -4.931434631347656
    7. '           ' → logprob: -5.306434631347656
    8. ' if' → logprob: -5.931434631347656
    9. '_to' → logprob: -6.056434631347656
    10. ':' → logprob: -6.306434631347656

Token 1342: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11695345491170883
    2. '   ' → logprob: -3.1169533729553223
    3. ' if' → logprob: -3.6169533729553223
    4. ':' → logprob: -5.241953372955322
    5. '_c' → logprob: -5.616953372955322
    6. ',' → logprob: -5.741953372955322
    7. '           ' → logprob: -5.741953372955322
    8. 'start' → logprob: -5.866953372955322
    9. ':
' → logprob: -5.991953372955322
    10. 'if' → logprob: -6.241953372955322

Token 1343: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.10032205283641815
    2. ' circles' → logprob: -2.3503220081329346
    3. 'end' → logprob: -10.350321769714355
    4. '```' → logprob: -10.350321769714355
    5. 'those' → logprob: -11.475321769714355
    6. 'circle' → logprob: -11.600321769714355
    7. '
' → logprob: -12.100321769714355
    8. '   ' → logprob: -12.350321769714355
    9. '[]' → logprob: -12.850321769714355
    10. 'the' → logprob: -13.100321769714355

Token 1344: ' containing' (ID: 15683)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.6296429634094238
    2. ':' → logprob: -1.6296429634094238
    3. ',' → logprob: -1.8796429634094238
    4. ')' → logprob: -2.129642963409424
    5. '_cont' → logprob: -2.754642963409424
    6. '       ' → logprob: -2.879642963409424
    7. 's' → logprob: -3.504642963409424
    8. '_' → logprob: -3.754642963409424
    9. ':
' → logprob: -4.004642963409424
    10. '_c' → logprob: -4.254642963409424

Token 1345: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.00530645065009594
    2. ' end' → logprob: -6.130306243896484
    3. 'cir' → logprob: -6.255306243896484
    4. 'the' → logprob: -7.130306243896484
    5. '(end' → logprob: -8.505306243896484
    6. 'start' → logprob: -9.880306243896484
    7. ' circles' → logprob: -10.380306243896484
    8. '```' → logprob: -11.005306243896484
    9. 'circle' → logprob: -11.130306243896484
    10. 'cont' → logprob: -11.505306243896484

Token 1346: ' point' (ID: 2438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1819762885570526
    2. '_c' → logprob: -2.931976318359375
    3. '   ' → logprob: -3.681976318359375
    4. ':' → logprob: -3.681976318359375
    5. ' if' → logprob: -3.806976318359375
    6. '_' → logprob: -5.056976318359375
    7. ')' → logprob: -5.306976318359375
    8. 'if' → logprob: -5.556976318359375
    9. ',' → logprob: -5.681976318359375
    10. ' =' → logprob: -5.931976318359375

Token 1347: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.415548324584961
    2. ' if' → logprob: -2.290548324584961
    3. 'if' → logprob: -2.415548324584961
    4. '       ' → logprob: -2.665548324584961
    5. '   ' → logprob: -2.665548324584961
    6. '(s' → logprob: -2.790548324584961
    7. ')' → logprob: -3.040548324584961
    8. ',' → logprob: -3.415548324584961
    9. '[' → logprob: -3.540548324584961
    10. '(' → logprob: -3.665548324584961

Token 1348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00406070938333869
    2. '   ' → logprob: -6.754060745239258
    3. '           ' → logprob: -7.129060745239258
    4. ',' → logprob: -7.129060745239258
    5. '.' → logprob: -8.004060745239258
    6. ')' → logprob: -8.254060745239258
    7. '<|end|>' → logprob: -9.129060745239258
    8. '
' → logprob: -9.504060745239258
    9. ':' → logprob: -9.629060745239258
    10. '#' → logprob: -9.879060745239258

Token 1349: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0054691326804459095
    2. '   ' → logprob: -5.50546932220459
    3. ')' → logprob: -8.38046932220459
    4. '           ' → logprob: -8.38046932220459
    5. ' if' → logprob: -8.63046932220459
    6. ',' → logprob: -8.63046932220459
    7. '
' → logprob: -8.75546932220459
    8. ':' → logprob: -9.38046932220459
    9. '        
' → logprob: -10.13046932220459
    10. '```' → logprob: -10.25546932220459

Token 1350: ' Distance' (ID: 53583)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014326975680887699
    2. '   ' → logprob: -4.389327049255371
    3. 'if' → logprob: -7.389327049255371
    4. '
' → logprob: -7.764327049255371
    5. ' if' → logprob: -8.139327049255371
    6. '#' → logprob: -8.889327049255371
    7. '           ' → logprob: -9.139327049255371
    8. '```' → logprob: -10.014327049255371
    9. 'graph' → logprob: -10.264327049255371
    10. 'for' → logprob: -10.514327049255371

Token 1351: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7242265939712524
    2. '=' → logprob: -0.8492265939712524
    3. 's' → logprob: -2.849226474761963
    4. '_s' → logprob: -4.974226474761963
    5. '_c' → logprob: -5.599226474761963
    6. '(s' → logprob: -5.724226474761963
    7. '_' → logprob: -6.099226474761963
    8. ':' → logprob: -6.474226474761963
    9. '   ' → logprob: -6.599226474761963
    10. 'from' → logprob: -6.599226474761963

Token 1352: ' number' (ID: 2086)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.045194149017334
    2. '0' → logprob: -1.920194149017334
    3. 'increment' → logprob: -2.045194149017334
    4. ' the' → logprob: -2.170194149017334
    5. ' increment' → logprob: -2.545194149017334
    6. 'number' → logprob: -3.045194149017334
    7. '1' → logprob: -3.545194149017334
    8. ' circles' → logprob: -3.920194149017334
    9. ' number' → logprob: -4.295194149017334
    10. 'cir' → logprob: -4.420194149017334

Token 1353: ' of' (ID: 328)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29335224628448486
    2. '(
' → logprob: -2.7933521270751953
    3. '=' → logprob: -2.9183521270751953
    4. '_' → logprob: -3.0433521270751953
    5. '(' → logprob: -3.5433521270751953
    6. '[' → logprob: -4.168352127075195
    7. 'of' → logprob: -4.543352127075195
    8. '+
' → logprob: -4.793352127075195
    9. 's' → logprob: -5.043352127075195
    10. '[
' → logprob: -5.043352127075195

Token 1354: ' walls' (ID: 20562)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.3414018750190735
    2. 'walls' → logprob: -1.8414018154144287
    3. ' circles' → logprob: -2.3414018154144287
    4. ' walls' → logprob: -3.9664018154144287
    5. 'cross' → logprob: -5.216402053833008
    6. 'steps' → logprob: -5.466402053833008
    7. ' steps' → logprob: -6.216402053833008
    8. '+' → logprob: -7.091402053833008
    9. ' crossed' → logprob: -7.966402053833008
    10. 'edges' → logprob: -8.091402053833008

Token 1355: ' climbed' (ID: 85578)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.594658613204956
    2. ':
' → logprob: -2.219658613204956
    3. ' if' → logprob: -2.469658613204956
    4. ':' → logprob: -2.844658613204956
    5. '   ' → logprob: -3.594658613204956
    6. ' =' → logprob: -3.594658613204956
    7. ')' → logprob: -3.844658613204956
    8. 'if' → logprob: -3.969658613204956
    9. '=' → logprob: -4.219658851623535
    10. '_c' → logprob: -4.344658851623535

Token 1356: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25748157501220703
    2. 'if' → logprob: -1.757481575012207
    3. ' if' → logprob: -3.257481575012207
    4. '   ' → logprob: -5.257481575012207
    5. '
' → logprob: -5.757481575012207
    6. 'distance' → logprob: -6.132481575012207
    7. 'start' → logprob: -6.507481575012207
    8. '#' → logprob: -7.257481575012207
    9. 'def' → logprob: -7.882481575012207
    10. 'from' → logprob: -8.007481575012207

Token 1357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05309572443366051
    2. '   ' → logprob: -3.178095817565918
    3. '
' → logprob: -5.553095817565918
    4. ')' → logprob: -6.803095817565918
    5. '.' → logprob: -6.803095817565918
    6. ' if' → logprob: -7.178095817565918
    7. ',' → logprob: -7.553095817565918
    8. 'if' → logprob: -7.678095817565918
    9. ':
' → logprob: -7.803095817565918
    10. '```' → logprob: -7.928095817565918

Token 1358: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019626447930932045
    2. 'if' → logprob: -4.144626617431641
    3. '   ' → logprob: -6.269626617431641
    4. '
' → logprob: -7.269626617431641
    5. '#' (adapté à ' #') → logprob: -8.01962661743164
    6. ' if' → logprob: -8.26962661743164
    7. '```' → logprob: -8.51962661743164
    8. 'start' → logprob: -9.51962661743164
    9. '        
' → logprob: -9.64462661743164
    10. 'from' → logprob: -10.64462661743164

Token 1359: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07580924779176712
    2. '       ' → logprob: -2.7008092403411865
    3. ' if' → logprob: -6.200809478759766
    4. 'start' → logprob: -6.450809478759766
    5. '#' → logprob: -7.325809478759766
    6. '   ' → logprob: -7.450809478759766
    7. 'dist' → logprob: -8.200809478759766
    8. 'for' → logprob: -8.575809478759766
    9. 'distance' → logprob: -8.575809478759766
    10. 'from' → logprob: -8.575809478759766

Token 1360: ' start' (ID: 1604)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7643126249313354
    2. 'not' → logprob: -0.8893126249313354
    3. 'start' → logprob: -2.764312744140625
    4. 'len' → logprob: -3.389312744140625
    5. ' start' → logprob: -4.014312744140625
    6. ' len' → logprob: -4.764312744140625
    7. '   ' → logprob: -10.889312744140625
    8. ' ' → logprob: -11.389312744140625
    9. '(len' → logprob: -11.389312744140625
    10. '(not' → logprob: -11.389312744140625

Token 1361: ' or' (ID: 503)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00015800826076883823
    2. '_s' → logprob: -9.500158309936523
    3. '_' → logprob: -9.875158309936523
    4. '\' → logprob: -11.500158309936523
    5. '_points' → logprob: -11.875158309936523
    6. '_cont' → logprob: -12.500158309936523
    7. '```' → logprob: -13.500158309936523
    8. ' _' → logprob: -13.625158309936523
    9. '
' → logprob: -14.125158309936523
    10. '`' → logprob: -14.625158309936523

Token 1362: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0400877520442009
    2. ' end' → logprob: -3.2900876998901367
    3. 'not' → logprob: -6.915087699890137
    4. ' not' → logprob: -7.290087699890137
    5. '#' → logprob: -9.540087699890137
    6. ' ' → logprob: -10.040087699890137
    7. '
' → logprob: -10.040087699890137
    8. '=' → logprob: -10.040087699890137
    9. '   ' → logprob: -10.290087699890137
    10. '_end' → logprob: -10.915087699890137

Token 1363: ' not' (ID: 625)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0005537479883059859
    2. '_' → logprob: -8.125554084777832
    3. '_s' → logprob: -8.875554084777832
    4. '_not' → logprob: -10.625554084777832
    5. '_points' → logprob: -11.000554084777832
    6. '_cont' → logprob: -11.250554084777832
    7. '\' → logprob: -11.625554084777832
    8. '```' → logprob: -12.125554084777832
    9. '_inside' → logprob: -12.250554084777832
    10. '_circle' → logprob: -12.375554084777832

Token 1364: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.6724082827568054
    2. ' inside' → logprob: -1.0474083423614502
    3. '_inside' → logprob: -2.17240834236145
    4. 'in' → logprob: -4.172408103942871
    5. ' in' → logprob: -4.797408103942871
    6. '_in' → logprob: -8.172408103942871
    7. 'empty' → logprob: -8.672408103942871
    8. '_' → logprob: -8.922408103942871
    9. '_empty' → logprob: -9.297408103942871
    10. ' _' → logprob: -9.547408103942871

Token 1365: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.4903036952018738
    2. 'any' → logprob: -0.9903036952018738
    3. 'cir' → logprob: -4.6153035163879395
    4. 'circle' → logprob: -5.6153035163879395
    5. ' circle' → logprob: -7.3653035163879395
    6. ' circles' → logprob: -7.7403035163879395
    7. '_any' → logprob: -7.7403035163879395
    8. ' start' → logprob: -7.8653035163879395
    9. 'start' → logprob: -8.240303993225098
    10. '[]' → logprob: -8.990303993225098

Token 1366: ' circles' (ID: 45131)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.3964126706123352
    2. 'circle' → logprob: -1.7714126110076904
    3. '_circle' → logprob: -2.7714126110076904
    4. 'cir' → logprob: -3.1464126110076904
    5. 'start' → logprob: -3.3964126110076904
    6. ' start' → logprob: -4.8964128494262695
    7. ' circle' → logprob: -5.3964128494262695
    8. ' circles' → logprob: -6.1464128494262695
    9. ' _' → logprob: -7.2714128494262695
    10. '_start' → logprob: -7.6464128494262695

Token 1367: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3081439435482025
    2. ':
' → logprob: -1.558143973350525
    3. ' and' → logprob: -3.8081438541412354
    4. ',' → logprob: -3.8081438541412354
    5. ' or' → logprob: -5.4331440925598145
    6. 'and' → logprob: -6.4331440925598145
    7. '       ' → logprob: -6.5581440925598145
    8. '   ' → logprob: -6.9331440925598145
    9. '):' → logprob: -8.183143615722656
    10. ')' → logprob: -8.558143615722656

Token 1368: ' means' (ID: 4748)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6431396007537842
    2. '#' → logprob: -2.143139600753784
    3. 'if' → logprob: -2.143139600753784
    4. '       ' → logprob: -2.143139600753784
    5. 'print' → logprob: -2.768139600753784
    6. 'distance' → logprob: -4.018139839172363
    7. ' print' → logprob: -4.268139839172363
    8. '   ' → logprob: -4.643139839172363
    9. ' #' → logprob: -5.143139839172363
    10. 'dist' → logprob: -5.393139839172363

Token 1369: ' rat' (ID: 8908)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6112191677093506
    2. 'distance' → logprob: -1.2362191677093506
    3. ' rat' → logprob: -3.1112191677093506
    4. 'rat' → logprob: -3.3612191677093506
    5. ' the' → logprob: -3.8612191677093506
    6. ' minimal' → logprob: -4.11121940612793
    7. 'minimal' → logprob: -4.11121940612793
    8. ' distance' → logprob: -4.11121940612793
    9. 'they' → logprob: -5.36121940612793
    10. '0' → logprob: -5.48621940612793

Token 1370: ' can' (ID: 665)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.7664060592651367
    2. ' can' → logprob: -1.2664060592651367
    3. 'must' → logprob: -2.5164060592651367
    4. ' needs' → logprob: -2.7664060592651367
    5. ' cannot' → logprob: -3.6414060592651367
    6. '_can' → logprob: -3.8914060592651367
    7. ' is' → logprob: -4.016406059265137
    8. ' has' → logprob: -4.641406059265137
    9. 'needs' → logprob: -5.016406059265137
    10. 'can' → logprob: -5.141406059265137

Token 1371: ' go' (ID: 810)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.18080854415893555
    2. 'move' → logprob: -1.9308085441589355
    3. ' go' → logprob: -4.8058085441589355
    4. 'cross' → logprob: -5.6808085441589355
    5. 'pass' → logprob: -5.8058085441589355
    6. 'walk' → logprob: -5.9308085441589355
    7. ' move' → logprob: -6.4308085441589355
    8. 'start' → logprob: -7.0558085441589355
    9. 'stay' → logprob: -8.930809020996094
    10. 'travel' → logprob: -8.930809020996094

Token 1372: ' outside' (ID: 7539)
  Prédit: 'without'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'without' → logprob: -0.13568994402885437
    2. 'outside' → logprob: -2.8856899738311768
    3. 'through' → logprob: -3.1356899738311768
    4. ' without' → logprob: -4.010689735412598
    5. 'around' → logprob: -6.385689735412598
    6. ' through' → logprob: -6.385689735412598
    7. 'out' → logprob: -6.385689735412598
    8. '   ' → logprob: -7.135689735412598
    9. 'every' → logprob: -7.260689735412598
    10. 'any' → logprob: -7.510689735412598

Token 1373: ' without' (ID: 2935)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10725048184394836
    2. ' if' → logprob: -2.732250452041626
    3. 'if' → logprob: -4.357250690460205
    4. '
' → logprob: -4.732250690460205
    5. '   ' → logprob: -5.107250690460205
    6. ':
' → logprob: -6.232250690460205
    7. '        
' → logprob: -6.607250690460205
    8. '```' → logprob: -6.857250690460205
    9. ':' → logprob: -7.357250690460205
    10. ',' → logprob: -7.357250690460205

Token 1374: ' crossing' (ID: 50946)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.31571444869041443
    2. 'cl' → logprob: -1.3157144784927368
    3. ' crossing' → logprob: -6.065714359283447
    4. 'any' → logprob: -9.940714836120605
    5. ' climbing' → logprob: -10.065714836120605
    6. 'walls' → logprob: -10.940714836120605
    7. 'wall' → logprob: -11.190714836120605
    8. ' cross' → logprob: -12.815714836120605
    9. 'touch' → logprob: -14.190714836120605
    10. '```' → logprob: -14.440714836120605

Token 1375: ' any' (ID: 1062)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4932407140731812
    2. '```' → logprob: -1.4932407140731812
    3. '       ' → logprob: -2.1182408332824707
    4. '_' → logprob: -2.1182408332824707
    5. 's' → logprob: -2.2432408332824707
    6. 'if' → logprob: -3.2432408332824707
    7. '   ' → logprob: -3.4932408332824707
    8. ':' → logprob: -4.368240833282471
    9. ':
' → logprob: -4.368240833282471
    10. '_c' → logprob: -4.493240833282471

Token 1376: ' walls' (ID: 20562)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.871530294418335
    2. '       ' → logprob: -1.371530294418335
    3. 'if' → logprob: -2.246530294418335
    4. '_c' → logprob: -3.246530294418335
    5. '```' → logprob: -3.496530294418335
    6. '   ' → logprob: -3.871530294418335
    7. '_' → logprob: -3.871530294418335
    8. ':
' → logprob: -4.121530532836914
    9. '.
' → logprob: -4.371530532836914
    10. 's' → logprob: -4.371530532836914

Token 1377: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4370981752872467
    2. 'if' → logprob: -1.0620981454849243
    3. '```' → logprob: -5.437098026275635
    4. ' if' → logprob: -5.937098026275635
    5. '
' → logprob: -7.687098026275635
    6. '   ' → logprob: -8.062098503112793
    7. '#' → logprob: -8.437098503112793
    8. '        
' → logprob: -8.687098503112793
    9. 'import' → logprob: -10.187098503112793
    10. '``' → logprob: -10.562098503112793

Token 1378: ' minimal' (ID: 19957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3897983133792877
    2. ' so' → logprob: -2.014798402786255
    3. 'continue' → logprob: -2.764798402786255
    4. ' continue' → logprob: -2.889798402786255
    5. '   ' → logprob: -3.264798402786255
    6. 'return' → logprob: -4.639798164367676
    7. 'so' → logprob: -5.264798164367676
    8. '0' → logprob: -5.889798164367676
    9. '
' → logprob: -5.889798164367676
    10. ':
' → logprob: -6.389798164367676

Token 1379: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2042083740234375
    2. 'walls' → logprob: -1.2042083740234375
    3. '       ' → logprob: -2.0792083740234375
    4. '```' → logprob: -2.8292083740234375
    5. ' walls' → logprob: -3.2042083740234375
    6. '
' → logprob: -3.8292083740234375
    7. 'if' → logprob: -3.9542083740234375
    8. '   ' → logprob: -3.9542083740234375
    9. '_wall' → logprob: -4.2042083740234375
    10. '_c' → logprob: -4.3292083740234375

Token 1380: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023524489370174706
    2. ' ' → logprob: -8.375235557556152
    3. 'zero' → logprob: -13.375235557556152
    4. '```' → logprob: -13.750235557556152
    5. '`' → logprob: -14.125235557556152
    6. ' zero' → logprob: -14.250235557556152
    7. '   ' → logprob: -14.625235557556152
    8. '``' → logprob: -15.250235557556152
    9. ' ' → logprob: -17.125234603881836
    10. '
' → logprob: -17.500234603881836

Token 1381: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9623810658231378e-05
    2. ' ' → logprob: -10.875020027160645
    3. '`' → logprob: -15.375020027160645
    4. '```' → logprob: -16.500019073486328
    5. '
' → logprob: -16.625019073486328
    6. ''' → logprob: -16.625019073486328
    7. 'zero' → logprob: -17.000019073486328
    8. '1' → logprob: -17.250019073486328
    9. '"' → logprob: -17.375019073486328
    10. '``' → logprob: -17.625019073486328

Token 1382: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07884769886732101
    2. 'if' → logprob: -3.453847646713257
    3. '
' → logprob: -3.578847646713257
    4. '   ' → logprob: -4.703847885131836
    5. '```' → logprob: -5.703847885131836
    6. ' if' → logprob: -6.328847885131836
    7. '        
' → logprob: -6.328847885131836
    8. '    
' → logprob: -8.828847885131836
    9. '``' → logprob: -10.078847885131836
    10. 'print' → logprob: -10.328847885131836

Token 1383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49484753608703613
    2. '   ' → logprob: -0.9948475360870361
    3. 'if' → logprob: -3.994847536087036
    4. '
' → logprob: -6.369847297668457
    5. '```' → logprob: -8.244847297668457
    6. '        
' → logprob: -9.494847297668457
    7. '    
' → logprob: -9.744847297668457
    8. ' if' → logprob: -10.369847297668457
    9. 'print' → logprob: -12.994847297668457
    10. '``' → logprob: -14.244847297668457

Token 1384: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4788277745246887
    2. 'if' → logprob: -0.9788277745246887
    3. '   ' → logprob: -5.978827953338623
    4. '```' → logprob: -6.478827953338623
    5. ' if' → logprob: -7.603827953338623
    6. 'result' → logprob: -8.978827476501465
    7. '
' → logprob: -10.728827476501465
    8. '        
' → logprob: -11.603827476501465
    9. 'print' → logprob: -12.228827476501465
    10. '``' → logprob: -12.353827476501465

Token 1385: ' So' (ID: 2632)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4006750285625458
    2. '       ' → logprob: -1.1506750583648682
    3. '   ' → logprob: -5.025674819946289
    4. 'print' → logprob: -5.025674819946289
    5. '```' → logprob: -7.900674819946289
    6. ' if' → logprob: -9.150674819946289
    7. 'result' → logprob: -9.525674819946289
    8. '
' → logprob: -11.525674819946289
    9. '        
' → logprob: -11.775674819946289
    10. 'return' → logprob: -13.025674819946289

Token 1386: ' answer' (ID: 6052)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009523024782538414
    2. 'print' → logprob: -5.259522914886475
    3. ' if' → logprob: -5.509522914886475
    4. '       ' → logprob: -9.259523391723633
    5. '```' → logprob: -9.509523391723633
    6. '   ' → logprob: -10.134523391723633
    7. 'result' → logprob: -11.009523391723633
    8. '
' → logprob: -12.884523391723633
    9. ' print' → logprob: -13.134523391723633
    10. 'answer' → logprob: -13.759523391723633

Token 1387: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9031068086624146
    2. ' if' → logprob: -1.7781068086624146
    3. ' =' → logprob: -1.9031068086624146
    4. '
' → logprob: -1.9031068086624146
    5. 'if' → logprob: -2.653106689453125
    6. ':' → logprob: -4.028106689453125
    7. ':
' → logprob: -4.528106689453125
    8. '   ' → logprob: -4.653106689453125
    9. 'print' → logprob: -4.778106689453125
    10. '```' → logprob: -5.153106689453125

Token 1388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6267334222793579
    2. 'if' → logprob: -0.8767334222793579
    3. '   ' → logprob: -3.5017333030700684
    4. 'print' → logprob: -4.126733303070068
    5. ' if' → logprob: -5.876733303070068
    6. 'return' → logprob: -8.376733779907227
    7. '```' → logprob: -9.001733779907227
    8. 'result' → logprob: -10.376733779907227
    9. '
' → logprob: -10.501733779907227
    10. '           ' → logprob: -11.376733779907227

Token 1389: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18514901399612427
    2. 'if' → logprob: -2.1851489543914795
    3. 'print' → logprob: -2.9351489543914795
    4. '   ' → logprob: -5.810149192810059
    5. ' if' → logprob: -8.435149192810059
    6. '```' → logprob: -8.560149192810059
    7. 'result' → logprob: -10.810149192810059
    8. ' print' → logprob: -12.685149192810059
    9. 'answer' → logprob: -13.060149192810059
    10. '``' → logprob: -13.560149192810059

Token 1390: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20419429242610931
    2. 'print' → logprob: -1.7041943073272705
    3. '       ' → logprob: -6.204194068908691
    4. '   ' → logprob: -7.704194068908691
    5. '```' → logprob: -8.454194068908691
    6. 'answer' → logprob: -10.579194068908691
    7. ' if' → logprob: -10.704194068908691
    8. 'result' → logprob: -11.079194068908691
    9. '``' → logprob: -11.079194068908691
    10. 'ans' → logprob: -11.579194068908691

Token 1391: ' start' (ID: 1604)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5489766001701355
    2. 'start' → logprob: -1.0489766597747803
    3. ' start' → logprob: -3.2989766597747803
    4. ' len' → logprob: -3.9239766597747803
    5. 'not' → logprob: -4.423976421356201
    6. ' not' → logprob: -5.673976421356201
    7. '(len' → logprob: -10.54897689819336
    8. '   ' → logprob: -10.67397689819336
    9. ' ' → logprob: -12.67397689819336
    10. '       ' → logprob: -12.79897689819336

Token 1392: ' and' (ID: 326)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00011331788846291602
    2. '_' → logprob: -9.250113487243652
    3. '_s' → logprob: -11.375113487243652
    4. '_or' → logprob: -13.625113487243652
    5. ' _' → logprob: -13.875113487243652
    6. '==' → logprob: -14.000113487243652
    7. '\' → logprob: -14.500113487243652
    8. '_not' → logprob: -14.625113487243652
    9. ' ==' → logprob: -15.125113487243652
    10. '_out' → logprob: -15.250113487243652

Token 1393: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.012104938738048077
    2. ' end' → logprob: -4.5121049880981445
    3. '_c' → logprob: -7.0121049880981445
    4. 'not' → logprob: -9.887104988098145
    5. ' not' → logprob: -10.637104988098145
    6. 'start' → logprob: -11.387104988098145
    7. '(end' → logprob: -11.387104988098145
    8. '_end' → logprob: -11.512104988098145
    9. 'c' → logprob: -11.637104988098145
    10. '==' → logprob: -12.137104988098145

Token 1394: ' are' (ID: 553)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.050661586225032806
    2. '_are' → logprob: -4.550661563873291
    3. '_inside' → logprob: -4.675661563873291
    4. '_' → logprob: -4.800661563873291
    5. ' are' → logprob: -5.300661563873291
    6. ' not' → logprob: -5.550661563873291
    7. 'not' → logprob: -5.550661563873291
    8. 'are' → logprob: -5.925661563873291
    9. '_not' → logprob: -6.175661563873291
    10. 'inside' → logprob: -6.550661563873291

Token 1395: ' in' (ID: 306)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.4554879665374756
    2. 'not' → logprob: -1.8304879665374756
    3. 'the' → logprob: -2.0804879665374756
    4. 'outside' → logprob: -3.5804879665374756
    5. 'equal' → logprob: -3.9554879665374756
    6. 'in' → logprob: -4.080488204956055
    7. ' not' → logprob: -5.080488204956055
    8. ' inside' → logprob: -5.830488204956055
    9. ' the' → logprob: -5.830488204956055
    10. 'same' → logprob: -6.205488204956055

Token 1396: ' same' (ID: 2684)
  Prédit: 'different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'different' → logprob: -0.12147659808397293
    2. 'the' → logprob: -3.246476650238037
    3. 'start' → logprob: -3.746476650238037
    4. '0' → logprob: -3.996476650238037
    5. ' different' → logprob: -4.371476650238037
    6. 'same' → logprob: -4.871476650238037
    7. '[]' → logprob: -5.246476650238037
    8. 'no' → logprob: -5.621476650238037
    9. ' the' → logprob: -6.496476650238037
    10. 'set' → logprob: -7.496476650238037

Token 1397: ' connected' (ID: 12079)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.0092697143554688
    2. 'region' → logprob: -1.3842697143554688
    3. '_circle' → logprob: -2.3842697143554688
    4. 'component' → logprob: -2.7592697143554688
    5. ' region' → logprob: -2.7592697143554688
    6. '_region' → logprob: -3.2592697143554688
    7. 'circle' → logprob: -3.7592697143554688
    8. 'connected' → logprob: -3.8842697143554688
    9. 'space' → logprob: -3.8842697143554688
    10. '_component' → logprob: -4.259269714355469

Token 1398: ' area' (ID: 3624)
  Prédit: '_component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_component' → logprob: -0.07544031739234924
    2. '_' → logprob: -3.5754404067993164
    3. '_components' → logprob: -3.9504404067993164
    4. '_c' → logprob: -4.075440406799316
    5. 'component' → logprob: -5.200440406799316
    6. '_circle' → logprob: -6.825440406799316
    7. '_comp' → logprob: -7.325440406799316
    8. ' component' → logprob: -8.200440406799316
    9. '_com' → logprob: -8.825440406799316
    10. '_space' → logprob: -9.075440406799316

Token 1399: ' outside' (ID: 7539)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9140715003013611
    2. '_' → logprob: -1.4140715599060059
    3. ':
' → logprob: -1.6640715599060059
    4. '_
' → logprob: -2.789071559906006
    5. 's' → logprob: -3.664071559906006
    6. '   ' → logprob: -4.414071559906006
    7. '```' → logprob: -4.539071559906006
    8. ' or' → logprob: -4.664071559906006
    9. ' and' → logprob: -5.039071559906006
    10. '=' → logprob: -5.664071559906006

Token 1400: ' circles' (ID: 45131)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23793770372867584
    2. ':' → logprob: -2.2379376888275146
    3. '   ' → logprob: -2.7379376888275146
    4. '```' → logprob: -3.6129376888275146
    5. '       ' → logprob: -5.487937927246094
    6. ' if' → logprob: -5.737937927246094
    7. ' and' → logprob: -6.362937927246094
    8. 'if' → logprob: -6.862937927246094
    9. ' :
' → logprob: -7.987937927246094
    10. '_' → logprob: -8.112937927246094

Token 1401: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6956077218055725
    2. ':
' → logprob: -1.3206076622009277
    3. '   ' → logprob: -1.8206076622009277
    4. ':' → logprob: -3.0706076622009277
    5. ' and' → logprob: -4.570607662200928
    6. ' if' → logprob: -4.820607662200928
    7. 'if' → logprob: -6.070607662200928
    8. '```' → logprob: -6.945607662200928
    9. '
' → logprob: -7.570607662200928
    10. ' =' → logprob: -7.570607662200928

Token 1402: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04888688400387764
    2. '0' → logprob: -3.048886775970459
    3. ' print' → logprob: -8.423887252807617
    4. '       ' → logprob: -10.423887252807617
    5. 'return' → logprob: -10.548887252807617
    6. ' ' → logprob: -10.923887252807617
    7. '```' → logprob: -13.048887252807617
    8. '   ' → logprob: -13.173887252807617
    9. '           ' → logprob: -13.798887252807617
    10. '``' → logprob: -15.423887252807617

Token 1403: '0' (ID: 15)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008618474006652832
    2. '0' → logprob: -4.758618354797363
    3. '```' → logprob: -13.133618354797363
    4. '       ' → logprob: -14.133618354797363
    5. ' print' → logprob: -14.633618354797363
    6. '   ' → logprob: -14.883618354797363
    7. '``' → logprob: -15.633618354797363
    8. 'return' → logprob: -15.758618354797363
    9. '           ' → logprob: -16.75861930847168
    10. '
' → logprob: -17.50861930847168

Token 1404: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0421597957611084
    2. '       ' → logprob: -1.7921597957611084
    3. ':
' → logprob: -1.7921597957611084
    4. '
' → logprob: -2.6671597957611084
    5. 'else' → logprob: -2.9171597957611084
    6. 'if' → logprob: -3.1671597957611084
    7. '        
' → logprob: -3.6671597957611084
    8. '```' → logprob: -3.6671597957611084
    9. '    
' → logprob: -3.9171597957611084
    10. ':' → logprob: -3.9171597957611084

Token 1405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01647324115037918
    2. 'else' → logprob: -4.641473293304443
    3. ' else' → logprob: -5.766473293304443
    4. '
' → logprob: -6.891473293304443
    5. '   ' → logprob: -7.266473293304443
    6. '<|end|>' → logprob: -7.516473293304443
    7. '        
' → logprob: -8.141472816467285
    8. '.' → logprob: -8.266472816467285
    9. ')' → logprob: -8.766472816467285
    10. '```' → logprob: -9.391472816467285

Token 1406: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007010174915194511
    2. 'else' → logprob: -5.757009983062744
    3. ' else' → logprob: -6.507009983062744
    4. '   ' → logprob: -7.007009983062744
    5. 'print' → logprob: -7.632009983062744
    6. '```' → logprob: -7.757009983062744
    7. 'if' → logprob: -9.007010459899902
    8. '
' → logprob: -9.132010459899902
    9. ' if' → logprob: -9.257010459899902
    10. '           ' → logprob: -9.507010459899902

Token 1407: ' Else' (ID: 42978)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27422505617141724
    2. 'print' → logprob: -1.8992249965667725
    3. 'if' → logprob: -2.7742249965667725
    4. 'else' → logprob: -3.7742249965667725
    5. '   ' → logprob: -6.149225234985352
    6. '
' → logprob: -6.524225234985352
    7. 'elif' → logprob: -7.399225234985352
    8. '```' → logprob: -8.399225234985352
    9. 'If' → logprob: -9.024225234985352
    10. ' if' → logprob: -9.274225234985352

Token 1408: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2108736038208008
    2. 'print' → logprob: -1.3358736038208008
    3. ' if' → logprob: -2.085873603820801
    4. 'if' → logprob: -2.335873603820801
    5. ':
' → logprob: -2.335873603820801
    6. ' print' → logprob: -2.835873603820801
    7. ':' → logprob: -3.585873603820801
    8. '   ' → logprob: -4.335873603820801
    9. 'answer' → logprob: -5.335873603820801
    10. '#' → logprob: -5.710873603820801

Token 1409: ' find' (ID: 1646)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21089620888233185
    2. ' print' → logprob: -2.0858962535858154
    3. ' if' → logprob: -3.4608962535858154
    4. 'if' → logprob: -4.210896015167236
    5. '       ' → logprob: -4.960896015167236
    6. 'answer' → logprob: -5.335896015167236
    7. ' answer' → logprob: -5.585896015167236
    8. '   ' → logprob: -5.960896015167236
    9. '#' → logprob: -7.335896015167236
    10. 'distance' → logprob: -8.835896492004395

Token 1410: ' shortest' (ID: 70564)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8436069488525391
    2. 'distance' → logprob: -1.593606948852539
    3. 'minimal' → logprob: -2.593606948852539
    4. 'min' → logprob: -2.718606948852539
    5. 'len' → logprob: -2.843606948852539
    6. ' minimal' → logprob: -2.843606948852539
    7. 'the' → logprob: -3.093606948852539
    8. '   ' → logprob: -4.593606948852539
    9. 'minimum' → logprob: -4.718606948852539
    10. ' min' → logprob: -4.718606948852539

Token 1411: ' distance' (ID: 9324)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.017508577555418015
    2. 'path' → logprob: -4.267508506774902
    3. '_distance' → logprob: -6.142508506774902
    4. 'distance' → logprob: -7.767508506774902
    5. ' path' → logprob: -7.892508506774902
    6. '_dist' → logprob: -9.517508506774902
    7. '```' → logprob: -9.517508506774902
    8. '_possible' → logprob: -9.767508506774902
    9. '_paths' → logprob: -9.892508506774902
    10. '
' → logprob: -10.517508506774902

Token 1412: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0098284482955933
    2. 'if' → logprob: -1.1348284482955933
    3. ' if' → logprob: -1.5098284482955933
    4. '
' → logprob: -2.884828567504883
    5. ' =' → logprob: -4.384828567504883
    6. '   ' → logprob: -4.509828567504883
    7. '=' → logprob: -6.009828567504883
    8. '```' → logprob: -6.134828567504883
    9. ':
' → logprob: -6.384828567504883
    10. '        
' → logprob: -6.509828567504883

Token 1413: ' circles' (ID: 45131)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.006094219628721476
    2. ' start' → logprob: -5.756094455718994
    3. 'any' → logprob: -6.506094455718994
    4. 'the' → logprob: -7.256094455718994
    5. 'cir' → logprob: -7.506094455718994
    6. 'end' → logprob: -10.131093978881836
    7. ' any' → logprob: -10.631093978881836
    8. 'circle' → logprob: -11.131093978881836
    9. '```' → logprob: -11.256093978881836
    10. 'set' → logprob: -11.381093978881836

Token 1414: ' containing' (ID: 15683)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05293947830796242
    2. 'if' → logprob: -3.4279394149780273
    3. ' if' → logprob: -4.302939414978027
    4. '
' → logprob: -5.302939414978027
    5. '        
' → logprob: -8.427939414978027
    6. '   ' → logprob: -8.552939414978027
    7. '```' → logprob: -9.427939414978027
    8. '#' → logprob: -10.177939414978027
    9. '           ' → logprob: -10.677939414978027
    10. ',' → logprob: -11.802939414978027

Token 1415: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.004209343809634447
    2. ' start' → logprob: -5.754209518432617
    3. 'the' → logprob: -7.004209518432617
    4. 's' → logprob: -10.004209518432617
    5. ' the' → logprob: -10.379209518432617
    6. '(start' → logprob: -11.879209518432617
    7. 'xs' → logprob: -12.129209518432617
    8. 'both' → logprob: -12.129209518432617
    9. '[start' → logprob: -12.754209518432617
    10. 'point' → logprob: -12.879209518432617

Token 1416: ' point' (ID: 2438)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14586032927036285
    2. '_c' → logprob: -2.520860433578491
    3. ')' → logprob: -3.395860433578491
    4. '_
' → logprob: -4.895860195159912
    5. ' and' → logprob: -5.895860195159912
    6. '   ' → logprob: -6.520860195159912
    7. '```' → logprob: -6.520860195159912
    8. ',' → logprob: -6.895860195159912
    9. ' or' → logprob: -7.020860195159912
    10. '`' → logprob: -7.145860195159912

Token 1417: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3005685806274414
    2. '_' → logprob: -1.8005685806274414
    3. ' if' → logprob: -1.8005685806274414
    4. ')' → logprob: -2.3005685806274414
    5. '   ' → logprob: -2.3005685806274414
    6. ':' → logprob: -3.5505685806274414
    7. ' and' → logprob: -3.6755685806274414
    8. ',' → logprob: -3.9255685806274414
    9. 'if' → logprob: -4.050568580627441
    10. ' =' → logprob: -4.175568580627441

Token 1418: ' circles' (ID: 45131)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.3540131449699402
    2. 'cir' → logprob: -1.604013204574585
    3. ' end' → logprob: -2.979013204574585
    4. ' circles' → logprob: -3.104013204574585
    5. 'those' → logprob: -6.979012966156006
    6. ' those' → logprob: -8.854013442993164
    7. 'the' → logprob: -9.479013442993164
    8. 'circle' → logprob: -9.604013442993164
    9. '   ' → logprob: -10.479013442993164
    10. ' the' → logprob: -11.104013442993164

Token 1419: ' containing' (ID: 15683)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.0198546648025513
    2. '_' → logprob: -1.6448546648025513
    3. ' if' → logprob: -1.6448546648025513
    4. ')' → logprob: -3.2698545455932617
    5. ' and' → logprob: -3.3948545455932617
    6. '_touch' → logprob: -3.3948545455932617
    7. 'if' → logprob: -4.019854545593262
    8. '```' → logprob: -4.144854545593262
    9. ',' → logprob: -4.644854545593262
    10. ' in' → logprob: -4.769854545593262

Token 1420: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0002559753193054348
    2. ' end' → logprob: -9.125255584716797
    3. 'the' → logprob: -9.125255584716797
    4. 'circle' → logprob: -10.500255584716797
    5. 'cir' → logprob: -13.000255584716797
    6. 'point' → logprob: -13.125255584716797
    7. 'fish' → logprob: -13.500255584716797
    8. '
' → logprob: -13.625255584716797
    9. '```' → logprob: -14.125255584716797
    10. 'points' → logprob: -14.500255584716797

Token 1421: ' point' (ID: 2438)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.11365631967782974
    2. '_s' → logprob: -3.4886562824249268
    3. '```' → logprob: -3.8636562824249268
    4. '_points' → logprob: -4.613656520843506
    5. '_lines' → logprob: -4.613656520843506
    6. 's' → logprob: -4.738656520843506
    7. '_' → logprob: -4.863656520843506
    8. '   ' → logprob: -5.488656520843506
    9. 'if' → logprob: -6.113656520843506
    10. ':
' → logprob: -6.238656520843506

Token 1422: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033011436462402344
    2. '
' → logprob: -3.7830114364624023
    3. '        
' → logprob: -5.658011436462402
    4. 'if' → logprob: -6.033011436462402
    5. ' if' → logprob: -6.283011436462402
    6. '   ' → logprob: -6.908011436462402
    7. '<|end|>' → logprob: -7.908011436462402
    8. 'def' → logprob: -9.033011436462402
    9. 'If' → logprob: -9.658011436462402
    10. '#' → logprob: -9.783011436462402

Token 1423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058494050055742264
    2. 'if' → logprob: -3.4334940910339355
    3. ' if' → logprob: -3.8084940910339355
    4. '
' → logprob: -6.9334940910339355
    5. '   ' → logprob: -7.5584940910339355
    6. '```' → logprob: -7.9334940910339355
    7. 'If' → logprob: -9.183493614196777
    8. ',' → logprob: -9.308493614196777
    9. '        
' → logprob: -9.433493614196777
    10. '<|end|>' → logprob: -9.933493614196777

Token 1424: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030589746311306953
    2. 'if' (adapté à ' if') → logprob: -3.5305898189544678
    3. ' if' → logprob: -7.530589580535889
    4. '   ' → logprob: -8.655590057373047
    5. '```' → logprob: -9.905590057373047
    6. '        
' → logprob: -10.030590057373047
    7. '
' → logprob: -11.280590057373047
    8. '#' → logprob: -11.780590057373047
    9. 'result' → logprob: -12.405590057373047
    10. 'answer' → logprob: -13.030590057373047

Token 1425: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16918954253196716
    2. ' len' → logprob: -2.419189453125
    3. 'not' → logprob: -3.169189453125
    4. 'len' → logprob: -3.794189453125
    5. ' start' → logprob: -6.419189453125
    6. 'start' → logprob: -7.794189453125
    7. ' ' → logprob: -9.919189453125
    8. '(len' → logprob: -11.419189453125
    9. '   ' → logprob: -12.044189453125
    10. ' n' → logprob: -12.544189453125

Token 1426: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.07892603427171707
    2. ' start' → logprob: -2.5789260864257812
    3. '(start' → logprob: -10.328926086425781
    4. ' (' → logprob: -13.078926086425781
    5. '(' → logprob: -13.828926086425781
    6. ' ' → logprob: -14.953926086425781
    7. '   ' → logprob: -17.32892608642578
    8. '_start' → logprob: -17.57892608642578
    9. 'end' → logprob: -18.57892608642578
    10. '       ' → logprob: -18.70392608642578

Token 1427: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.452426608419046e-05
    2. '_s' → logprob: -10.37503433227539
    3. '_' → logprob: -13.75003433227539
    4. '_points' → logprob: -14.00003433227539
    5. '\' → logprob: -14.75003433227539
    6. ')_' → logprob: -15.75003433227539
    7. '```' → logprob: -16.00003433227539
    8. ' _' → logprob: -16.62503433227539
    9. '_under' → logprob: -16.87503433227539
    10. 's' → logprob: -16.87503433227539

Token 1428: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.07968256622552872
    2. '_c' → logprob: -2.5796825885772705
    3. '_ir' → logprob: -7.829682350158691
    4. '_s' → logprob: -9.204682350158691
    5. '_' → logprob: -9.204682350158691
    6. 'irc' → logprob: -9.704682350158691
    7. 'irl' → logprob: -9.704682350158691
    8. '\' → logprob: -10.454682350158691
    9. 'cir' → logprob: -11.954682350158691
    10. 'ircle' → logprob: -12.079682350158691

Token 1429: 'cles' (ID: 10934)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.642231822013855
    2. '_c' → logprob: -1.392231822013855
    3. 'cles' → logprob: -2.2672319412231445
    4. '_' → logprob: -3.2672319412231445
    5. 'r' → logprob: -3.5172319412231445
    6. '_r' → logprob: -4.1422319412231445
    7. 'icles' → logprob: -4.3922319412231445
    8. 'rc' → logprob: -4.3922319412231445
    9. 't' → logprob: -5.6422319412231445
    10. '_ir' → logprob: -6.0172319412231445

Token 1430: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01127570029348135
    2. ':
' → logprob: -5.636275768280029
    3. '==' → logprob: -5.636275768280029
    4. ' and' → logprob: -5.886275768280029
    5. 'and' → logprob: -7.761275768280029
    6. ' or' → logprob: -8.136275291442871
    7. '[' → logprob: -8.886275291442871
    8. '       ' → logprob: -9.136275291442871
    9. '   ' → logprob: -9.636275291442871
    10. ' ==' → logprob: -9.886275291442871

Token 1431: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3868713676929474
    2. ' not' → logprob: -1.136871337890625
    3. '(not' → logprob: -15.761871337890625
    4. '   ' → logprob: -15.886871337890625
    5. '
' → logprob: -17.261871337890625
    6. '       ' → logprob: -17.761871337890625
    7. '_not' → logprob: -18.636871337890625
    8. '	not' → logprob: -18.761871337890625
    9. ' ' → logprob: -19.011871337890625
    10. 'end' → logprob: -19.386871337890625

Token 1432: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.062494825571775436
    2. ' end' → logprob: -2.8124947547912598
    3. 'not' → logprob: -7.56249475479126
    4. ' not' → logprob: -11.812495231628418
    5. '(end' → logprob: -16.6874942779541
    6. '   ' → logprob: -19.3124942779541
    7. ' ' → logprob: -19.4374942779541
    8. '_end' → logprob: -20.5624942779541
    9. '0' → logprob: -21.3124942779541
    10. '[end' → logprob: -21.4374942779541

Token 1433: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -8.180258191714529e-06
    2. '_s' → logprob: -12.375008583068848
    3. '_' → logprob: -13.125008583068848
    4. '\' → logprob: -14.250008583068848
    5. ' _' → logprob: -14.625008583068848
    6. ')_' → logprob: -15.500008583068848
    7. ')' → logprob: -16.25000762939453
    8. '
' → logprob: -17.12500762939453
    9. '```' → logprob: -17.12500762939453
    10. '_d' → logprob: -17.50000762939453

Token 1434: 'ir' (ID: 380)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.16256913542747498
    2. 'ir' → logprob: -1.9125691652297974
    3. '_ir' → logprob: -7.037569046020508
    4. '_' → logprob: -7.162569046020508
    5. '\' → logprob: -8.162569046020508
    6. '_s' → logprob: -8.287569046020508
    7. '_sur' → logprob: -9.787569046020508
    8. 'irc' → logprob: -10.787569046020508
    9. '_points' → logprob: -11.287569046020508
    10. 'irl' → logprob: -11.537569046020508

Token 1435: 'cles' (ID: 10934)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.2784419655799866
    2. 'cles' → logprob: -1.5284419059753418
    3. 'icles' → logprob: -4.403441905975342
    4. '```' → logprob: -5.653441905975342
    5. '_' → logprob: -6.278441905975342
    6. 't' → logprob: -6.403441905975342
    7. '_c' → logprob: -6.903441905975342
    8. 'rc' → logprob: -7.028441905975342
    9. 'r' → logprob: -7.153441905975342
    10. '__' → logprob: -7.528441905975342

Token 1436: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5764753222465515
    2. ':' → logprob: -0.8264753222465515
    3. '           ' → logprob: -8.576475143432617
    4. ' or' → logprob: -8.826475143432617
    5. ' and' → logprob: -9.076475143432617
    6. '       ' → logprob: -10.076475143432617
    7. '):
' → logprob: -11.326475143432617
    8. '   ' → logprob: -11.451475143432617
    9. ':return' → logprob: -11.951475143432617
    10. 'and' → logprob: -12.326475143432617

Token 1437: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5425935387611389
    2. '           ' → logprob: -0.9175935387611389
    3. ':' → logprob: -4.417593479156494
    4. ':
' → logprob: -5.167593479156494
    5. '```' → logprob: -6.667593479156494
    6. 'print' → logprob: -8.917593955993652
    7. '               ' → logprob: -11.167593955993652
    8. '):
' → logprob: -11.292593955993652
    9. 'continue' → logprob: -11.292593955993652
    10. '):' → logprob: -11.417593955993652

Token 1438: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06343697011470795
    2. 'print' → logprob: -2.813436985015869
    3. '           ' → logprob: -6.563436985015869
    4. ' print' → logprob: -10.438436508178711
    5. '```' → logprob: -10.938436508178711
    6. '   ' → logprob: -11.563436508178711
    7. '               ' → logprob: -15.438436508178711
    8. '        
' → logprob: -16.18843650817871
    9. '``' → logprob: -16.43843650817871
    10. 'continue' → logprob: -16.68843650817871

Token 1439: ' No' (ID: 3004)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7128130197525024
    2. 'print' → logprob: -0.7128130197525024
    3. '           ' → logprob: -3.962812900543213
    4. ' print' → logprob: -8.462813377380371
    5. '   ' → logprob: -8.587813377380371
    6. '```' → logprob: -9.712813377380371
    7. 'continue' → logprob: -13.212813377380371
    8. '               ' → logprob: -13.462813377380371
    9. '
' → logprob: -14.337813377380371
    10. '	print' → logprob: -14.462813377380371

Token 1440: ' circles' (ID: 45131)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7866719961166382
    2. ' print' → logprob: -1.6616719961166382
    3. ' walls' → logprob: -1.9116719961166382
    4. 'walls' → logprob: -2.5366721153259277
    5. '
' → logprob: -3.7866721153259277
    6. ' minimal' → logprob: -4.036672115325928
    7. 'wall' → logprob: -4.536672115325928
    8. ' return' → logprob: -4.911672115325928
    9. '       ' → logprob: -4.911672115325928
    10. 'answer' → logprob: -4.911672115325928

Token 1441: ' contain' (ID: 10232)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5558198094367981
    2. '       ' → logprob: -1.4308197498321533
    3. ':' → logprob: -2.0558197498321533
    4. '           ' → logprob: -2.9308197498321533
    5. '   ' → logprob: -5.805819988250732
    6. ' =' → logprob: -7.180819988250732
    7. '=' → logprob: -7.430819988250732
    8. ',' → logprob: -7.805819988250732
    9. ' ==' → logprob: -8.805819511413574
    10. 'print' → logprob: -9.180819511413574

Token 1442: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5117874145507812
    2. 'the' → logprob: -1.0117874145507812
    3. 'any' → logprob: -4.386787414550781
    4. ' the' → logprob: -4.761787414550781
    5. 'either' → logprob: -5.011787414550781
    6. '0' → logprob: -6.011787414550781
    7. ' start' → logprob: -6.636787414550781
    8. 'xs' → logprob: -6.761787414550781
    9. '#' → logprob: -7.136787414550781
    10. 'both' → logprob: -7.261787414550781

Token 1443: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.468527615070343
    2. '_c' → logprob: -1.7185275554656982
    3. 'or' → logprob: -2.0935275554656982
    4. '       ' → logprob: -3.2185275554656982
    5. '           ' → logprob: -4.093527793884277
    6. ' and' → logprob: -4.718527793884277
    7. 'and' → logprob: -6.218527793884277
    8. ':
' → logprob: -6.218527793884277
    9. '   ' → logprob: -7.593527793884277
    10. ':' → logprob: -7.593527793884277

Token 1444: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0009869617642834783
    2. ' end' → logprob: -7.0009870529174805
    3. '#' → logprob: -9.62598705291748
    4. 'or' → logprob: -12.25098705291748
    5. 'point' → logprob: -13.00098705291748
    6. '           ' → logprob: -14.87598705291748
    7. 'not' → logprob: -15.00098705291748
    8. 'and' → logprob: -15.25098705291748
    9. ' or' → logprob: -15.25098705291748
    10. '0' → logprob: -15.62598705291748

Token 1445: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04850366711616516
    2. ':' → logprob: -3.7985036373138428
    3. '           ' → logprob: -3.7985036373138428
    4. 'points' → logprob: -7.173503875732422
    5. '_points' → logprob: -7.548503875732422
    6. '       ' → logprob: -7.798503875732422
    7. ',' → logprob: -8.423503875732422
    8. 'print' → logprob: -9.173503875732422
    9. '   ' → logprob: -9.548503875732422
    10. ':return' → logprob: -9.923503875732422

Token 1446: ' rat' (ID: 8908)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009241603314876556
    2. '       ' → logprob: -5.384241580963135
    3. '           ' → logprob: -5.509241580963135
    4. ' print' → logprob: -7.634241580963135
    5. '```' → logprob: -10.134242057800293
    6. '   ' → logprob: -10.259242057800293
    7. '
' → logprob: -13.509242057800293
    8. '``' → logprob: -14.384242057800293
    9. '               ' → logprob: -14.634242057800293
    10. '	print' → logprob: -15.259242057800293

Token 1447: ' moves' (ID: 19523)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.42988330125808716
    2. 'can' → logprob: -1.1798832416534424
    3. '_can' → logprob: -3.1798832416534424
    4. '	can' → logprob: -8.554883003234863
    5. 'needs' → logprob: -9.679883003234863
    6. ' needs' → logprob: -9.679883003234863
    7. '   ' → logprob: -10.304883003234863
    8. 'must' → logprob: -10.429883003234863
    9. '=' → logprob: -10.679883003234863
    10. ' =' → logprob: -10.804883003234863

Token 1448: ' outside' (ID: 7539)
  Prédit: ' without'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' without' → logprob: -0.4927446246147156
    2. 'without' → logprob: -1.4927446842193604
    3. ' freely' → logprob: -2.1177446842193604
    4. ' outside' → logprob: -3.8677446842193604
    5. 'outside' → logprob: -4.742744445800781
    6. '   ' → logprob: -5.117744445800781
    7. 'fre' → logprob: -5.242744445800781
    8. ' ' → logprob: -6.617744445800781
    9. '0' → logprob: -7.117744445800781
    10. 'around' → logprob: -8.492744445800781

Token 1449: ' all' (ID: 722)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38997146487236023
    2. ',' → logprob: -2.0149714946746826
    3. '       ' → logprob: -2.1399714946746826
    4. '
' → logprob: -3.5149714946746826
    5. 'print' → logprob: -4.3899712562561035
    6. ' =' → logprob: -5.2649712562561035
    7. '   ' → logprob: -5.2649712562561035
    8. ' and' → logprob: -5.3899712562561035
    9. ' without' → logprob: -5.5149712562561035
    10. '.' → logprob: -6.1399712562561035

Token 1450: ' walls' (ID: 20562)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.17769907414913177
    2. 'walls' → logprob: -2.052699089050293
    3. '0' → logprob: -3.677699089050293
    4. 's' → logprob: -6.552699089050293
    5. 'spaces' → logprob: -6.677699089050293
    6. ' walls' → logprob: -6.677699089050293
    7. 'circle' → logprob: -6.927699089050293
    8. '   ' → logprob: -7.302699089050293
    9. ' circles' → logprob: -7.302699089050293
    10. '```' → logprob: -7.802699089050293

Token 1451: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014201470650732517
    2. '
' → logprob: -5.139201641082764
    3. '       ' → logprob: -5.264201641082764
    4. ',' → logprob: -5.889201641082764
    5. 'print' → logprob: -9.014201164245605
    6. ':
' → logprob: -10.014201164245605
    7. '.' → logprob: -10.514201164245605
    8. ',
' → logprob: -10.889201164245605
    9. ':' → logprob: -11.764201164245605
    10. '        
' → logprob: -11.764201164245605

Token 1452: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04882410541176796
    2. '           ' → logprob: -3.0488240718841553
    3. ' print' → logprob: -9.048824310302734
    4. '       ' → logprob: -9.298824310302734
    5. '```' → logprob: -11.048824310302734
    6. '   ' → logprob: -11.673824310302734
    7. '               ' → logprob: -13.173824310302734
    8. '
' → logprob: -14.798824310302734
    9. '``' → logprob: -14.798824310302734
    10. 'return' → logprob: -15.298824310302734

Token 1453: '0' (ID: 15)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.125000953674316
    3. '           ' → logprob: -15.625000953674316
    4. ' print' → logprob: -17.25
    5. '
' → logprob: -17.375
    6. '0' → logprob: -18.5
    7. '            
' → logprob: -19.875
    8. '       ' → logprob: -20.0
    9. '   ' → logprob: -20.25
    10. '``' → logprob: -20.375

Token 1454: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6812281608581543
    2. '       ' → logprob: -1.1812281608581543
    3. 'print' → logprob: -1.8062281608581543
    4. '
' → logprob: -3.8062281608581543
    5. '   ' → logprob: -8.431228637695312
    6. 'return' → logprob: -9.556228637695312
    7. ':
' → logprob: -9.806228637695312
    8. ' print' → logprob: -9.806228637695312
    9. ',' → logprob: -10.056228637695312
    10. '```' → logprob: -10.181228637695312

Token 1455: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010069658746942878
    2. '       ' → logprob: -7.251007080078125
    3. 'print' → logprob: -8.251007080078125
    4. 'continue' → logprob: -10.376007080078125
    5. ' continue' → logprob: -13.876007080078125
    6. '               ' → logprob: -13.876007080078125
    7. '
' → logprob: -14.001007080078125
    8. '   ' → logprob: -14.251007080078125
    9. '```' → logprob: -14.376007080078125
    10. ' print' → logprob: -15.001007080078125

Token 1456: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0031901898328214884
    2. '           ' → logprob: -5.753190040588379
    3. ' print' → logprob: -12.128190040588379
    4. 'return' → logprob: -12.503190040588379
    5. '       ' → logprob: -12.878190040588379
    6. '```' → logprob: -14.628190040588379
    7. 'continue' → logprob: -15.503190040588379
    8. '               ' → logprob: -16.753190994262695
    9. '   ' → logprob: -17.003190994262695
    10. '
' → logprob: -19.003190994262695

Token 1457: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.000001907348633
    3. ' ' → logprob: -17.625001907348633
    4. '('' → logprob: -21.875001907348633
    5. '`' → logprob: -22.125001907348633
    6. '   ' → logprob: -22.750001907348633
    7. '00' → logprob: -22.750001907348633
    8. '"' → logprob: -23.000001907348633
    9. ''' → logprob: -23.375001907348633
    10. '("' → logprob: -24.125001907348633

Token 1458: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '"' → logprob: -16.625
    3. ''' → logprob: -16.875
    4. ' ' → logprob: -19.375
    5. '`' → logprob: -20.125
    6. '00' → logprob: -22.25
    7. '(' → logprob: -22.375
    8. ')' → logprob: -22.875
    9. '```' → logprob: -23.25
    10. '۰' → logprob: -23.375

Token 1459: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024988483637571335
    2. ')
' → logprob: -6.002498626708984
    3. '       ' → logprob: -10.752498626708984
    4. '   ' → logprob: -14.752498626708984
    5. ')`' → logprob: -15.377498626708984
    6. ')`
' → logprob: -15.627498626708984
    7. '),' → logprob: -15.877498626708984
    8. '")' → logprob: -15.877498626708984
    9. '           ' → logprob: -16.002498626708984
    10. '```' → logprob: -16.002498626708984

Token 1460: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3880494236946106
    2. '           ' → logprob: -1.1380493640899658
    3. 'continue' → logprob: -6.888049602508545
    4. ' continue' → logprob: -10.013049125671387
    5. '```' → logprob: -10.263049125671387
    6. '	' → logprob: -11.013049125671387
    7. '	continue' → logprob: -11.138049125671387
    8. 'else' → logprob: -11.138049125671387
    9. '               ' → logprob: -11.388049125671387
    10. '   ' → logprob: -11.513049125671387

Token 1461: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6107151508331299
    2. '       ' → logprob: -1.3607151508331299
    3. 'continue' (adapté à ' continue') → logprob: -1.6107151508331299
    4. ' continue' → logprob: -7.235714912414551
    5. 'else' → logprob: -10.48571491241455
    6. '	continue' → logprob: -10.61071491241455
    7. '   ' → logprob: -11.23571491241455
    8. '               ' → logprob: -11.73571491241455
    9. 'elif' → logprob: -11.86071491241455
    10. '```' → logprob: -12.48571491241455

Token 1462: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02702564187347889
    2. 'if' → logprob: -4.0270256996154785
    3. 'elif' → logprob: -5.1520256996154785
    4. 'else' → logprob: -6.4020256996154785
    5. '```' → logprob: -7.5270256996154785
    6. '<|end|>' → logprob: -7.6520256996154785
    7. '        
' → logprob: -9.15202522277832
    8. '
' → logprob: -9.77702522277832
    9. ' if' → logprob: -9.90202522277832
    10. '   ' → logprob: -10.15202522277832

Token 1463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05814172327518463
    2. 'if' → logprob: -2.9331417083740234
    3. '```' → logprob: -5.933141708374023
    4. 'elif' → logprob: -7.933141708374023
    5. 'else' → logprob: -8.683141708374023
    6. '        
' → logprob: -11.058141708374023
    7. '           ' → logprob: -11.183141708374023
    8. ' if' → logprob: -11.183141708374023
    9. '   ' → logprob: -11.308141708374023
    10. '
' → logprob: -11.433141708374023

Token 1464: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009704387746751308
    2. 'else' → logprob: -5.25970458984375
    3. 'elif' → logprob: -6.00970458984375
    4. 'if' (adapté à ' if') → logprob: -6.50970458984375
    5. '```' → logprob: -8.38470458984375
    6. '        
' → logprob: -9.13470458984375
    7. '   ' → logprob: -9.88470458984375
    8. '           ' → logprob: -10.00970458984375
    9. '
' → logprob: -10.25970458984375
    10. ' else' → logprob: -11.50970458984375

Token 1465: ' start' (ID: 1604)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08248060941696167
    2. 'not' → logprob: -2.5824806690216064
    3. ' start' → logprob: -6.457480430603027
    4. ' len' → logprob: -7.332480430603027
    5. 'len' → logprob: -7.332480430603027
    6. 'start' → logprob: -7.332480430603027
    7. '   ' → logprob: -10.457480430603027
    8. '       ' → logprob: -11.207480430603027
    9. ' ' → logprob: -12.707480430603027
    10. 'end' → logprob: -12.832480430603027

Token 1466: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.1875571544806007e-05
    2. '_s' → logprob: -11.875011444091797
    3. ')_' → logprob: -12.875011444091797
    4. '```' → logprob: -14.750011444091797
    5. ']_' → logprob: -15.375011444091797
    6. '}_' → logprob: -15.500011444091797
    7. 's' → logprob: -15.625011444091797
    8. '_' → logprob: -15.750011444091797
    9. '"_' → logprob: -16.125011444091797
    10. ''_' → logprob: -16.125011444091797

Token 1467: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0007248217007145286
    2. '_c' → logprob: -8.250724792480469
    3. '_ir' → logprob: -8.375724792480469
    4. '_' → logprob: -9.750724792480469
    5. 'irc' → logprob: -9.875724792480469
    6. 'irl' → logprob: -10.500724792480469
    7. 'ircle' → logprob: -10.875724792480469
    8. '_r' → logprob: -11.375724792480469
    9. '_s' → logprob: -11.500724792480469
    10. 'cir' → logprob: -11.875724792480469

Token 1468: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.36330950260162354
    2. 'r' → logprob: -1.2383095026016235
    3. 'ir' → logprob: -4.738309383392334
    4. 'rc' → logprob: -5.863309383392334
    5. 'icles' → logprob: -7.238309383392334
    6. '_r' → logprob: -7.613309383392334
    7. 'les' → logprob: -7.863309383392334
    8. '```' → logprob: -7.863309383392334
    9. '__' → logprob: -8.363309860229492
    10. '_' → logprob: -8.613309860229492

Token 1469: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9547193050384521
    2. ' ==' → logprob: -0.9547193050384521
    3. ' and' → logprob: -1.9547193050384521
    4. ':' → logprob: -2.579719305038452
    5. 'and' → logprob: -4.704719543457031
    6. '       ' → logprob: -7.204719543457031
    7. '   ' → logprob: -7.329719543457031
    8. '[' → logprob: -7.454719543457031
    9. ' not' → logprob: -8.204719543457031
    10. ':
' → logprob: -8.329719543457031

Token 1470: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1284399926662445
    2. 'end' → logprob: -2.1284399032592773
    3. ' []' → logprob: -7.753439903259277
    4. '=[]' → logprob: -8.503439903259277
    5. '0' → logprob: -8.628439903259277
    6. '=end' → logprob: -8.628439903259277
    7. 'set' → logprob: -9.003439903259277
    8. '[end' → logprob: -9.128439903259277
    9. '{}' → logprob: -9.878439903259277
    10. '   ' → logprob: -9.878439903259277

Token 1471: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1768881380558014
    2. ' or' → logprob: -2.0518882274627686
    3. 'or' → logprob: -4.1768879890441895
    4. ':
' → logprob: -5.1768879890441895
    5. '==' → logprob: -5.5518879890441895
    6. 'and' → logprob: -5.5518879890441895
    7. ' and' → logprob: -6.3018879890441895
    8. '<|end|>' → logprob: -6.6768879890441895
    9. '       ' → logprob: -8.051888465881348
    10. '=' → logprob: -8.051888465881348

Token 1472: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.046461582183838
    2. ' and' → logprob: -1.296461582183838
    3. 'and' → logprob: -1.921461582183838
    4. '           ' → logprob: -2.046461582183838
    5. 'or' → logprob: -2.921461582183838
    6. ':' → logprob: -3.921461582183838
    7. '       ' → logprob: -4.171461582183838
    8. ':
' → logprob: -4.796461582183838
    9. '   ' → logprob: -6.921461582183838
    10. '==' → logprob: -7.421461582183838

Token 1473: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7972654104232788
    2. '       ' → logprob: -1.5472654104232788
    3. 'start' → logprob: -1.6722654104232788
    4. 'print' → logprob: -2.2972655296325684
    5. ' start' → logprob: -3.5472655296325684
    6. 'continue' → logprob: -5.297265529632568
    7. ' print' → logprob: -5.422265529632568
    8. '   ' → logprob: -5.797265529632568
    9. ' continue' → logprob: -6.422265529632568
    10. '[start' → logprob: -6.672265529632568

Token 1474: ' Start' (ID: 7972)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4778464734554291
    2. 'end' → logprob: -0.9778465032577515
    3. '#' → logprob: -5.727846622467041
    4. '       ' → logprob: -8.602846145629883
    5. 'if' → logprob: -9.352846145629883
    6. '   ' → logprob: -9.852846145629883
    7. 'for' → logprob: -9.852846145629883
    8. 'print' → logprob: -10.102846145629883
    9. ' start' → logprob: -10.727846145629883
    10. ' end' → logprob: -11.227846145629883

Token 1475: ' outside' (ID: 7539)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.282920129597187e-05
    2. '_s' → logprob: -11.500012397766113
    3. '_' → logprob: -13.250012397766113
    4. '=_' → logprob: -16.25001335144043
    5. '_points' → logprob: -16.25001335144043
    6. ':' → logprob: -16.37501335144043
    7. '=' → logprob: -16.37501335144043
    8. ' =' → logprob: -16.87501335144043
    9. '\' → logprob: -17.12501335144043
    10. '```' → logprob: -17.25001335144043

Token 1476: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8263299465179443
    2. '_c' → logprob: -1.4513299465179443
    3. ':' → logprob: -1.7013299465179443
    4. ':
' → logprob: -2.5763299465179443
    5. ' and' → logprob: -3.7013299465179443
    6. 'and' → logprob: -3.9513299465179443
    7. '       ' → logprob: -5.076330184936523
    8. '=' → logprob: -5.576330184936523
    9. 'start' → logprob: -5.826330184936523
    10. 'c' → logprob: -5.951330184936523

Token 1477: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.35969996452331543
    2. 'start' → logprob: -1.4846999645233154
    3. 'if' → logprob: -3.2346999645233154
    4. '#' → logprob: -4.1097002029418945
    5. '       ' → logprob: -4.7347002029418945
    6. ' end' → logprob: -5.8597002029418945
    7. '           ' → logprob: -5.9847002029418945
    8. ' if' → logprob: -6.6097002029418945
    9. 'print' → logprob: -6.6097002029418945
    10. 'continue' → logprob: -6.7347002029418945

Token 1478: ' inside' (ID: 6772)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.2127087504486553e-05
    2. '_s' → logprob: -11.500021934509277
    3. '==' → logprob: -13.375021934509277
    4. ':' → logprob: -13.500021934509277
    5. 'in' → logprob: -13.500021934509277
    6. 'not' → logprob: -13.625021934509277
    7. 'cir' → logprob: -14.000021934509277
    8. ' in' → logprob: -14.125021934509277
    9. '   ' → logprob: -14.250021934509277
    10. 'is' → logprob: -14.250021934509277

Token 1479: ' some' (ID: 1236)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.10571905970573425
    2. ':
' → logprob: -3.1057190895080566
    3. ':' → logprob: -3.2307190895080566
    4. '           ' → logprob: -4.355719089508057
    5. '       ' → logprob: -6.855719089508057
    6. 'cir' → logprob: -6.980719089508057
    7. '   ' → logprob: -7.855719089508057
    8. '```' → logprob: -8.480718612670898
    9. '=' → logprob: -8.980718612670898
    10. 'c' → logprob: -9.605718612670898

Token 1480: ' circles' (ID: 45131)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.9650025428272784e-05
    2. 'cir' → logprob: -10.375040054321289
    3. '_' → logprob: -11.875040054321289
    4. 'start' → logprob: -14.750040054321289
    5. '_circle' → logprob: -14.875040054321289
    6. '_start' → logprob: -15.375040054321289
    7. '```' → logprob: -15.750040054321289
    8. '_s' → logprob: -16.87504005432129
    9. ' _' → logprob: -16.87504005432129
    10. ' circles' → logprob: -16.87504005432129

Token 1481: '?' (ID: 30)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4131098985671997
    2. ':
' → logprob: -1.1631098985671997
    3. '           ' → logprob: -3.78810977935791
    4. '       ' → logprob: -6.16310977935791
    5. ',' → logprob: -8.41310977935791
    6. ' and' → logprob: -8.53810977935791
    7. '=' → logprob: -8.91310977935791
    8. '   ' → logprob: -9.28810977935791
    9. '{' → logprob: -9.66310977935791
    10. '):
' → logprob: -9.78810977935791

Token 1482: ' rat' (ID: 8908)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28240108489990234
    2. 'start' → logprob: -2.0324010848999023
    3. '       ' → logprob: -2.6574010848999023
    4. 'print' → logprob: -4.407401084899902
    5. 'continue' → logprob: -4.407401084899902
    6. 'if' → logprob: -4.657401084899902
    7. ' start' → logprob: -5.532401084899902
    8. ' continue' → logprob: -6.657401084899902
    9. ':
' → logprob: -6.782401084899902
    10. '   ' → logprob: -6.782401084899902

Token 1483: ' must' (ID: 2804)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.5118622779846191
    2. 'needs' → logprob: -1.0118622779846191
    3. '=' → logprob: -4.636862277984619
    4. ' must' → logprob: -5.136862277984619
    5. '#' → logprob: -5.136862277984619
    6. ' needs' → logprob: -5.386862277984619
    7. 'need' → logprob: -6.136862277984619
    8. '   ' → logprob: -6.386862277984619
    9. 'has' → logprob: -6.511862277984619
    10. 's' → logprob: -6.511862277984619

Token 1484: ' climb' (ID: 27049)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.5371164679527283
    2. 'print' → logprob: -1.037116527557373
    3. 'pass' → logprob: -3.412116527557373
    4. ' cross' → logprob: -4.662116527557373
    5. 'go' → logprob: -4.662116527557373
    6. '=' → logprob: -5.537116527557373
    7. ' print' → logprob: -6.162116527557373
    8. '#' → logprob: -7.412116527557373
    9. '
' → logprob: -7.787116527557373
    10. '   ' → logprob: -8.037116050720215

Token 1485: ' those' (ID: 2617)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020522393751889467
    2. ' ' → logprob: -7.627052307128906
    3. '(' → logprob: -8.127052307128906
    4. 'start' → logprob: -8.127052307128906
    5. 'for' → logprob: -8.127052307128906
    6. '           ' → logprob: -8.752052307128906
    7. '```' → logprob: -8.877052307128906
    8. '
' → logprob: -9.627052307128906
    9. ' for' → logprob: -9.752052307128906
    10. '   ' → logprob: -10.252052307128906

Token 1486: ' circles' (ID: 45131)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.5782958269119263
    2. ':
' → logprob: -1.2032958269119263
    3. ':' → logprob: -3.2032957077026367
    4. '=' → logprob: -3.3282957077026367
    5. 'print' → logprob: -4.203295707702637
    6. 'walls' → logprob: -4.328295707702637
    7. '_s' → logprob: -5.203295707702637
    8. 's' → logprob: -5.578295707702637
    9. '[' → logprob: -5.703295707702637
    10. 'for' → logprob: -5.953295707702637

Token 1487: ' starting' (ID: 8601)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4615110456943512
    2. '           ' → logprob: -1.5865110158920288
    3. ':
' → logprob: -2.2115111351013184
    4. '=' → logprob: -3.4615111351013184
    5. '       ' → logprob: -4.586511135101318
    6. ' and' → logprob: -5.711511135101318
    7. '   ' → logprob: -6.461511135101318
    8. 'print' → logprob: -6.586511135101318
    9. '+=' → logprob: -6.711511135101318
    10. ',' → logprob: -6.836511135101318

Token 1488: ' from' (ID: 591)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.10283741354942322
    2. 'from' → logprob: -2.727837324142456
    3. 'with' → logprob: -3.852837324142456
    4. '```' → logprob: -6.227837562561035
    5. '_points' → logprob: -6.477837562561035
    6. '(' → logprob: -6.477837562561035
    7. '=' → logprob: -6.602837562561035
    8. 'cir' → logprob: -6.852837562561035
    9. '_' → logprob: -7.102837562561035
    10. '_nodes' → logprob: -7.977837562561035

Token 1489: ' outside' (ID: 7539)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.02397782728075981
    2. ' end' → logprob: -4.023977756500244
    3. '0' → logprob: -5.273977756500244
    4. 'the' → logprob: -7.523977756500244
    5. ' the' → logprob: -10.273978233337402
    6. ' ' → logprob: -10.773978233337402
    7. '```' → logprob: -10.773978233337402
    8. '1' → logprob: -10.898978233337402
    9. 'those' → logprob: -11.273978233337402
    10. '   ' → logprob: -11.898978233337402

Token 1490: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5972338318824768
    2. ':' → logprob: -1.097233772277832
    3. ':
' → logprob: -2.847233772277832
    4. '       ' → logprob: -3.347233772277832
    5. '   ' → logprob: -4.847233772277832
    6. ',' → logprob: -5.472233772277832
    7. ' and' → logprob: -5.847233772277832
    8. '=' → logprob: -6.097233772277832
    9. '```' → logprob: -6.597233772277832
    10. 'print' → logprob: -7.347233772277832

Token 1491: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.356116384267807
    2. ':' → logprob: -1.9811164140701294
    3. ':
' → logprob: -1.9811164140701294
    4. ' and' → logprob: -4.85611629486084
    5. '       ' → logprob: -5.35611629486084
    6. '```' → logprob: -5.85611629486084
    7. 'and' → logprob: -5.98111629486084
    8. '=' → logprob: -6.73111629486084
    9. '[' → logprob: -7.10611629486084
    10. '   ' → logprob: -7.60611629486084

Token 1492: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5727578401565552
    2. '           ' → logprob: -1.0727578401565552
    3. '       ' → logprob: -3.3227577209472656
    4. 'graph' → logprob: -3.9477577209472656
    5. ' print' → logprob: -4.072757720947266
    6. 'dist' → logprob: -5.197757720947266
    7. 'for' → logprob: -5.572757720947266
    8. 'continue' → logprob: -5.697757720947266
    9. 'start' → logprob: -5.697757720947266
    10. '   ' → logprob: -6.697757720947266

Token 1493: ' So' (ID: 2632)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.24079425632953644
    2. '       ' → logprob: -2.2407941818237305
    3. 'graph' → logprob: -2.6157941818237305
    4. 'start' → logprob: -4.4907941818237305
    5. '#' → logprob: -4.7407941818237305
    6. 'for' → logprob: -5.6157941818237305
    7. '           ' → logprob: -5.7407941818237305
    8. 'distance' → logprob: -5.9907941818237305
    9. 'end' → logprob: -6.3657941818237305
    10. 'print' → logprob: -6.9907941818237305

Token 1494: ' start' (ID: 1604)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001161173335276544
    2. 'end' → logprob: -7.376161098480225
    3. '#' → logprob: -8.251161575317383
    4. 'start' → logprob: -8.876161575317383
    5. 'd' → logprob: -10.251161575317383
    6. ' dist' → logprob: -10.376161575317383
    7. 'graph' → logprob: -10.376161575317383
    8. 'distance' → logprob: -11.126161575317383
    9. '   ' → logprob: -11.751161575317383
    10. 'print' → logprob: -12.626161575317383

Token 1495: ' node' (ID: 4596)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -4.7994282795116305e-05
    2. '_s' → logprob: -10.87504768371582
    3. '=' → logprob: -11.12504768371582
    4. '_nodes' → logprob: -12.37504768371582
    5. ' =' → logprob: -12.75004768371582
    6. 'cir' → logprob: -13.50004768371582
    7. '_' → logprob: -13.87504768371582
    8. '_points' → logprob: -14.25004768371582
    9. '           ' → logprob: -14.37504768371582
    10. '       ' → logprob: -14.75004768371582

Token 1496: ' connects' (ID: 47599)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3668989837169647
    2. ' =' → logprob: -1.491899013519287
    3. '_nodes' → logprob: -2.741899013519287
    4. '_c' → logprob: -4.741899013519287
    5. 's' → logprob: -4.991899013519287
    6. '_s' → logprob: -7.366899013519287
    7. '_indices' → logprob: -8.241898536682129
    8. '=start' → logprob: -8.866898536682129
    9. '_graph' → logprob: -9.241898536682129
    10. '_node' → logprob: -9.241898536682129

Token 1497: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.12272781878709793
    2. ' to' → logprob: -2.747727870941162
    3. '=' → logprob: -3.122727870941162
    4. 'graph' → logprob: -5.997727870941162
    5. 'start' → logprob: -6.372727870941162
    6. 'for' → logprob: -7.372727870941162
    7. '_to' → logprob: -7.372727870941162
    8. ' =' → logprob: -8.247727394104004
    9. '#' → logprob: -8.372727394104004
    10. '[]' → logprob: -8.622727394104004

Token 1498: ' outside' (ID: 7539)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.07067357748746872
    2. '-' → logprob: -3.3206734657287598
    3. 'start' → logprob: -4.19567346572876
    4. 'range' → logprob: -5.19567346572876
    5. '[' → logprob: -5.82067346572876
    6. 'end' → logprob: -6.19567346572876
    7. 'graph' → logprob: -6.32067346572876
    8. '[]' → logprob: -6.32067346572876
    9. '{-' → logprob: -7.07067346572876
    10. '[]
' → logprob: -7.57067346572876

Token 1499: ' (' (ID: 350)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.04783773794770241
    2. '_nodes' → logprob: -3.172837734222412
    3. ' =' → logprob: -6.172837734222412
    4. '           ' → logprob: -7.422837734222412
    5. '=' → logprob: -7.672837734222412
    6. '_s' → logprob: -8.17283821105957
    7. '       ' → logprob: -8.17283821105957
    8. '   ' → logprob: -8.42283821105957
    9. '_graph' → logprob: -8.79783821105957
    10. 'graph' → logprob: -9.17283821105957

Token 1500: 'no' (ID: 1750)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.7496655583381653
    2. '-' → logprob: -1.4996654987335205
    3. '[]' → logprob: -2.3746654987335205
    4. '0' → logprob: -3.2496654987335205
    5. 'None' → logprob: -3.2496654987335205
    6. ')' → logprob: -3.3746654987335205
    7. '#' → logprob: -3.6246654987335205
    8. '[' → logprob: -3.8746654987335205
    9. '[])' → logprob: -3.8746654987335205
    10. 'cir' → logprob: -5.3746657371521

Token 1501: ' circle' (ID: 22005)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.3240158259868622
    2. 'cir' → logprob: -1.5740158557891846
    3. '_connections' → logprob: -4.0740156173706055
    4. ')' → logprob: -4.1990156173706055
    5. '_circle' → logprob: -4.1990156173706055
    6. '_' → logprob: -5.5740156173706055
    7. ' circles' → logprob: -5.6990156173706055
    8. '_connection' → logprob: -5.8240156173706055
    9. 'connections' → logprob: -6.0740156173706055
    10. 'c' → logprob: -6.4490156173706055

Token 1502: ')
' (ID: 446)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.6524027585983276
    2. ')' → logprob: -0.9024027585983276
    3. '_nodes' → logprob: -4.027402877807617
    4. '):' → logprob: -4.402402877807617
    5. ')_' → logprob: -4.652402877807617
    6. '):
' → logprob: -4.902402877807617
    7. ')
' → logprob: -4.902402877807617
    8. ',' → logprob: -5.402402877807617
    9. '_' → logprob: -5.902402877807617
    10. '           ' → logprob: -6.277402877807617

Token 1503: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38773155212402344
    2. '       ' → logprob: -1.3877315521240234
    3. '   ' → logprob: -3.2627315521240234
    4. ':' → logprob: -4.512731552124023
    5. ':
' → logprob: -4.637731552124023
    6. ' and' → logprob: -5.262731552124023
    7. '=' → logprob: -6.262731552124023
    8. ',' → logprob: -6.387731552124023
    9. 'and' → logprob: -6.512731552124023
    10. '```' → logprob: -6.887731552124023

Token 1504: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034413304179906845
    2. '#' (adapté à ' #') → logprob: -4.0344133377075195
    3. '           ' → logprob: -4.6594133377075195
    4. 'start' → logprob: -5.6594133377075195
    5. 'graph' → logprob: -6.4094133377075195
    6. ':
' → logprob: -7.6594133377075195
    7. '   ' → logprob: -8.53441333770752
    8. ':' → logprob: -8.53441333770752
    9. 'if' → logprob: -8.65941333770752
    10. 'continue' → logprob: -9.53441333770752

Token 1505: ' Add' (ID: 4063)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.2249329090118408
    2. 'graph' → logprob: -1.3499329090118408
    3. '       ' → logprob: -1.8499329090118408
    4. '#' → logprob: -1.9749329090118408
    5. 'end' → logprob: -2.349932909011841
    6. 'start' → logprob: -3.099932909011841
    7. 'distance' → logprob: -5.349932670593262
    8. '   ' → logprob: -6.224932670593262
    9. 'for' → logprob: -6.349932670593262
    10. 'd' → logprob: -7.599932670593262

Token 1506: ' pseudo' (ID: 62975)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5648268461227417
    2. 'a' → logprob: -2.3148269653320312
    3. 'virtual' → logprob: -2.5648269653320312
    4. ' start' → logprob: -3.1898269653320312
    5. ' a' → logprob: -3.3148269653320312
    6. 'n' → logprob: -3.4398269653320312
    7. 'fake' → logprob: -3.6898269653320312
    8. 'for' → logprob: -3.8148269653320312
    9. 'end' → logprob: -3.9398269653320312
    10. 'dummy' → logprob: -3.9398269653320312

Token 1507: ' start' (ID: 1604)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.7567523121833801
    2. 'node' → logprob: -0.8817523121833801
    3. ' node' → logprob: -2.3817522525787354
    4. '_nodes' → logprob: -3.8817522525787354
    5. '_' → logprob: -6.6317524909973145
    6. ' _' → logprob: -7.0067524909973145
    7. 'nodes' → logprob: -7.3817524909973145
    8. '-node' → logprob: -8.256752014160156
    9. '_start' → logprob: -8.381752014160156
    10. ' nodes' → logprob: -8.881752014160156

Token 1508: ' node' (ID: 4596)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.5812510848045349
    2. '_c' → logprob: -1.4562511444091797
    3. '_node' → logprob: -1.5812511444091797
    4. '_' → logprob: -6.70625114440918
    5. 'node' → logprob: -8.45625114440918
    6. '_points' → logprob: -8.83125114440918
    7. '_graph' → logprob: -9.33125114440918
    8. '_circle' → logprob: -9.33125114440918
    9. '_s' → logprob: -9.95625114440918
    10. '   ' → logprob: -10.20625114440918

Token 1509: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3295292556285858
    2. '_nodes' → logprob: -2.704529285430908
    3. '           ' → logprob: -2.954529285430908
    4. '=' → logprob: -3.079529285430908
    5. ',' → logprob: -3.454529285430908
    6. 'graph' → logprob: -3.704529285430908
    7. '   ' → logprob: -4.329529285430908
    8. '_graph' → logprob: -4.579529285430908
    9. '       ' → logprob: -4.704529285430908
    10. 'nodes' → logprob: -5.829529285430908

Token 1510: ' -' (ID: 533)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.26674628257751465
    2. 'graph' → logprob: -2.1417462825775146
    3. ' start' → logprob: -3.0167462825775146
    4. 'pseudo' → logprob: -3.1417462825775146
    5. '   ' → logprob: -4.891746520996094
    6. ' pseudo' → logprob: -5.141746520996094
    7. ' graph' → logprob: -5.766746520996094
    8. 's' → logprob: -6.266746520996094
    9. '       ' → logprob: -6.391746520996094
    10. 'n' → logprob: -6.891746520996094

Token 1511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032807406969368458
    2. '2' → logprob: -5.7532806396484375
    3. '-' → logprob: -9.253280639648438
    4. '
' → logprob: -12.753280639648438
    5. ' ' → logprob: -13.378280639648438
    6. '0' → logprob: -14.003280639648438
    7. '_' → logprob: -14.503280639648438
    8. '   ' → logprob: -14.878280639648438
    9. '`' → logprob: -15.628280639648438
    10. ' -' → logprob: -15.628280639648438

Token 1512: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40981605648994446
    2. '   ' → logprob: -2.409816026687622
    3. '           ' → logprob: -3.034816026687622
    4. '_c' → logprob: -3.284816026687622
    5. '       ' → logprob: -3.284816026687622
    6. '_nodes' → logprob: -3.409816026687622
    7. '=' → logprob: -3.534816026687622
    8. ',' → logprob: -3.659816026687622
    9. ')' → logprob: -3.909816026687622
    10. ':' → logprob: -6.159816265106201

Token 1513: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01301856990903616
    2. '       ' → logprob: -5.263018608093262
    3. ':' → logprob: -5.763018608093262
    4. '   ' → logprob: -7.138018608093262
    5. ':
' → logprob: -7.263018608093262
    6. ')' → logprob: -7.263018608093262
    7. ' =' → logprob: -7.513018608093262
    8. ',' → logprob: -7.638018608093262
    9. '=' → logprob: -8.138018608093262
    10. '#' → logprob: -8.388018608093262

Token 1514: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9514221549034119
    2. '       ' → logprob: -1.2014222145080566
    3. '           ' → logprob: -1.3264222145080566
    4. 'start' → logprob: -4.076422214508057
    5. 'continue' → logprob: -4.201422214508057
    6. '#' (adapté à ' #') → logprob: -4.576422214508057
    7. '   ' → logprob: -6.201422214508057
    8. ' graph' → logprob: -6.701422214508057
    9. '```' → logprob: -7.701422214508057
    10. 'for' → logprob: -7.701422214508057

Token 1515: ' Connect' (ID: 16834)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7148678302764893
    2. 'start' → logprob: -0.9648678302764893
    3. '#' → logprob: -2.5898678302764893
    4. '       ' → logprob: -3.9648678302764893
    5. '           ' → logprob: -4.58986759185791
    6. 'pseudo' → logprob: -4.58986759185791
    7. 'visited' → logprob: -5.71486759185791
    8. 'outside' → logprob: -5.83986759185791
    9. '   ' → logprob: -5.96486759185791
    10. 'end' → logprob: -6.08986759185791

Token 1516: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6311795115470886
    2. 'end' → logprob: -1.5061795711517334
    3. '-' → logprob: -2.3811795711517334
    4. 'to' → logprob: -3.2561795711517334
    5. 'for' → logprob: -3.5061795711517334
    6. 'graph' → logprob: -3.8811795711517334
    7. 'the' → logprob: -4.006179332733154
    8. ')' → logprob: -4.756179332733154
    9. '(-' → logprob: -4.756179332733154
    10. 'them' → logprob: -5.131179332733154

Token 1517: ' node' (ID: 4596)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.6027994155883789
    2. '_nodes' → logprob: -0.8527994155883789
    3. '_to' → logprob: -4.352799415588379
    4. '_node' → logprob: -4.977799415588379
    5. 'node' → logprob: -6.727799415588379
    6. ' to' → logprob: -7.227799415588379
    7. '_points' → logprob: -7.352799415588379
    8. '   ' → logprob: -7.352799415588379
    9. ' =' → logprob: -7.602799415588379
    10. ')' → logprob: -7.602799415588379

Token 1518: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9371386170387268
    2. '=' → logprob: -1.187138557434082
    3. ' to' → logprob: -1.937138557434082
    4. 'to' → logprob: -2.062138557434082
    5. '           ' → logprob: -3.937138557434082
    6. '_to' → logprob: -5.437138557434082
    7. '   ' → logprob: -6.562138557434082
    8. '=-' → logprob: -6.562138557434082
    9. '       ' → logprob: -6.937138557434082
    10. ':' → logprob: -6.937138557434082

Token 1519: ' circles' (ID: 45131)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9415794014930725
    2. '[i' → logprob: -2.0665793418884277
    3. 'range' → logprob: -2.0665793418884277
    4. '[' → logprob: -2.3165793418884277
    5. 'end' → logprob: -2.6915793418884277
    6. 'c' → logprob: -2.8165793418884277
    7. '[c' → logprob: -3.5665793418884277
    8. '[end' → logprob: -3.6915793418884277
    9. 'cir' → logprob: -3.8165793418884277
    10. 'graph' → logprob: -4.691579341888428

Token 1520: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6216939687728882
    2. '=' → logprob: -1.2466939687728882
    3. '           ' → logprob: -2.7466940879821777
    4. '[-' → logprob: -3.1216940879821777
    5. '```' → logprob: -4.746694087982178
    6. '.append' → logprob: -4.871694087982178
    7. ':' → logprob: -4.871694087982178
    8. '-' → logprob: -4.871694087982178
    9. '=-' → logprob: -5.246694087982178
    10. '   ' → logprob: -5.871694087982178

Token 1521: ' separate' (ID: 13574)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.35494428873062134
    2. 'contain' → logprob: -1.3549442291259766
    3. 'are' → logprob: -4.104944229125977
    4. 'touch' → logprob: -4.729944229125977
    5. 'inside' → logprob: -5.479944229125977
    6. 'end' → logprob: -5.854944229125977
    7. ' point' → logprob: -5.854944229125977
    8. 'for' → logprob: -6.729944229125977
    9. '
' → logprob: -7.229944229125977
    10. ' are' → logprob: -7.479944229125977

Token 1522: ' it' (ID: 480)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4137241840362549
    2. 'the' → logprob: -1.6637241840362549
    3. 'end' → logprob: -2.663724184036255
    4. 'them' → logprob: -2.663724184036255
    5. '```' → logprob: -6.163723945617676
    6. '
' → logprob: -6.663723945617676
    7. ' start' → logprob: -6.913723945617676
    8. 'those' → logprob: -6.913723945617676
    9. ' them' → logprob: -7.163723945617676
    10. '-' → logprob: -7.663723945617676

Token 1523: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20858444273471832
    2. ':
' → logprob: -3.2085845470428467
    3. '       ' → logprob: -3.3335845470428467
    4. '=' → logprob: -4.208584308624268
    5. '               ' → logprob: -4.333584308624268
    6. ' and' → logprob: -4.333584308624268
    7. '```' → logprob: -4.583584308624268
    8. ' =' → logprob: -4.583584308624268
    9. ':' → logprob: -4.708584308624268
    10. ')' → logprob: -5.083584308624268

Token 1524: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.09131418168544769
    2. 'start' → logprob: -3.2163140773773193
    3. '0' → logprob: -3.7163140773773193
    4. 'the' → logprob: -4.091314315795898
    5. ' end' → logprob: -5.341314315795898
    6. '#' → logprob: -7.341314315795898
    7. ')' → logprob: -8.591314315795898
    8. 'range' → logprob: -9.216314315795898
    9. ' the' → logprob: -9.466314315795898
    10. ' start' → logprob: -9.466314315795898

Token 1525: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.159535214304924
    2. '       ' → logprob: -2.4095351696014404
    3. 'graph' → logprob: -4.1595354080200195
    4. '   ' → logprob: -4.6595354080200195
    5. '```' → logprob: -5.4095354080200195
    6. '#' → logprob: -5.4095354080200195
    7. ':
' → logprob: -5.6595354080200195
    8. '
' → logprob: -5.7845354080200195
    9. ':' → logprob: -5.7845354080200195
    10. ')' → logprob: -6.1595354080200195

Token 1526: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5787210464477539
    2. '       ' → logprob: -0.9537210464477539
    3. ':' → logprob: -3.953721046447754
    4. ':
' → logprob: -4.453721046447754
    5. '```' → logprob: -5.203721046447754
    6. '   ' → logprob: -5.328721046447754
    7. 'graph' → logprob: -5.328721046447754
    8. '#' → logprob: -5.578721046447754
    9. '               ' → logprob: -7.078721046447754
    10. ' graph' → logprob: -7.953721046447754

Token 1527: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.323959618806839
    2. 'graph' → logprob: -1.6989595890045166
    3. '#' (adapté à ' #') → logprob: -3.1989595890045166
    4. '           ' → logprob: -3.4489595890045166
    5. 'start' → logprob: -4.198959827423096
    6. 'continue' → logprob: -5.448959827423096
    7. 'for' → logprob: -7.073959827423096
    8. '```' → logprob: -7.698959827423096
    9. '   ' → logprob: -8.573959350585938
    10. ' graph' → logprob: -9.448959350585938

Token 1528: ' Since' (ID: 12265)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3934101462364197
    2. '#' → logprob: -1.7684102058410645
    3. 'start' → logprob: -2.1434102058410645
    4. '       ' → logprob: -4.3934102058410645
    5. 'dist' → logprob: -4.3934102058410645
    6. '           ' → logprob: -4.7684102058410645
    7. 'for' → logprob: -6.3934102058410645
    8. '   ' → logprob: -6.7684102058410645
    9. 'end' → logprob: -7.7684102058410645
    10. 'continue' → logprob: -8.143409729003906

Token 1529: ' no' (ID: 860)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.8153203725814819
    2. 'True' → logprob: -1.440320372581482
    3. 'False' → logprob: -1.815320372581482
    4. 'len' → logprob: -2.0653204917907715
    5. 'end' → logprob: -3.9403204917907715
    6. ' True' → logprob: -5.4403204917907715
    7. ' start' → logprob: -5.9403204917907715
    8. '#' → logprob: -6.3153204917907715
    9. ' False' → logprob: -6.9403204917907715
    10. ' len' → logprob: -7.5653204917907715

Token 1530: ' circle' (ID: 22005)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.13025395572185516
    2. ' start' → logprob: -2.630254030227661
    3. 'cir' → logprob: -3.380254030227661
    4. ' circles' → logprob: -5.255253791809082
    5. ')' → logprob: -5.880253791809082
    6. 'c' → logprob: -6.005253791809082
    7. 't' → logprob: -6.505253791809082
    8. 'end' → logprob: -6.880253791809082
    9. 'circle' → logprob: -7.005253791809082
    10. 's' → logprob: -7.380253791809082

Token 1531: ' contains' (ID: 8895)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21591845154762268
    2. ':
' → logprob: -2.71591854095459
    3. '_c' → logprob: -2.84091854095459
    4. '           ' → logprob: -3.59091854095459
    5. '==' → logprob: -4.46591854095459
    6. '_' → logprob: -5.09091854095459
    7. '=' → logprob: -5.21591854095459
    8. ',' → logprob: -5.71591854095459
    9. '_continue' → logprob: -6.09091854095459
    10. ' ==' → logprob: -6.46591854095459

Token 1532: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.009938235394656658
    2. 'the' → logprob: -5.2599382400512695
    3. ' start' → logprob: -5.8849382400512695
    4. 'end' → logprob: -6.3849382400512695
    5. ' the' → logprob: -9.13493824005127
    6. ')' → logprob: -10.50993824005127
    7. '#' → logprob: -10.63493824005127
    8. 's' → logprob: -11.38493824005127
    9. ' end' → logprob: -11.38493824005127
    10. 'xt' → logprob: -11.50993824005127

Token 1533: ' point' (ID: 2438)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.33796969056129456
    2. ':' → logprob: -1.9629696607589722
    3. ':
' → logprob: -1.9629696607589722
    4. ',' → logprob: -5.337969779968262
    5. '           ' → logprob: -8.712969779968262
    6. '_s' → logprob: -8.837969779968262
    7. '_' → logprob: -8.837969779968262
    8. ' and' → logprob: -8.962969779968262
    9. '_start' → logprob: -9.462969779968262
    10. '_nodes' → logprob: -9.587969779968262

Token 1534: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6728458404541016
    2. '       ' → logprob: -1.2978458404541016
    3. '           ' → logprob: -1.9228458404541016
    4. ':
' → logprob: -3.1728458404541016
    5. ',' → logprob: -3.7978458404541016
    6. ' and' → logprob: -6.047845840454102
    7. '#' → logprob: -6.672845840454102
    8. '.' → logprob: -6.922845840454102
    9. '   ' → logprob: -8.172845840454102
    10. ' or' → logprob: -8.422845840454102

Token 1535: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07127164304256439
    2. 'continue' → logprob: -3.5712716579437256
    3. 'start' → logprob: -3.8212716579437256
    4. 'for' → logprob: -5.3212714195251465
    5. 'pass' → logprob: -5.6962714195251465
    6. '           ' → logprob: -5.8212714195251465
    7. 'graph' → logprob: -5.8212714195251465
    8. ' continue' → logprob: -6.1962714195251465
    9. '       ' → logprob: -6.4462714195251465
    10. ' #' → logprob: -7.8212714195251465

Token 1536: ' some' (ID: 1236)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.07147299498319626
    2. ' end' → logprob: -2.6964728832244873
    3. 'start' → logprob: -7.696473121643066
    4. '#' → logprob: -8.571473121643066
    5. 'len' → logprob: -8.571473121643066
    6. 'cir' → logprob: -8.696473121643066
    7. ' circles' → logprob: -9.321473121643066
    8. ' start' → logprob: -9.696473121643066
    9. 'there' → logprob: -9.696473121643066
    10. 'the' → logprob: -9.946473121643066

Token 1537: ' circles' (ID: 45131)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.05951733514666557
    2. ' end' → logprob: -2.9345173835754395
    3. 'cir' → logprob: -5.8095173835754395
    4. 'c' → logprob: -8.184516906738281
    5. '_c' → logprob: -8.184516906738281
    6. ' in' → logprob: -8.309516906738281
    7. ' circles' → logprob: -9.184516906738281
    8. '(end' → logprob: -9.309516906738281
    9. ' of' → logprob: -9.434516906738281
    10. '=end' → logprob: -9.434516906738281

Token 1538: ' contain' (ID: 10232)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.016070008277893
    2. '           ' → logprob: -1.766070008277893
    3. ':
' → logprob: -2.1410698890686035
    4. '_cont' → logprob: -2.2660698890686035
    5. '.append' → logprob: -2.5160698890686035
    6. '.' → logprob: -3.0160698890686035
    7. '_have' → logprob: -4.3910698890686035
    8. '               ' → logprob: -4.3910698890686035
    9. '==' → logprob: -4.3910698890686035
    10. ',' → logprob: -4.6410698890686035

Token 1539: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -3.941161776310764e-05
    2. ' end' → logprob: -10.250039100646973
    3. 'the' → logprob: -13.500039100646973
    4. '(end' → logprob: -13.875039100646973
    5. '```' → logprob: -14.500039100646973
    6. 'start' → logprob: -14.875039100646973
    7. '[end' → logprob: -14.875039100646973
    8. '`' → logprob: -15.750039100646973
    9. '
' → logprob: -16.25004005432129
    10. '``' → logprob: -16.37504005432129

Token 1540: ' point' (ID: 2438)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.002387779764831066
    2. '_points' → logprob: -6.752388000488281
    3. '_' → logprob: -7.377388000488281
    4. ':
' → logprob: -8.002388000488281
    5. '):
' → logprob: -9.627388000488281
    6. '_s' → logprob: -9.877388000488281
    7. ':' → logprob: -9.877388000488281
    8. '_point' → logprob: -10.502388000488281
    9. ')_' → logprob: -11.377388000488281
    10. '_nodes' → logprob: -11.627388000488281

Token 1541: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6434469223022461
    2. ':' → logprob: -1.018446922302246
    3. '           ' → logprob: -2.268446922302246
    4. ',' → logprob: -4.893446922302246
    5. '       ' → logprob: -7.143446922302246
    6. ' and' → logprob: -7.143446922302246
    7. '):
' → logprob: -8.518446922302246
    8. '               ' → logprob: -8.893446922302246
    9. '.' → logprob: -9.018446922302246
    10. '#' → logprob: -9.518446922302246

Token 1542: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07928895950317383
    2. '       ' → logprob: -3.329288959503174
    3. ':
' → logprob: -3.829288959503174
    4. ':' → logprob: -4.204288959503174
    5. '               ' → logprob: -6.204288959503174
    6. '   ' → logprob: -7.079288959503174
    7. ',' → logprob: -8.329288482666016
    8. ' and' → logprob: -8.579288482666016
    9. '#' → logprob: -8.704288482666016
    10. '```' → logprob: -9.079288482666016

Token 1543: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4099700152873993
    2. '       ' → logprob: -1.9099700450897217
    3. '#' (adapté à ' #') → logprob: -2.2849700450897217
    4. 'graph' → logprob: -2.7849700450897217
    5. 'continue' → logprob: -4.034969806671143
    6. ' continue' → logprob: -6.159969806671143
    7. '```' → logprob: -6.784969806671143
    8. ' graph' → logprob: -6.784969806671143
    9. '   ' → logprob: -7.159969806671143
    10. ' #' → logprob: -7.534969806671143

Token 1544: ' rat' (ID: 8908)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3395259380340576
    2. '#' → logprob: -1.7145259380340576
    3. 'graph' → logprob: -2.4645259380340576
    4. 'print' → logprob: -4.839526176452637
    5. '           ' → logprob: -5.339526176452637
    6. 'start' → logprob: -5.464526176452637
    7. '       ' → logprob: -5.714526176452637
    8. 'for' → logprob: -6.964526176452637
    9. 'distance' → logprob: -7.464526176452637
    10. '   ' → logprob: -7.464526176452637

Token 1545: ' must' (ID: 2804)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.5761010646820068
    2. ' must' → logprob: -1.2011010646820068
    3. '_m' → logprob: -2.201101064682007
    4. '_can' → logprob: -5.201101303100586
    5. ' can' → logprob: -5.326101303100586
    6. '=' → logprob: -5.576101303100586
    7. 'needs' → logprob: -6.576101303100586
    8. ' needs' → logprob: -6.701101303100586
    9. ')' → logprob: -6.701101303100586
    10. ':' → logprob: -6.826101303100586

Token 1546: ' climb' (ID: 27049)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.08722420036792755
    2. 'cross' → logprob: -2.837224245071411
    3. 'print' → logprob: -3.712224245071411
    4. 'start' → logprob: -8.712224006652832
    5. 'go' → logprob: -9.212224006652832
    6. '#' → logprob: -9.712224006652832
    7. ' climb' → logprob: -9.962224006652832
    8. 'pass' → logprob: -10.087224006652832
    9. 'b' → logprob: -11.212224006652832
    10. 'move' → logprob: -11.462224006652832

Token 1547: ' minimal' (ID: 19957)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.1730084419250488
    2. '1' → logprob: -1.2980084419250488
    3. 'the' → logprob: -1.7980084419250488
    4. 'cir' → logprob: -2.423008441925049
    5. 'those' → logprob: -3.173008441925049
    6. '0' → logprob: -3.423008441925049
    7. 'all' → logprob: -3.548008441925049
    8. 'len' → logprob: -4.548008441925049
    9. '           ' → logprob: -4.798008441925049
    10. 'through' → logprob: -4.798008441925049

Token 1548: ' walls' (ID: 20562)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.9709213972091675
    2. '_c' → logprob: -1.0959213972091675
    3. 'number' → logprob: -2.345921516418457
    4. '_number' → logprob: -3.095921516418457
    5. 'cir' → logprob: -3.470921516418457
    6. ' _' → logprob: -3.595921516418457
    7. '_' → logprob: -4.095921516418457
    8. 'walls' → logprob: -4.470921516418457
    9. '_circle' → logprob: -4.720921516418457
    10. '_wall' → logprob: -4.845921516418457

Token 1549: ' entering' (ID: 25605)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05203172564506531
    2. ':' → logprob: -4.427031517028809
    3. '=' → logprob: -4.927031517028809
    4. '       ' → logprob: -5.177031517028809
    5. ':
' → logprob: -5.427031517028809
    6. '   ' → logprob: -5.552031517028809
    7. '               ' → logprob: -6.052031517028809
    8. ' =' → logprob: -6.177031517028809
    9. 'graph' → logprob: -6.427031517028809
    10. '#' → logprob: -6.677031517028809

Token 1550: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.6650760769844055
    2. 'start' → logprob: -0.7900760769844055
    3. 'the' → logprob: -4.29007625579834
    4. 'cir' → logprob: -5.04007625579834
    5. 'those' → logprob: -6.29007625579834
    6. '(end' → logprob: -6.54007625579834
    7. ')' → logprob: -6.54007625579834
    8. ' end' → logprob: -7.04007625579834
    9. '(start' → logprob: -7.16507625579834
    10. ' start' → logprob: -7.41507625579834

Token 1551: ' circles' (ID: 45131)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.4225156605243683
    2. '       ' → logprob: -1.547515630722046
    3. '           ' → logprob: -2.172515630722046
    4. '```' → logprob: -5.172515869140625
    5. '   ' → logprob: -5.547515869140625
    6. '_s' → logprob: -6.047515869140625
    7. '#' → logprob: -6.422515869140625
    8. ':
' → logprob: -7.047515869140625
    9. '_graph' → logprob: -7.547515869140625
    10. ':' → logprob: -7.672515869140625

Token 1552: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7136995792388916
    2. '           ' → logprob: -0.9636995792388916
    3. 'graph' → logprob: -2.5886995792388916
    4. '   ' → logprob: -3.7136995792388916
    5. '#' → logprob: -4.3386993408203125
    6. '
' → logprob: -5.5886993408203125
    7. ' graph' → logprob: -5.7136993408203125
    8. ':
' → logprob: -6.2136993408203125
    9. '```' → logprob: -6.4636993408203125
    10. '               ' → logprob: -6.7136993408203125

Token 1553: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10121124237775803
    2. '       ' → logprob: -2.3512113094329834
    3. '   ' → logprob: -7.476211071014404
    4. '```' → logprob: -8.851211547851562
    5. '               ' → logprob: -9.726211547851562
    6. 'for' → logprob: -10.101211547851562
    7. 'graph' → logprob: -10.476211547851562
    8. ',' → logprob: -10.601211547851562
    9. ':' → logprob: -10.726211547851562
    10. ' for' → logprob: -10.726211547851562

Token 1554: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11225273460149765
    2. 'dist' → logprob: -2.987252712249756
    3. 'graph' → logprob: -3.487252712249756
    4. '           ' → logprob: -4.362252712249756
    5. '```' → logprob: -5.612252712249756
    6. 'print' → logprob: -5.987252712249756
    7. '#' (adapté à ' #') → logprob: -6.362252712249756
    8. 'continue' → logprob: -6.487252712249756
    9. 'distance' → logprob: -6.862252712249756
    10. 'for' → logprob: -7.362252712249756

Token 1555: ' So' (ID: 2632)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0802295058965683
    2. 'graph' → logprob: -3.3302295207977295
    3. '       ' → logprob: -3.5802295207977295
    4. '           ' → logprob: -5.58022928237915
    5. 'print' → logprob: -5.83022928237915
    6. 'start' → logprob: -6.08022928237915
    7. '#' → logprob: -6.33022928237915
    8. '   ' → logprob: -6.70522928237915
    9. 'distance' → logprob: -7.83022928237915
    10. 'visited' → logprob: -8.205229759216309

Token 1556: ' shortest' (ID: 70564)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.011038274504244328
    2. '#' → logprob: -4.761038303375244
    3. 'start' → logprob: -6.886038303375244
    4. 'd' → logprob: -7.636038303375244
    5. 'graph' → logprob: -7.636038303375244
    6. 'if' → logprob: -9.011037826538086
    7. 'visited' → logprob: -9.011037826538086
    8. 'distance' → logprob: -10.136037826538086
    9. 'end' → logprob: -10.386037826538086
    10. '       ' → logprob: -10.636037826538086

Token 1557: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.09721981734037399
    2. 'distance' → logprob: -2.972219705581665
    3. 'dist' → logprob: -3.722219705581665
    4. '_path' → logprob: -4.347219944000244
    5. '_dist' → logprob: -5.972219944000244
    6. '_distance' → logprob: -6.722219944000244
    7. ' path' → logprob: -8.222219467163086
    8. 'paths' → logprob: -9.347219467163086
    9. '_paths' → logprob: -9.597219467163086
    10. ' distance' → logprob: -10.472219467163086

Token 1558: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46540704369544983
    2. ' =' → logprob: -1.7154070138931274
    3. 'from' → logprob: -2.090407133102417
    4. 'graph' → logprob: -3.590407133102417
    5. '(graph' → logprob: -3.965407133102417
    6. ':' → logprob: -4.840406894683838
    7. '   ' → logprob: -5.965406894683838
    8. '           ' → logprob: -5.965406894683838
    9. '(' → logprob: -6.090406894683838
    10. '(
' → logprob: -6.465406894683838

Token 1559: ' outside' (ID: 7539)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4739188849925995
    2. 'start' → logprob: -1.2239189147949219
    3. '-' → logprob: -2.598918914794922
    4. '0' → logprob: -5.473918914794922
    5. '[-' → logprob: -5.723918914794922
    6. 'outside' → logprob: -8.723918914794922
    7. ' end' → logprob: -8.848918914794922
    8. '[]' → logprob: -8.848918914794922
    9. '-end' → logprob: -9.098918914794922
    10. '[' → logprob: -9.098918914794922

Token 1560: ' (' (ID: 350)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4962828755378723
    2. 'to' → logprob: -1.6212828159332275
    3. '=' → logprob: -2.7462828159332275
    4. '_to' → logprob: -3.3712828159332275
    5. ' =' → logprob: -3.4962828159332275
    6. ')' → logprob: -4.246283054351807
    7. 'graph' → logprob: -4.746283054351807
    8. '-' → logprob: -5.121283054351807
    9. '_nodes' → logprob: -5.371283054351807
    10. '   ' → logprob: -5.746283054351807

Token 1561: 'start' (ID: 5236)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001858676434494555
    2. '-n' → logprob: -7.001858711242676
    3. 'n' → logprob: -7.251858711242676
    4. '[-' → logprob: -9.501858711242676
    5. '0' → logprob: -9.876858711242676
    6. ' -' → logprob: -9.876858711242676
    7. 'start' → logprob: -11.126858711242676
    8. '-start' → logprob: -11.251858711242676
    9. ')' → logprob: -12.376858711242676
    10. '
' → logprob: -12.501858711242676

Token 1562: ')' (ID: 8)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.5227499604225159
    2. '_' → logprob: -1.272749900817871
    3. '_nodes' → logprob: -2.397749900817871
    4. ')' → logprob: -3.897749900817871
    5. '_node' → logprob: -4.897749900817871
    6. ')_' → logprob: -5.147749900817871
    7. '_)' → logprob: -7.647749900817871
    8. '`' → logprob: -8.272749900817871
    9. ''_' → logprob: -8.397749900817871
    10. '_
' → logprob: -8.397749900817871

Token 1563: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8703082203865051
    2. '=' → logprob: -1.4953081607818604
    3. 'to' → logprob: -1.6203081607818604
    4. ' =' → logprob: -2.4953081607818604
    5. '_to' → logprob: -2.7453081607818604
    6. ')' → logprob: -5.3703083992004395
    7. ':' → logprob: -6.2453083992004395
    8. ',' → logprob: -6.7453083992004395
    9. 'graph' → logprob: -7.1203083992004395
    10. '   ' → logprob: -7.3703083992004395

Token 1564: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.010351376608014107
    2. ' end' → logprob: -5.135351181030273
    3. 'cir' → logprob: -6.010351181030273
    4. 'any' → logprob: -7.135351181030273
    5. 'the' → logprob: -7.510351181030273
    6. 'start' → logprob: -8.135351181030273
    7. '0' → logprob: -8.635351181030273
    8. 'those' → logprob: -10.260351181030273
    9. ' circles' → logprob: -11.010351181030273
    10. ' the' → logprob: -11.385351181030273

Token 1565: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00030281138606369495
    2. '_nodes' → logprob: -8.375303268432617
    3. '```' → logprob: -10.000303268432617
    4. '`' → logprob: -12.375303268432617
    5. '_s' → logprob: -12.750303268432617
    6. '_' → logprob: -12.875303268432617
    7. '_circle' → logprob: -12.875303268432617
    8. '_points' → logprob: -13.125303268432617
    9. '"_' → logprob: -13.250303268432617
    10. '   ' → logprob: -13.250303268432617

Token 1566: 'ir' (ID: 380)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.5449317693710327
    2. 'ir' → logprob: -1.0449317693710327
    3. '_' → logprob: -2.7949318885803223
    4. '_ir' → logprob: -6.169931888580322
    5. '_s' → logprob: -6.419931888580322
    6. '\' → logprob: -7.294931888580322
    7. '```' → logprob: -7.419931888580322
    8. 'cir' → logprob: -7.669931888580322
    9. 'irc' → logprob: -7.794931888580322
    10. '_
' → logprob: -9.169931411743164

Token 1567: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -9.329167369287461e-05
    2. 'icles' → logprob: -10.000093460083008
    3. 'les' → logprob: -10.875093460083008
    4. 'ir' → logprob: -11.000093460083008
    5. '```' → logprob: -12.500093460083008
    6. 'cle' → logprob: -12.750093460083008
    7. 'r' → logprob: -13.625093460083008
    8. 'cuits' → logprob: -14.500093460083008
    9. '``' → logprob: -14.750093460083008
    10. 'cl' → logprob: -14.875093460083008

Token 1568: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6165950298309326
    2. 'graph' → logprob: -1.4915950298309326
    3. 'dist' → logprob: -2.2415950298309326
    4. '           ' → logprob: -2.8665950298309326
    5. '       ' → logprob: -2.9915950298309326
    6. ' graph' → logprob: -4.491595268249512
    7. 'start' → logprob: -6.116595268249512
    8. 'distance' → logprob: -6.491595268249512
    9. '#' → logprob: -6.991595268249512
    10. '
' → logprob: -7.116595268249512

Token 1569: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7779561877250671
    2. '1' → logprob: -1.527956247329712
    3. 'b' → logprob: -1.777956247329712
    4. '0' → logprob: -2.777956247329712
    5. 'math' → logprob: -2.902956247329712
    6. 'len' → logprob: -4.277956008911133
    7. 'dist' → logprob: -4.402956008911133
    8. 'float' → logprob: -5.152956008911133
    9. 'max' → logprob: -5.902956008911133
    10. 'end' → logprob: -6.152956008911133

Token 1570: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8157102465629578
    2. 'distance' → logprob: -1.5657103061676025
    3. '(
' → logprob: -2.1907103061676025
    4. '(dist' → logprob: -2.8157103061676025
    5. '1' → logprob: -3.6907103061676025
    6. '(' → logprob: -3.6907103061676025
    7. '(graph' → logprob: -3.8157103061676025
    8. 'graph' → logprob: -4.065710067749023
    9. '_dist' → logprob: -4.190710067749023
    10. '_distance' → logprob: -4.440710067749023

Token 1571: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0902644395828247
    2. '           ' → logprob: -1.7152644395828247
    3. '=' → logprob: -1.8402644395828247
    4. 'graph' → logprob: -2.215264320373535
    5. '   ' → logprob: -2.590264320373535
    6. '       ' → logprob: -2.715264320373535
    7. 'from' → logprob: -3.340264320373535
    8. '```' → logprob: -4.965264320373535
    9. ' to' → logprob: -5.090264320373535
    10. '_to' → logprob: -5.340264320373535

Token 1572: ' "' (ID: 392)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4847545921802521
    2. '0' → logprob: -2.2347545623779297
    3. 'cir' → logprob: -2.2347545623779297
    4. 'circle' → logprob: -2.9847545623779297
    5. 'graph' → logprob: -3.4847545623779297
    6. 'c' → logprob: -3.9847545623779297
    7. 'start' → logprob: -4.10975456237793
    8. 'i' → logprob: -4.98475456237793
    9. '-' → logprob: -5.10975456237793
    10. 'any' → logprob: -5.48475456237793

Token 1573: 'outside' (ID: 141623)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.8083498477935791
    2. 'cir' → logprob: -1.308349847793579
    3. 'graph' → logprob: -2.433349847793579
    4. 'start' → logprob: -2.683349847793579
    5. 'circle' → logprob: -3.308349847793579
    6. '0' → logprob: -3.683349847793579
    7. '-' → logprob: -4.183349609375
    8. 'n' → logprob: -4.683349609375
    9. 'outside' → logprob: -5.058349609375
    10. '[]' → logprob: -5.558349609375

Token 1574: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4701770842075348
    2. '_nodes' → logprob: -1.4701770544052124
    3. '_c' → logprob: -2.470177173614502
    4. '_to' → logprob: -4.095177173614502
    5. ' "' → logprob: -4.345177173614502
    6. ' to' → logprob: -4.470177173614502
    7. '"-' → logprob: -5.845177173614502
    8. ')' → logprob: -6.095177173614502
    9. '_node' → logprob: -6.220177173614502
    10. 'node' → logprob: -6.470177173614502

Token 1575: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9301645159721375
    2. ' to' → logprob: -1.9301645755767822
    3. '=' → logprob: -2.3051645755767822
    4. '_to' → logprob: -2.3051645755767822
    5. '_nodes' → logprob: -2.8051645755767822
    6. ')' → logprob: -2.9301645755767822
    7. '_c' → logprob: -3.4301645755767822
    8. 'graph' → logprob: -4.555164337158203
    9. '           ' → logprob: -4.680164337158203
    10. '-' → logprob: -4.680164337158203

Token 1576: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.23751157522201538
    2. 'any' → logprob: -2.23751163482666
    3. 'cir' → logprob: -2.73751163482666
    4. 'each' → logprob: -4.48751163482666
    5. 'all' → logprob: -4.61251163482666
    6. 'the' → logprob: -4.86251163482666
    7. 'graph' → logprob: -5.86251163482666
    8. ' end' → logprob: -6.11251163482666
    9. ' any' → logprob: -6.23751163482666
    10. 'circle' → logprob: -6.61251163482666

Token 1577: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.004719545599073172
    2. '_nodes' → logprob: -5.7547197341918945
    3. '_' → logprob: -6.8797197341918945
    4. '```' → logprob: -9.004719734191895
    5. '_points' → logprob: -9.754719734191895
    6. '`' → logprob: -9.754719734191895
    7. ')' → logprob: -10.004719734191895
    8. ')_' → logprob: -10.129719734191895
    9. '_
' → logprob: -10.254719734191895
    10. '\' → logprob: -10.504719734191895

Token 1578: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.24414081871509552
    2. '_c' → logprob: -1.619140863418579
    3. '_' → logprob: -4.869140625
    4. '\' → logprob: -6.119140625
    5. '_ir' → logprob: -6.369140625
    6. 'cir' → logprob: -6.619140625
    7. '```' → logprob: -6.744140625
    8. '_s' → logprob: -6.994140625
    9. 'irc' → logprob: -7.994140625
    10. '_nodes' → logprob: -8.244140625

Token 1579: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.004263350740075111
    2. '_c' → logprob: -6.504263401031494
    3. '_' → logprob: -7.129263401031494
    4. 'les' → logprob: -7.254263401031494
    5. 'ir' → logprob: -8.504262924194336
    6. '```' → logprob: -8.504262924194336
    7. '   ' → logprob: -9.004262924194336
    8. 'icles' → logprob: -9.129262924194336
    9. 'c' → logprob: -9.254262924194336
    10. 'cle' → logprob: -9.379262924194336

Token 1580: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11504369229078293
    2. '   ' → logprob: -3.3650436401367188
    3. '
' → logprob: -3.4900436401367188
    4. '           ' → logprob: -3.7400436401367188
    5. 'graph' → logprob: -5.240043640136719
    6. '#' → logprob: -6.115043640136719
    7. ' graph' → logprob: -6.240043640136719
    8. ':
' → logprob: -6.365043640136719
    9. ')
' → logprob: -6.615043640136719
    10. ')' → logprob: -6.615043640136719

Token 1581: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9913309812545776
    2. '       ' → logprob: -1.2413309812545776
    3. '   ' → logprob: -2.116331100463867
    4. '
' → logprob: -2.616331100463867
    5. 'graph' → logprob: -2.991331100463867
    6. ':' → logprob: -3.366331100463867
    7. ' graph' → logprob: -3.991331100463867
    8. ':
' → logprob: -3.991331100463867
    9. ')' → logprob: -4.866331100463867
    10. '#' → logprob: -5.241331100463867

Token 1582: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.46829503774642944
    2. 'dist' → logprob: -1.4682950973510742
    3. '#' (adapté à ' #') → logprob: -2.468295097351074
    4. '       ' → logprob: -4.468295097351074
    5. '           ' → logprob: -4.593295097351074
    6. 'queue' → logprob: -4.843295097351074
    7. '   ' → logprob: -4.968295097351074
    8. 'outside' → logprob: -5.093295097351074
    9. 'visited' → logprob: -5.218295097351074
    10. 'for' → logprob: -5.843295097351074

Token 1583: ' We' (ID: 1416)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.21066807210445404
    2. '#' → logprob: -3.0856680870056152
    3. 'graph' → logprob: -3.0856680870056152
    4. 'outside' → logprob: -3.0856680870056152
    5. 'visited' → logprob: -3.5856680870056152
    6. 'queue' → logprob: -4.585668087005615
    7. 'start' → logprob: -4.835668087005615
    8. '   ' → logprob: -6.335668087005615
    9. 'distance' → logprob: -6.835668087005615
    10. '       ' → logprob: -6.960668087005615

Token 1584: ' add' (ID: 1147)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6003637313842773
    2. ' graph' → logprob: -1.7253637313842773
    3. '#' → logprob: -2.7253637313842773
    4. ' =' → logprob: -2.7253637313842773
    5. '=' → logprob: -3.1003637313842773
    6. '_graph' → logprob: -3.2253637313842773
    7. ' continue' → logprob: -4.225363731384277
    8. ' #' → logprob: -5.100363731384277
    9. '   ' → logprob: -5.100363731384277
    10. 'for' → logprob: -5.225363731384277

Token 1585: ' a' (ID: 261)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5968304872512817
    2. 'pseudo' → logprob: -1.0968304872512817
    3. 'start' → logprob: -3.471830368041992
    4. 'outside' → logprob: -3.721830368041992
    5. '(-' → logprob: -3.971830368041992
    6. 'a' → logprob: -4.596830368041992
    7. 'graph' → logprob: -5.096830368041992
    8. ' pseudo' → logprob: -5.221830368041992
    9. '1' → logprob: -5.471830368041992
    10. 'n' → logprob: -5.971830368041992

Token 1586: ' virtual' (ID: 7346)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -1.2997312545776367
    2. 'virtual' → logprob: -1.7997312545776367
    3. ' virtual' → logprob: -1.7997312545776367
    4. 'start' → logprob: -2.0497312545776367
    5. 'pseudo' → logprob: -2.1747312545776367
    6. ' pseudo' → logprob: -2.9247312545776367
    7. ' new' → logprob: -4.424731254577637
    8. ' graph' → logprob: -4.674731254577637
    9. ' node' → logprob: -4.799731254577637
    10. 'outside' → logprob: -4.799731254577637

Token 1587: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.03188338130712509
    2. ' node' → logprob: -3.781883478164673
    3. 'start' → logprob: -5.406883239746094
    4. '_node' → logprob: -5.656883239746094
    5. '_start' → logprob: -8.031883239746094
    6. ' start' → logprob: -8.656883239746094
    7. '_nodes' → logprob: -10.156883239746094
    8. 'graph' → logprob: -10.406883239746094
    9. '
' → logprob: -11.781883239746094
    10. '```' → logprob: -11.781883239746094

Token 1588: ' '' (ID: 461)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1472083479166031
    2. '=' → logprob: -2.0222084522247314
    3. '=-' → logprob: -6.772208213806152
    4. '_' → logprob: -7.647208213806152
    5. '_node' → logprob: -7.772208213806152
    6. ',' → logprob: -7.772208213806152
    7. '-' → logprob: -8.397208213806152
    8. '_nodes' → logprob: -8.397208213806152
    9. '   ' → logprob: -8.647208213806152
    10. 'node' → logprob: -8.772208213806152

Token 1589: 'start' (ID: 5236)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.033663105219602585
    2. '-' → logprob: -3.658663034439087
    3. '-n' → logprob: -6.408663272857666
    4. ' n' → logprob: -6.783663272857666
    5. 'start' → logprob: -6.783663272857666
    6. ')' → logprob: -6.908663272857666
    7. 'node' → logprob: -7.158663272857666
    8. 'graph' → logprob: -8.283662796020508
    9. ' -' → logprob: -8.283662796020508
    10. '0' → logprob: -8.533662796020508

Token 1590: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5796940326690674
    2. '_node' → logprob: -1.3296940326690674
    3. '_nodes' → logprob: -2.2046940326690674
    4. '_' → logprob: -3.9546940326690674
    5. '=' → logprob: -4.079693794250488
    6. ')' → logprob: -4.454693794250488
    7. ',' → logprob: -4.829693794250488
    8. ''' → logprob: -6.454693794250488
    9. '`' → logprob: -6.579693794250488
    10. '   ' → logprob: -6.579693794250488

Token 1591: ' connected' (ID: 12079)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02296404540538788
    2. '=' → logprob: -4.147964000701904
    3. ',' → logprob: -5.897964000701904
    4. '_node' → logprob: -6.522964000701904
    5. '_nodes' → logprob: -7.522964000701904
    6. ')' → logprob: -7.772964000701904
    7. '_' → logprob: -7.772964000701904
    8. '   ' → logprob: -8.522964477539062
    9. '=-' → logprob: -8.647964477539062
    10. '_start' → logprob: -8.897964477539062

Token 1592: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5977932810783386
    2. 'to' → logprob: -0.8477932810783386
    3. '_to' → logprob: -4.222793102264404
    4. '=' → logprob: -5.472793102264404
    5. ' =' → logprob: -6.472793102264404
    6. '   ' → logprob: -7.597793102264404
    7. '           ' → logprob: -8.472793579101562
    8. ')' → logprob: -9.347793579101562
    9. '=[]' → logprob: -9.347793579101562
    10. '       ' → logprob: -10.097793579101562

Token 1593: ' no' (ID: 860)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2151291370391846
    2. 'end' → logprob: -1.7151291370391846
    3. 'all' → logprob: -1.9651291370391846
    4. '[end' → logprob: -2.0901291370391846
    5. '[c' → logprob: -3.2151291370391846
    6. '[]' → logprob: -3.3401291370391846
    7. '[v' → logprob: -3.4651291370391846
    8. '[' → logprob: -3.4651291370391846
    9. 'cir' → logprob: -3.9651291370391846
    10. '[j' → logprob: -4.0901288986206055

Token 1594: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.01034193579107523
    2. ' circles' → logprob: -5.260342121124268
    3. 'circle' → logprob: -6.135342121124268
    4. 'nodes' → logprob: -6.635342121124268
    5. 'one' → logprob: -7.760342121124268
    6. ' nodes' → logprob: -8.38534164428711
    7. 'space' → logprob: -8.76034164428711
    8. 'node' → logprob: -8.76034164428711
    9. 'spaces' → logprob: -8.76034164428711
    10. ' circle' → logprob: -9.38534164428711

Token 1595: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6622366309165955
    2. '       ' → logprob: -2.5372366905212402
    3. ')
' → logprob: -2.6622366905212402
    4. '
' → logprob: -2.6622366905212402
    5. ':' → logprob: -2.7872366905212402
    6. '   ' → logprob: -3.1622366905212402
    7. ',' → logprob: -3.7872366905212402
    8. ':
' → logprob: -3.9122366905212402
    9. ' =' → logprob: -4.16223669052124
    10. ']' → logprob: -4.16223669052124

Token 1596: 'since' (ID: 21910)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2222503423690796
    2. '#' → logprob: -1.8472503423690796
    3. ' but' → logprob: -4.847250461578369
    4. 'graph' → logprob: -5.097250461578369
    5. ' )' → logprob: -5.347250461578369
    6. '...' → logprob: -5.847250461578369
    7. ')
' → logprob: -5.972250461578369
    8. '),' → logprob: -6.222250461578369
    9. 'but' → logprob: -6.472250461578369
    10. '[]' → logprob: -6.597250461578369

Token 1597: ' start' (ID: 1604)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -1.184918761253357
    2. ' not' → logprob: -2.0599188804626465
    3. 'start' → logprob: -2.3099188804626465
    4. 'no' → logprob: -2.6849188804626465
    5. ' start' → logprob: -2.9349188804626465
    6. 'not' → logprob: -3.0599188804626465
    7. ')' → logprob: -3.0599188804626465
    8. '#' → logprob: -3.1849188804626465
    9. 'the' → logprob: -3.3099188804626465
    10. 'True' → logprob: -3.5599188804626465

Token 1598: ' outside' (ID: 7539)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7231717705726624
    2. '_c' → logprob: -1.3481717109680176
    3. '_' → logprob: -2.0981717109680176
    4. ''' → logprob: -3.7231717109680176
    5. ')_' → logprob: -3.9731717109680176
    6. ' is' → logprob: -4.098171710968018
    7. ''_' → logprob: -4.723171710968018
    8. '
' → logprob: -4.973171710968018
    9. ' _' → logprob: -5.348171710968018
    10. ' )' → logprob: -5.348171710968018

Token 1599: ' any' (ID: 1062)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012051469646394253
    2. ')
' → logprob: -6.262051582336426
    3. ' and' → logprob: -6.387051582336426
    4. ',' → logprob: -6.387051582336426
    5. '.' → logprob: -6.512051582336426
    6. ' )' → logprob: -6.887051582336426
    7. ' only' → logprob: -7.387051582336426
    8. '   ' → logprob: -7.637051582336426
    9. ' node' → logprob: -7.637051582336426
    10. '       ' → logprob: -8.012051582336426

Token 1600: ' circle' (ID: 22005)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.5716137886047363
    2. ')' → logprob: -1.3216137886047363
    3. 'circle' → logprob: -2.6966137886047363
    4. '_circle' → logprob: -3.6966137886047363
    5. 'cir' → logprob: -3.8216137886047363
    6. ' )' → logprob: -4.071613788604736
    7. ' circle' → logprob: -4.821613788604736
    8. 'point' → logprob: -4.946613788604736
    9. 'node' → logprob: -5.446613788604736
    10. ' node' → logprob: -5.696613788604736

Token 1601: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01702597178518772
    2. '       ' → logprob: -5.642025947570801
    3. ')
' → logprob: -5.892025947570801
    4. ',' → logprob: -6.392025947570801
    5. ':' → logprob: -6.392025947570801
    6. '           ' → logprob: -6.392025947570801
    7. '   ' → logprob: -6.517025947570801
    8. '
' → logprob: -7.017025947570801
    9. '):' → logprob: -7.142025947570801
    10. '.' → logprob: -7.267025947570801

Token 1602: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010962927713990211
    2. '       ' → logprob: -5.260962963104248
    3. '#' → logprob: -6.135962963104248
    4. ')' → logprob: -6.260962963104248
    5. '   ' → logprob: -7.635962963104248
    6. '
' → logprob: -8.26096248626709
    7. ' and' → logprob: -8.26096248626709
    8. ',' → logprob: -8.38596248626709
    9. '.' → logprob: -9.51096248626709
    10. '               ' → logprob: -10.01096248626709

Token 1603: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.42139649391174316
    2. '#' (adapté à ' #') → logprob: -1.9213964939117432
    3. '       ' → logprob: -1.9213964939117432
    4. '           ' → logprob: -3.296396493911743
    5. '   ' → logprob: -5.171396255493164
    6. ' graph' → logprob: -5.671396255493164
    7. 'virtual' → logprob: -7.046396255493164
    8. 'continue' → logprob: -7.046396255493164
    9. 'start' → logprob: -7.421396255493164
    10. ' #' → logprob: -7.546396255493164

Token 1604: ' So' (ID: 2632)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.47826188802719116
    2. '#' → logprob: -1.478261947631836
    3. 'dist' → logprob: -2.103261947631836
    4. 'virtual' → logprob: -4.978261947631836
    5. 'visited' → logprob: -4.978261947631836
    6. 'start' → logprob: -5.103261947631836
    7. '           ' → logprob: -5.978261947631836
    8. '   ' → logprob: -6.228261947631836
    9. '       ' → logprob: -6.228261947631836
    10. 'queue' → logprob: -7.103261947631836

Token 1605: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.010317044332623482
    2. '#' → logprob: -4.635316848754883
    3. 'distance' → logprob: -8.510316848754883
    4. 'd' → logprob: -9.635316848754883
    5. 'visited' → logprob: -9.635316848754883
    6. 'start' → logprob: -9.885316848754883
    7. 'graph' → logprob: -10.010316848754883
    8. 'for' → logprob: -10.510316848754883
    9. ' dist' → logprob: -10.760316848754883
    10. 'if' → logprob: -10.885316848754883

Token 1606: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2055511474609375
    2. 'from' → logprob: -1.2055511474609375
    3. ' =' → logprob: -2.0805511474609375
    4. 's' → logprob: -2.0805511474609375
    5. 'to' → logprob: -3.4555511474609375
    6. '_to' → logprob: -3.5805511474609375
    7. '[' → logprob: -3.5805511474609375
    8. '[s' → logprob: -4.2055511474609375
    9. '[]' → logprob: -4.4555511474609375
    10. '[start' → logprob: -4.4555511474609375

Token 1607: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2057676762342453
    2. 'end' → logprob: -1.8307676315307617
    3. '0' → logprob: -4.580767631530762
    4. 'outside' → logprob: -5.455767631530762
    5. '-' → logprob: -5.580767631530762
    6. 'graph' → logprob: -6.205767631530762
    7. 'n' → logprob: -6.330767631530762
    8. ' start' → logprob: -7.205767631530762
    9. '[]' → logprob: -7.705767631530762
    10. '[-' → logprob: -7.830767631530762

Token 1608: ' node' (ID: 4596)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.41037246584892273
    2. '=' → logprob: -2.410372495651245
    3. '_nodes' → logprob: -2.410372495651245
    4. ' =' → logprob: -2.535372495651245
    5. 's' → logprob: -4.285372257232666
    6. ')' → logprob: -4.410372257232666
    7. 'node' → logprob: -4.410372257232666
    8. ' to' → logprob: -5.035372257232666
    9. ' node' → logprob: -5.410372257232666
    10. '[node' → logprob: -5.535372257232666

Token 1609: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5342785716056824
    2. ' =' → logprob: -1.2842786312103271
    3. ' to' → logprob: -2.659278631210327
    4. 'to' → logprob: -3.534278631210327
    5. 's' → logprob: -4.034278392791748
    6. ' is' → logprob: -4.784278392791748
    7. '_to' → logprob: -5.034278392791748
    8. 'is' → logprob: -6.784278392791748
    9. '[' → logprob: -6.909278392791748
    10. ')' → logprob: -7.659278392791748

Token 1610: ' circles' (ID: 45131)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.047317247837781906
    2. 'any' → logprob: -3.5473172664642334
    3. 'all' → logprob: -4.922317028045654
    4. 'cir' → logprob: -5.547317028045654
    5. 'start' → logprob: -5.547317028045654
    6. 'the' → logprob: -6.547317028045654
    7. '0' → logprob: -7.922317028045654
    8. '...' → logprob: -8.547317504882812
    9. ' end' → logprob: -9.297317504882812
    10. 'each' → logprob: -9.547317504882812

Token 1611: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49915024638175964
    2. ' =' → logprob: -1.499150276184082
    3. ' is' → logprob: -2.249150276184082
    4. ')' → logprob: -4.249150276184082
    5. ']' → logprob: -4.624150276184082
    6. '[' → logprob: -4.999150276184082
    7. '[]' → logprob: -5.624150276184082
    8. '
' → logprob: -5.749150276184082
    9. 'is' → logprob: -5.874150276184082
    10. '   ' → logprob: -5.999150276184082

Token 1612: ' undefined' (ID: 10118)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6085154414176941
    2. 'float' → logprob: -1.8585155010223389
    3. '-' → logprob: -2.358515501022339
    4. '[' → logprob: -2.608515501022339
    5. '1' → logprob: -3.358515501022339
    6. 'None' → logprob: -3.608515501022339
    7. '[]' → logprob: -4.10851526260376
    8. '[-' → logprob: -4.35851526260376
    9. 'inf' → logprob: -4.48351526260376
    10. 'in' → logprob: -4.98351526260376

Token 1613: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8041876554489136
    2. '       ' → logprob: -0.8041876554489136
    3. '
' → logprob: -2.929187774658203
    4. ']' → logprob: -4.554187774658203
    5. ')
' → logprob: -4.804187774658203
    6. '           ' → logprob: -4.804187774658203
    7. '   ' → logprob: -4.929187774658203
    8. '#' → logprob: -4.929187774658203
    9. ',' → logprob: -6.054187774658203
    10. '```' → logprob: -6.679187774658203

Token 1614: 'no' (ID: 1750)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7059757709503174
    2. '-' → logprob: -1.4559757709503174
    3. '0' → logprob: -1.4559757709503174
    4. ' -' → logprob: -4.955975532531738
    5. ')
' → logprob: -5.205975532531738
    6. '1' → logprob: -5.205975532531738
    7. 'n' → logprob: -5.455975532531738
    8. '#' → logprob: -6.330975532531738
    9. 'None' → logprob: -6.455975532531738
    10. '[-' → logprob: -6.580975532531738

Token 1615: ' edges' (ID: 22569)
  Prédit: ' connections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connections' → logprob: -1.0380232334136963
    2. 'connections' → logprob: -1.7880232334136963
    3. 'neighbors' → logprob: -1.9130232334136963
    4. ' neighbors' → logprob: -1.9130232334136963
    5. ' connection' → logprob: -2.5380232334136963
    6. ' edges' → logprob: -3.4130232334136963
    7. ')' → logprob: -3.7880232334136963
    8. 'edges' → logprob: -4.288022994995117
    9. 'connection' → logprob: -4.538022994995117
    10. '
' → logprob: -5.413022994995117

Token 1616: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014932921156287193
    2. '.' → logprob: -5.889933109283447
    3. ',' → logprob: -6.014933109283447
    4. ')
' → logprob: -6.014933109283447
    5. '```' → logprob: -6.014933109283447
    6. ']' → logprob: -7.014933109283447
    7. '
' → logprob: -7.514933109283447
    8. '           ' → logprob: -7.639933109283447
    9. '   ' → logprob: -7.639933109283447
    10. '       ' → logprob: -7.889933109283447

Token 1617: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17298874258995056
    2. '<|end|>' → logprob: -2.9229886531829834
    3. ')' → logprob: -3.0479886531829834
    4. '           ' → logprob: -3.1729886531829834
    5. '
' → logprob: -4.7979888916015625
    6. '<|end|>' → logprob: -5.6729888916015625
    7. '```' → logprob: -6.9229888916015625
    8. ',' → logprob: -7.9229888916015625
    9. '   ' → logprob: -8.047988891601562
    10. '.' → logprob: -8.172988891601562

Token 1618: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046795349568128586
    2. '#' (adapté à ' #') → logprob: -3.54679536819458
    3. '           ' → logprob: -4.42179536819458
    4. 'continue' → logprob: -6.17179536819458
    5. 'graph' → logprob: -7.29679536819458
    6. ')' → logprob: -7.67179536819458
    7. '   ' → logprob: -8.046794891357422
    8. ' continue' → logprob: -8.296794891357422
    9. '
' → logprob: -8.546794891357422
    10. 'if' → logprob: -8.671794891357422

Token 1619: ' So' (ID: 2632)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23712597787380219
    2. '           ' → logprob: -2.362125873565674
    3. '       ' → logprob: -2.987125873565674
    4. 'graph' → logprob: -3.237125873565674
    5. 'continue' → logprob: -4.987125873565674
    6. 'print' → logprob: -5.112125873565674
    7. 'for' → logprob: -5.487125873565674
    8. ')' → logprob: -6.237125873565674
    9. '
' → logprob: -6.612125873565674
    10. ' continue' → logprob: -6.987125873565674

Token 1620: ' rat' (ID: 8908)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.25639161467552185
    2. 'print' → logprob: -2.1313915252685547
    3. '#' → logprob: -2.2563915252685547
    4. 'for' → logprob: -7.006391525268555
    5. 'graph' → logprob: -7.006391525268555
    6. 'distance' → logprob: -7.631391525268555
    7. 'd' → logprob: -9.006391525268555
    8. 'visited' → logprob: -9.881391525268555
    9. '       ' → logprob: -10.256391525268555
    10. 'if' → logprob: -10.256391525268555

Token 1621: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.6480862498283386
    2. ')' → logprob: -2.0230863094329834
    3. '_' → logprob: -2.3980863094329834
    4. 'must' → logprob: -2.5230863094329834
    5. ' can' → logprob: -2.8980863094329834
    6. ' cannot' → logprob: -3.2730863094329834
    7. '_can' → logprob: -4.523086071014404
    8. ' ' → logprob: -4.523086071014404
    9. 'cannot' → logprob: -4.898086071014404
    10. ' needs' → logprob: -5.273086071014404

Token 1622: ' climb' (ID: 27049)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06131862476468086
    2. 'cross' → logprob: -3.0613186359405518
    3. 'cl' → logprob: -4.686318397521973
    4. '0' → logprob: -6.811318397521973
    5. '
' → logprob: -7.436318397521973
    6. ' print' → logprob: -7.936318397521973
    7. '1' → logprob: -8.561318397521973
    8. 'pass' → logprob: -8.686318397521973
    9. 'go' → logprob: -8.811318397521973
    10. 'output' → logprob: -9.061318397521973

Token 1623: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.7250390648841858
    2. '1' → logprob: -0.9750390648841858
    3. ' at' → logprob: -3.350039005279541
    4. 'over' → logprob: -3.475039005279541
    5. 'through' → logprob: -4.100039005279541
    6. '0' → logprob: -4.100039005279541
    7. 'all' → logprob: -4.225039005279541
    8. 'any' → logprob: -4.850039005279541
    9. 'the' → logprob: -4.975039005279541
    10. 'cir' → logprob: -5.975039005279541

Token 1624: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -7.004696090007201e-05
    2. '1' → logprob: -10.875069618225098
    3. ' least' → logprob: -10.875069618225098
    4. 'most' → logprob: -11.250069618225098
    5. '```' → logprob: -12.625069618225098
    6. '
' → logprob: -12.875069618225098
    7. 'minimum' → logprob: -12.875069618225098
    8. 'Least' → logprob: -13.125069618225098
    9. 'lest' → logprob: -13.250069618225098
    10. '_le' → logprob: -13.375069618225098

Token 1625: ' min' (ID: 1349)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026562742423266172
    2. ' ' → logprob: -6.12765645980835
    3. ' at' → logprob: -9.377655982971191
    4. 'n' → logprob: -9.752655982971191
    5. 'all' → logprob: -9.877655982971191
    6. 'at' → logprob: -9.877655982971191
    7. 'inf' → logprob: -9.877655982971191
    8. '0' → logprob: -10.377655982971191
    9. 'in' → logprob: -10.377655982971191
    10. 'the' → logprob: -10.877655982971191

Token 1626: ' distance' (ID: 9324)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6196814179420471
    2. '(' → logprob: -2.6196813583374023
    3. '(
' → logprob: -2.7446813583374023
    4. '(graph' → logprob: -2.9946813583374023
    5. '_dist' → logprob: -3.1196813583374023
    6. '_c' → logprob: -3.2446813583374023
    7. '_distance' → logprob: -3.4946813583374023
    8. ' _' → logprob: -3.8696813583374023
    9. '(c' → logprob: -4.244681358337402
    10. '_wall' → logprob: -4.369681358337402

Token 1627: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8741092085838318
    2. '+' → logprob: -1.3741092681884766
    3. '=' → logprob: -2.6241092681884766
    4. '_to' → logprob: -2.6241092681884766
    5. ' +' → logprob: -3.3741092681884766
    6. ' from' → logprob: -3.7491092681884766
    7. ' to' → logprob: -4.124109268188477
    8. '_from' → logprob: -4.249109268188477
    9. '[' → logprob: -4.499109268188477
    10. '```' → logprob: -4.499109268188477

Token 1628: ' outside' (ID: 7539)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.5446377992630005
    2. 'cir' → logprob: -1.1696377992630005
    3. ' end' → logprob: -3.294637680053711
    4. 'start' → logprob: -3.794637680053711
    5. 'outside' → logprob: -4.794637680053711
    6. '0' → logprob: -4.794637680053711
    7. ' circles' → logprob: -4.919637680053711
    8. 'the' → logprob: -5.294637680053711
    9. 'any' → logprob: -5.544637680053711
    10. ' start' → logprob: -5.669637680053711

Token 1629: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6356751918792725
    2. ' to' → logprob: -1.7606751918792725
    3. '+' → logprob: -2.1356751918792725
    4. ')' → logprob: -2.3856751918792725
    5. '_to' → logprob: -2.3856751918792725
    6. ' +' → logprob: -2.6356751918792725
    7. ' ' → logprob: -3.1356751918792725
    8. ',' → logprob: -3.6356751918792725
    9. '   ' → logprob: -4.010675430297852
    10. 'to' → logprob: -4.010675430297852

Token 1630: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4074878990650177
    2. 'any' → logprob: -1.2824878692626953
    3. 'cir' → logprob: -3.2824878692626953
    4. ' any' → logprob: -4.657487869262695
    5. ' end' → logprob: -5.157487869262695
    6. 'the' → logprob: -6.532487869262695
    7. 'all' → logprob: -7.032487869262695
    8. 'some' → logprob: -7.532487869262695
    9. 'enter' → logprob: -7.907487869262695
    10. ' circles' → logprob: -7.907487869262695

Token 1631: ' circles' (ID: 45131)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.06732126325368881
    2. '_' → logprob: -3.442321300506592
    3. '_nodes' → logprob: -3.442321300506592
    4. '_node' → logprob: -7.942321300506592
    5. '_points' → logprob: -8.817320823669434
    6. '_
' → logprob: -8.817320823669434
    7. '_circle' → logprob: -8.942320823669434
    8. ' _' → logprob: -9.567320823669434
    9. ')_' → logprob: -9.692320823669434
    10. ''_' → logprob: -10.317320823669434

Token 1632: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.105846643447876
    2. '
' → logprob: -1.355846643447876
    3. '   ' → logprob: -2.355846643447876
    4. '.' → logprob: -2.730846643447876
    5. '       ' → logprob: -3.105846643447876
    6. ',' → logprob: -3.730846643447876
    7. '#' → logprob: -3.730846643447876
    8. '=' → logprob: -4.105846405029297
    9. '           ' → logprob: -4.230846405029297
    10. ']' → logprob: -4.480846405029297

Token 1633: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01750611513853073
    2. 'graph' → logprob: -5.017506122589111
    3. '           ' → logprob: -5.892506122589111
    4. 'if' → logprob: -6.142506122589111
    5. '
' → logprob: -7.017506122589111
    6. ' if' → logprob: -7.267506122589111
    7. 'dist' → logprob: -7.392506122589111
    8. '```' → logprob: -7.642506122589111
    9. 'else' → logprob: -7.767506122589111
    10. '   ' → logprob: -7.767506122589111

Token 1634: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04391399770975113
    2. 'graph' → logprob: -4.043913841247559
    3. '       ' → logprob: -4.293913841247559
    4. '#' (adapté à ' #') → logprob: -5.043913841247559
    5. '           ' → logprob: -5.918913841247559
    6. 'distance' → logprob: -7.168913841247559
    7. '   ' → logprob: -7.168913841247559
    8. 'd' → logprob: -8.043913841247559
    9. 'for' → logprob: -8.543913841247559
    10. 'print' → logprob: -8.668913841247559

Token 1635: ' If' (ID: 1843)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.023577604442834854
    2. '#' → logprob: -4.273577690124512
    3. 'graph' → logprob: -5.148577690124512
    4. 'visited' → logprob: -6.273577690124512
    5. 'start' → logprob: -7.398577690124512
    6. 'outside' → logprob: -8.398577690124512
    7. 'd' → logprob: -8.398577690124512
    8. 'distance' → logprob: -8.773577690124512
    9. 'queue' → logprob: -9.398577690124512
    10. 'for' → logprob: -9.398577690124512

Token 1636: ' no' (ID: 860)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.28796327114105225
    2. 'False' → logprob: -2.662963390350342
    3. 'start' → logprob: -2.787963390350342
    4. 'len' → logprob: -2.912963390350342
    5. ' end' → logprob: -3.287963390350342
    6. ' False' → logprob: -4.412963390350342
    7. ' start' → logprob: -5.162963390350342
    8. 'n' → logprob: -6.037963390350342
    9. ' len' → logprob: -6.287963390350342
    10. 'True' → logprob: -6.412963390350342

Token 1637: ' connection' (ID: 6703)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.9237400889396667
    2. 'graph' → logprob: -1.7987401485443115
    3. 'edges' → logprob: -2.1737401485443115
    4. ' circles' → logprob: -2.2987401485443115
    5. ' graph' → logprob: -2.7987401485443115
    6. ' edges' → logprob: -3.1737401485443115
    7. 'circle' → logprob: -3.5487401485443115
    8. 'start' → logprob: -3.6737401485443115
    9. 'neighbors' → logprob: -4.423739910125732
    10. ' start' → logprob: -4.423739910125732

Token 1638: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2602821588516235
    2. ':
' → logprob: -1.5102821588516235
    3. '=' → logprob: -1.8852821588516235
    4. '           ' → logprob: -2.010282039642334
    5. '               ' → logprob: -3.260282039642334
    6. '_to' → logprob: -3.260282039642334
    7. ' to' → logprob: -3.385282039642334
    8. 'to' → logprob: -4.010282039642334
    9. '{
' → logprob: -4.510282039642334
    10. ' =' → logprob: -4.635282039642334

Token 1639: ' no' (ID: 860)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006146111525595188
    2. ' print' → logprob: -5.25614595413208
    3. '#' → logprob: -7.13114595413208
    4. '           ' → logprob: -9.506146430969238
    5. '
' → logprob: -10.756146430969238
    6. '               ' → logprob: -11.881146430969238
    7. '```' → logprob: -12.631146430969238
    8. '       ' → logprob: -13.131146430969238
    9. ' #' → logprob: -14.256146430969238
    10. '   ' → logprob: -14.506146430969238

Token 1640: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -1.4575111865997314
    2. 'path' → logprob: -2.0825111865997314
    3. ' walls' → logprob: -2.5825111865997314
    4. '
' → logprob: -2.8325111865997314
    5. ' connection' → logprob: -3.0825111865997314
    6. ' wall' → logprob: -3.3325111865997314
    7. '       ' → logprob: -3.4575111865997314
    8. 'distance' → logprob: -3.4575111865997314
    9. ')' → logprob: -3.5825111865997314
    10. 'edges' → logprob: -3.7075111865997314

Token 1641: ' to' (ID: 316)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6136450171470642
    2. ':' → logprob: -0.9886450171470642
    3. '               ' → logprob: -3.488645076751709
    4. '           ' → logprob: -3.863645076751709
    5. '[
' → logprob: -5.113645076751709
    6. '=' → logprob: -5.488645076751709
    7. '   ' → logprob: -5.488645076751709
    8. '       ' → logprob: -5.863645076751709
    9. '[' → logprob: -6.113645076751709
    10. ')' → logprob: -6.238645076751709

Token 1642: ' reach' (ID: 7627)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10424244403839111
    2. 'cir' → logprob: -2.8542423248291016
    3. 'enter' → logprob: -4.729242324829102
    4. 'print' → logprob: -4.854242324829102
    5. 'reach' → logprob: -5.104242324829102
    6. ' end' → logprob: -5.354242324829102
    7. 'cross' → logprob: -5.854242324829102
    8. 'any' → logprob: -6.354242324829102
    9. ' circles' → logprob: -6.479242324829102
    10. 'them' → logprob: -6.604242324829102

Token 1643: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.6718615293502808
    2. 'cir' → logprob: -1.2968615293502808
    3. '           ' → logprob: -2.4218616485595703
    4. '.' → logprob: -3.6718616485595703
    5. '               ' → logprob: -4.17186164855957
    6. '.
' → logprob: -4.42186164855957
    7. 'to' → logprob: -4.79686164855957
    8. ' to' → logprob: -5.04686164855957
    9. '       ' → logprob: -5.04686164855957
    10. ':
' → logprob: -5.17186164855957

Token 1644: ' inside' (ID: 6772)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.3473397493362427
    2. '_nodes' → logprob: -1.4723397493362427
    3. ':' → logprob: -1.8473397493362427
    4. '           ' → logprob: -2.347339630126953
    5. '_' → logprob: -2.722339630126953
    6. '       ' → logprob: -2.847339630126953
    7. '_c' → logprob: -3.597339630126953
    8. '               ' → logprob: -3.722339630126953
    9. '.' → logprob: -4.347339630126953
    10. ')' → logprob: -4.472339630126953

Token 1645: ' circle' (ID: 22005)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4986250400543213
    2. ':' → logprob: -1.6236250400543213
    3. ':
' → logprob: -1.7486250400543213
    4. ')' → logprob: -1.9986250400543213
    5. '           ' → logprob: -1.9986250400543213
    6. '   ' → logprob: -3.6236250400543213
    7. '               ' → logprob: -4.248624801635742
    8. ')
' → logprob: -4.248624801635742
    9. '#' → logprob: -4.623624801635742
    10. '.' → logprob: -4.748624801635742

Token 1646: '?' (ID: 30)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34717291593551636
    2. '           ' → logprob: -2.597172975540161
    3. ')
' → logprob: -3.097172975540161
    4. '#' → logprob: -3.472172975540161
    5. '       ' → logprob: -3.472172975540161
    6. ':' → logprob: -3.597172975540161
    7. ':
' → logprob: -3.722172975540161
    8. ']' → logprob: -4.097172737121582
    9. ',' → logprob: -5.097172737121582
    10. '
' → logprob: -5.347172737121582

Token 1647: ' But' (ID: 3072)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.27998948097229
    2. '           ' → logprob: -1.40498948097229
    3. '#' → logprob: -1.52998948097229
    4. '       ' → logprob: -1.77998948097229
    5. '
' → logprob: -4.529989242553711
    6. ')
' → logprob: -4.529989242553711
    7. '            
' → logprob: -4.654989242553711
    8. '```' → logprob: -4.779989242553711
    9. ']' → logprob: -5.029989242553711
    10. '   ' → logprob: -5.279989242553711

Token 1648: ' can' (ID: 665)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.935034453868866
    2. 'graph' → logprob: -1.0600345134735107
    3. ' graph' → logprob: -1.9350345134735107
    4. ' continue' → logprob: -3.4350345134735107
    5. 'continue' → logprob: -3.4350345134735107
    6. '           ' → logprob: -3.5600345134735107
    7. ' #' → logprob: -5.685034275054932
    8. ' for' → logprob: -6.060034275054932
    9. ' distances' → logprob: -6.185034275054932
    10. 'for' → logprob: -6.310034275054932

Token 1649: ' go' (ID: 810)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8833030462265015
    2. ' continue' → logprob: -1.6333030462265015
    3. 'be' → logprob: -1.8833030462265015
    4. 'print' → logprob: -3.008303165435791
    5. ' be' → logprob: -3.258303165435791
    6. 'go' → logprob: -3.758303165435791
    7. ' move' → logprob: -3.883303165435791
    8. 'move' → logprob: -4.008303165435791
    9. ')' → logprob: -4.508303165435791
    10. ' go' → logprob: -4.633303165435791

Token 1650: ' outside' (ID: 7539)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.3346138000488281
    2. 'through' → logprob: -1.5846138000488281
    3. 'out' → logprob: -4.084613800048828
    4. 'without' → logprob: -4.334613800048828
    5. ' outside' → logprob: -4.459613800048828
    6. ' through' → logprob: -4.459613800048828
    7. 'around' → logprob: -4.709613800048828
    8. '       ' → logprob: -5.334613800048828
    9. '   ' → logprob: -6.334613800048828
    10. '           ' → logprob: -6.459613800048828

Token 1651: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04459063708782196
    2. '           ' → logprob: -3.669590711593628
    3. ')' → logprob: -5.044590473175049
    4. '   ' → logprob: -6.419590473175049
    5. ':' → logprob: -6.419590473175049
    6. ':
' → logprob: -6.669590473175049
    7. ',' → logprob: -6.919590473175049
    8. '.' → logprob: -7.044590473175049
    9. ')
' → logprob: -7.294590473175049
    10. '        
' → logprob: -7.419590473175049

Token 1652: ' No' (ID: 3004)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.369835615158081
    2. '           ' → logprob: -1.369835615158081
    3. '       ' → logprob: -1.619835615158081
    4. '#' → logprob: -1.619835615158081
    5. '```' → logprob: -4.24483585357666
    6. ')
' → logprob: -4.36983585357666
    7. ' if' → logprob: -4.61983585357666
    8. ',' → logprob: -4.99483585357666
    9. '            
' → logprob: -5.24483585357666
    10. 'n' → logprob: -5.49483585357666

Token 1653: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11045527458190918
    2. '           ' → logprob: -2.610455274581909
    3. '#' → logprob: -4.860455513000488
    4. 'if' → logprob: -5.235455513000488
    5. ' if' → logprob: -5.735455513000488
    6. 'else' → logprob: -5.860455513000488
    7. '
' → logprob: -6.110455513000488
    8. '   ' → logprob: -6.485455513000488
    9. ')' → logprob: -6.485455513000488
    10. '```' → logprob: -6.485455513000488

Token 1654: ' since' (ID: 3630)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28276321291923523
    2. '           ' → logprob: -2.0327632427215576
    3. 'graph' → logprob: -3.7827632427215576
    4. 'print' → logprob: -4.1577630043029785
    5. '```' → logprob: -4.1577630043029785
    6. ' continue' → logprob: -4.6577630043029785
    7. 'continue' → logprob: -4.9077630043029785
    8. ' so' → logprob: -5.1577630043029785
    9. '       ' → logprob: -5.1577630043029785
    10. '               ' → logprob: -5.4077630043029785

Token 1655: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.2611803710460663
    2. ' end' → logprob: -2.3861804008483887
    3. '#' → logprob: -2.8861804008483887
    4. 'cir' → logprob: -3.0111804008483887
    5. 'the' → logprob: -3.8861804008483887
    6. 'start' → logprob: -5.636180400848389
    7. ' the' → logprob: -5.636180400848389
    8. ' circles' → logprob: -7.261180400848389
    9. 'they' → logprob: -7.636180400848389
    10. ' start' → logprob: -7.761180400848389

Token 1656: ' inside' (ID: 6772)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.006251441780477762
    2. '_' → logprob: -5.381251335144043
    3. ')' → logprob: -7.756251335144043
    4. ')_' → logprob: -7.881251335144043
    5. ' _' → logprob: -8.131251335144043
    6. '_s' → logprob: -8.881251335144043
    7. '_points' → logprob: -9.506251335144043
    8. '_
' → logprob: -10.006251335144043
    9. '```' → logprob: -10.006251335144043
    10. ''_' → logprob: -10.256251335144043

Token 1657: ' circle' (ID: 22005)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7878918051719666
    2. '       ' → logprob: -1.0378918647766113
    3. '           ' → logprob: -3.5378918647766113
    4. '   ' → logprob: -3.6628918647766113
    5. ')
' → logprob: -3.6628918647766113
    6. '_' → logprob: -4.037891864776611
    7. ':' → logprob: -4.287891864776611
    8. ':
' → logprob: -4.287891864776611
    9. 'else' → logprob: -4.912891864776611
    10. ']' → logprob: -5.037891864776611

Token 1658: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8098759055137634
    2. '       ' → logprob: -1.5598759651184082
    3. ')
' → logprob: -2.434875965118408
    4. ':
' → logprob: -2.684875965118408
    5. ']' → logprob: -3.059875965118408
    6. ':' → logprob: -3.309875965118408
    7. '           ' → logprob: -3.434875965118408
    8. '   ' → logprob: -4.184875965118408
    9. '
' → logprob: -4.184875965118408
    10. 'graph' → logprob: -4.559875965118408

Token 1659: ' rat' (ID: 8908)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7043440937995911
    2. '           ' → logprob: -1.8293440341949463
    3. ' so' → logprob: -1.8293440341949463
    4. ' graph' → logprob: -3.0793440341949463
    5. 'graph' → logprob: -3.2043440341949463
    6. 'print' → logprob: -3.4543440341949463
    7. ' print' → logprob: -4.454344272613525
    8. ' #' → logprob: -4.579344272613525
    9. '               ' → logprob: -5.079344272613525
    10. ' continue' → logprob: -5.454344272613525

Token 1660: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.5821303129196167
    2. 'must' → logprob: -0.8321303129196167
    3. '   ' → logprob: -6.207130432128906
    4. ' needs' → logprob: -6.582130432128906
    5. ')' → logprob: -7.082130432128906
    6. 'needs' → logprob: -7.457130432128906
    7. '           ' → logprob: -8.457130432128906
    8. '       ' → logprob: -8.957130432128906
    9. '```' → logprob: -9.207130432128906
    10. ' ' → logprob: -9.207130432128906

Token 1661: ' climb' (ID: 27049)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.5239961743354797
    2. 'cross' → logprob: -0.8989961743354797
    3. 'pass' → logprob: -8.398996353149414
    4. 'go' → logprob: -8.523996353149414
    5. ' cross' → logprob: -8.648996353149414
    6. ' climb' → logprob: -9.148996353149414
    7. 'enter' → logprob: -9.148996353149414
    8. '
' → logprob: -10.898996353149414
    9. 'print' → logprob: -12.273996353149414
    10. 'jump' → logprob: -12.398996353149414

Token 1662: ' walls' (ID: 20562)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.603886604309082
    2. '1' → logprob: -1.728886604309082
    3. '           ' → logprob: -1.978886604309082
    4. ' over' → logprob: -2.228886604309082
    5. ' the' → logprob: -2.853886604309082
    6. '       ' → logprob: -3.353886604309082
    7. ' a' → logprob: -3.353886604309082
    8. ')' → logprob: -3.728886604309082
    9. ' one' → logprob: -3.728886604309082
    10. 'walls' → logprob: -3.728886604309082

Token 1663: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22475405037403107
    2. '           ' → logprob: -2.0997540950775146
    3. ')' → logprob: -3.2247540950775146
    4. ':
' → logprob: -4.7247538566589355
    5. '   ' → logprob: -5.0997538566589355
    6. ')
' → logprob: -5.0997538566589355
    7. ':' → logprob: -5.5997538566589355
    8. '               ' → logprob: -5.9747538566589355
    9. ']' → logprob: -6.0997538566589355
    10. '
' → logprob: -6.0997538566589355

Token 1664: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034238796681165695
    2. '           ' → logprob: -4.034238815307617
    3. 'if' → logprob: -5.284238815307617
    4. 'else' → logprob: -5.284238815307617
    5. 'graph' → logprob: -6.409238815307617
    6. 'for' → logprob: -6.784238815307617
    7. '#' → logprob: -7.284238815307617
    8. ' if' → logprob: -7.284238815307617
    9. '   ' → logprob: -7.534238815307617
    10. ' else' → logprob: -8.409238815307617

Token 1665: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.29939359426498413
    2. 'graph' → logprob: -1.924393653869629
    3. '       ' → logprob: -2.674393653869629
    4. '#' (adapté à ' #') → logprob: -3.674393653869629
    5. '           ' → logprob: -4.674393653869629
    6. 'if' → logprob: -5.299393653869629
    7. 'distance' → logprob: -6.924393653869629
    8. '   ' → logprob: -7.299393653869629
    9. 'for' → logprob: -7.549393653869629
    10. '
' → logprob: -7.549393653869629

Token 1666: ' So' (ID: 2632)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.025480646640062332
    2. 'graph' → logprob: -3.9004807472229004
    3. '#' → logprob: -6.2754807472229
    4. '       ' → logprob: -7.0254807472229
    5. 'd' → logprob: -7.2754807472229
    6. 'if' → logprob: -7.9004807472229
    7. 'distance' → logprob: -8.400480270385742
    8. 'visited' → logprob: -8.400480270385742
    9. 'for' → logprob: -8.650480270385742
    10. '           ' → logprob: -8.650480270385742

Token 1667: ' from' (ID: 591)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.003434834536164999
    2. '#' → logprob: -6.503434658050537
    3. 'graph' → logprob: -6.753434658050537
    4. 'if' → logprob: -8.003435134887695
    5. 'for' → logprob: -8.878435134887695
    6. 'd' → logprob: -9.503435134887695
    7. 'start' → logprob: -9.503435134887695
    8. ' dist' → logprob: -10.003435134887695
    9. 'distance' → logprob: -11.003435134887695
    10. 'visited' → logprob: -11.003435134887695

Token 1668: ' outside' (ID: 7539)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -1.1110841035842896
    2. 'cir' → logprob: -1.8610841035842896
    3. 'end' → logprob: -2.361083984375
    4. 'graph' → logprob: -2.361083984375
    5. 'start' → logprob: -2.361083984375
    6. 'here' → logprob: -2.361083984375
    7. 'outside' → logprob: -3.361083984375
    8. ' here' → logprob: -3.486083984375
    9. 'point' → logprob: -4.236083984375
    10. 'the' → logprob: -4.486083984375

Token 1669: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6715955138206482
    2. '_graph' → logprob: -1.671595573425293
    3. '_nodes' → logprob: -2.796595573425293
    4. '_c' → logprob: -2.796595573425293
    5. ':' → logprob: -3.296595573425293
    6. 'graph' → logprob: -4.046595573425293
    7. '       ' → logprob: -4.171595573425293
    8. ':
' → logprob: -4.421595573425293
    9. '_dist' → logprob: -4.421595573425293
    10. '_
' → logprob: -4.546595573425293

Token 1670: '0' (ID: 15)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7262895107269287
    2. '_to' → logprob: -1.6012895107269287
    3. 'to' → logprob: -2.1012895107269287
    4. ',' → logprob: -3.1012895107269287
    5. ':' → logprob: -3.3512895107269287
    6. ')' → logprob: -3.4762895107269287
    7. '_' → logprob: -4.101289749145508
    8. '_c' → logprob: -4.351289749145508
    9. '_nodes' → logprob: -4.976289749145508
    10. '.' → logprob: -4.976289749145508

Token 1671: ' jumps' (ID: 65613)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1672: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1673: ' to' (ID: 316)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.31874561309814453
    2. 'print' → logprob: -1.6937456130981445
    3. ' so' → logprob: -3.6937456130981445
    4. 'for' → logprob: -4.4437456130981445
    5. '
' → logprob: -4.9437456130981445
    6. ' print' → logprob: -5.1937456130981445
    7. 'so' → logprob: -5.4437456130981445
    8. 'but' → logprob: -5.5687456130981445
    9. ' but' → logprob: -5.6937456130981445
    10. 'the' → logprob: -5.9437456130981445

Token 1674: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.34773194789886475
    2. 'cir' → logprob: -2.2227320671081543
    3. 'any' → logprob: -2.5977320671081543
    4. 'min' → logprob: -2.8477320671081543
    5. 'all' → logprob: -4.347732067108154
    6. 'each' → logprob: -4.472732067108154
    7. 'the' → logprob: -4.472732067108154
    8. ' end' → logprob: -5.722732067108154
    9. 'start' → logprob: -5.972732067108154
    10. 'enter' → logprob: -6.097732067108154

Token 1675: ' circle' (ID: 22005)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0003550079127307981
    2. '_' → logprob: -8.500354766845703
    3. '_s' → logprob: -9.750354766845703
    4. ')' → logprob: -11.125354766845703
    5. '_circle' → logprob: -11.125354766845703
    6. ')_' → logprob: -11.250354766845703
    7. ''_' → logprob: -11.500354766845703
    8. '_points' → logprob: -11.500354766845703
    9. '_nodes' → logprob: -11.750354766845703
    10. ' _' → logprob: -12.000354766845703

Token 1676: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1354645490646362
    2. ')' → logprob: -1.3854645490646362
    3. ',' → logprob: -2.510464668273926
    4. ':
' → logprob: -2.635464668273926
    5. '.' → logprob: -2.760464668273926
    6. '_c' → logprob: -3.510464668273926
    7. 's' → logprob: -3.885464668273926
    8. '=' → logprob: -4.010464668273926
    9. '_' → logprob: -4.260464668273926
    10. '_nodes' → logprob: -4.510464668273926

Token 1677: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.395810067653656
    2. '1' → logprob: -1.3958101272583008
    3. 'print' → logprob: -2.645810127258301
    4. 'dist' → logprob: -5.645810127258301
    5. 'math' → logprob: -6.270810127258301
    6. 'r' → logprob: -7.645810127258301
    7. '0' → logprob: -7.770810127258301
    8. 'float' → logprob: -8.1458101272583
    9. 'max' → logprob: -8.2708101272583
    10. ' min' → logprob: -8.2708101272583

Token 1678: ' jumps' (ID: 65613)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.3942108154296875
    2. ' distance' → logprob: -2.1442108154296875
    3. '_distance' → logprob: -2.1442108154296875
    4. 'dist' → logprob: -3.6442108154296875
    5. ' _' → logprob: -4.8942108154296875
    6. '_dist' → logprob: -5.1442108154296875
    7. '_' → logprob: -5.1442108154296875
    8. '```' → logprob: -5.5192108154296875
    9. '_wall' → logprob: -5.6442108154296875
    10. ' dist' → logprob: -5.7692108154296875

Token 1679: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.6517668962478638
    2. ')' → logprob: -1.7767668962478638
    3. '       ' → logprob: -2.151766777038574
    4. '=' → logprob: -2.526766777038574
    5. ' =' → logprob: -2.526766777038574
    6. 'graph' → logprob: -2.651766777038574
    7. ':' → logprob: -2.776766777038574
    8. '   ' → logprob: -3.151766777038574
    9. '```' → logprob: -3.776766777038574
    10. '_graph' → logprob: -3.776766777038574

Token 1680: ' the' (ID: 290)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3200135827064514
    2. '1' → logprob: -1.3200135231018066
    3. '0' → logprob: -5.445013523101807
    4. 'math' → logprob: -6.445013523101807
    5. 'float' → logprob: -7.945013523101807
    6. 'dist' → logprob: -8.320013999938965
    7. 'len' → logprob: -9.445013999938965
    8. ' min' → logprob: -9.820013999938965
    9. '
' → logprob: -11.070013999938965
    10. '(min' → logprob: -11.445013999938965

Token 1681: ' number' (ID: 2086)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.010455193929374218
    2. 'dist' → logprob: -5.260455131530762
    3. '1' → logprob: -5.385455131530762
    4. 'minimum' → logprob: -8.760455131530762
    5. ' min' → logprob: -9.135455131530762
    6. 'distance' → logprob: -9.260455131530762
    7. 'math' → logprob: -9.385455131530762
    8. 'minimal' → logprob: -9.760455131530762
    9. '(min' → logprob: -10.385455131530762
    10. '0' → logprob: -10.510455131530762

Token 1682: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.1394437551498413
    2. 'of' → logprob: -1.8894437551498413
    3. '1' → logprob: -2.264443874359131
    4. ' ' → logprob: -2.514443874359131
    5. '_of' → logprob: -2.514443874359131
    6. '+' → logprob: -3.014443874359131
    7. '0' → logprob: -3.389443874359131
    8. ' +' → logprob: -3.889443874359131
    9. '       ' → logprob: -4.139443874359131
    10. '           ' → logprob: -4.139443874359131

Token 1683: ' walls' (ID: 20562)
  Prédit: 'walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walls' → logprob: -0.4578099548816681
    2. 'cir' → logprob: -1.4578099250793457
    3. '1' → logprob: -2.9578099250793457
    4. ' walls' → logprob: -3.5828099250793457
    5. ' circles' → logprob: -4.207809925079346
    6. ' ' → logprob: -4.707809925079346
    7. 'steps' → logprob: -5.332809925079346
    8. 'spaces' → logprob: -5.957809925079346
    9. 'circle' → logprob: -6.207809925079346
    10. 'r' → logprob: -6.207809925079346

Token 1684: ' corresponding' (ID: 21824)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39531582593917847
    2. ']' → logprob: -2.7703158855438232
    3. ')
' → logprob: -3.1453158855438232
    4. '+' → logprob: -3.3953158855438232
    5. '.' → logprob: -3.6453158855438232
    6. ':' → logprob: -3.7703158855438232
    7. '=' → logprob: -3.7703158855438232
    8. '       ' → logprob: -4.020315647125244
    9. '   ' → logprob: -4.395315647125244
    10. ':
' → logprob: -4.645315647125244

Token 1685: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6634380221366882
    2. ' to' → logprob: -0.9134380221366882
    3. '_to' → logprob: -3.038438081741333
    4. '=' → logprob: -4.288437843322754
    5. '+' → logprob: -4.788437843322754
    6. ')' → logprob: -5.788437843322754
    7. '   ' → logprob: -6.038437843322754
    8. '               ' → logprob: -6.538437843322754
    9. '           ' → logprob: -6.663437843322754
    10. ' +' → logprob: -7.163437843322754

Token 1686: ' shortest' (ID: 70564)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3256383538246155
    2. 'the' → logprob: -2.2006382942199707
    3. 'end' → logprob: -3.2006382942199707
    4. ' min' → logprob: -3.7006382942199707
    5. 'r' → logprob: -3.8256382942199707
    6. '1' → logprob: -3.9506382942199707
    7. 'len' → logprob: -4.575638294219971
    8. 'distance' → logprob: -4.825638294219971
    9. 'dist' → logprob: -4.825638294219971
    10. 'their' → logprob: -5.075638294219971

Token 1687: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -1.2101892232894897
    2. ' path' → logprob: -1.3351892232894897
    3. 'path' → logprob: -1.7101892232894897
    4. 'distance' → logprob: -2.8351893424987793
    5. '_distance' → logprob: -3.2101893424987793
    6. '```' → logprob: -3.8351893424987793
    7. '
' → logprob: -3.9601893424987793
    8. '_c' → logprob: -4.210189342498779
    9. '_' → logprob: -4.335189342498779
    10. ' distance' → logprob: -4.460189342498779

Token 1688: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8594608902931213
    2. ' =' → logprob: -1.3594608306884766
    3. 'from' → logprob: -2.9844608306884766
    4. '   ' → logprob: -2.9844608306884766
    5. ':' → logprob: -3.2344608306884766
    6. ')' → logprob: -3.6094608306884766
    7. '.' → logprob: -3.7344608306884766
    8. '_to' → logprob: -4.234460830688477
    9. '_graph' → logprob: -4.359460830688477
    10. 'graph' → logprob: -4.484460830688477

Token 1689: ' outside' (ID: 7539)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.11286883801221848
    2. '-' → logprob: -3.4878687858581543
    3. 'start' → logprob: -3.8628687858581543
    4. 'outside' → logprob: -3.8628687858581543
    5. 'any' → logprob: -4.862868785858154
    6. ' end' → logprob: -5.237868785858154
    7. 'the' → logprob: -5.362868785858154
    8. 'None' → logprob: -5.487868785858154
    9. 'n' → logprob: -5.612868785858154
    10. 'cir' → logprob: -5.862868785858154

Token 1690: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8738241791725159
    2. ' to' → logprob: -2.248824119567871
    3. '_to' → logprob: -2.498824119567871
    4. '_c' → logprob: -2.498824119567871
    5. '_nodes' → logprob: -2.998824119567871
    6. '_' → logprob: -3.123824119567871
    7. '_graph' → logprob: -3.123824119567871
    8. ' =' → logprob: -3.248824119567871
    9. '=' → logprob: -3.873824119567871
    10. '   ' → logprob: -3.873824119567871

Token 1691: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.11945825070142746
    2. ' end' → logprob: -3.2444581985473633
    3. 'any' → logprob: -3.3694581985473633
    4. 'cir' → logprob: -3.8694581985473633
    5. 'the' → logprob: -4.744458198547363
    6. ' any' → logprob: -5.369458198547363
    7. ' the' → logprob: -6.619458198547363
    8. 'those' → logprob: -6.619458198547363
    9. ' circles' → logprob: -7.494458198547363
    10. 'them' → logprob: -8.119458198547363

Token 1692: ' circle' (ID: 22005)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.3721637725830078
    2. '_nodes' → logprob: -1.3721637725830078
    3. ')' → logprob: -3.497163772583008
    4. '_' → logprob: -3.872163772583008
    5. ':' → logprob: -7.247163772583008
    6. '_node' → logprob: -7.372163772583008
    7. '   ' → logprob: -7.872163772583008
    8. '_graph' → logprob: -7.997163772583008
    9. '_s' → logprob: -7.997163772583008
    10. ')_' → logprob: -8.122163772583008

Token 1693: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6704742312431335
    2. ':' → logprob: -1.1704742908477783
    3. '   ' → logprob: -3.5454742908477783
    4. ']' → logprob: -3.7954742908477783
    5. '=' → logprob: -4.045474052429199
    6. '.' → logprob: -4.045474052429199
    7. '
' → logprob: -4.045474052429199
    8. ':
' → logprob: -4.295474052429199
    9. ',' → logprob: -4.795474052429199
    10. '       ' → logprob: -5.170474052429199

Token 1694: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062170688062906265
    2. '           ' → logprob: -3.4371707439422607
    3. ')' → logprob: -4.187170505523682
    4. '#' → logprob: -5.687170505523682
    5. '   ' → logprob: -5.937170505523682
    6. '
' → logprob: -6.187170505523682
    7. '        
' → logprob: -6.562170505523682
    8. '<|end|>' → logprob: -7.062170505523682
    9. 'else' → logprob: -8.31217098236084
    10. ')
' → logprob: -8.31217098236084

Token 1695: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.05847493186593056
    2. 'dist' → logprob: -3.5584750175476074
    3. '#' (adapté à ' #') → logprob: -4.433475017547607
    4. '       ' → logprob: -4.433475017547607
    5. '           ' → logprob: -6.308475017547607
    6. '   ' → logprob: -7.558475017547607
    7. 'if' → logprob: -7.558475017547607
    8. ' graph' → logprob: -7.933475017547607
    9. 'for' → logprob: -7.933475017547607
    10. 'distance' → logprob: -8.18347454071045

Token 1696: ' Because' (ID: 13602)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.45179682970046997
    2. 'dist' → logprob: -1.0767967700958252
    3. '#' → logprob: -4.451797008514404
    4. 'visited' → logprob: -5.701797008514404
    5. 'if' → logprob: -5.826797008514404
    6. 'outside' → logprob: -6.576797008514404
    7. 'start' → logprob: -7.326797008514404
    8. '       ' → logprob: -7.451797008514404
    9. 'for' → logprob: -7.826797008514404
    10. 'queue' → logprob: -7.951797008514404

Token 1697: ' outside' (ID: 7539)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7086189985275269
    2. ' start' → logprob: -1.7086189985275269
    3. 'graph' → logprob: -1.8336189985275269
    4. '#' → logprob: -3.2086191177368164
    5. 'n' → logprob: -3.5836191177368164
    6. ' graph' → logprob: -4.083619117736816
    7. ':' → logprob: -4.333619117736816
    8. ' n' → logprob: -5.083619117736816
    9. '   ' → logprob: -5.208619117736816
    10. 'outside' → logprob: -5.333619117736816

Token 1698: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3119170367717743
    2. '<|end|>' → logprob: -2.3119170665740967
    3. '<|end|>' → logprob: -2.9369170665740967
    4. '_' → logprob: -3.0619170665740967
    5. '_c' → logprob: -3.3119170665740967
    6. ':' → logprob: -5.061916828155518
    7. '_nodes' → logprob: -5.061916828155518
    8. '):' → logprob: -5.936916828155518
    9. ',' → logprob: -6.311916828155518
    10. ' )' → logprob: -6.561916828155518

Token 1699: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2938852608203888
    2. 'connected' → logprob: -2.2938852310180664
    3. 'represented' → logprob: -3.2938852310180664
    4. 'dis' → logprob: -3.4188852310180664
    5. '0' → logprob: -3.5438852310180664
    6. ' not' → logprob: -3.7938852310180664
    7. 'a' → logprob: -5.168885231018066
    8. 'treated' → logprob: -5.418885231018066
    9. 'outside' → logprob: -5.418885231018066
    10. '-' → logprob: -5.543885231018066

Token 1700: ' connected' (ID: 12079)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.024345189332962036
    2. 'represented' → logprob: -4.524345397949219
    3. ' connected' → logprob: -4.774345397949219
    4. 'in' → logprob: -6.024345397949219
    5. 'a' → logprob: -6.649345397949219
    6. 'explicit' → logprob: -8.274345397949219
    7. 'part' → logprob: -8.399345397949219
    8. 'included' → logprob: -9.149345397949219
    9. ' represented' → logprob: -9.399345397949219
    10. ' in' → logprob: -9.524345397949219

Token 1701: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8210974931716919
    2. ')' → logprob: -1.446097493171692
    3. ',' → logprob: -2.9460973739624023
    4. '.' → logprob: -3.1960973739624023
    5. '<|end|>' → logprob: -3.1960973739624023
    6. ']' → logprob: -3.6960973739624023
    7. '```' → logprob: -3.6960973739624023
    8. '#' → logprob: -3.6960973739624023
    9. ' to' → logprob: -4.196097373962402
    10. '_' → logprob: -4.321097373962402

Token 1702: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.0015078396536409855
    2. 'anything' → logprob: -7.251507759094238
    3. ' any' → logprob: -7.501507759094238
    4. 'cir' → logprob: -8.376507759094238
    5. 'all' → logprob: -11.626507759094238
    6. ' anything' → logprob: -13.001507759094238
    7. 'the' → logprob: -13.751507759094238
    8. 'circle' → logprob: -14.501507759094238
    9. ' circles' → logprob: -14.501507759094238
    10. '#' → logprob: -14.501507759094238

Token 1703: ' circle' (ID: 22005)
  Prédit: 'circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'circle' → logprob: -0.7021370530128479
    2. '_c' → logprob: -2.202136993408203
    3. ' circle' → logprob: -2.202136993408203
    4. 'cir' → logprob: -2.202136993408203
    5. '_circle' → logprob: -2.577136993408203
    6. ')' → logprob: -3.702136993408203
    7. ' node' → logprob: -3.702136993408203
    8. 'node' → logprob: -3.827136993408203
    9. '_' → logprob: -5.327136993408203
    10. '_nodes' → logprob: -5.577136993408203

Token 1704: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2180484533309937
    2. ':' → logprob: -1.5930484533309937
    3. '           ' → logprob: -1.9680484533309937
    4. '       ' → logprob: -2.218048572540283
    5. ']' → logprob: -2.968048572540283
    6. '#' → logprob: -3.218048572540283
    7. ',' → logprob: -3.593048572540283
    8. '.' → logprob: -3.593048572540283
    9. ':
' → logprob: -3.593048572540283
    10. '   ' → logprob: -4.093048572540283

Token 1705: ' rat' (ID: 8908)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17235563695430756
    2. '#' → logprob: -2.0473556518554688
    3. '           ' → logprob: -4.422355651855469
    4. ')' → logprob: -5.297355651855469
    5. '       ' → logprob: -5.422355651855469
    6. 'continue' → logprob: -6.297355651855469
    7. ' print' → logprob: -6.797355651855469
    8. '   ' → logprob: -7.047355651855469
    9. 'for' → logprob: -7.047355651855469
    10. '
' → logprob: -7.422355651855469

Token 1706: ' can' (ID: 665)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.3934392035007477
    2. 'must' → logprob: -2.018439292907715
    3. ' cannot' → logprob: -2.518439292907715
    4. ' can' → logprob: -3.393439292907715
    5. ')' → logprob: -3.893439292907715
    6. ' can't' → logprob: -4.143439292907715
    7. ' ' → logprob: -4.518439292907715
    8. 'cannot' → logprob: -4.518439292907715
    9. ' )' → logprob: -5.643439292907715
    10. ' needs' → logprob: -5.893439292907715

Token 1707: ' only' (ID: 1606)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'go' → logprob: -1.0453367233276367
    2. 'move' → logprob: -1.2953367233276367
    3. 'cross' → logprob: -1.2953367233276367
    4. 'print' → logprob: -3.1703367233276367
    5. 'only' → logprob: -4.295336723327637
    6. 'not' → logprob: -4.670336723327637
    7. 'reach' → logprob: -4.795336723327637
    8. 'pass' → logprob: -4.920336723327637
    9. 'cl' → logprob: -5.420336723327637
    10. ' cross' → logprob: -5.670336723327637

Token 1708: ' climb' (ID: 27049)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.31045591831207275
    2. 'cross' → logprob: -2.060455799102783
    3. 'move' → logprob: -2.560455799102783
    4. 'reach' → logprob: -3.935455799102783
    5. 'pass' → logprob: -4.435455799102783
    6. 'cl' → logprob: -4.435455799102783
    7. 'print' → logprob: -5.060455799102783
    8. 'try' → logprob: -5.935455799102783
    9. '0' → logprob: -6.185455799102783
    10. 'walk' → logprob: -6.435455799102783

Token 1709: ' walls' (ID: 20562)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -1.259782314300537
    2. 'over' → logprob: -1.759782314300537
    3. 'cir' → logprob: -1.884782314300537
    4. ' any' → logprob: -2.884782314300537
    5. 'through' → logprob: -2.884782314300537
    6. 'walls' → logprob: -3.009782314300537
    7. ' over' → logprob: -3.134782314300537
    8. 'the' → logprob: -3.134782314300537
    9. '0' → logprob: -4.259782314300537
    10. ' the' → logprob: -4.384782314300537

Token 1710: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4084333181381226
    2. '   ' → logprob: -1.5334333181381226
    3. '       ' → logprob: -2.158433437347412
    4. '.' → logprob: -2.283433437347412
    5. ':' → logprob: -2.783433437347412
    6. '           ' → logprob: -2.908433437347412
    7. '
' → logprob: -3.408433437347412
    8. ',' → logprob: -3.658433437347412
    9. '<|end|>' → logprob: -3.658433437347412
    10. '```' → logprob: -3.783433437347412

Token 1711: ' path' (ID: 3104)
  Prédit: 'foot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'foot' → logprob: -0.879020631313324
    2. 'the' → logprob: -1.2540206909179688
    3. 'cir' → logprob: -2.1290206909179688
    4. 'circle' → logprob: -3.0040206909179688
    5. 'enter' → logprob: -3.3790206909179688
    6. 'path' → logprob: -4.004020690917969
    7. 'end' → logprob: -4.254020690917969
    8. 'their' → logprob: -4.254020690917969
    9. ' the' → logprob: -4.504020690917969
    10. ' foot' → logprob: -4.879020690917969

Token 1712: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1584973335266113
    2. '.' → logprob: -1.6584973335266113
    3. ',' → logprob: -2.4084973335266113
    4. ':' → logprob: -2.4084973335266113
    5. '   ' → logprob: -2.7834973335266113
    6. '       ' → logprob: -2.7834973335266113
    7. '           ' → logprob: -2.9084973335266113
    8. ']' → logprob: -3.5334973335266113
    9. '```' → logprob: -3.6584973335266113
    10. '
' → logprob: -4.158497333526611

Token 1713: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.03252113237977028
    2. 'enter' → logprob: -4.0325212478637695
    3. ' end' → logprob: -4.7825212478637695
    4. 'the' → logprob: -6.1575212478637695
    5. 'reach' → logprob: -6.9075212478637695
    6. 'inside' → logprob: -7.6575212478637695
    7. ' enter' → logprob: -7.7825212478637695
    8. 'outside' → logprob: -8.15752124786377
    9. 'cir' → logprob: -8.28252124786377
    10. 'those' → logprob: -8.28252124786377

Token 1714: '.
' (ID: 558)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.5890897512435913
    2. '       ' → logprob: -1.4640897512435913
    3. ')' → logprob: -2.714089870452881
    4. '           ' → logprob: -2.839089870452881
    5. '_' → logprob: -3.839089870452881
    6. '_nodes' → logprob: -3.964089870452881
    7. '   ' → logprob: -4.089089870452881
    8. '
' → logprob: -4.839089870452881
    9. ')
' → logprob: -5.964089870452881
    10. '.' → logprob: -5.964089870452881

Token 1715: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04377355799078941
    2. ')' → logprob: -4.168773651123047
    3. '           ' → logprob: -4.668773651123047
    4. '   ' → logprob: -4.793773651123047
    5. '
' → logprob: -6.668773651123047
    6. '<|end|>' → logprob: -6.668773651123047
    7. '        
' → logprob: -6.793773651123047
    8. '#' → logprob: -7.168773651123047
    9. '```' → logprob: -7.168773651123047
    10. ',' → logprob: -7.418773651123047

Token 1716: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13297085464000702
    2. '           ' → logprob: -2.8829708099365234
    3. '#' (adapté à ' #') → logprob: -3.7579708099365234
    4. 'continue' → logprob: -4.132970809936523
    5. 'graph' → logprob: -4.507970809936523
    6. ')' → logprob: -5.382970809936523
    7. 'print' → logprob: -5.632970809936523
    8. '```' → logprob: -6.257970809936523
    9. 'if' → logprob: -6.632970809936523
    10. 'for' → logprob: -6.882970809936523

Token 1717: ' So' (ID: 2632)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9874120354652405
    2. '       ' → logprob: -1.2374119758605957
    3. '#' → logprob: -1.8624119758605957
    4. 'for' → logprob: -2.9874119758605957
    5. 'print' → logprob: -3.2374119758605957
    6. '           ' → logprob: -3.4874119758605957
    7. 'if' → logprob: -3.8624119758605957
    8. '0' → logprob: -3.9874119758605957
    9. 'else' → logprob: -5.112411975860596
    10. 'continue' → logprob: -5.612411975860596

Token 1718: ' check' (ID: 2371)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4036460816860199
    2. 'dist' → logprob: -1.2786461114883423
    3. '#' → logprob: -3.1536459922790527
    4. 'for' → logprob: -5.653645992279053
    5. 'distance' → logprob: -6.278645992279053
    6. '           ' → logprob: -6.778645992279053
    7. 'd' → logprob: -7.028645992279053
    8. 'if' → logprob: -7.528645992279053
    9. '   ' → logprob: -7.528645992279053
    10. 'graph' → logprob: -7.653645992279053

Token 1719: ' if' (ID: 538)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5478491187095642
    2. 'dist' → logprob: -1.172849178314209
    3. 'if' → logprob: -2.547849178314209
    4. 'for' → logprob: -4.422849178314209
    5. '   ' → logprob: -4.922849178314209
    6. '       ' → logprob: -5.672849178314209
    7. 'end' → logprob: -5.797849178314209
    8. 'cir' → logprob: -6.547849178314209
    9. '#' → logprob: -6.672849178314209
    10. 'distance' → logprob: -7.047849178314209

Token 1720: ' any' (ID: 1062)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0898377001285553
    2. 'len' → logprob: -2.8398377895355225
    3. 'any' → logprob: -4.339837551116943
    4. 'start' → logprob: -4.589837551116943
    5. ' end' → logprob: -6.589837551116943
    6. 'cir' → logprob: -7.214837551116943
    7. '0' → logprob: -7.714837551116943
    8. ' any' → logprob: -7.714837551116943
    9. 'dist' → logprob: -8.339838027954102
    10. ' len' → logprob: -8.464838027954102

Token 1721: ' circle' (ID: 22005)
  Prédit: 'circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'circle' → logprob: -0.28632721304893494
    2. 'c' → logprob: -2.2863271236419678
    3. 'end' → logprob: -2.2863271236419678
    4. 'cir' → logprob: -3.6613271236419678
    5. 'start' → logprob: -5.036327362060547
    6. ')' → logprob: -5.536327362060547
    7. ' circle' → logprob: -5.786327362060547
    8. 'len' → logprob: -6.411327362060547
    9. 'any' → logprob: -6.786327362060547
    10. 'i' → logprob: -7.536327362060547

Token 1722: ' contains' (ID: 8895)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0801860094070435
    2. ' in' → logprob: -1.7051860094070435
    3. 'in' → logprob: -1.9551860094070435
    4. '_cont' → logprob: -2.580185890197754
    5. '_touch' → logprob: -3.080185890197754
    6. 'contains' → logprob: -3.330185890197754
    7. '_contains' → logprob: -3.330185890197754
    8. 'that' → logprob: -3.705185890197754
    9. ' that' → logprob: -3.830185890197754
    10. ' contains' → logprob: -4.580185890197754

Token 1723: ' end' (ID: 1268)
  Prédit: 'xt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.5539424419403076
    2. 'end' → logprob: -0.9289424419403076
    3. 'start' → logprob: -4.053942680358887
    4. ' end' → logprob: -4.803942680358887
    5. ' xt' → logprob: -6.178942680358887
    6. 'the' → logprob: -6.803942680358887
    7. 'yt' → logprob: -7.928942680358887
    8. ' start' → logprob: -8.303942680358887
    9. ' the' → logprob: -8.428942680358887
    10. '   ' → logprob: -9.178942680358887

Token 1724: ';' (ID: 26)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46895819902420044
    2. ':
' → logprob: -2.2189581394195557
    3. ')
' → logprob: -2.5939581394195557
    4. ':' → logprob: -3.0939581394195557
    5. '       ' → logprob: -3.0939581394195557
    6. '
' → logprob: -3.4689581394195557
    7. '           ' → logprob: -3.8439581394195557
    8. '   ' → logprob: -4.718958377838135
    9. '.' → logprob: -5.218958377838135
    10. '_c' → logprob: -5.593958377838135

Token 1725: ' minimal' (ID: 19957)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9015816450119019
    2. ' if' → logprob: -1.2765816450119019
    3. '       ' → logprob: -1.5265816450119019
    4. '#' → logprob: -3.2765817642211914
    5. '           ' → logprob: -3.4015817642211914
    6. 'for' → logprob: -4.901581764221191
    7. 'print' → logprob: -5.151581764221191
    8. ' for' → logprob: -5.651581764221191
    9. 'continue' → logprob: -6.151581764221191
    10. ')' → logprob: -7.026581764221191

Token 1726: ' walls' (ID: 20562)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.1314865350723267
    2. '_' → logprob: -1.6314865350723267
    3. '_distance' → logprob: -1.8814865350723267
    4. '_c' → logprob: -2.006486415863037
    5. '_wall' → logprob: -3.631486415863037
    6. ')' → logprob: -3.756486415863037
    7. ' _' → logprob: -4.006486415863037
    8. ' distance' → logprob: -4.131486415863037
    9. '_j' → logprob: -4.131486415863037
    10. ' number' → logprob: -4.256486415863037

Token 1727: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42680054903030396
    2. ' =' → logprob: -2.926800489425659
    3. '_to' → logprob: -2.926800489425659
    4. ':' → logprob: -3.051800489425659
    5. '=' → logprob: -3.426800489425659
    6. '           ' → logprob: -3.551800489425659
    7. '       ' → logprob: -3.801800489425659
    8. ':
' → logprob: -3.801800489425659
    9. '_c' → logprob: -4.551800727844238
    10. '.' → logprob: -4.676800727844238

Token 1728: ' climb' (ID: 27049)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.20506535470485687
    2. 'cross' → logprob: -1.705065369606018
    3. ' climb' → logprob: -6.5800652503967285
    4. 'print' → logprob: -7.5800652503967285
    5. 'reach' → logprob: -7.7050652503967285
    6. '_cl' → logprob: -7.8300652503967285
    7. 'enter' → logprob: -7.8300652503967285
    8. '_cross' → logprob: -8.580065727233887
    9. ' cross' → logprob: -9.205065727233887
    10. '
' → logprob: -9.455065727233887

Token 1729: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.173654317855835
    2. ':' → logprob: -1.423654317855835
    3. '           ' → logprob: -1.923654317855835
    4. '=' → logprob: -2.423654317855835
    5. '       ' → logprob: -3.298654317855835
    6. ':
' → logprob: -3.423654317855835
    7. ' =' → logprob: -3.548654317855835
    8. ']' → logprob: -3.673654317855835
    9. ' if' → logprob: -4.548654556274414
    10. 'if' → logprob: -4.548654556274414

Token 1730: ' minimal' (ID: 19957)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2608397901058197
    2. 'min' → logprob: -2.1358397006988525
    3. '1' → logprob: -2.2608397006988525
    4. 'r' → logprob: -5.510839939117432
    5. '0' → logprob: -6.885839939117432
    6. ' len' → logprob: -7.010839939117432
    7. ' min' → logprob: -7.135839939117432
    8. 'end' → logprob: -9.385839462280273
    9. ' ' → logprob: -9.510839462280273
    10. 'max' → logprob: -9.760839462280273

Token 1731: ' number' (ID: 2086)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.4967612028121948
    2. '_distance' → logprob: -2.6217613220214844
    3. '+' → logprob: -2.9967613220214844
    4. '1' → logprob: -3.2467613220214844
    5. 'dist' → logprob: -3.2467613220214844
    6. ' distance' → logprob: -3.8717613220214844
    7. ')' → logprob: -3.9967613220214844
    8. ' +' → logprob: -3.9967613220214844
    9. '   ' → logprob: -4.121761322021484
    10. ' ' → logprob: -4.246761322021484

Token 1732: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8535634875297546
    2. '           ' → logprob: -1.7285635471343994
    3. '
' → logprob: -2.1035635471343994
    4. '0' → logprob: -2.6035635471343994
    5. ')' → logprob: -2.7285635471343994
    6. '               ' → logprob: -2.9785635471343994
    7. '   ' → logprob: -3.9785635471343994
    8. ' ' → logprob: -4.97856330871582
    9. '=' → logprob: -5.10356330871582
    10. '+' → logprob: -5.22856330871582

Token 1733: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.5852431654930115
    2. 'walls' → logprob: -1.8352432250976562
    3. '1' → logprob: -3.0852432250976562
    4. 'end' → logprob: -3.3352432250976562
    5. 'steps' → logprob: -3.4602432250976562
    6. ')' → logprob: -3.5852432250976562
    7. ' circles' → logprob: -3.7102432250976562
    8. '```' → logprob: -4.210243225097656
    9. ' walls' → logprob: -4.460243225097656
    10. '``' → logprob: -4.710243225097656

Token 1734: ' from' (ID: 591)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.4314348697662354
    2. ':' → logprob: -1.5564348697662354
    3. '       ' → logprob: -1.5564348697662354
    4. '           ' → logprob: -2.5564348697662354
    5. '   ' → logprob: -2.8064348697662354
    6. ')' → logprob: -3.3064348697662354
    7. '=' → logprob: -3.6814348697662354
    8. '
' → logprob: -4.056434631347656
    9. '.' → logprob: -4.306434631347656
    10. '#' → logprob: -4.306434631347656

Token 1735: ' outside' (ID: 7539)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.29414626955986023
    2. ' end' → logprob: -2.1691462993621826
    3. 'outside' → logprob: -2.4191462993621826
    4. 'any' → logprob: -4.6691460609436035
    5. 'the' → logprob: -4.6691460609436035
    6. ' outside' → logprob: -4.6691460609436035
    7. 'start' → logprob: -4.9191460609436035
    8. ' the' → logprob: -5.9191460609436035
    9. 'those' → logprob: -6.4191460609436035
    10. ' any' → logprob: -6.4191460609436035

Token 1736: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7506648302078247
    2. ':' → logprob: -1.6256648302078247
    3. '       ' → logprob: -2.625664710998535
    4. '.' → logprob: -3.250664710998535
    5. ':
' → logprob: -3.250664710998535
    6. ']' → logprob: -3.375664710998535
    7. ')
' → logprob: -3.625664710998535
    8. '   ' → logprob: -3.875664710998535
    9. '):' → logprob: -4.000664710998535
    10. '           ' → logprob: -4.125664710998535

Token 1737: ' that' (ID: 484)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.6234049797058105
    2. ' end' → logprob: -0.9984049797058105
    3. ' those' → logprob: -3.1234049797058105
    4. 'those' → logprob: -3.9984049797058105
    5. ' them' → logprob: -4.7484049797058105
    6. ' any' → logprob: -5.1234049797058105
    7. ' the' → logprob: -5.6234049797058105
    8. 'them' → logprob: -5.8734049797058105
    9. ' that' → logprob: -6.1234049797058105
    10. 'any' → logprob: -6.1234049797058105

Token 1738: ' circle' (ID: 22005)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3598194718360901
    2. ':' → logprob: -2.2348194122314453
    3. ']' → logprob: -3.2348194122314453
    4. ':
' → logprob: -3.2348194122314453
    5. ')
' → logprob: -3.6098194122314453
    6. '   ' → logprob: -4.109819412231445
    7. '
' → logprob: -4.484819412231445
    8. '.' → logprob: -4.609819412231445
    9. '       ' → logprob: -4.609819412231445
    10. '):' → logprob: -4.984819412231445

Token 1739: '

' (ID: 279)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3869094252586365
    2. '       ' → logprob: -2.3869094848632812
    3. '   ' → logprob: -2.8869094848632812
    4. ':
' → logprob: -3.2619094848632812
    5. '
' → logprob: -3.6369094848632812
    6. ':' → logprob: -3.7619094848632812
    7. ')' → logprob: -4.011909484863281
    8. '#' → logprob: -4.261909484863281
    9. ' graph' → logprob: -4.511909484863281
    10. '           ' → logprob: -4.761909484863281

Token 1740: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029427599161863327
    2. '           ' → logprob: -3.9044275283813477
    3. ')' → logprob: -5.654427528381348
    4. '   ' → logprob: -6.029427528381348
    5. '.' → logprob: -7.529427528381348
    6. '<|end|>' → logprob: -7.529427528381348
    7. '        
' → logprob: -8.279427528381348
    8. ',' → logprob: -8.404427528381348
    9. '
' → logprob: -8.779427528381348
    10. 'else' → logprob: -8.779427528381348

Token 1741: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.21693357825279236
    2. 'graph' → logprob: -1.8419336080551147
    3. '       ' → logprob: -3.716933488845825
    4. '#' (adapté à ' #') → logprob: -5.466933727264404
    5. 'if' → logprob: -5.466933727264404
    6. '           ' → logprob: -6.341933727264404
    7. 'distance' → logprob: -7.091933727264404
    8. 'd' → logprob: -7.841933727264404
    9. 'for' → logprob: -8.841933250427246
    10. '   ' → logprob: -9.091933250427246

Token 1742: ' Start' (ID: 7972)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.35580798983573914
    2. 'dist' → logprob: -1.2308080196380615
    3. '#' → logprob: -5.730807781219482
    4. 'if' → logprob: -6.605807781219482
    5. '       ' → logprob: -6.980807781219482
    6. 'for' → logprob: -8.10580825805664
    7. 'd' → logprob: -8.10580825805664
    8. 'distance' → logprob: -8.35580825805664
    9. '   ' → logprob: -8.73080825805664
    10. 'print' → logprob: -8.85580825805664

Token 1743: ' outside' (ID: 7539)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.01895327679812908
    2. '_nodes' → logprob: -4.518953323364258
    3. '   ' → logprob: -6.393953323364258
    4. '#' → logprob: -6.893953323364258
    5. '           ' → logprob: -7.268953323364258
    6. '       ' → logprob: -7.268953323364258
    7. '_dist' → logprob: -7.518953323364258
    8. 'graph' → logprob: -7.643953323364258
    9. 'if' → logprob: -7.768953323364258
    10. 'dist' → logprob: -7.768953323364258

Token 1744: ',' (ID: 11)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.2337304800748825
    2. '       ' → logprob: -2.9837305545806885
    3. '_nodes' → logprob: -3.1087305545806885
    4. '           ' → logprob: -3.1087305545806885
    5. 'graph' → logprob: -4.108730316162109
    6. '   ' → logprob: -4.233730316162109
    7. '_graph' → logprob: -4.608730316162109
    8. ' =' → logprob: -5.358730316162109
    9. '#' → logprob: -5.608730316162109
    10. '=' → logprob: -5.983730316162109

Token 1745: ' so' (ID: 813)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.06924112141132355
    2. 'graph' → logprob: -3.0692410469055176
    3. '#' → logprob: -4.194241046905518
    4. 'dist' → logprob: -5.944241046905518
    5. ' end' → logprob: -7.194241046905518
    6. 'for' → logprob: -7.444241046905518
    7. '       ' → logprob: -7.819241046905518
    8. 'visited' → logprob: -8.694241523742676
    9. 'if' → logprob: -8.944241523742676
    10. '   ' → logprob: -8.944241523742676

Token 1746: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6635996699333191
    2. '#' → logprob: -1.4135997295379639
    3. 'print' → logprob: -1.5385997295379639
    4. 'distance' → logprob: -4.788599491119385
    5. 'if' → logprob: -5.038599491119385
    6. 'for' → logprob: -5.288599491119385
    7. 'graph' → logprob: -6.038599491119385
    8. 'start' → logprob: -7.288599491119385
    9. 'visited' → logprob: -7.413599491119385
    10. 'queue' → logprob: -7.413599491119385

Token 1747: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5230191946029663
    2. '=' → logprob: -1.0230191946029663
    3. 'from' → logprob: -4.148019313812256
    4. '_to' → logprob: -4.148019313812256
    5. 's' → logprob: -4.898019313812256
    6. '_from' → logprob: -6.023019313812256
    7. '[' → logprob: -6.523019313812256
    8. '[-' → logprob: -7.273019313812256
    9. '[s' → logprob: -7.773019313812256
    10. '   ' → logprob: -7.898019313812256

Token 1748: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29737114906311035
    2. ' =' → logprob: -1.4223711490631104
    3. '_to' → logprob: -5.047370910644531
    4. 's' → logprob: -5.172370910644531
    5. '0' → logprob: -6.922370910644531
    6. 'from' → logprob: -7.047370910644531
    7. '[' → logprob: -7.547370910644531
    8. 'to' → logprob: -7.672370910644531
    9. ' ' → logprob: -8.172370910644531
    10. '   ' → logprob: -8.922370910644531

Token 1749: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5670291781425476
    2. '=' → logprob: -1.1920292377471924
    3. 'dist' → logprob: -3.3170292377471924
    4. ':' → logprob: -3.6920292377471924
    5. '_dist' → logprob: -3.8170292377471924
    6. ')' → logprob: -4.192028999328613
    7. ',' → logprob: -5.442028999328613
    8. '0' → logprob: -5.817028999328613
    9. '_c' → logprob: -5.817028999328613
    10. ':
' → logprob: -5.942028999328613

Token 1750: ' outside' (ID: 7539)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14898112416267395
    2. 'start' → logprob: -2.3989810943603516
    3. 'end' → logprob: -3.3989810943603516
    4. 'None' → logprob: -5.398981094360352
    5. 'outside' → logprob: -5.398981094360352
    6. 'the' → logprob: -7.023981094360352
    7. 'virtual' → logprob: -7.398981094360352
    8. '0' → logprob: -7.523981094360352
    9. '-end' → logprob: -7.898981094360352
    10. 'none' → logprob: -7.898981094360352

Token 1751: ':
' (ID: 734)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.1718295812606812
    2. ':' → logprob: -1.6718295812606812
    3. '   ' → logprob: -1.9218295812606812
    4. 'graph' → logprob: -2.2968297004699707
    5. ' =' → logprob: -3.0468297004699707
    6. ')' → logprob: -3.1718297004699707
    7. ':
' → logprob: -3.5468297004699707
    8. '
' → logprob: -3.5468297004699707
    9. '_dist' → logprob: -3.7968297004699707
    10. '=' → logprob: -3.9218297004699707

Token 1752: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8992457985877991
    2. 'dist' → logprob: -1.1492457389831543
    3. '       ' → logprob: -1.3992457389831543
    4. '   ' → logprob: -4.274245738983154
    5. 'graph' → logprob: -5.149245738983154
    6. '#' → logprob: -5.399245738983154
    7. 'distance' → logprob: -6.399245738983154
    8. '```' → logprob: -7.399245738983154
    9. ' dist' → logprob: -7.524245738983154
    10. ' distances' → logprob: -7.649245738983154

Token 1753: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0023084578569978476
    2. '       ' → logprob: -7.002308368682861
    3. '   ' → logprob: -7.877308368682861
    4. '#' (adapté à ' #') → logprob: -8.00230884552002
    5. '           ' → logprob: -8.37730884552002
    6. 'distance' → logprob: -9.00230884552002
    7. ' dist' → logprob: -9.62730884552002
    8. '
' → logprob: -9.62730884552002
    9. 'd' → logprob: -10.00230884552002
    10. 'start' → logprob: -10.25230884552002

Token 1754: ' BFS' (ID: 190016)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004159245174378157
    2. '#' → logprob: -5.879159450531006
    3. 'graph' → logprob: -8.254158973693848
    4. '   ' → logprob: -8.504158973693848
    5. '       ' → logprob: -8.504158973693848
    6. 'for' → logprob: -8.504158973693848
    7. 'distance' → logprob: -9.254158973693848
    8. '           ' → logprob: -9.379158973693848
    9. 'visited' → logprob: -9.504158973693848
    10. 'd' → logprob: -9.754158973693848

Token 1755: ' over' (ID: 1072)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6696080565452576
    2. '(graph' → logprob: -1.4196081161499023
    3. '   ' → logprob: -2.6696081161499023
    4. ' =' → logprob: -3.2946081161499023
    5. ')' → logprob: -3.5446081161499023
    6. '=' → logprob: -3.7946081161499023
    7. ':' → logprob: -3.9196081161499023
    8. '(
' → logprob: -4.669608116149902
    9. ' graph' → logprob: -4.794608116149902
    10. 'from' → logprob: -4.794608116149902

Token 1756: ' circles' (ID: 45131)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.000476190383778885
    2. 'cir' → logprob: -8.000475883483887
    3. '[-' → logprob: -10.125475883483887
    4. 'circle' → logprob: -10.375475883483887
    5. ' graph' → logprob: -11.125475883483887
    6. '[]' → logprob: -11.250475883483887
    7. 'deque' → logprob: -11.750475883483887
    8. '[' → logprob: -11.875475883483887
    9. '```' → logprob: -12.500475883483887
    10. '
' → logprob: -12.500475883483887

Token 1757: ',' (ID: 11)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.554302453994751
    2. 'dist' → logprob: -1.304302453994751
    3. '   ' → logprob: -2.804302453994751
    4. '       ' → logprob: -3.304302453994751
    5. '           ' → logprob: -3.804302453994751
    6. '
' → logprob: -4.929302215576172
    7. '#' → logprob: -4.929302215576172
    8. 'if' → logprob: -5.679302215576172
    9. 'from' → logprob: -5.929302215576172
    10. 'start' → logprob: -6.054302215576172

Token 1758: ' check' (ID: 2371)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08020981401205063
    2. 'visited' → logprob: -3.205209732055664
    3. '#' → logprob: -4.455209732055664
    4. '   ' → logprob: -4.830209732055664
    5. 'start' → logprob: -5.580209732055664
    6. 'import' → logprob: -5.830209732055664
    7. 'from' → logprob: -5.830209732055664
    8. '
' → logprob: -6.455209732055664
    9. 'distance' → logprob: -6.455209732055664
    10. 'graph' → logprob: -6.705209732055664

Token 1759: ' minimal' (ID: 19957)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.048704981803894
    2. '   ' → logprob: -1.798704981803894
    3. ' for' → logprob: -1.798704981803894
    4. ' if' → logprob: -2.9237051010131836
    5. 'if' → logprob: -3.0487051010131836
    6. ')' → logprob: -3.1737051010131836
    7. 'graph' → logprob: -3.2987051010131836
    8. 'dist' → logprob: -3.2987051010131836
    9. ':' → logprob: -4.423705101013184
    10. ' distances' → logprob: -4.423705101013184

Token 1760: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8792230486869812
    2. 'distance' → logprob: -1.254223108291626
    3. 'graph' → logprob: -2.129223108291626
    4. '   ' → logprob: -4.129222869873047
    5. ' dist' → logprob: -4.129222869873047
    6. ' graph' → logprob: -4.379222869873047
    7. ' distances' → logprob: -4.379222869873047
    8. ' distance' → logprob: -4.504222869873047
    9. '_nodes' → logprob: -4.629222869873047
    10. 'start' → logprob: -4.629222869873047

Token 1761: ' from' (ID: 591)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.08266063034534454
    2. '   ' → logprob: -3.832660675048828
    3. '       ' → logprob: -4.082660675048828
    4. 'dist' → logprob: -4.207660675048828
    5. ' graph' → logprob: -4.957660675048828
    6. '
' → logprob: -5.707660675048828
    7. '           ' → logprob: -6.082660675048828
    8. '#' → logprob: -6.457660675048828
    9. ' =' → logprob: -6.582660675048828
    10. '=' → logprob: -6.707660675048828

Token 1762: ' outside' (ID: 7539)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.03522761911153793
    2. '-' → logprob: -4.4102277755737305
    3. 'start' → logprob: -4.5352277755737305
    4. ' end' → logprob: -4.7852277755737305
    5. 'outside' → logprob: -6.7852277755737305
    6. '[]' → logprob: -7.5352277755737305
    7. 'None' → logprob: -8.16022777557373
    8. '
' → logprob: -8.41022777557373
    9. 'the' → logprob: -9.16022777557373
    10. 'any' → logprob: -9.16022777557373

Token 1763: ' into' (ID: 1511)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3433362245559692
    2. ':' → logprob: -1.4683362245559692
    3. 'graph' → logprob: -1.5933362245559692
    4. '   ' → logprob: -2.9683361053466797
    5. '#' → logprob: -3.4683361053466797
    6. ':
' → logprob: -3.5933361053466797
    7. '.' → logprob: -3.8433361053466797
    8. ']' → logprob: -3.9683361053466797
    9. ' graph' → logprob: -4.09333610534668
    10. ',' → logprob: -4.09333610534668

Token 1764: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.31842929124832153
    2. ' end' → logprob: -1.9434292316436768
    3. 'cir' → logprob: -2.1934292316436768
    4. 'the' → logprob: -4.693429470062256
    5. ' circles' → logprob: -5.818429470062256
    6. ' the' → logprob: -5.943429470062256
    7. 'any' → logprob: -6.693429470062256
    8. 'circle' → logprob: -7.068429470062256
    9. ' any' → logprob: -7.693429470062256
    10. 'all' → logprob: -9.193428993225098

Token 1765: ' circles' (ID: 45131)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.027478870004415512
    2. '_' → logprob: -4.0274786949157715
    3. '_nodes' → logprob: -4.9024786949157715
    4. '_
' → logprob: -7.4024786949157715
    5. '_s' → logprob: -8.27747917175293
    6. ')' → logprob: -8.65247917175293
    7. '_points' → logprob: -8.77747917175293
    8. ''_' → logprob: -9.40247917175293
    9. ')_' → logprob: -9.77747917175293
    10. '`' → logprob: -9.90247917175293

Token 1766: ' by' (ID: 656)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.09015202522277832
    2. '#' → logprob: -3.7151520252227783
    3. '   ' → logprob: -4.215151786804199
    4. '       ' → logprob: -4.215151786804199
    5. 'dist' → logprob: -4.215151786804199
    6. '           ' → logprob: -5.715151786804199
    7. '
' → logprob: -5.965151786804199
    8. ' graph' → logprob: -6.215151786804199
    9. 'if' → logprob: -6.715151786804199
    10. ':
' → logprob: -6.715151786804199

Token 1767: ' climbing' (ID: 47637)
  Prédit: 'adding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adding' → logprob: -1.4270561933517456
    2. 'def' → logprob: -1.8020561933517456
    3. 'starting' → logprob: -2.052056312561035
    4. 'checking' → logprob: -2.302056312561035
    5. 'vis' → logprob: -2.802056312561035
    6. 'queue' → logprob: -3.302056312561035
    7. 'using' → logprob: -3.427056312561035
    8. 'passing' → logprob: -3.427056312561035
    9. 'consider' → logprob: -3.677056312561035
    10. 'b' → logprob: -3.802056312561035

Token 1768: ' walls' (ID: 20562)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.007399453315883875
    2. '#' → logprob: -5.632399559020996
    3. '   ' → logprob: -7.132399559020996
    4. 'dist' → logprob: -7.257399559020996
    5. 'for' → logprob: -7.382399559020996
    6. ' graph' → logprob: -7.632399559020996
    7. '[]' → logprob: -8.882399559020996
    8. 'nodes' → logprob: -9.382399559020996
    9. 'def' → logprob: -9.507399559020996
    10. 'n' → logprob: -9.507399559020996

Token 1769: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9047998189926147
    2. ')' → logprob: -1.9047998189926147
    3. 'graph' → logprob: -2.2797999382019043
    4. '   ' → logprob: -2.4047999382019043
    5. ':
' → logprob: -2.5297999382019043
    6. '#' → logprob: -2.9047999382019043
    7. '
' → logprob: -4.029799938201904
    8. 'def' → logprob: -4.404799938201904
    9. '.' → logprob: -4.529799938201904
    10. ']' → logprob: -4.654799938201904

Token 1770: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17231248319149017
    2. 'graph' → logprob: -2.0473124980926514
    3. '           ' → logprob: -4.297312259674072
    4. '   ' → logprob: -4.422312259674072
    5. '#' → logprob: -6.297312259674072
    6. ' graph' → logprob: -7.547312259674072
    7. 'for' → logprob: -8.04731273651123
    8. 'if' → logprob: -8.42231273651123
    9. '```' → logprob: -8.42231273651123
    10. '
' → logprob: -9.04731273651123

Token 1771: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5151088833808899
    2. 'graph' → logprob: -1.5151088237762451
    3. '   ' → logprob: -2.265108823776245
    4. '       ' → logprob: -3.015108823776245
    5. '#' (adapté à ' #') → logprob: -3.765108823776245
    6. 'visited' → logprob: -5.765109062194824
    7. '           ' → logprob: -6.265109062194824
    8. '
' → logprob: -7.640109062194824
    9. 'distance' → logprob: -8.015109062194824
    10. 'for' → logprob: -8.515109062194824

Token 1772: ' Since' (ID: 12265)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3188060522079468
    2. 'graph' → logprob: -1.8188060522079468
    3. '#' → logprob: -3.0688061714172363
    4. 'visited' → logprob: -3.0688061714172363
    5. 'start' → logprob: -5.068806171417236
    6. '       ' → logprob: -5.818806171417236
    7. 'outside' → logprob: -5.818806171417236
    8. '   ' → logprob: -6.318806171417236
    9. 'for' → logprob: -6.818806171417236
    10. 'distance' → logprob: -7.068806171417236

Token 1773: ' outside' (ID: 7539)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1905359923839569
    2. 'outside' → logprob: -3.3155360221862793
    3. ' start' → logprob: -3.4405360221862793
    4. 'True' → logprob: -3.5655360221862793
    5. ' True' → logprob: -3.6905360221862793
    6. '#' → logprob: -3.9405360221862793
    7. ' outside' → logprob: -4.940536022186279
    8. 'False' → logprob: -5.190536022186279
    9. 'graph' → logprob: -5.690536022186279
    10. '[]' → logprob: -5.690536022186279

Token 1774: ' not' (ID: 625)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7212651371955872
    2. ' is' → logprob: -2.0962650775909424
    3. '<|end|>' → logprob: -2.2212650775909424
    4. ',' → logprob: -2.9712650775909424
    5. '_c' → logprob: -3.0962650775909424
    6. ':' → logprob: -3.4712650775909424
    7. '<|end|>' → logprob: -3.8462650775909424
    8. '_nodes' → logprob: -3.9712650775909424
    9. '.' → logprob: -4.0962653160095215
    10. ' =' → logprob: -4.5962653160095215

Token 1775: ' connected' (ID: 12079)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.04390624538064003
    2. ' connected' → logprob: -3.1689062118530273
    3. 'in' → logprob: -7.543906211853027
    4. '_connected' → logprob: -9.293906211853027
    5. 'linked' → logprob: -9.793906211853027
    6. ')' → logprob: -9.918906211853027
    7. ' in' → logprob: -10.043906211853027
    8. 'represented' → logprob: -10.043906211853027
    9. 'connect' → logprob: -11.043906211853027
    10. '-connected' → logprob: -11.418906211853027

Token 1776: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.825826108455658
    2. ',' → logprob: -1.3258261680603027
    3. '_nodes' → logprob: -3.2008261680603027
    4. ' to' → logprob: -3.4508261680603027
    5. '_c' → logprob: -3.4508261680603027
    6. ')' → logprob: -3.5758261680603027
    7. 'to' → logprob: -3.7008261680603027
    8. '_to' → logprob: -3.9508261680603027
    9. '=' → logprob: -4.075826168060303
    10. '.' → logprob: -4.325826168060303

Token 1777: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.0018854460213333368
    2. 'cir' → logprob: -6.626885414123535
    3. 'anything' → logprob: -7.751885414123535
    4. ' any' → logprob: -9.001885414123535
    5. 'all' → logprob: -12.501885414123535
    6. 'circle' → logprob: -14.751885414123535
    7. 'Any' → logprob: -15.001885414123535
    8. ' anything' → logprob: -15.251885414123535
    9. '_any' → logprob: -15.376885414123535
    10. ' circles' → logprob: -15.376885414123535

Token 1778: ' circle' (ID: 22005)
  Prédit: 'circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'circle' → logprob: -0.5127504467964172
    2. 'cir' → logprob: -1.0127503871917725
    3. ' circle' → logprob: -3.8877503871917725
    4. ' circles' → logprob: -5.137750625610352
    5. 'node' → logprob: -5.762750625610352
    6. 'graph' → logprob: -6.012750625610352
    7. ' node' → logprob: -6.637750625610352
    8. '.' → logprob: -6.762750625610352
    9. '_circle' → logprob: -7.387750625610352
    10. 'nodes' → logprob: -7.512750625610352

Token 1779: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5963316559791565
    2. ')' → logprob: -1.3463315963745117
    3. ',' → logprob: -3.2213315963745117
    4. ':
' → logprob: -3.2213315963745117
    5. '<|end|>' → logprob: -3.2213315963745117
    6. '<|end|>' → logprob: -3.8463315963745117
    7. '.' → logprob: -4.346331596374512
    8. '
' → logprob: -5.096331596374512
    9. ']' → logprob: -5.096331596374512
    10. '#' → logprob: -5.596331596374512

Token 1780: ' distance' (ID: 9324)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7194605469703674
    2. 'print' → logprob: -1.4694604873657227
    3. '#' → logprob: -1.9694604873657227
    4. 'dist' → logprob: -2.2194604873657227
    5. 'for' → logprob: -4.094460487365723
    6. 'continue' → logprob: -4.844460487365723
    7. 'pass' → logprob: -5.844460487365723
    8. 'start' → logprob: -6.344460487365723
    9. ' graph' → logprob: -7.219460487365723
    10. 'distance' → logprob: -7.469460487365723

Token 1781: ' -' (ID: 533)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2768402397632599
    2. ' =' → logprob: -1.6518402099609375
    3. 'from' → logprob: -3.1518402099609375
    4. '_to' → logprob: -6.4018402099609375
    5. 'to' → logprob: -6.9018402099609375
    6. ' is' → logprob: -7.1518402099609375
    7. ' from' → logprob: -7.5268402099609375
    8. ' ' → logprob: -7.7768402099609375
    9. 'is' → logprob: -8.026840209960938
    10. '=
' → logprob: -8.151840209960938

Token 1782: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.75008487701416
    3. '=' → logprob: -11.62508487701416
    4. ' -' → logprob: -12.12508487701416
    5. '2' → logprob: -13.00008487701416
    6. '
' → logprob: -13.25008487701416
    7. '-' → logprob: -13.75008487701416
    8. '   ' → logprob: -13.87508487701416
    9. ' =' → logprob: -14.25008487701416
    10. ':' → logprob: -14.25008487701416

Token 1783: ' for' (ID: 395)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.6130741238594055
    2. '-' → logprob: -1.3630740642547607
    3. '=' → logprob: -2.6130740642547607
    4. ']' → logprob: -3.7380740642547607
    5. '           ' → logprob: -4.23807430267334
    6. ':' → logprob: -4.36307430267334
    7. '[' → logprob: -4.48807430267334
    8. '               ' → logprob: -4.61307430267334
    9. ',' → logprob: -4.73807430267334
    10. ')' → logprob: -5.23807430267334

Token 1784: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.04232306778430939
    2. 'cir' → logprob: -3.417323112487793
    3. 'each' → logprob: -5.667323112487793
    4. 'any' → logprob: -6.042323112487793
    5. ' all' → logprob: -6.792323112487793
    6. 'end' → logprob: -8.042323112487793
    7. 'the' → logprob: -8.792323112487793
    8. 'them' → logprob: -8.792323112487793
    9. 'every' → logprob: -8.917323112487793
    10. 'v' → logprob: -8.917323112487793

Token 1785: ' circles' (ID: 45131)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6058629751205444
    2. '       ' → logprob: -1.8558629751205444
    3. '
' → logprob: -1.9808629751205444
    4. ']' → logprob: -2.230863094329834
    5. '   ' → logprob: -2.480863094329834
    6. '[' → logprob: -3.105863094329834
    7. 'dist' → logprob: -3.105863094329834
    8. ')
' → logprob: -3.605863094329834
    9. ':' → logprob: -3.605863094329834
    10. '[
' → logprob: -3.730863094329834

Token 1786: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6828848123550415
    2. ']' → logprob: -2.057884693145752
    3. ':' → logprob: -2.432884693145752
    4. '
' → logprob: -2.807884693145752
    5. '       ' → logprob: -2.932884693145752
    6. ':
' → logprob: -3.182884693145752
    7. ')
' → logprob: -3.682884693145752
    8. '0' → logprob: -4.057884693145752
    9. '[' → logprob: -4.307884693145752
    10. '   ' → logprob: -4.432884693145752

Token 1787: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4528341293334961
    2. '           ' → logprob: -1.202834129333496
    3. '   ' → logprob: -3.827834129333496
    4. 'graph' → logprob: -4.452834129333496
    5. '#' → logprob: -4.702834129333496
    6. '
' → logprob: -5.327834129333496
    7. '               ' → logprob: -5.702834129333496
    8. 'for' → logprob: -5.827834129333496
    9. ',' → logprob: -6.202834129333496
    10. '```' → logprob: -6.577834129333496

Token 1788: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7232735753059387
    2. '#' (adapté à ' #') → logprob: -1.598273515701294
    3. 'dist' → logprob: -2.348273515701294
    4. 'print' → logprob: -2.473273515701294
    5. 'graph' → logprob: -2.848273515701294
    6. '       ' → logprob: -3.473273515701294
    7. '0' → logprob: -4.223273754119873
    8. '           ' → logprob: -4.473273754119873
    9. '               ' → logprob: -5.598273754119873
    10. 'if' → logprob: -5.598273754119873

Token 1789: ' Check' (ID: 6208)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0928838923573494
    2. 'graph' → logprob: -2.717883825302124
    3. '#' → logprob: -4.717884063720703
    4. 'for' → logprob: -5.217884063720703
    5. '       ' → logprob: -5.592884063720703
    6. 'if' → logprob: -6.342884063720703
    7. '   ' → logprob: -6.842884063720703
    8. '           ' → logprob: -7.592884063720703
    9. 'print' → logprob: -7.967884063720703
    10. 'd' → logprob: -8.717884063720703

Token 1790: ' if' (ID: 538)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.19345715641975403
    2. 'if' → logprob: -2.0684571266174316
    3. 'for' → logprob: -3.9434571266174316
    4. 'graph' → logprob: -4.443457126617432
    5. '#' → logprob: -5.068457126617432
    6. '   ' → logprob: -6.318457126617432
    7. 'outside' → logprob: -6.443457126617432
    8. 'distance' → logprob: -6.693457126617432
    9. 'from' → logprob: -6.818457126617432
    10. '```' → logprob: -7.193457126617432

Token 1791: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.17528575658798218
    2. 'start' → logprob: -2.300285816192627
    3. 'len' → logprob: -3.050285816192627
    4. ' end' → logprob: -5.425285816192627
    5. 'any' → logprob: -5.675285816192627
    6. 'not' → logprob: -5.925285816192627
    7. ' start' → logprob: -6.425285816192627
    8. ' len' → logprob: -7.925285816192627
    9. ' not' → logprob: -8.175285339355469
    10. ' any' → logprob: -8.800285339355469

Token 1792: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0002669384120963514
    2. '_s' → logprob: -8.750267028808594
    3. 'inside' → logprob: -10.750267028808594
    4. 'cir' → logprob: -10.875267028808594
    5. '_inside' → logprob: -11.250267028808594
    6. '_' → logprob: -11.375267028808594
    7. '\' → logprob: -12.000267028808594
    8. 's' → logprob: -12.250267028808594
    9. 'outside' → logprob: -12.375267028808594
    10. '
' → logprob: -12.500267028808594

Token 1793: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.03264332935214043
    2. '_c' → logprob: -4.5326433181762695
    3. '_' → logprob: -4.6576433181762695
    4. '_s' → logprob: -5.6576433181762695
    5. 'irc' → logprob: -6.4076433181762695
    6. '_ir' → logprob: -6.7826433181762695
    7. 's' → logprob: -7.0326433181762695
    8. '```' → logprob: -7.4076433181762695
    9. '\' → logprob: -7.6576433181762695
    10. 'i' → logprob: -7.9076433181762695

Token 1794: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.351545125246048
    2. 'ir' → logprob: -1.3515450954437256
    3. 'icles' → logprob: -4.226545333862305
    4. 'les' → logprob: -4.726545333862305
    5. 'r' → logprob: -5.226545333862305
    6. 'rc' → logprob: -5.976545333862305
    7. '```' → logprob: -6.601545333862305
    8. 's' → logprob: -7.226545333862305
    9. '__' → logprob: -8.226545333862305
    10. 'ycles' → logprob: -8.226545333862305

Token 1795: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23314081132411957
    2. '==' → logprob: -1.9831408262252808
    3. ' ==' → logprob: -3.733140707015991
    4. ' and' → logprob: -4.60814094543457
    5. 'and' → logprob: -4.85814094543457
    6. '[' → logprob: -4.85814094543457
    7. ')' → logprob: -5.48314094543457
    8. ':
' → logprob: -5.73314094543457
    9. '.' → logprob: -5.85814094543457
    10. '):' → logprob: -5.98314094543457

Token 1796: ' empty' (ID: 8213)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.2382022142410278
    2. 'empty' → logprob: -1.4882022142410278
    3. 'connected' → logprob: -1.8632022142410278
    4. 'reachable' → logprob: -2.3632020950317383
    5. '[]' → logprob: -2.4882020950317383
    6. 'any' → logprob: -3.4882020950317383
    7. '0' → logprob: -3.6132020950317383
    8. '-' → logprob: -3.9882020950317383
    9. 'all' → logprob: -4.488202095031738
    10. '-connected' → logprob: -4.738202095031738

Token 1797: '?' (ID: 30)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3732089102268219
    2. ':
' → logprob: -1.2482088804244995
    3. '[]' → logprob: -5.373208999633789
    4. ' and' → logprob: -5.623208999633789
    5. ' or' → logprob: -5.748208999633789
    6. '[' → logprob: -5.748208999633789
    7. '==' → logprob: -6.373208999633789
    8. '           ' → logprob: -6.623208999633789
    9. '.' → logprob: -6.748208999633789
    10. '   ' → logprob: -6.998208999633789

Token 1798: ' If' (ID: 1843)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5008049011230469
    2. ':
' → logprob: -1.5008049011230469
    3. '       ' → logprob: -2.500804901123047
    4. '           ' → logprob: -3.000804901123047
    5. '[]' → logprob: -5.375804901123047
    6. '   ' → logprob: -5.625804901123047
    7. ' and' → logprob: -5.625804901123047
    8. '[' → logprob: -5.625804901123047
    9. ' or' → logprob: -5.625804901123047
    10. '```' → logprob: -5.750804901123047

Token 1799: ' yes' (ID: 14531)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4050680100917816
    2. ' end' → logprob: -1.905068039894104
    3. ' not' → logprob: -2.4050679206848145
    4. 'not' → logprob: -2.5300679206848145
    5. 'len' → logprob: -5.0300679206848145
    6. ' len' → logprob: -6.4050679206848145
    7. '```' → logprob: -6.7800679206848145
    8. 'empty' → logprob: -6.9050679206848145
    9. 'start' → logprob: -6.9050679206848145
    10. '[]' → logprob: -7.0300679206848145

Token 1800: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25556546449661255
    2. ':' → logprob: -1.7555654048919678
    3. '           ' → logprob: -3.1305654048919678
    4. '       ' → logprob: -6.255565643310547
    5. '```' → logprob: -6.255565643310547
    6. 'else' → logprob: -6.880565643310547
    7. '               ' → logprob: -7.505565643310547
    8. '==' → logprob: -7.505565643310547
    9. ',' → logprob: -7.755565643310547
    10. '   ' → logprob: -7.755565643310547

Token 1801: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0916193723678589
    2. 'print' → logprob: -1.0916193723678589
    3. ' continue' → logprob: -2.5916194915771484
    4. ' print' → logprob: -2.5916194915771484
    5. '0' → logprob: -3.0916194915771484
    6. 'continue' → logprob: -3.0916194915771484
    7. '#' → logprob: -3.5916194915771484
    8. '   ' → logprob: -3.5916194915771484
    9. '       ' → logprob: -4.591619491577148
    10. '```' → logprob: -4.966619491577148

Token 1802: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016383185982704163
    2. '-' → logprob: -4.766383171081543
    3. ' ' → logprob: -5.766383171081543
    4. '```' → logprob: -5.766383171081543
    5. '   ' → logprob: -7.891383171081543
    6. ' -' → logprob: -7.891383171081543
    7. '(' → logprob: -8.391383171081543
    8. '``' → logprob: -8.891383171081543
    9. '1' → logprob: -9.141383171081543
    10. '`' → logprob: -9.891383171081543

Token 1803: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0489579401910305
    2. '-' → logprob: -3.2989578247070312
    3. '1' → logprob: -4.923957824707031
    4. 'float' → logprob: -7.423957824707031
    5. 'len' → logprob: -7.423957824707031
    6. '```' → logprob: -7.423957824707031
    7. 'n' → logprob: -7.548957824707031
    8. 'inf' → logprob: -7.798957824707031
    9. ' ' → logprob: -8.423957824707031
    10. '   ' → logprob: -8.923957824707031

Token 1804: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0214022397994995
    2. 'else' → logprob: -1.2714022397994995
    3. ':
' → logprob: -2.021402359008789
    4. ':' → logprob: -2.771402359008789
    5. ' else' → logprob: -3.271402359008789
    6. 'if' → logprob: -3.521402359008789
    7. '           ' → logprob: -3.771402359008789
    8. '   ' → logprob: -4.021402359008789
    9. ' if' → logprob: -4.646402359008789
    10. ')' → logprob: -4.646402359008789

Token 1805: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30097198486328125
    2. 'else' → logprob: -2.3009719848632812
    3. '           ' → logprob: -2.9259719848632812
    4. 'if' → logprob: -3.1759719848632812
    5. ':' → logprob: -4.175971984863281
    6. '   ' → logprob: -4.425971984863281
    7. ' if' → logprob: -4.675971984863281
    8. ' else' → logprob: -5.050971984863281
    9. ':
' → logprob: -5.175971984863281
    10. '0' → logprob: -5.425971984863281

Token 1806: ' minimal' (ID: 19957)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8491771221160889
    2. 'print' → logprob: -0.8491771221160889
    3. ' print' → logprob: -2.099177122116089
    4. '   ' → logprob: -4.974177360534668
    5. '       ' → logprob: -4.974177360534668
    6. '               ' → logprob: -5.724177360534668
    7. ' if' → logprob: -6.099177360534668
    8. 'if' → logprob: -7.599177360534668
    9. '```' → logprob: -7.599177360534668
    10. ' continue' → logprob: -7.849177360534668

Token 1807: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.3195372223854065
    2. '_distance' → logprob: -2.4445371627807617
    3. 'dist' → logprob: -3.0695371627807617
    4. '(
' → logprob: -3.5695371627807617
    5. ' distance' → logprob: -3.6945371627807617
    6. '_dist' → logprob: -4.569537162780762
    7. ')' → logprob: -4.569537162780762
    8. '_d' → logprob: -4.694537162780762
    9. '_c' → logprob: -4.819537162780762
    10. 'd' → logprob: -4.944537162780762

Token 1808: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5702488422393799
    2. ' =' → logprob: -1.5702488422393799
    3. '           ' → logprob: -2.19524884223938
    4. ':' → logprob: -2.44524884223938
    5. '       ' → logprob: -2.82024884223938
    6. '   ' → logprob: -3.07024884223938
    7. ')' → logprob: -3.07024884223938
    8. ' if' → logprob: -3.57024884223938
    9. 'if' → logprob: -3.57024884223938
    10. ':
' → logprob: -3.57024884223938

Token 1809: ' minimal' (ID: 19957)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9489036798477173
    2. '0' → logprob: -1.0739036798477173
    3. 'min' → logprob: -1.9489036798477173
    4. 'len' → logprob: -2.8239035606384277
    5. '-' → logprob: -3.5739035606384277
    6. 'r' → logprob: -3.6989035606384277
    7. 'float' → logprob: -5.323903560638428
    8. 'max' → logprob: -5.323903560638428
    9. 'math' → logprob: -5.823903560638428
    10. 'inf' → logprob: -6.448903560638428

Token 1810: ' ' (ID: 220)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.3212658166885376
    2. 'distance' → logprob: -1.4462658166885376
    3. '(end' → logprob: -2.071265697479248
    4. '(start' → logprob: -2.946265697479248
    5. 'dist' → logprob: -3.321265697479248
    6. '_distance' → logprob: -3.321265697479248
    7. '(
' → logprob: -3.446265697479248
    8. 'start' → logprob: -3.571265697479248
    9. '[]' → logprob: -3.696265697479248
    10. '(' → logprob: -3.821265697479248

Token 1811: '1' (ID: 16)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.5822663307189941
    2. '(
' → logprob: -1.8322663307189941
    3. '(' → logprob: -2.832266330718994
    4. 'dist' → logprob: -2.957266330718994
    5. '_distance' → logprob: -3.332266330718994
    6. '_c' → logprob: -4.207266330718994
    7. '([' → logprob: -4.207266330718994
    8. '(start' → logprob: -4.457266330718994
    9. 'start' → logprob: -4.457266330718994
    10. 'd' → logprob: -4.832266330718994

Token 1812: '.

' (ID: 364)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2111477851867676
    2. '0' → logprob: -1.3361477851867676
    3. ':' → logprob: -2.7111477851867676
    4. '
' → logprob: -2.8361477851867676
    5. ':
' → logprob: -2.9611477851867676
    6. '[' → logprob: -3.0861477851867676
    7. '   ' → logprob: -3.7111477851867676
    8. 'if' → logprob: -3.8361477851867676
    9. ' ' → logprob: -3.9611477851867676
    10. '=' → logprob: -4.086147785186768

Token 1813: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1355540007352829
    2. '           ' → logprob: -2.760554075241089
    3. 'else' → logprob: -3.510554075241089
    4. 'print' → logprob: -4.13555383682251
    5. '```' → logprob: -4.38555383682251
    6. '   ' → logprob: -6.26055383682251
    7. 'if' → logprob: -7.26055383682251
    8. '0' → logprob: -7.26055383682251
    9. ')' → logprob: -7.63555383682251
    10. ' else' → logprob: -8.010554313659668

Token 1814: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.030794987455010414
    2. '       ' → logprob: -3.530795097351074
    3. '           ' → logprob: -7.780795097351074
    4. '0' → logprob: -8.030795097351074
    5. 'if' → logprob: -8.655795097351074
    6. 'else' → logprob: -10.030795097351074
    7. '```' → logprob: -10.530795097351074
    8. '   ' → logprob: -10.780795097351074
    9. 'for' → logprob: -11.405795097351074
    10. ' print' → logprob: -11.530795097351074

Token 1815: ' For' (ID: 2214)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5546427369117737
    2. '       ' → logprob: -1.304642677307129
    3. 'dist' → logprob: -2.429642677307129
    4. 'if' → logprob: -3.304642677307129
    5. '#' → logprob: -5.054642677307129
    6. 'else' → logprob: -5.179642677307129
    7. 'for' → logprob: -5.304642677307129
    8. '0' → logprob: -5.804642677307129
    9. '           ' → logprob: -5.804642677307129
    10. 'graph' → logprob: -6.304642677307129

Token 1816: ' beginner' (ID: 57062)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2350654900074005
    2. 'c' → logprob: -2.360065460205078
    3. ' i' → logprob: -3.360065460205078
    4. 'end' → logprob: -3.735065460205078
    5. 'circle' → logprob: -4.110065460205078
    6. ' c' → logprob: -4.735065460205078
    7. 's' → logprob: -5.110065460205078
    8. '_' → logprob: -5.485065460205078
    9. ' end' → logprob: -5.735065460205078
    10. ' circle' → logprob: -5.860065460205078

Token 1817: ' simplicity' (ID: 57516)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.665465235710144
    2. ':' → logprob: -1.790465235710144
    3. '           ' → logprob: -2.6654653549194336
    4. ':
' → logprob: -2.6654653549194336
    5. ' if' → logprob: -2.6654653549194336
    6. '   ' → logprob: -3.4154653549194336
    7. 'if' → logprob: -3.5404653549194336
    8. ')' → logprob: -5.290465354919434
    9. '=' → logprob: -5.415465354919434
    10. '[]' → logprob: -5.415465354919434

Token 1818: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06282681226730347
    2. 'if' → logprob: -4.312826633453369
    3. 'print' → logprob: -4.437826633453369
    4. ' if' → logprob: -4.687826633453369
    5. '           ' → logprob: -4.687826633453369
    6. '   ' → logprob: -5.062826633453369
    7. ':' → logprob: -5.437826633453369
    8. ':
' → logprob: -5.687826633453369
    9. '
' → logprob: -7.312826633453369
    10. '        
' → logprob: -7.562826633453369

Token 1819: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.291145384311676
    2. '       ' → logprob: -1.6661453247070312
    3. 'if' → logprob: -3.4161453247070312
    4. '           ' → logprob: -4.041145324707031
    5. 'for' → logprob: -5.541145324707031
    6. ' if' → logprob: -5.916145324707031
    7. '   ' → logprob: -6.166145324707031
    8. '```' → logprob: -6.791145324707031
    9. ' print' → logprob: -6.916145324707031
    10. 'graph' → logprob: -6.916145324707031

Token 1820: ' start' (ID: 1604)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.41204482316970825
    2. 'start' → logprob: -1.5370447635650635
    3. 'len' → logprob: -2.7870447635650635
    4. ' end' → logprob: -3.4120447635650635
    5. ' start' → logprob: -3.9120447635650635
    6. ' len' → logprob: -5.662045001983643
    7. ' not' → logprob: -6.037045001983643
    8. 'not' → logprob: -6.162045001983643
    9. '(end' → logprob: -11.037044525146484
    10. 'n' → logprob: -11.287044525146484

Token 1821: ' outside' (ID: 7539)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.015047873370349407
    2. '_' → logprob: -4.390048027038574
    3. '_s' → logprob: -6.390048027038574
    4. ' _' → logprob: -8.015048027038574
    5. ' ==' → logprob: -8.890048027038574
    6. ')' → logprob: -9.265048027038574
    7. ':' → logprob: -10.015048027038574
    8. 's' → logprob: -10.015048027038574
    9. '_points' → logprob: -10.765048027038574
    10. ')_' → logprob: -10.765048027038574

Token 1822: ' circles' (ID: 45131)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5964293479919434
    2. '_c' → logprob: -1.8464293479919434
    3. ' ==' → logprob: -1.8464293479919434
    4. ':
' → logprob: -2.9714293479919434
    5. '==' → logprob: -3.2214293479919434
    6. ' and' → logprob: -3.5964293479919434
    7. '           ' → logprob: -5.596429347991943
    8. '_' → logprob: -5.596429347991943
    9. ',' → logprob: -6.346429347991943
    10. '       ' → logprob: -7.471429347991943

Token 1823: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22141402959823608
    2. ':
' → logprob: -1.7214140892028809
    3. '           ' → logprob: -5.721414089202881
    4. ',' → logprob: -5.721414089202881
    5. ' and' → logprob: -5.971414089202881
    6. '       ' → logprob: -5.971414089202881
    7. '   ' → logprob: -6.471414089202881
    8. '_' → logprob: -6.721414089202881
    9. '=' → logprob: -6.846414089202881
    10. '==' → logprob: -6.846414089202881

Token 1824: ' and' (ID: 326)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.049089040607213974
    2. '           ' → logprob: -3.799088954925537
    3. ' print' → logprob: -3.799088954925537
    4. '#' → logprob: -6.799088954925537
    5. '       ' → logprob: -6.924088954925537
    6. '   ' → logprob: -7.674088954925537
    7. '               ' → logprob: -8.549089431762695
    8. 'if' → logprob: -8.799089431762695
    9. ' if' → logprob: -9.549089431762695
    10. ' #' → logprob: -10.424089431762695

Token 1825: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.030277999117970467
    2. ' end' → logprob: -3.530277967453003
    3. 'len' → logprob: -8.155278205871582
    4. 'not' → logprob: -9.530278205871582
    5. '(end' → logprob: -10.155278205871582
    6. ' not' → logprob: -10.280278205871582
    7. '#' → logprob: -11.155278205871582
    8. 'any' → logprob: -11.280278205871582
    9. 'start' → logprob: -11.280278205871582
    10. ' len' → logprob: -11.655278205871582

Token 1826: ' inside' (ID: 6772)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.04493943229317665
    2. '_inside' → logprob: -3.9199395179748535
    3. '_' → logprob: -5.4199395179748535
    4. 'outside' → logprob: -5.6699395179748535
    5. ' outside' → logprob: -5.7949395179748535
    6. 'inside' → logprob: -5.9199395179748535
    7. ' inside' → logprob: -5.9199395179748535
    8. '_s' → logprob: -6.4199395179748535
    9. ' is' → logprob: -7.0449395179748535
    10. '
' → logprob: -7.1699395179748535

Token 1827: ' some' (ID: 1236)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0600903294980526
    2. '_' → logprob: -3.8100903034210205
    3. ':' → logprob: -3.9350903034210205
    4. ':
' → logprob: -4.3100905418396
    5. ' _' → logprob: -7.3100905418396
    6. '   ' → logprob: -7.9350905418396
    7. '```' → logprob: -8.060090065002441
    8. '_circle' → logprob: -8.560090065002441
    9. ' ' → logprob: -8.685090065002441
    10. '_
' → logprob: -9.060090065002441

Token 1828: ' circle' (ID: 22005)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00048536903341300786
    2. 'cir' → logprob: -8.75048542022705
    3. '_circle' → logprob: -8.75048542022705
    4. ' _' → logprob: -9.12548542022705
    5. '_' → logprob: -10.37548542022705
    6. ' circles' → logprob: -10.75048542022705
    7. ' ' → logprob: -13.87548542022705
    8. '\' → logprob: -14.25048542022705
    9. ')_' → logprob: -14.62548542022705
    10. '_d' → logprob: -14.62548542022705

Token 1829: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19133375585079193
    2. ':
' → logprob: -1.8163337707519531
    3. '       ' → logprob: -5.191333770751953
    4. '           ' → logprob: -5.691333770751953
    5. '   ' → logprob: -6.691333770751953
    6. ',' → logprob: -8.566333770751953
    7. ' and' → logprob: -8.691333770751953
    8. '[' → logprob: -8.691333770751953
    9. '=' → logprob: -8.816333770751953
    10. '):' → logprob: -9.066333770751953

Token 1830: ' minimal' (ID: 19957)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.030488688498735428
    2. ' print' → logprob: -4.03048849105835
    3. '           ' → logprob: -4.65548849105835
    4. '       ' → logprob: -6.53048849105835
    5. '#' → logprob: -7.40548849105835
    6. '   ' → logprob: -7.90548849105835
    7. '               ' → logprob: -9.155488967895508
    8. '```' → logprob: -9.780488967895508
    9. 'for' → logprob: -10.030488967895508
    10. ' #' → logprob: -11.030488967895508

Token 1831: ' is' (ID: 382)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.6173757910728455
    2. '_' → logprob: -1.3673758506774902
    3. 'distance' → logprob: -2.7423758506774902
    4. ' _' → logprob: -2.7423758506774902
    5. '_wall' → logprob: -3.6173758506774902
    6. '_c' → logprob: -3.9923758506774902
    7. '```' → logprob: -5.36737585067749
    8. '_dist' → logprob: -5.74237585067749
    9. '_number' → logprob: -5.74237585067749
    10. ' distance' → logprob: -5.86737585067749

Token 1832: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012522541219368577
    2. ' ' → logprob: -6.751252174377441
    3. 'len' → logprob: -9.751252174377441
    4. 'r' → logprob: -11.876252174377441
    5. '   ' → logprob: -11.876252174377441
    6. 'print' → logprob: -12.626252174377441
    7. ' len' → logprob: -13.376252174377441
    8. '`' → logprob: -13.876252174377441
    9. '```' → logprob: -14.251252174377441
    10. 'min' → logprob: -14.376252174377441

Token 1833: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014211690984666348
    2. 'len' → logprob: -4.264211654663086
    3. 'min' → logprob: -10.514211654663086
    4. '(len' → logprob: -12.139211654663086
    5. 'max' → logprob: -13.139211654663086
    6. '
' → logprob: -13.389211654663086
    7. 'r' → logprob: -13.514211654663086
    8. '0' → logprob: -13.514211654663086
    9. 'end' → logprob: -13.764211654663086
    10. ' len' → logprob: -13.764211654663086

Token 1834: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1213818788528442
    2. '       ' → logprob: -1.7463818788528442
    3. ')' → logprob: -1.9963818788528442
    4. '
' → logprob: -2.1213817596435547
    5. ':
' → logprob: -2.2463817596435547
    6. ')
' → logprob: -2.8713817596435547
    7. '   ' → logprob: -3.7463817596435547
    8. '1' → logprob: -3.9963817596435547
    9. '           ' → logprob: -4.246381759643555
    10. ':' → logprob: -4.371381759643555

Token 1835: 'cl' (ID: 565)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10953064262866974
    2. ')' → logprob: -2.3595306873321533
    3. '\n' → logprob: -4.734530448913574
    4. '0' → logprob: -8.859530448913574
    5. ')
' → logprob: -8.984530448913574
    6. 'print' → logprob: -10.109530448913574
    7. '(
' → logprob: -10.484530448913574
    8. ' ' → logprob: -10.484530448913574
    9. ')\' → logprob: -10.859530448913574
    10. '\r' → logprob: -10.984530448913574

Token 1836: 'imb' (ID: 8147)
  Prédit: 'imb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imb' → logprob: -0.29635077714920044
    2. 'im' → logprob: -2.4213507175445557
    3. 'oss' → logprob: -2.5463507175445557
    4. 'imbing' → logprob: -3.4213507175445557
    5. 'i' → logprob: -4.046350955963135
    6. ')' → logprob: -4.796350955963135
    7. 'ass' → logprob: -5.046350955963135
    8. 'imber' → logprob: -5.296350955963135
    9. 'r' → logprob: -5.546350955963135
    10. '```' → logprob: -5.546350955963135

Token 1837: ' that' (ID: 484)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11235862970352173
    2. ' )' → logprob: -3.237358570098877
    3. ' ' → logprob: -3.362358570098877
    4. '1' → logprob: -3.987358570098877
    5. '_' → logprob: -5.862358570098877
    6. ' over' → logprob: -6.237358570098877
    7. ' one' → logprob: -6.487358570098877
    8. 'over' → logprob: -6.612358570098877
    9. '```' → logprob: -6.987358570098877
    10. '<|end|>' → logprob: -6.987358570098877

Token 1838: ' circle' (ID: 22005)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07337268441915512
    2. ' )' → logprob: -2.6983726024627686
    3. ' )
' → logprob: -7.573372840881348
    4. ' wall' → logprob: -7.573372840881348
    5. '\n' → logprob: -7.823372840881348
    6. ')
' → logprob: -7.948372840881348
    7. 'space' → logprob: -8.323372840881348
    8. ' space' → logprob: -8.323372840881348
    9. ' 
' → logprob: -8.448372840881348
    10. '```' → logprob: -8.448372840881348

Token 1839: ' wall' (ID: 9688)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06245720759034157
    2. ':' → logprob: -3.312457323074341
    3. '1' → logprob: -5.562457084655762
    4. ')
' → logprob: -5.562457084655762
    5. '   ' → logprob: -5.687457084655762
    6. ':
' → logprob: -5.812457084655762
    7. '
' → logprob: -6.437457084655762
    8. '+' → logprob: -6.812457084655762
    9. ']' → logprob: -6.812457084655762
    10. '<|end|>' → logprob: -7.062457084655762

Token 1840: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014650204218924046
    2. '1' → logprob: -5.264650344848633
    3. ')
' → logprob: -5.264650344848633
    4. ':' → logprob: -6.014650344848633
    5. ':
' → logprob: -7.764650344848633
    6. '   ' → logprob: -7.764650344848633
    7. '```' → logprob: -9.139650344848633
    8. '+' → logprob: -9.264650344848633
    9. '):' → logprob: -9.389650344848633
    10. '
' → logprob: -9.389650344848633

Token 1841: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13329766690731049
    2. '           ' → logprob: -2.6332976818084717
    3. ':
' → logprob: -4.133297443389893
    4. ':' → logprob: -4.258297443389893
    5. 'print' → logprob: -4.383297443389893
    6. '   ' → logprob: -5.508297443389893
    7. ')' → logprob: -6.258297443389893
    8. '
' → logprob: -6.508297443389893
    9. '```' → logprob: -7.258297443389893
    10. '               ' → logprob: -7.883297443389893

Token 1842: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.20061457157135
    2. '       ' → logprob: -1.32561457157135
    3. '           ' → logprob: -1.82561457157135
    4. ':
' → logprob: -2.3256144523620605
    5. '
' → logprob: -2.9506144523620605
    6. '0' → logprob: -3.7006144523620605
    7. '1' → logprob: -3.7006144523620605
    8. ':' → logprob: -3.9506144523620605
    9. 'else' → logprob: -3.9506144523620605
    10. ')' → logprob: -4.5756144523620605

Token 1843: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029777921736240387
    2. '1' → logprob: -3.529778003692627
    3. ' ' → logprob: -10.779777526855469
    4. ' (' → logprob: -12.154777526855469
    5. '("' → logprob: -14.404777526855469
    6. '('' → logprob: -14.529777526855469
    7. '(
' → logprob: -15.279777526855469
    8. '()' → logprob: -16.15477752685547
    9. '`' → logprob: -17.40477752685547
    10. ''' → logprob: -18.15477752685547

Token 1844: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '   ' → logprob: -19.625
    4. 'len' → logprob: -21.375
    5. ')' → logprob: -22.25
    6. '       ' → logprob: -22.5
    7. '```' → logprob: -22.875
    8. '           ' → logprob: -23.0
    9. '`' → logprob: -23.25
    10. ''' → logprob: -23.5

Token 1845: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005387356504797935
    2. '<|end|>' → logprob: -7.8755388259887695
    3. ')
' → logprob: -9.00053882598877
    4. ')return' → logprob: -11.50053882598877
    5. ' )' → logprob: -11.75053882598877
    6. '       ' → logprob: -12.12553882598877
    7. '<|end|>' → logprob: -12.62553882598877
    8. '')' → logprob: -13.37553882598877
    9. '")' → logprob: -13.50053882598877
    10. '```' → logprob: -13.87553882598877

Token 1846: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1847: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047538936138153076
    2. '<|end|>' → logprob: -3.547538995742798
    3. '           ' → logprob: -4.672538757324219
    4. '
' → logprob: -5.547538757324219
    5. '   ' → logprob: -6.922538757324219
    6. 'continue' (adapté à ' continue') → logprob: -6.922538757324219
    7. ')' → logprob: -6.922538757324219
    8. 'else' → logprob: -7.922538757324219
    9. ' continue' → logprob: -8.422538757324219
    10. '<|end|>' → logprob: -8.797538757324219

Token 1848: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00869517307728529
    2. 'if' → logprob: -4.883695125579834
    3. '
' → logprob: -7.258695125579834
    4. 'elif' → logprob: -8.383695602416992
    5. 'else' → logprob: -9.758695602416992
    6. '        
' → logprob: -10.383695602416992
    7. ' if' → logprob: -10.383695602416992
    8. '```' → logprob: -11.008695602416992
    9. '<|end|>' → logprob: -11.883695602416992
    10. '   ' → logprob: -12.383695602416992

Token 1849: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005415653809905052
    2. 'if' → logprob: -5.255415439605713
    3. '```' → logprob: -9.380415916442871
    4. 'elif' → logprob: -9.755415916442871
    5. '
' → logprob: -11.380415916442871
    6. 'else' → logprob: -11.630415916442871
    7. ' if' → logprob: -11.755415916442871
    8. '        
' → logprob: -11.880415916442871
    9. '   ' → logprob: -13.130415916442871
    10. '           ' → logprob: -13.880415916442871

Token 1850: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03908686712384224
    2. '       ' → logprob: -3.2890868186950684
    3. 'elif' → logprob: -7.039086818695068
    4. 'else' → logprob: -8.789087295532227
    5. ' if' → logprob: -11.414087295532227
    6. '```' → logprob: -12.664087295532227
    7. '   ' → logprob: -14.539087295532227
    8. '#' → logprob: -14.914087295532227
    9. '
' → logprob: -15.289087295532227
    10. '        
' → logprob: -16.539087295532227

Token 1851: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.6936577558517456
    2. ' end' → logprob: -0.6936577558517456
    3. ' not' → logprob: -7.943657875061035
    4. 'not' → logprob: -8.818657875061035
    5. 'start' → logprob: -12.943657875061035
    6. 'len' → logprob: -12.943657875061035
    7. ' ' → logprob: -14.318657875061035
    8. '   ' → logprob: -14.443657875061035
    9. ' start' → logprob: -14.443657875061035
    10. ' len' → logprob: -14.443657875061035

Token 1852: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00038980069803074
    2. '_s' → logprob: -7.875389575958252
    3. '```' → logprob: -12.62539005279541
    4. ')_' → logprob: -13.50039005279541
    5. '_' → logprob: -13.75039005279541
    6. '\' → logprob: -14.87539005279541
    7. ']_' → logprob: -14.87539005279541
    8. ' _' → logprob: -15.12539005279541
    9. '==' → logprob: -15.12539005279541
    10. ''_' → logprob: -15.25039005279541

Token 1853: 'ir' (ID: 380)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.01760685257613659
    2. '_s' → logprob: -4.517606735229492
    3. 'ir' → logprob: -5.517606735229492
    4. '_' → logprob: -7.142606735229492
    5. '_ir' → logprob: -7.392606735229492
    6. '\' → logprob: -7.892606735229492
    7. '_sur' → logprob: -8.392606735229492
    8. '_points' → logprob: -8.392606735229492
    9. '```' → logprob: -9.767606735229492
    10. '_r' → logprob: -10.392606735229492

Token 1854: 'cles' (ID: 10934)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.015416761860251427
    2. '_c' → logprob: -4.515416622161865
    3. '_' → logprob: -6.515416622161865
    4. '__' → logprob: -7.765416622161865
    5. '```' → logprob: -7.890416622161865
    6. '_s' → logprob: -8.390417098999023
    7. 'icles' → logprob: -8.390417098999023
    8. 's' → logprob: -8.390417098999023
    9. '_ir' → logprob: -8.390417098999023
    10. 'irc' → logprob: -8.390417098999023

Token 1855: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4293033182621002
    2. '==' → logprob: -1.0543032884597778
    3. ']==' → logprob: -8.179303169250488
    4. ')==' → logprob: -8.929303169250488
    5. ':' → logprob: -9.804303169250488
    6. '[]' → logprob: -10.054303169250488
    7. '=[]' → logprob: -10.929303169250488
    8. '[' → logprob: -11.179303169250488
    9. '==
' → logprob: -11.304303169250488
    10. ')' → logprob: -11.804303169250488

Token 1856: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0007061177166178823
    2. '[' → logprob: -7.375706195831299
    3. ' []' → logprob: -10.37570571899414
    4. '[]):' → logprob: -10.50070571899414
    5. '[]>' → logprob: -11.87570571899414
    6. '[]}' → logprob: -12.62570571899414
    7. ':' → logprob: -12.75070571899414
    8. '=[]' → logprob: -13.37570571899414
    9. '[]
' → logprob: -13.37570571899414
    10. '[]=' → logprob: -14.00070571899414

Token 1857: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21197408437728882
    2. ':
' → logprob: -1.7119741439819336
    3. '           ' → logprob: -4.586974143981934
    4. '       ' → logprob: -8.711974143981934
    5. '():
' → logprob: -9.961974143981934
    6. '=' → logprob: -10.711974143981934
    7. '):
' → logprob: -10.836974143981934
    8. '[' → logprob: -11.461974143981934
    9. '   ' → logprob: -11.711974143981934
    10. '          ' → logprob: -11.836974143981934

Token 1858: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.051405034959316254
    2. ':
' → logprob: -3.6764049530029297
    3. '       ' → logprob: -3.9264049530029297
    4. ':' → logprob: -5.55140495300293
    5. 'print' → logprob: -7.30140495300293
    6. '   ' → logprob: -8.30140495300293
    7. '#' → logprob: -9.30140495300293
    8. '               ' → logprob: -10.05140495300293
    9. '```' → logprob: -10.30140495300293
    10. '):
' → logprob: -11.55140495300293

Token 1859: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024406732991337776
    2. ':
' → logprob: -4.274406909942627
    3. 'print' → logprob: -5.399406909942627
    4. ':' → logprob: -5.524406909942627
    5. '       ' → logprob: -6.899406909942627
    6. '#' (adapté à ' #') → logprob: -7.399406909942627
    7. '               ' → logprob: -11.149406433105469
    8. ' print' → logprob: -11.274406433105469
    9. '   ' → logprob: -11.399406433105469
    10. '#print' → logprob: -11.774406433105469

Token 1860: ' Same' (ID: 38569)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6048386693000793
    2. '           ' → logprob: -1.3548386096954346
    3. '#' → logprob: -2.1048386096954346
    4. '       ' → logprob: -2.6048386096954346
    5. '   ' → logprob: -9.979838371276855
    6. ' print' → logprob: -11.729838371276855
    7. '#print' → logprob: -11.979838371276855
    8. ' #' → logprob: -12.229838371276855
    9. '               ' → logprob: -13.354838371276855
    10. '```' → logprob: -14.604838371276855

Token 1861: ' as' (ID: 472)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15422570705413818
    2. '       ' → logprob: -2.5292258262634277
    3. 'print' → logprob: -3.5292258262634277
    4. '           ' → logprob: -3.7792258262634277
    5. ':' → logprob: -5.279225826263428
    6. '   ' → logprob: -5.654225826263428
    7. 'if' → logprob: -6.779225826263428
    8. '(' → logprob: -7.154225826263428
    9. '               ' → logprob: -8.90422534942627
    10. '```' → logprob: -9.15422534942627

Token 1862: ' above' (ID: 5151)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6881207227706909
    2. '       ' → logprob: -1.188120722770691
    3. '           ' → logprob: -1.938120722770691
    4. 'print' → logprob: -3.4381208419799805
    5. 'start' → logprob: -4.1881208419799805
    6. '   ' → logprob: -7.6881208419799805
    7. 'if' → logprob: -7.8131208419799805
    8. '
' → logprob: -9.06312084197998
    9. '```' → logprob: -9.06312084197998
    10. 'for' → logprob: -9.56312084197998

Token 1863: ' reversed' (ID: 57184)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034488493110984564
    2. '#' → logprob: -6.003448963165283
    3. '       ' → logprob: -7.003448963165283
    4. 'print' → logprob: -9.753448486328125
    5. '   ' → logprob: -12.628448486328125
    6. '               ' → logprob: -13.253448486328125
    7. '```' → logprob: -14.503448486328125
    8. ':' → logprob: -16.253448486328125
    9. '#print' → logprob: -16.253448486328125
    10. '		' → logprob: -16.378448486328125

Token 1864: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04889902472496033
    2. '       ' → logprob: -3.048898935317993
    3. 'print' → logprob: -8.923898696899414
    4. ':
' → logprob: -9.048898696899414
    5. '   ' → logprob: -10.673898696899414
    6. '#' → logprob: -11.548898696899414
    7. '               ' → logprob: -11.673898696899414
    8. ':' → logprob: -11.798898696899414
    9. '
' → logprob: -12.048898696899414
    10. '```' → logprob: -13.298898696899414

Token 1865: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004759053234010935
    2. '       ' → logprob: -5.754758834838867
    3. '#' → logprob: -6.504758834838867
    4. '   ' → logprob: -10.004758834838867
    5. 'print' → logprob: -10.379758834838867
    6. '               ' → logprob: -12.629758834838867
    7. '```' → logprob: -12.629758834838867
    8. '         ' → logprob: -15.379758834838867
    9. '#print' → logprob: -15.504758834838867
    10. ' #' → logprob: -15.879758834838867

Token 1866: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1305374950170517
    2. 'print' (adapté à ' print') → logprob: -2.130537509918213
    3. '       ' → logprob: -5.630537509918213
    4. '               ' → logprob: -12.130537033081055
    5. '   ' → logprob: -12.130537033081055
    6. ' print' → logprob: -12.630537033081055
    7. '```' → logprob: -13.630537033081055
    8. '#' → logprob: -14.380537033081055
    9. '         ' → logprob: -15.880537033081055
    10. '          ' → logprob: -16.005537033081055

Token 1867: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0788951888680458
    2. '(' → logprob: -2.578895092010498
    3. '0' → logprob: -12.203895568847656
    4. '           ' → logprob: -15.578895568847656
    5. '       ' → logprob: -15.953895568847656
    6. '   ' → logprob: -16.078895568847656
    7. ' ' → logprob: -16.953895568847656
    8. '(
' → logprob: -18.078895568847656
    9. '`' → logprob: -18.203895568847656
    10. ' (' → logprob: -18.328895568847656

Token 1868: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -15.625
    3. ' ' → logprob: -16.0
    4. '   ' → logprob: -18.875
    5. '(' → logprob: -19.5
    6. '
' → logprob: -20.0
    7. '`' → logprob: -21.625
    8. '       ' → logprob: -22.125
    9. '```' → logprob: -22.375
    10. '"' → logprob: -22.75

Token 1869: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03287313133478165
    2. ')
' → logprob: -3.5328731536865234
    3. '       ' → logprob: -5.782873153686523
    4. '   ' → logprob: -11.282873153686523
    5. '           ' → logprob: -11.782873153686523
    6. ')
' → logprob: -12.157873153686523
    7. '<|end|>' → logprob: -12.532873153686523
    8. ')return' → logprob: -12.657873153686523
    9. '")' → logprob: -13.907873153686523
    10. '),' → logprob: -14.407873153686523

Token 1870: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6340434551239014
    2. '           ' → logprob: -0.7590434551239014
    3. 'continue' → logprob: -7.0090436935424805
    4. '   ' → logprob: -8.25904369354248
    5. '               ' → logprob: -9.88404369354248
    6. ' continue' → logprob: -10.00904369354248
    7. '		' → logprob: -10.13404369354248
    8. '	continue' → logprob: -10.13404369354248
    9. '<|end|>' → logprob: -10.50904369354248
    10. '	' → logprob: -10.50904369354248

Token 1871: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018958067521452904
    2. 'continue' (adapté à ' continue') → logprob: -4.64395809173584
    3. '       ' → logprob: -4.89395809173584
    4. '		' → logprob: -7.64395809173584
    5. '   ' → logprob: -7.76895809173584
    6. '	continue' → logprob: -7.89395809173584
    7. '	       ' → logprob: -9.01895809173584
    8. ' continue' → logprob: -9.14395809173584
    9. '	' → logprob: -9.39395809173584
    10. '               ' → logprob: -10.26895809173584

Token 1872: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005538671393878758
    2. '
' → logprob: -8.250554084777832
    3. 'else' → logprob: -8.750554084777832
    4. '#' → logprob: -9.625554084777832
    5. '        
' → logprob: -9.875554084777832
    6. '```' → logprob: -11.750554084777832
    7. '   ' → logprob: -12.625554084777832
    8. '           ' → logprob: -13.750554084777832
    9. '    
' → logprob: -13.750554084777832
    10. '#
' → logprob: -14.125554084777832

Token 1873: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03943188115954399
    2. '   ' → logprob: -3.7894318103790283
    3. 'dist' → logprob: -4.914432048797607
    4. '
' → logprob: -5.414432048797607
    5. 'graph' → logprob: -6.039432048797607
    6. '```' → logprob: -6.539432048797607
    7. '#' → logprob: -8.41443157196045
    8. 'distance' → logprob: -9.66443157196045
    9. 'else' → logprob: -9.91443157196045
    10. '        
' → logprob: -10.66443157196045

Token 1874: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.03536294400691986
    2. '   ' → logprob: -3.785362958908081
    3. '       ' → logprob: -4.535362720489502
    4. '#' → logprob: -7.410362720489502
    5. 'distance' → logprob: -8.16036319732666
    6. '```' → logprob: -8.41036319732666
    7. 'start' → logprob: -8.91036319732666
    8. 'visited' → logprob: -10.66036319732666
    9. 'd' → logprob: -11.16036319732666
    10. '``' → logprob: -11.53536319732666

Token 1875: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05022849887609482
    2. ' =' → logprob: -3.0502285957336426
    3. 's' → logprob: -6.425228595733643
    4. '[' → logprob: -12.800228118896484
    5. '       ' → logprob: -12.925228118896484
    6. '=[' → logprob: -12.925228118896484
    7. '=[]' → logprob: -13.175228118896484
    8. '   ' → logprob: -13.175228118896484
    9. 'from' → logprob: -13.800228118896484
    10. '=s' → logprob: -13.925228118896484

Token 1876: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.630610641877865e-06
    2. ' bfs' → logprob: -12.250006675720215
    3. '   ' → logprob: -13.250006675720215
    4. '       ' → logprob: -16.6250057220459
    5. '           ' → logprob: -19.0000057220459
    6. '  ' → logprob: -19.5000057220459
    7. '    ' → logprob: -20.0000057220459
    8. ' ' → logprob: -20.2500057220459
    9. '     ' → logprob: -20.3750057220459
    10. '{' → logprob: -20.3750057220459

Token 1877: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -2.176947600673884e-05
    2. 'graph' → logprob: -10.750021934509277
    3. '(' → logprob: -16.25002098083496
    4. '	graph' → logprob: -16.37502098083496
    5. '(
' → logprob: -16.87502098083496
    6. ' graph' → logprob: -17.00002098083496
    7. '```' → logprob: -17.87502098083496
    8. ' (' → logprob: -19.62502098083496
    9. '_graph' → logprob: -19.62502098083496
    10. '(grid' → logprob: -20.12502098083496

Token 1878: ',' (ID: 11)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.20157314836978912
    2. ',' → logprob: -1.701573133468628
    3. '(' → logprob: -9.826573371887207
    4. 'graph' → logprob: -9.951573371887207
    5. ')' → logprob: -10.576573371887207
    6. '       ' → logprob: -11.201573371887207
    7. ',(' → logprob: -11.826573371887207
    8. ' ,' → logprob: -12.826573371887207
    9. ',
' → logprob: -12.951573371887207
    10. ',[' → logprob: -14.076573371887207

Token 1879: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -7.703443770878948e-06
    2. ' start' → logprob: -12.000007629394531
    3. '[start' → logprob: -13.500007629394531
    4. '       ' → logprob: -15.750007629394531
    5. '           ' → logprob: -19.12500762939453
    6. 'set' → logprob: -19.37500762939453
    7. '   ' → logprob: -19.37500762939453
    8. '(start' → logprob: -19.62500762939453
    9. '[' → logprob: -20.12500762939453
    10. 'end' → logprob: -20.75000762939453

Token 1880: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.816093228830141e-06
    2. '[start' → logprob: -13.75000286102295
    3. 'start' → logprob: -14.00000286102295
    4. '(start' → logprob: -15.25000286102295
    5. ')' → logprob: -16.000001907348633
    6. '[' → logprob: -16.125001907348633
    7. '_start' → logprob: -16.375001907348633
    8. '[_' → logprob: -16.625001907348633
    9. '```' → logprob: -16.625001907348633
    10. '\' → logprob: -16.875001907348633

Token 1881: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.00035798799945041537
    2. 'cir' → logprob: -9.500357627868652
    3. '[' → logprob: -9.875357627868652
    4. '_c' → logprob: -10.000357627868652
    5. 'irc' → logprob: -10.000357627868652
    6. '_' → logprob: -10.750357627868652
    7. '```' → logprob: -10.750357627868652
    8. '\' → logprob: -10.875357627868652
    9. 'icles' → logprob: -11.375357627868652
    10. '_ir' → logprob: -11.625357627868652

Token 1882: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -2.3199920178740285e-05
    2. 'les' → logprob: -10.750022888183594
    3. '```' → logprob: -14.500022888183594
    4. 'r' → logprob: -15.000022888183594
    5. 'cl' → logprob: -16.000022888183594
    6. '[' → logprob: -16.125022888183594
    7. 'ir' → logprob: -16.625022888183594
    8. 'cle' → logprob: -16.625022888183594
    9. '_' → logprob: -16.625022888183594
    10. 'cuits' → logprob: -16.875022888183594

Token 1883: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000616293225903064
    2. ')
' → logprob: -7.875616073608398
    3. '       ' → logprob: -8.375616073608398
    4. ' )' → logprob: -13.000616073608398
    5. '   ' → logprob: -13.875616073608398
    6. ')[' → logprob: -14.500616073608398
    7. ',' → logprob: -14.750616073608398
    8. '[' → logprob: -15.500616073608398
    9. '())' → logprob: -15.500616073608398
    10. '           ' → logprob: -15.875616073608398

Token 1884: '       ' (ID: 309)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03449726104736328
    2. '       ' → logprob: -3.5344972610473633
    3. 'answer' → logprob: -6.034497261047363
    4. 'ans' → logprob: -6.784497261047363
    5. 'dist' → logprob: -8.159497261047363
    6. 'res' → logprob: -8.659497261047363
    7. 'minimal' → logprob: -8.784497261047363
    8. '   ' → logprob: -9.159497261047363
    9. 'best' → logprob: -9.159497261047363
    10. '```' → logprob: -9.534497261047363

Token 1885: ' ans' (ID: 3345)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.014547165483236313
    2. 'ans' (adapté à ' ans') → logprob: -4.764547348022461
    3. 'res' → logprob: -6.014547348022461
    4. 'answer' → logprob: -6.014547348022461
    5. 'print' → logprob: -7.389547348022461
    6. '       ' → logprob: -8.389547348022461
    7. 'dist' → logprob: -9.639547348022461
    8. 'minimal' → logprob: -9.764547348022461
    9. 'result' → logprob: -11.139547348022461
    10. 'mind' → logprob: -11.639547348022461

Token 1886: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8455626368522644
    2. '[' → logprob: -1.0955626964569092
    3. ' =' → logprob: -1.4705626964569092
    4. '   ' → logprob: -5.97056245803833
    5. '[idx' → logprob: -6.22056245803833
    6. '       ' → logprob: -8.095562934875488
    7. '[]' → logprob: -8.345562934875488
    8. '.append' → logprob: -8.345562934875488
    9. '[i' → logprob: -8.470562934875488
    10. '[int' → logprob: -8.720562934875488

Token 1887: ' -' (ID: 533)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.016059940680861473
    2. 'float' → logprob: -4.266059875488281
    3. ' min' → logprob: -6.641059875488281
    4. 'max' → logprob: -7.891059875488281
    5. '10' → logprob: -8.766059875488281
    6. ' float' → logprob: -10.891059875488281
    7. 'math' → logprob: -11.266059875488281
    8. 'len' → logprob: -11.391059875488281
    9. '
' → logprob: -12.016059875488281
    10. '[min' → logprob: -12.516059875488281

Token 1888: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. 'dist' → logprob: -12.500003814697266
    3. ' ' → logprob: -18.250003814697266
    4. '   ' → logprob: -18.375003814697266
    5. '       ' → logprob: -19.250003814697266
    6. '2' → logprob: -19.500003814697266
    7. '```' → logprob: -20.000003814697266
    8. '(dist' → logprob: -20.875003814697266
    9. ' dist' → logprob: -21.000003814697266
    10. 'inf' → logprob: -21.250003814697266

Token 1889: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14515288174152374
    2. 'for' → logprob: -2.0201528072357178
    3. ' for' → logprob: -6.020153045654297
    4. '
' → logprob: -10.270153045654297
    5. '	for' → logprob: -12.770153045654297
    6. '<|end|>' → logprob: -13.270153045654297
    7. '   ' → logprob: -14.020153045654297
    8. '        
' → logprob: -14.145153045654297
    9. ':' → logprob: -14.395153045654297
    10. ')' → logprob: -14.395153045654297

Token 1890: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18017837405204773
    2. '       ' → logprob: -1.9301784038543701
    3. ' for' → logprob: -3.93017840385437
    4. '	for' → logprob: -9.30517864227295
    5. '   ' → logprob: -11.55517864227295
    6. '
' → logprob: -11.93017864227295
    7. '```' → logprob: -12.80517864227295
    8. '<|end|>' → logprob: -13.30517864227295
    9. '​' → logprob: -13.68017864227295
    10. '_for' → logprob: -14.55517864227295

Token 1891: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00020544764993246645
    2. '       ' → logprob: -8.500205039978027
    3. ' for' → logprob: -13.250205039978027
    4. '   ' → logprob: -15.625205039978027
    5. '	for' → logprob: -18.000205993652344
    6. '```' → logprob: -19.750205993652344
    7. '_for' → logprob: -22.125205993652344
    8. '
' → logprob: -22.125205993652344
    9. 'For' → logprob: -22.375205993652344
    10. '           ' → logprob: -22.500205993652344

Token 1892: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7348812222480774
    2. 'ec' → logprob: -0.7348812222480774
    3. 'end' → logprob: -3.4848811626434326
    4. 'i' → logprob: -4.984881401062012
    5. ' ec' → logprob: -6.359881401062012
    6. 'c' → logprob: -6.609881401062012
    7. 'j' → logprob: -9.109881401062012
    8. ' e' → logprob: -9.484881401062012
    9. 'v' → logprob: -9.609881401062012
    10. 'ei' → logprob: -10.484881401062012

Token 1893: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07892680168151855
    2. 'in' → logprob: -2.5789268016815186
    3. 'n' → logprob: -10.953927040100098
    4. '_in' → logprob: -11.828927040100098
    5. '_' → logprob: -12.078927040100098
    6. 's' → logprob: -13.203927040100098
    7. ' ' → logprob: -13.703927040100098
    8. 'e' → logprob: -13.953927040100098
    9. ')' → logprob: -14.828927040100098
    10. 'i' → logprob: -14.953927040100098

Token 1894: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.01814994215965271
    2. ' end' → logprob: -4.0181498527526855
    3. '(end' → logprob: -17.643150329589844
    4. '   ' → logprob: -17.893150329589844
    5. ' ' → logprob: -19.018150329589844
    6. '[end' → logprob: -19.518150329589844
    7. '	end' → logprob: -19.893150329589844
    8. '_end' → logprob: -20.018150329589844
    9. '=end' → logprob: -20.393150329589844
    10. ',end' → logprob: -20.518150329589844

Token 1895: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -4.008129963040119e-06
    2. 'cir' → logprob: -13.000003814697266
    3. ')' → logprob: -14.875003814697266
    4. '
' → logprob: -15.125003814697266
    5. '```' → logprob: -15.125003814697266
    6. 's' → logprob: -15.750003814697266
    7. '_circle' → logprob: -15.875003814697266
    8. '_s' → logprob: -16.250003814697266
    9. '\' → logprob: -16.500003814697266
    10. 'Cir' → logprob: -16.500003814697266

Token 1896: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.15242809057235718
    2. '_c' → logprob: -2.027428150177002
    3. 'cir' → logprob: -4.777428150177002
    4. '_s' → logprob: -8.402427673339844
    5. 'irc' → logprob: -8.402427673339844
    6. 'irl' → logprob: -8.402427673339844
    7. 'ircle' → logprob: -8.527427673339844
    8. 'c' → logprob: -9.152427673339844
    9. 's' → logprob: -9.652427673339844
    10. '\' → logprob: -9.777427673339844

Token 1897: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.01215958222746849
    2. 'ir' → logprob: -4.63715934753418
    3. 'r' → logprob: -6.63715934753418
    4. '_c' → logprob: -8.01215934753418
    5. 'cir' → logprob: -8.38715934753418
    6. 'icles' → logprob: -9.01215934753418
    7. '```' → logprob: -9.38715934753418
    8. 'c' → logprob: -9.38715934753418
    9. 'rc' → logprob: -9.51215934753418
    10. 'les' → logprob: -9.76215934753418

Token 1898: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0015404224395752
    2. ':
' → logprob: -1.0015404224395752
    3. ' in' → logprob: -1.6265404224395752
    4. '       ' → logprob: -3.501540422439575
    5. 'in' → logprob: -4.126540184020996
    6. '           ' → logprob: -5.251540184020996
    7. '):
' → logprob: -5.751540184020996
    8. ')' → logprob: -5.876540184020996
    9. ',' → logprob: -6.251540184020996
    10. '<|end|>' → logprob: -6.251540184020996

Token 1899: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3487538695335388
    2. '       ' → logprob: -1.2237539291381836
    3. '   ' → logprob: -9.098753929138184
    4. 'if' → logprob: -9.223753929138184
    5. ' if' → logprob: -9.973753929138184
    6. '	       ' → logprob: -10.723753929138184
    7. '```' → logprob: -11.598753929138184
    8. '               ' → logprob: -11.723753929138184
    9. '<|end|>' → logprob: -11.973753929138184
    10. '         ' → logprob: -13.973753929138184

Token 1900: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.23141305148601532
    2. '           ' → logprob: -1.7314130067825317
    3. ' if' → logprob: -3.7314131259918213
    4. '       ' → logprob: -5.231412887573242
    5. '```' → logprob: -8.481412887573242
    6. '   ' → logprob: -10.731412887573242
    7. '               ' → logprob: -11.356412887573242
    8. '	       ' → logprob: -13.106412887573242
    9. '	if' → logprob: -13.731412887573242
    10. '``' → logprob: -14.106412887573242

Token 1901: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.011048054322600365
    2. ' dist' → logprob: -4.511047840118408
    3. '   ' → logprob: -16.76104736328125
    4. '(dist' → logprob: -16.76104736328125
    5. '	dist' → logprob: -17.26104736328125
    6. '0' → logprob: -18.13604736328125
    7. '           ' → logprob: -18.13604736328125
    8. '_dist' → logprob: -18.38604736328125
    9. '       ' → logprob: -19.13604736328125
    10. 'Dist' → logprob: -19.63604736328125

Token 1902: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -1.6240566083070007e-06
    2. 'e' → logprob: -13.500001907348633
    3. '[' → logprob: -16.000001907348633
    4. '[
' → logprob: -16.875001907348633
    5. ' [' → logprob: -18.125001907348633
    6. '```' → logprob: -19.125001907348633
    7. '
' → logprob: -19.625001907348633
    8. '[v' → logprob: -20.000001907348633
    9. ' e' → logprob: -20.375001907348633
    10. '(e' → logprob: -20.625001907348633

Token 1903: ']' (ID: 60)
  Prédit: '!=-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=-' → logprob: -0.7736541628837585
    2. ' !=' → logprob: -1.5236542224884033
    3. '!=' → logprob: -1.7736542224884033
    4. ']!=' → logprob: -2.5236542224884033
    5. ']' → logprob: -2.7736542224884033
    6. '==' → logprob: -6.398653984069824
    7. ']>=' → logprob: -6.648653984069824
    8. ']==' → logprob: -6.773653984069824
    9. '>=' → logprob: -6.898653984069824
    10. '[' → logprob: -7.148653984069824

Token 1904: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.30823469161987305
    2. ' !=' → logprob: -2.058234691619873
    3. '!=-' → logprob: -2.183234691619873
    4. '>=' → logprob: -4.183234691619873
    5. '==' → logprob: -5.308234691619873
    6. '>' → logprob: -6.558234691619873
    7. '!==' → logprob: -6.933234691619873
    8. ')' → logprob: -8.058235168457031
    9. ']!=' → logprob: -8.058235168457031
    10. '```' → logprob: -8.183235168457031

Token 1905: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.842555426876061e-06
    2. ' -' → logprob: -12.250004768371582
    3. '```' → logprob: -18.6250057220459
    4. '   ' → logprob: -18.8750057220459
    5. '           ' → logprob: -20.2500057220459
    6. '−' → logprob: -21.5000057220459
    7. '       ' → logprob: -22.1250057220459
    8. '               ' → logprob: -22.3750057220459
    9. '0' → logprob: -22.8750057220459
    10. '                   ' → logprob: -23.7500057220459

Token 1906: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.25
    3. '2' → logprob: -18.75
    4. '``' → logprob: -19.25
    5. '           ' → logprob: -19.5
    6. '   ' → logprob: -20.0
    7. ' ' → logprob: -20.125
    8. '                   ' → logprob: -20.1875
    9. '
' → logprob: -20.1875
    10. '`' → logprob: -20.75

Token 1907: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08071182668209076
    2. '               ' → logprob: -2.955711841583252
    3. 'and' → logprob: -3.705711841583252
    4. '           ' → logprob: -7.830711841583252
    5. ':
' → logprob: -9.080711364746094
    6. ':' → logprob: -9.330711364746094
    7. '              ' → logprob: -9.455711364746094
    8. '<|end|>' → logprob: -9.455711364746094
    9. '                   ' → logprob: -10.330711364746094
    10. '```' → logprob: -10.580711364746094

Token 1908: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002681844402104616
    2. ' and' → logprob: -6.752681732177734
    3. '           ' → logprob: -6.877681732177734
    4. '```' → logprob: -9.002681732177734
    5. ' if' → logprob: -9.252681732177734
    6. '<|end|>' → logprob: -9.502681732177734
    7. 'and' → logprob: -9.877681732177734
    8. ',' → logprob: -10.252681732177734
    9. 'if' → logprob: -10.627681732177734
    10. '	           ' → logprob: -10.877681732177734

Token 1909: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6096354722976685
    2. 'ans' → logprob: -0.8596354722976685
    3. ' if' → logprob: -4.109635353088379
    4. '               ' → logprob: -4.234635353088379
    5. ' ans' → logprob: -6.609635353088379
    6. '                   ' → logprob: -7.109635353088379
    7. 'answer' → logprob: -9.859635353088379
    8. '	ans' → logprob: -12.109635353088379
    9. '(ans' → logprob: -12.109635353088379
    10. '```' → logprob: -13.234635353088379

Token 1910: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.20206058025360107
    2. 'ans' → logprob: -1.702060580253601
    3. '                   ' → logprob: -7.827060699462891
    4. '(ans' → logprob: -8.45206069946289
    5. '               ' → logprob: -10.45206069946289
    6. '	ans' → logprob: -12.82706069946289
    7. 'dist' → logprob: -14.07706069946289
    8. '_ans' → logprob: -14.57706069946289
    9. '   ' → logprob: -14.95206069946289
    10. '                           ' → logprob: -15.07706069946289

Token 1911: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.49666187167167664
    2. ' ==' → logprob: -1.371661901473999
    3. '==-' → logprob: -2.246661901473999
    4. '=' → logprob: -3.871661901473999
    5. ' is' → logprob: -4.74666166305542
    6. 'is' → logprob: -6.37166166305542
    7. '===' → logprob: -8.121662139892578
    8. '>' → logprob: -8.871662139892578
    9. ')' → logprob: -8.871662139892578
    10. '                   ' → logprob: -10.121662139892578

Token 1912: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00012821101699955761
    2. ' -' → logprob: -9.000127792358398
    3. 'None' → logprob: -12.250127792358398
    4. '   ' → logprob: -17.8751277923584
    5. ' None' → logprob: -18.0001277923584
    6. '```' → logprob: -18.6251277923584
    7. ' ' → logprob: -18.8751277923584
    8. '0' → logprob: -20.2501277923584
    9. '                   ' → logprob: -20.5001277923584
    10. '               ' → logprob: -21.0001277923584

Token 1913: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. 'None' → logprob: -10.375031471252441
    3. '-' → logprob: -15.875031471252441
    4. ' ' → logprob: -17.000030517578125
    5. '   ' → logprob: -17.250030517578125
    6. 'or' → logprob: -17.375030517578125
    7. ' None' → logprob: -17.875030517578125
    8. '```' → logprob: -17.875030517578125
    9. '       ' → logprob: -19.250030517578125
    10. ' -' → logprob: -19.625030517578125

Token 1914: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4778318703174591
    2. 'or' → logprob: -0.9778318405151367
    3. '                   ' → logprob: -5.727831840515137
    4. '               ' → logprob: -7.977831840515137
    5. '	or' → logprob: -9.352831840515137
    6. '                       ' → logprob: -10.352831840515137
    7. '                ' → logprob: -11.852831840515137
    8. '```' → logprob: -12.227831840515137
    9. '                    ' → logprob: -12.602831840515137
    10. '           ' → logprob: -12.852831840515137

Token 1915: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0005532711511477828
    2. ' dist' → logprob: -7.500553131103516
    3. 'ans' → logprob: -15.500553131103516
    4. '	dist' → logprob: -17.500553131103516
    5. '   ' → logprob: -17.750553131103516
    6. '(dist' → logprob: -18.000553131103516
    7. 'Dist' → logprob: -20.125553131103516
    8. '_dist' → logprob: -20.250553131103516
    9. '       ' → logprob: -21.250553131103516
    10. 'd' → logprob: -21.500553131103516

Token 1916: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -9.186122770188376e-05
    2. 'e' → logprob: -9.375091552734375
    3. '(e' → logprob: -13.000091552734375
    4. 'dist' → logprob: -13.000091552734375
    5. '[' → logprob: -14.375091552734375
    6. '>' → logprob: -14.500091552734375
    7. ' e' → logprob: -15.000091552734375
    8. 's' → logprob: -15.125091552734375
    9. '```' → logprob: -15.625091552734375
    10. '[
' → logprob: -16.500091552734375

Token 1917: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06508029252290726
    2. ' <' → logprob: -2.940080404281616
    3. '>' → logprob: -4.815080165863037
    4. '<int' → logprob: -7.315080165863037
    5. ' >' → logprob: -7.440080165863037
    6. '<size' → logprob: -7.815080165863037
    7. '<std' → logprob: -9.940080642700195
    8. '<len' → logprob: -10.440080642700195
    9. '<class' → logprob: -10.815080642700195
    10. '<u' → logprob: -10.940080642700195

Token 1918: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0008584582828916609
    2. ' >' → logprob: -7.125858306884766
    3. 'dist' → logprob: -10.250858306884766
    4. '>
' → logprob: -12.000858306884766
    5. '<' → logprob: -13.000858306884766
    6. ' dist' → logprob: -13.250858306884766
    7. '>d' → logprob: -13.875858306884766
    8. '```' → logprob: -14.125858306884766
    9. '><' → logprob: -14.250858306884766
    10. 'import' → logprob: -14.625858306884766

Token 1919: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006729934364557266
    2. 'dist' → logprob: -5.006730079650879
    3. ' ans' → logprob: -11.256730079650879
    4. ' dist' → logprob: -13.506730079650879
    5. '	ans' → logprob: -16.756729125976562
    6. '           ' → logprob: -16.881729125976562
    7. '               ' → logprob: -17.006729125976562
    8. 'answer' → logprob: -17.381729125976562
    9. '   ' → logprob: -17.631729125976562
    10. '_ans' → logprob: -17.881729125976562

Token 1920: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3727845549583435
    2. ':
' → logprob: -1.2477846145629883
    3. '               ' → logprob: -4.372784614562988
    4. ':' → logprob: -4.747784614562988
    5. '                       ' → logprob: -6.622784614562988
    6. '                  ' → logprob: -7.247784614562988
    7. 'ans' → logprob: -8.747784614562988
    8. ' ans' → logprob: -9.122784614562988
    9. '=' → logprob: -9.247784614562988
    10. '           ' → logprob: -9.247784614562988

Token 1921: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3053179085254669
    2. 'dist' → logprob: -1.8053178787231445
    3. ' dist' → logprob: -2.8053178787231445
    4. 'ans' → logprob: -3.8053178787231445
    5. '               ' → logprob: -4.4303178787231445
    6. ' ans' → logprob: -6.1803178787231445
    7. '                       ' → logprob: -6.8053178787231445
    8. '                    ' → logprob: -8.680317878723145
    9. '                           ' → logprob: -8.805317878723145
    10. '           ' → logprob: -9.055317878723145

Token 1922: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -5.013994814362377e-05
    2. ' ans' → logprob: -10.00005054473877
    3. '                   ' → logprob: -12.62505054473877
    4. '	ans' → logprob: -14.12505054473877
    5. '_ans' → logprob: -15.12505054473877
    6. 'dist' → logprob: -16.125049591064453
    7. 'answer' → logprob: -16.125049591064453
    8. '(ans' → logprob: -16.250049591064453
    9. 'Ans' → logprob: -17.625049591064453
    10. '               ' → logprob: -18.250049591064453

Token 1923: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008073674980551004
    2. ' =' → logprob: -7.125807285308838
    3. '=int' → logprob: -13.625807762145996
    4. '=
' → logprob: -13.875807762145996
    5. '＝' → logprob: -15.750807762145996
    6. '.=' → logprob: -16.25080680847168
    7. '=

' → logprob: -17.37580680847168
    8. '<|end|>' → logprob: -17.50080680847168
    9. '=value' → logprob: -17.62580680847168
    10. '=f' → logprob: -17.62580680847168

Token 1924: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -3.5597102396423e-05
    2. ' dist' → logprob: -10.250035285949707
    3. '               ' → logprob: -16.750036239624023
    4. '   ' → logprob: -18.250036239624023
    5. '                   ' → logprob: -18.375036239624023
    6. '	dist' → logprob: -18.625036239624023
    7. '           ' → logprob: -19.875036239624023
    8. '_dist' → logprob: -21.750036239624023
    9. '(dist' → logprob: -22.125036239624023
    10. '       ' → logprob: -22.625036239624023

Token 1925: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -1.3902033970225602e-05
    2. 'e' → logprob: -11.250014305114746
    3. '[' → logprob: -15.125014305114746
    4. '```' → logprob: -15.500014305114746
    5. '(e' → logprob: -16.37501335144043
    6. '[
' → logprob: -16.62501335144043
    7. '
' → logprob: -17.62501335144043
    8. '	e' → logprob: -18.00001335144043
    9. '   ' → logprob: -18.12501335144043
    10. '\[' → logprob: -18.25001335144043

Token 1926: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1927: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036557212471961975
    2. 'print' → logprob: -3.411557197570801
    3. '
' → logprob: -6.536557197570801
    4. ' print' → logprob: -6.661557197570801
    5. '```' → logprob: -9.5365571975708
    6. '   ' → logprob: -10.0365571975708
    7. '           ' → logprob: -11.1615571975708
    8. ')
' → logprob: -11.5365571975708
    9. '        
' → logprob: -11.5365571975708
    10. '.print' → logprob: -12.1615571975708

Token 1928: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006816254463046789
    2. '       ' → logprob: -5.006816387176514
    3. ' print' → logprob: -10.131815910339355
    4. 'if' (adapté à ' if') → logprob: -10.381815910339355
    5. '```' → logprob: -10.506815910339355
    6. '   ' → logprob: -12.881815910339355
    7. ' if' → logprob: -16.631816864013672
    8. '           ' → logprob: -17.256816864013672
    9. '``' → logprob: -17.256816864013672
    10. '
' → logprob: -17.256816864013672

Token 1929: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07889088988304138
    2. ' ans' → logprob: -2.578890800476074
    3. '(ans' → logprob: -13.828890800476074
    4. '	ans' → logprob: -16.32889175415039
    5. '_ans' → logprob: -17.20389175415039
    6. 'Ans' → logprob: -18.20389175415039
    7. '   ' → logprob: -18.45389175415039
    8. '           ' → logprob: -20.70389175415039
    9. '       ' → logprob: -21.70389175415039
    10. 'answer' → logprob: -21.70389175415039

Token 1930: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4695109724998474
    2. ' !=' → logprob: -1.2195110321044922
    3. '==' → logprob: -2.969511032104492
    4. '!=-' → logprob: -4.594511032104492
    5. ' ==' → logprob: -5.094511032104492
    6. '=' → logprob: -5.219511032104492
    7. '>' → logprob: -6.094511032104492
    8. '>=' → logprob: -6.469511032104492
    9. '   ' → logprob: -6.969511032104492
    10. ' is' → logprob: -7.469511032104492

Token 1931: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1472419600977446e-06
    2. ' -' → logprob: -13.750000953674316
    3. '0' → logprob: -17.000001907348633
    4. '```' → logprob: -19.250001907348633
    5. '   ' → logprob: -20.375001907348633
    6. '=' → logprob: -22.625001907348633
    7. ' ' → logprob: -22.750001907348633
    8. '−' → logprob: -23.000001907348633
    9. '==-' → logprob: -23.500001907348633
    10. '=-' → logprob: -24.500001907348633

Token 1932: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0722858102526516e-05
    2. '-' → logprob: -10.125041007995605
    3. ' ' → logprob: -15.125041007995605
    4. ' -' → logprob: -15.500041007995605
    5. '   ' → logprob: -17.00004005432129
    6. '```' → logprob: -17.75004005432129
    7. 'inf' → logprob: -18.12504005432129
    8. '2' → logprob: -18.75004005432129
    9. '=' → logprob: -18.75004005432129
    10. '       ' → logprob: -19.00004005432129

Token 1933: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39663076400756836
    2. '           ' → logprob: -1.2716307640075684
    3. ':
' → logprob: -3.1466307640075684
    4. '=' → logprob: -6.771630764007568
    5. '       ' → logprob: -7.396630764007568
    6. '               ' → logprob: -7.771630764007568
    7. '==' → logprob: -7.771630764007568
    8. '<|end|>' → logprob: -8.021631240844727
    9. 'print' → logprob: -8.521631240844727
    10. '   ' → logprob: -8.646631240844727

Token 1934: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005449208430945873
    2. 'print' → logprob: -5.255449295043945
    3. '       ' → logprob: -8.630449295043945
    4. ' print' → logprob: -10.755449295043945
    5. '```' → logprob: -11.880449295043945
    6. '               ' → logprob: -12.130449295043945
    7. '   ' → logprob: -13.130449295043945
    8. '                   ' → logprob: -14.880449295043945
    9. '                       ' → logprob: -15.255449295043945
    10. '          ' → logprob: -16.005449295043945

Token 1935: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011065390892326832
    2. '       ' → logprob: -4.511065483093262
    3. ' print' → logprob: -11.136065483093262
    4. '   ' → logprob: -13.386065483093262
    5. '           ' → logprob: -13.886065483093262
    6. '```' → logprob: -15.011065483093262
    7. 'ans' → logprob: -15.636065483093262
    8. '	print' → logprob: -16.386064529418945
    9. '#' (adapté à ' #') → logprob: -16.886064529418945
    10. 'for' → logprob: -18.261064529418945

Token 1936: ' No' (ID: 3004)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0037826199550181627
    2. '       ' → logprob: -5.628782749176025
    3. '#' → logprob: -8.753782272338867
    4. ' print' → logprob: -11.128782272338867
    5. '   ' → logprob: -12.253782272338867
    6. 'ans' → logprob: -12.753782272338867
    7. 'Print' → logprob: -13.628782272338867
    8. '           ' → logprob: -14.503782272338867
    9. '#print' → logprob: -15.878782272338867
    10. 'if' → logprob: -16.378782272338867

Token 1937: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.06365489214658737
    2. 'connection' → logprob: -3.313654899597168
    3. ' path' → logprob: -3.813654899597168
    4. ' connection' → logprob: -6.188654899597168
    5. '       ' → logprob: -7.563654899597168
    6. 'connections' → logprob: -8.563654899597168
    7. 'possible' → logprob: -8.813654899597168
    8. '   ' → logprob: -9.688654899597168
    9. 'paths' → logprob: -10.188654899597168
    10. 'route' → logprob: -10.438654899597168

Token 1938: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44916537404060364
    2. '           ' → logprob: -1.0741653442382812
    3. ':' → logprob: -4.449165344238281
    4. ':
' → logprob: -5.824165344238281
    5. 'print' → logprob: -6.699165344238281
    6. ' to' → logprob: -6.699165344238281
    7. ' print' → logprob: -6.824165344238281
    8. '   ' → logprob: -7.074165344238281
    9. '=' → logprob: -7.574165344238281
    10. '               ' → logprob: -8.199165344238281

Token 1939: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -9.090760431718081e-05
    2. 'outside' → logprob: -9.375090599060059
    3. ' start' → logprob: -12.125090599060059
    4. 'end' → logprob: -14.875090599060059
    5. ' outside' → logprob: -16.625091552734375
    6. '```' → logprob: -17.250091552734375
    7. 'any' → logprob: -17.500091552734375
    8. '0' → logprob: -18.000091552734375
    9. '#' → logprob: -18.250091552734375
    10. '   ' → logprob: -18.375091552734375

Token 1940: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0038254910614341497
    2. '_' → logprob: -6.378825664520264
    3. '           ' → logprob: -7.503825664520264
    4. '_to' → logprob: -7.628825664520264
    5. '       ' → logprob: -7.878825664520264
    6. ' to' → logprob: -8.253825187683105
    7. ':
' → logprob: -8.878825187683105
    8. '_
' → logprob: -9.503825187683105
    9. 'to' → logprob: -9.753825187683105
    10. '
' → logprob: -10.503825187683105

Token 1941: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.04087744280695915
    2. '_c' → logprob: -3.665877342224121
    3. 'cir' → logprob: -4.540877342224121
    4. 'irc' → logprob: -7.915877342224121
    5. '_ir' → logprob: -7.915877342224121
    6. '_s' → logprob: -8.040877342224121
    7. '```' → logprob: -8.040877342224121
    8. '_to' → logprob: -8.165877342224121
    9. '_' → logprob: -8.165877342224121
    10. 'icles' → logprob: -8.290877342224121

Token 1942: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.2526271343231201
    2. 'ir' → logprob: -1.6276271343231201
    3. 'r' → logprob: -4.002627372741699
    4. 'icles' → logprob: -5.252627372741699
    5. 'rc' → logprob: -6.627627372741699
    6. 'cle' → logprob: -8.2526273727417
    7. 'cir' → logprob: -8.2526273727417
    8. '```' → logprob: -8.6276273727417
    9. '           ' → logprob: -8.7526273727417
    10. 'ircle' → logprob: -8.7526273727417

Token 1943: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.7048361301422119
    2. '           ' → logprob: -1.829836130142212
    3. ' to' → logprob: -2.079836130142212
    4. '       ' → logprob: -2.204836130142212
    5. ':
' → logprob: -2.454836130142212
    6. ':' → logprob: -4.579835891723633
    7. ' or' → logprob: -5.204835891723633
    8. 'or' → logprob: -5.954835891723633
    9. ')' → logprob: -6.454835891723633
    10. ',' → logprob: -7.079835891723633

Token 1944: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -4.56102097814437e-05
    2. ' end' → logprob: -10.000045776367188
    3. 'cir' → logprob: -16.625045776367188
    4. 'e' → logprob: -18.125045776367188
    5. 'outside' → logprob: -18.125045776367188
    6. '[]' → logprob: -18.250045776367188
    7. '0' → logprob: -18.375045776367188
    8. ' ' → logprob: -18.375045776367188
    9. '   ' → logprob: -18.750045776367188
    10. 'any' → logprob: -19.125045776367188

Token 1945: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.8624639324116288e-06
    2. '           ' → logprob: -14.125001907348633
    3. '_points' → logprob: -14.875001907348633
    4. '       ' → logprob: -16.000001907348633
    5. 'cir' → logprob: -16.000001907348633
    6. '_' → logprob: -16.250001907348633
    7. '_circle' → logprob: -16.375001907348633
    8. 'Cir' → logprob: -16.625001907348633
    9. '   ' → logprob: -17.250001907348633
    10. '\' → logprob: -17.250001907348633

Token 1946: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.00033296257606707513
    2. 'cir' → logprob: -8.375332832336426
    3. 'icles' → logprob: -10.500332832336426
    4. 'ircle' → logprob: -11.000332832336426
    5. 'irc' → logprob: -11.500332832336426
    6. '_' → logprob: -11.625332832336426
    7. '_c' → logprob: -11.625332832336426
    8. '_ir' → logprob: -12.250332832336426
    9. '```' → logprob: -12.375332832336426
    10. 'cles' → logprob: -12.375332832336426

Token 1947: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.06622042506933212
    2. 'ir' → logprob: -2.81622052192688
    3. 'r' → logprob: -5.816220283508301
    4. 'icles' → logprob: -6.816220283508301
    5. '```' → logprob: -9.6912202835083
    6. 'les' → logprob: -10.5662202835083
    7. 'cir' → logprob: -10.9412202835083
    8. '``' → logprob: -11.5662202835083
    9. 'cle' → logprob: -11.9412202835083
    10. '
' → logprob: -12.1912202835083

Token 1948: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038048841059207916
    2. ':
' → logprob: -4.03804874420166
    3. '       ' → logprob: -4.28804874420166
    4. ':' → logprob: -5.28804874420166
    5. 'print' → logprob: -7.41304874420166
    6. '               ' → logprob: -8.28804874420166
    7. ' or' → logprob: -10.66304874420166
    8. '   ' → logprob: -11.28804874420166
    9. ' print' → logprob: -11.41304874420166
    10. '          ' → logprob: -12.41304874420166

Token 1949: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0488147959113121
    2. '       ' → logprob: -3.0488147735595703
    3. 'print' → logprob: -8.92381477355957
    4. '               ' → logprob: -9.42381477355957
    5. '   ' → logprob: -11.92381477355957
    6. '```' → logprob: -12.79881477355957
    7. ' print' → logprob: -12.92381477355957
    8. ':
' → logprob: -14.29881477355957
    9. '                   ' → logprob: -15.29881477355957
    10. ':' → logprob: -15.54881477355957

Token 1950: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4981537461280823
    2. '           ' → logprob: -0.9981537461280823
    3. '       ' → logprob: -3.7481536865234375
    4. '               ' → logprob: -8.998153686523438
    5. ' print' → logprob: -9.623153686523438
    6. '   ' → logprob: -10.248153686523438
    7. '```' → logprob: -13.498153686523438
    8. '                   ' → logprob: -13.998153686523438
    9. '         ' → logprob: -15.998153686523438
    10. '          ' → logprob: -16.123153686523438

Token 1951: ' Means' (ID: 125152)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008657831698656082
    2. '       ' → logprob: -5.008657932281494
    3. '           ' → logprob: -6.258657932281494
    4. ' print' → logprob: -10.758657455444336
    5. '   ' → logprob: -12.258657455444336
    6. '               ' → logprob: -14.383657455444336
    7. '#' → logprob: -15.883657455444336
    8. '                   ' → logprob: -17.633657455444336
    9. 'if' → logprob: -17.883657455444336
    10. '	print' → logprob: -18.508657455444336

Token 1952: ' rat' (ID: 8908)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17681732773780823
    2. 'rat' → logprob: -1.9268172979354858
    3. ' rat' → logprob: -4.676817417144775
    4. ' print' → logprob: -5.676817417144775
    5. 'the' → logprob: -6.426817417144775
    6. '           ' → logprob: -7.176817417144775
    7. '#' → logprob: -7.301817417144775
    8. '       ' → logprob: -7.551817417144775
    9. '   ' → logprob: -9.551816940307617
    10. 'rats' → logprob: -10.551816940307617

Token 1953: ' has' (ID: 853)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.2882154583930969
    2. ' must' → logprob: -1.7882153987884521
    3. 'needs' → logprob: -2.788215398788452
    4. ' needs' → logprob: -4.288215637207031
    5. '   ' → logprob: -6.038215637207031
    6. '           ' → logprob: -6.163215637207031
    7. 'cannot' → logprob: -6.663215637207031
    8. ' has' → logprob: -7.163215637207031
    9. 'has' → logprob: -7.413215637207031
    10. 'need' → logprob: -8.413215637207031

Token 1954: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.00047833603457547724
    2. ' to' → logprob: -7.750478267669678
    3. 'no' → logprob: -10.250478744506836
    4. '           ' → logprob: -12.125478744506836
    5. '```' → logprob: -12.875478744506836
    6. '   ' → logprob: -13.875478744506836
    7. '_to' → logprob: -14.125478744506836
    8. '       ' → logprob: -14.250478744506836
    9. 'print' → logprob: -14.375478744506836
    10. '
' → logprob: -14.750478744506836

Token 1955: ' climb' (ID: 27049)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.4563829302787781
    2. 'print' → logprob: -1.7063829898834229
    3. 'cross' → logprob: -1.7063829898834229
    4. 'go' → logprob: -5.706382751464844
    5. '
' → logprob: -11.331382751464844
    6. '```' → logprob: -11.706382751464844
    7. '1' → logprob: -11.956382751464844
    8. '#' → logprob: -12.081382751464844
    9. 'pass' → logprob: -12.206382751464844
    10. '   ' → logprob: -12.456382751464844

Token 1956: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3274458348751068
    2. 'at' → logprob: -2.0774457454681396
    3. 'any' → logprob: -2.2024457454681396
    4. 'over' → logprob: -3.7024457454681396
    5. '1' → logprob: -4.827445983886719
    6. 'through' → logprob: -5.577445983886719
    7. 'len' → logprob: -6.452445983886719
    8. '0' → logprob: -6.702445983886719
    9. 'the' → logprob: -7.077445983886719
    10. 'max' → logprob: -7.077445983886719

Token 1957: ' walls' (ID: 20562)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.5175122022628784
    2. 'walls' → logprob: -1.0175122022628784
    3. 'the' → logprob: -3.392512321472168
    4. '   ' → logprob: -6.017512321472168
    5. '       ' → logprob: -6.142512321472168
    6. '
' → logprob: -6.517512321472168
    7. '           ' → logprob: -7.767512321472168
    8. 'n' → logprob: -8.142512321472168
    9. 'remaining' → logprob: -8.142512321472168
    10. 'circ' → logprob: -8.267512321472168

Token 1958: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014919761568307877
    2. '           ' → logprob: -4.264919757843018
    3. 'print' → logprob: -7.264919757843018
    4. '   ' → logprob: -11.014920234680176
    5. '=' → logprob: -11.264920234680176
    6. ' =' → logprob: -11.764920234680176
    7. '               ' → logprob: -12.014920234680176
    8. ',' → logprob: -12.514920234680176
    9. '```' → logprob: -12.514920234680176
    10. '                   ' → logprob: -13.639920234680176

Token 1959: ' cannot' (ID: 6284)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2993147671222687
    2. 'go' → logprob: -1.6743147373199463
    3. 'print' → logprob: -2.7993147373199463
    4. '   ' → logprob: -5.549314975738525
    5. 'pass' → logprob: -5.799314975738525
    6. 'continue' → logprob: -7.299314975738525
    7. ' go' → logprob: -7.799314975738525
    8. '       ' → logprob: -7.924314975738525
    9. 'cannot' → logprob: -7.924314975738525
    10. '           ' → logprob: -8.049314498901367

Token 1960: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reach' → logprob: -1.408381700515747
    2. 'go' → logprob: -1.533381700515747
    3. '           ' → logprob: -1.658381700515747
    4. 'move' → logprob: -1.908381700515747
    5. 'cross' → logprob: -2.283381700515747
    6. 'print' → logprob: -3.158381700515747
    7. '       ' → logprob: -4.283381462097168
    8. 'do' → logprob: -4.408381462097168
    9. '               ' → logprob: -4.533381462097168
    10. 'escape' → logprob: -5.533381462097168

Token 1961: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07522362470626831
    2. 'print' → logprob: -2.700223684310913
    3. '       ' → logprob: -5.325223445892334
    4. ',' → logprob: -8.950223922729492
    5. '               ' → logprob: -9.075223922729492
    6. ' print' → logprob: -9.825223922729492
    7. '   ' → logprob: -10.200223922729492
    8. '
' → logprob: -11.575223922729492
    9. ':
' → logprob: -11.575223922729492
    10. '```' → logprob: -11.825223922729492

Token 1962: ' since' (ID: 3630)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01416056603193283
    2. '           ' → logprob: -4.639160633087158
    3. '       ' → logprob: -5.764160633087158
    4. ' print' → logprob: -7.139160633087158
    5. '0' → logprob: -8.38916015625
    6. '#' → logprob: -9.38916015625
    7. 'continue' → logprob: -9.63916015625
    8. '               ' → logprob: -10.38916015625
    9. '1' → logprob: -10.63916015625
    10. '   ' → logprob: -10.88916015625

Token 1963: ' always' (ID: 3324)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7977836728096008
    2. 'ans' → logprob: -1.547783613204956
    3. 'outside' → logprob: -2.297783613204956
    4. 'not' → logprob: -3.047783613204956
    5. 'True' → logprob: -3.047783613204956
    6. 'print' → logprob: -3.547783613204956
    7. 'there' → logprob: -3.797783613204956
    8. 'start' → logprob: -3.797783613204956
    9. 'the' → logprob: -3.922783613204956
    10. '0' → logprob: -4.672783851623535

Token 1964: ' can' (ID: 665)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.062854290008545
    2. 'possible' → logprob: -1.937854290008545
    3. 'rat' → logprob: -1.937854290008545
    4. 'the' → logprob: -2.062854290008545
    5. 'there' → logprob: -2.812854290008545
    6. '       ' → logprob: -3.562854290008545
    7. 'walls' → logprob: -3.687854290008545
    8. 'cross' → logprob: -4.062854290008545
    9. 'can' → logprob: -4.062854290008545
    10. '           ' → logprob: -4.062854290008545

Token 1965: ' go' (ID: 810)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1354990303516388
    2. 'be' → logprob: -2.5104990005493164
    3. '           ' → logprob: -3.3854990005493164
    4. 'cl' → logprob: -5.760499000549316
    5. 'reach' → logprob: -6.010499000549316
    6. 'cross' → logprob: -6.510499000549316
    7. 'go' → logprob: -6.635499000549316
    8. '       ' → logprob: -7.010499000549316
    9. ' be' → logprob: -7.385499000549316
    10. ' print' → logprob: -8.010499000549316

Token 1966: ' outside' (ID: 7539)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.015607979148626328
    2. 'around' → logprob: -4.515607833862305
    3. ' outside' → logprob: -6.390607833862305
    4. '               ' → logprob: -6.390607833862305
    5. '       ' → logprob: -7.640607833862305
    6. '           ' → logprob: -8.140607833862305
    7. 'through' → logprob: -9.265607833862305
    8. '   ' → logprob: -9.515607833862305
    9. '```' → logprob: -9.765607833862305
    10. 'without' → logprob: -9.890607833862305

Token 1967: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027809930965304375
    2. '           ' → logprob: -4.027810096740723
    3. 'print' → logprob: -4.652810096740723
    4. '   ' → logprob: -10.402810096740723
    5. ' print' → logprob: -10.652810096740723
    6. '               ' → logprob: -11.277810096740723
    7. '```' → logprob: -11.777810096740723
    8. ':
' → logprob: -14.152810096740723
    9. '      ' → logprob: -14.652810096740723
    10. ',' → logprob: -14.652810096740723

Token 1968: ' minimal' (ID: 19957)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5797756314277649
    2. '       ' → logprob: -0.8297756314277649
    3. '           ' → logprob: -5.579775810241699
    4. ' print' → logprob: -10.3297758102417
    5. '   ' → logprob: -11.5797758102417
    6. '               ' → logprob: -11.7047758102417
    7. '#' → logprob: -12.3297758102417
    8. ' ' → logprob: -15.7047758102417
    9. '	print' → logprob: -15.9547758102417
    10. '                   ' → logprob: -16.079774856567383

Token 1969: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9996101260185242
    2. 'print' → logprob: -1.249610185623169
    3. '           ' → logprob: -1.374610185623169
    4. ' =' → logprob: -2.749610185623169
    5. '       ' → logprob: -4.62460994720459
    6. '               ' → logprob: -5.37460994720459
    7. ' print' → logprob: -5.99960994720459
    8. 'ans' → logprob: -5.99960994720459
    9. ')' → logprob: -6.74960994720459
    10. '                   ' → logprob: -6.87460994720459

Token 1970: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028084407094866037
    2. '1' → logprob: -6.627808570861816
    3. 'len' → logprob: -6.877808570861816
    4. 'max' → logprob: -9.252808570861816
    5. 'print' → logprob: -9.252808570861816
    6. 'abs' → logprob: -9.502808570861816
    7. 'dist' → logprob: -9.627808570861816
    8. '   ' → logprob: -10.627808570861816
    9. '-' → logprob: -11.002808570861816
    10. 'float' → logprob: -11.127808570861816

Token 1971: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012219296768307686
    2. '1' → logprob: -4.762219429016113
    3. 'len' → logprob: -6.012219429016113
    4. '-' → logprob: -7.012219429016113
    5. 'min' → logprob: -9.012219429016113
    6. 'max' → logprob: -9.387219429016113
    7. 'abs' → logprob: -10.762219429016113
    8. '```' → logprob: -12.262219429016113
    9. 'dist' → logprob: -12.637219429016113
    10. '(len' → logprob: -12.887219429016113

Token 1972: ' ?
' (ID: 19740)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0060535818338394165
    2. '           ' → logprob: -5.131053447723389
    3. 'print' → logprob: -9.131053924560547
    4. '               ' → logprob: -11.756053924560547
    5. '   ' → logprob: -12.381053924560547
    6. '```' → logprob: -13.006053924560547
    7. ':
' → logprob: -14.256053924560547
    8. ',' → logprob: -14.381053924560547
    9. '
' → logprob: -14.756053924560547
    10. ' print' → logprob: -15.006053924560547

Token 1973: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3133106827735901
    2. '       ' → logprob: -1.3133106231689453
    3. 'print' → logprob: -10.313310623168945
    4. '               ' → logprob: -11.563310623168945
    5. '```' → logprob: -12.313310623168945
    6. '   ' → logprob: -14.063310623168945
    7. '                   ' → logprob: -15.063310623168945
    8. '
' → logprob: -15.438310623168945
    9. ' print' → logprob: -15.563310623168945
    10. '		' → logprob: -15.938310623168945

Token 1974: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25441330671310425
    2. 'print' (adapté à ' print') → logprob: -1.504413366317749
    3. '       ' → logprob: -6.00441312789917
    4. '               ' → logprob: -11.879413604736328
    5. ' print' → logprob: -12.254413604736328
    6. '                   ' → logprob: -13.879413604736328
    7. '   ' → logprob: -14.379413604736328
    8. '```' → logprob: -17.129413604736328
    9. '          ' → logprob: -17.379413604736328
    10. '         ' → logprob: -17.504413604736328

Token 1975: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015023599844425917
    2. '0' → logprob: -6.501502513885498
    3. ' (' → logprob: -17.376502990722656
    4. '   ' → logprob: -19.501502990722656
    5. '('' → logprob: -20.126502990722656
    6. ' ' → logprob: -20.251502990722656
    7. '`' → logprob: -20.501502990722656
    8. '(
' → logprob: -20.501502990722656
    9. '(-' → logprob: -20.626502990722656
    10. '```' → logprob: -21.001502990722656

Token 1976: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. '1' → logprob: -13.50000286102295
    3. '-' → logprob: -13.75000286102295
    4. 'ans' → logprob: -14.62500286102295
    5. 'len' → logprob: -17.750003814697266
    6. ' ' → logprob: -17.875003814697266
    7. '   ' → logprob: -18.000003814697266
    8. '"' → logprob: -18.250003814697266
    9. ''' → logprob: -18.875003814697266
    10. '`' → logprob: -19.000003814697266

Token 1977: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007433873601257801
    2. ')
' → logprob: -5.132433891296387
    3. '       ' → logprob: -6.507433891296387
    4. '           ' → logprob: -12.007433891296387
    5. '   ' → logprob: -13.007433891296387
    6. ')
' → logprob: -13.757433891296387
    7. '),' → logprob: -14.632433891296387
    8. ')**' → logprob: -15.257433891296387
    9. '')' → logprob: -15.382433891296387
    10. ')return' → logprob: -15.382433891296387

Token 1978: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006217789836227894
    2. '           ' → logprob: -5.131217956542969
    3. 'else' → logprob: -8.381217956542969
    4. '<|end|>' → logprob: -10.506217956542969
    5. '   ' → logprob: -11.006217956542969
    6. ')' → logprob: -12.381217956542969
    7. '               ' → logprob: -12.506217956542969
    8. ' else' → logprob: -12.881217956542969
    9. 'continue' → logprob: -13.256217956542969
    10. '```' → logprob: -13.631217956542969

Token 1979: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2533300817012787
    2. 'else' (adapté à ' else') → logprob: -1.503330111503601
    3. ' else' → logprob: -6.628330230712891
    4. '   ' → logprob: -10.12833023071289
    5. '```' → logprob: -11.62833023071289
    6. '           ' → logprob: -11.87833023071289
    7. 'elif' → logprob: -12.12833023071289
    8. '	else' → logprob: -12.25333023071289
    9. '<|end|>' → logprob: -12.25333023071289
    10. '_else' → logprob: -13.25333023071289

Token 1980: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05483556166291237
    2. 'print' → logprob: -3.554835557937622
    3. ':' → logprob: -4.054835796356201
    4. ':
' → logprob: -5.304835796356201
    5. ' print' → logprob: -6.179835796356201
    6. '   ' → logprob: -8.554835319519043
    7. '       ' → logprob: -10.054835319519043
    8. '               ' → logprob: -10.304835319519043
    9. '          ' → logprob: -10.429835319519043
    10. '```' → logprob: -10.804835319519043

Token 1981: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002938833087682724
    2. 'print' → logprob: -6.002938747406006
    3. '       ' → logprob: -8.252939224243164
    4. '   ' → logprob: -9.502939224243164
    5. ' print' → logprob: -9.627939224243164
    6. '               ' → logprob: -10.127939224243164
    7. '                   ' → logprob: -11.877939224243164
    8. '         ' → logprob: -12.627939224243164
    9. '	       ' → logprob: -12.752939224243164
    10. '                       ' → logprob: -13.127939224243164

Token 1982: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006742135155946016
    2. ' print' → logprob: -5.256742000579834
    3. '           ' → logprob: -6.506742000579834
    4. '   ' → logprob: -11.506742477416992
    5. '```' → logprob: -13.006742477416992
    6. '       ' → logprob: -13.756742477416992
    7. '               ' → logprob: -14.506742477416992
    8. '	print' → logprob: -17.131742477416992
    9. '_print' → logprob: -18.256742477416992
    10. '``' → logprob: -18.381742477416992

Token 1983: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.007425007410347462
    2. '(dist' → logprob: -5.007424831390381
    3. '(' → logprob: -7.257424831390381
    4. 'dist' → logprob: -13.007425308227539
    5. 'ans' → logprob: -13.507425308227539
    6. ' ans' → logprob: -16.00742530822754
    7. '(ord' → logprob: -16.00742530822754
    8. '(answer' → logprob: -16.13242530822754
    9. '(abs' → logprob: -16.13242530822754
    10. '('' → logprob: -16.38242530822754

Token 1984: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002201047958806157
    2. '+' → logprob: -6.127201080322266
    3. ' +' → logprob: -12.377201080322266
    4. '+)' → logprob: -12.377201080322266
    5. ')
' → logprob: -12.877201080322266
    6. ' )' → logprob: -13.127201080322266
    7. '```' → logprob: -13.877201080322266
    8. '<|end|>' → logprob: -14.627201080322266
    9. '   ' → logprob: -15.127201080322266
    10. '**' → logprob: -15.627201080322266

Token 1985: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1986: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.313606321811676
    2. ' __' → logprob: -1.3136062622070312
    3. '(__' → logprob: -9.188606262207031
    4. 'main' → logprob: -9.938606262207031
    5. 'if' → logprob: -10.063606262207031
    6. ' main' → logprob: -10.188606262207031
    7. '```' → logprob: -10.438606262207031
    8. '___' → logprob: -10.938606262207031
    9. '_' → logprob: -11.188606262207031
    10. '____' → logprob: -11.688606262207031

Token 1987: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002005961025133729
    2. '==' → logprob: -6.3770060539245605
    3. ' ==' → logprob: -8.752005577087402
    4. '__.__' → logprob: -10.002005577087402
    5. '```' → logprob: -10.252005577087402
    6. '()' → logprob: -11.377005577087402
    7. '()==' → logprob: -11.752005577087402
    8. '=="' → logprob: -11.877005577087402
    9. '__.' → logprob: -12.002005577087402
    10. '___' → logprob: -12.627005577087402

Token 1988: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00037979125045239925
    2. '__.__' → logprob: -8.00037956237793
    3. '__.' → logprob: -11.12537956237793
    4. '==' → logprob: -11.50037956237793
    5. '__
' → logprob: -12.25037956237793
    6. '__('' → logprob: -12.62537956237793
    7. '```' → logprob: -12.75037956237793
    8. '__["' → logprob: -13.00037956237793
    9. '____' → logprob: -13.87537956237793
    10. '___' → logprob: -14.00037956237793

Token 1989: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31785908341407776
    2. '__' → logprob: -1.5678590536117554
    3. '=="' → logprob: -3.317859172821045
    4. '=='' → logprob: -3.942859172821045
    5. ' ==' → logprob: -4.817859172821045
    6. '==
' → logprob: -9.817858695983887
    7. '===' → logprob: -11.942858695983887
    8. '==='' → logprob: -12.192858695983887
    9. ''' → logprob: -12.317858695983887
    10. '=' → logprob: -12.442858695983887

Token 1990: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.061992332339286804
    2. ''' → logprob: -2.8119924068450928
    3. '__' → logprob: -10.686992645263672
    4. ' "__' → logprob: -13.436992645263672
    5. '"name' → logprob: -16.311992645263672
    6. ' '__' → logprob: -16.811992645263672
    7. '"<?' → logprob: -16.936992645263672
    8. ''"' → logprob: -17.061992645263672
    9. '"user' → logprob: -17.061992645263672
    10. '"class' → logprob: -17.436992645263672

Token 1991: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3145800232887268
    2. '__' → logprob: -1.314579963684082
    3. '"' → logprob: -6.814579963684082
    4. 'name' → logprob: -9.814579963684082
    5. ''' → logprob: -9.814579963684082
    6. 'python' → logprob: -10.314579963684082
    7. 'built' → logprob: -10.689579963684082
    8. '__":
' → logprob: -10.814579963684082
    9. '___' → logprob: -11.939579963684082
    10. '____' → logprob: -11.939579963684082

Token 1992: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0192075427621603
    2. '__' → logprob: -4.14420747756958
    3. '__':
' → logprob: -5.76920747756958
    4. '==' → logprob: -11.144207954406738
    5. '__["' → logprob: -12.019207954406738
    6. '__
' → logprob: -12.519207954406738
    7. '():
' → logprob: -12.519207954406738
    8. '```' → logprob: -13.019207954406738
    9. '__.' → logprob: -13.269207954406738
    10. '__.__' → logprob: -13.269207954406738

Token 1993: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.010023445822298527
    2. '   ' → logprob: -4.635023593902588
    3. '	main' → logprob: -8.63502311706543
    4. ' main' → logprob: -9.51002311706543
    5. '(main' → logprob: -12.26002311706543
    6. '```' → logprob: -12.38502311706543
    7. '    
' → logprob: -12.76002311706543
    8. '_main' → logprob: -12.88502311706543
    9. '__' → logprob: -14.88502311706543
    10. 'mainwindow' → logprob: -15.63502311706543

Token 1994: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.75
    3. '	main' → logprob: -21.0
    4. '_main' → logprob: -23.375
    5. '   ' → logprob: -24.25
    6. '```' → logprob: -24.5
    7. '(main' → logprob: -24.875
    8. '.main' → logprob: -25.0
    9. 'Main' → logprob: -25.875
    10. '主' → logprob: -28.375

Token 1995: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1993
Tokens correctement prédits (1ère position, stricte): 486
Tokens correctement prédits (1ère position, avec adaptation): 528
Tokens correctement prédits (top 10): 1238
Précision stricte (1ère position): 24.39%
Précision adaptée (1ère position): 26.49%
Précision (top 10): 62.12%
================================================================================
