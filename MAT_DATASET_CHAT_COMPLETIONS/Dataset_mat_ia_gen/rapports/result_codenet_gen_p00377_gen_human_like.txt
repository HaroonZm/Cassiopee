================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:03:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, C = map(int, input().split())
cakes = list(map(int, input().split()))

total_cakes = sum(cakes)
total_people = N + 1  # friends + me

cakes_per_person = total_cakes // total_people
remainder = total_cakes % total_people

# Each person gets cakes_per_person pieces, host gets the remainder as well
host_cakes = cakes_per_person + remainder
print(host_cakes)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' C' (ID: 363)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02851901203393936
    2. ',' → logprob: -4.028519153594971
    3. '[' → logprob: -5.403519153594971
    4. ' =' → logprob: -6.028519153594971
    5. ')' → logprob: -6.778519153594971
    6. '+' → logprob: -7.778519153594971
    7. '*' → logprob: -7.903519153594971
    8. '(' → logprob: -7.903519153594971
    9. ';' → logprob: -8.028518676757812
    10. '.' → logprob: -8.153518676757812

Token 4: ' map' (ID: 4014)
  Prédit: ' torch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' torch' → logprob: -0.9306462407112122
    2. ' ' → logprob: -1.0556461811065674
    3. ' map' → logprob: -2.3056461811065674
    4. 'map' → logprob: -3.4306461811065674
    5. 'torch' → logprob: -3.6806461811065674
    6. '10' → logprob: -3.6806461811065674
    7. ' input' → logprob: -4.6806464195251465
    8. ' np' → logprob: -4.6806464195251465
    9. ' tf' → logprob: -5.0556464195251465
    10. ' x' → logprob: -5.0556464195251465

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01898052729666233
    2. '(lambda' → logprob: -4.143980503082275
    3. '(int' → logprob: -6.893980503082275
    4. '<|end|>' → logprob: -7.393980503082275
    5. '(str' → logprob: -7.643980503082275
    6. '```' → logprob: -8.393980979919434
    7. '(user' → logprob: -9.268980979919434
    8. ')' → logprob: -9.768980979919434
    9. '(input' → logprob: -10.018980979919434
    10. '(token' → logprob: -10.518980979919434

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8900390267372131
    2. '(' → logprob: -1.2650389671325684
    3. '(input' → logprob: -1.2650389671325684
    4. '```' → logprob: -4.890038967132568
    5. '(user' → logprob: -5.390038967132568
    6. '(int' → logprob: -5.765038967132568
    7. '`)' → logprob: -6.140038967132568
    8. ')(' → logprob: -6.765038967132568
    9. '`' → logprob: -7.140038967132568
    10. '(str' → logprob: -7.265038967132568

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20154334604740143
    2. ' input' → logprob: -1.7015433311462402
    3. '(input' → logprob: -9.076543807983398
    4. ')' → logprob: -11.326543807983398
    5. ',input' → logprob: -13.326543807983398
    6. '```' → logprob: -14.451543807983398
    7. '<input' → logprob: -15.326543807983398
    8. '	input' → logprob: -15.451543807983398
    9. '=input' → logprob: -15.451543807983398
    10. '[input' → logprob: -15.451543807983398

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6528234481811523
    2. '())' → logprob: -1.5278234481811523
    3. '('' → logprob: -1.9028234481811523
    4. '(' → logprob: -3.9028234481811523
    5. '(""))' → logprob: -4.027823448181152
    6. '().' → logprob: -4.527823448181152
    7. '`()' → logprob: -4.652823448181152
    8. ')' → logprob: -4.652823448181152
    9. '("' → logprob: -5.027823448181152
    10. '("")' → logprob: -5.152823448181152

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00044425477972254157
    2. 'strip' → logprob: -7.750444412231445
    3. 'rstrip' → logprob: -11.375444412231445
    4. ' split' → logprob: -13.625444412231445
    5. ')' → logprob: -14.750444412231445
    6. '(split' → logprob: -15.125444412231445
    7. 'read' → logprob: -15.875444412231445
    8. 'spl' → logprob: -16.375444412231445
    9. 'startswith' → logprob: -17.250444412231445
    10. 'replace' → logprob: -17.500444412231445

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05127289146184921
    2. '())' → logprob: -3.3012728691101074
    3. '))' → logprob: -4.551272869110107
    4. '()' → logprob: -6.426272869110107
    5. '(' → logprob: -7.301272869110107
    6. '`)' → logprob: -8.926273345947266
    7. '()))' → logprob: -9.551273345947266
    8. '')' → logprob: -10.676273345947266
    9. '('' → logprob: -10.676273345947266
    10. ')`' → logprob: -12.051273345947266

Token 11: 'cakes' (ID: 165133)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7990531325340271
    2. '\n' → logprob: -1.9240531921386719
    3. 'a' → logprob: -2.674053192138672
    4. '```' → logprob: -2.799053192138672
    5. 'for' → logprob: -2.924053192138672
    6. '[' → logprob: -3.049053192138672
    7. '<|end|>' → logprob: -3.299053192138672
    8. ')' → logprob: -3.674053192138672
    9. 'x' → logprob: -3.799053192138672
    10. '\' → logprob: -4.174053192138672

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4857223927974701
    2. '_' → logprob: -1.7357224225997925
    3. ' =' → logprob: -2.860722303390503
    4. '=' → logprob: -3.360722303390503
    5. '[:]' → logprob: -3.735722303390503
    6. 's' → logprob: -3.860722303390503
    7. '_counts' → logprob: -3.985722303390503
    8. '.' → logprob: -4.110722541809082
    9. ')' → logprob: -4.360722541809082
    10. '_count' → logprob: -4.985722541809082

Token 13: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7597513198852539
    2. ' []' → logprob: -1.009751319885254
    3. '[' → logprob: -2.384751319885254
    4. ' [' → logprob: -3.134751319885254
    5. '[int' → logprob: -3.884751319885254
    6. 'list' → logprob: -4.884751319885254
    7. ' list' → logprob: -6.259751319885254
    8. '[input' → logprob: -6.884751319885254
    9. '[list' → logprob: -7.634751319885254
    10. '['' → logprob: -9.009751319885254

Token 14: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009587471140548587
    2. '(range' → logprob: -7.5009589195251465
    3. '(c' → logprob: -9.000958442687988
    4. '(

' → logprob: -9.500958442687988
    5. '(
' → logprob: -9.875958442687988
    6. '```' → logprob: -11.000958442687988
    7. '(int' → logprob: -11.250958442687988
    8. '(np' → logprob: -11.500958442687988
    9. '()' → logprob: -11.750958442687988
    10. '(open' → logprob: -11.875958442687988

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0022959671914577484
    2. '(' → logprob: -6.252295970916748
    3. '(str' → logprob: -8.37729549407959
    4. '(input' → logprob: -9.25229549407959
    5. 'int' → logprob: -10.87729549407959
    6. '<int' → logprob: -12.00229549407959
    7. '```' → logprob: -12.37729549407959
    8. '=int' → logprob: -13.00229549407959
    9. '(lambda' → logprob: -13.00229549407959
    10. '(
' → logprob: -13.37729549407959

Token 16: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.416471391916275
    2. ',input' → logprob: -1.4164713621139526
    3. ',' → logprob: -2.416471481323242
    4. '(' → logprob: -4.791471481323242
    5. '),' → logprob: -8.916471481323242
    6. ')' → logprob: -9.166471481323242
    7. 'input' → logprob: -9.166471481323242
    8. '=input' → logprob: -9.666471481323242
    9. ' ,' → logprob: -10.541471481323242
    10. '`,' → logprob: -10.791471481323242

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048587825149297714
    2. ' input' → logprob: -3.0485877990722656
    3. ',input' → logprob: -16.298587799072266
    4. '=input' → logprob: -16.548587799072266
    5. '(input' → logprob: -16.673587799072266
    6. '	input' → logprob: -16.923587799072266
    7. ' ' → logprob: -17.298587799072266
    8. ')' → logprob: -17.423587799072266
    9. '<input' → logprob: -17.673587799072266
    10. 'list' → logprob: -17.673587799072266

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002509904792532325
    2. '()' → logprob: -6.002510070800781
    3. '(' → logprob: -11.127510070800781
    4. '()))' → logprob: -12.252510070800781
    5. '())' → logprob: -12.252510070800781
    6. ' ().' → logprob: -12.502510070800781
    7. '.' → logprob: -13.377510070800781
    8. ')' → logprob: -13.502510070800781
    9. '()));' → logprob: -14.752510070800781
    10. '()`' → logprob: -14.877510070800781

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.935296834039036e-06
    2. 'strip' → logprob: -13.12500286102295
    3. 'rstrip' → logprob: -14.62500286102295
    4. ' split' → logprob: -15.25000286102295
    5. '(split' → logprob: -16.250003814697266
    6. 'spl' → logprob: -17.500003814697266
    7. 'plit' → logprob: -20.125003814697266
    8. 'sp' → logprob: -20.500003814697266
    9. '.split' → logprob: -20.750003814697266
    10. ')' → logprob: -20.750003814697266

Token 20: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.09800587594509125
    2. '))' → logprob: -2.473005771636963
    3. '())' → logprob: -5.223005771636963
    4. '()' → logprob: -5.973005771636963
    5. ')' → logprob: -7.098005771636963
    6. '(' → logprob: -8.598006248474121
    7. '()))
' → logprob: -10.348006248474121
    8. '()))

' → logprob: -11.348006248474121
    9. '()));' → logprob: -11.723006248474121
    10. '()),' → logprob: -12.098006248474121

Token 21: 'total' (ID: 9577)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.058139361441135406
    2. 'for' → logprob: -4.308139324188232
    3. 'c' → logprob: -4.433139324188232
    4. 'dp' → logprob: -4.808139324188232
    5. 'count' → logprob: -5.308139324188232
    6. ' cakes' → logprob: -5.933139324188232
    7. 'sorted' → logprob: -6.183139324188232
    8. 'cake' → logprob: -6.183139324188232
    9. 'result' → logprob: -6.308139324188232
    10. 'sum' → logprob: -6.308139324188232

Token 22: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013339860364794731
    2. '(' → logprob: -5.388339996337891
    3. '_c' → logprob: -6.013339996337891
    4. '_space' → logprob: -6.013339996337891
    5. '_sum' → logprob: -6.263339996337891
    6. '_count' → logprob: -7.763339996337891
    7. 's' → logprob: -8.01333999633789
    8. '_s' → logprob: -8.38833999633789
    9. ')' → logprob: -9.13833999633789
    10. '_counts' → logprob: -9.38833999633789

Token 23: 'akes' (ID: 6861)
  Prédit: 'akes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'akes' → logprob: -0.47916167974472046
    2. '_' → logprob: -1.2291617393493652
    3. 'ake' → logprob: -3.9791617393493652
    4. '=' → logprob: -4.104161739349365
    5. 'a' → logprob: -4.854161739349365
    6. 'ount' → logprob: -4.854161739349365
    7. '```' → logprob: -4.854161739349365
    8. 'ak' → logprob: -5.229161739349365
    9. ' =' → logprob: -5.604161739349365
    10. '_k' → logprob: -5.854161739349365

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0798766165971756
    2. '_' → logprob: -3.204876661300659
    3. '=' → logprob: -3.454876661300659
    4. ' ' → logprob: -6.32987642288208
    5. ' +=' → logprob: -6.57987642288208
    6. '[' → logprob: -8.204876899719238
    7. ')' → logprob: -8.329876899719238
    8. ' _' → logprob: -8.329876899719238
    9. '_space' → logprob: -8.954876899719238
    10. '.' → logprob: -9.329876899719238

Token 25: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5733979344367981
    2. '0' → logprob: -1.4483978748321533
    3. 'sum' → logprob: -1.9483978748321533
    4. ' ' → logprob: -2.9483978748321533
    5. 'cakes' → logprob: -5.698398113250732
    6. ' cakes' → logprob: -5.823398113250732
    7. ' C' → logprob: -9.948397636413574
    8. ' max' → logprob: -10.323397636413574
    9. 'C' → logprob: -10.323397636413574
    10. ' len' → logprob: -10.823397636413574

Token 26: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.018154505640268326
    2. '(' → logprob: -4.018154621124268
    3. '(s' → logprob: -13.64315414428711
    4. ' (' → logprob: -14.01815414428711
    5. '((' → logprob: -14.14315414428711
    6. '(k' → logprob: -14.26815414428711
    7. '(a' → logprob: -14.76815414428711
    8. '(total' → logprob: -15.64315414428711
    9. '(`' → logprob: -16.01815414428711
    10. '(n' → logprob: -17.01815414428711

Token 27: 'akes' (ID: 6861)
  Prédit: 'akes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'akes' → logprob: -0.010038553737103939
    2. 'cakes' → logprob: -4.885038375854492
    3. 'a' → logprob: -7.010038375854492
    4. '_' → logprob: -7.510038375854492
    5. '```' → logprob: -7.635038375854492
    6. 'ak' → logprob: -9.010038375854492
    7. ')' → logprob: -9.135038375854492
    8. '_c' → logprob: -9.885038375854492
    9. '_a' → logprob: -10.760038375854492
    10. '`' → logprob: -10.760038375854492

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.061676347395405e-05
    2. ' )' → logprob: -10.25005054473877
    3. '-' → logprob: -12.75005054473877
    4. '+' → logprob: -13.00005054473877
    5. '[' → logprob: -13.00005054473877
    6. '#' → logprob: -13.87505054473877
    7. ')
' → logprob: -13.87505054473877
    8. '))' → logprob: -14.25005054473877
    9. '`)' → logprob: -14.25005054473877
    10. ' -' → logprob: -14.25005054473877

Token 29: 'total' (ID: 9577)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1522747278213501
    2. ' if' → logprob: -2.7772746086120605
    3. 'max' → logprob: -3.2772746086120605
    4. 'print' → logprob: -5.0272746086120605
    5. '```' → logprob: -5.2772746086120605
    6. 'diff' → logprob: -5.4022746086120605
    7. 'while' → logprob: -5.7772746086120605
    8. 'for' → logprob: -5.7772746086120605
    9. 'min' → logprob: -5.9022746086120605
    10. 'remaining' → logprob: -6.6522746086120605

Token 30: '_people' (ID: 157787)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.03904399275779724
    2. '_' → logprob: -3.28904390335083
    3. '_s' → logprob: -8.789044380187988
    4. '_co' → logprob: -9.164044380187988
    5. '_d' → logprob: -10.039044380187988
    6. '_p' → logprob: -10.164044380187988
    7. '_con' → logprob: -10.289044380187988
    8. 's' → logprob: -10.414044380187988
    9. '_ch' → logprob: -10.789044380187988
    10. '\' → logprob: -10.789044380187988

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02054504305124283
    2. '=' → logprob: -3.89554500579834
    3. ' ' → logprob: -13.27054500579834
    4. ')' → logprob: -14.02054500579834
    5. ' +=' → logprob: -15.64554500579834
    6. '_' → logprob: -15.89554500579834
    7. 's' → logprob: -16.270545959472656
    8. ' =
' → logprob: -16.770545959472656
    9. '```' → logprob: -16.895545959472656
    10. '  ' → logprob: -17.395545959472656

Token 32: ' N' (ID: 478)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5454158782958984
    2. ' C' → logprob: -0.9204158782958984
    3. ' N' → logprob: -4.545415878295898
    4. 'N' → logprob: -4.670415878295898
    5. ' sum' → logprob: -7.045415878295898
    6. ' ' → logprob: -7.170415878295898
    7. 'sum' → logprob: -8.170415878295898
    8. ' total' → logprob: -9.795415878295898
    9. 'total' → logprob: -10.295415878295898
    10. '0' → logprob: -11.295415878295898

Token 33: ' +' (ID: 659)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8135413527488708
    2. 'while' → logprob: -1.6885414123535156
    3. 'max' → logprob: -2.3135414123535156
    4. 'for' → logprob: -2.9385414123535156
    5. ' if' → logprob: -3.0635414123535156
    6. '
' → logprob: -3.0635414123535156
    7. '```' → logprob: -3.8135414123535156
    8. '\' → logprob: -3.8135414123535156
    9. ' while' → logprob: -4.563541412353516
    10. ' 
' → logprob: -4.813541412353516

Token 34: ' ' (ID: 220)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.048630282282829285
    2. ' C' → logprob: -3.0486302375793457
    3. '1' → logprob: -10.298630714416504
    4. ' ' → logprob: -12.298630714416504
    5. '0' → logprob: -13.173630714416504
    6. '2' → logprob: -14.173630714416504
    7. '(C' → logprob: -15.048630714416504
    8. ' (' → logprob: -15.798630714416504
    9. '	C' → logprob: -15.798630714416504
    10. 'c' → logprob: -15.986130714416504

Token 35: '1' (ID: 16)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0010288810590282083
    2. ' C' → logprob: -7.376029014587402
    3. '1' → logprob: -7.876029014587402
    4. ' ' → logprob: -12.126029014587402
    5. '2' → logprob: -12.501029014587402
    6. '0' → logprob: -12.626029014587402
    7. '(C' → logprob: -13.501029014587402
    8. '   ' → logprob: -13.751029014587402
    9. '(' → logprob: -13.751029014587402
    10. 'M' → logprob: -14.001029014587402

Token 36: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07607010751962662
    2. '
' → logprob: -3.9510700702667236
    3. '\n' → logprob: -4.201070308685303
    4. 'if' → logprob: -4.451070308685303
    5. '<|end|>' → logprob: -4.826070308685303
    6. '\' → logprob: -5.576070308685303
    7. ' 
' → logprob: -5.951070308685303
    8. '```' → logprob: -6.076070308685303
    9. 'for' → logprob: -6.451070308685303
    10. '' → logprob: -6.576070308685303

Token 37: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04914488270878792
    2. '\n' → logprob: -3.924144983291626
    3. '
' → logprob: -4.549144744873047
    4. 'if' → logprob: -5.049144744873047
    5. '\' → logprob: -6.674144744873047
    6. 'max' → logprob: -6.674144744873047
    7. '```' → logprob: -6.799144744873047
    8. '<|end|>' → logprob: -6.799144744873047
    9. ' 
' → logprob: -6.924144744873047
    10. '' → logprob: -7.174144744873047

Token 38: ' friends' (ID: 5664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22830085456371307
    2. '<|end|>' → logprob: -1.7283008098602295
    3. '1' → logprob: -4.353301048278809
    4. ' total' → logprob: -5.853301048278809
    5. '<|end|>' → logprob: -5.978301048278809
    6. '#' → logprob: -6.603301048278809
    7. '
' → logprob: -6.728301048278809
    8. ' #' → logprob: -6.853301048278809
    9. '```' → logprob: -6.853301048278809
    10. '0' → logprob: -7.478301048278809

Token 39: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' me' (ID: 668)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12886880338191986
    2. ' ' → logprob: -2.128868818283081
    3. ' C' → logprob: -8.37886905670166
    4. ' you' → logprob: -8.44136905670166
    5. 'you' → logprob: -8.69136905670166
    6. 'chef' → logprob: -8.81636905670166
    7. ' chef' → logprob: -9.50386905670166
    8. ' host' → logprob: -9.56636905670166
    9. 'C' → logprob: -9.62886905670166
    10. 'host' → logprob: -9.62886905670166

Token 41: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22425617277622223
    2. 'max' → logprob: -2.7242562770843506
    3. 'if' → logprob: -3.0992562770843506
    4. '\n' → logprob: -3.4742562770843506
    5. '
' → logprob: -4.0992560386657715
    6. '\' → logprob: -4.4742560386657715
    7. '```' → logprob: -4.9742560386657715
    8. 'while' → logprob: -5.8492560386657715
    9. '' → logprob: -6.0992560386657715
    10. 'def' → logprob: -6.8492560386657715

Token 42: 'cakes' (ID: 165133)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8548825979232788
    2. ' if' → logprob: -1.7298825979232788
    3. 'if' → logprob: -1.8548825979232788
    4. ' max' → logprob: -1.9798825979232788
    5. 'print' → logprob: -4.229882717132568
    6. 'portion' → logprob: -4.729882717132568
    7. 'cakes' → logprob: -4.729882717132568
    8. 'possible' → logprob: -4.854882717132568
    9. 'remaining' → logprob: -5.354882717132568
    10. '```' → logprob: -5.354882717132568

Token 43: '_per' (ID: 10938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.03271196782588959
    2. '_' → logprob: -3.907711982727051
    3. '_people' → logprob: -4.907711982727051
    4. '_c' → logprob: -6.282711982727051
    5. '_friend' → logprob: -7.032711982727051
    6. '_piece' → logprob: -7.907711982727051
    7. '=' → logprob: -8.28271198272705
    8. '_p' → logprob: -8.28271198272705
    9. '_cut' → logprob: -8.40771198272705
    10. 'person' → logprob: -8.65771198272705

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001503313542343676
    2. '=' → logprob: -6.5015034675598145
    3. ' ' → logprob: -14.126502990722656
    4. ' =
' → logprob: -16.001502990722656
    5. ')' → logprob: -16.751502990722656
    6. ' =)' → logprob: -17.376502990722656
    7. ',' → logprob: -17.751502990722656
    8. ' ==' → logprob: -18.001502990722656
    9. ' ' → logprob: -18.001502990722656
    10. '.' → logprob: -18.251502990722656

Token 46: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.05491986125707626
    2. 'total' → logprob: -2.929919958114624
    3. '(total' → logprob: -10.429920196533203
    4. ' ' → logprob: -13.304920196533203
    5. ' cakes' → logprob: -13.429920196533203
    6. ' max' → logprob: -13.429920196533203
    7. ' ' → logprob: -14.304920196533203
    8. ' (' → logprob: -14.554920196533203
    9. '	total' → logprob: -14.679920196533203
    10. 'cakes' → logprob: -14.929920196533203

Token 47: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00026383911608718336
    2. '_' → logprob: -8.250264167785645
    3. '_total' → logprob: -13.750264167785645
    4. '//' → logprob: -14.875264167785645
    5. ' _' → logprob: -15.375264167785645
    6. '```' → logprob: -15.500264167785645
    7. '_people' → logprob: -15.625264167785645
    8. '_co' → logprob: -16.125263214111328
    9. 'cakes' → logprob: -16.625263214111328
    10. 'c' → logprob: -16.750263214111328

Token 48: 'akes' (ID: 6861)
  Prédit: 'akes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'akes' → logprob: -0.019387487322092056
    2. 'cakes' → logprob: -4.269387722015381
    3. '/' → logprob: -6.644387722015381
    4. '```' → logprob: -7.019387722015381
    5. 'okes' → logprob: -7.519387722015381
    6. '_' → logprob: -7.519387722015381
    7. 'ake' → logprob: -8.144387245178223
    8. 'people' → logprob: -8.894387245178223
    9. 'ak' → logprob: -8.894387245178223
    10. 'k' → logprob: -9.144387245178223

Token 49: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.02998466230928898
    2. '//' → logprob: -3.529984712600708
    3. ' /' → logprob: -8.779984474182129
    4. '/' → logprob: -9.904984474182129
    5. ' ' → logprob: -11.029984474182129
    6. '`' → logprob: -12.779984474182129
    7. '```' → logprob: -12.904984474182129
    8. ' ' → logprob: -13.529984474182129
    9. ''' → logprob: -13.779984474182129
    10. 'div' → logprob: -13.779984474182129

Token 50: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0005532711511477828
    2. ' total' → logprob: -7.500553131103516
    3. '(total' → logprob: -15.500553131103516
    4. ' ' → logprob: -16.625553131103516
    5. '	total' → logprob: -17.625553131103516
    6. 't' → logprob: -19.125553131103516
    7. 'tot' → logprob: -19.125553131103516
    8. 'to' → logprob: -19.750553131103516
    9. '$total' → logprob: -20.000553131103516
    10. '   ' → logprob: -20.125553131103516

Token 51: '_people' (ID: 157787)
  Prédit: '_people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -1.700132997939363e-05
    2. '_' → logprob: -11.750017166137695
    3. '_person' → logprob: -11.875017166137695
    4. 'people' → logprob: -14.250017166137695
    5. '_pe' → logprob: -14.625017166137695
    6. '_players' → logprob: -15.000017166137695
    7. 'People' → logprob: -15.375017166137695
    8. '_p' → logprob: -15.375017166137695
    9. '_users' → logprob: -15.875017166137695
    10. '_c' → logprob: -16.875017166137695

Token 52: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.014193058013916
    2. 'remaining' → logprob: -1.264193058013916
    3. 'if' → logprob: -1.389193058013916
    4. 're' → logprob: -3.139193058013916
    5. ' if' → logprob: -4.014193058013916
    6. 'cakes' → logprob: -4.514193058013916
    7. ' remainder' → logprob: -4.889193058013916
    8. 'extra' → logprob: -5.639193058013916
    9. 'for' → logprob: -5.764193058013916
    10. 'left' → logprob: -5.889193058013916

Token 53: 're' (ID: 264)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7292541861534119
    2. 'print' → logprob: -1.1042542457580566
    3. 'remaining' → logprob: -2.3542542457580566
    4. 'for' → logprob: -2.6042542457580566
    5. 're' → logprob: -4.729254245758057
    6. ' if' → logprob: -6.479254245758057
    7. 'cakes' → logprob: -6.979254245758057
    8. 'left' → logprob: -7.354254245758057
    9. 'remain' → logprob: -7.354254245758057
    10. 'while' → logprob: -7.479254245758057

Token 54: 'mainder' (ID: 40886)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6873877644538879
    2. 'm' → logprob: -1.3123877048492432
    3. 'mainder' → logprob: -1.5623877048492432
    4. 's' → logprob: -4.687387943267822
    5. 'st' → logprob: -5.312387943267822
    6. 'ma' → logprob: -6.812387943267822
    7. 'mind' → logprob: -6.937387943267822
    8. 'turn' → logprob: -7.062387943267822
    9. 'member' → logprob: -8.687387466430664
    10. 'mn' → logprob: -8.812387466430664

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04458492994308472
    2. '=' → logprob: -3.6695849895477295
    3. '_' → logprob: -4.04458475112915
    4. 's' → logprob: -7.91958475112915
    5. '_c' → logprob: -9.044585227966309
    6. ' ' → logprob: -10.544585227966309
    7. '  ' → logprob: -10.669585227966309
    8. ' _' → logprob: -10.919585227966309
    9. '_=' → logprob: -11.544585227966309
    10. ')' → logprob: -12.419585227966309

Token 56: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.10021691024303436
    2. 'total' → logprob: -2.350216865539551
    3. '(total' → logprob: -12.10021686553955
    4. ' ' → logprob: -13.10021686553955
    5. '	total' → logprob: -13.72521686553955
    6. '$total' → logprob: -14.72521686553955
    7. ' tota' → logprob: -15.22521686553955
    8. ' ' → logprob: -15.22521686553955
    9. '_total' → logprob: -15.97521686553955
    10. ',total' → logprob: -16.225217819213867

Token 57: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -14.000001907348633
    3. 'cakes' → logprob: -14.750001907348633
    4. 'c' → logprob: -15.000001907348633
    5. '_co' → logprob: -16.750001907348633
    6. '_people' → logprob: -17.750001907348633
    7. ' _' → logprob: -17.750001907348633
    8. ' cakes' → logprob: -17.750001907348633
    9. '_tokens' → logprob: -18.500001907348633
    10. '```' → logprob: -18.750001907348633

Token 58: 'akes' (ID: 6861)
  Prédit: 'akes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'akes' → logprob: -0.0023567371536046267
    2. 'cakes' → logprob: -6.50235652923584
    3. 'ak' → logprob: -8.25235652923584
    4. '```' → logprob: -8.50235652923584
    5. 'a' → logprob: -9.00235652923584
    6. 'ake' → logprob: -9.75235652923584
    7. 'okes' → logprob: -10.43985652923584
    8. 'aked' → logprob: -11.06485652923584
    9. '_' → logprob: -11.18985652923584
    10. '``' → logprob: -11.75235652923584

Token 59: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.00673360750079155
    2. '%' → logprob: -5.006733417510986
    3. ' %
' → logprob: -11.631733894348145
    4. ' ' → logprob: -13.006733894348145
    5. ' ' → logprob: -13.006733894348145
    6. '```' → logprob: -14.006733894348145
    7. ')' → logprob: -14.131733894348145
    8. ' %

' → logprob: -14.131733894348145
    9. '<|end|>' → logprob: -14.131733894348145
    10. '_' → logprob: -14.631733894348145

Token 60: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.4741154611110687
    2. 'total' → logprob: -0.9741154909133911
    3. ' ' → logprob: -10.474115371704102
    4. '(total' → logprob: -11.849115371704102
    5. '	total' → logprob: -13.724115371704102
    6. 't' → logprob: -14.849115371704102
    7. '_total' → logprob: -14.974115371704102
    8. '$total' → logprob: -16.0991153717041
    9. ' ' → logprob: -16.0991153717041
    10. 'to' → logprob: -16.2241153717041

Token 61: '_people' (ID: 157787)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.008615515194833279
    2. '_people' → logprob: -4.758615493774414
    3. '_person' → logprob: -15.133615493774414
    4. 'c' → logprob: -15.133615493774414
    5. 'people' → logprob: -15.758615493774414
    6. '_p' → logprob: -15.883615493774414
    7. '_pe' → logprob: -16.008615493774414
    8. '_' → logprob: -16.883615493774414
    9. '_co' → logprob: -17.383615493774414
    10. 'People' → logprob: -17.508615493774414

Token 62: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5980608463287354
    2. '
' → logprob: -1.2230608463287354
    3. 'print' → logprob: -2.9730608463287354
    4. 'for' → logprob: -3.3480608463287354
    5. ' if' → logprob: -3.3480608463287354
    6. '\n' → logprob: -4.473060607910156
    7. 'cakes' → logprob: -5.223060607910156
    8. '```' → logprob: -5.598060607910156
    9. ' cakes' → logprob: -6.098060607910156
    10. '<|end|>' → logprob: -6.223060607910156

Token 63: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16176165640354156
    2. 'print' → logprob: -2.53676176071167
    3. 'for' → logprob: -2.78676176071167
    4. 'cakes' → logprob: -5.16176176071167
    5. 'i' → logprob: -7.53676176071167
    6. '#' → logprob: -7.91176176071167
    7. ' if' → logprob: -7.91176176071167
    8. 'result' → logprob: -8.036761283874512
    9. 'cake' → logprob: -8.411761283874512
    10. '```' → logprob: -8.536761283874512

Token 64: ' Each' (ID: 11555)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33686181902885437
    2. ' for' → logprob: -1.9618618488311768
    3. 'if' → logprob: -2.4618618488311768
    4. ' print' → logprob: -3.8368618488311768
    5. 'for' → logprob: -3.9618618488311768
    6. 'print' → logprob: -4.086861610412598
    7. ' cakes' → logprob: -7.211861610412598
    8. ' If' → logprob: -7.961861610412598
    9. 'If' → logprob: -8.211861610412598
    10. ' while' → logprob: -8.586861610412598

Token 65: ' person' (ID: 1647)
  Prédit: 'friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friend' → logprob: -0.16333888471126556
    2. 'person' → logprob: -2.0383388996124268
    3. ' friend' → logprob: -4.163338661193848
    4. ' person' → logprob: -5.913338661193848
    5. 'cake' → logprob: -6.288338661193848
    6. 'print' → logprob: -9.288338661193848
    7. '```' → logprob: -10.038338661193848
    8. 'f' → logprob: -10.288338661193848
    9. ' cake' → logprob: -10.413338661193848
    10. '_friend' → logprob: -11.038338661193848

Token 66: ' gets' (ID: 8625)
  Prédit: ' gets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gets' → logprob: -0.4647776484489441
    2. 'gets' → logprob: -1.0897777080535889
    3. 'should' → logprob: -4.46477746963501
    4. ' should' → logprob: -4.96477746963501
    5. 'can' → logprob: -5.08977746963501
    6. 'get' → logprob: -5.83977746963501
    7. ' can' → logprob: -6.08977746963501
    8. ' will' → logprob: -6.83977746963501
    9. 'will' → logprob: -7.08977746963501
    10. 'rece' → logprob: -7.83977746963501

Token 67: ' cakes' (ID: 61222)
  Prédit: ' cakes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cakes' → logprob: -0.13839726150035858
    2. 'cakes' → logprob: -2.138397216796875
    3. ''' → logprob: -5.138397216796875
    4. '"' → logprob: -5.638397216796875
    5. ' '' → logprob: -6.638397216796875
    6. ' "' → logprob: -8.263397216796875
    7. ' a' → logprob: -8.763397216796875
    8. '```' → logprob: -9.263397216796875
    9. '`' → logprob: -10.138397216796875
    10. ' `' → logprob: -10.263397216796875

Token 68: '_per' (ID: 10938)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6195980310440063
    2. '=' → logprob: -1.7445980310440063
    3. 'if' → logprob: -2.494597911834717
    4. ' +=' → logprob: -2.619597911834717
    5. 'cakes' → logprob: -3.369597911834717
    6. ' cakes' → logprob: -3.744597911834717
    7. '_per' → logprob: -3.994597911834717
    8. '+=' → logprob: -3.994597911834717
    9. ',' → logprob: -4.869597911834717
    10. ' if' → logprob: -5.119597911834717

Token 69: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -2.165027217415627e-05
    2. '_' → logprob: -11.000021934509277
    3. '_p' → logprob: -13.125021934509277
    4. '_people' → logprob: -14.125021934509277
    5. '_per' → logprob: -14.375021934509277
    6. 'person' → logprob: -14.875021934509277
    7. ' _' → logprob: -15.125021934509277
    8. '_c' → logprob: -15.250021934509277
    9. '```' → logprob: -15.625021934509277
    10. '_PERSON' → logprob: -16.62502098083496

Token 70: ' pieces' (ID: 12762)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7957999110221863
    2. ' for' → logprob: -2.045799970626831
    3. '
' → logprob: -2.170799970626831
    4. '<|end|>' → logprob: -2.170799970626831
    5. 'if' → logprob: -2.670799970626831
    6. 'cakes' → logprob: -3.420799970626831
    7. '#' → logprob: -3.545799970626831
    8. ' cakes' → logprob: -4.295799732208252
    9. 'print' → logprob: -4.295799732208252
    10. ' if' → logprob: -4.545799732208252

Token 71: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30606597661972046
    2. 'if' → logprob: -1.4310660362243652
    3. 'remaining' → logprob: -4.931066036224365
    4. 'print' → logprob: -5.181066036224365
    5. ' for' → logprob: -5.556066036224365
    6. '#' → logprob: -6.181066036224365
    7. 'cakes' → logprob: -6.306066036224365
    8. 'pieces' → logprob: -7.306066036224365
    9. ' if' → logprob: -7.306066036224365
    10. 'left' → logprob: -7.431066036224365

Token 72: ' host' (ID: 5014)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.41070622205734253
    2. 'but' → logprob: -1.6607062816619873
    3. 'if' → logprob: -3.6607062816619873
    4. 'print' → logprob: -3.7857062816619873
    5. 're' → logprob: -4.035706043243408
    6. ' and' → logprob: -4.160706043243408
    7. 'cakes' → logprob: -4.410706043243408
    8. '#' → logprob: -4.535706043243408
    9. ' but' → logprob: -4.535706043243408
    10. 'for' → logprob: -4.910706043243408

Token 73: ' gets' (ID: 8625)
  Prédit: ' keeps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' keeps' → logprob: -0.24375993013381958
    2. ' gets' → logprob: -1.9937598705291748
    3. 'gets' → logprob: -3.118759870529175
    4. 'ke' → logprob: -3.993759870529175
    5. ' (' → logprob: -4.993760108947754
    6. ' eats' → logprob: -5.993760108947754
    7. 'e' → logprob: -7.243760108947754
    8. 's' → logprob: -7.368760108947754
    9. ' has' → logprob: -7.368760108947754
    10. '(' → logprob: -7.368760108947754

Token 74: ' the' (ID: 290)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.005010074470192194
    2. 're' → logprob: -5.50501012802124
    3. ' cakes' → logprob: -7.50501012802124
    4. ' the' → logprob: -9.255009651184082
    5. ' ' → logprob: -9.505009651184082
    6. 'cakes' → logprob: -9.755009651184082
    7. '"' → logprob: -10.130009651184082
    8. ''' → logprob: -10.630009651184082
    9. ' '' → logprob: -10.755009651184082
    10. ' ' → logprob: -11.005009651184082

Token 75: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.632944643497467
    2. ' remainder' → logprob: -0.757944643497467
    3. 'rest' → logprob: -9.25794506072998
    4. 'remaining' → logprob: -10.13294506072998
    5. ' rest' → logprob: -10.25794506072998
    6. ' ' → logprob: -10.50794506072998
    7. ' re' → logprob: -10.63294506072998
    8. ' extra' → logprob: -11.13294506072998
    9. 'r' → logprob: -11.13294506072998
    10. '+' → logprob: -11.25794506072998

Token 76: ' as' (ID: 472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0895731449127197
    2. 'print' → logprob: -1.4645731449127197
    3. 'for' → logprob: -1.7145731449127197
    4. 'cakes' → logprob: -2.4645731449127197
    5. '.' → logprob: -3.4645731449127197
    6. 'cake' → logprob: -3.7145731449127197
    7. 'pieces' → logprob: -3.9645731449127197
    8. '#' → logprob: -4.339572906494141
    9. 'remaining' → logprob: -4.339572906494141
    10. '```' → logprob: -4.589572906494141

Token 77: ' well' (ID: 1775)
  Prédit: ' well'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' well' → logprob: -0.093929722905159
    2. 'well' → logprob: -2.5939297676086426
    3. ' a' → logprob: -5.218929767608643
    4. ' bonus' → logprob: -5.968929767608643
    5. ' extra' → logprob: -6.218929767608643
    6. ' an' → logprob: -6.593929767608643
    7. 'a' → logprob: -7.718929767608643
    8. ' cake' → logprob: -7.843929767608643
    9. ' additional' → logprob: -8.093929290771484
    10. ' wel' → logprob: -8.093929290771484

Token 78: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8647245168685913
    2. 'for' → logprob: -1.3647245168685913
    3. 'if' → logprob: -1.7397245168685913
    4. 'cakes' → logprob: -2.989724636077881
    5. ' for' → logprob: -3.989724636077881
    6. '#' → logprob: -3.989724636077881
    7. ' if' → logprob: -4.489724636077881
    8. 'cake' → logprob: -4.739724636077881
    9. 'remaining' → logprob: -4.989724636077881
    10. 'host' → logprob: -5.364724636077881

Token 79: 'host' (ID: 6328)
  Prédit: 'host'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'host' → logprob: -0.4772009551525116
    2. 'cakes' → logprob: -1.477200984954834
    3. 'friends' → logprob: -3.352200984954834
    4. 'for' → logprob: -3.352200984954834
    5. 'print' → logprob: -3.977200984954834
    6. 'pieces' → logprob: -4.102200984954834
    7. 'cake' → logprob: -4.227200984954834
    8. 'friend' → logprob: -4.977200984954834
    9. 'fair' → logprob: -5.977200984954834
    10. 'max' → logprob: -5.977200984954834

Token 80: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.018728433176875114
    2. '_p' → logprob: -5.018728256225586
    3. '_share' → logprob: -5.268728256225586
    4. '_get' → logprob: -5.518728256225586
    5. ' =' → logprob: -6.518728256225586
    6. '_' → logprob: -7.393728256225586
    7. '=' → logprob: -7.768728256225586
    8. '_cut' → logprob: -10.143728256225586
    9. '_amount' → logprob: -10.393728256225586
    10. '_e' → logprob: -10.393728256225586

Token 81: 'akes' (ID: 6861)
  Prédit: 'akes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'akes' → logprob: -0.0026099022943526506
    2. 'ake' → logprob: -6.877609729766846
    3. 'a' → logprob: -8.502610206604004
    4. '```' → logprob: -8.502610206604004
    5. 'ak' → logprob: -8.627610206604004
    6. '=' → logprob: -9.002610206604004
    7. 'e' → logprob: -9.127610206604004
    8. 'ut' → logprob: -9.252610206604004
    9. 'cakes' → logprob: -9.252610206604004
    10. 'ount' → logprob: -9.627610206604004

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0619712732732296
    2. '=' → logprob: -2.8119711875915527
    3. ' +=' → logprob: -13.811971664428711
    4. ' =
' → logprob: -14.311971664428711
    5. '_' → logprob: -14.561971664428711
    6. ' ' → logprob: -14.686971664428711
    7. ')' → logprob: -14.936971664428711
    8. '+' → logprob: -15.061971664428711
    9. ' +' → logprob: -15.436971664428711
    10. 's' → logprob: -15.811971664428711

Token 83: ' cakes' (ID: 61222)
  Prédit: 'cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cakes' → logprob: -0.03805571794509888
    2. ' cakes' → logprob: -3.288055658340454
    3. 'cake' → logprob: -12.038055419921875
    4. 'c' → logprob: -12.663055419921875
    5. 're' → logprob: -13.413055419921875
    6. 'cak' → logprob: -13.788055419921875
    7. ' ' → logprob: -14.288055419921875
    8. 'cars' → logprob: -15.288055419921875
    9. ' ' → logprob: -15.288055419921875
    10. 'cups' → logprob: -15.413055419921875

Token 84: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.004366982728242874
    2. '[' → logprob: -5.879366874694824
    3. 'per' → logprob: -7.629366874694824
    4. '-' → logprob: -7.629366874694824
    5. '[-' → logprob: -7.629366874694824
    6. '+' → logprob: -10.629366874694824
    7. '_' → logprob: -11.254366874694824
    8. '_pe' → logprob: -11.879366874694824
    9. '-per' → logprob: -11.879366874694824
    10. '_p' → logprob: -12.004366874694824

Token 85: '_person' (ID: 53205)
  Prédit: 'person'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'person' → logprob: -0.2030019909143448
    2. '_person' → logprob: -1.7030019760131836
    3. 'son' → logprob: -6.578001976013184
    4. 'erson' → logprob: -9.703001976013184
    5. 'people' → logprob: -10.203001976013184
    6. '_people' → logprob: -10.828001976013184
    7. 's' → logprob: -11.453001976013184
    8. '-person' → logprob: -11.703001976013184
    9. '```' → logprob: -11.703001976013184
    10. 'Person' → logprob: -11.828001976013184

Token 86: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868756890296936
    2. '+' → logprob: -1.1368756294250488
    3. '<|end|>' → logprob: -13.386876106262207
    4. ' plus' → logprob: -14.011876106262207
    5. ' ' → logprob: -14.261876106262207
    6. ' *' → logprob: -14.261876106262207
    7. ' +
' → logprob: -15.386876106262207
    8. '*' → logprob: -15.511876106262207
    9. ' +

' → logprob: -16.38687515258789
    10. ' +=' → logprob: -16.51187515258789

Token 87: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.0002764710516203195
    2. 're' → logprob: -8.250276565551758
    3. ' re' → logprob: -11.125276565551758
    4. ' ' → logprob: -14.750276565551758
    5. '	re' → logprob: -16.875276565551758
    6. ' rest' → logprob: -17.250276565551758
    7. ' ' → logprob: -17.625276565551758
    8. '1' → logprob: -19.000276565551758
    9. 'rema' → logprob: -19.000276565551758
    10. '  ' → logprob: -19.125276565551758

Token 88: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0408152341842651
    2. 'print' → logprob: -1.1658152341842651
    3. '<|end|>' → logprob: -1.1658152341842651
    4. 'for' → logprob: -4.540815353393555
    5. '```' → logprob: -5.790815353393555
    6. '\n' → logprob: -5.790815353393555
    7. '#' → logprob: -5.915815353393555
    8. ')' → logprob: -6.790815353393555
    9. '<|end|>' → logprob: -6.790815353393555
    10. ' for' → logprob: -7.790815353393555

Token 89: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.019567769020795822
    2. 'for' → logprob: -4.644567966461182
    3. '<|end|>' → logprob: -6.019567966461182
    4. 'friends' → logprob: -6.144567966461182
    5. 'cakes' → logprob: -6.519567966461182
    6. '#' → logprob: -6.769567966461182
    7. 'result' → logprob: -7.769567966461182
    8. 'cake' → logprob: -7.894567966461182
    9. 'people' → logprob: -8.144567489624023
    10. '```' → logprob: -8.644567489624023

Token 90: '(host' (ID: 43151)
  Prédit: '(host'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(host' → logprob: -0.04858986660838127
    2. '(' → logprob: -3.0485899448394775
    3. '(c' → logprob: -14.173589706420898
    4. '('' → logprob: -14.548589706420898
    5. 'host' → logprob: -14.673589706420898
    6. '()' → logprob: -15.173589706420898
    7. '(f' → logprob: -15.798589706420898
    8. '(head' → logprob: -16.6735897064209
    9. '(parent' → logprob: -17.0485897064209
    10. '((' → logprob: -17.2985897064209

Token 91: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -5.438573680294212e-06
    2. ')_' → logprob: -12.375005722045898
    3. '_' → logprob: -14.250005722045898
    4. '_t' → logprob: -15.625005722045898
    5. ')' → logprob: -15.875005722045898
    6. '_k' → logprob: -16.8750057220459
    7. '_s' → logprob: -17.1250057220459
    8. ' _' → logprob: -17.8750057220459
    9. '__' → logprob: -18.0000057220459
    10. '}_' → logprob: -18.0000057220459

Token 92: 'akes' (ID: 6861)
  Prédit: 'akes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'akes' → logprob: -0.0004928641719743609
    2. 'a' → logprob: -8.000493049621582
    3. 'ak' → logprob: -9.000493049621582
    4. '```' → logprob: -11.375493049621582
    5. '_' → logprob: -11.625493049621582
    6. '``' → logprob: -13.000493049621582
    7. 'ake' → logprob: -13.000493049621582
    8. '_a' → logprob: -13.125493049621582
    9. 'cakes' → logprob: -13.375493049621582
    10. '\' → logprob: -14.375493049621582

Token 93: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.875
    3. ')`' → logprob: -17.5
    4. ' )' → logprob: -18.375
    5. '))' → logprob: -18.75
    6. '`)' → logprob: -19.125
    7. '')' → logprob: -19.875
    8. '),' → logprob: -20.625
    9. ')#' → logprob: -20.625
    10. '```' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 91
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 68
Précision stricte (1ère position): 43.96%
Précision adaptée (1ère position): 43.96%
Précision (top 10): 74.73%
================================================================================
