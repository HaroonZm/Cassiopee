================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import cos, sin, radians
from abc import ABC, abstractmethod
import sys

class Vector2D:
    def __init__(self, x: float = 0.0, y: float = 0.0):
        self.x = x
        self.y = y

    def __add__(self, other: 'Vector2D') -> 'Vector2D':
        return Vector2D(self.x + other.x, self.y + other.y)

    def __sub__(self, other: 'Vector2D') -> 'Vector2D':
        return Vector2D(self.x - other.x, self.y - other.y)

    def scale(self, factor: float) -> 'Vector2D':
        return Vector2D(self.x * factor, self.y * factor)

    def rotate(self, degree: float) -> 'Vector2D':
        rad = radians(degree)
        cos_r = cos(rad)
        sin_r = sin(rad)
        return Vector2D(self.x * cos_r - self.y * sin_r, self.x * sin_r + self.y * cos_r)

    def __repr__(self):
        return f"Vector2D(x={self.x}, y={self.y})"

class DirectionProvider(ABC):
    @abstractmethod
    def get_direction(self, step_index: int) -> Vector2D:
        pass

class WellDirectionProvider(DirectionProvider):
    """
    Provides direction vector always towards the well placed at origin (0,0)
    from current position.
    """
    def __init__(self, well_position: Vector2D = Vector2D(0,0)):
        self.well_position = well_position

    def get_direction(self, step_index: int) -> Vector2D:
        # Return normalized vector from current position to well
        # Because we will always 'face' well, direction is from current position to well
        # In practice caller knows current position and reorients accordingly, so this
        # function by spec just returns the direction vector of the well which is always constant (origin)
        # So caller must calculate vector from current to well
        return Vector2D(0,0)  # Placeholder - actual usage elsewhere

class Navigator:
    def __init__(self, direction_provider: DirectionProvider):
        self.position = Vector2D(0.0, 0.0)
        self.direction_provider = direction_provider
        self.facing = Vector2D(1.0, 0.0)  # initially facing east

    def face_well(self):
        # Reorient facing vector to point directly from current position to well (0,0)
        vec_to_well = Vector2D(0.0, 0.0) - self.position
        length = (vec_to_well.x ** 2 + vec_to_well.y ** 2) ** 0.5
        if length == 0:
            # Already at well position
            self.facing = Vector2D(0,0)
        else:
            self.facing = Vector2D(vec_to_well.x / length, vec_to_well.y / length)

    def turn_right_90(self):
        # Rotate facing 90 degrees clockwise (right)
        self.facing = self.facing.rotate(-90)

    def move_forward(self, distance: float) -> bool:
        # Move forward distance in facing direction if possible.
        # The problem mentions possible obstruction but does not provide criteria, 
        # so assume always possible (no obstacle).
        delta = self.facing.scale(distance)
        self.position += delta
        return True

    def perform_step(self):
        # Turn right 90 degrees
        self.turn_right_90()
        # Move 1m forward
        self.move_forward(1.0)
        # Face well again
        self.face_well()

class TreasureHunter:
    def __init__(self, n: int):
        if not (2 <= n <= 1000):
            raise ValueError("n must be between 2 and 1000 inclusive")
        self.n = n
        self.navigator = Navigator(WellDirectionProvider())

    def find_treasure(self) -> Vector2D:
        # Initial step: from well, go east 1m, face well
        self.navigator.position = Vector2D(1.0, 0.0)
        self.navigator.face_well()
        # Then for n-1 times: turn right 90, move 1, face well
        for _ in range(self.n -1):
            self.navigator.perform_step()
        return self.navigator.position

def main():
    input_lines = sys.stdin.read().strip().split('\n')
    count = 0
    for line in input_lines:
        if line.strip() == '-1':
            break
        n = int(line.strip())
        hunter = TreasureHunter(n)
        pos = hunter.find_treasure()
        print(f"{pos.x:.2f}")
        print(f"{pos.y:.2f}")
        count += 1
        if count >= 50:
            break

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' cos' (ID: 8974)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.5038918256759644
    2. ' sqrt' → logprob: -1.0038918256759644
    3. ' pi' → logprob: -4.628891944885254
    4. 'pow' → logprob: -5.003891944885254
    5. 'pi' → logprob: -5.378891944885254
    6. 'sin' → logprob: -5.503891944885254
    7. ' sin' → logprob: -6.878891944885254
    8. 's' → logprob: -7.253891944885254
    9. ' ceil' → logprob: -7.628891944885254
    10. 'ceil' → logprob: -7.878891944885254

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00013214473437983543
    2. '\(' → logprob: -9.25013256072998
    3. ' (' → logprob: -11.62513256072998
    4. ',' → logprob: -12.00013256072998
    5. '(
' → logprob: -12.12513256072998
    6. '(open' → logprob: -13.25013256072998
    7. '(x' → logprob: -13.37513256072998
    8. '#' → logprob: -13.50013256072998
    9. '((' → logprob: -14.00013256072998
    10. '\' → logprob: -14.12513256072998

Token 5: ' sin' (ID: 2187)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -0.004461331758648157
    2. ' sin' → logprob: -5.879461288452148
    3. 'pi' → logprob: -6.504461288452148
    4. 'tan' → logprob: -9.004461288452148
    5. 'atan' → logprob: -11.004461288452148
    6. ' pi' → logprob: -11.379461288452148
    7. ' radians' → logprob: -13.254461288452148
    8. 'sqrt' → logprob: -13.504461288452148
    9. 'asin' → logprob: -13.504461288452148
    10. 'acos' → logprob: -14.254461288452148

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017882289830595255
    2. '\(' → logprob: -6.751788139343262
    3. ',' → logprob: -7.876788139343262
    4. '\' → logprob: -9.626788139343262
    5. '(
' → logprob: -10.126788139343262
    6. ' (' → logprob: -10.376788139343262
    7. 'u' → logprob: -10.501788139343262
    8. '```' → logprob: -10.876788139343262
    9. '\n' → logprob: -11.626788139343262
    10. 'a' → logprob: -11.876788139343262

Token 7: ' radians' (ID: 126525)
  Prédit: 'tan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tan' → logprob: -0.4289902448654175
    2. 'atan' → logprob: -2.053990364074707
    3. 'pi' → logprob: -2.303990364074707
    4. ' tan' → logprob: -2.678990364074707
    5. ' pi' → logprob: -3.303990364074707
    6. ' radians' → logprob: -4.553990364074707
    7. ' sqrt' → logprob: -6.428990364074707
    8. 'sqrt' → logprob: -6.428990364074707
    9. ' atan' → logprob: -7.178990364074707
    10. 't' → logprob: -8.303990364074707

Token 8: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003448792558629066
    2. '\(' → logprob: -8.750345230102539
    3. '(
' → logprob: -9.125345230102539
    4. 'def' → logprob: -10.750345230102539
    5. ',' → logprob: -11.125345230102539
    6. '\' → logprob: -11.875345230102539
    7. '#' → logprob: -12.625345230102539
    8. '_' → logprob: -12.625345230102539
    9. 'd' → logprob: -12.750345230102539
    10. 'u' → logprob: -13.000345230102539

Token 9: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012244850397109985
    2. 'd' → logprob: -4.887244701385498
    3. 'def' → logprob: -6.512244701385498
    4. '(
' → logprob: -6.512244701385498
    5. '\(' → logprob: -7.637244701385498
    6. ')' → logprob: -8.512245178222656
    7. '#' → logprob: -8.637245178222656
    8. ',' → logprob: -8.762245178222656
    9. '\' → logprob: -9.012245178222656
    10. 'r' → logprob: -9.137245178222656

Token 10: ' abc' (ID: 75094)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7554646134376526
    2. 'math' → logprob: -0.7554646134376526
    3. 'cmath' → logprob: -3.005464553833008
    4. ' numpy' → logprob: -5.505464553833008
    5. ' cm' → logprob: -5.755464553833008
    6. 'numpy' → logprob: -6.630464553833008
    7. ' random' → logprob: -7.505464553833008
    8. 'random' → logprob: -8.130464553833008
    9. ' typing' → logprob: -8.255464553833008
    10. ' os' → logprob: -8.380464553833008

Token 11: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.560854971408844
    2. '.' → logprob: -1.1858549118041992
    3. 'import' → logprob: -2.310854911804199
    4. ' .' → logprob: -4.185854911804199
    5. '	import' → logprob: -5.310854911804199
    6. '.import' → logprob: -5.810854911804199
    7. ' ' → logprob: -7.560854911804199
    8. '.ext' → logprob: -8.8108549118042
    9. '```' → logprob: -8.8108549118042
    10. '_import' → logprob: -8.9358549118042

Token 12: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.0383170060813427
    2. 'ABC' → logprob: -3.2883169651031494
    3. 'abstract' → logprob: -8.53831672668457
    4. ' abstract' → logprob: -9.66331672668457
    5. ' A' → logprob: -11.78831672668457
    6. 'abc' → logprob: -12.28831672668457
    7. 'ABCDE' → logprob: -14.16331672668457
    8. '123' → logprob: -14.28831672668457
    9. '```' → logprob: -14.28831672668457
    10. 'import' → logprob: -14.66331672668457

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04071721062064171
    2. '.' → logprob: -3.290717124938965
    3. 'import' → logprob: -6.915717124938965
    4. ',
' → logprob: -7.665717124938965
    5. ' ,' → logprob: -8.665717124938965
    6. '<|end|>' → logprob: -8.665717124938965
    7. '```' → logprob: -8.665717124938965
    8. '

' → logprob: -8.790717124938965
    9. ':' → logprob: -9.290717124938965
    10. ' ' → logprob: -9.540717124938965

Token 14: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.25192990899086
    2. ' abstract' → logprob: -1.5019298791885376
    3. ' ABC' → logprob: -15.251930236816406
    4. '.abstract' → logprob: -15.376930236816406
    5. 'Abstract' → logprob: -16.376930236816406
    6. ' ' → logprob: -16.501930236816406
    7. ' abstr' → logprob: -17.001930236816406
    8. '```' → logprob: -17.376930236816406
    9. ' XYZ' → logprob: -17.876930236816406
    10. 'classmethod' → logprob: -18.126930236816406

Token 15: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00014716439181938767
    2. 'classmethod' → logprob: -8.875146865844727
    3. 'staticmethod' → logprob: -12.875146865844727
    4. 'ethod' → logprob: -13.125146865844727
    5. 'meth' → logprob: -13.750146865844727
    6. '_method' → logprob: -14.375146865844727
    7. 'm' → logprob: -14.875146865844727
    8. '	method' → logprob: -15.000146865844727
    9. 'base' → logprob: -15.750146865844727
    10. 'module' → logprob: -16.000146865844727

Token 16: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3013160228729248
    2. 'class' → logprob: -1.5513160228729248
    3. '```' → logprob: -3.426316022872925
    4. '\n' → logprob: -5.051316261291504
    5. '

' → logprob: -5.926316261291504
    6. ' class' → logprob: -6.301316261291504
    7. '`
' → logprob: -6.676316261291504
    8. '' → logprob: -6.801316261291504
    9. '``' → logprob: -7.426316261291504
    10. ' 
' → logprob: -7.676316261291504

Token 17: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012951144948601723
    2. 'class' → logprob: -4.637951374053955
    3. '

' → logprob: -6.137951374053955
    4. '```' → logprob: -7.262951374053955
    5. '
' → logprob: -8.262950897216797
    6. ' 
' → logprob: -11.137950897216797
    7. '


' → logprob: -11.512950897216797
    8. ' class' → logprob: -11.637950897216797
    9. '\n' → logprob: -11.637950897216797
    10. '``' → logprob: -11.762950897216797

Token 18: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.031495921313762665
    2. ' numpy' → logprob: -3.7814958095550537
    3. ' abc' → logprob: -5.531496047973633
    4. ' random' → logprob: -5.656496047973633
    5. ' os' → logprob: -8.031496047973633
    6. ' sys' → logprob: -8.406496047973633
    7. ' ' → logprob: -9.906496047973633
    8. ' cm' → logprob: -10.031496047973633
    9. ' itertools' → logprob: -11.281496047973633
    10. ' datetime' → logprob: -11.406496047973633

Token 19: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21376758813858032
    2. '

' → logprob: -1.8387675285339355
    3. 'class' → logprob: -3.8387675285339355
    4. '```' → logprob: -4.5887675285339355
    5. '\n' → logprob: -6.9637675285339355
    6. '
' → logprob: -8.213768005371094
    7. ' class' → logprob: -8.713768005371094
    8. '``' → logprob: -9.213768005371094
    9. '' → logprob: -9.463768005371094
    10. '


' → logprob: -9.713768005371094

Token 20: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.11942629516124725
    2. '
' → logprob: -2.2444262504577637
    3. '```' → logprob: -5.744426250457764
    4. '\n' → logprob: -6.369426250457764
    5. '

' → logprob: -7.244426250457764
    6. 'c' → logprob: -8.369426727294922
    7. ' class' → logprob: -8.869426727294922
    8. '' → logprob: -9.119426727294922
    9. '
' → logprob: -9.369426727294922
    10. '#' → logprob: -9.494426727294922

Token 21: ' Vector' (ID: 8764)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.030469615012407303
    2. ' Basic' → logprob: -4.4054694175720215
    3. ' Object' → logprob: -5.7804694175720215
    4. ' Shape' → logprob: -6.0304694175720215
    5. ' Abstract' → logprob: -6.1554694175720215
    6. ' Calculator' → logprob: -6.1554694175720215
    7. ' Geometry' → logprob: -6.1554694175720215
    8. ' Space' → logprob: -6.9054694175720215
    9. ' Vector' → logprob: -7.2804694175720215
    10. ' My' → logprob: -7.9054694175720215

Token 22: '2' (ID: 17)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034040406346321106
    2. '(' → logprob: -3.9090404510498047
    3. '3' → logprob: -4.534040451049805
    4. '2' → logprob: -7.159040451049805
    5. '4' → logprob: -7.284040451049805
    6. ':
' → logprob: -7.784040451049805
    7. '():' → logprob: -7.909040451049805
    8. '(object' → logprob: -8.659040451049805
    9. '):' → logprob: -9.034040451049805
    10. ' :' → logprob: -9.909040451049805

Token 23: 'D' (ID: 35)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006679982761852443
    2. '():' → logprob: -8.500667572021484
    3. '(' → logprob: -8.750667572021484
    4. 'D' → logprob: -9.000667572021484
    5. ':
' → logprob: -9.250667572021484
    6. '):' → logprob: -10.250667572021484
    7. ' :' → logprob: -11.250667572021484
    8. '(object' → logprob: -11.250667572021484
    9. ':**' → logprob: -12.125667572021484
    10. '>:' → logprob: -12.500667572021484

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12727276980876923
    2. '(' → logprob: -2.127272844314575
    3. '():' → logprob: -9.127272605895996
    4. ' :' → logprob: -9.377272605895996
    5. '(object' → logprob: -9.377272605895996
    6. '(:' → logprob: -11.002272605895996
    7. '<|end|>' → logprob: -11.502272605895996
    8. '(Abstract' → logprob: -11.877272605895996
    9. ':**' → logprob: -12.252272605895996
    10. '[' → logprob: -12.377272605895996

Token 25: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5959289073944092
    2. '(' → logprob: -1.4709289073944092
    3. ' ' → logprob: -2.220928907394409
    4. '   ' → logprob: -2.970928907394409
    5. '<|end|>' → logprob: -4.095929145812988
    6. ' :' → logprob: -4.220929145812988
    7. '(object' → logprob: -4.595929145812988
    8. ' (' → logprob: -4.845929145812988
    9. ' def' → logprob: -6.470929145812988
    10. '```' → logprob: -6.845929145812988

Token 26: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.06292688846588135
    2. 'def' (adapté à ' def') → logprob: -3.062926769256592
    3. '   ' → logprob: -4.437926769256592
    4. ' __' → logprob: -6.312926769256592
    5. '    ' → logprob: -7.937926769256592
    6. ' ' → logprob: -9.43792724609375
    7. 'class' → logprob: -9.68792724609375
    8. '__' → logprob: -9.93792724609375
    9. '    
' → logprob: -11.81292724609375
    10. '```' → logprob: -11.93792724609375

Token 27: ' __' (ID: 2516)
  Prédit: 'nit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nit' → logprob: -0.19035033881664276
    2. 'it' → logprob: -2.565350294113159
    3. 'init' → logprob: -2.690350294113159
    4. 'def' → logprob: -4.440350532531738
    5. 't' → logprob: -5.190350532531738
    6. ' def' → logprob: -5.940350532531738
    7. '```' → logprob: -6.065350532531738
    8. '__' → logprob: -6.440350532531738
    9. '_init' → logprob: -6.690350532531738
    10. ' nit' → logprob: -6.815350532531738

Token 28: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.375
    3. ' init' → logprob: -16.75
    4. 'in' → logprob: -17.25
    5. '_init' → logprob: -18.5
    6. 'int' → logprob: -19.75
    7. 'eq' → logprob: -19.875
    8. 'i' → logprob: -20.0
    9. 'inite' → logprob: -20.0
    10. '	init' → logprob: -20.75

Token 29: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.021955301985144615
    2. '(self' → logprob: -3.8969552516937256
    3. '__' → logprob: -7.646955490112305
    4. '(' → logprob: -8.021955490112305
    5. '<|end|>' → logprob: -8.146955490112305
    6. ' (' → logprob: -9.021955490112305
    7. '__(
' → logprob: -9.521955490112305
    8. 'self' → logprob: -10.521955490112305
    9. '_(' → logprob: -10.521955490112305
    10. '__((' → logprob: -10.521955490112305

Token 30: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005266719032078981
    2. ' self' → logprob: -5.2552666664123535
    3. 'x' → logprob: -10.380267143249512
    4. '0' → logprob: -13.380267143249512
    5. '(self' → logprob: -16.255266189575195
    6. 's' → logprob: -16.880266189575195
    7. ' x' → logprob: -17.130266189575195
    8. '	self' → logprob: -17.505266189575195
    9. ',self' → logprob: -17.630266189575195
    10. '_self' → logprob: -17.755266189575195

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16227737069129944
    2. ' ,' → logprob: -1.912277340888977
    3. '(' → logprob: -7.4122772216796875
    4. ' (' → logprob: -7.9122772216796875
    5. ' ' → logprob: -8.162277221679688
    6. 'self' → logprob: -8.287277221679688
    7. ' self' → logprob: -8.537277221679688
    8. '<|end|>' → logprob: -9.787277221679688
    9. ' )' → logprob: -9.912277221679688
    10. '_,' → logprob: -9.912277221679688

Token 32: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.14469696581363678
    2. 'x' → logprob: -2.0196969509124756
    3. ' self' → logprob: -6.394697189331055
    4. 'self' → logprob: -8.019697189331055
    5. ' ' → logprob: -11.394697189331055
    6. ')x' → logprob: -12.269697189331055
    7. ')' → logprob: -13.019697189331055
    8. ' )' → logprob: -14.144697189331055
    9. '_x' → logprob: -14.644697189331055
    10. '	x' → logprob: -14.894697189331055

Token 33: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005908019375056028
    2. ' ,' → logprob: -7.625590801239014
    3. ')' → logprob: -10.000591278076172
    4. '<|end|>' → logprob: -11.000591278076172
    5. '=' → logprob: -11.500591278076172
    6. ',int' → logprob: -11.875591278076172
    7. ',x' → logprob: -12.125591278076172
    8. ',)' → logprob: -12.375591278076172
    9. ':' → logprob: -12.750591278076172
    10. '):' → logprob: -13.000591278076172

Token 34: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.08489575982093811
    2. 'float' → logprob: -2.5848958492279053
    3. ' int' → logprob: -5.584895610809326
    4. ' )' → logprob: -6.834895610809326
    5. 'int' → logprob: -7.334895610809326
    6. ' ' → logprob: -8.834896087646484
    7. '0' → logprob: -8.959896087646484
    8. '=float' → logprob: -9.084896087646484
    9. ')' → logprob: -10.334896087646484
    10. '_float' → logprob: -10.959896087646484

Token 35: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009273029863834381
    2. ' ,' → logprob: -7.125927448272705
    3. ')' → logprob: -9.500926971435547
    4. '<|end|>' → logprob: -10.500926971435547
    5. '):' → logprob: -12.000926971435547
    6. ',x' → logprob: -12.375926971435547
    7. ',int' → logprob: -12.875926971435547
    8. '<|end|>' → logprob: -14.000926971435547
    9. '‌,' → logprob: -14.250926971435547
    10. ',float' → logprob: -14.375926971435547

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20141392946243286
    2. ' ' → logprob: -1.701413869857788
    3. '=' → logprob: -15.326414108276367
    4. ' ' → logprob: -15.951414108276367
    5. '1' → logprob: -16.451414108276367
    6. ' )' → logprob: -16.701414108276367
    7. ')' → logprob: -16.701414108276367
    8. '۰' → logprob: -17.451414108276367
    9. '  ' → logprob: -17.701414108276367
    10. '   ' → logprob: -18.263914108276367

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. ')' → logprob: -19.125003814697266
    4. '۰' → logprob: -20.875003814697266
    5. '   ' → logprob: -21.375003814697266
    6. ' )' → logprob: -21.875003814697266
    7. '  ' → logprob: -22.500003814697266
    8. '1' → logprob: -22.500003814697266
    9. '-' → logprob: -23.500003814697266
    10. '٠' → logprob: -24.250003814697266

Token 38: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015797141939401627
    2. ')' → logprob: -4.890797138214111
    3. '.' → logprob: -4.890797138214111
    4. ' ,' → logprob: -8.01579761505127
    5. '<|end|>' → logprob: -8.39079761505127
    6. ' ' → logprob: -10.39079761505127
    7. ',float' → logprob: -11.64079761505127
    8. '.,' → logprob: -11.64079761505127
    9. ',)' → logprob: -11.89079761505127
    10. '<|end|>' → logprob: -12.01579761505127

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7252845029579476e-05
    2. ')' → logprob: -10.625027656555176
    3. ' ' → logprob: -13.000027656555176
    4. ',' → logprob: -15.125027656555176
    5. ' )' → logprob: -16.12502670288086
    6. '5' → logprob: -16.37502670288086
    7. '<|end|>' → logprob: -16.37502670288086
    8. 'x' → logprob: -17.37502670288086
    9. '  ' → logprob: -17.37502670288086
    10. ' 
' → logprob: -17.87502670288086

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002835040504578501
    2. ' ,' → logprob: -8.750283241271973
    3. ')' → logprob: -9.250283241271973
    4. ',x' → logprob: -11.875283241271973
    5. '):' → logprob: -12.500283241271973
    6. ',
' → logprob: -12.750283241271973
    7. '<|end|>' → logprob: -13.125283241271973
    8. ',int' → logprob: -13.250283241271973
    9. ',float' → logprob: -13.250283241271973
    10. '‌,' → logprob: -13.625283241271973

Token 41: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.1602560132741928
    2. 'y' → logprob: -1.910256028175354
    3. ' ' → logprob: -10.410256385803223
    4. '	y' → logprob: -14.410256385803223
    5. '<|end|>' → logprob: -15.285256385803223
    6. ',' → logprob: -15.660256385803223
    7. 'x' → logprob: -15.785256385803223
    8. ' ' → logprob: -15.910256385803223
    9. ')' → logprob: -16.160255432128906
    10. ' )' → logprob: -16.160255432128906

Token 42: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01235141884535551
    2. '=' → logprob: -4.6373515129089355
    3. ')' → logprob: -6.3873515129089355
    4. '):' → logprob: -7.2623515129089355
    5. '<|end|>' → logprob: -8.887351036071777
    6. ' :' → logprob: -10.512351036071777
    7. '<|end|>' → logprob: -11.012351036071777
    8. ')=' → logprob: -11.637351036071777
    9. ' =' → logprob: -12.887351036071777
    10. '):
' → logprob: -13.012351036071777

Token 43: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2155437469482422
    2. '0' → logprob: -1.8405437469482422
    3. ' float' → logprob: -3.590543746948242
    4. 'float' → logprob: -5.340543746948242
    5. ' )' → logprob: -6.590543746948242
    6. '<|end|>' → logprob: -6.965543746948242
    7. ')' → logprob: -8.215543746948242
    8. 'f' → logprob: -10.090543746948242
    9. ' ' → logprob: -10.590543746948242
    10. '1' → logprob: -10.715543746948242

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15998531877994537
    2. ':' → logprob: -2.284985303878784
    3. ' =' → logprob: -3.534985303878784
    4. ')' → logprob: -4.284985542297363
    5. ' ' → logprob: -6.034985542297363
    6. '=float' → logprob: -8.034985542297363
    7. '):' → logprob: -9.159985542297363
    8. ' )' → logprob: -9.284985542297363
    9. ' :' → logprob: -9.659985542297363
    10. ',' → logprob: -9.784985542297363

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1002068892121315
    2. ' ' → logprob: -2.3502068519592285
    3. ' ' → logprob: -15.850207328796387
    4. '  ' → logprob: -16.72520637512207
    5. ')' → logprob: -16.85020637512207
    6. ' )' → logprob: -17.72520637512207
    7. '1' → logprob: -17.97520637512207
    8. '۰' → logprob: -18.35020637512207
    9. '```' → logprob: -18.47520637512207
    10. '<|end|>' → logprob: -18.47520637512207

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. ')' → logprob: -17.750003814697266
    4. '۰' → logprob: -20.625003814697266
    5. 'x' → logprob: -21.750003814697266
    6. '1' → logprob: -21.875003814697266
    7. '  ' → logprob: -21.875003814697266
    8. '```' → logprob: -22.250003814697266
    9. '   ' → logprob: -22.750003814697266
    10. ' )' → logprob: -23.000003814697266

Token 47: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5451681974809617e-05
    2. ')' → logprob: -11.125015258789062
    3. '.)' → logprob: -14.375015258789062
    4. ' ' → logprob: -17.125015258789062
    5. '.
' → logprob: -17.750015258789062
    6. '٫' → logprob: -17.875015258789062
    7. ',' → logprob: -18.000015258789062
    8. '.

' → logprob: -18.250015258789062
    9. '‌.' → logprob: -18.500015258789062
    10. ').' → logprob: -18.750015258789062

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.096126576769166e-05
    2. '5' → logprob: -10.625041007995605
    3. ')' → logprob: -11.750041007995605
    4. ' ' → logprob: -11.875041007995605
    5. '1' → logprob: -13.625041007995605
    6. '```' → logprob: -15.625041007995605
    7. '  ' → logprob: -16.87504005432129
    8. 'f' → logprob: -17.00004005432129
    9. '):
' → logprob: -17.12504005432129
    10. '   ' → logprob: -17.37504005432129

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07892768830060959
    2. ')' → logprob: -2.578927755355835
    3. '):
' → logprob: -10.828927993774414
    4. ' ):' → logprob: -11.828927993774414
    5. ':' → logprob: -11.953927993774414
    6. ',' → logprob: -12.828927993774414
    7. ' )' → logprob: -14.953927993774414
    8. '),' → logprob: -14.953927993774414
    9. '):

' → logprob: -15.453927993774414
    10. ' ' → logprob: -15.828927993774414

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03610026091337204
    2. ' ' → logprob: -4.411100387573242
    3. 'x' → logprob: -5.161100387573242
    4. 'self' → logprob: -5.286100387573242
    5. '   ' → logprob: -5.411100387573242
    6. '    ' → logprob: -5.661100387573242
    7. '        ' → logprob: -7.161100387573242
    8. ' ' → logprob: -7.411100387573242
    9. ')' → logprob: -7.786100387573242
    10. '     ' → logprob: -7.786100387573242

Token 51: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7253086566925049
    2. 'self' (adapté à ' self') → logprob: -0.7253086566925049
    3. ' self' → logprob: -3.475308656692505
    4. ' ' → logprob: -8.225308418273926
    5. '   ' → logprob: -8.475308418273926
    6. ' ' → logprob: -9.475308418273926
    7. 's' → logprob: -9.850308418273926
    8. 'x' → logprob: -10.350308418273926
    9. '	self' → logprob: -11.350308418273926
    10. '     ' → logprob: -11.350308418273926

Token 52: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005933297798037529
    2. '.x' → logprob: -5.1309332847595215
    3. ' .' → logprob: -13.00593376159668
    4. '._' → logprob: -14.25593376159668
    5. '.user' → logprob: -15.13093376159668
    6. 'x' → logprob: -15.25593376159668
    7. '.space' → logprob: -15.50593376159668
    8. ' ' → logprob: -16.00593376159668
    9. '.xyz' → logprob: -16.63093376159668
    10. '.

' → logprob: -16.88093376159668

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2284420281648636
    2. '=' → logprob: -1.6034420728683472
    3. '<|end|>' → logprob: -6.228442192077637
    4. ' ' → logprob: -7.103442192077637
    5. ',' → logprob: -9.853442192077637
    6. ' ,' → logprob: -10.353442192077637
    7. ' +=' → logprob: -10.478442192077637
    8. ')' → logprob: -10.603442192077637
    9. '<|end|>' → logprob: -10.728442192077637
    10. ' =)' → logprob: -10.853442192077637

Token 54: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0789375975728035
    2. 'x' → logprob: -2.578937530517578
    3. ' ' → logprob: -9.953937530517578
    4. ' ' → logprob: -15.953937530517578
    5. '	x' → logprob: -16.203937530517578
    6. '0' → logprob: -16.953937530517578
    7. ')x' → logprob: -18.828937530517578
    8. '(x' → logprob: -19.078937530517578
    9. '_x' → logprob: -19.453937530517578
    10. '<|end|>' → logprob: -19.453937530517578

Token 55: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24045725166797638
    2. 'self' (adapté à ' self') → logprob: -1.74045729637146
    3. '<|end|>' → logprob: -4.615457057952881
    4. ' self' → logprob: -4.740457057952881
    5. ' ' → logprob: -4.740457057952881
    6. '   ' → logprob: -5.365457057952881
    7. '
' → logprob: -6.990457057952881
    8. 'y' → logprob: -6.990457057952881
    9. '    ' → logprob: -7.115457057952881
    10. '        ' → logprob: -7.115457057952881

Token 58: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0004273315134923905
    2. '.y' → logprob: -8.37542724609375
    3. ' ' → logprob: -9.25042724609375
    4. '.x' → logprob: -10.37542724609375
    5. ' .' → logprob: -10.75042724609375
    6. '<|end|>' → logprob: -10.87542724609375
    7. '<|end|>' → logprob: -11.50042724609375
    8. ',' → logprob: -12.00042724609375
    9. 'y' → logprob: -12.25042724609375
    10. '.py' → logprob: -12.87542724609375

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03072211518883705
    2. '=' → logprob: -3.655722141265869
    3. '<|end|>' → logprob: -5.530722141265869
    4. ' ' → logprob: -8.030721664428711
    5. '<|end|>' → logprob: -9.405721664428711
    6. ')' → logprob: -11.030721664428711
    7. ' =)' → logprob: -12.155721664428711
    8. ' +=' → logprob: -12.530721664428711
    9. '.' → logprob: -13.030721664428711
    10. '    ' → logprob: -13.280721664428711

Token 60: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.693148672580719
    2. ' y' → logprob: -0.693148672580719
    3. ' ' → logprob: -13.693148612976074
    4. '	y' → logprob: -15.693148612976074
    5. ' ' → logprob: -16.06814956665039
    6. '0' → logprob: -16.44314956665039
    7. ')y' → logprob: -18.06814956665039
    8. '<|end|>' → logprob: -18.06814956665039
    9. ''y' → logprob: -19.06814956665039
    10. '(y' → logprob: -19.06814956665039

Token 61: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.045847415924072266
    2. '   ' → logprob: -3.6708474159240723
    3. '    
' → logprob: -5.170847415924072
    4. ' 
' → logprob: -5.295847415924072
    5. '<|end|>' → logprob: -5.420847415924072
    6. ' ' → logprob: -6.545847415924072
    7. '' → logprob: -7.295847415924072
    8. '\n' → logprob: -7.545847415924072
    9. '

' → logprob: -7.670847415924072
    10. '  
' → logprob: -8.170846939086914

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4734887182712555
    2. ' 
' → logprob: -1.473488688468933
    3. '    
' → logprob: -2.9734888076782227
    4. ' ' → logprob: -3.0984888076782227
    5. '
' → logprob: -3.2234888076782227
    6. '   
' → logprob: -6.098488807678223
    7. '  
' → logprob: -6.223488807678223
    8. ' def' → logprob: -6.223488807678223
    9. '     
' → logprob: -6.473488807678223
    10. 'def' → logprob: -6.723488807678223

Token 63: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.048788223415613174
    2. ' def' → logprob: -3.04878830909729
    3. '   ' → logprob: -9.048788070678711
    4. ' ' → logprob: -10.673788070678711
    5. 'd' → logprob: -10.798788070678711
    6. 'de' → logprob: -11.548788070678711
    7. '    
' → logprob: -12.173788070678711
    8. ' 
' → logprob: -12.173788070678711
    9. '
' → logprob: -12.548788070678711
    10. '	def' → logprob: -12.798788070678711

Token 64: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3933091461658478
    2. '_' → logprob: -1.7683091163635254
    3. ' _' → logprob: -2.3933091163635254
    4. ' add' → logprob: -3.8933091163635254
    5. ' __' → logprob: -4.393309116363525
    6. '_add' → logprob: -4.643309116363525
    7. ' ' → logprob: -5.018309116363525
    8. ' vector' → logprob: -5.268309116363525
    9. ' def' → logprob: -5.768309116363525
    10. '_vector' → logprob: -6.268309116363525

Token 65: 'add' (ID: 964)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.669668436050415
    2. 'add' → logprob: -0.919668436050415
    3. 'i' → logprob: -2.544668436050415
    4. 'repr' → logprob: -5.419668197631836
    5. 'eq' → logprob: -6.044668197631836
    6. 'ad' → logprob: -6.669668197631836
    7. 'str' → logprob: -6.919668197631836
    8. 's' → logprob: -7.169668197631836
    9. 'init' → logprob: -7.169668197631836
    10. 'e' → logprob: -9.169668197631836

Token 66: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3885040581226349
    2. '__(' → logprob: -1.1385040283203125
    3. '_' → logprob: -7.1385040283203125
    4. '__(
' → logprob: -7.6385040283203125
    5. '__('' → logprob: -8.388504028320312
    6. '__((' → logprob: -9.513504028320312
    7. '(' → logprob: -10.513504028320312
    8. '__("' → logprob: -11.638504028320312
    9. '__(*' → logprob: -11.888504028320312
    10. '___' → logprob: -12.013504028320312

Token 67: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008849739097058773
    2. 'other' → logprob: -5.133849620819092
    3. ' self' → logprob: -5.883849620819092
    4. ' other' → logprob: -9.13385009765625
    5. '<|end|>' → logprob: -11.50885009765625
    6. ' ' → logprob: -11.88385009765625
    7. ')' → logprob: -12.63385009765625
    8. '(self' → logprob: -13.00885009765625
    9. '   ' → logprob: -13.88385009765625
    10. 's' → logprob: -15.50885009765625

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9657962322235107
    2. '<|end|>' → logprob: -1.3407962322235107
    3. ')' → logprob: -2.0907962322235107
    4. ' ' → logprob: -2.2157962322235107
    5. 'self' → logprob: -3.7157962322235107
    6. '(self' → logprob: -3.7157962322235107
    7. ' ,' → logprob: -3.9657962322235107
    8. '(' → logprob: -4.09079647064209
    9. '__' → logprob: -4.34079647064209
    10. '__(' → logprob: -4.71579647064209

Token 69: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.5759706497192383
    2. ' other' → logprob: -0.8259706497192383
    3. 'self' → logprob: -11.450970649719238
    4. ' o' → logprob: -11.825970649719238
    5. ' ' → logprob: -12.200970649719238
    6. ' self' → logprob: -13.200970649719238
    7. 'o' → logprob: -13.325970649719238
    8. ' oth' → logprob: -13.575970649719238
    9. 'Other' → logprob: -13.825970649719238
    10. '(other' → logprob: -14.200970649719238

Token 70: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020482327789068222
    2. ')' → logprob: -4.145482540130615
    3. '):
' → logprob: -5.645482540130615
    4. '<|end|>' → logprob: -7.770482540130615
    5. ' ):' → logprob: -7.895482540130615
    6. ':' → logprob: -10.145482063293457
    7. ' ' → logprob: -10.645482063293457
    8. ' )' → logprob: -11.020482063293457
    9. '<|end|>' → logprob: -11.520482063293457
    10. ',' → logprob: -11.770482063293457

Token 71: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005071518011391163
    2. ' )' → logprob: -5.505071640014648
    3. ' vector' → logprob: -7.630071640014648
    4. ' Vector' → logprob: -8.130071640014648
    5. ')' → logprob: -8.880071640014648
    6. 'Vector' → logprob: -11.130071640014648
    7. ' ' → logprob: -11.255071640014648
    8. '<|end|>' → logprob: -11.505071640014648
    9. '  ' → logprob: -11.630071640014648
    10. ' space' → logprob: -11.880071640014648

Token 72: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -1.8624639324116288e-06
    2. ' Vector' → logprob: -13.500001907348633
    3. 'Vect' → logprob: -15.875001907348633
    4. 'Vec' → logprob: -16.125001907348633
    5. 'vector' → logprob: -16.375001907348633
    6. '_Vector' → logprob: -17.625001907348633
    7. '	Vector' → logprob: -17.750001907348633
    8. 'Ve' → logprob: -17.750001907348633
    9. 'Vectors' → logprob: -17.875001907348633
    10. '<Vector' → logprob: -18.000001907348633

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '<|end|>' → logprob: -18.25
    4. '')' → logprob: -18.625
    5. '<Vector' → logprob: -19.375
    6. ')' → logprob: -19.5
    7. 'Vector' → logprob: -19.5
    8. '```' → logprob: -19.5
    9. '۲' → logprob: -19.875
    10. '`' → logprob: -21.0

Token 74: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -7.226628895296017e-06
    2. 'Vector' → logprob: -12.625007629394531
    3. '2' → logprob: -12.875007629394531
    4. '')' → logprob: -14.875007629394531
    5. '<|end|>' → logprob: -15.125007629394531
    6. ''' → logprob: -15.375007629394531
    7. 'vector' → logprob: -16.62500762939453
    8. ''D' → logprob: -16.62500762939453
    9. ' D' → logprob: -16.75000762939453
    10. '<D' → logprob: -16.87500762939453

Token 75: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.16413477063179016
    2. ''):' → logprob: -2.2891347408294678
    3. ')' → logprob: -3.0391347408294678
    4. '):' → logprob: -6.789134979248047
    5. ''):
' → logprob: -7.164134979248047
    6. ''' → logprob: -9.539134979248047
    7. '')->' → logprob: -10.039134979248047
    8. ' ')' → logprob: -10.039134979248047
    9. ' '' → logprob: -10.414134979248047
    10. ':' → logprob: -11.039134979248047

Token 76: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029866309836506844
    2. '):' → logprob: -3.5298662185668945
    3. ':return' → logprob: -10.154866218566895
    4. '():' → logprob: -10.404866218566895
    5. ':**' → logprob: -11.154866218566895
    6. ')' → logprob: -11.529866218566895
    7. ' :' → logprob: -11.654866218566895
    8. '>:' → logprob: -12.404866218566895
    9. '<|end|>' → logprob: -12.529866218566895
    10. '}:' → logprob: -13.654866218566895

Token 77: ' '' (ID: 461)
  Prédit: ' Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.028393179178237915
    2. 'Vector' → logprob: -3.653393268585205
    3. ' '' → logprob: -6.278393268585205
    4. ' ' → logprob: -9.153392791748047
    5. ''' → logprob: -9.653392791748047
    6. ' ' → logprob: -10.403392791748047
    7. '_Vector' → logprob: -12.028392791748047
    8. ' vector' → logprob: -12.403392791748047
    9. '	Vector' → logprob: -13.278392791748047
    10. ' None' → logprob: -14.403392791748047

Token 78: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.00026264708139933646
    2. ' Vector' → logprob: -8.250262260437012
    3. 'Vect' → logprob: -14.625262260437012
    4. 'Vec' → logprob: -15.125262260437012
    5. 'vector' → logprob: -15.375262260437012
    6. '_Vector' → logprob: -16.125263214111328
    7. ' vector' → logprob: -16.250263214111328
    8. '	Vector' → logprob: -16.500263214111328
    9. '_vector' → logprob: -17.375263214111328
    10. 'V' → logprob: -17.500263214111328

Token 79: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. 'Vector' → logprob: -13.500001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '   ' → logprob: -16.500001907348633
    5. '```' → logprob: -17.875001907348633
    6. 'vector' → logprob: -18.875001907348633
    7. '_' → logprob: -19.375001907348633
    8. '  ' → logprob: -19.500001907348633
    9. ')' → logprob: -19.750001907348633
    10. '       ' → logprob: -20.375001907348633

Token 80: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -4.723352049040841e-06
    2. '2' → logprob: -12.625004768371582
    3. 'Vector' → logprob: -14.000004768371582
    4. '<|end|>' → logprob: -15.250004768371582
    5. ' D' → logprob: -17.125003814697266
    6. 'vector' → logprob: -17.125003814697266
    7. '<D' → logprob: -17.500003814697266
    8. '')' → logprob: -17.750003814697266
    9. 'Dto' → logprob: -17.750003814697266
    10. '```' → logprob: -17.875003814697266

Token 81: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034540340304374695
    2. '):' → logprob: -3.4095404148101807
    3. '':' → logprob: -7.659540176391602
    4. ':
' → logprob: -8.409540176391602
    5. ')' → logprob: -9.534540176391602
    6. '):
' → logprob: -9.659540176391602
    7. ''):' → logprob: -10.534540176391602
    8. '<|end|>' → logprob: -11.409540176391602
    9. '>:' → logprob: -12.409540176391602
    10. '():' → logprob: -12.534540176391602

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5497049689292908
    2. '<|end|>' → logprob: -2.1747050285339355
    3. ' 
' → logprob: -2.7997050285339355
    4. '   ' → logprob: -3.2997050285339355
    5. '(
' → logprob: -3.4247050285339355
    6. '
' → logprob: -3.4247050285339355
    7. '(' → logprob: -3.5497050285339355
    8. ':' → logprob: -3.9247050285339355
    9. ':
' → logprob: -4.0497050285339355
    10. ' ' → logprob: -4.0497050285339355

Token 83: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.681440532207489
    2. '       ' → logprob: -1.6814405918121338
    3. ' 
' → logprob: -1.6814405918121338
    4. ' return' → logprob: -2.431440591812134
    5. 'return' (adapté à ' return') → logprob: -3.556440591812134
    6. '        
' → logprob: -5.931440353393555
    7. '    
' → logprob: -7.056440353393555
    8. '  
' → logprob: -7.306440353393555
    9. '\n' → logprob: -7.931440353393555
    10. '   ' → logprob: -8.306440353393555

Token 84: ' Vector' (ID: 8764)
  Prédit: ' Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.002485050121322274
    2. 'Vector' → logprob: -6.002485275268555
    3. ' ' → logprob: -12.377485275268555
    4. ' self' → logprob: -13.252485275268555
    5. ' ' → logprob: -13.502485275268555
    6. '	Vector' → logprob: -14.002485275268555
    7. '_Vector' → logprob: -14.877485275268555
    8. 'self' → logprob: -15.127485275268555
    9. '<Vector' → logprob: -15.752485275268555
    10. ' V' → logprob: -16.002485275268555

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'Vector' → logprob: -18.0
    3. '(' → logprob: -18.75
    4. ' ' → logprob: -19.625
    5. '(Vector' → logprob: -20.0
    6. '```' → logprob: -20.125
    7. '۲' → logprob: -20.25
    8. '２' → logprob: -21.1875
    9. '<Vector' → logprob: -21.25
    10. '٢' → logprob: -21.375

Token 86: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -14.125001907348633
    3. 'Vector' → logprob: -14.250001907348633
    4. '2' → logprob: -15.625001907348633
    5. '(D' → logprob: -16.875001907348633
    6. '(Vector' → logprob: -17.750001907348633
    7. ')' → logprob: -17.875001907348633
    8. '   ' → logprob: -18.125001907348633
    9. 'Д' → logprob: -18.625001907348633
    10. 'Dto' → logprob: -18.875001907348633

Token 87: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2014201581478119
    2. '(' → logprob: -1.7014201879501343
    3. '(
' → logprob: -12.701419830322266
    4. '(s' → logprob: -12.826419830322266
    5. '(x' → logprob: -14.951419830322266
    6. 'self' → logprob: -15.201419830322266
    7. '(this' → logprob: -15.576419830322266
    8. '((' → logprob: -15.576419830322266
    9. '(

' → logprob: -16.201419830322266
    10. '(sel' → logprob: -16.701419830322266

Token 88: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.062035467475652695
    2. '.' → logprob: -2.81203556060791
    3. ' .' → logprob: -10.31203556060791
    4. 'x' → logprob: -10.56203556060791
    5. ' ' → logprob: -12.31203556060791
    6. ').' → logprob: -13.18703556060791
    7. '.s' → logprob: -15.18703556060791
    8. '.
' → logprob: -15.43703556060791
    9. '0' → logprob: -15.56203556060791
    10. '._' → logprob: -16.062034606933594

Token 89: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0046752882190048695
    2. '+' → logprob: -5.379675388336182
    3. ' ' → logprob: -9.879674911499023
    4. ' ,' → logprob: -12.754674911499023
    5. ',' → logprob: -14.754674911499023
    6. ' +
' → logprob: -15.379674911499023
    7. '+,' → logprob: -15.754674911499023
    8. ' ' → logprob: -16.129674911499023
    9. ' plus' → logprob: -17.004674911499023
    10. ' +
' → logprob: -17.504674911499023

Token 90: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.011049113236367702
    2. 'other' → logprob: -4.511049270629883
    3. '(other' → logprob: -14.386049270629883
    4. ' ' → logprob: -15.511049270629883
    5. '_other' → logprob: -15.761049270629883
    6. ' oth' → logprob: -15.761049270629883
    7. '<|end|>' → logprob: -16.011049270629883
    8. '.other' → logprob: -16.511049270629883
    9. ' o' → logprob: -16.886049270629883
    10. ' ' → logprob: -17.636049270629883

Token 91: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.57597416639328
    2. '.' → logprob: -0.82597416639328
    3. ' .' → logprob: -10.825974464416504
    4. ').' → logprob: -12.575974464416504
    5. '.xaml' → logprob: -13.325974464416504
    6. '.py' → logprob: -13.950974464416504
    7. '`.' → logprob: -13.950974464416504
    8. '.xlabel' → logprob: -14.075974464416504
    9. '‌.' → logprob: -14.325974464416504
    10. '.s' → logprob: -14.325974464416504

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003062646137550473
    2. ' ,' → logprob: -8.125306129455566
    3. ',
' → logprob: -11.625306129455566
    4. ')' → logprob: -14.375306129455566
    5. ',

' → logprob: -15.250306129455566
    6. ',self' → logprob: -16.000307083129883
    7. '       ' → logprob: -16.125307083129883
    8. ',y' → logprob: -16.750307083129883
    9. ' ,
' → logprob: -17.500307083129883
    10. '‌,' → logprob: -17.625307083129883

Token 93: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.006102150771766901
    2. 'self' → logprob: -5.506102085113525
    3. ' ' → logprob: -6.256102085113525
    4. ' ' → logprob: -9.256102561950684
    5. ' 
' → logprob: -12.631102561950684
    6. ' )' → logprob: -13.881102561950684
    7. ')' → logprob: -14.006102561950684
    8. '	self' → logprob: -14.631102561950684
    9. ' space' → logprob: -15.131102561950684
    10. '  ' → logprob: -15.631102561950684

Token 94: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38691264390945435
    2. '.y' → logprob: -1.1369125843048096
    3. '.x' → logprob: -10.76191234588623
    4. 'y' → logprob: -12.01191234588623
    5. ' .' → logprob: -12.63691234588623
    6. ').' → logprob: -13.26191234588623
    7. '<|end|>' → logprob: -13.38691234588623
    8. '.
' → logprob: -13.63691234588623
    9. ' ' → logprob: -13.63691234588623
    10. '.s' → logprob: -13.76191234588623

Token 95: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018151583150029182
    2. '+' → logprob: -4.018151760101318
    3. ')' → logprob: -14.39315128326416
    4. ' +
' → logprob: -14.76815128326416
    5. ' )' → logprob: -15.51815128326416
    6. ' ' → logprob: -15.76815128326416
    7. '+)' → logprob: -15.76815128326416
    8. ' ' → logprob: -16.518152236938477
    9. '<|end|>' → logprob: -16.518152236938477
    10. ' +

' → logprob: -16.643152236938477

Token 96: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.011057372204959393
    2. 'other' → logprob: -4.511057376861572
    3. ' ' → logprob: -11.761056900024414
    4. '(other' → logprob: -14.011056900024414
    5. ' ' → logprob: -14.886056900024414
    6. '_other' → logprob: -15.761056900024414
    7. 'Other' → logprob: -15.886056900024414
    8. '.other' → logprob: -16.636056900024414
    9. ' oth' → logprob: -17.011056900024414
    10. '  ' → logprob: -17.261056900024414

Token 97: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.07023239880800247
    2. '.' → logprob: -2.695232391357422
    3. ')' → logprob: -8.320232391357422
    4. 'y' → logprob: -10.445232391357422
    5. '.)' → logprob: -11.195232391357422
    6. '<|end|>' → logprob: -12.945232391357422
    7. ' y' → logprob: -13.570232391357422
    8. ').' → logprob: -13.570232391357422
    9. ' .' → logprob: -13.820232391357422
    10. '[' → logprob: -13.945232391357422

Token 98: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5716304410016164e-05
    2. ')
' → logprob: -10.250035285949707
    3. ' )' → logprob: -16.125036239624023
    4. ')return' → logprob: -16.875036239624023
    5. '   ' → logprob: -17.750036239624023
    6. '),' → logprob: -18.000036239624023
    7. '       ' → logprob: -18.125036239624023
    8. ')`' → logprob: -18.125036239624023
    9. ')

' → logprob: -18.250036239624023
    10. '<|end|>' → logprob: -18.875036239624023

Token 99: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.800652265548706
    2. '<|end|>' → logprob: -0.800652265548706
    3. '   ' → logprob: -2.425652265548706
    4. '    
' → logprob: -5.675652503967285
    5. '<|end|>' → logprob: -5.925652503967285
    6. ' ' → logprob: -6.175652503967285
    7. ' 
' → logprob: -6.175652503967285
    8. '```' → logprob: -6.800652503967285
    9. '\n' → logprob: -7.675652503967285
    10. '  
' → logprob: -7.800652503967285

Token 100: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4374570846557617
    2. '
' → logprob: -1.0624570846557617
    3. 'def' (adapté à ' def') → logprob: -5.562457084655762
    4. '    
' → logprob: -5.687457084655762
    5. ' 
' → logprob: -7.437457084655762
    6. ' def' → logprob: -8.437457084655762
    7. ' ' → logprob: -8.687457084655762
    8. '  
' → logprob: -9.062457084655762
    9. '   
' → logprob: -9.312457084655762
    10. '```' → logprob: -9.687457084655762

Token 101: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.14165301620960236
    2. ' def' → logprob: -2.516653060913086
    3. ' ' → logprob: -3.766653060913086
    4. ' ' → logprob: -4.266653060913086
    5. '__' → logprob: -5.016653060913086
    6. 'def' → logprob: -6.641653060913086
    7. ')' → logprob: -6.891653060913086
    8. '-' → logprob: -7.016653060913086
    9. ' `' → logprob: -7.266653060913086
    10. '_' → logprob: -7.641653060913086

Token 102: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.034318387508392334
    2. 'mul' → logprob: -3.409318447113037
    3. 'eq' → logprob: -8.034317970275879
    4. 'repr' → logprob: -8.159317970275879
    5. '-' → logprob: -10.034317970275879
    6. 'str' → logprob: -12.159317970275879
    7. 'neg' → logprob: -12.534317970275879
    8. 'su' → logprob: -12.909317970275879
    9. 'i' → logprob: -13.534317970275879
    10. '```' → logprob: -13.784317970275879

Token 103: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5765418410301208
    2. '__' → logprob: -0.8265418410301208
    3. '__(
' → logprob: -8.326541900634766
    4. '__('' → logprob: -8.576541900634766
    5. '__((' → logprob: -8.826541900634766
    6. '__("' → logprob: -11.326541900634766
    7. '__(*' → logprob: -11.951541900634766
    8. '__.__' → logprob: -13.076541900634766
    9. '(' → logprob: -13.201541900634766
    10. '__[' → logprob: -13.951541900634766

Token 104: 'self' (ID: 1156)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.01829369366168976
    2. 'self' → logprob: -4.018293857574463
    3. ' other' → logprob: -8.893293380737305
    4. 'Other' → logprob: -13.018293380737305
    5. '(other' → logprob: -13.268293380737305
    6. ' self' → logprob: -13.643293380737305
    7. ')' → logprob: -14.768293380737305
    8. '(self' → logprob: -14.893293380737305
    9. 'othe' → logprob: -15.143293380737305
    10. '_other' → logprob: -15.518293380737305

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05413023754954338
    2. '(self' → logprob: -3.0541303157806396
    3. '(' → logprob: -6.1791300773620605
    4. '__(' → logprob: -6.4291300773620605
    5. ' ,' → logprob: -6.9291300773620605
    6. '',' → logprob: -8.054130554199219
    7. ')(' → logprob: -8.429130554199219
    8. 'self' → logprob: -9.304130554199219
    9. '<|end|>' → logprob: -9.679130554199219
    10. ' (' → logprob: -10.054130554199219

Token 106: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.04859395697712898
    2. 'other' → logprob: -3.0485939979553223
    3. 'Other' → logprob: -12.173593521118164
    4. '(other' → logprob: -13.923593521118164
    5. '_other' → logprob: -15.548593521118164
    6. ' ' → logprob: -15.923593521118164
    7. 'self' → logprob: -16.673593521118164
    8. '<|end|>' → logprob: -16.673593521118164
    9. '.other' → logprob: -17.048593521118164
    10. ' self' → logprob: -17.798593521118164

Token 107: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01161465048789978
    2. ' :' → logprob: -4.761614799499512
    3. '):' → logprob: -6.261614799499512
    4. '<|end|>' → logprob: -7.136614799499512
    5. ')' → logprob: -8.636614799499512
    6. '<|end|>' → logprob: -9.511614799499512
    7. ' ):' → logprob: -11.261614799499512
    8. ',' → logprob: -12.261614799499512
    9. '):
' → logprob: -12.511614799499512
    10. '':' → logprob: -12.511614799499512

Token 108: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.29847079515457153
    2. ''' → logprob: -1.4234707355499268
    3. '<|end|>' → logprob: -4.923470973968506
    4. ' other' → logprob: -5.423470973968506
    5. ' ' → logprob: -5.548470973968506
    6. ''s' → logprob: -7.673470973968506
    7. 'other' → logprob: -8.173470497131348
    8. ' Vector' → logprob: -8.173470497131348
    9. ')' → logprob: -8.423470497131348
    10. 'Vector' → logprob: -9.048470497131348

Token 109: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -6.511406809295295e-06
    2. ' Vector' → logprob: -12.250006675720215
    3. '<Vector' → logprob: -14.625006675720215
    4. '	Vector' → logprob: -14.875006675720215
    5. '_Vector' → logprob: -15.125006675720215
    6. 'vector' → logprob: -16.0000057220459
    7. '_vector' → logprob: -16.0000057220459
    8. '<|end|>' → logprob: -16.3750057220459
    9. 'Vectors' → logprob: -16.8750057220459
    10. '.Vector' → logprob: -16.8750057220459

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. 'Vector' → logprob: -12.500003814697266
    3. ' ' → logprob: -16.625003814697266
    4. '<Vector' → logprob: -17.250003814697266
    5. 'vector' → logprob: -17.625003814697266
    6. '```' → logprob: -17.625003814697266
    7. '₂' → logprob: -18.000003814697266
    8. ' Vector' → logprob: -18.125003814697266
    9. ')' → logprob: -18.125003814697266
    10. ''' → logprob: -18.250003814697266

Token 111: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0036056553944945335
    2. '2' → logprob: -5.628605842590332
    3. 'Vector' → logprob: -12.628605842590332
    4. ''' → logprob: -14.378605842590332
    5. '')' → logprob: -14.628605842590332
    6. ''D' → logprob: -15.003605842590332
    7. 'vector' → logprob: -15.128605842590332
    8. ' ' → logprob: -15.878605842590332
    9. ' D' → logprob: -15.878605842590332
    10. '```' → logprob: -16.503604888916016

Token 112: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.018434248864650726
    2. ''):' → logprob: -4.518434047698975
    3. ')' → logprob: -5.393434047698975
    4. ''):
' → logprob: -5.893434047698975
    5. '):' → logprob: -11.018434524536133
    6. '')
' → logprob: -11.518434524536133
    7. ''' → logprob: -12.018434524536133
    8. ' '' → logprob: -12.393434524536133
    9. ''):
' → logprob: -12.393434524536133
    10. '   ' → logprob: -12.518434524536133

Token 113: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004363063722848892
    2. ')' → logprob: -6.754363059997559
    3. '):' → logprob: -6.754363059997559
    4. ' :' → logprob: -7.129363059997559
    5. ':
' → logprob: -7.254363059997559
    6. ':return' → logprob: -8.379363059997559
    7. '<|end|>' → logprob: -8.754363059997559
    8. '       ' → logprob: -10.004363059997559
    9. '):
' → logprob: -10.879363059997559
    10. '   ' → logprob: -10.879363059997559

Token 114: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.33761176466941833
    2. ''' → logprob: -2.087611675262451
    3. ' Vector' → logprob: -2.087611675262451
    4. 'Vector' → logprob: -3.462611675262451
    5. ' ' → logprob: -5.087611675262451
    6. ' ' → logprob: -7.587611675262451
    7. ''s' → logprob: -8.83761215209961
    8. '_Vector' → logprob: -9.71261215209961
    9. 'other' → logprob: -9.83761215209961
    10. '	Vector' → logprob: -9.96261215209961

Token 115: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -1.2471589798224159e-05
    2. ' Vector' → logprob: -11.750012397766113
    3. '<Vector' → logprob: -13.625012397766113
    4. '	Vector' → logprob: -13.750012397766113
    5. '_Vector' → logprob: -13.875012397766113
    6. 'vector' → logprob: -14.750012397766113
    7. '<|end|>' → logprob: -15.500012397766113
    8. '_vector' → logprob: -15.500012397766113
    9. '.Vector' → logprob: -15.875012397766113
    10. '(Vector' → logprob: -16.12501335144043

Token 116: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. 'Vector' → logprob: -13.500001907348633
    3. ' ' → logprob: -15.125001907348633
    4. '```' → logprob: -15.875001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '<Vector' → logprob: -17.750001907348633
    7. ''' → logprob: -18.000001907348633
    8. '<|end|>' → logprob: -18.250001907348633
    9. '  ' → logprob: -18.500001907348633
    10. '
' → logprob: -19.250001907348633

Token 117: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.1427389234304428
    2. '2' → logprob: -2.0177388191223145
    3. 'Vector' → logprob: -9.892739295959473
    4. ''' → logprob: -12.642739295959473
    5. ''D' → logprob: -12.892739295959473
    6. ' ' → logprob: -13.642739295959473
    7. ' D' → logprob: -13.892739295959473
    8. ''s' → logprob: -13.892739295959473
    9. 'vector' → logprob: -13.892739295959473
    10. '<|end|>' → logprob: -14.267739295959473

Token 118: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.26311761140823364
    2. '':
' → logprob: -2.638117551803589
    3. ''):
' → logprob: -3.013117551803589
    4. ''):' → logprob: -3.388117551803589
    5. '):
' → logprob: -3.763117551803589
    6. '):' → logprob: -3.888117551803589
    7. ':' → logprob: -4.138117790222168
    8. ''' → logprob: -4.638117790222168
    9. ':
' → logprob: -5.763117790222168
    10. '   ' → logprob: -7.013117790222168

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017225458286702633
    2. ' return' → logprob: -6.50172233581543
    3. '
' → logprob: -8.87672233581543
    4. 'return' → logprob: -10.12672233581543
    5. ' 
' → logprob: -11.00172233581543
    6. '   ' → logprob: -11.37672233581543
    7. '      ' → logprob: -12.75172233581543
    8. ' ' → logprob: -13.25172233581543
    9. '        
' → logprob: -13.25172233581543
    10. '  
' → logprob: -13.62672233581543

Token 120: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.039179034531116486
    2. ' return' → logprob: -3.2891790866851807
    3. '       ' → logprob: -6.789178848266602
    4. '
' → logprob: -12.914178848266602
    5. 'Vector' → logprob: -12.914178848266602
    6. '   ' → logprob: -13.039178848266602
    7. '        ' → logprob: -14.539178848266602
    8. '	return' → logprob: -14.539178848266602
    9. 'ret' → logprob: -14.539178848266602
    10. '```' → logprob: -14.539178848266602

Token 121: ' Vector' (ID: 8764)
  Prédit: ' Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.0002600245934445411
    2. 'Vector' → logprob: -8.375260353088379
    3. ' ' → logprob: -10.625260353088379
    4. ' ' → logprob: -13.000260353088379
    5. '	Vector' → logprob: -13.250260353088379
    6. '(Vector' → logprob: -14.250260353088379
    7. '_Vector' → logprob: -15.250260353088379
    8. '<Vector' → logprob: -16.500259399414062
    9. '.Vector' → logprob: -17.125259399414062
    10. ' Vec' → logprob: -17.625259399414062

Token 122: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. 'Vector' → logprob: -14.125000953674316
    3. '(Vector' → logprob: -17.375
    4. '(' → logprob: -18.25
    5. '```' → logprob: -19.25
    6. '   ' → logprob: -19.625
    7. ' ' → logprob: -20.0
    8. '<Vector' → logprob: -20.75
    9. '₂' → logprob: -21.625
    10. '' → logprob: -21.875

Token 123: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0016674461076036096
    2. '2' → logprob: -6.876667499542236
    3. 'Vector' → logprob: -7.376667499542236
    4. 'C' → logprob: -12.376667022705078
    5. '(Vector' → logprob: -14.001667022705078
    6. '.Vector' → logprob: -14.251667022705078
    7. 'vector' → logprob: -14.376667022705078
    8. '<Vector' → logprob: -14.751667022705078
    9. 'V' → logprob: -15.001667022705078
    10. 'Dto' → logprob: -15.876667022705078

Token 124: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012415809032972902
    2. '(' → logprob: -9.000123977661133
    3. '(
' → logprob: -15.000123977661133
    4. '(s' → logprob: -15.125123977661133
    5. ' (' → logprob: -16.375123977661133
    6. 'self' → logprob: -17.250123977661133
    7. '(this' → logprob: -18.625123977661133
    8. '(sel' → logprob: -19.375123977661133
    9. '((' → logprob: -20.750123977661133
    10. ' self' → logprob: -21.375123977661133

Token 125: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0011908221058547497
    2. '.' → logprob: -6.751190662384033
    3. 'x' → logprob: -10.876191139221191
    4. ' .' → logprob: -13.626191139221191
    5. '<|end|>' → logprob: -15.626191139221191
    6. ' x' → logprob: -16.251190185546875
    7. ').' → logprob: -16.626190185546875
    8. '```' → logprob: -16.751190185546875
    9. '`.' → logprob: -17.251190185546875
    10. ' ' → logprob: -17.751190185546875

Token 126: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0002786167024169117
    2. '-' → logprob: -8.50027847290039
    3. ' ' → logprob: -10.12527847290039
    4. '<|end|>' → logprob: -10.50027847290039
    5. ' ' → logprob: -12.00027847290039
    6. ' −' → logprob: -15.12527847290039
    7. ' -
' → logprob: -15.12527847290039
    8. ' –' → logprob: -15.75027847290039
    9. ' ‌' → logprob: -16.12527847290039
    10. '<|end|>' → logprob: -16.31277847290039

Token 127: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.06197451800107956
    2. 'other' → logprob: -2.81197452545166
    3. '<|end|>' → logprob: -12.81197452545166
    4. '(other' → logprob: -12.93697452545166
    5. 'Other' → logprob: -14.06197452545166
    6. '_other' → logprob: -14.43697452545166
    7. '.other' → logprob: -15.18697452545166
    8. ' ' → logprob: -16.436973571777344
    9. ' oth' → logprob: -17.061973571777344
    10. ' Other' → logprob: -17.561973571777344

Token 128: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.06204420328140259
    2. '.' → logprob: -2.812044143676758
    3. ' .' → logprob: -9.562044143676758
    4. ' ' → logprob: -13.562044143676758
    5. '.y' → logprob: -13.562044143676758
    6. '<|end|>' → logprob: -13.562044143676758
    7. 'x' → logprob: -13.687044143676758
    8. '.
' → logprob: -15.187044143676758
    9. ').' → logprob: -15.687044143676758
    10. ' x' → logprob: -16.062044143676758

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039135036058723927
    2. ' ,' → logprob: -7.875391483306885
    3. '       ' → logprob: -12.250391006469727
    4. ',
' → logprob: -12.500391006469727
    5. ',y' → logprob: -14.375391006469727
    6. ')' → logprob: -14.750391006469727
    7. '<|end|>' → logprob: -14.875391006469727
    8. 's' → logprob: -15.125391006469727
    9. '),' → logprob: -15.750391006469727
    10. '   ' → logprob: -15.875391006469727

Token 130: ' self' (ID: 1051)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.00043138445471413434
    2. 'other' → logprob: -7.750431537628174
    3. ' oth' → logprob: -15.500431060791016
    4. ' self' → logprob: -16.000431060791016
    5. ' ' → logprob: -16.000431060791016
    6. ' ' → logprob: -16.125431060791016
    7. 'Other' → logprob: -16.625431060791016
    8. '(other' → logprob: -17.500431060791016
    9. ' o' → logprob: -18.250431060791016
    10. '.other' → logprob: -18.500431060791016

Token 131: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6653282642364502
    2. '.y' → logprob: -1.4153282642364502
    3. '.x' → logprob: -1.4153282642364502
    4. ' .' → logprob: -8.915328025817871
    5. 'y' → logprob: -10.290328025817871
    6. '.
' → logprob: -11.790328025817871
    7. '-' → logprob: -11.915328025817871
    8. '```' → logprob: -12.290328025817871
    9. 'x' → logprob: -12.790328025817871
    10. '.s' → logprob: -13.165328025817871

Token 132: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.043039727956056595
    2. '-' → logprob: -3.1680397987365723
    3. ' ' → logprob: -10.668039321899414
    4. ')' → logprob: -12.668039321899414
    5. ' y' → logprob: -12.918039321899414
    6. '.y' → logprob: -12.918039321899414
    7. ' -
' → logprob: -12.918039321899414
    8. '<|end|>' → logprob: -12.918039321899414
    9. '.' → logprob: -13.668039321899414
    10. ' ' → logprob: -14.043039321899414

Token 133: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.25193214416503906
    2. ' other' → logprob: -1.501932144165039
    3. '(other' → logprob: -13.001932144165039
    4. 'Other' → logprob: -15.001932144165039
    5. '.other' → logprob: -15.126932144165039
    6. ' ' → logprob: -16.75193214416504
    7. '_other' → logprob: -17.25193214416504
    8. 'othe' → logprob: -17.75193214416504
    9. '<|end|>' → logprob: -18.12693214416504
    10. '   ' → logprob: -18.50193214416504

Token 134: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0031356513500213623
    2. 'y' → logprob: -6.128135681152344
    3. '2' → logprob: -7.378135681152344
    4. '.' → logprob: -8.628135681152344
    5. '-' → logprob: -9.253135681152344
    6. '.x' → logprob: -11.378135681152344
    7. ' ' → logprob: -12.003135681152344
    8. ')' → logprob: -12.128135681152344
    9. '-y' → logprob: -12.378135681152344
    10. '[' → logprob: -12.503135681152344

Token 135: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.180258191714529e-06
    2. ')
' → logprob: -12.000008583068848
    3. '       ' → logprob: -13.375008583068848
    4. ' )' → logprob: -15.375008583068848
    5. '   ' → logprob: -15.750008583068848
    6. ')return' → logprob: -17.00000762939453
    7. ')

' → logprob: -17.75000762939453
    8. '<|end|>' → logprob: -18.25000762939453
    9. '))' → logprob: -18.37500762939453
    10. ' ' → logprob: -19.25000762939453

Token 136: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4320164620876312
    2. '   ' → logprob: -1.3070164918899536
    3. ' 
' → logprob: -3.307016372680664
    4. '<|end|>' → logprob: -3.682016372680664
    5. ' ' → logprob: -4.932016372680664
    6. '    
' → logprob: -5.057016372680664
    7. '  
' → logprob: -5.932016372680664
    8. '   
' → logprob: -7.932016372680664
    9. '```' → logprob: -8.182016372680664
    10. '  ' → logprob: -8.682016372680664

Token 137: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042329467833042145
    2. 'def' (adapté à ' def') → logprob: -3.2923295497894287
    3. ' def' → logprob: -5.54232931137085
    4. '    
' → logprob: -8.667329788208008
    5. ' 
' → logprob: -9.792329788208008
    6. ')' → logprob: -10.167329788208008
    7. ' ' → logprob: -10.167329788208008
    8. '
' → logprob: -11.542329788208008
    9. '	def' → logprob: -11.917329788208008
    10. '```' → logprob: -11.917329788208008

Token 138: ' scale' (ID: 9318)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.63462895154953
    2. ' ' → logprob: -1.2596290111541748
    3. ' __' → logprob: -1.8846290111541748
    4. '_' → logprob: -4.759628772735596
    5. '__' → logprob: -5.259628772735596
    6. ' length' → logprob: -5.384628772735596
    7. ' dot' → logprob: -5.634628772735596
    8. 'def' → logprob: -5.884628772735596
    9. ' _' → logprob: -6.509628772735596
    10. ' *' → logprob: -6.884628772735596

Token 139: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1018403097987175
    2. '(self' → logprob: -2.3518402576446533
    3. '<|end|>' → logprob: -7.226840496063232
    4. '(
' → logprob: -7.601840496063232
    5. ' (' → logprob: -8.601840019226074
    6. '(s' → logprob: -8.726840019226074
    7. '<|end|>' → logprob: -10.601840019226074
    8. '(

' → logprob: -11.601840019226074
    9. '```' → logprob: -12.726840019226074
    10. ' ' → logprob: -13.226840019226074

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011628384236246347
    2. ' ,' → logprob: -7.126163005828857
    3. '<|end|>' → logprob: -8.7511625289917
    4. ')' → logprob: -9.2511625289917
    5. ' *' → logprob: -10.3761625289917
    6. '(self' → logprob: -10.6261625289917
    7. '<|end|>' → logprob: -11.5011625289917
    8. 'self' → logprob: -11.5011625289917
    9. '*' → logprob: -12.1261625289917
    10. ',
' → logprob: -12.1261625289917

Token 141: ' factor' (ID: 12332)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.5748779773712158
    2. ' factor' → logprob: -1.3248779773712158
    3. 'self' → logprob: -2.324877977371216
    4. ' self' → logprob: -2.824877977371216
    5. ' scalar' → logprob: -4.699877738952637
    6. 'scalar' → logprob: -5.574877738952637
    7. 'scale' → logprob: -7.699877738952637
    8. ' scale' → logprob: -8.074877738952637
    9. 's' → logprob: -8.449877738952637
    10. ' ' → logprob: -8.574877738952637

Token 142: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40030962228775024
    2. ':' → logprob: -2.1503095626831055
    3. '(self' → logprob: -2.2753095626831055
    4. ')' → logprob: -3.0253095626831055
    5. '<|end|>' → logprob: -3.5253095626831055
    6. 'self' → logprob: -4.2753095626831055
    7. '<|end|>' → logprob: -5.0253095626831055
    8. ',' → logprob: -5.5253095626831055
    9. '):
' → logprob: -5.5253095626831055
    10. ' self' → logprob: -5.9003095626831055

Token 143: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.03817793354392052
    2. 'float' → logprob: -3.288177967071533
    3. ' ' → logprob: -10.038177490234375
    4. ')' → logprob: -10.788177490234375
    5. '(float' → logprob: -10.788177490234375
    6. ' ' → logprob: -11.038177490234375
    7. ',float' → logprob: -11.163177490234375
    8. '=float' → logprob: -11.538177490234375
    9. '	float' → logprob: -12.663177490234375
    10. '<|end|>' → logprob: -12.788177490234375

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4779585003852844
    2. '):' → logprob: -0.9779585003852844
    3. '):
' → logprob: -5.602958679199219
    4. ' )' → logprob: -9.352958679199219
    5. ' ):' → logprob: -9.602958679199219
    6. '   ' → logprob: -11.227958679199219
    7. ')->' → logprob: -11.727958679199219
    8. ':' → logprob: -12.227958679199219
    9. '):
' → logprob: -13.352958679199219
    10. '):

' → logprob: -13.602958679199219

Token 145: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009369158186018467
    2. '):' → logprob: -4.759369373321533
    3. ':
' → logprob: -7.759369373321533
    4. ')' → logprob: -8.634368896484375
    5. ' :' → logprob: -9.384368896484375
    6. '):
' → logprob: -10.134368896484375
    7. ':return' → logprob: -11.759368896484375
    8. ' ->' → logprob: -12.009368896484375
    9. ')->' → logprob: -12.134368896484375
    10. '->' → logprob: -12.884368896484375

Token 146: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.3710140585899353
    2. ' Vector' → logprob: -1.62101411819458
    3. ''' → logprob: -2.49601411819458
    4. 'Vector' → logprob: -3.62101411819458
    5. ' None' → logprob: -6.12101411819458
    6. 'None' → logprob: -7.49601411819458
    7. ' ' → logprob: -8.621013641357422
    8. ' ' → logprob: -9.246013641357422
    9. '	Vector' → logprob: -10.996013641357422
    10. '_Vector' → logprob: -11.246013641357422

Token 147: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -4.0722858102526516e-05
    2. ' Vector' → logprob: -10.125041007995605
    3. '_Vector' → logprob: -15.875041007995605
    4. '	Vector' → logprob: -16.00004005432129
    5. 'vector' → logprob: -16.12504005432129
    6. '_vector' → logprob: -16.87504005432129
    7. '<Vector' → logprob: -16.87504005432129
    8. 'Vectors' → logprob: -17.37504005432129
    9. '.Vector' → logprob: -17.50004005432129
    10. 'Vect' → logprob: -18.12504005432129

Token 148: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.153795766294934e-06
    2. 'Vector' → logprob: -12.250005722045898
    3. ' ' → logprob: -14.125005722045898
    4. '   ' → logprob: -15.250005722045898
    5. '```' → logprob: -16.1250057220459
    6. ' Vector' → logprob: -16.2500057220459
    7. '  ' → logprob: -16.3750057220459
    8. '<Vector' → logprob: -17.3750057220459
    9. '    ' → logprob: -17.8750057220459
    10. '<|end|>' → logprob: -18.6250057220459

Token 149: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.001180704333819449
    2. '2' → logprob: -6.751180648803711
    3. 'Vector' → logprob: -11.626180648803711
    4. ' D' → logprob: -14.376180648803711
    5. ''D' → logprob: -15.001180648803711
    6. 'vector' → logprob: -16.12618064880371
    7. '```' → logprob: -16.12618064880371
    8. '<D' → logprob: -16.62618064880371
    9. ' ' → logprob: -16.62618064880371
    10. '_D' → logprob: -16.75118064880371

Token 150: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.24337223172187805
    2. '':
' → logprob: -1.6183722019195557
    3. ''' → logprob: -4.993372440338135
    4. '):
' → logprob: -5.368372440338135
    5. '):' → logprob: -5.618372440338135
    6. ''):
' → logprob: -6.618372440338135
    7. ''):' → logprob: -7.743372440338135
    8. ':' → logprob: -7.743372440338135
    9. ':
' → logprob: -8.743371963500977
    10. ')' → logprob: -9.368371963500977

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05098653957247734
    2. '
' → logprob: -3.3009865283966064
    3. ' return' → logprob: -4.8009867668151855
    4. 'return' → logprob: -5.6759867668151855
    5. ' 
' → logprob: -7.5509867668151855
    6. '        
' → logprob: -7.8009867668151855
    7. '   ' → logprob: -9.300986289978027
    8. '<|end|>' → logprob: -9.300986289978027
    9. '    
' → logprob: -10.425986289978027
    10. '  
' → logprob: -10.675986289978027

Token 152: ' return' (ID: 622)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.6727696061134338
    2. 'return' (adapté à ' return') → logprob: -1.172769546508789
    3. ' return' → logprob: -1.922769546508789
    4. ' Vector' → logprob: -3.422769546508789
    5. '       ' → logprob: -6.672769546508789
    6. '   ' → logprob: -9.297769546508789
    7. 'Return' → logprob: -12.297769546508789
    8. ' ' → logprob: -12.297769546508789
    9. '    ' → logprob: -13.297769546508789
    10. '_Vector' → logprob: -13.547769546508789

Token 153: ' Vector' (ID: 8764)
  Prédit: ' Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.31328749656677246
    2. 'Vector' → logprob: -1.3132874965667725
    3. '	Vector' → logprob: -10.813287734985352
    4. ' ' → logprob: -13.063287734985352
    5. ' ' → logprob: -13.813287734985352
    6. '<Vector' → logprob: -14.188287734985352
    7. '_Vector' → logprob: -14.313287734985352
    8. '(Vector' → logprob: -14.438287734985352
    9. '  ' → logprob: -14.688287734985352
    10. '   ' → logprob: -15.938287734985352

Token 154: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. 'Vector' → logprob: -14.875
    3. '```' → logprob: -19.375
    4. '   ' → logprob: -19.875
    5. '(Vector' → logprob: -20.0
    6. ' ' → logprob: -21.5
    7. 'Two' → logprob: -21.875
    8. '۲' → logprob: -22.0
    9. '       ' → logprob: -22.125
    10. 'Scale' → logprob: -22.5

Token 155: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00012737659562844783
    2. 'Vector' → logprob: -9.875127792358398
    3. '2' → logprob: -10.375127792358398
    4. '(' → logprob: -10.500127792358398
    5. '(D' → logprob: -11.250127792358398
    6. '('' → logprob: -12.875127792358398
    7. '(Vector' → logprob: -14.250127792358398
    8. ''D' → logprob: -16.0001277923584
    9. '(float' → logprob: -16.1251277923584
    10. '_D' → logprob: -16.1251277923584

Token 156: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004082078114151955
    2. '(' → logprob: -5.504082202911377
    3. '(
' → logprob: -13.129081726074219
    4. '(s' → logprob: -13.629081726074219
    5. ' (' → logprob: -15.254081726074219
    6. 'self' → logprob: -15.504081726074219
    7. '(this' → logprob: -17.25408172607422
    8. '(

' → logprob: -17.50408172607422
    9. '(sel' → logprob: -18.37908172607422
    10. '((' → logprob: -19.12908172607422

Token 157: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0028171204030513763
    2. '.' → logprob: -5.877817153930664
    3. ' .' → logprob: -11.752817153930664
    4. 'x' → logprob: -12.502817153930664
    5. ' ' → logprob: -14.752817153930664
    6. '.
' → logprob: -16.752817153930664
    7. ').' → logprob: -17.377817153930664
    8. '0' → logprob: -17.502817153930664
    9. '.s' → logprob: -17.752817153930664
    10. '<|end|>' → logprob: -18.002817153930664

Token 158: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00010163593105971813
    2. '*' → logprob: -9.375102043151855
    3. ' ' → logprob: -11.000102043151855
    4. ' **' → logprob: -17.25010108947754
    5. ' ' → logprob: -17.37510108947754
    6. ',' → logprob: -18.25010108947754
    7. '   ' → logprob: -19.00010108947754
    8. '    ' → logprob: -19.37510108947754
    9. ' ,' → logprob: -19.50010108947754
    10. '  ' → logprob: -19.62510108947754

Token 159: ' factor' (ID: 12332)
  Prédit: ' factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factor' → logprob: -0.023249788209795952
    2. 'factor' → logprob: -3.773249864578247
    3. ' f' → logprob: -13.023249626159668
    4. ' ' → logprob: -14.148249626159668
    5. ' fator' → logprob: -14.773249626159668
    6. ' 
' → logprob: -15.398249626159668
    7. 'f' → logprob: -15.773249626159668
    8. ' factorial' → logprob: -15.898249626159668
    9. ' ' → logprob: -16.023250579833984
    10. ' facteur' → logprob: -16.523250579833984

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011355629976605996
    2. ' ,' → logprob: -9.125113487243652
    3. ',
' → logprob: -12.500113487243652
    4. '       ' → logprob: -14.875113487243652
    5. ',

' → logprob: -15.625113487243652
    6. ',self' → logprob: -15.625113487243652
    7. ')' → logprob: -15.750113487243652
    8. '   ' → logprob: -17.25011444091797
    9. '),' → logprob: -17.62511444091797
    10. '<|end|>' → logprob: -17.87511444091797

Token 161: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.06197194382548332
    2. 'self' → logprob: -2.81197190284729
    3. ' ' → logprob: -13.436971664428711
    4. '	self' → logprob: -13.811971664428711
    5. '       ' → logprob: -14.686971664428711
    6. ' ' → logprob: -15.436971664428711
    7. '   ' → logprob: -15.686971664428711
    8. '(self' → logprob: -15.686971664428711
    9. ' 
' → logprob: -15.686971664428711
    10. '
' → logprob: -15.936971664428711

Token 162: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0017355133313685656
    2. '.' → logprob: -6.376735687255859
    3. 'y' → logprob: -10.37673568725586
    4. ' .' → logprob: -13.62673568725586
    5. '.x' → logprob: -14.75173568725586
    6. ' y' → logprob: -15.50173568725586
    7. '	y' → logprob: -16.12673568725586
    8. '.py' → logprob: -17.37673568725586
    9. ' ' → logprob: -17.75173568725586
    10. '```' → logprob: -18.00173568725586

Token 163: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -4.751746746478602e-05
    2. '*' → logprob: -10.00004768371582
    3. ' ' → logprob: -13.12504768371582
    4. ' ' → logprob: -16.62504768371582
    5. '<|end|>' → logprob: -17.50004768371582
    6. ')' → logprob: -18.12504768371582
    7. '*object' → logprob: -20.06254768371582
    8. ' *
' → logprob: -20.31254768371582
    9. ',' → logprob: -20.31254768371582
    10. ' **' → logprob: -20.43754768371582

Token 164: ' factor' (ID: 12332)
  Prédit: ' factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factor' → logprob: -0.2026219367980957
    2. 'factor' → logprob: -1.7026219367980957
    3. ' self' → logprob: -7.077621936798096
    4. 'self' → logprob: -7.952621936798096
    5. ' ' → logprob: -12.452621459960938
    6. '.factor' → logprob: -12.702621459960938
    7. '_factor' → logprob: -14.077621459960938
    8. ' fator' → logprob: -14.077621459960938
    9. '       ' → logprob: -14.577621459960938
    10. '   ' → logprob: -14.702621459960938

Token 165: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ')
' → logprob: -12.250005722045898
    3. ')

' → logprob: -14.125005722045898
    4. ' )' → logprob: -15.875005722045898
    5. '   ' → logprob: -17.8750057220459
    6. ')return' → logprob: -19.8750057220459
    7. '),' → logprob: -20.1250057220459
    8. ')
' → logprob: -20.5000057220459
    9. ' ' → logprob: -20.7500057220459
    10. '))' → logprob: -20.8750057220459

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04835387319326401
    2. '<|end|>' → logprob: -3.798353910446167
    3. '
' → logprob: -3.923353910446167
    4. '    
' → logprob: -6.298353672027588
    5. ' ' → logprob: -6.923353672027588
    6. ' 
' → logprob: -7.548353672027588
    7. '```' → logprob: -7.923353672027588
    8. '\n' → logprob: -8.173354148864746
    9. '  ' → logprob: -8.798354148864746
    10. '<|end|>' → logprob: -8.798354148864746

Token 167: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1904469132423401
    2. '   ' → logprob: -1.8154468536376953
    3. ' def' → logprob: -4.565446853637695
    4. '    
' → logprob: -8.690446853637695
    5. '	def' → logprob: -10.440446853637695
    6. ' ' → logprob: -12.065446853637695
    7. '    

' → logprob: -12.190446853637695
    8. '
' → logprob: -12.315446853637695
    9. ')' → logprob: -12.440446853637695
    10. '        
' → logprob: -12.815446853637695

Token 168: ' rotate' (ID: 31987)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.6065130829811096
    2. ' def' → logprob: -1.2315130233764648
    3. ' magnitude' → logprob: -2.356513023376465
    4. ' rotate' → logprob: -3.106513023376465
    5. ' dot' → logprob: -3.981513023376465
    6. ' norm' → logprob: -5.856513023376465
    7. 'length' → logprob: -7.481513023376465
    8. ' ' → logprob: -7.856513023376465
    9. 'rotate' → logprob: -8.731513023376465
    10. 'm' → logprob: -9.106513023376465

Token 169: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.833878508885391e-05
    2. ' (' → logprob: -10.625038146972656
    3. '(' → logprob: -11.375038146972656
    4. 'self' → logprob: -13.500038146972656
    5. '(
' → logprob: -14.375038146972656
    6. '(s' → logprob: -15.000038146972656
    7. '(sel' → logprob: -16.500038146972656
    8. ' self' → logprob: -17.000038146972656
    9. '   ' → logprob: -17.000038146972656
    10. ' ' → logprob: -18.250038146972656

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004344786982983351
    2. '(self' → logprob: -6.379344940185547
    3. ')' → logprob: -7.254344940185547
    4. '(angle' → logprob: -7.379344940185547
    5. ' ,' → logprob: -7.879344940185547
    6. 'self' → logprob: -8.004344940185547
    7. ',r' → logprob: -8.504344940185547
    8. '(' → logprob: -9.129344940185547
    9. ',self' → logprob: -9.254344940185547
    10. 'angle' → logprob: -10.004344940185547

Token 171: ' degree' (ID: 9882)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.6942594647407532
    2. ' angle' → logprob: -0.6942594647407532
    3. 'self' → logprob: -7.5692596435546875
    4. ' self' → logprob: -8.069259643554688
    5. 'degrees' → logprob: -8.819259643554688
    6. 'theta' → logprob: -9.944259643554688
    7. ' degrees' → logprob: -10.069259643554688
    8. ' ' → logprob: -10.944259643554688
    9. 'degree' → logprob: -11.944259643554688
    10. '   ' → logprob: -12.069259643554688

Token 172: ':' (ID: 25)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03265763446688652
    2. ')' → logprob: -3.6576576232910156
    3. '):' → logprob: -5.407657623291016
    4. 'angle' → logprob: -6.907657623291016
    5. '):
' → logprob: -8.282657623291016
    6. '   ' → logprob: -9.032657623291016
    7. '_angle' → logprob: -9.032657623291016
    8. '(self' → logprob: -9.157657623291016
    9. ',' → logprob: -9.407657623291016
    10. '(angle' → logprob: -10.157657623291016

Token 173: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.28175094723701477
    2. 's' → logprob: -1.7817509174346924
    3. ' float' → logprob: -2.7817509174346924
    4. ')' → logprob: -4.9067511558532715
    5. 'int' → logprob: -5.0317511558532715
    6. '):' → logprob: -7.4067511558532715
    7. ' ' → logprob: -9.281750679016113
    8. ' int' → logprob: -9.281750679016113
    9. '):
' → logprob: -9.281750679016113
    10. '=float' → logprob: -9.406750679016113

Token 174: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014057260006666183
    2. '):' → logprob: -4.514057159423828
    3. '):
' → logprob: -5.889057159423828
    4. ' )' → logprob: -8.639057159423828
    5. '   ' → logprob: -10.139057159423828
    6. ' ):' → logprob: -12.514057159423828
    7. '):

' → logprob: -12.639057159423828
    8. '):
' → logprob: -12.764057159423828
    9. ':' → logprob: -12.889057159423828
    10. ' ):
' → logprob: -13.764057159423828

Token 175: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1258263736963272
    2. ')' → logprob: -2.375826358795166
    3. ' ->' → logprob: -4.125826358795166
    4. '):' → logprob: -5.250826358795166
    5. '->' → logprob: -6.625826358795166
    6. ' :' → logprob: -6.875826358795166
    7. ')->' → logprob: -7.125826358795166
    8. '   ' → logprob: -7.375826358795166
    9. '       ' → logprob: -10.000826835632324
    10. ' ' → logprob: -10.625826835632324

Token 176: ' '' (ID: 461)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.11649416387081146
    2. ' Vector' → logprob: -2.2414941787719727
    3. ''' → logprob: -6.741494178771973
    4. 'None' → logprob: -6.866494178771973
    5. ' '' → logprob: -7.866494178771973
    6. ' None' → logprob: -8.116494178771973
    7. '_Vector' → logprob: -8.116494178771973
    8. ' ' → logprob: -8.866494178771973
    9. '_vector' → logprob: -9.366494178771973
    10. ' vector' → logprob: -9.866494178771973

Token 177: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -2.8206473871250637e-05
    2. ' Vector' → logprob: -10.500028610229492
    3. '	Vector' → logprob: -15.625028610229492
    4. 'vector' → logprob: -15.875028610229492
    5. '_Vector' → logprob: -16.125028610229492
    6. '_vector' → logprob: -16.875028610229492
    7. '<Vector' → logprob: -17.000028610229492
    8. ')' → logprob: -17.750028610229492
    9. '.Vector' → logprob: -17.750028610229492
    10. 'Vectors' → logprob: -18.500028610229492

Token 178: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. 'Vector' → logprob: -14.500000953674316
    3. ' ' → logprob: -15.375000953674316
    4. ''' → logprob: -16.375001907348633
    5. '```' → logprob: -16.500001907348633
    6. '
' → logprob: -17.937501907348633
    7. '   ' → logprob: -18.000001907348633
    8. '"' → logprob: -18.125001907348633
    9. '_' → logprob: -18.250001907348633
    10. '-' → logprob: -18.375001907348633

Token 179: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00016277639952022582
    2. '2' → logprob: -8.875163078308105
    3. 'Vector' → logprob: -11.000163078308105
    4. ''' → logprob: -13.250163078308105
    5. 'vector' → logprob: -13.875163078308105
    6. 'd' → logprob: -13.875163078308105
    7. ' D' → logprob: -15.125163078308105
    8. '%D' → logprob: -15.125163078308105
    9. ''D' → logprob: -15.250163078308105
    10. '
' → logprob: -15.250163078308105

Token 180: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.33144140243530273
    2. '':' → logprob: -1.4564414024353027
    3. '):
' → logprob: -3.7064414024353027
    4. ''):
' → logprob: -4.331441402435303
    5. ''' → logprob: -5.456441402435303
    6. '):' → logprob: -5.581441402435303
    7. '':
' → logprob: -7.081441402435303
    8. ''):' → logprob: -7.206441402435303
    9. '       ' → logprob: -7.331441402435303
    10. ')' → logprob: -7.956441402435303

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.7252845029579476e-05
    2. 'r' → logprob: -12.125027656555176
    3. '      ' → logprob: -12.250027656555176
    4. 'angle' → logprob: -13.125027656555176
    5. '        
' → logprob: -13.125027656555176
    6. ' angle' → logprob: -13.375027656555176
    7. '
' → logprob: -13.500027656555176
    8. 'return' → logprob: -13.500027656555176
    9. ' r' → logprob: -13.625027656555176
    10. '   ' → logprob: -13.750027656555176

Token 182: ' rad' (ID: 9920)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.41683968901634216
    2. 'rad' (adapté à ' rad') → logprob: -1.5418397188186646
    3. 'angle' → logprob: -2.666839599609375
    4. ' rad' → logprob: -3.416839599609375
    5. '   ' → logprob: -4.416839599609375
    6. 'theta' → logprob: -5.291839599609375
    7. '       ' → logprob: -5.416839599609375
    8. ' angle' → logprob: -6.541839599609375
    9. ' radians' → logprob: -7.041839599609375
    10. '
' → logprob: -8.166839599609375

Token 183: ' =' (ID: 314)
  Prédit: 'ians'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ians' → logprob: -0.1461513340473175
    2. ')' → logprob: -2.146151304244995
    3. 's' → logprob: -5.021151542663574
    4. 'ius' → logprob: -6.021151542663574
    5. ' =' → logprob: -6.146151542663574
    6. '   ' → logprob: -6.271151542663574
    7. '=' → logprob: -6.396151542663574
    8. 'i' → logprob: -6.396151542663574
    9. ' ' → logprob: -7.646151542663574
    10. '    ' → logprob: -7.646151542663574

Token 184: ' radians' (ID: 126525)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07889298349618912
    2. ' radians' → logprob: -2.578892946243286
    3. '	r' → logprob: -13.328892707824707
    4. ' r' → logprob: -13.703892707824707
    5. '(r' → logprob: -16.078893661499023
    6. 'rad' → logprob: -16.078893661499023
    7. 's' → logprob: -16.453893661499023
    8. 'Radians' → logprob: -16.578893661499023
    9. '_r' → logprob: -17.328893661499023
    10. 'radi' → logprob: -17.328893661499023

Token 185: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.00020699729793705046
    2. '(' → logprob: -8.50020694732666
    3. 'degree' → logprob: -12.87520694732666
    4. '(
' → logprob: -15.25020694732666
    5. '(d' → logprob: -15.50020694732666
    6. '(self' → logprob: -16.125207901000977
    7. '(angle' → logprob: -16.250207901000977
    8. ' (' → logprob: -16.375207901000977
    9. '(def' → logprob: -17.000207901000977
    10. ')' → logprob: -17.125207901000977

Token 186: 'gree' (ID: 44021)
  Prédit: 'gree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gree' → logprob: -0.00011474833445390686
    2. 'g' → logprob: -9.375114440917969
    3. 'egree' → logprob: -10.750114440917969
    4. 'degree' → logprob: -12.500114440917969
    5. 'grees' → logprob: -13.875114440917969
    6. 'gee' → logprob: -14.000114440917969
    7. 'green' → logprob: -14.250114440917969
    8. 'G' → logprob: -14.875114440917969
    9. '>' → logprob: -15.750114440917969
    10. '```' → logprob: -15.750114440917969

Token 187: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03805147483944893
    2. ')
' → logprob: -3.2880513668060303
    3. ')
' → logprob: -12.03805160522461
    4. ')

' → logprob: -13.16305160522461
    5. ' )' → logprob: -14.03805160522461
    6. ' )
' → logprob: -14.66305160522461
    7. '   ' → logprob: -14.66305160522461
    8. '       ' → logprob: -15.03805160522461
    9. ')`' → logprob: -16.78805160522461
    10. ' ' → logprob: -17.53805160522461

Token 188: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024684278294444084
    2. 'x' → logprob: -3.899684190750122
    3. 'new' → logprob: -6.024684429168701
    4. ' new' → logprob: -7.274684429168701
    5. 'cos' → logprob: -7.774684429168701
    6. ' x' → logprob: -7.899684429168701
    7. 'return' → logprob: -9.399683952331543
    8. '
' → logprob: -9.524683952331543
    9. ' cos' → logprob: -10.274683952331543
    10. '        
' → logprob: -11.774683952331543

Token 189: ' cos' (ID: 8974)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6916418671607971
    2. 'return' → logprob: -0.9416418671607971
    3. 'new' → logprob: -2.4416418075561523
    4. 'cos' (adapté à ' cos') → logprob: -4.316641807556152
    5. '   ' → logprob: -5.441641807556152
    6. ' return' → logprob: -5.941641807556152
    7. ' new' → logprob: -7.066641807556152
    8. '       ' → logprob: -7.691641807556152
    9. ' x' → logprob: -7.816641807556152
    10. 'Vector' → logprob: -9.941641807556152

Token 190: '_r' (ID: 3442)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.6323818564414978
    2. '_theta' → logprob: -1.6323819160461426
    3. '_angle' → logprob: -1.7573819160461426
    4. '_' → logprob: -2.7573819160461426
    5. '_v' → logprob: -3.5073819160461426
    6. 'v' → logprob: -6.507381916046143
    7. '_value' → logprob: -6.507381916046143
    8. '_a' → logprob: -6.882381916046143
    9. 't' → logprob: -7.882381916046143
    10. '_t' → logprob: -7.882381916046143

Token 191: ' =' (ID: 314)
  Prédit: 'ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ad' → logprob: -0.12118560075759888
    2. ' =' → logprob: -2.871185541152954
    3. '=' → logprob: -4.121185779571533
    4. '_val' → logprob: -4.121185779571533
    5. 'v' → logprob: -5.371185779571533
    6. 'val' → logprob: -5.496185779571533
    7. 'es' → logprob: -5.621185779571533
    8. 'a' → logprob: -5.746185779571533
    9. 'ot' → logprob: -6.246185779571533
    10. 's' → logprob: -6.996185779571533

Token 192: ' cos' (ID: 8974)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.00861456897109747
    2. ' cos' → logprob: -4.758614540100098
    3. '   ' → logprob: -19.008615493774414
    4. '*cos' → logprob: -19.633615493774414
    5. ' ' → logprob: -20.883615493774414
    6. '_cos' → logprob: -21.633615493774414
    7. 'c' → logprob: -21.883615493774414
    8. '(c' → logprob: -22.758615493774414
    9. '.cos' → logprob: -22.883615493774414
    10. '       ' → logprob: -23.008615493774414

Token 193: '(rad' (ID: 186247)
  Prédit: '(rad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rad' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -11.875008583068848
    3. 'rad' → logprob: -14.375008583068848
    4. ' rad' → logprob: -16.12500762939453
    5. '(r' → logprob: -16.25000762939453
    6. ' (' → logprob: -16.25000762939453
    7. '(
' → logprob: -16.25000762939453
    8. '(red' → logprob: -16.62500762939453
    9. '(rot' → logprob: -16.62500762939453
    10. '(ray' → logprob: -17.00000762939453

Token 194: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029795965179800987
    2. ')' → logprob: -3.5297958850860596
    3. '       ' → logprob: -10.40479564666748
    4. ' )
' → logprob: -11.65479564666748
    5. ')
' → logprob: -12.15479564666748
    6. '   ' → logprob: -14.27979564666748
    7. ')

' → logprob: -14.65479564666748
    8. ' )' → logprob: -16.779796600341797
    9. ')`
' → logprob: -17.279796600341797
    10. ' ' → logprob: -17.654796600341797

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0067287529818713665
    2. ' sin' → logprob: -5.756728649139404
    3. 'sin' → logprob: -5.881728649139404
    4. '
' → logprob: -8.756729125976562
    5. '        
' → logprob: -8.756729125976562
    6. 's' → logprob: -9.506729125976562
    7. ',' → logprob: -9.506729125976562
    8. ' 
' → logprob: -9.881729125976562
    9. '	' → logprob: -10.256729125976562
    10. ' ' → logprob: -10.631729125976562

Token 196: ' sin' (ID: 2187)
  Prédit: ' sin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sin' → logprob: -0.3132627606391907
    2. 'sin' (adapté à ' sin') → logprob: -1.313262701034546
    3. 's' → logprob: -15.063262939453125
    4. '-' → logprob: -15.188262939453125
    5. '-s' → logprob: -15.688262939453125
    6. '*sin' → logprob: -16.188262939453125
    7. '   ' → logprob: -17.063262939453125
    8. ' -' → logprob: -17.313262939453125
    9. '    ' → logprob: -17.688262939453125
    10. '
' → logprob: -17.813262939453125

Token 197: '_r' (ID: 3442)
  Prédit: '(rad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rad' → logprob: -0.1769442856311798
    2. '(' → logprob: -2.3019442558288574
    3. '_r' → logprob: -3.4269442558288574
    4. '(r' → logprob: -3.8019442558288574
    5. '_' → logprob: -5.176944255828857
    6. ' rad' → logprob: -7.301944255828857
    7. '_rad' → logprob: -7.426944255828857
    8. ' (' → logprob: -9.051944732666016
    9. 'r' → logprob: -9.301944732666016
    10. 'rad' → logprob: -9.926944732666016

Token 198: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2555699050426483
    2. ' =' → logprob: -1.5055699348449707
    3. '(' → logprob: -5.630569934844971
    4. '_' → logprob: -11.255569458007812
    5. ' ' → logprob: -11.380569458007812
    6. ' (' → logprob: -12.255569458007812
    7. '(rad' → logprob: -12.380569458007812
    8. ')' → logprob: -12.630569458007812
    9. ',' → logprob: -13.255569458007812
    10. 's' → logprob: -13.380569458007812

Token 199: ' sin' (ID: 2187)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -0.029750604182481766
    2. ' sin' → logprob: -3.5297505855560303
    3. '(s' → logprob: -16.90475082397461
    4. '   ' → logprob: -17.02975082397461
    5. 's' → logprob: -17.15475082397461
    6. 'si' → logprob: -17.65475082397461
    7. '*sin' → logprob: -17.65475082397461
    8. '(' → logprob: -18.77975082397461
    9. '    ' → logprob: -19.15475082397461
    10. '	s' → logprob: -20.15475082397461

Token 200: '(rad' (ID: 186247)
  Prédit: '(rad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rad' → logprob: -9.13388703338569e-06
    2. 'rad' → logprob: -12.125009536743164
    3. '(r' → logprob: -13.500009536743164
    4. ' rad' → logprob: -13.875009536743164
    5. '(' → logprob: -14.125009536743164
    6. ' (' → logprob: -15.125009536743164
    7. '(rot' → logprob: -15.875009536743164
    8. '(
' → logprob: -16.500009536743164
    9. '(red' → logprob: -17.000009536743164
    10. '_rad' → logprob: -17.625009536743164

Token 201: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.252540647983551
    2. ')' → logprob: -1.5025405883789062
    3. '       ' → logprob: -7.502540588378906
    4. ')
' → logprob: -10.377540588378906
    5. ')

' → logprob: -11.252540588378906
    6. ' )
' → logprob: -11.752540588378906
    7. ')`
' → logprob: -12.877540588378906
    8. '   ' → logprob: -13.627540588378906
    9. '(self' → logprob: -14.002540588378906
    10. 'self' → logprob: -14.127540588378906

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008458547294139862
    2. ' return' → logprob: -5.133458614349365
    3. 'return' → logprob: -6.258458614349365
    4. '
' → logprob: -8.133458137512207
    5. '        
' → logprob: -9.258458137512207
    6. 'x' → logprob: -9.508458137512207
    7. '```' → logprob: -10.258458137512207
    8. ' x' → logprob: -10.508458137512207
    9. ' new' → logprob: -10.758458137512207
    10. ')
' → logprob: -11.258458137512207

Token 203: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6782770156860352
    2. 'x' → logprob: -1.4282770156860352
    3. ' return' → logprob: -1.5532770156860352
    4. '       ' → logprob: -4.053277015686035
    5. ' new' → logprob: -4.678277015686035
    6. 'new' → logprob: -4.803277015686035
    7. ' x' → logprob: -5.303277015686035
    8. '   ' → logprob: -6.803277015686035
    9. '
' → logprob: -9.178277015686035
    10. '        
' → logprob: -9.553277015686035

Token 204: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.07889056205749512
    2. ' Vector' → logprob: -2.578890562057495
    3. '       ' → logprob: -15.203890800476074
    4. '	Vector' → logprob: -15.203890800476074
    5. '   ' → logprob: -15.578890800476074
    6. 'self' → logprob: -16.578889846801758
    7. '(Vector' → logprob: -17.578889846801758
    8. ' ' → logprob: -17.703889846801758
    9. '    ' → logprob: -18.203889846801758
    10. '_Vector' → logprob: -18.328889846801758

Token 205: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'Vector' → logprob: -19.75
    3. '(Vector' → logprob: -20.5
    4. '(' → logprob: -21.125
    5. ' ' → logprob: -21.25
    6. '```' → logprob: -21.375
    7. '   ' → logprob: -21.5
    8. '       ' → logprob: -22.375
    9. '<Vector' → logprob: -23.0
    10. '۲' → logprob: -23.75

Token 206: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0015092701651155949
    2. 'Vector' → logprob: -6.501509189605713
    3. '(self' → logprob: -13.251509666442871
    4. '(Vector' → logprob: -13.251509666442871
    5. '2' → logprob: -13.376509666442871
    6. '(' → logprob: -14.751509666442871
    7. 'vector' → logprob: -15.626509666442871
    8. 'DS' → logprob: -15.876509666442871
    9. '   ' → logprob: -16.126508712768555
    10. '       ' → logprob: -16.126508712768555

Token 207: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008632530458271503
    2. '(
' → logprob: -5.008632659912109
    3. '(' → logprob: -6.258632659912109
    4. '(

' → logprob: -14.25863265991211
    5. '((' → logprob: -14.50863265991211
    6. '(s' → logprob: -16.00863265991211
    7. '(
' → logprob: -16.00863265991211
    8. 'self' → logprob: -16.13363265991211
    9. ' (' → logprob: -16.75863265991211
    10. '(round' → logprob: -17.75863265991211

Token 208: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.000433291686931625
    2. '.' → logprob: -7.750433444976807
    3. 'x' → logprob: -13.500432968139648
    4. ' .' → logprob: -13.625432968139648
    5. ' ' → logprob: -17.75043296813965
    6. ').' → logprob: -17.75043296813965
    7. '.
' → logprob: -18.50043296813965
    8. '   ' → logprob: -19.62543296813965
    9. 'cos' → logprob: -20.37543296813965
    10. '.cos' → logprob: -20.37543296813965

Token 209: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.004988374188542366
    2. '*' → logprob: -5.504988193511963
    3. '*cos' → logprob: -7.004988193511963
    4. ' cos' → logprob: -13.754988670349121
    5. ' ' → logprob: -14.379988670349121
    6. 'cos' → logprob: -14.629988670349121
    7. '*c' → logprob: -17.379987716674805
    8. ' **' → logprob: -19.254987716674805
    9. ' ' → logprob: -19.254987716674805
    10. '*object' → logprob: -19.254987716674805

Token 210: ' cos' (ID: 8974)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.03804149478673935
    2. ' cos' → logprob: -3.288041591644287
    3. '*cos' → logprob: -19.163042068481445
    4. '_cos' → logprob: -19.538042068481445
    5. ' ' → logprob: -20.663042068481445
    6. 'cost' → logprob: -20.788042068481445
    7. '.cos' → logprob: -21.913042068481445
    8. ' cosine' → logprob: -21.913042068481445
    9. 'Cos' → logprob: -22.038042068481445
    10. 'c' → logprob: -22.163042068481445

Token 211: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.625000953674316
    3. 'r' → logprob: -15.000000953674316
    4. ' _' → logprob: -15.625000953674316
    5. '(' → logprob: -16.875001907348633
    6. '(r' → logprob: -17.625001907348633
    7. '   ' → logprob: -18.125001907348633
    8. ')' → logprob: -19.000001907348633
    9. '(_' → logprob: -19.000001907348633
    10. 'cos' → logprob: -19.750001907348633

Token 212: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.061969365924596786
    2. '-' → logprob: -2.81196928024292
    3. ' ' → logprob: -13.686969757080078
    4. ',' → logprob: -15.686969757080078
    5. ' ' → logprob: -15.686969757080078
    6. '+' → logprob: -15.936969757080078
    7. ')' → logprob: -17.186969757080078
    8. '-
' → logprob: -17.311969757080078
    9. ' -
' → logprob: -17.686969757080078
    10. '   ' → logprob: -17.811969757080078

Token 213: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889176905155182
    2. ' self' → logprob: -2.5788917541503906
    3. '	self' → logprob: -13.82889175415039
    4. '       ' → logprob: -14.95389175415039
    5. '(self' → logprob: -15.32889175415039
    6. ' ' → logprob: -15.45389175415039
    7. '   ' → logprob: -16.70389175415039
    8. '           ' → logprob: -17.45389175415039
    9. '[self' → logprob: -17.82889175415039
    10. '_self' → logprob: -17.95389175415039

Token 214: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0012147598899900913
    2. 'y' → logprob: -6.751214981079102
    3. '.' → logprob: -10.126214981079102
    4. ' y' → logprob: -13.251214981079102
    5. '	y' → logprob: -14.001214981079102
    6. ' .' → logprob: -14.126214981079102
    7. '   ' → logprob: -15.251214981079102
    8. '_y' → logprob: -15.251214981079102
    9. ' ' → logprob: -15.626214981079102
    10. 'self' → logprob: -16.0012149810791

Token 215: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00040767391328699887
    2. ' sin' → logprob: -8.750407218933105
    3. '*sin' → logprob: -9.000407218933105
    4. '*' → logprob: -9.500407218933105
    5. 'sin' → logprob: -10.000407218933105
    6. ' ' → logprob: -12.125407218933105
    7. '*s' → logprob: -17.000408172607422
    8. '*cos' → logprob: -17.250408172607422
    9. ' ' → logprob: -17.625408172607422
    10. ' sina' → logprob: -18.375408172607422

Token 216: ' sin' (ID: 2187)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -0.011048170737922192
    2. ' sin' → logprob: -4.511048316955566
    3. 's' → logprob: -15.136048316955566
    4. '*sin' → logprob: -16.26104736328125
    5. ' ' → logprob: -18.88604736328125
    6. '   ' → logprob: -19.38604736328125
    7. '           ' → logprob: -19.51104736328125
    8. '	s' → logprob: -19.76104736328125
    9. 'cos' → logprob: -19.76104736328125
    10. 'sins' → logprob: -19.76104736328125

Token 217: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -5.5027299822540954e-05
    2. '_' → logprob: -9.875055313110352
    3. 'r' → logprob: -12.875055313110352
    4. ' _' → logprob: -14.500055313110352
    5. '(' → logprob: -14.875055313110352
    6. ')' → logprob: -17.37505531311035
    7. '_t' → logprob: -17.87505531311035
    8. ',' → logprob: -18.12505531311035
    9. '_R' → logprob: -18.25005531311035
    10. ' ' → logprob: -18.37505531311035

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002226093056378886
    2. ',
' → logprob: -9.000222206115723
    3. ' ,' → logprob: -9.250222206115723
    4. ',self' → logprob: -13.125222206115723
    5. '       ' → logprob: -14.000222206115723
    6. ',

' → logprob: -16.50022315979004
    7. ',
' → logprob: -17.50022315979004
    8. '   ' → logprob: -17.50022315979004
    9. ')' → logprob: -17.75022315979004
    10. ' ,
' → logprob: -18.25022315979004

Token 219: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693892419338226
    2. ' self' → logprob: -2.126938819885254
    3. '           ' → logprob: -12.376938819885254
    4. '	self' → logprob: -13.001938819885254
    5. '       ' → logprob: -13.251938819885254
    6. '               ' → logprob: -14.001938819885254
    7. ' ' → logprob: -14.376938819885254
    8. '(self' → logprob: -15.001938819885254
    9. '
' → logprob: -15.376938819885254
    10. '        ' → logprob: -15.626938819885254

Token 220: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.5690089639974758e-05
    2. '.' → logprob: -11.750015258789062
    3. 'x' → logprob: -12.500015258789062
    4. '.y' → logprob: -12.500015258789062
    5. ' .' → logprob: -15.625015258789062
    6. ' ' → logprob: -16.625015258789062
    7. '[' → logprob: -18.000015258789062
    8. ' x' → logprob: -18.250015258789062
    9. '_x' → logprob: -18.750015258789062
    10. '1' → logprob: -19.125015258789062

Token 221: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0001801801408873871
    2. '*' → logprob: -8.6251802444458
    3. ' ' → logprob: -14.8751802444458
    4. '*sin' → logprob: -15.5001802444458
    5. 'sin' → logprob: -18.375179290771484
    6. ' ' → logprob: -18.500179290771484
    7. ' **' → logprob: -19.375179290771484
    8. ' sin' → logprob: -19.375179290771484
    9. '*s' → logprob: -20.000179290771484
    10. 's' → logprob: -20.250179290771484

Token 222: ' sin' (ID: 2187)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -0.06196970492601395
    2. ' sin' → logprob: -2.811969757080078
    3. 's' → logprob: -13.561969757080078
    4. '*sin' → logprob: -14.811969757080078
    5. 'cos' → logprob: -15.561969757080078
    6. ' cos' → logprob: -17.561969757080078
    7. 'si' → logprob: -18.186969757080078
    8. '
' → logprob: -18.436969757080078
    9. ' sina' → logprob: -18.561969757080078
    10. ' sine' → logprob: -18.686969757080078

Token 223: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -4.4849443838757e-06
    2. 'r' → logprob: -12.750004768371582
    3. '(' → logprob: -14.000004768371582
    4. '_' → logprob: -15.250004768371582
    5. '<|end|>' → logprob: -15.625004768371582
    6. '(r' → logprob: -16.250003814697266
    7. '	r' → logprob: -16.500003814697266
    8. ')' → logprob: -16.750003814697266
    9. 'cos' → logprob: -17.500003814697266
    10. ' _' → logprob: -17.625003814697266

Token 224: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.02324792370200157
    2. '+' → logprob: -3.7732479572296143
    3. ' ' → logprob: -13.023247718811035
    4. ')' → logprob: -17.14824867248535
    5. ' +
' → logprob: -17.39824867248535
    6. ' plus' → logprob: -17.64824867248535
    7. ' *' → logprob: -18.39824867248535
    8. '*' → logprob: -18.64824867248535
    9. ' ' → logprob: -18.77324867248535
    10. '()' → logprob: -18.89824867248535

Token 225: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.251930296421051
    2. ' self' → logprob: -1.5019302368164062
    3. '       ' → logprob: -14.251930236816406
    4. ' ' → logprob: -15.251930236816406
    5. '	self' → logprob: -16.126930236816406
    6. '(self' → logprob: -16.751930236816406
    7. '        ' → logprob: -17.626930236816406
    8. '   ' → logprob: -17.626930236816406
    9. '_self' → logprob: -18.126930236816406
    10. '  ' → logprob: -18.501930236816406

Token 226: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0005817461642436683
    2. 'y' → logprob: -7.500581741333008
    3. '.' → logprob: -10.500581741333008
    4. ' .' → logprob: -14.500581741333008
    5. ' y' → logprob: -15.500581741333008
    6. ' ' → logprob: -15.625581741333008
    7. 'self' → logprob: -16.375581741333008
    8. '1' → logprob: -16.875581741333008
    9. 'Y' → logprob: -16.875581741333008
    10. '_y' → logprob: -17.250581741333008

Token 227: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.005542277824133635
    2. '*' → logprob: -5.255542278289795
    3. '*cos' → logprob: -8.130541801452637
    4. 'cos' → logprob: -11.505541801452637
    5. ' cos' → logprob: -12.505541801452637
    6. ' ' → logprob: -15.255541801452637
    7. '_cos' → logprob: -17.380542755126953
    8. ' ' → logprob: -18.630542755126953
    9. '*c' → logprob: -18.630542755126953
    10. '0' → logprob: -18.880542755126953

Token 228: ' cos' (ID: 8974)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.47407814860343933
    2. ' cos' → logprob: -0.9740781784057617
    3. '*cos' → logprob: -14.474078178405762
    4. '_cos' → logprob: -14.724078178405762
    5. '0' → logprob: -16.599077224731445
    6. '.cos' → logprob: -16.724077224731445
    7. 'c' → logprob: -17.474077224731445
    8. 'cost' → logprob: -17.724077224731445
    9. ' ' → logprob: -17.974077224731445
    10. '   ' → logprob: -18.099077224731445

Token 229: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.00000286102295
    3. 'r' → logprob: -15.12500286102295
    4. ')' → logprob: -16.125001907348633
    5. '(r' → logprob: -16.875001907348633
    6. '-r' → logprob: -17.500001907348633
    7. '(' → logprob: -17.625001907348633
    8. '   ' → logprob: -18.500001907348633
    9. '_c' → logprob: -19.250001907348633
    10. '	r' → logprob: -19.375001907348633

Token 230: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ')
' → logprob: -12.500003814697266
    3. ' )' → logprob: -16.750003814697266
    4. ')

' → logprob: -17.750003814697266
    5. ')return' → logprob: -18.375003814697266
    6. '))' → logprob: -19.125003814697266
    7. '       ' → logprob: -19.375003814697266
    8. '   ' → logprob: -19.875003814697266
    9. '<|end|>' → logprob: -20.250003814697266
    10. ')
' → logprob: -20.375003814697266

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26168835163116455
    2. '
' → logprob: -2.136688232421875
    3. 'class' → logprob: -2.261688232421875
    4. '```' → logprob: -5.886688232421875
    5. '    
' → logprob: -6.511688232421875
    6. '<|end|>' → logprob: -6.636688232421875
    7. ' ' → logprob: -6.886688232421875
    8. ' class' → logprob: -7.886688232421875
    9. ')' → logprob: -8.636688232421875
    10. 'def' → logprob: -9.261688232421875

Token 232: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008659370243549347
    2. ' def' → logprob: -5.633659362792969
    3. '   ' → logprob: -6.008659362792969
    4. 'class' → logprob: -6.008659362792969
    5. '
' → logprob: -10.383659362792969
    6. '```' → logprob: -10.633659362792969
    7. '@property' → logprob: -10.758659362792969
    8. '	def' → logprob: -11.258659362792969
    9. ' ' → logprob: -11.383659362792969
    10. '#' → logprob: -11.883659362792969

Token 233: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10074680298566818
    2. '__' → logprob: -2.3507468700408936
    3. ' length' → logprob: -8.600747108459473
    4. ' magnitude' → logprob: -8.850747108459473
    5. ' def' → logprob: -9.100747108459473
    6. ' ' → logprob: -10.100747108459473
    7. '_length' → logprob: -11.100747108459473
    8. ' distance' → logprob: -11.225747108459473
    9. '_repr' → logprob: -12.100747108459473
    10. '_' → logprob: -12.600747108459473

Token 234: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.040995076298713684
    2. 'str' → logprob: -3.7909951210021973
    3. 'eq' → logprob: -4.040995121002197
    4. 'mul' → logprob: -11.290994644165039
    5. 'rep' → logprob: -16.04099464416504
    6. ' repr' → logprob: -16.16599464416504
    7. '_repr' → logprob: -16.16599464416504
    8. 'abs' → logprob: -16.41599464416504
    9. 'neg' → logprob: -16.91599464416504
    10. '
' → logprob: -18.41599464416504

Token 235: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07546120882034302
    2. '__' → logprob: -2.8254611492156982
    3. '__('' → logprob: -4.575461387634277
    4. '__(
' → logprob: -5.825461387634277
    5. '__((' → logprob: -9.575461387634277
    6. '__("' → logprob: -9.700461387634277
    7. '__(*' → logprob: -12.325461387634277
    8. '___' → logprob: -12.450461387634277
    9. '_' → logprob: -12.575461387634277
    10. '__.__' → logprob: -12.950461387634277

Token 236: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001612267515156418
    2. ')' → logprob: -8.750161170959473
    3. ' self' → logprob: -13.000161170959473
    4. '
' → logprob: -16.12516212463379
    5. ' ' → logprob: -16.37516212463379
    6. '(self' → logprob: -16.37516212463379
    7. 's' → logprob: -17.25016212463379
    8. '  ' → logprob: -17.50016212463379
    9. '

' → logprob: -17.50016212463379
    10. '   ' → logprob: -17.50016212463379

Token 237: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03114193119108677
    2. '__)' → logprob: -3.781141996383667
    3. '):' → logprob: -6.281141757965088
    4. '__:' → logprob: -6.281141757965088
    5. ')' → logprob: -7.156141757965088
    6. ')__' → logprob: -7.281141757965088
    7. '__':
' → logprob: -7.531141757965088
    8. '__('' → logprob: -7.531141757965088
    9. '__)
' → logprob: -8.031142234802246
    10. '):
' → logprob: -8.406142234802246

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07285822927951813
    2. ' f' → logprob: -3.0728583335876465
    3. 'f' → logprob: -3.8228583335876465
    4. ' return' → logprob: -6.6978583335876465
    5. 'return' → logprob: -7.0728583335876465
    6. '   ' → logprob: -10.822857856750488
    7. '      ' → logprob: -12.447857856750488
    8. '     ' → logprob: -12.447857856750488
    9. '    ' → logprob: -12.697857856750488
    10. '(f' → logprob: -15.072857856750488

Token 239: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04095113277435303
    2. ' return' → logprob: -3.2909512519836426
    3. '       ' → logprob: -6.040951251983643
    4. '   ' → logprob: -8.165950775146484
    5. 'f' → logprob: -8.415950775146484
    6. ' f' → logprob: -10.915950775146484
    7. '	return' → logprob: -13.665950775146484
    8. '    ' → logprob: -14.665950775146484
    9. '           ' → logprob: -15.040950775146484
    10. '{return' → logprob: -15.540950775146484

Token 240: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.4740772247314453
    2. 'f' → logprob: -0.9740772247314453
    3. '	f' → logprob: -16.724077224731445
    4. ' ' → logprob: -16.849077224731445
    5. '(f' → logprob: -16.849077224731445
    6. ' Vector' → logprob: -17.474077224731445
    7. 'F' → logprob: -17.599077224731445
    8. 'Vector' → logprob: -17.724077224731445
    9. ''f' → logprob: -17.974077224731445
    10. '   ' → logprob: -18.349077224731445

Token 241: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023259572684764862
    2. ''' → logprob: -3.7732596397399902
    3. 'f' → logprob: -11.898259162902832
    4. 'Vector' → logprob: -12.898259162902832
    5. '(Vector' → logprob: -13.023259162902832
    6. '("' → logprob: -14.023259162902832
    7. '"<' → logprob: -14.148259162902832
    8. '('' → logprob: -15.273259162902832
    9. ''f' → logprob: -15.523259162902832
    10. ''<' → logprob: -15.773259162902832

Token 242: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -4.961759259458631e-06
    2. '<Vector' → logprob: -12.625004768371582
    3. '(Vector' → logprob: -13.500004768371582
    4. ' Vector' → logprob: -16.0000057220459
    5. '"' → logprob: -16.8750057220459
    6. 'Vec' → logprob: -17.0000057220459
    7. ''' → logprob: -17.1250057220459
    8. '_Vector' → logprob: -17.6250057220459
    9. '	Vector' → logprob: -18.3750057220459
    10. '.Vector' → logprob: -19.0000057220459

Token 243: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '(' → logprob: -17.5
    3. '(x' → logprob: -17.75
    4. ' ' → logprob: -17.875
    5. '   ' → logprob: -18.625
    6. '```' → logprob: -19.25
    7. '<Vector' → logprob: -19.875
    8. 'Vector' → logprob: -19.875
    9. '
' → logprob: -20.25
    10. '       ' → logprob: -20.625

Token 244: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.1994775377388578e-05
    2. '{' → logprob: -11.750012397766113
    3. ' D' → logprob: -14.000012397766113
    4. '(' → logprob: -14.500012397766113
    5. '<D' → logprob: -14.625012397766113
    6. '(D' → logprob: -15.250012397766113
    7. '%D' → logprob: -15.375012397766113
    8. 'Vector' → logprob: -15.500012397766113
    9. '2' → logprob: -15.750012397766113
    10. '   ' → logprob: -16.125011444091797

Token 245: '(x' (ID: 4061)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.0007339857402257621
    2. '(x' → logprob: -7.250733852386475
    3. '(' → logprob: -10.875734329223633
    4. '(self' → logprob: -12.250734329223633
    5. '({
' → logprob: -16.000734329223633
    6. '(({' → logprob: -16.875734329223633
    7. '{' → logprob: -17.125734329223633
    8. '(
' → logprob: -17.125734329223633
    9. '()' → logprob: -17.500734329223633
    10. '{x' → logprob: -17.750734329223633

Token 246: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.03729480504989624
    2. '=' → logprob: -3.787294864654541
    3. '=self' → logprob: -4.287294864654541
    4. '{' → logprob: -9.287294387817383
    5. 'self' → logprob: -9.287294387817383
    6. '={
' → logprob: -11.912294387817383
    7. '=

' → logprob: -12.662294387817383
    8. '=f' → logprob: -12.662294387817383
    9. '=}' → logprob: -12.662294387817383
    10. ',' → logprob: -13.537294387817383

Token 247: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.36574100604048e-06
    2. '{' → logprob: -13.000004768371582
    3. ' self' → logprob: -13.250004768371582
    4. '
' → logprob: -15.625004768371582
    5. '   ' → logprob: -17.625003814697266
    6. 'sel' → logprob: -18.000003814697266
    7. '       ' → logprob: -18.125003814697266
    8. '{
' → logprob: -18.875003814697266
    9. '	self' → logprob: -19.250003814697266
    10. '0' → logprob: -19.500003814697266

Token 248: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00044401636114344
    2. '.' → logprob: -7.750443935394287
    3. ' .' → logprob: -11.250444412231445
    4. 'self' → logprob: -15.500444412231445
    5. 'x' → logprob: -16.625444412231445
    6. ' ' → logprob: -17.125444412231445
    7. '.s' → logprob: -18.500444412231445
    8. '.self' → logprob: -18.625444412231445
    9. '
' → logprob: -19.375444412231445
    10. '   ' → logprob: -19.375444412231445

Token 249: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11291494965553284
    2. '},' → logprob: -2.2379150390625
    3. ' ,' → logprob: -9.6129150390625
    4. '}' → logprob: -11.8629150390625
    5. '),' → logprob: -11.8629150390625
    6. '>,' → logprob: -12.7379150390625
    7. ' },' → logprob: -13.6129150390625
    8. '<|end|>' → logprob: -13.8629150390625
    9. ',
' → logprob: -14.1129150390625
    10. '‌,' → logprob: -14.3629150390625

Token 250: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.09088137745857239
    2. 'y' → logprob: -2.59088134765625
    3. ' self' → logprob: -4.96588134765625
    4. 'self' → logprob: -5.34088134765625
    5. '{' → logprob: -9.21588134765625
    6. ' {' → logprob: -9.96588134765625
    7. ' ' → logprob: -11.96588134765625
    8. ',' → logprob: -14.09088134765625
    9. ',y' → logprob: -14.21588134765625
    10. '	y' → logprob: -14.84088134765625

Token 251: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.0006931356037966907
    2. '=' → logprob: -7.750693321228027
    3. '{' → logprob: -8.500693321228027
    4. '=self' → logprob: -10.250693321228027
    5. '={
' → logprob: -11.625693321228027
    6. 'self' → logprob: -11.875693321228027
    7. '<|end|>' → logprob: -12.375693321228027
    8. ']={' → logprob: -13.625693321228027
    9. '={'' → logprob: -14.125693321228027
    10. ' ={' → logprob: -14.875693321228027

Token 252: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0025341638829559088
    2. '{' → logprob: -6.00253438949585
    3. ' self' → logprob: -9.752533912658691
    4. '	self' → logprob: -15.877533912658691
    5. '{
' → logprob: -16.752534866333008
    6. '(self' → logprob: -17.377534866333008
    7. '[self' → logprob: -18.127534866333008
    8. '$self' → logprob: -18.502534866333008
    9. '=self' → logprob: -18.877534866333008
    10. '}' → logprob: -19.002534866333008

Token 253: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.038078673183918
    2. '.' → logprob: -3.288078784942627
    3. '.x' → logprob: -10.413078308105469
    4. ' .' → logprob: -12.788078308105469
    5. ')' → logprob: -13.288078308105469
    6. '}' → logprob: -13.913078308105469
    7. '})' → logprob: -15.038078308105469
    8. '.z' → logprob: -15.163078308105469
    9. ')}' → logprob: -15.288078308105469
    10. '.s' → logprob: -16.03807830810547

Token 254: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.01031550858169794
    2. ')' → logprob: -4.760315418243408
    3. '})' → logprob: -6.635315418243408
    4. '}"' → logprob: -8.135315895080566
    5. ')")' → logprob: -10.385315895080566
    6. ')}' → logprob: -10.760315895080566
    7. '}")' → logprob: -11.135315895080566
    8. '}' → logprob: -11.510315895080566
    9. ')">' → logprob: -12.010315895080566
    10. ')`' → logprob: -12.510315895080566

Token 255: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006109386216849089
    2. ')' → logprob: -5.631109237670898
    3. '")' → logprob: -6.756109237670898
    4. '\n' → logprob: -7.006109237670898
    5. ')"' → logprob: -9.131109237670898
    6. '
' → logprob: -9.256109237670898
    7. '```' → logprob: -9.256109237670898
    8. '<|end|>' → logprob: -10.506109237670898
    9. ''' → logprob: -10.631109237670898
    10. '"""' → logprob: -10.881109237670898

Token 256: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0028449371457099915
    2. '
' → logprob: -5.87784481048584
    3. '

' → logprob: -10.25284481048584
    4. ' class' → logprob: -12.75284481048584
    5. '
' → logprob: -15.00284481048584
    6. '```' → logprob: -15.00284481048584
    7. '\n' → logprob: -15.37784481048584
    8. '<class' → logprob: -15.87784481048584
    9. '"class' → logprob: -15.87784481048584
    10. ' 
' → logprob: -16.127845764160156

Token 257: ' Direction' (ID: 39049)
  Prédit: ' Shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Shape' → logprob: -0.04662458971142769
    2. 'Shape' → logprob: -3.9216246604919434
    3. ' Movement' → logprob: -4.796624660491943
    4. ' Transform' → logprob: -5.671624660491943
    5. ' Drawable' → logprob: -5.921624660491943
    6. ' Entity' → logprob: -6.171624660491943
    7. ' Robot' → logprob: -6.921624660491943
    8. ' Direction' → logprob: -7.171624660491943
    9. ' Point' → logprob: -7.171624660491943
    10. ' Motion' → logprob: -7.546624660491943

Token 258: 'Provider' (ID: 5999)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016465028747916222
    2. ':' → logprob: -6.501646518707275
    3. ' (' → logprob: -9.626646041870117
    4. 'al' → logprob: -10.501646041870117
    5. '2' → logprob: -10.876646041870117
    6. '(Enum' → logprob: -11.376646041870117
    7. ':
' → logprob: -12.626646041870117
    8. 'Base' → logprob: -12.751646041870117
    9. '():' → logprob: -12.876646041870117
    10. 'Vector' → logprob: -13.626646041870117

Token 259: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.5776860184123507e-06
    2. ' (' → logprob: -13.62500286102295
    3. ':' → logprob: -13.87500286102295
    4. '(Abstract' → logprob: -15.00000286102295
    5. ' ' → logprob: -17.625001907348633
    6. ' :' → logprob: -18.625001907348633
    7. '(
' → logprob: -19.500001907348633
    8. '():' → logprob: -19.625001907348633
    9. '```' → logprob: -19.625001907348633
    10. ':
' → logprob: -19.875001907348633

Token 260: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.004642422776669264
    2. ' ABC' → logprob: -5.379642486572266
    3. 'AB' → logprob: -11.129642486572266
    4. ')' → logprob: -12.629642486572266
    5. 'abc' → logprob: -13.254642486572266
    6. ' ' → logprob: -14.379642486572266
    7. 'ABCDE' → logprob: -14.754642486572266
    8. '   ' → logprob: -15.004642486572266
    9. 'A' → logprob: -15.004642486572266
    10. '):
' → logprob: -15.129642486572266

Token 261: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009381395066156983
    2. '):
' → logprob: -7.0009379386901855
    3. ')' → logprob: -11.000938415527344
    4. ':' → logprob: -11.750938415527344
    5. '):

' → logprob: -13.875938415527344
    6. '):
' → logprob: -14.000938415527344
    7. ' ):' → logprob: -16.125938415527344
    8. ',' → logprob: -17.625938415527344
    9. '**' → logprob: -18.000938415527344
    10. ''):' → logprob: -18.000938415527344

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013511877041310072
    2. '    
' → logprob: -7.251351356506348
    3. '
' → logprob: -7.376351356506348
    4. '@' → logprob: -12.501351356506348
    5. ' 
' → logprob: -12.626351356506348
    6. ' @' → logprob: -13.001351356506348
    7. ' def' → logprob: -13.501351356506348
    8. '   
' → logprob: -13.626351356506348
    9. '        
' → logprob: -14.001351356506348
    10. '  
' → logprob: -14.626351356506348

Token 263: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.20295031368732452
    2. ' @' → logprob: -2.3279502391815186
    3. '   ' → logprob: -2.4529502391815186
    4. 'def' → logprob: -10.077950477600098
    5. '
' → logprob: -10.452950477600098
    6. ' def' → logprob: -10.577950477600098
    7. '@property' → logprob: -10.577950477600098
    8. '    
' → logprob: -11.202950477600098
    9. '@
' → logprob: -12.952950477600098
    10. '@param' → logprob: -13.202950477600098

Token 264: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -2.0100624169572257e-05
    2. 'property' → logprob: -11.125020027160645
    3. 'staticmethod' → logprob: -12.250020027160645
    4. 'abs' → logprob: -15.500020027160645
    5. 'ab' → logprob: -15.750020027160645
    6. 'classmethod' → logprob: -16.00002098083496
    7. ' abstract' → logprob: -16.37502098083496
    8. 'abc' → logprob: -16.75002098083496
    9. '.abstract' → logprob: -19.00002098083496
    10. 'a' → logprob: -20.50002098083496

Token 265: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0009140860638581216
    2. '_method' → logprob: -7.000914096832275
    3. 'meth' → logprob: -13.125913619995117
    4. 'classmethod' → logprob: -15.250913619995117
    5. 'staticmethod' → logprob: -15.875913619995117
    6. 'def' → logprob: -16.875913619995117
    7. 'ethod' → logprob: -17.250913619995117
    8. 'm' → logprob: -17.375913619995117
    9. '	method' → logprob: -17.875913619995117
    10. '_m' → logprob: -17.875913619995117

Token 266: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5785064697265625
    2. 'def' → logprob: -0.8285064697265625
    3. '    
' → logprob: -6.9535064697265625
    4. ' def' → logprob: -6.9535064697265625
    5. '(' → logprob: -8.328506469726562
    6. '
' → logprob: -9.578506469726562
    7. '\' → logprob: -9.703506469726562
    8. '   ' → logprob: -10.078506469726562
    9. '	def' → logprob: -10.203506469726562
    10. 'method' → logprob: -10.453506469726562

Token 267: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05616888403892517
    2. '
' → logprob: -3.056168794631958
    3. ' def' → logprob: -4.931169033050537
    4. '    
' → logprob: -8.806168556213379
    5. '   ' → logprob: -9.806168556213379
    6. '  
' → logprob: -10.931168556213379
    7. '<|end|>' → logprob: -10.931168556213379
    8. '	def' → logprob: -11.306168556213379
    9. ' 
' → logprob: -11.431168556213379
    10. '<|end|>' → logprob: -11.431168556213379

Token 268: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0038542284164577723
    2. 'property' → logprob: -5.628854274749756
    3. 'method' → logprob: -9.003853797912598
    4. 'staticmethod' → logprob: -9.753853797912598
    5. 'classmethod' → logprob: -10.628853797912598
    6. ' def' → logprob: -11.003853797912598
    7. '
' → logprob: -11.378853797912598
    8. 'get' → logprob: -11.628853797912598
    9. 'vector' → logprob: -12.378853797912598
    10. 'call' → logprob: -12.503853797912598

Token 269: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.5867747068405151
    2. 'get' → logprob: -0.8367747068405151
    3. 'provide' → logprob: -5.586774826049805
    4. ' provide' → logprob: -5.711774826049805
    5. 'next' → logprob: -6.961774826049805
    6. 'def' → logprob: -7.336774826049805
    7. ' direction' → logprob: -7.461774826049805
    8. ' def' → logprob: -7.961774826049805
    9. ' next' → logprob: -7.961774826049805
    10. 'direction' → logprob: -8.461774826049805

Token 270: '_direction' (ID: 64332)
  Prédit: '_direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.0005831766175106168
    2. '_vector' → logprob: -8.00058364868164
    3. '_next' → logprob: -9.00058364868164
    4. '_angle' → logprob: -9.75058364868164
    5. '_current' → logprob: -10.50058364868164
    6. 'direction' → logprob: -10.87558364868164
    7. '_rotation' → logprob: -12.25058364868164
    8. '_d' → logprob: -12.50058364868164
    9. '_' → logprob: -12.62558364868164
    10. ' direction' → logprob: -12.87558364868164

Token 271: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00023476807109545916
    2. 'self' → logprob: -9.000234603881836
    3. '(' → logprob: -9.750234603881836
    4. '(s' → logprob: -10.625234603881836
    5. '_vector' → logprob: -11.875234603881836
    6. '(se' → logprob: -12.000234603881836
    7. '()' → logprob: -12.625234603881836
    8. 's' → logprob: -12.750234603881836
    9. '(sel' → logprob: -12.750234603881836
    10. ' (' → logprob: -13.750234603881836

Token 272: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11938260495662689
    2. ',' → logprob: -2.244382619857788
    3. '):' → logprob: -5.244382381439209
    4. 'self' → logprob: -7.494382381439209
    5. '):
' → logprob: -7.869382381439209
    6. ' )' → logprob: -9.369382858276367
    7. ')->' → logprob: -9.869382858276367
    8. '   ' → logprob: -10.244382858276367
    9. '(self' → logprob: -10.369382858276367
    10. ' ,' → logprob: -10.619382858276367

Token 273: ' step' (ID: 5983)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10012427717447281
    2. ' current' → logprob: -4.100124359130859
    3. 'current' → logprob: -4.100124359130859
    4. 'delta' → logprob: -4.100124359130859
    5. 'position' → logprob: -4.225124359130859
    6. 'time' → logprob: -4.725124359130859
    7. 'dt' → logprob: -5.850124359130859
    8. ' position' → logprob: -5.975124359130859
    9. ' delta' → logprob: -5.975124359130859
    10. 'self' → logprob: -5.975124359130859

Token 274: '_index' (ID: 7748)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21141277253627777
    2. '_count' → logprob: -2.4614126682281494
    3. 's' → logprob: -2.7114126682281494
    4. '_size' → logprob: -3.7114126682281494
    5. ')' → logprob: -4.9614129066467285
    6. '_number' → logprob: -5.5864129066467285
    7. '_index' → logprob: -6.8364129066467285
    8. ':int' → logprob: -6.8364129066467285
    9. 'count' → logprob: -8.46141242980957
    10. '):' → logprob: -8.58641242980957

Token 275: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025359660387039185
    2. ')' → logprob: -3.900359630584717
    3. '):' → logprob: -5.525359630584717
    4. ' )' → logprob: -8.525360107421875
    5. ' :' → logprob: -8.525360107421875
    6. ':int' → logprob: -8.650360107421875
    7. '):
' → logprob: -9.400360107421875
    8. ',' → logprob: -9.775360107421875
    9. '   ' → logprob: -9.775360107421875
    10. ' ):' → logprob: -10.275360107421875

Token 276: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019784762989729643
    2. ' int' → logprob: -6.251978397369385
    3. ')' → logprob: -10.001978874206543
    4. ':int' → logprob: -13.876978874206543
    5. '[int' → logprob: -14.126978874206543
    6. '
' → logprob: -14.501978874206543
    7. ' ' → logprob: -14.626978874206543
    8. '):
' → logprob: -14.876978874206543
    9. 'None' → logprob: -15.376978874206543
    10. '   ' → logprob: -15.376978874206543

Token 277: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.024604277219623e-05
    2. ' )' → logprob: -10.875040054321289
    3. ':' → logprob: -11.625040054321289
    4. '):' → logprob: -12.125040054321289
    5. ',' → logprob: -13.000040054321289
    6. ')->' → logprob: -13.500040054321289
    7. '')' → logprob: -13.625040054321289
    8. '   ' → logprob: -14.125040054321289
    9. '):
' → logprob: -14.250040054321289
    10. '`)' → logprob: -15.875040054321289

Token 278: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42295020818710327
    2. ' ->' → logprob: -1.297950267791748
    3. ':' → logprob: -3.172950267791748
    4. '->' → logprob: -3.547950267791748
    5. ')->' → logprob: -7.547950267791748
    6. '   ' → logprob: -7.797950267791748
    7. ' )' → logprob: -9.67294979095459
    8. '):' → logprob: -9.92294979095459
    9. ':
' → logprob: -11.17294979095459
    10. '       ' → logprob: -11.42294979095459

Token 279: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.11989768594503403
    2. 'float' → logprob: -2.8698976039886475
    3. ' Vector' → logprob: -3.2448976039886475
    4. 'int' → logprob: -4.494897842407227
    5. ' float' → logprob: -5.744897842407227
    6. ''' → logprob: -6.244897842407227
    7. ' int' → logprob: -7.369897842407227
    8. ' '' → logprob: -8.744897842407227
    9. '	Vector' → logprob: -9.744897842407227
    10. 'str' → logprob: -10.244897842407227

Token 280: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. 'Vector' → logprob: -15.25
    3. '   ' → logprob: -17.5
    4. ' ' → logprob: -18.125
    5. '[' → logprob: -18.375
    6. '```' → logprob: -19.125
    7. '<Vector' → logprob: -19.25
    8. 'Direction' → logprob: -19.25
    9. '.' → logprob: -19.5
    10. '.Vector' → logprob: -19.75

Token 281: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -9.662937372922897e-05
    2. 'Vector' → logprob: -9.250096321105957
    3. ' D' → logprob: -15.250096321105957
    4. 'vector' → logprob: -16.250097274780273
    5. '   ' → logprob: -17.375097274780273
    6. '2' → logprob: -17.500097274780273
    7. '[' → logprob: -17.875097274780273
    8. '_D' → logprob: -18.125097274780273
    9. 'd' → logprob: -18.375097274780273
    10. '       ' → logprob: -18.625097274780273

Token 282: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012965974397957325
    2. '<|end|>' → logprob: -4.637966156005859
    3. ':
' → logprob: -6.512966156005859
    4. '):' → logprob: -7.762966156005859
    5. ':return' → logprob: -8.01296615600586
    6. ')' → logprob: -8.01296615600586
    7. '   ' → logprob: -8.63796615600586
    8. '
' → logprob: -8.88796615600586
    9. ' ' → logprob: -9.26296615600586
    10. '<|end|>' → logprob: -9.26296615600586

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016087667318060994
    2. ' pass' → logprob: -7.376608848571777
    3. '<|end|>' → logprob: -7.501608848571777
    4. '
' → logprob: -8.501608848571777
    5. '   ' → logprob: -9.126608848571777
    6. ' ' → logprob: -10.376608848571777
    7. 'pass' → logprob: -10.376608848571777
    8. '\n' → logprob: -10.876608848571777
    9. ' 
' → logprob: -11.626608848571777
    10. '...' → logprob: -12.251608848571777

Token 284: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3267325162887573
    2. 'pass' (adapté à ' pass') → logprob: -1.3267325162887573
    3. ' pass' → logprob: -4.326732635498047
    4. '...' → logprob: -8.826732635498047
    5. '   ' → logprob: -11.701732635498047
    6. 'raise' → logprob: -12.326732635498047
    7. '	pass' → logprob: -12.326732635498047
    8. '        
' → logprob: -13.451732635498047
    9. '      ' → logprob: -14.326732635498047
    10. 'pas' → logprob: -14.326732635498047

Token 285: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5193373560905457
    2. 'class' → logprob: -1.1443374156951904
    3. '

' → logprob: -2.5193374156951904
    4. '<|end|>' → logprob: -5.144337177276611
    5. ' class' → logprob: -8.76933765411377
    6. '<|end|>' → logprob: -10.14433765411377
    7. '```' → logprob: -10.64433765411377
    8. '


' → logprob: -10.76933765411377
    9. '
' → logprob: -11.01933765411377
    10. '<class' → logprob: -11.39433765411377

Token 286: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00871704239398241
    2. '
' → logprob: -4.758717060089111
    3. '

' → logprob: -9.758716583251953
    4. ' class' → logprob: -10.633716583251953
    5. '<|end|>' → logprob: -11.133716583251953
    6. '<class' → logprob: -13.258716583251953
    7. '```' → logprob: -13.508716583251953
    8. '
' → logprob: -14.758716583251953
    9. ' 
' → logprob: -15.133716583251953
    10. '    
' → logprob: -15.258716583251953

Token 287: ' Well' (ID: 11406)
  Prédit: 'Constant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Constant' → logprob: -0.5010218620300293
    2. ' Constant' → logprob: -2.6260218620300293
    3. 'Linear' → logprob: -2.7510218620300293
    4. 'Circular' → logprob: -3.3760218620300293
    5. 'Static' → logprob: -3.5010218620300293
    6. 'Fixed' → logprob: -3.6260218620300293
    7. 'Random' → logprob: -3.6260218620300293
    8. ' Circular' → logprob: -3.6260218620300293
    9. 'Straight' → logprob: -4.126021862030029
    10. ' Linear' → logprob: -4.126021862030029

Token 288: 'Direction' (ID: 14084)
  Prédit: 'Known'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Known' → logprob: -0.19812729954719543
    2. 'Direction' → logprob: -2.323127269744873
    3. 'Defined' → logprob: -2.948127269744873
    4. 'Behavior' → logprob: -5.198127269744873
    5. 'Done' → logprob: -5.448127269744873
    6. 'known' → logprob: -6.198127269744873
    7. 'Directional' → logprob: -6.198127269744873
    8. 'er' → logprob: -6.573127269744873
    9. 'Random' → logprob: -6.698127269744873
    10. 'Beh' → logprob: -6.698127269744873

Token 289: 'Provider' (ID: 5999)
  Prédit: 'Provider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Provider' → logprob: -0.001359401736408472
    2. 'al' → logprob: -6.876359462738037
    3. 's' → logprob: -9.501358985900879
    4. 'Generator' → logprob: -9.751358985900879
    5. 'Direction' → logprob: -9.751358985900879
    6. 'Sequence' → logprob: -11.001358985900879
    7. 'er' → logprob: -11.251358985900879
    8. 'ed' → logprob: -11.376358985900879
    9. 'Random' → logprob: -11.376358985900879
    10. 'Chooser' → logprob: -12.251358985900879

Token 290: '(Direction' (ID: 175338)
  Prédit: '(Direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Direction' → logprob: -0.5243977308273315
    2. ':' → logprob: -1.0243977308273315
    3. '(' → logprob: -3.024397850036621
    4. ':
' → logprob: -8.274397850036621
    5. ' :' → logprob: -9.274397850036621
    6. '(Abstract' → logprob: -9.649397850036621
    7. '():' → logprob: -10.524397850036621
    8. '(D' → logprob: -11.024397850036621
    9. '(Vector' → logprob: -11.149397850036621
    10. '(W' → logprob: -12.024397850036621

Token 291: 'Provider' (ID: 5999)
  Prédit: 'Provider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Provider' → logprob: -3.173704271830502e-06
    2. 'provider' → logprob: -13.37500286102295
    3. 'Provid' → logprob: -14.25000286102295
    4. ' Provider' → logprob: -15.62500286102295
    5. 'Direction' → logprob: -15.87500286102295
    6. '_provider' → logprob: -16.125003814697266
    7. 'Provide' → logprob: -16.375003814697266
    8. '.Provider' → logprob: -16.625003814697266
    9. '_PROVIDER' → logprob: -16.625003814697266
    10. 'Pro' → logprob: -16.750003814697266

Token 292: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036048211622983217
    2. '):
' → logprob: -5.628604888916016
    3. ':' → logprob: -13.378604888916016
    4. ')' → logprob: -13.878604888916016
    5. ' ):' → logprob: -14.003604888916016
    6. '):
' → logprob: -14.128604888916016
    7. '):

' → logprob: -14.253604888916016
    8. '   ' → logprob: -17.503604888916016
    9. ']:' → logprob: -17.878604888916016
    10. ',' → logprob: -17.878604888916016

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0041764602065086365
    2. ' def' → logprob: -5.504176616668701
    3. 'def' → logprob: -9.254176139831543
    4. '
' → logprob: -13.379176139831543
    5. '   ' → logprob: -15.754176139831543
    6. '    
' → logprob: -15.879176139831543
    7. '	def' → logprob: -16.00417709350586
    8. ':' → logprob: -16.50417709350586
    9. ' indentation' → logprob: -16.50417709350586
    10. ')' → logprob: -17.50417709350586

Token 294: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5789085030555725
    2. ' def' → logprob: -0.8289085030555725
    3. '   ' → logprob: -5.828908443450928
    4. ' ' → logprob: -12.328908920288086
    5. 'import' → logprob: -12.703908920288086
    6. '    ' → logprob: -13.078908920288086
    7. 'de' → logprob: -13.203908920288086
    8. '  ' → logprob: -13.453908920288086
    9. 'class' → logprob: -13.578908920288086
    10. '	def' → logprob: -13.578908920288086

Token 295: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.38935333490371704
    2. 'def' → logprob: -1.1393532752990723
    3. '   ' → logprob: -6.264353275299072
    4. 'init' → logprob: -7.639353275299072
    5. ' __' → logprob: -9.88935375213623
    6. '__' → logprob: -10.88935375213623
    7. ' ' → logprob: -11.76435375213623
    8. '_init' → logprob: -12.13935375213623
    9. '  ' → logprob: -12.88935375213623
    10. ' init' → logprob: -13.01435375213623

Token 296: ' Provides' (ID: 61049)
  Prédit: 'Provides'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Provides' (adapté à ' Provides') → logprob: -0.23468318581581116
    2. 'def' → logprob: -2.7346832752227783
    3. ' def' → logprob: -2.8596832752227783
    4. ' Provides' → logprob: -3.3596832752227783
    5. 'Gener' → logprob: -4.234683036804199
    6. '"""' → logprob: -5.109683036804199
    7. 'provid' → logprob: -5.234683036804199
    8. '"""
' → logprob: -5.359683036804199
    9. ' """
' → logprob: -5.484683036804199
    10. 'Im' → logprob: -6.234683036804199

Token 297: ' direction' (ID: 9262)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.139357566833496
    2. 'a' → logprob: -1.639357566833496
    3. ' directions' → logprob: -1.639357566833496
    4. 'direction' → logprob: -2.389357566833496
    5. ' direction' → logprob: -2.764357566833496
    6. 'dire' → logprob: -2.889357566833496
    7. ' the' → logprob: -4.014357566833496
    8. ' fixed' → logprob: -4.264357566833496
    9. 'the' → logprob: -4.514357566833496
    10. 'fixed' → logprob: -5.264357566833496

Token 298: ' vector' (ID: 9727)
  Prédit: ' vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vectors' → logprob: -0.27040645480155945
    2. ' based' → logprob: -1.8954064846038818
    3. 's' → logprob: -3.395406484603882
    4. ' for' → logprob: -4.270406246185303
    5. ' in' → logprob: -4.770406246185303
    6. ' at' → logprob: -5.020406246185303
    7. 'vectors' → logprob: -5.270406246185303
    8. ' along' → logprob: -5.520406246185303
    9. 'based' → logprob: -6.020406246185303
    10. ' as' → logprob: -6.020406246185303

Token 299: ' always' (ID: 3324)
  Prédit: ' based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' based' → logprob: -0.6489120125770569
    2. ' for' → logprob: -1.273911952972412
    3. 's' → logprob: -2.523911952972412
    4. ' at' → logprob: -2.898911952972412
    5. ' that' → logprob: -4.523911952972412
    6. ' in' → logprob: -4.523911952972412
    7. '   ' → logprob: -4.773911952972412
    8. ' along' → logprob: -5.148911952972412
    9. 'based' → logprob: -5.523911952972412
    10. 'for' → logprob: -5.523911952972412

Token 300: ' towards' (ID: 9979)
  Prédit: ' pointing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pointing' → logprob: -0.42788800597190857
    2. ' as' → logprob: -2.3028879165649414
    3. 'point' → logprob: -2.4278879165649414
    4. 'down' → logprob: -3.1778879165649414
    5. ' Vector' → logprob: -3.6778879165649414
    6. '(' → logprob: -3.8028879165649414
    7. 'Vector' → logprob: -4.052887916564941
    8. ' (' → logprob: -4.552887916564941
    9. ' down' → logprob: -4.677887916564941
    10. '(Vector' → logprob: -5.302887916564941

Token 301: ' the' (ID: 290)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.3493189215660095
    2. ' Vector' → logprob: -1.2243189811706543
    3. '(Vector' → logprob: -7.849318981170654
    4. 'the' → logprob: -8.099318504333496
    5. ' the' → logprob: -8.974318504333496
    6. '<Vector' → logprob: -10.724318504333496
    7. '	Vector' → logprob: -10.974318504333496
    8. '_Vector' → logprob: -11.974318504333496
    9. '_vector' → logprob: -13.349318504333496
    10. '.Vector' → logprob: -13.349318504333496

Token 302: ' well' (ID: 1775)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.2506488859653473
    2. ' Vector' → logprob: -1.750648856163025
    3. ' origin' → logprob: -3.6256489753723145
    4. 'origin' → logprob: -3.8756489753723145
    5. 'down' → logprob: -9.000648498535156
    6. 'center' → logprob: -9.375648498535156
    7. ' center' → logprob: -9.625648498535156
    8. 'negative' → logprob: -9.750648498535156
    9. 'up' → logprob: -9.875648498535156
    10. 'y' → logprob: -10.000648498535156

Token 303: ' placed' (ID: 12989)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2028306722640991
    2. '.' → logprob: -2.2028307914733887
    3. ' at' → logprob: -2.2028307914733887
    4. ' located' → logprob: -2.2028307914733887
    5. ' center' → logprob: -2.3278307914733887
    6. '   ' → logprob: -2.5778307914733887
    7. '(' → logprob: -2.7028307914733887
    8. ',' → logprob: -3.4528307914733887
    9. 'center' → logprob: -3.9528307914733887
    10. '(center' → logprob: -4.202830791473389

Token 304: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.11400280892848969
    2. 'at' → logprob: -2.2390027046203613
    3. ' in' → logprob: -7.864002704620361
    4. 'in' → logprob: -8.48900318145752
    5. ' ' → logprob: -9.36400318145752
    6. ' on' → logprob: -9.73900318145752
    7. ' to' → logprob: -9.86400318145752
    8. 'ahead' → logprob: -10.11400318145752
    9. ' below' → logprob: -10.23900318145752
    10. '   ' → logprob: -10.61400318145752

Token 305: ' origin' (ID: 12839)
  Prédit: ' Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.26069504022598267
    2. 'Vector' → logprob: -1.885694980621338
    3. '(' → logprob: -3.760694980621338
    4. ' the' → logprob: -3.760694980621338
    5. ' origin' → logprob: -4.760694980621338
    6. '(Vector' → logprob: -4.760694980621338
    7. 'the' → logprob: -5.260694980621338
    8. ' (' → logprob: -5.635694980621338
    9. 'origin' → logprob: -5.635694980621338
    10. '0' → logprob: -6.635694980621338

Token 306: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6660569906234741
    2. ' (' → logprob: -1.2910569906234741
    3. '.' → logprob: -1.9160569906234741
    4. '   ' → logprob: -2.9160571098327637
    5. '.
' → logprob: -5.916057109832764
    6. ',' → logprob: -6.791057109832764
    7. '"""
' → logprob: -6.791057109832764
    8. '"""' → logprob: -7.166057109832764
    9. '."""
' → logprob: -7.166057109832764
    10. ' from' → logprob: -7.291057109832764

Token 307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05959954485297203
    2. ')' → logprob: -3.6845996379852295
    3. ' ' → logprob: -4.18459939956665
    4. '(' → logprob: -5.30959939956665
    5. ' (' → logprob: -5.68459939956665
    6. ').' → logprob: -5.68459939956665
    7. 'self' → logprob: -6.43459939956665
    8. 'Vector' → logprob: -6.68459939956665
    9. '   ' → logprob: -6.93459939956665
    10. ' the' → logprob: -7.55959939956665

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028662122786045074
    2. '.' → logprob: -6.127866268157959
    3. '0' → logprob: -7.377866268157959
    4. ' ,' → logprob: -10.7528657913208
    5. ')' → logprob: -11.0028657913208
    6. '.,' → logprob: -11.5028657913208
    7. ' ' → logprob: -12.6278657913208
    8. ',
' → logprob: -13.2528657913208
    9. '<|end|>' → logprob: -13.8778657913208
    10. '‌,' → logprob: -15.5653657913208

Token 309: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026303201913833618
    2. ' ' → logprob: -3.651303291320801
    3. ')' → logprob: -13.6513032913208
    4. ',' → logprob: -14.1513032913208
    5. '<|end|>' → logprob: -14.9013032913208
    6. '   ' → logprob: -15.5263032913208
    7. '  ' → logprob: -16.151302337646484
    8. '
' → logprob: -16.338802337646484
    9. ' ' → logprob: -16.588802337646484
    10. '```' → logprob: -16.838802337646484

Token 310: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3193264901638031
    2. ').' → logprob: -1.3193265199661255
    3. '   ' → logprob: -5.944326400756836
    4. ' )' → logprob: -6.319326400756836
    5. ')
' → logprob: -7.694326400756836
    6. '.' → logprob: -7.694326400756836
    7. '),' → logprob: -8.194326400756836
    8. ' ).' → logprob: -8.694326400756836
    9. ').
' → logprob: -9.194326400756836
    10. ',' → logprob: -9.819326400756836

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22606056928634644
    2. '.' → logprob: -1.7260606288909912
    3. ')' → logprob: -3.976060628890991
    4. '
' → logprob: -5.726060390472412
    5. '.
' → logprob: -7.226060390472412
    6. ' from' → logprob: -8.60106086730957
    7. '"""' → logprob: -8.60106086730957
    8. ',' → logprob: -8.72606086730957
    9. ').' → logprob: -8.85106086730957
    10. ' ' → logprob: -8.85106086730957

Token 312: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34330886602401733
    2. '"""' → logprob: -1.343308925628662
    3. '"""
' → logprob: -4.218308925628662
    4. ')' → logprob: -5.468308925628662
    5. ' """' → logprob: -5.468308925628662
    6. '.' → logprob: -6.093308925628662
    7. ' """
' → logprob: -6.593308925628662
    8. '
' → logprob: -6.968308925628662
    9. '):
' → logprob: -7.843308925628662
    10. 'def' → logprob: -8.343308448791504

Token 313: ' current' (ID: 2208)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.357170045375824
    2. ' the' → logprob: -1.3571701049804688
    3. 'a' → logprob: -3.8571701049804688
    4. ' any' → logprob: -4.982170104980469
    5. ' current' → logprob: -5.357170104980469
    6. ' given' → logprob: -5.607170104980469
    7. 'the' → logprob: -5.607170104980469
    8. 'current' → logprob: -6.357170104980469
    9. 'any' → logprob: -7.607170104980469
    10. ' an' → logprob: -8.732170104980469

Token 314: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.10885196924209595
    2. 'position' → logprob: -2.483851909637451
    3. '_position' → logprob: -4.233851909637451
    4. ' point' → logprob: -6.483851909637451
    5. ' location' → logprob: -6.608851909637451
    6. ' step' → logprob: -7.608851909637451
    7. 'point' → logprob: -8.10885238647461
    8. 'location' → logprob: -8.23385238647461
    9. '_point' → logprob: -8.48385238647461
    10. ' vector' → logprob: -8.85885238647461

Token 315: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6466374397277832
    2. '   ' → logprob: -1.0216374397277832
    3. '"""' → logprob: -3.146637439727783
    4. ' """' → logprob: -3.646637439727783
    5. ' of' → logprob: -4.646637439727783
    6. ',' → logprob: -5.146637439727783
    7. ' """
' → logprob: -5.521637439727783
    8. ' at' → logprob: -5.771637439727783
    9. ' .' → logprob: -5.896637439727783
    10. '."""' → logprob: -5.896637439727783

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01757124625146389
    2. '"""' → logprob: -4.142571449279785
    3. ' """' → logprob: -7.017571449279785
    4. '
' → logprob: -8.767571449279785
    5. '    ' → logprob: -8.767571449279785
    6. '```' → logprob: -8.892571449279785
    7. ')' → logprob: -9.142571449279785
    8. 'def' → logprob: -10.892571449279785
    9. ' ' → logprob: -11.517571449279785
    10. '"""
' → logprob: -11.767571449279785

Token 317: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34070122241973877
    2. '"""' → logprob: -1.3407012224197388
    3. ' """' → logprob: -4.215701103210449
    4. 'def' → logprob: -5.590701103210449
    5. '
' → logprob: -5.965701103210449
    6. '"""
' (adapté à ' """
') → logprob: -6.090701103210449
    7. ' """
' → logprob: -6.840701103210449
    8. '```' → logprob: -7.090701103210449
    9. ')' → logprob: -7.340701103210449
    10. '    ' → logprob: -7.715701103210449

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030358951538801193
    2. 'def' → logprob: -3.5303590297698975
    3. ' def' → logprob: -7.405358791351318
    4. '	def' → logprob: -15.655359268188477
    5. '    
' → logprob: -17.030359268188477
    6. '  ' → logprob: -17.530359268188477
    7. '   ' → logprob: -18.030359268188477
    8. ' ' → logprob: -18.155359268188477
    9. '...' → logprob: -18.280359268188477
    10. ')' → logprob: -18.405359268188477

Token 319: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0016256680246442556
    2. ' def' → logprob: -6.5016255378723145
    3. '   ' → logprob: -9.001626014709473
    4. 'de' → logprob: -17.126625061035156
    5. '	def' → logprob: -17.376625061035156
    6. ' ' → logprob: -17.626625061035156
    7. '...' → logprob: -17.751625061035156
    8. 'class' → logprob: -18.001625061035156
    9. '
' → logprob: -18.751625061035156
    10. 'current' → logprob: -18.876625061035156

Token 320: ' __' (ID: 2516)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.5077120065689087
    2. ' __' → logprob: -1.6327120065689087
    3. 'get' → logprob: -1.7577120065689087
    4. '__' → logprob: -3.507711887359619
    5. '_get' → logprob: -8.507712364196777
    6. ' def' → logprob: -10.007712364196777
    7. 'init' → logprob: -10.507712364196777
    8. 'def' → logprob: -10.632712364196777
    9. ' init' → logprob: -12.007712364196777
    10. ' ' → logprob: -12.257712364196777

Token 321: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -18.75
    3. ' init' → logprob: -19.125
    4. 'doc' → logprob: -21.125
    5. '```' → logprob: -21.125
    6. 'def' → logprob: -21.25
    7. 'inite' → logprob: -21.5
    8. 'int' → logprob: -21.625
    9. 'call' → logprob: -21.75
    10. 'in' → logprob: -22.125

Token 322: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0014313090359792113
    2. '(self' → logprob: -6.751431465148926
    3. '__' → logprob: -8.626431465148926
    4. '__(
' → logprob: -9.876431465148926
    5. '__((' → logprob: -11.001431465148926
    6. '(' → logprob: -11.876431465148926
    7. 'self' → logprob: -12.501431465148926
    8. '__('' → logprob: -14.001431465148926
    9. ' (' → logprob: -14.376431465148926
    10. '__("' → logprob: -15.251431465148926

Token 323: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001422770437784493
    2. ' self' → logprob: -8.875142097473145
    3. '0' → logprob: -14.500142097473145
    4. '(self' → logprob: -14.625142097473145
    5. '
' → logprob: -14.875142097473145
    6. ',' → logprob: -15.000142097473145
    7. ')' → logprob: -15.000142097473145
    8. 'current' → logprob: -15.250142097473145
    9. '):
' → logprob: -17.62514305114746
    10. ',self' → logprob: -17.87514305114746

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008446615189313889
    2. 'self' → logprob: -5.38344669342041
    3. '__,' → logprob: -5.88344669342041
    4. '__(' → logprob: -7.75844669342041
    5. ' ,' → logprob: -8.00844669342041
    6. '(self' → logprob: -9.25844669342041
    7. '_,' → logprob: -9.88344669342041
    8. ' self' → logprob: -10.25844669342041
    9. '   ' → logprob: -10.63344669342041
    10. '__' → logprob: -11.13344669342041

Token 325: ' well' (ID: 1775)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8937996029853821
    2. 'position' → logprob: -1.1437995433807373
    3. ' current' → logprob: -1.6437995433807373
    4. ' position' → logprob: -2.6437995433807373
    5. 'self' → logprob: -5.643799781799316
    6. ')' → logprob: -6.643799781799316
    7. ' self' → logprob: -7.518799781799316
    8. '):
' → logprob: -8.018799781799316
    9. 'get' → logprob: -8.018799781799316
    10. '   ' → logprob: -8.143799781799316

Token 326: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.0026244083419442177
    2. '_pos' → logprob: -6.25262451171875
    3. ':' → logprob: -8.12762451171875
    4. '_location' → logprob: -8.25262451171875
    5. '_' → logprob: -9.62762451171875
    6. '_center' → logprob: -10.75262451171875
    7. 'Position' → logprob: -11.37762451171875
    8. '_positions' → logprob: -11.37762451171875
    9. '_vector' → logprob: -11.87762451171875
    10. 'position' → logprob: -11.87762451171875

Token 327: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07121746987104416
    2. '=' → logprob: -2.6962175369262695
    3. '):' → logprob: -7.1962175369262695
    4. ')' → logprob: -8.94621753692627
    5. ' =' → logprob: -8.94621753692627
    6. '=None' → logprob: -9.19621753692627
    7. '):
' → logprob: -9.44621753692627
    8. ' :' → logprob: -9.57121753692627
    9. '<|end|>' → logprob: -12.19621753692627
    10. ' ):' → logprob: -12.94621753692627

Token 328: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.16023966670036316
    2. ' Vector' → logprob: -1.9102396965026855
    3. ')' → logprob: -12.160239219665527
    4. '	Vector' → logprob: -12.160239219665527
    5. '(Vector' → logprob: -13.410239219665527
    6. ' ' → logprob: -13.535239219665527
    7. '   ' → logprob: -14.410239219665527
    8. '<Vector' → logprob: -14.535239219665527
    9. '  ' → logprob: -15.160239219665527
    10. '_Vector' → logprob: -15.160239219665527

Token 329: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'Vector' → logprob: -17.625
    3. ' ' → logprob: -19.125
    4. '<Vector' → logprob: -19.375
    5. '```' → logprob: -19.625
    6. '[' → logprob: -20.25
    7. '(Vector' → logprob: -20.25
    8. '.Vector' → logprob: -20.375
    9. '   ' → logprob: -20.75
    10. '<|end|>' → logprob: -20.75

Token 330: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.3425219549390022e-05
    2. 'Vector' → logprob: -11.25001335144043
    3. '2' → logprob: -15.62501335144043
    4. ' D' → logprob: -16.75001335144043
    5. '0' → logprob: -16.87501335144043
    6. ')' → logprob: -17.75001335144043
    7. 'vector' → logprob: -19.12501335144043
    8. ',' → logprob: -19.75001335144043
    9. '(Vector' → logprob: -20.12501335144043
    10. '(' → logprob: -20.37501335144043

Token 331: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.595282256603241
    2. '=' → logprob: -1.3452823162078857
    3. ')' → logprob: -2.2202823162078857
    4. ' =' → logprob: -2.9702823162078857
    5. '):
' → logprob: -4.095282077789307
    6. '=None' → logprob: -4.720282077789307
    7. ':' → logprob: -6.220282077789307
    8. ' ):' → logprob: -7.595282077789307
    9. ' )' → logprob: -9.595282554626465
    10. ')=' → logprob: -10.095282554626465

Token 332: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.00042030587792396545
    2. ' Vector' → logprob: -8.250420570373535
    3. 'None' → logprob: -8.750420570373535
    4. ' None' → logprob: -14.500420570373535
    5. '	Vector' → logprob: -17.00041961669922
    6. '  ' → logprob: -19.25041961669922
    7. '_Vector' → logprob: -19.25041961669922
    8. '<Vector' → logprob: -19.75041961669922
    9. ')' → logprob: -20.00041961669922
    10. ' ' → logprob: -20.62541961669922

Token 333: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.875
    3. 'Vector' → logprob: -17.375
    4. '(Vector' → logprob: -17.375
    5. '0' → logprob: -18.625
    6. ' ' → logprob: -19.875
    7. '```' → logprob: -19.875
    8. '.Vector' → logprob: -20.625
    9. '<Vector' → logprob: -20.625
    10. '۲' → logprob: -20.875

Token 334: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -3.464347173576243e-05
    2. '0' → logprob: -11.00003433227539
    3. '2' → logprob: -11.87503433227539
    4. '(' → logprob: -11.87503433227539
    5. 'Vector' → logprob: -12.50003433227539
    6. ' ' → logprob: -16.62503433227539
    7. ' D' → logprob: -16.62503433227539
    8. '   ' → logprob: -17.62503433227539
    9. '(Vector' → logprob: -18.00003433227539
    10. ' Vector' → logprob: -18.12503433227539

Token 335: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8074649572372437
    2. '())' → logprob: -0.8074649572372437
    3. '()' → logprob: -2.432465076446533
    4. '0' → logprob: -3.932465076446533
    5. '()):
' → logprob: -7.932465076446533
    6. '()){' → logprob: -9.682464599609375
    7. '():' → logprob: -9.932464599609375
    8. ')' → logprob: -10.307464599609375
    9. ' ' → logprob: -11.057464599609375
    10. '()
' → logprob: -11.307464599609375

Token 336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.868328920158092e-05
    2. ')' → logprob: -10.875028610229492
    3. '))' → logprob: -11.750028610229492
    4. ' ' → logprob: -13.375028610229492
    5. '(' → logprob: -16.500028610229492
    6. '()' → logprob: -18.250028610229492
    7. '()))' → logprob: -18.375028610229492
    8. '   ' → logprob: -18.625028610229492
    9. '  ' → logprob: -18.750028610229492
    10. ')>' → logprob: -19.000028610229492

Token 337: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08931467682123184
    2. ',' → logprob: -2.4643146991729736
    3. '.,' → logprob: -8.464314460754395
    4. ')' → logprob: -9.714314460754395
    5. ' ,' → logprob: -9.964314460754395
    6. '(),' → logprob: -10.589314460754395
    7. '0' → logprob: -11.089314460754395
    8. ' ' → logprob: -12.339314460754395
    9. '))' → logprob: -12.964314460754395
    10. ',
' → logprob: -13.464314460754395

Token 338: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324547804892063
    2. ' ' → logprob: -3.7732455730438232
    3. ')' → logprob: -18.023244857788086
    4. '  ' → logprob: -18.273244857788086
    5. '   ' → logprob: -18.273244857788086
    6. '
' → logprob: -19.648244857788086
    7. ' ' → logprob: -19.648244857788086
    8. '<|end|>' → logprob: -19.648244857788086
    9. ' 
' → logprob: -20.148244857788086
    10. '۰' → logprob: -21.398244857788086

Token 339: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.44624772667884827
    2. ')):
' → logprob: -1.5712476968765259
    3. '))' → logprob: -2.3212478160858154
    4. ')' → logprob: -2.9462478160858154
    5. ')):
' → logprob: -7.571247577667236
    6. '):' → logprob: -7.571247577667236
    7. '   ' → logprob: -8.696248054504395
    8. '),' → logprob: -9.821248054504395
    9. ' ' → logprob: -9.821248054504395
    10. ' ))' → logprob: -9.946248054504395

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013327520340681076
    2. 'self' → logprob: -4.388327598571777
    3. ' self' → logprob: -7.138327598571777
    4. '   ' → logprob: -11.138327598571777
    5. '	self' → logprob: -12.638327598571777
    6. 'def' → logprob: -13.138327598571777
    7. '(self' → logprob: -14.638327598571777
    8. '	' → logprob: -14.888327598571777
    9. ',' → logprob: -15.013327598571777
    10. '      ' → logprob: -15.138327598571777

Token 341: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0001170132018160075
    2. '       ' → logprob: -9.750117301940918
    3. ' self' → logprob: -9.750117301940918
    4. '
' → logprob: -15.250117301940918
    5. '   ' → logprob: -16.8751163482666
    6. 'super' → logprob: -17.2501163482666
    7. '	self' → logprob: -17.3751163482666
    8. '        
' → logprob: -17.7501163482666
    9. '(self' → logprob: -19.3751163482666
    10. 'def' → logprob: -20.1251163482666

Token 342: '.w' (ID: 2234)
  Prédit: '.w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -5.5861724831629544e-05
    2. ' .' → logprob: -10.250056266784668
    3. '.' → logprob: -11.250056266784668
    4. '._' → logprob: -12.000056266784668
    5. 'well' → logprob: -15.250056266784668
    6. '.current' → logprob: -15.375056266784668
    7. '.we' → logprob: -15.875056266784668
    8. '.v' → logprob: -16.25005531311035
    9. '.position' → logprob: -16.62505531311035
    10. ' well' → logprob: -17.25005531311035

Token 343: 'ell' (ID: 596)
  Prédit: 'ell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ell' → logprob: -1.8624639324116288e-06
    2. 'all' → logprob: -14.500001907348633
    3. 'e' → logprob: -14.750001907348633
    4. '_position' → logprob: -15.000001907348633
    5. '   ' → logprob: -15.750001907348633
    6. 'el' → logprob: -16.125001907348633
    7. '_' → logprob: -16.500001907348633
    8. 'position' → logprob: -16.750001907348633
    9. 'well' → logprob: -17.000001907348633
    10. '
' → logprob: -17.375001907348633

Token 344: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -2.15310683415737e-05
    2. '_' → logprob: -10.875021934509277
    3. '_direction' → logprob: -13.625021934509277
    4. 'position' → logprob: -14.125021934509277
    5. '_pos' → logprob: -15.375021934509277
    6. '_location' → logprob: -16.12502098083496
    7. '_vector' → logprob: -16.62502098083496
    8. ' _' → logprob: -16.87502098083496
    9. '_
' → logprob: -16.87502098083496
    10. '_POSITION' → logprob: -17.00002098083496

Token 345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868776857852936
    2. ' =' → logprob: -1.1368776559829712
    3. ' ' → logprob: -12.01187801361084
    4. ' =
' → logprob: -15.13687801361084
    5. '=
' → logprob: -15.63687801361084
    6. '=self' → logprob: -16.011877059936523
    7. '=

' → logprob: -17.136877059936523
    8. ')' → logprob: -17.636877059936523
    9. '<|end|>' → logprob: -17.636877059936523
    10. '  ' → logprob: -18.261877059936523

Token 346: ' well' (ID: 1775)
  Prédit: 'well'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'well' → logprob: -0.011055837385356426
    2. ' well' → logprob: -4.511055946350098
    3. 'w' → logprob: -12.386055946350098
    4. 'wel' → logprob: -13.136055946350098
    5. 'Well' → logprob: -13.761055946350098
    6. ' wel' → logprob: -14.636055946350098
    7. 'Vector' → logprob: -15.511055946350098
    8. ' ' → logprob: -16.88605499267578
    9. ' ' → logprob: -17.63605499267578
    10. '
' → logprob: -17.88605499267578

Token 347: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -4.008129963040119e-06
    2. 'position' → logprob: -12.625003814697266
    3. 'Position' → logprob: -15.375003814697266
    4. '_' → logprob: -15.875003814697266
    5. '_POSITION' → logprob: -15.875003814697266
    6. '.position' → logprob: -16.750003814697266
    7. ' _' → logprob: -17.125003814697266
    8. '_vector' → logprob: -17.250003814697266
    9. 'osition' → logprob: -17.625003814697266
    10. '_positions' → logprob: -17.625003814697266

Token 348: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006746042985469103
    2. '   ' → logprob: -5.2567458152771
    3. '

' → logprob: -6.7567458152771
    4. '    
' → logprob: -8.756746292114258
    5. '<|end|>' → logprob: -8.881746292114258
    6. 'def' → logprob: -11.006746292114258
    7. '
' → logprob: -11.631746292114258
    8. '<|end|>' → logprob: -12.006746292114258
    9. ' 
' → logprob: -12.131746292114258
    10. ' def' → logprob: -13.131746292114258

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029198849573731422
    2. 'def' → logprob: -3.7791988849639893
    3. '
' → logprob: -5.27919864654541
    4. ' def' → logprob: -7.27919864654541
    5. '

' → logprob: -10.02919864654541
    6. '    
' → logprob: -10.02919864654541
    7. '<|end|>' → logprob: -10.15419864654541
    8. '<|end|>' → logprob: -11.77919864654541
    9. '        
' → logprob: -12.27919864654541
    10. '	def' → logprob: -12.52919864654541

Token 350: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.872261317563243e-05
    2. ' def' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.375059127807617
    4. '
' → logprob: -16.500059127807617
    5. '    
' → logprob: -21.000059127807617
    6. '	def' → logprob: -21.375059127807617
    7. 'de' → logprob: -21.500059127807617
    8. '

' → logprob: -21.750059127807617
    9. ' ' → logprob: -22.625059127807617
    10. 'class' → logprob: -22.625059127807617

Token 351: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.575948178768158
    2. ' get' → logprob: -0.825948178768158
    3. '_get' → logprob: -11.950947761535645
    4. '.get' → logprob: -13.325947761535645
    5. '	get' → logprob: -14.950947761535645
    6. '@get' → logprob: -16.45094871520996
    7. 'Get' → logprob: -16.82594871520996
    8. ':get' → logprob: -16.95094871520996
    9. ')get' → logprob: -17.20094871520996
    10. ' ' → logprob: -17.20094871520996

Token 352: '_direction' (ID: 64332)
  Prédit: '_direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -4.1080467781284824e-05
    2. '_' → logprob: -10.125041007995605
    3. '_direct' → logprob: -15.000041007995605
    4. 'direction' → logprob: -15.250041007995605
    5. '_DIRECTION' → logprob: -15.500041007995605
    6. '_d' → logprob: -16.750041961669922
    7. '_distance' → logprob: -17.125041961669922
    8. ' direction' → logprob: -17.500041961669922
    9. '_orientation' → logprob: -17.875041961669922
    10. '_di' → logprob: -17.875041961669922

Token 353: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.327856630785391e-05
    2. '(' → logprob: -9.500082969665527
    3. 'self' → logprob: -12.125082969665527
    4. ' (' → logprob: -13.875082969665527
    5. '   ' → logprob: -14.250082969665527
    6. '(
' → logprob: -14.250082969665527
    7. '(s' → logprob: -15.250082969665527
    8. ' self' → logprob: -15.625082969665527
    9. '       ' → logprob: -16.625083923339844
    10. 'def' → logprob: -16.625083923339844

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021108859218657017
    2. ' ,' → logprob: -6.252110958099365
    3. 'self' → logprob: -9.002110481262207
    4. '(self' → logprob: -10.127110481262207
    5. ',self' → logprob: -11.252110481262207
    6. ')' → logprob: -12.752110481262207
    7. ' self' → logprob: -13.752110481262207
    8. ',
' → logprob: -14.377110481262207
    9. '   ' → logprob: -14.627110481262207
    10. '       ' → logprob: -15.377110481262207

Token 355: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.3775666356086731
    2. ' self' → logprob: -1.8775665760040283
    3. 'step' → logprob: -2.2525665760040283
    4. 'self' → logprob: -2.8775665760040283
    5. ' ' → logprob: -10.12756633758545
    6. '_step' → logprob: -11.00256633758545
    7. ')' → logprob: -11.50256633758545
    8. '	step' → logprob: -12.00256633758545
    9. '(step' → logprob: -12.12756633758545
    10. 'Step' → logprob: -12.50256633758545

Token 356: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.1875571544806007e-05
    2. '_' → logprob: -11.750011444091797
    3. '   ' → logprob: -13.375011444091797
    4. ')_' → logprob: -13.875011444091797
    5. ' _' → logprob: -14.625011444091797
    6. '_
' → logprob: -15.375011444091797
    7. '       ' → logprob: -16.125011444091797
    8. '_idx' → logprob: -16.250011444091797
    9. ')' → logprob: -16.375011444091797
    10. 'index' → logprob: -16.500011444091797

Token 357: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16236919164657593
    2. ',' → logprob: -2.0373692512512207
    3. ')' → logprob: -4.287369251251221
    4. '   ' → logprob: -5.912369251251221
    5. 'self' → logprob: -7.037369251251221
    6. ' ,' → logprob: -7.162369251251221
    7. '):' → logprob: -7.537369251251221
    8. '       ' → logprob: -7.787369251251221
    9. ' :' → logprob: -8.787368774414062
    10. ' )' → logprob: -9.162368774414062

Token 358: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.054885439574718475
    2. ' int' → logprob: -2.9298853874206543
    3. ')' → logprob: -14.054885864257812
    4. ' ' → logprob: -14.429885864257812
    5. '[int' → logprob: -14.679885864257812
    6. '   ' → logprob: -15.054885864257812
    7. '0' → logprob: -15.304885864257812
    8. '1' → logprob: -15.429885864257812
    9. '	int' → logprob: -15.929885864257812
    10. 'in' → logprob: -15.929885864257812

Token 359: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048724982887506485
    2. ')' → logprob: -3.048724889755249
    3. '):' → logprob: -9.673725128173828
    4. '   ' → logprob: -10.173725128173828
    5. ' ,' → logprob: -11.298725128173828
    6. '       ' → logprob: -11.423725128173828
    7. '):
' → logprob: -11.673725128173828
    8. 'self' → logprob: -12.923725128173828
    9. ' )' → logprob: -14.048725128173828
    10. ':' → logprob: -15.423725128173828

Token 360: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.09231653809547424
    2. '->' → logprob: -3.0923166275024414
    3. ',' → logprob: -3.7173166275024414
    4. ')' → logprob: -4.717316627502441
    5. '       ' → logprob: -5.592316627502441
    6. '   ' → logprob: -5.717316627502441
    7. ':' → logprob: -6.092316627502441
    8. ':
' → logprob: -8.967316627502441
    9. ')->' → logprob: -9.217316627502441
    10. 'self' → logprob: -11.092316627502441

Token 361: ' Vector' (ID: 8764)
  Prédit: ' Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.22603869438171387
    2. 'Vector' → logprob: -1.6010386943817139
    3. '   ' → logprob: -8.601038932800293
    4. '	Vector' → logprob: -8.726038932800293
    5. ' '' → logprob: -9.976038932800293
    6. ' ' → logprob: -9.976038932800293
    7. ' None' → logprob: -10.101038932800293
    8. ''' → logprob: -10.476038932800293
    9. 'self' → logprob: -10.601038932800293
    10. ' self' → logprob: -10.601038932800293

Token 362: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003821716527454555
    2. 'Vector' → logprob: -7.875381946563721
    3. 'D' → logprob: -13.375382423400879
    4. ' Vector' → logprob: -15.625382423400879
    5. '.Vector' → logprob: -16.375381469726562
    6. 'V' → logprob: -16.625381469726562
    7. 'To' → logprob: -16.750381469726562
    8. 'A' → logprob: -17.000381469726562
    9. 'C' → logprob: -17.250381469726562
    10. '(Vector' → logprob: -17.375381469726562

Token 363: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0017231308156624436
    2. 'Vector' → logprob: -7.001723289489746
    3. '2' → logprob: -7.126723289489746
    4. 'V' → logprob: -12.126723289489746
    5. 'vector' → logprob: -13.751723289489746
    6. ' Vector' → logprob: -14.751723289489746
    7. '.Vector' → logprob: -15.001723289489746
    8. '[' → logprob: -15.876723289489746
    9. 'Vec' → logprob: -16.12672233581543
    10. '_Vector' → logprob: -16.25172233581543

Token 364: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2576945126056671
    2. ':
' → logprob: -1.6326944828033447
    3. '       ' → logprob: -3.5076944828033447
    4. '->' → logprob: -7.132694721221924
    5. ' ->' → logprob: -7.882694721221924
    6. '):
' → logprob: -8.632694244384766
    7. '   ' → logprob: -8.632694244384766
    8. '):' → logprob: -9.882694244384766
    9. ',' → logprob: -10.257694244384766
    10. ')' → logprob: -10.507694244384766

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.349075556499884e-05
    2. 'return' → logprob: -10.1250638961792
    3. '        
' → logprob: -11.8750638961792
    4. '<|end|>' → logprob: -12.5000638961792
    5. '#' → logprob: -13.2500638961792
    6. 'raise' → logprob: -13.3750638961792
    7. ' return' → logprob: -13.5000638961792
    8. 'pass' → logprob: -13.5000638961792
    9. ' pass' → logprob: -13.7500638961792
    10. 'Vector' → logprob: -13.8750638961792

Token 366: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7774389982223511
    2. 'current' → logprob: -1.277438998222351
    3. '       ' → logprob: -2.2774391174316406
    4. '#' (adapté à ' #') → logprob: -2.2774391174316406
    5. 'raise' → logprob: -3.9024391174316406
    6. 'direction' → logprob: -3.9024391174316406
    7. 'position' → logprob: -4.902439117431641
    8. 'target' → logprob: -5.152439117431641
    9. 'origin' → logprob: -7.277439117431641
    10. 'step' → logprob: -7.527439117431641

Token 367: ' Return' (ID: 6318)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5428193807601929
    2. 'current' → logprob: -1.6678193807601929
    3. 'direction' → logprob: -2.2928194999694824
    4. '#' → logprob: -2.4178194999694824
    5. '       ' → logprob: -4.292819499969482
    6. 'position' → logprob: -4.542819499969482
    7. 'raise' → logprob: -4.917819499969482
    8. 'def' → logprob: -5.917819499969482
    9. 'target' → logprob: -6.917819499969482
    10. 'distance' → logprob: -7.042819499969482

Token 368: ' normalized' (ID: 59625)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.6203528046607971
    2. ' Vector' → logprob: -0.9953528046607971
    3. 'self' → logprob: -2.9953527450561523
    4. ' self' → logprob: -3.2453527450561523
    5. ' -' → logprob: -6.120352745056152
    6. '-' → logprob: -7.495352745056152
    7. '-vector' → logprob: -7.495352745056152
    8. '-self' → logprob: -8.870352745056152
    9. '(Vector' → logprob: -9.745352745056152
    10. '   ' → logprob: -10.245352745056152

Token 369: ' vector' (ID: 9727)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.994279146194458
    2. ' vector' → logprob: -0.994279146194458
    3. 'vector' → logprob: -2.244279146194458
    4. ' direction' → logprob: -2.619279146194458
    5. ' Vector' → logprob: -3.369279146194458
    6. 'direction' → logprob: -3.369279146194458
    7. '_vector' → logprob: -4.744278907775879
    8. '(Vector' → logprob: -6.369278907775879
    9. ' (' → logprob: -7.619278907775879
    10. '(' → logprob: -7.994278907775879

Token 370: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7683399319648743
    2. '(Vector' → logprob: -1.5183398723602295
    3. '(-' → logprob: -2.2683398723602295
    4. '       ' → logprob: -2.3933398723602295
    5. '(' → logprob: -2.7683398723602295
    6. ' from' → logprob: -4.018340110778809
    7. 'return' → logprob: -4.643340110778809
    8. 'Vector' → logprob: -4.768340110778809
    9. ' (' → logprob: -5.643340110778809
    10. '(
' → logprob: -6.268340110778809

Token 371: ' current' (ID: 2208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3571728467941284
    2. 'Vector' → logprob: -1.2321728467941284
    3. ' Vector' → logprob: -5.607172966003418
    4. ' self' → logprob: -5.732172966003418
    5. 'current' → logprob: -6.607172966003418
    6. 'the' → logprob: -8.607172966003418
    7. '(Vector' → logprob: -9.982172966003418
    8. '(self' → logprob: -10.482172966003418
    9. ' current' → logprob: -10.607172966003418
    10. 'Well' → logprob: -10.982172966003418

Token 372: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.1159137412905693
    2. ' position' → logprob: -2.7409136295318604
    3. 'self' → logprob: -3.8659136295318604
    4. 'Vector' → logprob: -5.3659138679504395
    5. ' self' → logprob: -5.6159138679504395
    6. '_position' → logprob: -5.6159138679504395
    7. ' to' → logprob: -6.4909138679504395
    8. 'step' → logprob: -6.4909138679504395
    9. '(position' → logprob: -6.8659138679504395
    10. '(Vector' → logprob: -6.8659138679504395

Token 373: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4621214270591736
    2. '       ' → logprob: -1.5871214866638184
    3. 'to' → logprob: -2.0871214866638184
    4. '(' → logprob: -4.212121486663818
    5. ' (' → logprob: -4.337121486663818
    6. '(self' → logprob: -5.462121486663818
    7. '(Vector' → logprob: -5.962121486663818
    8. '<|end|>' → logprob: -6.587121486663818
    9. 'def' → logprob: -6.962121486663818
    10. ',' → logprob: -7.212121486663818

Token 374: ' well' (ID: 1775)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007501451298594475
    2. 'Vector' → logprob: -5.382501602172852
    3. ' self' → logprob: -5.882501602172852
    4. 'the' → logprob: -9.757501602172852
    5. ' Vector' → logprob: -10.757501602172852
    6. ' the' → logprob: -13.132501602172852
    7. 'Well' → logprob: -13.507501602172852
    8. 'step' → logprob: -13.757501602172852
    9. '       ' → logprob: -13.882501602172852
    10. 'current' → logprob: -13.882501602172852

Token 375: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04811975732445717
    2. '<|end|>' → logprob: -4.17311954498291
    3. ' (' → logprob: -4.92311954498291
    4. '(Vector' → logprob: -5.17311954498291
    5. '(self' → logprob: -5.29811954498291
    6. '(' → logprob: -5.67311954498291
    7. ' to' → logprob: -6.29811954498291
    8. '   ' → logprob: -6.42311954498291
    9. ':' → logprob: -6.79811954498291
    10. ',' → logprob: -7.04811954498291

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0055683632381260395
    2. '<|end|>' → logprob: -5.380568504333496
    3. 'Vector' → logprob: -7.880568504333496
    4. 'return' → logprob: -9.005568504333496
    5. '...' → logprob: -9.130568504333496
    6. 'pass' → logprob: -10.005568504333496
    7. 'self' → logprob: -10.505568504333496
    8. '        
' → logprob: -10.505568504333496
    9. 'raise' → logprob: -10.630568504333496
    10. '#' → logprob: -10.630568504333496

Token 377: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7302526831626892
    2. 'direction' → logprob: -1.480252742767334
    3. 'return' → logprob: -1.730252742767334
    4. 'position' → logprob: -3.230252742767334
    5. '#' (adapté à ' #') → logprob: -3.980252742767334
    6. '       ' → logprob: -4.105252742767334
    7. 'raise' → logprob: -4.355252742767334
    8. 'Vector' → logprob: -4.855252742767334
    9. 'target' → logprob: -4.980252742767334
    10. 'pass' → logprob: -5.855252742767334

Token 378: ' Because' (ID: 13602)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.255977064371109
    2. '       ' → logprob: -2.380977153778076
    3. 'position' → logprob: -2.630977153778076
    4. 'return' → logprob: -3.880977153778076
    5. '#' → logprob: -4.005977153778076
    6. 'raise' → logprob: -4.380977153778076
    7. 'direction' → logprob: -5.255977153778076
    8. 'pos' → logprob: -6.880977153778076
    9. ' current' → logprob: -6.880977153778076
    10. 'pass' → logprob: -7.130977153778076

Token 379: ' we' (ID: 581)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5242809653282166
    2. 'the' → logprob: -2.3992810249328613
    3. ' we' → logprob: -2.5242810249328613
    4. 'self' → logprob: -2.7742810249328613
    5. '       ' → logprob: -3.6492810249328613
    6. ' step' → logprob: -3.6492810249328613
    7. 'current' → logprob: -3.8992810249328613
    8. 'step' → logprob: -3.8992810249328613
    9. ' current' → logprob: -4.024281024932861
    10. 'we' → logprob: -4.149281024932861

Token 380: ' will' (ID: 738)
  Prédit: ' don't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' don't' → logprob: -0.6680014133453369
    2. 'don't' → logprob: -1.043001413345337
    3. 'do' → logprob: -3.168001413345337
    4. ' do' → logprob: -3.418001413345337
    5. 'lack' → logprob: -4.043001174926758
    6. 'need' → logprob: -4.668001174926758
    7. 'have' → logprob: -4.793001174926758
    8. ' have' → logprob: -5.793001174926758
    9. ' lack' → logprob: -5.793001174926758
    10. ' don' → logprob: -5.793001174926758

Token 381: ' always' (ID: 3324)
  Prédit: 'ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.16948743164539337
    2. 'need' → logprob: -2.669487476348877
    3. 'have' → logprob: -3.794487476348877
    4. 'use' → logprob: -4.669487476348877
    5. 'always' → logprob: -4.794487476348877
    6. 'pass' → logprob: -4.919487476348877
    7. 'simulate' → logprob: -5.169487476348877
    8. 'implement' → logprob: -5.169487476348877
    9. '       ' → logprob: -5.294487476348877
    10. 'not' → logprob: -5.294487476348877

Token 382: ' '' (ID: 461)
  Prédit: 'ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.4295200705528259
    2. 'use' → logprob: -2.6795201301574707
    3. 'move' → logprob: -2.8045201301574707
    4. 'have' → logprob: -2.8045201301574707
    5. 'be' → logprob: -3.0545201301574707
    6. 'return' → logprob: -3.0545201301574707
    7. 'need' → logprob: -4.179520130157471
    8. 'call' → logprob: -4.304520130157471
    9. 'subtract' → logprob: -4.429520130157471
    10. 'calculate' → logprob: -5.679520130157471

Token 383: 'face' (ID: 2300)
  Prédit: 'ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.19817784428596497
    2. 'move' → logprob: -3.0731778144836426
    3. 'return' → logprob: -3.5731778144836426
    4. 'be' → logprob: -3.9481778144836426
    5. 'use' → logprob: -3.9481778144836426
    6. 'subtract' → logprob: -4.323177814483643
    7. 'call' → logprob: -4.573177814483643
    8. 'have' → logprob: -4.698177814483643
    9. 'rotate' → logprob: -5.323177814483643
    10. 'start' → logprob: -5.948177814483643

Token 384: ''' (ID: 6)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.42724403738975525
    2. ' the' → logprob: -1.4272440671920776
    3. 'tow' → logprob: -3.677243947982788
    4. 'down' → logprob: -4.052244186401367
    5. '0' → logprob: -4.177244186401367
    6. 'current' → logprob: -5.052244186401367
    7. ' ' → logprob: -5.177244186401367
    8. 'Vector' → logprob: -5.177244186401367
    9. 'self' → logprob: -5.302244186401367
    10. '(' → logprob: -5.302244186401367

Token 385: ' well' (ID: 1775)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2633895874023438
    2. 'the' → logprob: -1.3883895874023438
    3. 'Vector' → logprob: -1.5133895874023438
    4. ' the' → logprob: -2.1383895874023438
    5. ' Vector' → logprob: -2.3883895874023438
    6. ' self' → logprob: -3.5133895874023438
    7. '(Vector' → logprob: -6.138389587402344
    8. 'tow' → logprob: -6.263389587402344
    9. ' at' → logprob: -7.513389587402344
    10. 'at' → logprob: -7.513389587402344

Token 386: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30738314986228943
    2. ',' → logprob: -1.8073831796646118
    3. ' to' → logprob: -3.5573830604553223
    4. '<|end|>' → logprob: -4.307383060455322
    5. 'return' → logprob: -4.932383060455322
    6. '.' → logprob: -5.057383060455322
    7. ' at' → logprob: -5.182383060455322
    8. ':' → logprob: -5.432383060455322
    9. '        
' → logprob: -5.682383060455322
    10. '(' → logprob: -5.807383060455322

Token 387: ' direction' (ID: 9262)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5159935355186462
    2. '       ' → logprob: -1.390993595123291
    3. ' return' → logprob: -1.890993595123291
    4. 'raise' → logprob: -6.765993595123291
    5. 'Vector' → logprob: -7.265993595123291
    6. ' raise' → logprob: -7.890993595123291
    7. 'current' → logprob: -8.015993118286133
    8. 'position' → logprob: -8.515993118286133
    9. ' current' → logprob: -9.265993118286133
    10. ' Vector' → logprob: -9.390993118286133

Token 388: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19009999930858612
    2. ' is' → logprob: -2.4400999546051025
    3. '=' → logprob: -3.4400999546051025
    4. '_vector' → logprob: -3.9400999546051025
    5. '       ' → logprob: -4.815100193023682
    6. ' vector' → logprob: -4.940100193023682
    7. 'vector' → logprob: -5.440100193023682
    8. 'return' → logprob: -5.815100193023682
    9. ' should' → logprob: -5.940100193023682
    10. ' will' → logprob: -6.315100193023682

Token 389: ' from' (ID: 591)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1330573707818985
    2. ' self' → logprob: -2.2580573558807373
    3. 'Vector' → logprob: -4.008057594299316
    4. ' Vector' → logprob: -6.383057594299316
    5. '   ' → logprob: -9.258057594299316
    6. '(self' → logprob: -10.883057594299316
    7. '(Vector' → logprob: -11.133057594299316
    8. 'None' → logprob: -11.383057594299316
    9. ' ' → logprob: -11.883057594299316
    10. '	self' → logprob: -12.383057594299316

Token 390: ' current' (ID: 2208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05115408077836037
    2. 'Vector' → logprob: -3.301154136657715
    3. ' self' → logprob: -4.926154136657715
    4. 'current' → logprob: -5.676154136657715
    5. 'the' → logprob: -6.926154136657715
    6. ' Vector' → logprob: -6.926154136657715
    7. ' current' → logprob: -8.801154136657715
    8. ' the' → logprob: -9.801154136657715
    9. 'step' → logprob: -9.926154136657715
    10. 'well' → logprob: -10.676154136657715

Token 391: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.29677754640579224
    2. '_position' → logprob: -1.5467774868011475
    3. ' position' → logprob: -3.2967774868011475
    4. ' to' → logprob: -5.796777725219727
    5. 'to' → logprob: -6.546777725219727
    6. 'self' → logprob: -7.421777725219727
    7. 'Position' → logprob: -7.921777725219727
    8. 'step' → logprob: -8.546777725219727
    9. '_vector' → logprob: -8.921777725219727
    10. ' step' → logprob: -8.921777725219727

Token 392: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2700064778327942
    2. 'to' → logprob: -1.5200064182281494
    3. 'tow' → logprob: -5.0200066566467285
    4. ' toward' → logprob: -5.7700066566467285
    5. ' towards' → logprob: -6.0200066566467285
    6. '   ' → logprob: -6.5200066566467285
    7. '       ' → logprob: -6.5200066566467285
    8. ' ' → logprob: -8.02000617980957
    9. '<|end|>' → logprob: -8.02000617980957
    10. '<|end|>' → logprob: -8.39500617980957

Token 393: ' well' (ID: 1775)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011821183376014233
    2. ' self' → logprob: -5.136821269989014
    3. 'Vector' → logprob: -5.511821269989014
    4. 'the' → logprob: -6.511821269989014
    5. 'current' → logprob: -9.511820793151855
    6. 'well' → logprob: -9.636820793151855
    7. ' the' → logprob: -9.761820793151855
    8. 'step' → logprob: -9.761820793151855
    9. ' Vector' → logprob: -10.011820793151855
    10. 'Well' → logprob: -11.136820793151855

Token 394: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3089100122451782
    2. ' to' → logprob: -2.5589098930358887
    3. '<|end|>' → logprob: -2.9339098930358887
    4. ',' → logprob: -3.1839098930358887
    5. 'self' → logprob: -3.8089098930358887
    6. ' (' → logprob: -4.308909893035889
    7. 'return' → logprob: -4.683909893035889
    8. '(' → logprob: -5.433909893035889
    9. 'def' → logprob: -5.808909893035889
    10. '(self' → logprob: -5.808909893035889

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004651437979191542
    2. '<|end|>' → logprob: -6.2546515464782715
    3. '        
' → logprob: -7.0046515464782715
    4. 'self' → logprob: -7.7546515464782715
    5. 'current' → logprob: -7.8796515464782715
    6. 'Vector' → logprob: -8.379651069641113
    7. 'position' → logprob: -8.754651069641113
    8. 'class' → logprob: -9.379651069641113
    9. '        ' → logprob: -9.504651069641113
    10. ',' → logprob: -9.629651069641113

Token 396: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7330927848815918
    2. 'current' → logprob: -1.3580927848815918
    3. '       ' → logprob: -2.233092784881592
    4. 'Vector' → logprob: -2.733092784881592
    5. 'position' → logprob: -3.358092784881592
    6. 'raise' → logprob: -3.858092784881592
    7. 'direction' → logprob: -4.108092784881592
    8. '#' (adapté à ' #') → logprob: -5.108092784881592
    9. 'step' → logprob: -5.483092784881592
    10. 'pass' → logprob: -5.858092784881592

Token 397: ' In' (ID: 730)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6915554404258728
    2. 'current' → logprob: -1.0665555000305176
    3. '       ' → logprob: -2.6915555000305176
    4. 'position' → logprob: -2.9415555000305176
    5. 'direction' → logprob: -4.316555500030518
    6. 'Vector' → logprob: -5.066555500030518
    7. '#' → logprob: -5.316555500030518
    8. 'raise' → logprob: -5.566555500030518
    9. 'step' → logprob: -6.816555500030518
    10. ' return' → logprob: -6.941555500030518

Token 398: ' practice' (ID: 8248)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.691545307636261
    2. 'Vector' → logprob: -1.0665452480316162
    3. ' Vector' → logprob: -2.941545248031616
    4. 'this' → logprob: -3.066545248031616
    5. 'the' → logprob: -4.191545486450195
    6. ' self' → logprob: -4.441545486450195
    7. 'sys' → logprob: -5.316545486450195
    8. ' this' → logprob: -5.441545486450195
    9. 'return' → logprob: -5.566545486450195
    10. 'def' → logprob: -5.941545486450195

Token 399: ' caller' (ID: 36997)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6668003797531128
    2. 'current' → logprob: -1.5418003797531128
    3. 'return' → logprob: -1.7918003797531128
    4. ',' → logprob: -3.0418004989624023
    5. 'position' → logprob: -4.166800498962402
    6. ' current' → logprob: -4.541800498962402
    7. ' return' → logprob: -4.791800498962402
    8. 'self' → logprob: -4.791800498962402
    9. '#' → logprob: -5.916800498962402
    10. ' the' → logprob: -6.166800498962402

Token 400: ' knows' (ID: 13484)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'should' → logprob: -1.1845664978027344
    2. 'needs' → logprob: -1.4345664978027344
    3. 'must' → logprob: -1.5595664978027344
    4. ' needs' → logprob: -2.6845664978027344
    5. ' should' → logprob: -3.1845664978027344
    6. ' must' → logprob: -3.4345664978027344
    7. 'will' → logprob: -3.6845664978027344
    8. ' will' → logprob: -3.9345664978027344
    9. 'provid' → logprob: -4.059566497802734
    10. 'would' → logprob: -4.559566497802734

Token 401: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3999391198158264
    2. 'the' → logprob: -1.3999390602111816
    3. ' current' → logprob: -3.0249390602111816
    4. ' the' → logprob: -3.6499390602111816
    5. 'self' → logprob: -5.524939060211182
    6. 'their' → logprob: -6.524939060211182
    7. 'only' → logprob: -7.024939060211182
    8. '       ' → logprob: -7.399939060211182
    9. 'position' → logprob: -7.649939060211182
    10. ' their' → logprob: -8.14993953704834

Token 402: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.5315292477607727
    2. ' position' → logprob: -1.531529188156128
    3. '_position' → logprob: -1.656529188156128
    4. 'Position' → logprob: -6.281529426574707
    5. ' step' → logprob: -8.031529426574707
    6. '```' → logprob: -8.156529426574707
    7. '       ' → logprob: -8.281529426574707
    8. ' vector' → logprob: -8.406529426574707
    9. 'pos' → logprob: -8.406529426574707
    10. '_vector' → logprob: -8.656529426574707

Token 403: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18106500804424286
    2. '<|end|>' → logprob: -1.8060649633407593
    3. '<|end|>' → logprob: -7.556065082550049
    4. '
' → logprob: -7.931065082550049
    5. ',' → logprob: -9.43106460571289
    6. '.' → logprob: -9.68106460571289
    7. '   ' → logprob: -10.05606460571289
    8. '        
' → logprob: -10.05606460571289
    9. '        ' → logprob: -10.43106460571289
    10. 'return' → logprob: -10.55606460571289

Token 404: ' re' (ID: 322)
  Prédit: 'will'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'will' → logprob: -1.6485382318496704
    2. 'provid' → logprob: -1.6485382318496704
    3. 'w' → logprob: -2.023538112640381
    4. 'comput' → logprob: -2.398538112640381
    5. 'calcul' → logprob: -2.648538112640381
    6. 'can' → logprob: -2.898538112640381
    7. 'gets' → logprob: -3.023538112640381
    8. 'uses' → logprob: -3.148538112640381
    9. 'requests' → logprob: -3.773538112640381
    10. 'calls' → logprob: -3.898538112640381

Token 405: 'or' (ID: 267)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.41747796535491943
    2. 'quests' → logprob: -2.167478084564209
    3. 'quires' → logprob: -2.417478084564209
    4. 'ce' → logprob: -2.417478084564209
    5. 'lies' → logprob: -3.417478084564209
    6. 'l' → logprob: -5.417478084564209
    7. 'quest' → logprob: -5.542478084564209
    8. 'moves' → logprob: -6.792478084564209
    9. 'tr' → logprob: -7.042478084564209
    10. 'ly' → logprob: -7.542478084564209

Token 406: 'ients' (ID: 4288)
  Prédit: 'ients'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ients' → logprob: -0.543469250202179
    2. 'ient' → logprob: -1.4184691905975342
    3. 'iented' → logprob: -1.7934691905975342
    4. 'der' → logprob: -5.293469429016113
    5. 'ientation' → logprob: -5.668469429016113
    6. 'gan' → logprob: -7.418469429016113
    7. 'chestr' → logprob: -7.418469429016113
    8. 'ienta' → logprob: -8.793469429016113
    9. 'ints' → logprob: -8.918469429016113
    10. 'igin' → logprob: -9.043469429016113

Token 407: ' accordingly' (ID: 44041)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.2202270030975342
    2. ' accordingly' → logprob: -1.4702270030975342
    3. ' return' → logprob: -2.470227003097534
    4. 'return' → logprob: -2.470227003097534
    5. '       ' → logprob: -2.595227003097534
    6. ' by' → logprob: -3.095227003097534
    7. ' the' → logprob: -3.595227003097534
    8. ' in' → logprob: -3.970227003097534
    9. ' at' → logprob: -4.095227241516113
    10. 'to' → logprob: -4.220227241516113

Token 408: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08908810466527939
    2. '<|end|>' → logprob: -2.464088201522827
    3. 'class' → logprob: -9.964088439941406
    4. '<|end|>' → logprob: -10.089088439941406
    5. '
' → logprob: -11.214088439941406
    6. '        
' → logprob: -11.964088439941406
    7. '.' → logprob: -12.214088439941406
    8. 'return' → logprob: -12.464088439941406
    9. '   ' → logprob: -12.714088439941406
    10. '...' → logprob: -12.714088439941406

Token 409: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18566617369651794
    2. ' so' → logprob: -2.060666084289551
    3. 'return' → logprob: -3.810666084289551
    4. 'so' → logprob: -4.560666084289551
    5. ' return' → logprob: -5.310666084289551
    6. ' but' → logprob: -6.060666084289551
    7. '   ' → logprob: -7.935666084289551
    8. ' returning' → logprob: -7.935666084289551
    9. 'but' → logprob: -8.06066608428955
    10. ' and' → logprob: -8.06066608428955

Token 410: ' this' (ID: 495)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1928282231092453
    2. '       ' → logprob: -1.9428281784057617
    3. ' return' → logprob: -3.4428281784057617
    4. 'Vector' → logprob: -9.817828178405762
    5. 'pass' → logprob: -11.192828178405762
    6. ' Vector' → logprob: -11.692828178405762
    7. 'raise' → logprob: -11.942828178405762
    8. 'None' → logprob: -12.567828178405762
    9. '```' → logprob: -12.567828178405762
    10. '...' → logprob: -13.192828178405762

Token 411: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.4606655836105347
    2. 'is' → logprob: -2.210665702819824
    3. '.' → logprob: -2.460665702819824
    4. 'should' → logprob: -2.460665702819824
    5. '<|end|>' → logprob: -2.710665702819824
    6. ' is' → logprob: -2.835665702819824
    7. '       ' → logprob: -3.085665702819824
    8. 'would' → logprob: -3.335665702819824
    9. 'returns' → logprob: -3.335665702819824
    10. '   ' → logprob: -3.335665702819824

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006381267681717873
    2. '<|end|>' → logprob: -5.381381034851074
    3. ' is' → logprob: -7.256381034851074
    4. 'return' → logprob: -7.881381034851074
    5. 'is' → logprob: -8.381381034851074
    6. '.' → logprob: -9.256381034851074
    7. '<|end|>' → logprob: -9.631381034851074
    8. '   ' → logprob: -10.256381034851074
    9. 'would' → logprob: -10.256381034851074
    10. '...' → logprob: -10.506381034851074

Token 413: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6339820027351379
    2. '       ' → logprob: -1.1339819431304932
    3. 'method' → logprob: -2.633981943130493
    4. 'class' → logprob: -3.758981943130493
    5. '   ' → logprob: -5.008982181549072
    6. 'def' → logprob: -5.133982181549072
    7. 'is' → logprob: -5.258982181549072
    8. ' implementation' → logprob: -5.383982181549072
    9. ' return' → logprob: -5.508982181549072
    10. ' method' → logprob: -5.633982181549072

Token 414: ' function' (ID: 1114)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.38662388920783997
    2. 'returns' → logprob: -1.8866238594055176
    3. '       ' → logprob: -2.0116238594055176
    4. 'should' → logprob: -4.636623859405518
    5. ' returns' → logprob: -4.886623859405518
    6. 'just' → logprob: -5.386623859405518
    7. ' return' → logprob: -5.386623859405518
    8. ' just' → logprob: -6.636623859405518
    9. 'could' → logprob: -6.761623859405518
    10. 'sim' → logprob: -6.886623859405518

Token 415: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40040332078933716
    2. 'returns' → logprob: -2.2754032611846924
    3. ' only' → logprob: -2.5254032611846924
    4. 'should' → logprob: -3.2754032611846924
    5. ' returns' → logprob: -3.9004032611846924
    6. ' always' → logprob: -4.1504034996032715
    7. 'always' → logprob: -4.5254034996032715
    8. ' is' → logprob: -4.7754034996032715
    9. 'only' → logprob: -5.0254034996032715
    10. 'does' → logprob: -5.1504034996032715

Token 416: ' spec' (ID: 1755)
  Prédit: 'design'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'design' → logprob: -0.5869638323783875
    2. ' design' → logprob: -1.7119638919830322
    3. 'definition' → logprob: -1.7119638919830322
    4. 'con' → logprob: -3.9619638919830322
    5. 'return' → logprob: -3.9619638919830322
    6. ' convention' → logprob: -4.086963653564453
    7. 'default' → logprob: -4.336963653564453
    8. 'contract' → logprob: -4.711963653564453
    9. 'pass' → logprob: -5.711963653564453
    10. ' definition' → logprob: -6.586963653564453

Token 417: ' just' (ID: 1327)
  Prédit: 'returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'returns' → logprob: -1.3980599641799927
    2. 'should' → logprob: -1.5230599641799927
    3. ' returns' → logprob: -1.5230599641799927
    4. ' should' → logprob: -2.523059844970703
    5. ' always' → logprob: -2.523059844970703
    6. 'always' → logprob: -3.398059844970703
    7. ' can' → logprob: -3.648059844970703
    8. '       ' → logprob: -4.023059844970703
    9. 'raises' → logprob: -4.398059844970703
    10. ' just' → logprob: -4.898059844970703

Token 418: ' returns' (ID: 7377)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.515044629573822
    2. 'returns' → logprob: -1.1400446891784668
    3. 'raises' → logprob: -3.390044689178467
    4. ' returns' → logprob: -3.640044689178467
    5. 'raise' → logprob: -4.015044689178467
    6. ' return' → logprob: -5.515044689178467
    7. 'provid' → logprob: -8.515044212341309
    8. ' raise' → logprob: -9.390044212341309
    9. 'pass' → logprob: -9.390044212341309
    10. ' raises' → logprob: -9.640044212341309

Token 419: ' the' (ID: 290)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.02869856171309948
    2. 'self' → logprob: -3.653698444366455
    3. ' Vector' → logprob: -6.153698444366455
    4. ' self' → logprob: -8.403698921203613
    5. '   ' → logprob: -10.403698921203613
    6. '(Vector' → logprob: -11.903698921203613
    7. '	Vector' → logprob: -13.153698921203613
    8. '       ' → logprob: -13.278698921203613
    9. '(self' → logprob: -13.778698921203613
    10. '<Vector' → logprob: -13.903698921203613

Token 420: ' direction' (ID: 9262)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.0009598199394531548
    2. 'self' → logprob: -7.875959873199463
    3. ' Vector' → logprob: -8.750959396362305
    4. 'vector' → logprob: -8.875959396362305
    5. 'well' → logprob: -8.875959396362305
    6. 'unit' → logprob: -9.375959396362305
    7. '_vector' → logprob: -10.500959396362305
    8. 'direction' → logprob: -11.750959396362305
    9. 'zero' → logprob: -12.000959396362305
    10. 'Well' → logprob: -12.750959396362305

Token 421: ' vector' (ID: 9727)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6300556063652039
    2. 'Vector' → logprob: -1.0050556659698486
    3. '(Vector' → logprob: -3.0050556659698486
    4. ' Vector' → logprob: -4.3800554275512695
    5. '.Vector' → logprob: -5.0050554275512695
    6. '<|end|>' → logprob: -5.2550554275512695
    7. '   ' → logprob: -5.6300554275512695
    8. '<Vector' → logprob: -5.7550554275512695
    9. 'return' → logprob: -5.8800554275512695
    10. 'vector' → logprob: -6.1300554275512695

Token 422: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40808114409446716
    2. 'Vector' → logprob: -1.2830811738967896
    3. '<|end|>' → logprob: -3.6580810546875
    4. '(Vector' → logprob: -3.7830810546875
    5. '.' → logprob: -5.6580810546875
    6. '(' → logprob: -6.4080810546875
    7. '.Vector' → logprob: -7.1580810546875
    8. ' Vector' → logprob: -7.2830810546875
    9. ' (' → logprob: -7.6580810546875
    10. 'return' → logprob: -7.7830810546875

Token 423: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7048706412315369
    2. 'Vector' → logprob: -0.7048706412315369
    3. ' Vector' → logprob: -5.704870700836182
    4. '0' → logprob: -5.829870700836182
    5. ' self' → logprob: -6.079870700836182
    6. '(' → logprob: -6.579870700836182
    7. 'the' → logprob: -6.954870700836182
    8. '1' → logprob: -8.079870223999023
    9. '(Vector' → logprob: -8.329870223999023
    10. '-' → logprob: -9.954870223999023

Token 424: ' well' (ID: 1775)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.5271006226539612
    2. 'well' → logprob: -1.1521005630493164
    3. 'self' → logprob: -2.4021005630493164
    4. 'vector' → logprob: -7.027100563049316
    5. 'Well' → logprob: -7.777100563049316
    6. '0' → logprob: -7.902100563049316
    7. 'w' → logprob: -8.027100563049316
    8. 'step' → logprob: -8.402100563049316
    9. '-w' → logprob: -8.527100563049316
    10. ' Vector' → logprob: -8.902100563049316

Token 425: ' which' (ID: 1118)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 426: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.37533000111579895
    2. ' is' → logprob: -2.0003299713134766
    3. 'points' → logprob: -3.1253299713134766
    4. 'return' → logprob: -4.000329971313477
    5. 'returns' → logprob: -4.125329971313477
    6. 'should' → logprob: -4.125329971313477
    7. '   ' → logprob: -4.250329971313477
    8. '-' → logprob: -4.500329971313477
    9. ' -' → logprob: -4.625329971313477
    10. 'def' → logprob: -4.750329971313477

Token 427: ' always' (ID: 3324)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.416726678609848
    2. 'Vector' → logprob: -1.1667267084121704
    3. ' self' → logprob: -3.916726589202881
    4. ' Vector' → logprob: -4.916726589202881
    5. '   ' → logprob: -6.666726589202881
    6. '(Vector' → logprob: -7.791726589202881
    7. '(self' → logprob: -8.041727066040039
    8. '  ' → logprob: -9.541727066040039
    9. ' (' → logprob: -10.916727066040039
    10. ' ' → logprob: -10.916727066040039

Token 428: ' constant' (ID: 9594)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.13259392976760864
    2. 'self' → logprob: -2.132593870162964
    3. ' Vector' → logprob: -5.382594108581543
    4. ' self' → logprob: -7.132594108581543
    5. '(Vector' → logprob: -8.757594108581543
    6. '   ' → logprob: -10.257594108581543
    7. '(self' → logprob: -11.007594108581543
    8. '	Vector' → logprob: -11.507594108581543
    9. '(' → logprob: -12.007594108581543
    10. '  ' → logprob: -12.132594108581543

Token 429: ' (' (ID: 350)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.06385073810815811
    2. '       ' → logprob: -3.0638506412506104
    3. '(Vector' → logprob: -4.6888508796691895
    4. 'return' → logprob: -6.1888508796691895
    5. ' Vector' → logprob: -6.8138508796691895
    6. ' at' → logprob: -6.9388508796691895
    7. ',' → logprob: -8.188850402832031
    8. '<Vector' → logprob: -8.438850402832031
    9. '(' → logprob: -8.563850402832031
    10. ' and' → logprob: -8.813850402832031

Token 430: 'origin' (ID: 28202)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.02360764890909195
    2. 'self' → logprob: -4.0236077308654785
    3. ' Vector' → logprob: -5.2736077308654785
    4. ' self' → logprob: -8.52360725402832
    5. '   ' → logprob: -9.52360725402832
    6. '(Vector' → logprob: -11.14860725402832
    7. '	Vector' → logprob: -12.14860725402832
    8. '  ' → logprob: -12.39860725402832
    9. '       ' → logprob: -12.52360725402832
    10. ')' → logprob: -12.52360725402832

Token 431: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00724785728380084
    2. ')
' → logprob: -5.6322479248046875
    3. ' )' → logprob: -6.0072479248046875
    4. '       ' → logprob: -7.7572479248046875
    5. '):' → logprob: -8.757247924804688
    6. '):
' → logprob: -8.757247924804688
    7. '   ' → logprob: -8.757247924804688
    8. ').' → logprob: -10.257247924804688
    9. '0' → logprob: -10.507247924804688
    10. ')return' → logprob: -10.507247924804688

Token 432: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 433: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4997180998325348
    2. 'Vector' → logprob: -1.2497180700302124
    3. '       ' → logprob: -2.374718189239502
    4. ' return' → logprob: -4.374718189239502
    5. ' Vector' → logprob: -6.874718189239502
    6. 'raise' → logprob: -11.124717712402344
    7. '0' → logprob: -11.499717712402344
    8. '   ' → logprob: -12.374717712402344
    9. '        
' → logprob: -12.749717712402344
    10. '(Vector' → logprob: -12.999717712402344

Token 434: ' So' (ID: 2632)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5823848843574524
    2. 'Vector' → logprob: -0.8323848843574524
    3. ' return' → logprob: -5.582385063171387
    4. '       ' → logprob: -6.082385063171387
    5. ' Vector' → logprob: -7.957385063171387
    6. 'self' → logprob: -11.832385063171387
    7. 'raise' → logprob: -11.832385063171387
    8. '(Vector' → logprob: -12.207385063171387
    9. '0' → logprob: -12.457385063171387
    10. '<Vector' → logprob: -14.207385063171387

Token 435: ' caller' (ID: 36997)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007430684752762318
    2. ' return' → logprob: -5.507430553436279
    3. '       ' → logprob: -5.757430553436279
    4. 'Vector' → logprob: -8.632431030273438
    5. '   ' → logprob: -12.507431030273438
    6. 'raise' → logprob: -13.382431030273438
    7. ' Vector' → logprob: -13.382431030273438
    8. '```' → logprob: -15.007431030273438
    9. 'self' → logprob: -15.257431030273438
    10. '	return' → logprob: -15.382431030273438

Token 436: ' must' (ID: 2804)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.024627685546875
    2. '   ' → logprob: -1.274627685546875
    3. ':' → logprob: -2.524627685546875
    4. ' always' → logprob: -2.524627685546875
    5. '.' → logprob: -3.399627685546875
    6. 'returns' → logprob: -3.899627685546875
    7. ' returns' → logprob: -3.899627685546875
    8. 'always' → logprob: -3.899627685546875
    9. ' should' → logprob: -4.149627685546875
    10. 'should' → logprob: -4.524627685546875

Token 437: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -1.6574122905731201
    2. 'provide' → logprob: -1.6574122905731201
    3. 'return' → logprob: -2.40741229057312
    4. 'compute' → logprob: -2.53241229057312
    5. ' provide' → logprob: -2.65741229057312
    6. ' always' → logprob: -2.78241229057312
    7. 'implement' → logprob: -2.90741229057312
    8. 'always' → logprob: -3.28241229057312
    9. ' compute' → logprob: -3.65741229057312
    10. ' calculate' → logprob: -3.65741229057312

Token 438: ' vector' (ID: 9727)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.18272757530212402
    2. 'return' → logprob: -2.307727575302124
    3. 'self' → logprob: -2.932727575302124
    4. '       ' → logprob: -4.932727813720703
    5. ' Vector' → logprob: -5.557727813720703
    6. ' return' → logprob: -6.307727813720703
    7. ' self' → logprob: -7.182727813720703
    8. 'pass' → logprob: -8.307727813720703
    9. '   ' → logprob: -8.682727813720703
    10. 'raise' → logprob: -9.557727813720703

Token 439: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9036372900009155
    2. '<|end|>' → logprob: -0.9036372900009155
    3. 'return' → logprob: -2.778637409210205
    4. '<|end|>' → logprob: -3.653637409210205
    5. ' to' → logprob: -3.778637409210205
    6. ' return' → logprob: -4.028637409210205
    7. ' from' → logprob: -4.278637409210205
    8. 'from' → logprob: -4.403637409210205
    9. ' toward' → logprob: -5.653637409210205
    10. 'tow' → logprob: -6.028637409210205

Token 440: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.38741037249565125
    2. ' current' → logprob: -1.7624104022979736
    3. 'self' → logprob: -2.0124104022979736
    4. ' self' → logprob: -5.1374101638793945
    5. 'well' → logprob: -5.2624101638793945
    6. ' well' → logprob: -6.5124101638793945
    7. 'position' → logprob: -6.6374101638793945
    8. 'step' → logprob: -7.5124101638793945
    9. 'the' → logprob: -7.6374101638793945
    10. '当前位置' → logprob: -8.387410163879395

Token 441: ' to' (ID: 316)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.554598867893219
    2. ' position' → logprob: -1.1795988082885742
    3. '_position' → logprob: -2.179598808288574
    4. '_' → logprob: -6.054598808288574
    5. 'pos' → logprob: -7.429598808288574
    6. '<|end|>' → logprob: -7.929598808288574
    7. '<|end|>' → logprob: -8.179598808288574
    8. 'space' → logprob: -8.679598808288574
    9. ' step' → logprob: -8.804598808288574
    10. ' _' → logprob: -8.929598808288574

Token 442: ' well' (ID: 1775)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09035831689834595
    2. 'well' → logprob: -2.840358257293701
    3. ' self' → logprob: -3.840358257293701
    4. ' well' → logprob: -5.590358257293701
    5. 'current' → logprob: -7.215358257293701
    6. 'Vector' → logprob: -7.590358257293701
    7. 'the' → logprob: -7.840358257293701
    8. 'origin' → logprob: -7.965358257293701
    9. 'w' → logprob: -8.59035873413086
    10. ' current' → logprob: -9.09035873413086

Token 443: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.1928003813372925e-05
    2. 'Vector' → logprob: -11.125051498413086
    3. 'return' → logprob: -11.125051498413086
    4. '<|end|>' → logprob: -11.250051498413086
    5. 'pass' → logprob: -13.125051498413086
    6. '   ' → logprob: -13.625051498413086
    7. '           ' → logprob: -13.750051498413086
    8. '        
' → logprob: -14.000051498413086
    9. '        ' → logprob: -14.000051498413086
    10. '	' → logprob: -14.375051498413086

Token 445: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7116600275039673
    2. 'return' (adapté à ' return') → logprob: -0.7116600275039673
    3. 'Vector' → logprob: -4.336659908294678
    4. 'raise' → logprob: -5.711659908294678
    5. ' return' → logprob: -6.586659908294678
    6. 'pass' → logprob: -7.836659908294678
    7. ' raise' → logprob: -9.211660385131836
    8. ' Vector' → logprob: -10.461660385131836
    9. '0' → logprob: -11.211660385131836
    10. 'None' → logprob: -11.461660385131836

Token 446: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.14301657676696777
    2. 'self' → logprob: -2.0180165767669678
    3. ' Vector' → logprob: -8.268016815185547
    4. ' self' → logprob: -9.643016815185547
    5. 'None' → logprob: -11.768016815185547
    6. '(Vector' → logprob: -12.143016815185547
    7. '	Vector' → logprob: -13.643016815185547
    8. '(self' → logprob: -13.643016815185547
    9. '_Vector' → logprob: -14.268016815185547
    10. 'Vec' → logprob: -14.518016815185547

Token 447: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. 'Vector' → logprob: -13.750000953674316
    3. '(Vector' → logprob: -16.750001907348633
    4. '(' → logprob: -17.000001907348633
    5. '   ' → logprob: -18.625001907348633
    6. 'To' → logprob: -19.062501907348633
    7. '.Vector' → logprob: -19.125001907348633
    8. '۲' → logprob: -19.375001907348633
    9. '```' → logprob: -19.375001907348633
    10. 'Direction' → logprob: -19.437501907348633

Token 448: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -3.4285862057004124e-05
    2. 'Vector' → logprob: -10.50003433227539
    3. '2' → logprob: -12.00003433227539
    4. 'DV' → logprob: -16.25003433227539
    5. 'Dto' → logprob: -16.37503433227539
    6. 'Vec' → logprob: -16.62503433227539
    7. '0' → logprob: -17.00003433227539
    8. 'DC' → logprob: -17.25003433227539
    9. 'V' → logprob: -17.62503433227539
    10. '(' → logprob: -17.75003433227539

Token 449: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04928651824593544
    2. '()' → logprob: -3.0492866039276123
    3. '0' → logprob: -7.299286365509033
    4. '()
' → logprob: -11.799286842346191
    5. '(-' → logprob: -11.924286842346191
    6. '()-' → logprob: -12.299286842346191
    7. '()(' → logprob: -13.924286842346191
    8. '())' → logprob: -14.674286842346191
    9. '()*' → logprob: -15.049286842346191
    10. '()<' → logprob: -15.174286842346191

Token 450: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02329649217426777
    2. '-' → logprob: -4.273296356201172
    3. ')' → logprob: -4.898296356201172
    4. '-self' → logprob: -7.023296356201172
    5. '-w' → logprob: -7.773296356201172
    6. 'self' → logprob: -8.773296356201172
    7. '-)' → logprob: -9.398296356201172
    8. ')-' → logprob: -10.023296356201172
    9. ' ' → logprob: -12.273296356201172
    10. ' -' → logprob: -12.398296356201172

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013743992894887924
    2. '0' → logprob: -6.876374244689941
    3. ' ,' → logprob: -9.001374244689941
    4. ')' → logprob: -9.376374244689941
    5. '-' → logprob: -9.501374244689941
    6. ' -' → logprob: -10.001374244689941
    7. '.' → logprob: -12.126374244689941
    8. ' ' → logprob: -13.376374244689941
    9. ',
' → logprob: -13.626374244689941
    10. '   ' → logprob: -14.126374244689941

Token 452: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033176883589476347
    2. '-' → logprob: -6.253317832946777
    3. ' ' → logprob: -6.628317832946777
    4. '1' → logprob: -10.003317832946777
    5. ' -' → logprob: -10.878317832946777
    6. ')' → logprob: -14.378317832946777
    7. '   ' → logprob: -14.503317832946777
    8. '  ' → logprob: -14.753317832946777
    9. '
' → logprob: -16.94081687927246
    10. '    ' → logprob: -18.00331687927246

Token 453: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.688212614681106e-05
    2. ')
' → logprob: -11.750017166137695
    3. ' )' → logprob: -11.875017166137695
    4. ')return' → logprob: -14.125017166137695
    5. '<|end|>' → logprob: -14.250017166137695
    6. ')}' → logprob: -15.750017166137695
    7. ')#' → logprob: -16.375017166137695
    8. '}' → logprob: -16.500017166137695
    9. ').' → logprob: -17.125017166137695
    10. '),' → logprob: -17.125017166137695

Token 454: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 455: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 456: ' Placeholder' (ID: 175443)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 457: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 458: ' actual' (ID: 6290)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: ' usage' (ID: 16622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 460: ' elsewhere' (ID: 32995)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 461: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 462: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 463: ' Navigator' (ID: 47790)
  Prédit: 'Random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Random' → logprob: -1.0027692317962646
    2. 'Circular' → logprob: -2.3777692317962646
    3. ' Spiral' → logprob: -2.6277692317962646
    4. 'Sp' → logprob: -3.0027692317962646
    5. ' Random' → logprob: -3.0027692317962646
    6. 'Step' → logprob: -3.2527692317962646
    7. 'Constant' → logprob: -3.3777692317962646
    8. 'Rot' → logprob: -3.3777692317962646
    9. ' Circular' → logprob: -3.6277692317962646
    10. 'Well' → logprob: -4.252769470214844

Token 464: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006041019689291716
    2. '(' → logprob: -5.131041049957275
    3. '(Direction' → logprob: -10.256040573120117
    4. ':
' → logprob: -10.506040573120117
    5. '(Abstract' → logprob: -10.881040573120117
    6. ' :' → logprob: -12.131040573120117
    7. '(Vector' → logprob: -12.256040573120117
    8. '):' → logprob: -12.381040573120117
    9. '():' → logprob: -12.631040573120117
    10. '(N' → logprob: -13.631040573120117

Token 465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005611348897218704
    2. ' def' → logprob: -7.625561237335205
    3. 'def' → logprob: -9.625560760498047
    4. '	def' → logprob: -12.625560760498047
    5. '    
' → logprob: -12.875560760498047
    6. '   ' → logprob: -15.375560760498047
    7. 'class' → logprob: -15.375560760498047
    8. ':' → logprob: -15.875560760498047
    9. '    ' → logprob: -15.875560760498047
    10. '
' → logprob: -16.500560760498047

Token 466: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.16112028062343597
    2. 'def' (adapté à ' def') → logprob: -1.9111202955245972
    3. '   ' → logprob: -7.036120414733887
    4. 'class' → logprob: -11.286120414733887
    5. '	def' → logprob: -13.411120414733887
    6. '    ' → logprob: -13.536120414733887
    7. ' ' → logprob: -15.411120414733887
    8. '```' → logprob: -15.411120414733887
    9. ' class' → logprob: -16.03611946105957
    10. 'de' → logprob: -17.03611946105957

Token 467: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2994973361492157
    2. ' __' → logprob: -1.549497365951538
    3. 'init' → logprob: -3.174497365951538
    4. '_init' → logprob: -5.799497127532959
    5. 'def' → logprob: -6.799497127532959
    6. '___' → logprob: -8.424497604370117
    7. ' def' → logprob: -8.674497604370117
    8. '```' → logprob: -10.549497604370117
    9. '____' → logprob: -10.924497604370117
    10. ' init' → logprob: -11.424497604370117

Token 468: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -14.375001907348633
    3. ' init' → logprob: -14.625001907348633
    4. 'def' → logprob: -15.500001907348633
    5. '_init' → logprob: -16.250001907348633
    6. '```' → logprob: -16.375001907348633
    7. 'in' → logprob: -17.125001907348633
    8. '
' → logprob: -17.125001907348633
    9. '  ' → logprob: -17.375001907348633
    10. ' ' → logprob: -17.375001907348633

Token 469: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.25226613879203796
    2. '(self' → logprob: -1.5022661685943604
    3. ' (' → logprob: -8.752265930175781
    4. '__' → logprob: -9.252265930175781
    5. '__(
' → logprob: -10.127265930175781
    6. '(' → logprob: -10.627265930175781
    7. '_(' → logprob: -11.877265930175781
    8. 'self' → logprob: -12.002265930175781
    9. '   ' → logprob: -13.377265930175781
    10. ',' → logprob: -13.627265930175781

Token 470: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002655079588294029
    2. ' self' → logprob: -8.250265121459961
    3. '   ' → logprob: -13.500265121459961
    4. '       ' → logprob: -14.000265121459961
    5. ',' → logprob: -14.125265121459961
    6. '0' → logprob: -14.375265121459961
    7. '(self' → logprob: -15.125265121459961
    8. '
' → logprob: -15.625265121459961
    9. '):
' → logprob: -16.87526512145996
    10. 'vector' → logprob: -17.37526512145996

Token 471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021551121026277542
    2. 'self' → logprob: -3.8965511322021484
    3. ' self' → logprob: -7.646551132202148
    4. ' ,' → logprob: -8.396551132202148
    5. '   ' → logprob: -9.146551132202148
    6. '(self' → logprob: -9.271551132202148
    7. '):
' → logprob: -10.271551132202148
    8. ' (' → logprob: -10.896551132202148
    9. '       ' → logprob: -11.146551132202148
    10. '):' → logprob: -11.646551132202148

Token 472: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.05236980691552162
    2. 'position' → logprob: -3.8023698329925537
    3. ' direction' → logprob: -4.177369594573975
    4. 'start' → logprob: -4.427369594573975
    5. 'dire' → logprob: -7.927369594573975
    6. ' position' → logprob: -8.052370071411133
    7. ' start' → logprob: -8.302370071411133
    8. 'initial' → logprob: -8.302370071411133
    9. 'current' → logprob: -9.302370071411133
    10. 'starting' → logprob: -9.927370071411133

Token 473: '_provider' (ID: 66809)
  Prédit: '_provider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_provider' → logprob: -0.00010711929644457996
    2. 'Provider' → logprob: -9.375106811523438
    3. 'provider' → logprob: -10.750106811523438
    4. '_source' → logprob: -15.000106811523438
    5. '_PROVIDER' → logprob: -15.375106811523438
    6. ' provider' → logprob: -16.250106811523438
    7. '_pro' → logprob: -16.500106811523438
    8. '_generator' → logprob: -17.375106811523438
    9. '   ' → logprob: -17.875106811523438
    10. ' Provider' → logprob: -18.000106811523438

Token 474: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014760562917217612
    2. '):' → logprob: -6.876476287841797
    3. ' :' → logprob: -7.876476287841797
    4. ',' → logprob: -10.501476287841797
    5. ')' → logprob: -11.126476287841797
    6. '):
' → logprob: -11.251476287841797
    7. ' ):' → logprob: -11.876476287841797
    8. '':' → logprob: -15.126476287841797
    9. '=None' → logprob: -15.251476287841797
    10. '_:' → logprob: -16.001476287841797

Token 475: ' Direction' (ID: 39049)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.10020732134580612
    2. ' Direction' → logprob: -2.3502073287963867
    3. 'Directional' → logprob: -15.475207328796387
    4. ' direction' → logprob: -15.725207328796387
    5. '_direction' → logprob: -16.60020637512207
    6. 'direction' → logprob: -16.85020637512207
    7. 'Well' → logprob: -16.85020637512207
    8. ' ' → logprob: -16.97520637512207
    9. '   ' → logprob: -17.10020637512207
    10. ' Well' → logprob: -17.60020637512207

Token 476: 'Provider' (ID: 5999)
  Prédit: 'Provider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Provider' → logprob: -3.2855416066013277e-05
    2. '_provider' → logprob: -10.375032424926758
    3. ' Provider' → logprob: -13.625032424926758
    4. '.Provider' → logprob: -16.250032424926758
    5. '_PROVIDER' → logprob: -16.250032424926758
    6. 'provider' → logprob: -16.625032424926758
    7. '   ' → logprob: -17.125032424926758
    8. 'Provid' → logprob: -17.625032424926758
    9. 'Provide' → logprob: -18.000032424926758
    10. ')' → logprob: -18.625032424926758

Token 477: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47019970417022705
    2. '):
' → logprob: -1.095199704170227
    3. ',' → logprob: -3.2201995849609375
    4. ')' → logprob: -7.7201995849609375
    5. '):
' → logprob: -8.720199584960938
    6. ' ):' → logprob: -10.220199584960938
    7. ' ):
' → logprob: -11.095199584960938
    8. '   ' → logprob: -11.220199584960938
    9. ':' → logprob: -11.470199584960938
    10. '):

' → logprob: -11.720199584960938

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004094619944225997
    2. 'self' → logprob: -7.8754096031188965
    3. ' self' → logprob: -10.500409126281738
    4. '   ' → logprob: -13.625409126281738
    5. ',' → logprob: -15.750409126281738
    6. 'def' → logprob: -16.125410079956055
    7. '      ' → logprob: -16.375410079956055
    8. '	self' → logprob: -16.375410079956055
    9. '	' → logprob: -16.625410079956055
    10. '	   ' → logprob: -17.750410079956055

Token 479: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005101645365357399
    2. ' self' → logprob: -5.755101680755615
    3. '       ' → logprob: -6.255101680755615
    4. '   ' → logprob: -13.505101203918457
    5. '	self' → logprob: -16.630102157592773
    6. 'import' → logprob: -18.130102157592773
    7. '
' → logprob: -18.255102157592773
    8. ' ' → logprob: -18.505102157592773
    9. '           ' → logprob: -18.630102157592773
    10. 'super' → logprob: -19.255102157592773

Token 480: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.582935094833374
    2. '.current' → logprob: -1.457935094833374
    3. '.direction' → logprob: -1.582935094833374
    4. '.' → logprob: -5.957935333251953
    5. 'direction' → logprob: -7.832935333251953
    6. 'current' → logprob: -7.832935333251953
    7. 'position' → logprob: -9.332935333251953
    8. '._' → logprob: -9.957935333251953
    9. '   ' → logprob: -10.332935333251953
    10. ' .' → logprob: -10.582935333251953

Token 481: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025225818157196
    2. '=' → logprob: -1.9102522134780884
    3. ' ' → logprob: -11.535252571105957
    4. ':' → logprob: -11.785252571105957
    5. '   ' → logprob: -13.035252571105957
    6. '=None' → logprob: -13.035252571105957
    7. ',' → logprob: -13.160252571105957
    8. '    ' → logprob: -13.285252571105957
    9. ' Vector' → logprob: -14.535252571105957
    10. '<|end|>' → logprob: -14.910252571105957

Token 482: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.03804263845086098
    2. ' Vector' → logprob: -3.2880425453186035
    3. '   ' → logprob: -14.413043022155762
    4. '	Vector' → logprob: -14.413043022155762
    5. '(Vector' → logprob: -17.038042068481445
    6. '  ' → logprob: -17.663042068481445
    7. '0' → logprob: -17.788042068481445
    8. ' ' → logprob: -17.913042068481445
    9. '    ' → logprob: -18.413042068481445
    10. '<Vector' → logprob: -18.663042068481445

Token 483: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.125
    3. '[' → logprob: -16.75
    4. '(' → logprob: -17.75
    5. 'Vector' → logprob: -18.0
    6. '   ' → logprob: -18.0
    7. '0' → logprob: -18.0
    8. '(Vector' → logprob: -18.75
    9. '```' → logprob: -20.375
    10. '<Vector' → logprob: -20.625

Token 484: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.8074162653647363e-05
    2. 'Vector' → logprob: -11.000018119812012
    3. '2' → logprob: -13.625018119812012
    4. '   ' → logprob: -16.625017166137695
    5. '_D' → logprob: -17.875017166137695
    6. '0' → logprob: -18.500017166137695
    7. ' Vector' → logprob: -19.375017166137695
    8. ' D' → logprob: -19.500017166137695
    9. 'vector' → logprob: -19.625017166137695
    10. '3' → logprob: -19.875017166137695

Token 485: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31362974643707275
    2. '()' → logprob: -1.3136297464370728
    3. '()
' → logprob: -8.313630104064941
    4. '0' → logprob: -9.063630104064941
    5. '()

' → logprob: -12.813630104064941
    6. '()\' → logprob: -13.438630104064941
    7. ' (' → logprob: -14.313630104064941
    8. '()(' → logprob: -14.438630104064941
    9. '().' → logprob: -15.063630104064941
    10. ' ()' → logprob: -15.313630104064941

Token 486: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.082895273109898e-05
    2. ')' → logprob: -10.875030517578125
    3. ' ' → logprob: -11.375030517578125
    4. ')
' → logprob: -15.250030517578125
    5. '   ' → logprob: -16.750030517578125
    6. ' )' → logprob: -18.250030517578125
    7. '  ' → logprob: -18.500030517578125
    8. '۰' → logprob: -18.875030517578125
    9. ')

' → logprob: -19.562530517578125
    10. '(' → logprob: -19.625030517578125

Token 487: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34905338287353516
    2. '.' → logprob: -1.2240533828735352
    3. '0' → logprob: -7.724053382873535
    4. ' ,' → logprob: -9.099053382873535
    5. ')' → logprob: -10.474053382873535
    6. '.,' → logprob: -11.099053382873535
    7. ' ' → logprob: -11.974053382873535
    8. '   ' → logprob: -14.474053382873535
    9. '```' → logprob: -14.474053382873535
    10. ',
' → logprob: -14.599053382873535

Token 488: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.250001907348633
    4. '
' → logprob: -18.500001907348633
    5. '00' → logprob: -18.750001907348633
    6. '       ' → logprob: -19.062501907348633
    7. '```' → logprob: -19.062501907348633
    8. '  ' → logprob: -19.125001907348633
    9. '    ' → logprob: -19.937501907348633
    10. ')' → logprob: -20.375001907348633

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.817902173381299e-05
    2. ' ,' → logprob: -9.25009822845459
    3. ')' → logprob: -13.87509822845459
    4. '0' → logprob: -14.25009822845459
    5. ',
' → logprob: -15.37509822845459
    6. '‌,' → logprob: -16.250097274780273
    7. '<|end|>' → logprob: -16.250097274780273
    8. ' ' → logprob: -16.625097274780273
    9. '),' → logprob: -17.250097274780273
    10. ',float' → logprob: -17.875097274780273

Token 490: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003178544342517853
    2. ' ' → logprob: -5.753178596496582
    3. '   ' → logprob: -14.128178596496582
    4. '  ' → logprob: -16.253177642822266
    5. '    ' → logprob: -17.690677642822266
    6. '
' → logprob: -18.253177642822266
    7. '	' → logprob: -18.565677642822266
    8. ' ' → logprob: -18.690677642822266
    9. ')' → logprob: -19.065677642822266
    10. '1' → logprob: -19.253177642822266

Token 491: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -16.12500762939453
    4. '  ' → logprob: -17.93750762939453
    5. '۰' → logprob: -19.12500762939453
    6. '    ' → logprob: -19.31250762939453
    7. '-' → logprob: -19.62500762939453
    8. '
' → logprob: -19.68750762939453
    9. '```' → logprob: -19.81250762939453
    10. '00' → logprob: -19.87500762939453

Token 492: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.038476329296827316
    2. ')' → logprob: -3.2884762287139893
    3. '0' → logprob: -7.788476467132568
    4. ')
' → logprob: -11.16347599029541
    5. ' )' → logprob: -12.78847599029541
    6. ' ' → logprob: -13.91347599029541
    7. ',' → logprob: -14.28847599029541
    8. ' .' → logprob: -14.53847599029541
    9. '   ' → logprob: -15.03847599029541
    10. ').' → logprob: -15.78847599029541

Token 493: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.250000953674316
    3. ' ' → logprob: -16.25
    4. ')' → logprob: -16.625
    5. '       ' → logprob: -16.875
    6. '```' → logprob: -18.625
    7. 'float' → logprob: -18.625
    8. '5' → logprob: -19.0
    9. 'f' → logprob: -19.5
    10. ')
' → logprob: -19.8125

Token 494: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07904478162527084
    2. ')
' → logprob: -2.579044818878174
    3. '       ' → logprob: -8.829044342041016
    4. '   ' → logprob: -12.329044342041016
    5. ')
' → logprob: -13.204044342041016
    6. '),' → logprob: -14.079044342041016
    7. ' )' → logprob: -14.329044342041016
    8. ' )
' → logprob: -15.454044342041016
    9. ')

' → logprob: -15.579044342041016
    10. ',' → logprob: -16.579044342041016

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013211923651397228
    2. 'self' → logprob: -6.751321315765381
    3. ' self' → logprob: -9.376320838928223
    4. '   ' → logprob: -9.626320838928223
    5. '	self' → logprob: -16.37632179260254
    6. ' ' → logprob: -17.12632179260254
    7. '      ' → logprob: -17.12632179260254
    8. '
' → logprob: -17.62632179260254
    9. ',' → logprob: -18.00132179260254
    10. '           ' → logprob: -18.25132179260254

Token 496: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000591874762903899
    2. '       ' → logprob: -7.50059175491333
    3. ' self' → logprob: -10.250592231750488
    4. '   ' → logprob: -13.250592231750488
    5. '
' → logprob: -13.500592231750488
    6. '        
' → logprob: -15.625592231750488
    7. '	self' → logprob: -16.750591278076172
    8. 'def' → logprob: -17.125591278076172
    9. ' ' → logprob: -18.625591278076172
    10. '      ' → logprob: -19.125591278076172

Token 497: '.direction' (ID: 63524)
  Prédit: '.direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.direction' → logprob: -0.0019034126307815313
    2. 'direction' → logprob: -7.501903533935547
    3. '.orientation' → logprob: -7.501903533935547
    4. '.step' → logprob: -8.376903533935547
    5. '.velocity' → logprob: -8.501903533935547
    6. '.heading' → logprob: -9.501903533935547
    7. '._' → logprob: -9.876903533935547
    8. '.current' → logprob: -9.876903533935547
    9. '.' → logprob: -10.751903533935547
    10. '.d' → logprob: -10.876903533935547

Token 498: '_provider' (ID: 66809)
  Prédit: '_provider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_provider' → logprob: -1.318681188422488e-05
    2. '_' → logprob: -12.50001335144043
    3. '_vector' → logprob: -12.50001335144043
    4. '_index' → logprob: -13.50001335144043
    5. ' =' → logprob: -13.75001335144043
    6. '_pro' → logprob: -14.50001335144043
    7. '_generator' → logprob: -14.62501335144043
    8. '=_' → logprob: -14.75001335144043
    9. '=' → logprob: -15.12501335144043
    10. '_source' → logprob: -15.25001335144043

Token 499: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141752064228058
    2. ' =' → logprob: -1.7014175653457642
    3. '.' → logprob: -13.201417922973633
    4. ' ' → logprob: -13.701417922973633
    5. '   ' → logprob: -14.701417922973633
    6. ')' → logprob: -15.326417922973633
    7. 's' → logprob: -15.951417922973633
    8. '    ' → logprob: -16.451417922973633
    9. '=
' → logprob: -16.826417922973633
    10. '  ' → logprob: -17.201417922973633

Token 500: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.16022422909736633
    2. ' direction' → logprob: -1.910224199295044
    3. '(direction' → logprob: -16.66022491455078
    4. '_direction' → logprob: -18.28522491455078
    5. 'dire' → logprob: -19.28522491455078
    6. 'Direction' → logprob: -19.28522491455078
    7. '.direction' → logprob: -19.66022491455078
    8. '方向' → logprob: -19.66022491455078
    9. 'directory' → logprob: -20.03522491455078
    10. '   ' → logprob: -20.28522491455078

Token 501: '_provider' (ID: 66809)
  Prédit: '_provider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_provider' → logprob: -1.5048530030981055e-06
    2. 'provider' → logprob: -13.500001907348633
    3. 'Provider' → logprob: -16.500001907348633
    4. '_pro' → logprob: -18.625001907348633
    5. '_PROVIDER' → logprob: -18.625001907348633
    6. ' _' → logprob: -19.500001907348633
    7. ' provider' → logprob: -19.875001907348633
    8. '_' → logprob: -20.625001907348633
    9. '-provider' → logprob: -20.625001907348633
    10. '   ' → logprob: -20.750001907348633

Token 502: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5983558297157288
    2. '
' → logprob: -0.8483558297157288
    3. '    
' → logprob: -3.848355770111084
    4. 'def' → logprob: -8.098356246948242
    5. '        
' → logprob: -8.723356246948242
    6. '       ' → logprob: -8.848356246948242
    7. ' def' → logprob: -9.848356246948242
    8. '<|end|>' → logprob: -10.348356246948242
    9. '  
' → logprob: -10.473356246948242
    10. '   
' → logprob: -10.598356246948242

Token 503: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038995807990431786
    2. '    
' → logprob: -6.378899574279785
    3. '
' → logprob: -6.878899574279785
    4. 'def' → logprob: -7.003899574279785
    5. ' def' → logprob: -9.003899574279785
    6. '<|end|>' → logprob: -9.503899574279785
    7. '	def' → logprob: -10.878899574279785
    8. '  
' → logprob: -11.753899574279785
    9. '        
' → logprob: -12.128899574279785
    10. ' 
' → logprob: -12.128899574279785

Token 504: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04071389511227608
    2. '   ' → logprob: -3.6657137870788574
    3. 'self' (adapté à ' self') → logprob: -4.290713787078857
    4. ' def' → logprob: -7.540713787078857
    5. '       ' → logprob: -10.040714263916016
    6. '
' → logprob: -11.290714263916016
    7. ' self' → logprob: -11.415714263916016
    8. '    
' → logprob: -12.415714263916016
    9. '	def' → logprob: -12.665714263916016
    10. '

' → logprob: -13.040714263916016

Token 505: '.f' (ID: 1196)
  Prédit: '.step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.step' → logprob: -0.5811764597892761
    2. '.steps' → logprob: -0.9561764597892761
    3. '.' → logprob: -3.581176519393921
    4. '.direction' → logprob: -5.206176280975342
    5. '.current' → logprob: -5.456176280975342
    6. '._' → logprob: -5.581176280975342
    7. '.history' → logprob: -5.706176280975342
    8. '.velocity' → logprob: -6.081176280975342
    9. '.speed' → logprob: -6.206176280975342
    10. '.position' → logprob: -6.581176280975342

Token 506: 'acing' (ID: 7997)
  Prédit: 'acing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -0.0073521132580935955
    2. 'or' → logprob: -5.382351875305176
    3. 'ace' → logprob: -6.882351875305176
    4. 'orce' → logprob: -7.632351875305176
    5. 'ront' → logprob: -8.507351875305176
    6. 'oot' → logprob: -8.632351875305176
    7. 'inal' → logprob: -9.132351875305176
    8. 'lag' → logprob: -9.757351875305176
    9. 'ixed' → logprob: -9.882351875305176
    10. 'ollow' → logprob: -9.882351875305176

Token 507: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4678906202316284
    2. '=' → logprob: -1.7178906202316284
    3. '_direction' → logprob: -1.7178906202316284
    4. '_vector' → logprob: -4.342890739440918
    5. '_angle' → logprob: -6.842890739440918
    6. 'direction' → logprob: -7.967890739440918
    7. ':' → logprob: -8.092890739440918
    8. 'vector' → logprob: -10.467890739440918
    9. '_index' → logprob: -11.717890739440918
    10. '   ' → logprob: -11.717890739440918

Token 508: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.0009232500451616943
    2. 'self' → logprob: -7.000923156738281
    3. 'None' → logprob: -11.750923156738281
    4. ' Vector' → logprob: -12.750923156738281
    5. 'Direction' → logprob: -14.625923156738281
    6. '(Vector' → logprob: -15.125923156738281
    7. 'direction' → logprob: -17.25092315673828
    8. '	Vector' → logprob: -17.25092315673828
    9. ' self' → logprob: -17.75092315673828
    10. '<Vector' → logprob: -17.87592315673828

Token 509: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'Vector' → logprob: -17.5
    3. '(' → logprob: -18.375
    4. '(Vector' → logprob: -20.0
    5. '   ' → logprob: -20.375
    6. ' ' → logprob: -20.75
    7. '[' → logprob: -21.0
    8. 'Direction' → logprob: -21.25
    9. '۲' → logprob: -21.625
    10. '<Vector' → logprob: -22.0

Token 510: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -2.5776860184123507e-06
    2. 'Vector' → logprob: -13.00000286102295
    3. '2' → logprob: -15.37500286102295
    4. '0' → logprob: -18.875001907348633
    5. '_D' → logprob: -20.375001907348633
    6. ' Vector' → logprob: -21.000001907348633
    7. '(' → logprob: -21.125001907348633
    8. ' D' → logprob: -21.125001907348633
    9. 'd' → logprob: -21.250001907348633
    10. '   ' → logprob: -21.750001907348633

Token 511: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.56102097814437e-05
    2. '1' → logprob: -10.000045776367188
    3. '0' → logprob: -15.875045776367188
    4. ' (' → logprob: -17.750045776367188
    5. '(
' → logprob: -18.750045776367188
    6. '   ' → logprob: -19.000045776367188
    7. '    ' → logprob: -21.250045776367188
    8. ' ' → logprob: -21.875045776367188
    9. '  ' → logprob: -22.750045776367188
    10. '     ' → logprob: -23.000045776367188

Token 512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005235529970377684
    2. '0' → logprob: -5.25523567199707
    3. '(' → logprob: -13.75523567199707
    4. ' ' → logprob: -14.63023567199707
    5. '   ' → logprob: -15.63023567199707
    6. '-' → logprob: -17.31773567199707
    7. '{' → logprob: -19.00523567199707
    8. '  ' → logprob: -19.00523567199707
    9. '
' → logprob: -19.06773567199707
    10. '``' → logprob: -19.13023567199707

Token 513: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07976434379816055
    2. ',' → logprob: -2.5797643661499023
    3. '0' → logprob: -7.079764366149902
    4. ' ,' → logprob: -10.954764366149902
    5. ' ' → logprob: -12.204764366149902
    6. ')' → logprob: -12.454764366149902
    7. ' .' → logprob: -13.829764366149902
    8. '.,' → logprob: -14.454764366149902
    9. 'e' → logprob: -14.579764366149902
    10. ',
' → logprob: -14.704764366149902

Token 514: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. ',' → logprob: -16.5
    4. '00' → logprob: -17.625
    5. '   ' → logprob: -18.625
    6. '  ' → logprob: -20.1875
    7. '000' → logprob: -20.4375
    8. '    ' → logprob: -20.75
    9. '        ' → logprob: -20.8125
    10. '
' → logprob: -21.25

Token 515: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009470687946304679
    2. '0' → logprob: -7.000946998596191
    3. ' ,' → logprob: -10.250946998596191
    4. ')' → logprob: -15.750946998596191
    5. ' ' → logprob: -16.000947952270508
    6. ',
' → logprob: -17.250947952270508
    7. 'f' → logprob: -18.250947952270508
    8. '<|end|>' → logprob: -18.875947952270508
    9. '```' → logprob: -18.875947952270508
    10. '),' → logprob: -19.000947952270508

Token 516: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -19.000059127807617
    4. '  ' → logprob: -21.250059127807617
    5. '1' → logprob: -23.125059127807617
    6. ' ' → logprob: -23.125059127807617
    7. '۰' → logprob: -23.125059127807617
    8. '00' → logprob: -23.250059127807617
    9. '```' → logprob: -23.312559127807617
    10. ')' → logprob: -23.312559127807617

Token 517: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -21.375
    4. '00' → logprob: -22.875
    5. '۰' → logprob: -22.875
    6. '  ' → logprob: -23.5
    7. '０' → logprob: -23.625
    8. ')' → logprob: -24.0
    9. '
' → logprob: -24.5625
    10. '    ' → logprob: -25.25

Token 518: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0009630310814827681
    2. ')' → logprob: -7.12596321105957
    3. '0' → logprob: -8.75096321105957
    4. ')
' → logprob: -16.50096321105957
    5. ',' → logprob: -16.75096321105957
    6. '1' → logprob: -17.75096321105957
    7. ').' → logprob: -17.87596321105957
    8. '),' → logprob: -18.12596321105957
    9. '[' → logprob: -18.25096321105957
    10. ' .' → logprob: -18.37596321105957

Token 519: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. ')' → logprob: -16.625
    4. '   ' → logprob: -20.0
    5. '```' → logprob: -20.375
    6. ')
' → logprob: -20.875
    7. '00' → logprob: -21.0
    8. '  ' → logprob: -22.375
    9. ' )' → logprob: -22.625
    10. '    ' → logprob: -22.625

Token 520: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8670179997570813e-05
    2. ')
' → logprob: -11.500019073486328
    3. ' )' → logprob: -11.750019073486328
    4. '<|end|>' → logprob: -15.250019073486328
    5. '   ' → logprob: -15.500019073486328
    6. ')

' → logprob: -16.625019073486328
    7. '       ' → logprob: -17.125019073486328
    8. ')return' → logprob: -18.375019073486328
    9. ')}' → logprob: -18.750019073486328
    10. '),' → logprob: -18.750019073486328

Token 521: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2327980101108551
    2. '<|end|>' → logprob: -1.6077979803085327
    3. '   ' → logprob: -5.357798099517822
    4. '<|end|>' → logprob: -6.857798099517822
    5. '    
' → logprob: -7.482798099517822
    6. '

' → logprob: -7.732798099517822
    7. 'def' → logprob: -8.732797622680664
    8. ' 
' → logprob: -9.232797622680664
    9. '  
' → logprob: -9.732797622680664
    10. ' def' → logprob: -10.232797622680664

Token 522: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2462916076183319
    2. 'def' → logprob: -1.6212916374206543
    3. '   ' → logprob: -4.871291637420654
    4. '<|end|>' → logprob: -5.121291637420654
    5. ' def' → logprob: -5.496291637420654
    6. '    
' → logprob: -6.621291637420654
    7. '

' → logprob: -7.621291637420654
    8. '       ' → logprob: -8.371291160583496
    9. 'self' → logprob: -8.621291160583496
    10. ' 
' → logprob: -9.246291160583496

Token 523: ' initially' (ID: 25998)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.005491891410201788
    2. ' Vector' → logprob: -5.255491733551025
    3. 'self' → logprob: -9.005492210388184
    4. 'None' → logprob: -9.880492210388184
    5. '1' → logprob: -10.380492210388184
    6. '<Vector' → logprob: -10.880492210388184
    7. '(Vector' → logprob: -11.505492210388184
    8. 'Unit' → logprob: -12.380492210388184
    9. 'The' → logprob: -12.880492210388184
    10. 'vector' → logprob: -12.880492210388184

Token 524: ' facing' (ID: 20511)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.006746042985469103
    2. 'point' → logprob: -5.0067458152771
    3. ' facing' → logprob: -10.881746292114258
    4. ' pointing' → logprob: -11.881746292114258
    5. 'face' → logprob: -13.631746292114258
    6. 'points' → logprob: -13.631746292114258
    7. 'faces' → logprob: -14.506746292114258
    8. 'right' → logprob: -14.506746292114258
    9. 'along' → logprob: -14.631746292114258
    10. 'east' → logprob: -15.381746292114258

Token 525: ' east' (ID: 23557)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.08485743403434753
    2. 'east' → logprob: -2.83485746383667
    3. 'to' → logprob: -3.95985746383667
    4. '1' → logprob: -5.95985746383667
    5. 'along' → logprob: -7.58485746383667
    6. 'East' → logprob: -8.584856986999512
    7. 'tow' → logprob: -9.584856986999512
    8. 'Vector' → logprob: -9.834856986999512
    9. '(' → logprob: -9.959856986999512
    10. 'forward' → logprob: -10.709856986999512

Token 526: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06825075298547745
    2. '   ' → logprob: -2.8182506561279297
    3. '<|end|>' → logprob: -5.31825065612793
    4. '    
' → logprob: -7.06825065612793
    5. '

' → logprob: -8.69325065612793
    6. '       ' → logprob: -8.81825065612793
    7. 'def' → logprob: -9.31825065612793
    8. '<|end|>' → logprob: -10.06825065612793
    9. '        
' → logprob: -10.94325065612793
    10. '
' → logprob: -11.31825065612793

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009905342012643814
    2. 'def' → logprob: -7.250990390777588
    3. '    
' → logprob: -8.625990867614746
    4. ' def' → logprob: -9.500990867614746
    5. '
' → logprob: -11.500990867614746
    6. '<|end|>' → logprob: -11.750990867614746
    7. '	def' → logprob: -12.500990867614746
    8. '        
' → logprob: -13.500990867614746
    9. '  
' → logprob: -14.375990867614746
    10. '```' → logprob: -14.500990867614746

Token 528: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001940040965564549
    2. ' def' → logprob: -8.75019359588623
    3. '   ' → logprob: -10.25019359588623
    4. '	def' → logprob: -18.125194549560547
    5. '
' → logprob: -18.375194549560547
    6. ' ' → logprob: -19.750194549560547
    7. 'de' → logprob: -20.125194549560547
    8. '  ' → logprob: -21.000194549560547
    9. '    
' → logprob: -21.000194549560547
    10. ' 
' → logprob: -23.250194549560547

Token 529: ' face' (ID: 4950)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.152274027466774
    2. 'step' → logprob: -2.1522741317749023
    3. ' move' → logprob: -3.9022741317749023
    4. ' step' → logprob: -5.777274131774902
    5. 'advance' → logprob: -7.152274131774902
    6. 'navigate' → logprob: -7.902274131774902
    7. 'walk' → logprob: -8.777274131774902
    8. 'update' → logprob: -8.902274131774902
    9. 'get' → logprob: -9.527274131774902
    10. 'turn' → logprob: -9.652274131774902

Token 530: '_w' (ID: 3567)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3071523904800415
    2. '_direction' → logprob: -1.5571523904800415
    3. '_next' → logprob: -3.932152271270752
    4. '(' → logprob: -4.557152271270752
    5. '_t' → logprob: -4.682152271270752
    6. '_w' → logprob: -5.057152271270752
    7. 'self' → logprob: -5.807152271270752
    8. '_step' → logprob: -7.057152271270752
    9. 't' → logprob: -7.557152271270752
    10. '_current' → logprob: -7.682152271270752

Token 531: 'ell' (ID: 596)
  Prédit: 'ell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ell' → logprob: -5.32392441527918e-05
    2. 'e' → logprob: -11.375053405761719
    3. 'ells' → logprob: -11.500053405761719
    4. '_' → logprob: -12.000053405761719
    5. 'el' → logprob: -12.250053405761719
    6. 'ay' → logprob: -12.375053405761719
    7. 'all' → logprob: -13.375053405761719
    8. 'elcome' → logprob: -13.375053405761719
    9. 'elp' → logprob: -13.500053405761719
    10. 'orld' → logprob: -13.625053405761719

Token 532: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.839121826691553e-05
    2. '(' → logprob: -9.875078201293945
    3. ' (' → logprob: -10.625078201293945
    4. '       ' → logprob: -14.250078201293945
    5. '(s' → logprob: -14.625078201293945
    6. '(step' → logprob: -14.625078201293945
    7. '   ' → logprob: -14.875078201293945
    8. 'self' → logprob: -15.125078201293945
    9. '(se' → logprob: -15.250078201293945
    10. '(sel' → logprob: -17.250078201293945

Token 533: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.21441484987735748
    2. ',' → logprob: -1.7144148349761963
    3. 'self' → logprob: -4.839415073394775
    4. ')' → logprob: -6.589415073394775
    5. '       ' → logprob: -6.839415073394775
    6. '   ' → logprob: -7.589415073394775
    7. ',self' → logprob: -7.589415073394775
    8. '):
' → logprob: -7.839415073394775
    9. ')(' → logprob: -7.839415073394775
    10. '):' → logprob: -7.839415073394775

Token 534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026127850636839867
    2. 'self' → logprob: -4.526127815246582
    3. ' self' → logprob: -5.026127815246582
    4. 'current' → logprob: -6.151127815246582
    5. ' pass' → logprob: -6.276127815246582
    6. ' current' → logprob: -6.401127815246582
    7. ' direction' → logprob: -6.776127815246582
    8. 'pass' → logprob: -7.151127815246582
    9. 'direction' → logprob: -8.276127815246582
    10. 'position' → logprob: -8.901127815246582

Token 535: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7319368124008179
    2. '#' (adapté à ' #') → logprob: -0.9819368124008179
    3. 'current' → logprob: -2.3569369316101074
    4. '       ' → logprob: -3.4819369316101074
    5. 'direction' → logprob: -4.731936931610107
    6. 'pass' → logprob: -5.231936931610107
    7. 'well' → logprob: -6.981936931610107
    8. 'target' → logprob: -7.231936931610107
    9. 'vector' → logprob: -7.356936931610107
    10. 'pos' → logprob: -7.356936931610107

Token 536: ' Re' (ID: 907)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.606610119342804
    2. 'current' → logprob: -1.4816100597381592
    3. 'pass' → logprob: -2.231610059738159
    4. 'self' → logprob: -2.481610059738159
    5. '       ' → logprob: -3.731610059738159
    6. 'direction' → logprob: -4.731610298156738
    7. 'step' → logprob: -6.606610298156738
    8. 'curr' → logprob: -7.356610298156738
    9. 'position' → logprob: -7.481610298156738
    10. 'pos' → logprob: -7.481610298156738

Token 537: 'orient' (ID: 56193)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.018718717619776726
    2. '       ' → logprob: -4.268718719482422
    3. 'f' → logprob: -6.643718719482422
    4. 'def' → logprob: -6.768718719482422
    5. '#' → logprob: -7.018718719482422
    6. 'current' → logprob: -8.143718719482422
    7. 'set' → logprob: -8.768718719482422
    8. 'self' → logprob: -8.768718719482422
    9. '   ' → logprob: -9.643718719482422
    10. 's' → logprob: -9.893718719482422

Token 538: ' facing' (ID: 20511)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.81919926404953
    2. 'current' → logprob: -0.94419926404953
    3. '       ' → logprob: -2.194199323654175
    4. ' current' → logprob: -3.819199323654175
    5. ' self' → logprob: -4.444199085235596
    6. 'direction' → logprob: -5.319199085235596
    7. 'position' → logprob: -5.944199085235596
    8. ' the' → logprob: -6.194199085235596
    9. 'vector' → logprob: -6.444199085235596
    10. ' to' → logprob: -6.444199085235596

Token 539: ' vector' (ID: 9727)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.153070330619812
    2. 'tow' → logprob: -1.278070330619812
    3. 'direction' → logprob: -2.5280704498291016
    4. 'vector' → logprob: -2.7780704498291016
    5. '_vector' → logprob: -2.9030704498291016
    6. '(self' → logprob: -3.1530704498291016
    7. ' towards' → logprob: -3.5280704498291016
    8. '       ' → logprob: -3.9030704498291016
    9. ' =' → logprob: -4.153070449829102
    10. 'to' → logprob: -4.153070449829102

Token 540: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3354431688785553
    2. ' =' → logprob: -2.3354432582855225
    3. 'self' → logprob: -2.3354432582855225
    4. '       ' → logprob: -3.5854432582855225
    5. ' to' → logprob: -3.8354432582855225
    6. 'to' → logprob: -4.210443019866943
    7. 'current' → logprob: -4.835443019866943
    8. 'tow' → logprob: -5.210443019866943
    9. '=self' → logprob: -5.835443019866943
    10. ' self' → logprob: -6.085443019866943

Token 541: ' point' (ID: 2438)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10303077846765518
    2. 'Vector' → logprob: -2.4780306816101074
    3. ' self' → logprob: -4.353030681610107
    4. ' Vector' → logprob: -6.853030681610107
    5. '(self' → logprob: -10.478031158447266
    6. '(Vector' → logprob: -10.478031158447266
    7. 'return' → logprob: -12.603031158447266
    8. '   ' → logprob: -12.853031158447266
    9. '(' → logprob: -13.978031158447266
    10. 'vector' → logprob: -14.103031158447266

Token 542: ' directly' (ID: 8516)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.19436047971248627
    2. ' towards' → logprob: -2.0693604946136475
    3. ' toward' → logprob: -3.0693604946136475
    4. '       ' → logprob: -6.819360256195068
    5. 'to' → logprob: -7.194360256195068
    6. 'self' → logprob: -7.194360256195068
    7. ' to' → logprob: -7.944360256195068
    8. ' at' → logprob: -8.444360733032227
    9. '(self' → logprob: -8.569360733032227
    10. '=' → logprob: -9.194360733032227

Token 543: ' from' (ID: 591)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.07358743995428085
    2. 'at' → logprob: -2.948587417602539
    3. ' towards' → logprob: -5.073587417602539
    4. ' at' → logprob: -5.448587417602539
    5. ' toward' → logprob: -5.573587417602539
    6. 'to' → logprob: -5.698587417602539
    7. 't' → logprob: -7.823587417602539
    8. 'from' → logprob: -8.198587417602539
    9. ' to' → logprob: -10.198587417602539
    10. 'self' → logprob: -10.448587417602539

Token 544: ' current' (ID: 2208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009143244242295623
    2. ' self' → logprob: -7.000914096832275
    3. '       ' → logprob: -13.750914573669434
    4. '=self' → logprob: -14.750914573669434
    5. 'Vector' → logprob: -15.000914573669434
    6. '(self' → logprob: -15.125914573669434
    7. '
' → logprob: -15.625914573669434
    8. '   ' → logprob: -16.000913619995117
    9. 'current' → logprob: -16.125913619995117
    10. 'the' → logprob: -16.375913619995117

Token 545: ' position' (ID: 4010)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14920008182525635
    2. 'position' → logprob: -2.524199962615967
    3. ' self' → logprob: -3.024199962615967
    4. ' position' → logprob: -4.774199962615967
    5. '.position' → logprob: -7.524199962615967
    6. '_position' → logprob: -7.899199962615967
    7. '       ' → logprob: -8.399200439453125
    8. '(self' → logprob: -9.024200439453125
    9. '   ' → logprob: -9.649200439453125
    10. 'point' → logprob: -11.524200439453125

Token 546: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.943769097328186
    2. 'tow' → logprob: -1.068769097328186
    3. '       ' → logprob: -1.818769097328186
    4. ' to' → logprob: -2.6937689781188965
    5. ' towards' → logprob: -3.6937689781188965
    6. ' toward' → logprob: -4.5687689781188965
    7. 'self' → logprob: -6.8187689781188965
    8. ',' → logprob: -7.9437689781188965
    9. 't' → logprob: -8.443769454956055
    10. '   ' → logprob: -9.193769454956055

Token 547: ' well' (ID: 1775)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07266625016927719
    2. 'Vector' → logprob: -3.1976661682128906
    3. ' self' → logprob: -3.5726661682128906
    4. ' Vector' → logprob: -6.822666168212891
    5. '   ' → logprob: -10.57266616821289
    6. '       ' → logprob: -11.57266616821289
    7. '(self' → logprob: -11.94766616821289
    8. '(Vector' → logprob: -12.07266616821289
    9. '    ' → logprob: -13.32266616821289
    10. '_Vector' → logprob: -13.32266616821289

Token 548: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8184821009635925
    2. ' =' → logprob: -1.5684821605682373
    3. 'self' → logprob: -1.8184821605682373
    4. '(self' → logprob: -2.4434821605682373
    5. '=' → logprob: -3.0684821605682373
    6. '(' → logprob: -3.9434821605682373
    7. ' self' → logprob: -4.568481922149658
    8. ' (' → logprob: -4.693481922149658
    9. ',' → logprob: -5.693481922149658
    10. '=self' → logprob: -6.068481922149658

Token 549: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0727124810218811
    2. ' self' → logprob: -3.1977124214172363
    3. 'Vector' → logprob: -3.9477124214172363
    4. '       ' → logprob: -4.822712421417236
    5. ')' → logprob: -7.322712421417236
    6. ' Vector' → logprob: -7.447712421417236
    7. ')
' → logprob: -9.447712898254395
    8. '0' → logprob: -9.697712898254395
    9. 'return' → logprob: -9.697712898254395
    10. '
' → logprob: -9.822712898254395

Token 550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009633074514567852
    2. '0' → logprob: -5.5096330642700195
    3. ' -' → logprob: -6.0096330642700195
    4. '.' → logprob: -6.5096330642700195
    5. ')' → logprob: -7.1346330642700195
    6. ' ,' → logprob: -7.7596330642700195
    7. '-' → logprob: -8.00963306427002
    8. '   ' → logprob: -11.50963306427002
    9. ' )' → logprob: -12.38463306427002
    10. ' ' → logprob: -12.38463306427002

Token 551: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024768433067947626
    2. ' ' → logprob: -6.002476692199707
    3. '   ' → logprob: -14.502476692199707
    4. ')' → logprob: -15.002476692199707
    5. '  ' → logprob: -16.127477645874023
    6. ',' → logprob: -16.627477645874023
    7. '
' → logprob: -17.002477645874023
    8. '<|end|>' → logprob: -17.377477645874023
    9. '    ' → logprob: -18.252477645874023
    10. ' ' → logprob: -18.939977645874023

Token 552: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3173661530017853
    2. ')
' → logprob: -1.942366123199463
    3. '       ' → logprob: -2.067366123199463
    4. '):
' → logprob: -6.442366123199463
    5. '   ' → logprob: -8.317366600036621
    6. '):' → logprob: -9.192366600036621
    7. ')

' → logprob: -10.692366600036621
    8. ' )
' → logprob: -10.942366600036621
    9. ' )' → logprob: -10.942366600036621
    10. ')
' → logprob: -11.317366600036621

Token 553: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004324573092162609
    2. 'direction' → logprob: -8.750432014465332
    3. ',' → logprob: -9.875432014465332
    4. ' direction' → logprob: -10.125432014465332
    5. '<|end|>' → logprob: -10.250432014465332
    6. 'self' → logprob: -10.250432014465332
    7. 'vector' → logprob: -10.875432014465332
    8. ' to' → logprob: -10.875432014465332
    9. ' vector' → logprob: -11.625432014465332
    10. 'Vector' → logprob: -11.875432014465332

Token 554: ' vec' (ID: 10563)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5363918542861938
    2. 'direction' → logprob: -1.2863918542861938
    3. '       ' → logprob: -2.1613917350769043
    4. 'vector' → logprob: -4.536391735076904
    5. ' direction' → logprob: -5.536391735076904
    6. 'dir' → logprob: -5.786391735076904
    7. 'if' → logprob: -6.161391735076904
    8. 'vec' (adapté à ' vec') → logprob: -7.036391735076904
    9. 'delta' → logprob: -7.161391735076904
    10. ' self' → logprob: -7.161391735076904

Token 555: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.651035487651825
    2. 'tor' → logprob: -1.0260355472564697
    3. ' =' → logprob: -2.7760355472564697
    4. 'to' → logprob: -3.6510355472564697
    5. '=' → logprob: -3.9010355472564697
    6. 'tow' → logprob: -5.401035308837891
    7. '       ' → logprob: -6.026035308837891
    8. '_from' → logprob: -6.401035308837891
    9. 'from' → logprob: -6.526035308837891
    10. 'ctor' → logprob: -7.401035308837891

Token 556: '_w' (ID: 3567)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12684841454029083
    2. 'Vector' → logprob: -3.1268484592437744
    3. ' =' → logprob: -3.6268484592437744
    4. ' self' → logprob: -4.126848220825195
    5. '=' → logprob: -4.126848220825195
    6. 'origin' → logprob: -4.751848220825195
    7. ' Vector' → logprob: -5.876848220825195
    8. '=self' → logprob: -6.376848220825195
    9. ' origin' → logprob: -7.251848220825195
    10. 'the' → logprob: -7.376848220825195

Token 557: 'ell' (ID: 596)
  Prédit: 'ell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ell' → logprob: -5.438573680294212e-06
    2. 'well' → logprob: -13.750005722045898
    3. 'el' → logprob: -14.250005722045898
    4. '   ' → logprob: -14.625005722045898
    5. 'all' → logprob: -14.625005722045898
    6. '2' → logprob: -14.750005722045898
    7. '0' → logprob: -14.750005722045898
    8. '(' → logprob: -15.250005722045898
    9. '=' → logprob: -15.250005722045898
    10. '_' → logprob: -15.375005722045898

Token 558: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002098023891449
    2. '=' → logprob: -2.3502097129821777
    3. '=self' → logprob: -13.600210189819336
    4. '       ' → logprob: -14.225210189819336
    5. ':' → logprob: -14.975210189819336
    6. ' ' → logprob: -15.225210189819336
    7. '   ' → logprob: -16.100210189819336
    8. ')' → logprob: -16.225210189819336
    9. ' =
' → logprob: -16.475210189819336
    10. '=
' → logprob: -16.600210189819336

Token 559: ' Vector' (ID: 8764)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18564391136169434
    2. 'Vector' → logprob: -1.8106439113616943
    3. ' self' → logprob: -5.435644149780273
    4. ' Vector' → logprob: -6.810644149780273
    5. '       ' → logprob: -7.810644149780273
    6. '   ' → logprob: -11.685644149780273
    7. 'Vec' → logprob: -13.685644149780273
    8. '	Vector' → logprob: -13.810644149780273
    9. '(self' → logprob: -14.060644149780273
    10. '	self' → logprob: -14.185644149780273

Token 560: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'Vector' → logprob: -18.625
    3. '(' → logprob: -19.0
    4. '   ' → logprob: -20.125
    5. ' ' → logprob: -20.375
    6. '(Vector' → logprob: -20.75
    7. '(self' → logprob: -20.875
    8. '       ' → logprob: -21.0
    9. '۲' → logprob: -21.125
    10. '```' → logprob: -21.25

Token 561: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -2.129266067640856e-05
    2. 'Vector' → logprob: -11.375020980834961
    3. '(self' → logprob: -12.250020980834961
    4. '2' → logprob: -12.500020980834961
    5. 'C' → logprob: -14.250020980834961
    6. 'self' → logprob: -15.500020980834961
    7. 'vector' → logprob: -16.00002098083496
    8. '(' → logprob: -16.25002098083496
    9. 'd' → logprob: -16.50002098083496
    10. '   ' → logprob: -17.12502098083496

Token 562: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16126547753810883
    2. '(-' → logprob: -2.6612653732299805
    3. '(self' → logprob: -3.4112653732299805
    4. '0' → logprob: -3.9112653732299805
    5. '-' → logprob: -4.2862653732299805
    6. 'self' → logprob: -5.4112653732299805
    7. '(
' → logprob: -5.4112653732299805
    8. '()-' → logprob: -6.9112653732299805
    9. ' -' → logprob: -7.0362653732299805
    10. '().' → logprob: -7.6612653732299805

Token 563: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7615598440170288
    2. '-self' → logprob: -1.3865598440170288
    3. ' -' → logprob: -1.8865598440170288
    4. '0' → logprob: -2.1365599632263184
    5. '-w' → logprob: -4.511559963226318
    6. '(' → logprob: -7.386559963226318
    7. '-origin' → logprob: -7.886559963226318
    8. '-zero' → logprob: -8.01155948638916
    9. 'self' → logprob: -8.13655948638916
    10. ' ' → logprob: -9.01155948638916

Token 564: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43805626034736633
    2. '.' → logprob: -1.063056230545044
    3. ')' → logprob: -5.188056468963623
    4. ' -' → logprob: -6.563056468963623
    5. '   ' → logprob: -7.313056468963623
    6. '-' → logprob: -7.313056468963623
    7. ' ,' → logprob: -7.688056468963623
    8. '0' → logprob: -8.313055992126465
    9. '.,' → logprob: -9.563055992126465
    10. ',self' → logprob: -9.938055992126465

Token 565: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7968066206085496e-05
    2. ',' → logprob: -11.375027656555176
    3. ' ' → logprob: -12.125027656555176
    4. '-' → logprob: -12.250027656555176
    5. ' -' → logprob: -12.500027656555176
    6. '   ' → logprob: -13.750027656555176
    7. '.' → logprob: -14.250027656555176
    8. ')' → logprob: -14.750027656555176
    9. '```' → logprob: -15.875027656555176
    10. '       ' → logprob: -16.000028610229492

Token 566: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10996945947408676
    2. '0' → logprob: -2.3599693775177
    3. ' -' → logprob: -5.234969615936279
    4. '-' → logprob: -6.359969615936279
    5. ' ,' → logprob: -6.734969615936279
    6. ')' → logprob: -6.859969615936279
    7. '.' → logprob: -8.734969139099121
    8. '   ' → logprob: -8.984969139099121
    9. ',
' → logprob: -10.109969139099121
    10. ' ' → logprob: -10.984969139099121

Token 567: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.125097274780273
    4. ' ' → logprob: -17.625097274780273
    5. ')' → logprob: -17.750097274780273
    6. '  ' → logprob: -18.000097274780273
    7. '-' → logprob: -18.625097274780273
    8. ' -' → logprob: -18.625097274780273
    9. 'self' → logprob: -18.875097274780273
    10. '
' → logprob: -18.875097274780273

Token 568: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.750021934509277
    3. '-' → logprob: -15.500021934509277
    4. ')' → logprob: -15.750021934509277
    5. ' -' → logprob: -15.750021934509277
    6. '   ' → logprob: -16.375022888183594
    7. '.' → logprob: -17.437522888183594
    8. 'self' → logprob: -17.875022888183594
    9. ',' → logprob: -18.187522888183594
    10. '  ' → logprob: -18.750022888183594

Token 569: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.013978377915918827
    2. ')' → logprob: -4.513978481292725
    3. '0' → logprob: -5.888978481292725
    4. ',' → logprob: -8.888978004455566
    5. '-' → logprob: -12.388978004455566
    6. '.)' → logprob: -12.763978004455566
    7. '   ' → logprob: -13.138978004455566
    8. ')
' → logprob: -13.638978004455566
    9. ').' → logprob: -13.638978004455566
    10. '')' → logprob: -14.138978004455566

Token 570: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -12.250011444091797
    3. ')' → logprob: -12.875011444091797
    4. '   ' → logprob: -13.250011444091797
    5. '-' → logprob: -15.000011444091797
    6. 'position' → logprob: -15.375011444091797
    7. ' -' → logprob: -15.500011444091797
    8. '       ' → logprob: -15.875011444091797
    9. 'self' → logprob: -15.875011444091797
    10. 'y' → logprob: -16.062511444091797

Token 571: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023119196703191847
    2. ')-' → logprob: -9.50023078918457
    3. ').__' → logprob: -9.75023078918457
    4. ')
' → logprob: -10.37523078918457
    5. ' -' → logprob: -10.50023078918457
    6. ' )' → logprob: -10.75023078918457
    7. '-' → logprob: -12.25023078918457
    8. '   ' → logprob: -12.62523078918457
    9. ',' → logprob: -13.00023078918457
    10. '       ' → logprob: -13.00023078918457

Token 572: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01607613079249859
    2. '-' → logprob: -4.14107608795166
    3. ')' → logprob: -11.39107608795166
    4. '<|end|>' → logprob: -11.64107608795166
    5. ' -
' → logprob: -12.26607608795166
    6. '-
' → logprob: -12.64107608795166
    7. 'self' → logprob: -12.64107608795166
    8. ',' → logprob: -12.76607608795166
    9. '<|end|>' → logprob: -13.26607608795166
    10. '-self' → logprob: -13.39107608795166

Token 573: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007102862582542002
    2. ' self' → logprob: -7.250710487365723
    3. '	self' → logprob: -15.375710487365723
    4. '       ' → logprob: -16.000709533691406
    5. '   ' → logprob: -17.250709533691406
    6. '(self' → logprob: -18.625709533691406
    7. '[self' → logprob: -19.500709533691406
    8. '=self' → logprob: -20.750709533691406
    9. ' ' → logprob: -21.000709533691406
    10. ' ' → logprob: -21.125709533691406

Token 574: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.00028374246903695166
    2. 'position' → logprob: -8.250284194946289
    3. '.' → logprob: -11.000284194946289
    4. 'self' → logprob: -12.125284194946289
    5. ' .' → logprob: -16.37528419494629
    6. '   ' → logprob: -16.87528419494629
    7. '[position' → logprob: -17.00028419494629
    8. ' position' → logprob: -17.12528419494629
    9. '.pos' → logprob: -17.50028419494629
    10. '.user' → logprob: -17.62528419494629

Token 575: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07345354557037354
    2. 'self' → logprob: -2.698453426361084
    3. ' self' → logprob: -6.323453426361084
    4. 'direction' → logprob: -7.698453426361084
    5. ' if' → logprob: -8.073453903198242
    6. 'if' → logprob: -8.323453903198242
    7. 'return' → logprob: -8.573453903198242
    8. 'norm' → logprob: -9.073453903198242
    9. 'normalized' → logprob: -9.448453903198242
    10. ',' → logprob: -10.323453903198242

Token 576: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08197873085737228
    2. 'self' → logprob: -2.8319787979125977
    3. 'return' → logprob: -4.706978797912598
    4. 'direction' → logprob: -4.956978797912598
    5. 'norm' → logprob: -6.581978797912598
    6. ' self' → logprob: -6.831978797912598
    7. ' direction' → logprob: -8.206978797912598
    8. 'if' → logprob: -8.331978797912598
    9. ' if' → logprob: -8.956978797912598
    10. 'normalized' → logprob: -9.081978797912598

Token 577: ' length' (ID: 5517)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1339593231678009
    2. '       ' → logprob: -2.7589592933654785
    3. 'length' (adapté à ' length') → logprob: -3.5089592933654785
    4. 'norm' → logprob: -4.1339592933654785
    5. 'dir' → logprob: -5.2589592933654785
    6. 'import' → logprob: -5.7589592933654785
    7. 'direction' → logprob: -5.8839592933654785
    8. 'distance' → logprob: -6.5089592933654785
    9. 'if' → logprob: -7.1339592933654785
    10. 'm' → logprob: -7.3839592933654785

Token 578: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036300041247159243
    2. '=' → logprob: -5.6286301612854
    3. '       ' → logprob: -11.128629684448242
    4. '   ' → logprob: -12.378629684448242
    5. ' ' → logprob: -13.378629684448242
    6. '_vec' → logprob: -13.503629684448242
    7. '<|end|>' → logprob: -13.628629684448242
    8. '_' → logprob: -14.003629684448242
    9. '	' → logprob: -14.128629684448242
    10. 's' → logprob: -14.253629684448242

Token 579: ' (' (ID: 350)
  Prédit: '(vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vec' → logprob: -0.0008918096427805722
    2. ' (' → logprob: -7.87589168548584
    3. '(' → logprob: -8.62589168548584
    4. '(v' → logprob: -9.62589168548584
    5. 'vec' → logprob: -9.87589168548584
    6. '(max' → logprob: -9.87589168548584
    7. '(abs' → logprob: -10.00089168548584
    8. '((' → logprob: -10.12589168548584
    9. '(math' → logprob: -11.00089168548584
    10. '(s' → logprob: -11.12589168548584

Token 580: 'vec' (ID: 3192)
  Prédit: '(vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vec' → logprob: -0.31335651874542236
    2. 'vec' → logprob: -1.3133565187454224
    3. ' (' → logprob: -10.063356399536133
    4. ' vec' → logprob: -10.188356399536133
    5. 'import' → logprob: -12.688356399536133
    6. '	vec' → logprob: -12.688356399536133
    7. '(' → logprob: -12.813356399536133
    8. '((' → logprob: -13.313356399536133
    9. 'vect' → logprob: -14.063356399536133
    10. '   ' → logprob: -14.188356399536133

Token 581: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.7432603272027336e-06
    2. 'to' → logprob: -13.625001907348633
    3. 'To' → logprob: -15.625001907348633
    4. 'sqrt' → logprob: -15.625001907348633
    5. '   ' → logprob: -15.750001907348633
    6. '       ' → logprob: -17.000001907348633
    7. '_' → logprob: -18.375001907348633
    8. ' to' → logprob: -19.125001907348633
    9. '_t' → logprob: -19.375001907348633
    10. 'vec' → logprob: -19.375001907348633

Token 582: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.00047773998812772334
    2. 'well' → logprob: -8.25047779083252
    3. '_to' → logprob: -8.62547779083252
    4. 'To' → logprob: -11.62547779083252
    5. 'w' → logprob: -11.87547779083252
    6. 'Well' → logprob: -11.87547779083252
    7. 'vec' → logprob: -12.00047779083252
    8. '2' → logprob: -13.12547779083252
    9. '.w' → logprob: -13.62547779083252
    10. 'to' → logprob: -13.75047779083252

Token 583: 'ell' (ID: 596)
  Prédit: 'ell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ell' → logprob: -0.00020950057660229504
    2. 'el' → logprob: -8.87520980834961
    3. '2' → logprob: -10.25020980834961
    4. 'all' → logprob: -11.75020980834961
    5. 'ec' → logprob: -11.87520980834961
    6. 'ector' → logprob: -12.00020980834961
    7. 'ect' → logprob: -12.50020980834961
    8. 'e' → logprob: -13.25020980834961
    9. 'al' → logprob: -13.50020980834961
    10. 'well' → logprob: -13.50020980834961

Token 584: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -5.0259150157216936e-05
    2. '.' → logprob: -10.25005054473877
    3. ' .' → logprob: -11.75005054473877
    4. 'x' → logprob: -13.00005054473877
    5. ').' → logprob: -13.12505054473877
    6. 'vec' → logprob: -13.62505054473877
    7. 'self' → logprob: -15.50005054473877
    8. '.vec' → logprob: -15.50005054473877
    9. '   ' → logprob: -15.87505054473877
    10. 'import' → logprob: -16.250049591064453

Token 585: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.007630177307873964
    2. ' **' → logprob: -4.882630348205566
    3. '*' → logprob: -10.757630348205566
    4. ' *' → logprob: -13.007630348205566
    5. '*self' → logprob: -15.507630348205566
    6. 'vec' → logprob: -16.50762939453125
    7. ')**' → logprob: -16.75762939453125
    8. '*object' → logprob: -16.75762939453125
    9. 'import' → logprob: -16.88262939453125
    10. '*v' → logprob: -17.13262939453125

Token 586: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021867557370569557
    2. ' ' → logprob: -8.500218391418457
    3. '0' → logprob: -11.125218391418457
    4. '   ' → logprob: -15.125218391418457
    5. '  ' → logprob: -16.500219345092773
    6. '    ' → logprob: -17.000219345092773
    7. '.' → logprob: -17.875219345092773
    8. '(' → logprob: -18.187719345092773
    9. '=' → logprob: -18.500219345092773
    10. '     ' → logprob: -18.562719345092773

Token 587: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.625001907348633
    4. '  ' → logprob: -20.500001907348633
    5. '```' → logprob: -20.625001907348633
    6. '²' → logprob: -21.250001907348633
    7. '۲' → logprob: -21.375001907348633
    8. ' ' → logprob: -21.750001907348633
    9. '
' → logprob: -21.750001907348633
    10. '    ' → logprob: -22.000001907348633

Token 588: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0619698166847229
    2. ' +' → logprob: -2.811969757080078
    3. '0' → logprob: -13.436969757080078
    4. '   ' → logprob: -15.186969757080078
    5. '+self' → logprob: -16.061969757080078
    6. ' ' → logprob: -16.436969757080078
    7. '+
' → logprob: -16.686969757080078
    8. '＋' → logprob: -17.561969757080078
    9. 'import' → logprob: -17.686969757080078
    10. ')' → logprob: -17.811969757080078

Token 589: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.0024854077491909266
    2. ' vec' → logprob: -6.002485275268555
    3. '	vec' → logprob: -12.127485275268555
    4. '   ' → logprob: -12.752485275268555
    5. '(vec' → logprob: -14.252485275268555
    6. 've' → logprob: -15.002485275268555
    7. '       ' → logprob: -15.502485275268555
    8. ' ' → logprob: -17.127485275268555
    9. '.vec' → logprob: -17.252485275268555
    10. '    ' → logprob: -17.502485275268555

Token 590: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. 'to' → logprob: -17.25
    3. '_TO' → logprob: -18.375
    4. 'To' → logprob: -19.25
    5. 'e' → logprob: -20.375
    6. '__' → logprob: -20.625
    7. 'o' → logprob: -20.75
    8. 'ot' → logprob: -21.375
    9. '   ' → logprob: -21.625
    10. '_t' → logprob: -21.625

Token 591: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.03115857020020485
    2. 'well' → logprob: -3.531158685684204
    3. 'ell' → logprob: -6.656158447265625
    4. 'wel' → logprob: -10.406158447265625
    5. 'w' → logprob: -10.531158447265625
    6. ' well' → logprob: -11.531158447265625
    7. '{' → logprob: -11.531158447265625
    8. 'Well' → logprob: -11.781158447265625
    9. 'vel' → logprob: -11.906158447265625
    10. 'vec' → logprob: -12.531158447265625

Token 592: 'ell' (ID: 596)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11816494166851044
    2. 'ec' → logprob: -3.8681650161743164
    3. 'ell' → logprob: -3.9931650161743164
    4. '_to' → logprob: -3.9931650161743164
    5. 'ector' → logprob: -4.243165016174316
    6. 'elow' → logprob: -4.493165016174316
    7. 'to' → logprob: -5.493165016174316
    8. 'e' → logprob: -5.493165016174316
    9. 'el' → logprob: -5.868165016174316
    10. 'ect' → logprob: -5.868165016174316

Token 593: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.000493937055580318
    2. '.' → logprob: -7.625494003295898
    3. '.x' → logprob: -12.750494003295898
    4. 'y' → logprob: -13.000494003295898
    5. ' .' → logprob: -14.250494003295898
    6. ' ' → logprob: -17.2504940032959
    7. '   ' → logprob: -17.8754940032959
    8. ' y' → logprob: -18.0004940032959
    9. '```' → logprob: -18.0004940032959
    10. '.py' → logprob: -18.1254940032959

Token 594: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.016363369300961494
    2. '**' → logprob: -4.141363143920898
    3. ' **)' → logprob: -8.391363143920898
    4. ')' → logprob: -9.391363143920898
    5. ')**' → logprob: -12.016363143920898
    6. '**)' → logprob: -12.016363143920898
    7. ' *' → logprob: -12.391363143920898
    8. ' ' → logprob: -14.016363143920898
    9. ' )' → logprob: -14.266363143920898
    10. '*' → logprob: -15.141363143920898

Token 595: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0040807779878377914
    2. ' ' → logprob: -5.504080772399902
    3. '0' → logprob: -13.004080772399902
    4. '1' → logprob: -16.12908172607422
    5. '(' → logprob: -17.00408172607422
    6. '   ' → logprob: -17.62908172607422
    7. '  ' → logprob: -18.12908172607422
    8. '.' → logprob: -19.44158172607422
    9. '    ' → logprob: -19.44158172607422
    10. ' ' → logprob: -19.50408172607422

Token 596: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '1' → logprob: -15.750075340270996
    4. '0' → logprob: -16.12507438659668
    5. '   ' → logprob: -16.12507438659668
    6. '  ' → logprob: -18.06257438659668
    7. '(' → logprob: -18.25007438659668
    8. '```' → logprob: -18.68757438659668
    9. '²' → logprob: -18.87507438659668
    10. '۲' → logprob: -19.25007438659668

Token 597: ')' (ID: 8)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.12693597376346588
    2. ')' → logprob: -2.1269359588623047
    3. ' )' → logprob: -12.501935958862305
    4. '**' → logprob: -13.001935958862305
    5. '   ' → logprob: -13.626935958862305
    6. '0' → logprob: -15.126935958862305
    7. '       ' → logprob: -15.501935958862305
    8. ' ' → logprob: -16.251935958862305
    9. '**)' → logprob: -17.501935958862305
    10. '```' → logprob: -17.501935958862305

Token 598: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.202379509806633
    2. ' **' → logprob: -1.7023794651031494
    3. ')' → logprob: -7.7023797035217285
    4. ')**' → logprob: -7.8273797035217285
    5. '
' → logprob: -9.95237922668457
    6. '0' → logprob: -10.57737922668457
    7. '*' → logprob: -11.20237922668457
    8. ' )' → logprob: -12.32737922668457
    9. '**
' → logprob: -12.82737922668457
    10. ' if' → logprob: -12.82737922668457

Token 599: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.000006675720215
    3. '-' → logprob: -15.250006675720215
    4. '(' → logprob: -15.625006675720215
    5. '.' → logprob: -17.3750057220459
    6. '   ' → logprob: -18.5000057220459
    7. ' -' → logprob: -19.8750057220459
    8. '(-' → logprob: -20.7500057220459
    9. ' ' → logprob: -20.8750057220459
    10. '  ' → logprob: -21.1250057220459

Token 600: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -13.125003814697266
    3. '(' → logprob: -14.000003814697266
    4. '-' → logprob: -14.250003814697266
    5. '.' → logprob: -16.625003814697266
    6. '(-' → logprob: -18.500003814697266
    7. '   ' → logprob: -19.000003814697266
    8. ' -' → logprob: -19.625003814697266
    9. '{' → logprob: -20.375003814697266
    10. '  ' → logprob: -21.437503814697266

Token 601: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00866740196943283
    2. '-' → logprob: -4.758667469024658
    3. '0' → logprob: -10.5086669921875
    4. '-.' → logprob: -11.2586669921875
    5. '.-' → logprob: -11.7586669921875
    6. '1' → logprob: -13.0086669921875
    7. '2' → logprob: -13.5086669921875
    8. ' -' → logprob: -14.5086669921875
    9. '5' → logprob: -15.0086669921875
    10. '3' → logprob: -17.0086669921875

Token 602: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -17.0
    3. '4' → logprob: -17.0625
    4. '```' → logprob: -17.625
    5. 'five' → logprob: -18.0
    6. '6' → logprob: -18.0625
    7. '25' → logprob: -18.0625
    8. '.' → logprob: -18.1875
    9. '   ' → logprob: -18.25
    10. '75' → logprob: -18.375

Token 603: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008204848505556583
    2. '
' → logprob: -5.133204936981201
    3. ' if' → logprob: -6.883204936981201
    4. '<|end|>' → logprob: -7.383204936981201
    5. 'if' → logprob: -8.133204460144043
    6. '        
' → logprob: -8.883204460144043
    7. ',' → logprob: -10.758204460144043
    8. ';if' → logprob: -10.883204460144043
    9. ' 
' → logprob: -11.008204460144043
    10. '[' → logprob: -11.008204460144043

Token 604: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13193774223327637
    2. '
' → logprob: -2.1319377422332764
    3. ' if' → logprob: -6.1319379806518555
    4. '        
' → logprob: -6.5069379806518555
    5. 'if' → logprob: -7.2569379806518555
    6. '   ' → logprob: -8.506937980651855
    7. ' 
' → logprob: -9.131937980651855
    8. '  
' → logprob: -9.631937980651855
    9. '    
' → logprob: -10.131937980651855
    10. '<|end|>' → logprob: -10.756937980651855

Token 605: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003645449411123991
    2. ' if' → logprob: -6.003645420074463
    3. '       ' → logprob: -6.753645420074463
    4. 'self' → logprob: -13.378645896911621
    5. 'return' → logprob: -14.628645896911621
    6. '        
' → logprob: -16.253644943237305
    7. '
' → logprob: -16.378644943237305
    8. ';if' → logprob: -16.378644943237305
    9. 'i' → logprob: -16.503644943237305
    10. '	if' → logprob: -16.503644943237305

Token 606: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.03804149478673935
    2. 'length' → logprob: -3.288041591644287
    3. '   ' → logprob: -17.163042068481445
    4. '	length' → logprob: -17.288042068481445
    5. '(length' → logprob: -18.038042068481445
    6. ' ' → logprob: -18.663042068481445
    7. 'leng' → logprob: -18.913042068481445
    8. ' lenght' → logprob: -18.913042068481445
    9. ' l' → logprob: -19.163042068481445
    10. ' leng' → logprob: -19.163042068481445

Token 607: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.17974083125591278
    2. ' ==' → logprob: -1.9297407865524292
    3. '>' → logprob: -4.179740905761719
    4. '==' → logprob: -5.804740905761719
    5. ' !=' → logprob: -6.929740905761719
    6. ':' → logprob: -11.304740905761719
    7. '!=' → logprob: -11.929740905761719
    8. ' ' → logprob: -12.554740905761719
    9. ' <' → logprob: -12.554740905761719
    10. '=' → logprob: -13.679740905761719

Token 608: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '۰' → logprob: -18.125709533691406
    4. '   ' → logprob: -19.000709533691406
    5. '<|end|>' → logprob: -19.375709533691406
    6. ' ' → logprob: -19.375709533691406
    7. '
' → logprob: -19.750709533691406
    8. ' 
' → logprob: -19.875709533691406
    9. '  ' → logprob: -20.000709533691406
    10. '>' → logprob: -20.000709533691406

Token 609: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '۰' → logprob: -17.250261306762695
    4. '>' → logprob: -18.937761306762695
    5. '00' → logprob: -19.187761306762695
    6. '=' → logprob: -19.312761306762695
    7. '<|end|>' → logprob: -19.562761306762695
    8. '٠' → logprob: -19.687761306762695
    9. '০' → logprob: -19.812761306762695
    10. '０' → logprob: -19.937761306762695

Token 610: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4741279184818268
    2. ':
' → logprob: -0.9741278886795044
    3. ':return' → logprob: -10.474127769470215
    4. '.' → logprob: -11.599127769470215
    5. ':
' → logprob: -12.099127769470215
    6. ' or' → logprob: -12.724127769470215
    7. ':

' → logprob: -13.349127769470215
    8. ' :
' → logprob: -13.474127769470215
    9. ' :' → logprob: -14.099127769470215
    10. '   ' → logprob: -14.724127769470215

Token 611: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06152321770787239
    2. ':
' → logprob: -3.061523199081421
    3. ':' → logprob: -4.4365234375
    4. ' return' → logprob: -8.0615234375
    5. ':return' → logprob: -8.3115234375
    6. '       ' → logprob: -8.8115234375
    7. '
' → logprob: -9.1865234375
    8. '   ' → logprob: -10.0615234375
    9. ' :
' → logprob: -10.1865234375
    10. ',' → logprob: -10.5615234375

Token 612: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0673881247639656
    2. 'self' → logprob: -3.1923880577087402
    3. ' return' → logprob: -4.06738805770874
    4. '           ' → logprob: -5.19238805770874
    5. '#' (adapté à ' #') → logprob: -7.56738805770874
    6. ' self' → logprob: -7.81738805770874
    7. 'pass' → logprob: -8.192388534545898
    8. ' pass' → logprob: -8.942388534545898
    9. '       ' → logprob: -9.567388534545898
    10. ' #' → logprob: -11.942388534545898

Token 613: ' Already' (ID: 72560)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07203719019889832
    2. ' return' → logprob: -3.3220372200012207
    3. 'self' → logprob: -3.5720372200012207
    4. '#' → logprob: -5.947037220001221
    5. ' self' → logprob: -6.572037220001221
    6. '       ' → logprob: -6.947037220001221
    7. ' #' → logprob: -9.072036743164062
    8. '           ' → logprob: -9.197036743164062
    9. 'pass' → logprob: -9.822036743164062
    10. '   ' → logprob: -10.072036743164062

Token 614: ' at' (ID: 540)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.008059635758399963
    2. ' facing' → logprob: -5.133059501647949
    3. 'at' → logprob: -6.258059501647949
    4. ' at' → logprob: -8.50805950164795
    5. 'face' → logprob: -12.38305950164795
    6. 'point' → logprob: -13.00805950164795
    7. ' f' → logprob: -13.88305950164795
    8. 'Facing' → logprob: -14.13305950164795
    9. '   ' → logprob: -14.25805950164795
    10. '```' → logprob: -14.50805950164795

Token 615: ' well' (ID: 1775)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2116308212280273
    2. 'well' → logprob: -1.3366308212280273
    3. 'Vector' → logprob: -1.5866308212280273
    4. 'the' → logprob: -1.8366308212280273
    5. ' well' → logprob: -3.3366308212280273
    6. ' Vector' → logprob: -4.086630821228027
    7. ' the' → logprob: -4.961630821228027
    8. ' self' → logprob: -5.211630821228027
    9. 'origin' → logprob: -5.211630821228027
    10. 'position' → logprob: -6.336630821228027

Token 616: ' position' (ID: 4010)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005257952958345413
    2. ' return' → logprob: -5.630258083343506
    3. 'return' → logprob: -6.505258083343506
    4. ',' → logprob: -9.505257606506348
    5. '
' → logprob: -10.630257606506348
    6. ':return' → logprob: -10.630257606506348
    7. '       ' → logprob: -10.880257606506348
    8. '               ' → logprob: -12.380257606506348
    9. ':' → logprob: -12.630257606506348
    10. 'self' → logprob: -13.005257606506348

Token 617: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015069360844790936
    2. '       ' → logprob: -4.265069484710693
    3. '
' → logprob: -7.515069484710693
    4. ',' → logprob: -9.015069007873535
    5. ':' → logprob: -9.890069007873535
    6. ':
' → logprob: -10.140069007873535
    7. ' return' → logprob: -10.515069007873535
    8. 'return' → logprob: -10.515069007873535
    9. '               ' → logprob: -10.640069007873535
    10. '            
' → logprob: -11.015069007873535

Token 618: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015343817649409175
    2. ' return' → logprob: -6.876534461975098
    3. 'return' → logprob: -7.626534461975098
    4. '       ' → logprob: -12.001534461975098
    5. '   ' → logprob: -12.876534461975098
    6. 'self' → logprob: -12.876534461975098
    7. '               ' → logprob: -14.126534461975098
    8. '
' → logprob: -14.251534461975098
    9. ' self' → logprob: -14.501534461975098
    10. '            
' → logprob: -15.126534461975098

Token 619: ' self' (ID: 1051)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00768494326621294
    2. ' return' → logprob: -5.007684707641602
    3. '           ' → logprob: -7.507684707641602
    4. 'self' (adapté à ' self') → logprob: -8.007684707641602
    5. '       ' → logprob: -9.507684707641602
    6. 'pass' → logprob: -11.507684707641602
    7. ' self' → logprob: -13.632684707641602
    8. '   ' → logprob: -14.132684707641602
    9. ' pass' → logprob: -14.757684707641602
    10. '               ' → logprob: -15.257684707641602

Token 620: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.0001652796781854704
    2. '.' → logprob: -8.750164985656738
    3. '.face' → logprob: -12.875164985656738
    4. '.faces' → logprob: -13.375164985656738
    5. '.fac' → logprob: -13.500164985656738
    6. ' .' → logprob: -14.500164985656738
    7. 'f' → logprob: -15.375164985656738
    8. '.direction' → logprob: -16.125165939331055
    9. 'Facing' → logprob: -16.625165939331055
    10. '.fe' → logprob: -16.750165939331055

Token 621: 'acing' (ID: 7997)
  Prédit: 'acing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -8.537868779967539e-06
    2. 'ac' → logprob: -12.750008583068848
    3. 'ace' → logprob: -12.750008583068848
    4. 'a' → logprob: -13.375008583068848
    5. 'acem' → logprob: -15.625008583068848
    6. 'aced' → logprob: -15.750008583068848
    7. 'aci' → logprob: -16.25000762939453
    8. 'acting' → logprob: -16.37500762939453
    9. '
' → logprob: -16.62500762939453
    10. 'acin' → logprob: -16.75000762939453

Token 622: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2814526855945587
    2. ' =' → logprob: -1.4064526557922363
    3. '.' → logprob: -8.406453132629395
    4. ' ' → logprob: -10.031453132629395
    5. '.=' → logprob: -10.656453132629395
    6. '.x' → logprob: -12.281453132629395
    7. '=
' → logprob: -13.406453132629395
    8. '=self' → logprob: -13.531453132629395
    9. '=None' → logprob: -14.156453132629395
    10. ')' → logprob: -15.406453132629395

Token 623: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.007915474474430084
    2. 'self' → logprob: -4.882915496826172
    3. ' Vector' → logprob: -8.382915496826172
    4. 'vec' → logprob: -9.507915496826172
    5. ' self' → logprob: -12.257915496826172
    6. 'vector' → logprob: -14.382915496826172
    7. 'Vec' → logprob: -14.757915496826172
    8. '(Vector' → logprob: -15.257915496826172
    9. '	Vector' → logprob: -16.507915496826172
    10. 'vect' → logprob: -16.632915496826172

Token 624: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008706060471013188
    2. 'D' → logprob: -7.250870704650879
    3. 'Vector' → logprob: -8.750870704650879
    4. '.Vector' → logprob: -14.375870704650879
    5. 'd' → logprob: -15.000870704650879
    6. 'To' → logprob: -15.375870704650879
    7. ' Vector' → logprob: -15.625870704650879
    8. '(Vector' → logprob: -15.625870704650879
    9. 'C' → logprob: -15.875870704650879
    10. 'W' → logprob: -16.125869750976562

Token 625: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.2113979209971149e-05
    2. 'Vector' → logprob: -11.375012397766113
    3. '(' → logprob: -15.375012397766113
    4. '(Vector' → logprob: -15.875012397766113
    5. '2' → logprob: -16.500011444091797
    6. '.' → logprob: -16.625011444091797
    7. '0' → logprob: -17.000011444091797
    8. ' Vector' → logprob: -17.750011444091797
    9. '.Vector' → logprob: -17.750011444091797
    10. '.D' → logprob: -18.250011444091797

Token 626: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007338149473071098
    2. '0' → logprob: -5.007338047027588
    3. '1' → logprob: -7.382338047027588
    4. '(self' → logprob: -15.507338523864746
    5. ' (' → logprob: -15.757338523864746
    6. '   ' → logprob: -16.75733757019043
    7. ' ' → logprob: -17.38233757019043
    8. '()' → logprob: -19.00733757019043
    9. '(-' → logprob: -19.25733757019043
    10. '  ' → logprob: -19.38233757019043

Token 627: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054925840348005295
    2. '1' → logprob: -2.9299259185791016
    3. ' ' → logprob: -10.304925918579102
    4. 'self' → logprob: -12.179925918579102
    5. '   ' → logprob: -13.179925918579102
    6. '(' → logprob: -13.304925918579102
    7. '  ' → logprob: -14.929925918579102
    8. '       ' → logprob: -15.679925918579102
    9. '
' → logprob: -15.804925918579102
    10. '    ' → logprob: -16.0549259185791

Token 628: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.012561098672449589
    2. ',' → logprob: -4.387561321258545
    3. '0' → logprob: -10.012560844421387
    4. '.,' → logprob: -12.762560844421387
    5. ' ,' → logprob: -12.887560844421387
    6. ' ' → logprob: -15.825060844421387
    7. ' .' → logprob: -15.887560844421387
    8. ',.' → logprob: -15.887560844421387
    9. '٫' → logprob: -16.325061798095703
    10. '1' → logprob: -16.575061798095703

Token 629: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.249780638725497e-05
    2. ' ' → logprob: -10.375032424926758
    3. '   ' → logprob: -13.875032424926758
    4. '  ' → logprob: -16.250032424926758
    5. '       ' → logprob: -17.250032424926758
    6. '    ' → logprob: -17.500032424926758
    7. '1' → logprob: -17.625032424926758
    8. '           ' → logprob: -17.625032424926758
    9. ')' → logprob: -17.750032424926758
    10. '```' → logprob: -17.875032424926758

Token 630: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6937578320503235
    2. ')
' → logprob: -0.6937578320503235
    3. '       ' → logprob: -7.443758010864258
    4. ')
' → logprob: -10.943758010864258
    5. ')return' → logprob: -12.693758010864258
    6. ')

' → logprob: -13.068758010864258
    7. '           ' → logprob: -13.693758010864258
    8. ' )
' → logprob: -14.693758010864258
    9. '   ' → logprob: -14.943758010864258
    10. ' )' → logprob: -15.443758010864258

Token 631: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000892759533599019
    2. 'else' → logprob: -7.250892639160156
    3. ' else' → logprob: -8.875892639160156
    4. '           ' → logprob: -10.375892639160156
    5. '<|end|>' → logprob: -12.625892639160156
    6. 'return' → logprob: -13.250892639160156
    7. '   ' → logprob: -13.500892639160156
    8. ')' → logprob: -13.500892639160156
    9. '```' → logprob: -14.000892639160156
    10. '
' → logprob: -14.625892639160156

Token 632: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3307543992996216
    2. '       ' → logprob: -1.5807543992996216
    3. ' else' → logprob: -2.580754280090332
    4. '   ' → logprob: -10.330754280090332
    5. 'elif' → logprob: -10.580754280090332
    6. '	else' → logprob: -10.955754280090332
    7. '     ' → logprob: -13.705754280090332
    8. '
' → logprob: -13.830754280090332
    9. '      ' → logprob: -14.205754280090332
    10. '_else' → logprob: -14.705754280090332

Token 633: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20376509428024292
    2. ':' → logprob: -2.3287651538848877
    3. '           ' → logprob: -2.4537651538848877
    4. '       ' → logprob: -7.828764915466309
    5. ' :
' → logprob: -8.453764915466309
    6. 'else' → logprob: -9.203764915466309
    7. ' else' → logprob: -9.453764915466309
    8. 'self' → logprob: -10.453764915466309
    9. ' :' → logprob: -10.703764915466309
    10. ':

' → logprob: -11.078764915466309

Token 634: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002370416419580579
    2. 'self' → logprob: -6.752370357513428
    3. ' self' → logprob: -6.752370357513428
    4. '       ' → logprob: -11.127370834350586
    5. '               ' → logprob: -12.377370834350586
    6. '          ' → logprob: -12.627370834350586
    7. '   ' → logprob: -12.627370834350586
    8. '         ' → logprob: -13.002370834350586
    9. '	       ' → logprob: -13.502370834350586
    10. '		' → logprob: -14.502370834350586

Token 635: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01920180767774582
    2. ' self' → logprob: -4.144201755523682
    3. '           ' → logprob: -6.394201755523682
    4. '       ' → logprob: -6.519201755523682
    5. '   ' → logprob: -11.89420223236084
    6. '               ' → logprob: -12.64420223236084
    7. 'Vector' → logprob: -13.39420223236084
    8. '	self' → logprob: -13.39420223236084
    9. '```' → logprob: -14.64420223236084
    10. ' ' → logprob: -14.64420223236084

Token 636: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.0017247996293008327
    2. '.' → logprob: -6.376724720001221
    3. ' .' → logprob: -11.501725196838379
    4. ').' → logprob: -12.751725196838379
    5. '.face' → logprob: -13.876725196838379
    6. 'f' → logprob: -13.876725196838379
    7. '].' → logprob: -14.001725196838379
    8. '.faces' → logprob: -14.251725196838379
    9. '           ' → logprob: -14.501725196838379
    10. '   ' → logprob: -14.626725196838379

Token 637: 'acing' (ID: 7997)
  Prédit: 'acing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -2.696889623621246e-06
    2. 'ac' → logprob: -14.25000286102295
    3. 'a' → logprob: -14.37500286102295
    4. 'aced' → logprob: -15.62500286102295
    5. 'f' → logprob: -15.87500286102295
    6. '_' → logprob: -16.250001907348633
    7. '#' → logprob: -16.375001907348633
    8. 'ace' → logprob: -16.375001907348633
    9. 'ACING' → logprob: -16.375001907348633
    10. 'acting' → logprob: -16.500001907348633

Token 638: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. '   ' → logprob: -16.91022491455078
    4. '.' → logprob: -16.91022491455078
    5. ' ' → logprob: -17.53522491455078
    6. '＝' → logprob: -17.53522491455078
    7. '=self' → logprob: -17.78522491455078
    8. '.=' → logprob: -18.91022491455078
    9. '=
' → logprob: -19.03522491455078
    10. '	' → logprob: -19.66022491455078

Token 639: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.4842155873775482
    2. 'vec' → logprob: -0.9842156171798706
    3. ' Vector' → logprob: -5.10921573638916
    4. ' vec' → logprob: -5.60921573638916
    5. '   ' → logprob: -8.60921573638916
    6. 'vector' → logprob: -10.10921573638916
    7. 'vect' → logprob: -10.35921573638916
    8. '       ' → logprob: -10.73421573638916
    9. 'Vec' → logprob: -10.79671573638916
    10. '  ' → logprob: -11.10921573638916

Token 640: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4974866644479334e-05
    2. 'To' → logprob: -11.125015258789062
    3. 'to' → logprob: -17.125015258789062
    4. '_to' → logprob: -17.125015258789062
    5. 'Vector' → logprob: -18.625015258789062
    6. '{' → logprob: -18.625015258789062
    7. '       ' → logprob: -19.000015258789062
    8. '(' → logprob: -19.000015258789062
    9. '   ' → logprob: -19.250015258789062
    10. '(vec' → logprob: -19.500015258789062

Token 641: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00022094044834375381
    2. '2' → logprob: -9.000221252441406
    3. '(vec' → logprob: -10.000221252441406
    4. 'vec' → logprob: -10.500221252441406
    5. 'Vector' → logprob: -11.750221252441406
    6. '(' → logprob: -12.250221252441406
    7. 'd' → logprob: -12.625221252441406
    8. '(vector' → logprob: -13.000221252441406
    9. 'vector' → logprob: -13.375221252441406
    10. 'O' → logprob: -13.875221252441406

Token 642: '(vec' (ID: 57650)
  Prédit: '(vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vec' → logprob: -1.5048530030981055e-06
    2. 'vec' → logprob: -13.875001907348633
    3. '(' → logprob: -14.625001907348633
    4. '(
' → logprob: -17.125001907348633
    5. '	vec' → logprob: -19.875001907348633
    6. '((' → logprob: -20.125001907348633
    7. '(vector' → logprob: -20.750001907348633
    8. '(Vec' → logprob: -21.000001907348633
    9. '   ' → logprob: -21.375001907348633
    10. '(v' → logprob: -21.625001907348633

Token 643: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. 'to' → logprob: -19.25
    3. 'To' → logprob: -20.5
    4. '   ' → logprob: -20.875
    5. '_TO' → logprob: -21.5
    6. '-to' → logprob: -23.25
    7. '_t' → logprob: -23.625
    8. ' to' → logprob: -23.625
    9. '       ' → logprob: -24.75
    10. '```' → logprob: -24.875

Token 644: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.00011963568249484524
    2. 'well' → logprob: -9.12511920928955
    3. 'w' → logprob: -11.62511920928955
    4. 'e' → logprob: -15.50011920928955
    5. '-w' → logprob: -15.50011920928955
    6. ' well' → logprob: -15.75011920928955
    7. 'to' → logprob: -16.000120162963867
    8. '	w' → logprob: -16.000120162963867
    9. 'Well' → logprob: -16.125120162963867
    10. '_to' → logprob: -16.250120162963867

Token 645: 'ell' (ID: 596)
  Prédit: 'ell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ell' → logprob: -0.00017362393555231392
    2. 'well' → logprob: -9.500173568725586
    3. 'all' → logprob: -9.625173568725586
    4. 'el' → logprob: -10.625173568725586
    5. '2' → logprob: -13.500173568725586
    6. 'e' → logprob: -14.250173568725586
    7. '_' → logprob: -14.500173568725586
    8. '{' → logprob: -14.500173568725586
    9. 'w' → logprob: -14.875173568725586
    10. 'to' → logprob: -14.875173568725586

Token 646: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0002354832977289334
    2. '.' → logprob: -8.375235557556152
    3. ' .' → logprob: -12.500235557556152
    4. 'x' → logprob: -14.000235557556152
    5. '.scale' → logprob: -16.125234603881836
    6. '   ' → logprob: -16.625234603881836
    7. '.vector' → logprob: -16.875234603881836
    8. ').' → logprob: -17.250234603881836
    9. 'vec' → logprob: -18.000234603881836
    10. '```' → logprob: -18.875234603881836

Token 647: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6931476593017578
    2. ' /' → logprob: -0.6931476593017578
    3. '   ' → logprob: -14.818147659301758
    4. ' ' → logprob: -17.568147659301758
    5. '```' → logprob: -17.693147659301758
    6. '[length' → logprob: -17.943147659301758
    7. ' ' → logprob: -18.193147659301758
    8. ' /
' → logprob: -18.943147659301758
    9. '/
' → logprob: -19.068147659301758
    10. 'length' → logprob: -19.193147659301758

Token 648: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -3.547789674485102e-05
    2. ' length' → logprob: -10.250035285949707
    3. 'leng' → logprob: -21.750036239624023
    4. '(length' → logprob: -22.250036239624023
    5. '[length' → logprob: -22.875036239624023
    6. ',length' → logprob: -23.000036239624023
    7. '	length' → logprob: -23.500036239624023
    8. 'ength' → logprob: -23.750036239624023
    9. 'len' → logprob: -24.000036239624023
    10. '_length' → logprob: -24.000036239624023

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008417880744673312
    2. ' ,' → logprob: -7.1258416175842285
    3. ',
' → logprob: -10.250842094421387
    4. ',v' → logprob: -14.125842094421387
    5. ',self' → logprob: -15.000842094421387
    6. ',var' → logprob: -15.500842094421387
    7. ',

' → logprob: -15.625842094421387
    8. ',float' → logprob: -15.750842094421387
    9. ',\
' → logprob: -16.62584114074707
    10. 'vec' → logprob: -17.00084114074707

Token 650: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.31326377391815186
    2. ' vec' → logprob: -1.3132637739181519
    3. '	vec' → logprob: -13.938263893127441
    4. 'vector' → logprob: -14.938263893127441
    5. '(vec' → logprob: -14.938263893127441
    6. ' vect' → logprob: -15.313263893127441
    7. 'vect' → logprob: -16.313262939453125
    8. ' vector' → logprob: -16.313262939453125
    9. 've' → logprob: -16.813262939453125
    10. '_vec' → logprob: -16.938262939453125

Token 651: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -6.704273118884885e-07
    2. 'to' → logprob: -14.625000953674316
    3. '.to' → logprob: -17.125
    4. 'To' → logprob: -17.125
    5. '_TO' → logprob: -18.375
    6. '   ' → logprob: -18.5
    7. '-to' → logprob: -19.25
    8. 'o' → logprob: -19.5
    9. '```' → logprob: -19.625
    10. '_' → logprob: -20.0

Token 652: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.1442519724369049
    2. 'well' → logprob: -2.019252061843872
    3. 'ell' → logprob: -7.644251823425293
    4. 'w' → logprob: -7.769251823425293
    5. 'vec' → logprob: -8.019251823425293
    6. 'wel' → logprob: -8.269251823425293
    7. 'length' → logprob: -10.144251823425293
    8. 'len' → logprob: -12.019251823425293
    9. 'Well' → logprob: -12.144251823425293
    10. 'all' → logprob: -12.519251823425293

Token 653: 'ell' (ID: 596)
  Prédit: 'ell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ell' → logprob: -0.003196131670847535
    2. 'el' → logprob: -5.8781962394714355
    3. '_to' → logprob: -8.878195762634277
    4. '_w' → logprob: -9.378195762634277
    5. 'ol' → logprob: -10.003195762634277
    6. 'to' → logprob: -10.128195762634277
    7. 'well' → logprob: -10.878195762634277
    8. 'w' → logprob: -11.378195762634277
    9. 'tow' → logprob: -11.378195762634277
    10. 'ow' → logprob: -11.628195762634277

Token 654: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00012701898231171072
    2. '.' → logprob: -9.500126838684082
    3. 'y' → logprob: -9.875126838684082
    4. '.x' → logprob: -15.000126838684082
    5. ' .' → logprob: -15.125126838684082
    6. ' ' → logprob: -16.6251277923584
    7. '_y' → logprob: -17.2501277923584
    8. ' y' → logprob: -17.3751277923584
    9. '	y' → logprob: -17.3751277923584
    10. '   ' → logprob: -17.7501277923584

Token 655: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4740833044052124
    2. '/' → logprob: -0.9740833044052124
    3. '/l' → logprob: -13.474082946777344
    4. '/code' → logprob: -14.099082946777344
    5. ')' → logprob: -14.474082946777344
    6. ' /
' → logprob: -14.724082946777344
    7. ' ' → logprob: -14.849082946777344
    8. '/usr' → logprob: -14.974082946777344
    9. '   ' → logprob: -15.349082946777344
    10. ' ' → logprob: -15.599082946777344

Token 656: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.00033546582562848926
    2. ' length' → logprob: -8.000335693359375
    3. '(length' → logprob: -20.625335693359375
    4. '[length' → logprob: -21.625335693359375
    5. '	length' → logprob: -21.750335693359375
    6. '   ' → logprob: -21.750335693359375
    7. ',length' → logprob: -22.125335693359375
    8. 'leng' → logprob: -22.250335693359375
    9. ' ' → logprob: -23.375335693359375
    10. ')' → logprob: -23.500335693359375

Token 657: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ')
' → logprob: -11.875009536743164
    3. '       ' → logprob: -13.250009536743164
    4. ' )' → logprob: -14.125009536743164
    5. '   ' → logprob: -17.000009536743164
    6. ')return' → logprob: -17.000009536743164
    7. '<|end|>' → logprob: -17.500009536743164
    8. '))' → logprob: -18.625009536743164
    9. '),' → logprob: -19.125009536743164
    10. ')

' → logprob: -19.250009536743164

Token 658: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01895304210484028
    2. '<|end|>' → logprob: -4.0189528465271
    3. '<|end|>' → logprob: -7.6439528465271
    4. '
' → logprob: -8.768953323364258
    5. 'def' → logprob: -9.643953323364258
    6. '    
' → logprob: -10.143953323364258
    7. ')' → logprob: -10.643953323364258
    8. '```' → logprob: -11.018953323364258
    9. 'class' → logprob: -12.643953323364258
    10. '.' → logprob: -12.768953323364258

Token 659: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0626692846417427
    2. 'def' (adapté à ' def') → logprob: -2.812669277191162
    3. '<|end|>' → logprob: -7.437669277191162
    4. ' def' → logprob: -10.06266975402832
    5. '<|end|>' → logprob: -10.43766975402832
    6. '    
' → logprob: -11.56266975402832
    7. '	def' → logprob: -11.68766975402832
    8. '#' → logprob: -12.31266975402832
    9. ')' → logprob: -12.56266975402832
    10. '```' → logprob: -12.68766975402832

Token 660: ' turn' (ID: 3716)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.015697872266173363
    2. 'step' → logprob: -4.265697956085205
    3. ' move' → logprob: -6.640697956085205
    4. 'walk' → logprob: -9.640697479248047
    5. 'advance' → logprob: -9.640697479248047
    6. ' step' → logprob: -10.015697479248047
    7. 'rotate' → logprob: -10.765697479248047
    8. 'turn' → logprob: -11.015697479248047
    9. 'take' → logprob: -12.765697479248047
    10. 'update' → logprob: -12.890697479248047

Token 661: '_right' (ID: 24402)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.021629756316542625
    2. 'left' → logprob: -4.896629810333252
    3. '(' → logprob: -5.021629810333252
    4. '_left' → logprob: -5.521629810333252
    5. 'self' → logprob: -5.896629810333252
    6. '_(' → logprob: -8.396629333496094
    7. '_' → logprob: -9.146629333496094
    8. '_right' → logprob: -9.396629333496094
    9. '   ' → logprob: -9.646629333496094
    10. ' (' → logprob: -10.396629333496094

Token 662: '_' (ID: 62)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011559356935322285
    2. '(' → logprob: -6.876155853271484
    3. ' (' → logprob: -9.126155853271484
    4. '(
' → logprob: -12.001155853271484
    5. '   ' → logprob: -12.751155853271484
    6. 'self' → logprob: -13.251155853271484
    7. '()' → logprob: -13.376155853271484
    8. '       ' → logprob: -14.126155853271484
    9. '	self' → logprob: -15.251155853271484
    10. '(s' → logprob: -15.626155853271484

Token 663: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.11206284165382385
    2. '45' → logprob: -2.737062931060791
    3. '(self' → logprob: -3.362062931060791
    4. '(' → logprob: -6.112062931060791
    5. '()' → logprob: -6.737062931060791
    6. 'by' → logprob: -7.362062931060791
    7. 'self' → logprob: -7.362062931060791
    8. 'angle' → logprob: -7.487062931060791
    9. '```' → logprob: -7.737062931060791
    10. 'degrees' → logprob: -8.362062454223633

Token 664: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.130576806142926e-05
    2. '(' → logprob: -11.375031471252441
    3. 'self' → logprob: -11.375031471252441
    4. ' (' → logprob: -12.625031471252441
    5. '()' → logprob: -14.000031471252441
    6. '   ' → logprob: -14.250031471252441
    7. 'degree' → logprob: -14.375031471252441
    8. '_degree' → logprob: -14.625031471252441
    9. 'degrees' → logprob: -14.875031471252441
    10. '_(' → logprob: -15.125031471252441

Token 665: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43838924169540405
    2. '):
' → logprob: -1.4383893013000488
    3. ')' → logprob: -2.438389301300049
    4. 'self' → logprob: -4.188389301300049
    5. '(self' → logprob: -4.313389301300049
    6. ')(' → logprob: -6.688389301300049
    7. '   ' → logprob: -8.81338882446289
    8. '       ' → logprob: -9.31338882446289
    9. ')
' → logprob: -9.56338882446289
    10. '):
' → logprob: -9.81338882446289

Token 666: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24691425263881683
    2. 'self' → logprob: -1.746914267539978
    3. ' self' → logprob: -3.1219141483306885
    4. '#' → logprob: -8.49691390991211
    5. '90' → logprob: -9.62191390991211
    6. '   ' → logprob: -10.24691390991211
    7. 'new' → logprob: -10.62191390991211
    8. 'rot' → logprob: -11.49691390991211
    9. ' new' → logprob: -11.62191390991211
    10. '```' → logprob: -11.62191390991211

Token 667: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007601958932355046
    2. ' self' → logprob: -7.625760078430176
    3. '       ' → logprob: -8.250760078430176
    4. 'new' → logprob: -12.125760078430176
    5. 'old' → logprob: -12.500760078430176
    6. 'def' → logprob: -14.000760078430176
    7. '#' (adapté à ' #') → logprob: -14.625760078430176
    8. 'x' → logprob: -15.250760078430176
    9. 'rot' → logprob: -16.250761032104492
    10. '	self' → logprob: -16.250761032104492

Token 668: ' Rotate' (ID: 98562)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007603150443173945
    2. '#' → logprob: -8.125760078430176
    3. 'new' → logprob: -8.250760078430176
    4. 'old' → logprob: -9.250760078430176
    5. ' self' → logprob: -9.875760078430176
    6. 'rot' → logprob: -10.750760078430176
    7. '       ' → logprob: -11.250760078430176
    8. 'def' → logprob: -11.625760078430176
    9. '   ' → logprob: -12.125760078430176
    10. 'temp' → logprob: -13.125760078430176

Token 669: ' facing' (ID: 20511)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003579049138352275
    2. ' self' → logprob: -6.003579139709473
    3. '90' → logprob: -7.128579139709473
    4. '       ' → logprob: -8.753579139709473
    5. '(self' → logprob: -9.128579139709473
    6. '   ' → logprob: -11.503579139709473
    7. 'def' → logprob: -11.753579139709473
    8. '	self' → logprob: -12.378579139709473
    9. '
' → logprob: -12.503579139709473
    10. 'the' → logprob: -12.628579139709473

Token 670: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29093706607818604
    2. 'self' → logprob: -1.665937066078186
    3. '(self' → logprob: -2.9159369468688965
    4. '90' → logprob: -5.2909369468688965
    5. '(
' → logprob: -6.5409369468688965
    6. ' =' → logprob: -6.7909369468688965
    7. ' (' → logprob: -7.9159369468688965
    8. '45' → logprob: -8.040937423706055
    9. ' self' → logprob: -8.540937423706055
    10. '=' → logprob: -8.540937423706055

Token 671: '90' (ID: 2744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18351399898529053
    2. '(-' → logprob: -2.05851411819458
    3. 'self' → logprob: -3.93351411819458
    4. '(self' → logprob: -4.55851411819458
    5. '90' → logprob: -5.43351411819458
    6. 'by' → logprob: -6.18351411819458
    7. '-' → logprob: -6.43351411819458
    8. 'f' → logprob: -7.18351411819458
    9. 'Vector' → logprob: -8.933513641357422
    10. ' by' → logprob: -8.933513641357422

Token 672: ' degrees' (ID: 18210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9629918336868286
    2. '(self' → logprob: -1.9629918336868286
    3. '   ' → logprob: -2.212991714477539
    4. 'self' → logprob: -2.212991714477539
    5. '_' → logprob: -2.462991714477539
    6. ',' → logprob: -3.462991714477539
    7. ' self' → logprob: -3.712991714477539
    8. '    ' → logprob: -4.087991714477539
    9. '       ' → logprob: -4.212991714477539
    10. '(' → logprob: -4.462991714477539

Token 673: ' clockwise' (ID: 141888)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26048558950424194
    2. '=' → logprob: -2.0104856491088867
    3. 'self' → logprob: -3.0104856491088867
    4. '(' → logprob: -4.135485649108887
    5. '90' → logprob: -4.135485649108887
    6. ' self' → logprob: -5.135485649108887
    7. '(-' → logprob: -5.385485649108887
    8. ' (' → logprob: -6.760485649108887
    9. '(self' → logprob: -7.385485649108887
    10. ',' → logprob: -7.635485649108887

Token 674: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20203368365764618
    2. '       ' → logprob: -1.8270336389541626
    3. ' self' → logprob: -4.452033519744873
    4. '=' → logprob: -5.327033519744873
    5. 'def' → logprob: -5.702033519744873
    6. ' =' → logprob: -6.577033519744873
    7. 'new' → logprob: -8.327033996582031
    8. '=self' → logprob: -8.702033996582031
    9. '90' → logprob: -9.202033996582031
    10. ' def' → logprob: -9.702033996582031

Token 675: 'right' (ID: 2460)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12657009065151215
    2. ')' → logprob: -2.626569986343384
    3. 'self' → logprob: -3.751569986343384
    4. ' -' → logprob: -4.501570224761963
    5. '90' → logprob: -5.126570224761963
    6. '-self' → logprob: -6.001570224761963
    7. '-)' → logprob: -6.376570224761963
    8. ' self' → logprob: -6.751570224761963
    9. 'degree' → logprob: -9.001569747924805
    10. 'negative' → logprob: -9.376569747924805

Token 676: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3441702127456665
    2. ')
' → logprob: -1.3441702127456665
    3. '):' → logprob: -4.344170093536377
    4. '):
' → logprob: -4.719170093536377
    5. '       ' → logprob: -5.844170093536377
    6. '   ' → logprob: -6.094170093536377
    7. '90' → logprob: -6.719170093536377
    8. ')
' → logprob: -7.219170093536377
    9. ' )
' → logprob: -8.594170570373535
    10. 'def' → logprob: -8.719170570373535

Token 677: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32460179924964905
    2. 'self' → logprob: -1.5746017694473267
    3. '=' → logprob: -2.824601888656616
    4. ' =' → logprob: -4.949601650238037
    5. ' self' → logprob: -6.074601650238037
    6. '
' → logprob: -7.324601650238037
    7. '   ' → logprob: -8.449602127075195
    8. '        
' → logprob: -8.699602127075195
    9. '=self' → logprob: -9.574602127075195
    10. '=
' → logprob: -9.574602127075195

Token 678: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004036014433950186
    2. '       ' → logprob: -6.004035949707031
    3. ' self' → logprob: -6.504035949707031
    4. 'new' → logprob: -10.129035949707031
    5. 'old' → logprob: -11.379035949707031
    6. 'x' → logprob: -12.004035949707031
    7. 'def' → logprob: -13.754035949707031
    8. '	self' → logprob: -13.754035949707031
    9. '   ' → logprob: -15.004035949707031
    10. 'return' → logprob: -15.004035949707031

Token 679: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.0031853171531111
    2. '.' → logprob: -5.753185272216797
    3. ' .' → logprob: -12.628185272216797
    4. '\.' → logprob: -13.878185272216797
    5. '   ' → logprob: -14.128185272216797
    6. 'f' → logprob: -14.253185272216797
    7. '`.' → logprob: -15.003185272216797
    8. ').' → logprob: -15.128185272216797
    9. '	f' → logprob: -15.378185272216797
    10. '.face' → logprob: -15.378185272216797

Token 680: 'acing' (ID: 7997)
  Prédit: 'acing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -5.512236498361744e-07
    2. 'a' → logprob: -15.625000953674316
    3. 'ac' → logprob: -16.25
    4. 'ace' → logprob: -16.375
    5. 'acting' → logprob: -18.125
    6. 'ACING' → logprob: -18.125
    7. 'Facing' → logprob: -18.25
    8. 'aced' → logprob: -18.5
    9. '#' → logprob: -18.625
    10. '
' → logprob: -19.0

Token 681: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141518115997314
    2. ' =' → logprob: -1.7014151811599731
    3. ' ' → logprob: -13.951415061950684
    4. '=self' → logprob: -14.826415061950684
    5. ',' → logprob: -15.951415061950684
    6. '=

' → logprob: -16.451416015625
    7. '＝' → logprob: -16.576416015625
    8. '.=' → logprob: -16.576416015625
    9. '.' → logprob: -16.701416015625
    10. '=
' → logprob: -17.076416015625

Token 682: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18379008769989014
    2. 'Vector' → logprob: -1.9337900876998901
    3. ' self' → logprob: -3.8087902069091797
    4. ' Vector' → logprob: -6.80879020690918
    5. '   ' → logprob: -13.18379020690918
    6. 'Self' → logprob: -13.18379020690918
    7. ' ' → logprob: -13.80879020690918
    8. '(self' → logprob: -13.80879020690918
    9. 'vector' → logprob: -13.80879020690918
    10. '	self' → logprob: -14.05879020690918

Token 683: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -7.982165698194876e-05
    2. '.' → logprob: -9.500080108642578
    3. ' .' → logprob: -12.875080108642578
    4. '.fac' → logprob: -13.500080108642578
    5. '.face' → logprob: -14.375080108642578
    6. 'f' → logprob: -16.125080108642578
    7. '.faces' → logprob: -16.625080108642578
    8. '.rotate' → logprob: -17.000080108642578
    9. '`.' → logprob: -17.750080108642578
    10. '​.' → logprob: -17.875080108642578

Token 684: 'acing' (ID: 7997)
  Prédit: 'acing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -5.919942486798391e-05
    2. 'ace' → logprob: -9.750059127807617
    3. 'aced' → logprob: -14.500059127807617
    4. 'ac' → logprob: -16.000059127807617
    5. 'acem' → logprob: -16.625059127807617
    6. '
' → logprob: -17.875059127807617
    7. '#' → logprob: -18.000059127807617
    8. '_' → logprob: -18.000059127807617
    9. 'aci' → logprob: -18.000059127807617
    10. 'acet' → logprob: -18.500059127807617

Token 685: '.rotate' (ID: 68544)
  Prédit: '.rotate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rotate' → logprob: -0.00015943869948387146
    2. '.' → logprob: -8.75015926361084
    3. ' .' → logprob: -14.50015926361084
    4. '.rot' → logprob: -15.12515926361084
    5. '.scale' → logprob: -15.87515926361084
    6. 'rotate' → logprob: -17.000160217285156
    7. '   ' → logprob: -18.125160217285156
    8. '.rename' → logprob: -18.625160217285156
    9. '.ro' → logprob: -18.750160217285156
    10. '.Rotate' → logprob: -18.875160217285156

Token 686: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.00671809446066618
    2. '(' → logprob: -5.006718158721924
    3. '-' → logprob: -12.881717681884766
    4. '(+' → logprob: -15.881717681884766
    5. '90' → logprob: -16.756717681884766
    6. '```' → logprob: -18.381717681884766
    7. ' (-' → logprob: -18.506717681884766
    8. ' (' → logprob: -18.881717681884766
    9. '(
' → logprob: -19.131717681884766
    10. '((' → logprob: -19.131717681884766

Token 687: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '9' → logprob: -16.250001907348633
    4. ')' → logprob: -18.625001907348633
    5. '   ' → logprob: -19.500001907348633
    6. '  ' → logprob: -19.625001907348633
    7. '
' → logprob: -20.375001907348633
    8. '```' → logprob: -20.625001907348633
    9. '900' → logprob: -21.000001907348633
    10. '=' → logprob: -21.250001907348633

Token 688: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160349458805285e-05
    2. ')
' → logprob: -11.500011444091797
    3. ' )' → logprob: -14.375011444091797
    4. ')

' → logprob: -16.125011444091797
    5. '<|end|>' → logprob: -16.250011444091797
    6. '   ' → logprob: -16.625011444091797
    7. ')return' → logprob: -17.500011444091797
    8. ' ' → logprob: -18.500011444091797
    9. '       ' → logprob: -18.625011444091797
    10. ')}' → logprob: -18.750011444091797

Token 689: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 690: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005640312563627958
    2. '   ' → logprob: -5.380640506744385
    3. ' def' → logprob: -7.005640506744385
    4. '<|end|>' → logprob: -10.005640029907227
    5. '	def' → logprob: -10.130640029907227
    6. '<|end|>' → logprob: -11.380640029907227
    7. '
' → logprob: -11.755640029907227
    8. '  ' → logprob: -13.130640029907227
    9. '    
' → logprob: -13.130640029907227
    10. ' ' → logprob: -13.255640029907227

Token 691: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.06554072350263596
    2. 'turn' → logprob: -3.0655407905578613
    3. ' move' → logprob: -4.940540790557861
    4. 'step' → logprob: -5.065540790557861
    5. 'advance' → logprob: -6.065540790557861
    6. ' turn' → logprob: -8.065540313720703
    7. 'walk' → logprob: -8.315540313720703
    8. 'forward' → logprob: -8.940540313720703
    9. 'face' → logprob: -9.440540313720703
    10. ' step' → logprob: -10.440540313720703

Token 692: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -0.3553655743598938
    2. '(self' → logprob: -1.230365514755249
    3. '(' → logprob: -5.480365753173828
    4. 'forward' → logprob: -6.980365753173828
    5. ' forward' → logprob: -7.730365753173828
    6. 'self' → logprob: -7.855365753173828
    7. '(
' → logprob: -8.480365753173828
    8. ' (' → logprob: -8.730365753173828
    9. '()' → logprob: -8.980365753173828
    10. '_' → logprob: -9.355365753173828

Token 693: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013027378590777516
    2. ' (' → logprob: -6.751302719116211
    3. '(' → logprob: -9.001302719116211
    4. '   ' → logprob: -11.751302719116211
    5. '()' → logprob: -14.626302719116211
    6. '       ' → logprob: -15.001302719116211
    7. 'self' → logprob: -15.626302719116211
    8. '(
' → logprob: -15.751302719116211
    9. '(s' → logprob: -15.876302719116211
    10. '(Self' → logprob: -16.87630271911621

Token 694: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7040669918060303
    2. '):' → logprob: -1.0790669918060303
    3. ',' → logprob: -1.8290669918060303
    4. ')' → logprob: -6.204067230224609
    5. 'self' → logprob: -6.579067230224609
    6. ',self' → logprob: -7.579067230224609
    7. ' ):' → logprob: -8.07906723022461
    8. ' ,' → logprob: -8.20406723022461
    9. ' ):
' → logprob: -8.45406723022461
    10. '   ' → logprob: -9.82906723022461

Token 695: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.21580807864665985
    2. ' distance' → logprob: -2.465808153152466
    3. ')' → logprob: -2.965808153152466
    4. 'step' → logprob: -3.465808153152466
    5. ' step' → logprob: -4.715807914733887
    6. ' ' → logprob: -5.090807914733887
    7. 'factor' → logprob: -5.340807914733887
    8. '1' → logprob: -5.590807914733887
    9. 'steps' → logprob: -7.090807914733887
    10. 'self' → logprob: -7.840807914733887

Token 696: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3571743369102478
    2. ':' → logprob: -1.2321743965148926
    3. '):
' → logprob: -5.232174396514893
    4. ' ):' → logprob: -6.107174396514893
    5. ' :' → logprob: -7.607174396514893
    6. ')' → logprob: -7.982174396514893
    7. '=' → logprob: -8.857173919677734
    8. '   ' → logprob: -9.982173919677734
    9. '       ' → logprob: -10.607173919677734
    10. ':int' → logprob: -10.732173919677734

Token 697: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.1603192687034607
    2. ' float' → logprob: -1.9103193283081055
    3. '1' → logprob: -9.535319328308105
    4. '=float' → logprob: -11.785319328308105
    5. ' ' → logprob: -12.910319328308105
    6. '(float' → logprob: -12.910319328308105
    7. '	float' → logprob: -12.910319328308105
    8. ',float' → logprob: -13.035319328308105
    9. ')' → logprob: -13.285319328308105
    10. 'distance' → logprob: -13.660319328308105

Token 698: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13184528052806854
    2. '):
' → logprob: -2.131845235824585
    3. ')' → logprob: -5.506845474243164
    4. ' ):' → logprob: -7.506845474243164
    5. '   ' → logprob: -8.881845474243164
    6. '):
' → logprob: -9.631845474243164
    7. ' ):
' → logprob: -9.631845474243164
    8. ' )' → logprob: -11.256845474243164
    9. '       ' → logprob: -11.756845474243164
    10. ':' → logprob: -12.756845474243164

Token 699: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018336882814764977
    2. ':
' → logprob: -4.018336772918701
    3. '):' → logprob: -9.39333724975586
    4. '):
' → logprob: -9.89333724975586
    5. '       ' → logprob: -10.76833724975586
    6. '   ' → logprob: -11.26833724975586
    7. ' :' → logprob: -12.01833724975586
    8. '():' → logprob: -13.01833724975586
    9. ',' → logprob: -13.14333724975586
    10. '():
' → logprob: -13.26833724975586

Token 700: ' bool' (ID: 3792)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.014184780418872833
    2. ' None' → logprob: -4.264184951782227
    3. ''' → logprob: -11.639184951782227
    4. 'Vector' → logprob: -12.014184951782227
    5. '   ' → logprob: -12.514184951782227
    6. 'float' → logprob: -14.264184951782227
    7. 'bool' → logprob: -14.389184951782227
    8. 'none' → logprob: -14.639184951782227
    9. ' ' → logprob: -15.139184951782227
    10. '(None' → logprob: -15.639184951782227

Token 701: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3134475648403168
    2. ':
' → logprob: -1.3134475946426392
    3. '       ' → logprob: -9.063447952270508
    4. '):
' → logprob: -10.313447952270508
    5. '   ' → logprob: -10.688447952270508
    6. '():
' → logprob: -12.438447952270508
    7. '):' → logprob: -12.813447952270508
    8. ',' → logprob: -13.313447952270508
    9. ':
' → logprob: -13.438447952270508
    10. ':

' → logprob: -13.938447952270508

Token 702: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033579664304852486
    2. ' if' → logprob: -6.003357887268066
    3. 'if' → logprob: -7.253357887268066
    4. '   ' → logprob: -9.878357887268066
    5. ' new' → logprob: -10.378357887268066
    6. '#' → logprob: -10.378357887268066
    7. 'pos' → logprob: -11.503357887268066
    8. ' direction' → logprob: -11.753357887268066
    9. 'position' → logprob: -11.878357887268066
    10. 'new' → logprob: -11.878357887268066

Token 703: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7560620903968811
    2. '       ' → logprob: -0.8810620903968811
    3. 'new' → logprob: -2.8810620307922363
    4. 'move' → logprob: -4.006062030792236
    5. 'next' → logprob: -4.131062030792236
    6. 'direction' → logprob: -4.631062030792236
    7. 'movement' → logprob: -5.631062030792236
    8. '#' (adapté à ' #') → logprob: -5.631062030792236
    9. 'self' → logprob: -6.006062030792236
    10. ' if' → logprob: -6.006062030792236

Token 704: ' Move' (ID: 25485)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7392753958702087
    2. 'direction' → logprob: -0.8642753958702087
    3. 'vec' → logprob: -3.4892754554748535
    4. 'new' → logprob: -3.6142754554748535
    5. 'dir' → logprob: -3.7392754554748535
    6. 'self' → logprob: -4.9892754554748535
    7. '#' → logprob: -5.2392754554748535
    8. 'next' → logprob: -5.7392754554748535
    9. 'target' → logprob: -6.7392754554748535
    10. 'vector' → logprob: -6.9892754554748535

Token 705: ' forward' (ID: 6687)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.43093162775039673
    2. 'new' → logprob: -1.180931568145752
    3. '       ' → logprob: -3.555931568145752
    4. 'delta' → logprob: -5.555931568145752
    5. 'forward' → logprob: -5.930931568145752
    6. ' new' → logprob: -6.055931568145752
    7. 'step' → logprob: -6.555931568145752
    8. ' self' → logprob: -6.680931568145752
    9. 'direction' → logprob: -6.680931568145752
    10. '   ' → logprob: -7.305931568145752

Token 706: ' distance' (ID: 9324)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3662799596786499
    2. '       ' → logprob: -1.99127995967865
    3. 'new' → logprob: -1.99127995967865
    4. 'if' → logprob: -4.1162800788879395
    5. 'direction' → logprob: -5.7412800788879395
    6. 'in' → logprob: -6.2412800788879395
    7. ' self' → logprob: -6.2412800788879395
    8. ' new' → logprob: -6.3662800788879395
    9. 'step' → logprob: -6.3662800788879395
    10. ' by' → logprob: -6.4912800788879395

Token 707: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0079965591430664
    2. '       ' → logprob: -1.3829965591430664
    3. ' if' → logprob: -2.1329965591430664
    4. 'self' → logprob: -2.3829965591430664
    5. ' =' → logprob: -3.0079965591430664
    6. '(self' → logprob: -3.1329965591430664
    7. 'in' → logprob: -3.8829965591430664
    8. 'if' → logprob: -4.382996559143066
    9. ',' → logprob: -4.382996559143066
    10. ' (' → logprob: -5.132996559143066

Token 708: ' facing' (ID: 20511)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.017905713990330696
    2. 'the' → logprob: -4.1429057121276855
    3. ' self' → logprob: -6.8929057121276855
    4. ' the' → logprob: -7.2679057121276855
    5. '   ' → logprob: -9.642906188964844
    6. '       ' → logprob: -9.892906188964844
    7. 'direction' → logprob: -10.642906188964844
    8. 'Vector' → logprob: -11.767906188964844
    9. ' direction' → logprob: -12.892906188964844
    10. '=self' → logprob: -13.142906188964844

Token 709: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.22291617095470428
    2. 'direction' → logprob: -1.9729161262512207
    3. ' vector' → logprob: -3.2229161262512207
    4. ' ' → logprob: -4.097916126251221
    5. 'vector' → logprob: -6.347916126251221
    6. '(direction' → logprob: -7.597916126251221
    7. '_direction' → logprob: -7.847916126251221
    8. '_vector' → logprob: -7.847916126251221
    9. '*' → logprob: -8.347916603088379
    10. ' *' → logprob: -8.472916603088379

Token 710: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05068686231970787
    2. ' displacement' → logprob: -3.925686836242676
    3. 'self' → logprob: -4.175686836242676
    4. ' self' → logprob: -5.550686836242676
    5. ' if' → logprob: -5.550686836242676
    6. 'delta' → logprob: -6.425686836242676
    7. ' new' → logprob: -6.675686836242676
    8. 'new' → logprob: -6.800686836242676
    9. 'direction' → logprob: -7.800686836242676
    10. 'dis' → logprob: -7.925686836242676

Token 711: ' possible' (ID: 4149)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5681047439575195
    2. 'distance' → logprob: -0.9431047439575195
    3. 'not' → logprob: -3.6931047439575195
    4. '(distance' → logprob: -4.9431047439575195
    5. ' self' → logprob: -5.8181047439575195
    6. ' not' → logprob: -5.9431047439575195
    7. '(self' → logprob: -6.1931047439575195
    8. ' distance' → logprob: -6.3181047439575195
    9. 'all' → logprob: -7.3181047439575195
    10. '   ' → logprob: -7.4431047439575195

Token 712: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018275037873536348
    2. ' if' → logprob: -6.751827716827393
    3. ',' → logprob: -8.626827239990234
    4. '#' → logprob: -9.126827239990234
    5. '
' → logprob: -9.251827239990234
    6. 'if' → logprob: -10.001827239990234
    7. '        
' → logprob: -10.376827239990234
    8. ' next' → logprob: -11.251827239990234
    9. '        ' → logprob: -11.376827239990234
    10. '```' → logprob: -11.376827239990234

Token 713: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1294889897108078
    2. ' if' → logprob: -2.129488945007324
    3. 'if' → logprob: -6.754488945007324
    4. ' new' → logprob: -7.504488945007324
    5. '```' → logprob: -8.879488945007324
    6. ' 
' → logprob: -9.504488945007324
    7. '   ' → logprob: -9.504488945007324
    8. ' ' → logprob: -9.504488945007324
    9. '        ' → logprob: -10.004488945007324
    10. 'If' → logprob: -10.129488945007324

Token 714: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2805922329425812
    2. '       ' → logprob: -2.780592203140259
    3. '#' (adapté à ' #') → logprob: -2.905592203140259
    4. 'if' → logprob: -3.155592203140259
    5. 'next' → logprob: -3.530592203140259
    6. 'self' → logprob: -3.655592203140259
    7. ' new' → logprob: -3.655592203140259
    8. 'try' → logprob: -6.780592441558838
    9. ' if' → logprob: -7.030592441558838
    10. ' next' → logprob: -7.780592441558838

Token 715: ' The' (ID: 623)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6720011830329895
    2. 'if' → logprob: -1.1720011234283447
    3. '#' → logprob: -2.0470011234283447
    4. 'next' → logprob: -3.6720011234283447
    5. 'vec' → logprob: -4.922001361846924
    6. '       ' → logprob: -5.422001361846924
    7. 'direction' → logprob: -5.672001361846924
    8. 'import' → logprob: -6.547001361846924
    9. 'target' → logprob: -6.672001361846924
    10. 'If' → logprob: -6.797001361846924

Token 716: ' problem' (ID: 4792)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8044233918190002
    2. 'direction' → logprob: -1.3044233322143555
    3. '#' → logprob: -2.4294233322143555
    4. 'position' → logprob: -2.9294233322143555
    5. 'next' → logprob: -3.3044233322143555
    6. 'def' → logprob: -3.6794233322143555
    7. 'well' → logprob: -4.0544233322143555
    8. 'f' → logprob: -4.3044233322143555
    9. ' new' → logprob: -4.5544233322143555
    10. '.position' → logprob: -4.9294233322143555

Token 717: ' mentions' (ID: 66396)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.11916814744472504
    2. '<|end|>' → logprob: -2.3691680431365967
    3. '<|end|>' → logprob: -5.619168281555176
    4. ':' → logprob: -5.744168281555176
    5. ' continues' → logprob: -5.869168281555176
    6. ' has' → logprob: -6.244168281555176
    7. ' with' → logprob: -6.494168281555176
    8. ' remains' → logprob: -7.119168281555176
    9. ' was' → logprob: -7.619168281555176
    10. ' here' → logprob: -8.119168281555176

Token 718: ' possible' (ID: 4149)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.779285728931427
    2. ' that' → logprob: -1.1542856693267822
    3. 'the' → logprob: -2.6542856693267822
    4. '#' → logprob: -3.5292856693267822
    5. 'if' → logprob: -3.6542856693267822
    6. '"""' → logprob: -3.7792856693267822
    7. ' the' → logprob: -3.9042856693267822
    8. '"' → logprob: -4.279285907745361
    9. 'distance' → logprob: -4.904285907745361
    10. 'self' → logprob: -5.279285907745361

Token 719: ' obstruction' (ID: 126556)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.19715067744255066
    2. ' obstacles' → logprob: -1.947150707244873
    3. 'blocked' → logprob: -4.197150707244873
    4. '#' → logprob: -5.822150707244873
    5. 'block' → logprob: -6.072150707244873
    6. 'positions' → logprob: -6.322150707244873
    7. 'constraints' → logprob: -6.822150707244873
    8. ' ob' → logprob: -6.947150707244873
    9. 'collision' → logprob: -7.072150707244873
    10. 'inter' → logprob: -7.197150707244873

Token 720: ' but' (ID: 889)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8335108757019043
    2. '       ' → logprob: -1.0835108757019043
    3. '#' → logprob: -2.2085108757019043
    4. ' #' → logprob: -3.3335108757019043
    5. '
' → logprob: -3.9585108757019043
    6. ' and' → logprob: -4.083510875701904
    7. ' or' → logprob: -4.458510875701904
    8. '<|end|>' → logprob: -4.458510875701904
    9. ',' → logprob: -5.333510875701904
    10. '.' → logprob: -6.083510875701904

Token 721: ' does' (ID: 2226)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5349372029304504
    2. ' here' → logprob: -1.9099371433258057
    3. '#' → logprob: -2.6599371433258057
    4. ' return' → logprob: -3.5349371433258057
    5. ' it' → logprob: -3.6599371433258057
    6. ' #' → logprob: -3.7849371433258057
    7. ' currently' → logprob: -4.034937381744385
    8. ' returns' → logprob: -4.409937381744385
    9. ' not' → logprob: -4.534937381744385
    10. ' no' → logprob: -4.659937381744385

Token 722: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.048593614250421524
    2. ' not' → logprob: -3.048593521118164
    3. 'n't' → logprob: -12.548593521118164
    4. '   ' → logprob: -13.673593521118164
    5. '#' → logprob: -14.298593521118164
    6. '...' → logprob: -15.173593521118164
    7. '_not' → logprob: -15.298593521118164
    8. '	not' → logprob: -15.423593521118164
    9. 'return' → logprob: -16.173593521118164
    10. '       ' → logprob: -17.673593521118164

Token 723: ' provide' (ID: 3587)
  Prédit: 'provide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'provide' → logprob: -0.26664137840270996
    2. 'spec' → logprob: -1.89164137840271
    3. 'implement' → logprob: -3.64164137840271
    4. ' provide' → logprob: -4.016641616821289
    5. ' specify' → logprob: -4.141641616821289
    6. 'mention' → logprob: -4.641641616821289
    7. 'give' → logprob: -5.641641616821289
    8. 'define' → logprob: -6.266641616821289
    9. 'describe' → logprob: -6.266641616821289
    10. 'have' → logprob: -6.766641616821289

Token 724: ' criteria' (ID: 17572)
  Prédit: 'details'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'details' → logprob: -1.2211267948150635
    2. ' details' → logprob: -1.3461267948150635
    3. ' any' → logprob: -2.0961267948150635
    4. ' obstruction' → logprob: -2.5961267948150635
    5. 'ob' → logprob: -2.7211267948150635
    6. ' further' → logprob: -3.2211267948150635
    7. 'any' → logprob: -3.5961267948150635
    8. 'more' → logprob: -3.8461267948150635
    9. 'collision' → logprob: -4.596126556396484
    10. 'the' → logprob: -4.596126556396484

Token 725: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2817590534687042
    2. '.' → logprob: -2.031759023666382
    3. ',' → logprob: -2.531759023666382
    4. ' for' → logprob: -4.281759262084961
    5. '   ' → logprob: -4.781759262084961
    6. ' return' → logprob: -5.656759262084961
    7. '.
' → logprob: -5.656759262084961
    8. '
' → logprob: -6.281759262084961
    9. ':' → logprob: -7.031759262084961
    10. '        
' → logprob: -7.281759262084961

Token 726: ' 
' (ID: 793)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.0027481731958687305
    2. ' return' → logprob: -6.252748012542725
    3. '       ' → logprob: -7.252748012542725
    4. '#' → logprob: -9.502748489379883
    5. ' #' → logprob: -11.002748489379883
    6. 'so' → logprob: -11.752748489379883
    7. 'return' → logprob: -12.002748489379883
    8. '
' → logprob: -13.127748489379883
    9. ' 
' → logprob: -13.877748489379883
    10. '        ' → logprob: -13.877748489379883

Token 727: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04327034950256348
    2. '#' → logprob: -3.1682703495025635
    3. ' so' → logprob: -9.543270111083984
    4. ' #' → logprob: -9.668270111083984
    5. '   ' → logprob: -10.418270111083984
    6. ' return' → logprob: -10.543270111083984
    7. 'return' → logprob: -11.043270111083984
    8. '           ' → logprob: -11.418270111083984
    9. '```' → logprob: -11.793270111083984
    10. ' if' → logprob: -11.918270111083984

Token 728: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.06444116681814194
    2. '       ' → logprob: -2.814441204071045
    3. 'return' → logprob: -6.564441204071045
    4. ' return' → logprob: -7.314441204071045
    5. ' #' → logprob: -7.939441204071045
    6. ' so' → logprob: -10.439440727233887
    7. '   ' → logprob: -12.689440727233887
    8. '#
' → logprob: -12.814440727233887
    9. '	' → logprob: -13.439440727233887
    10. ' ' → logprob: -15.064440727233887

Token 729: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.018247107043862343
    2. 'return' → logprob: -4.018247127532959
    3. '       ' → logprob: -9.2682466506958
    4. 'self' → logprob: -14.0182466506958
    5. '
' → logprob: -14.1432466506958
    6. ' return' → logprob: -14.3932466506958
    7. ' #' → logprob: -15.0182466506958
    8. 'def' → logprob: -15.5182466506958
    9. 'new' → logprob: -16.518247604370117
    10. '#
' → logprob: -17.018247604370117

Token 730: ' assume' (ID: 19429)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7853829264640808
    2. 'return' → logprob: -0.7853829264640808
    3. ' return' → logprob: -2.7853829860687256
    4. '       ' → logprob: -3.7853829860687256
    5. ' #' → logprob: -6.0353827476501465
    6. 'self' → logprob: -6.7853827476501465
    7. ' self' → logprob: -8.785383224487305
    8. '   ' → logprob: -11.535383224487305
    9. 'new' → logprob: -11.910383224487305
    10. 'distance' → logprob: -12.410383224487305

Token 731: ' always' (ID: 3324)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0009474263642914593
    2. ' True' → logprob: -7.00094747543335
    3. 'return' → logprob: -10.500946998596191
    4. '   ' → logprob: -12.375946998596191
    5. '       ' → logprob: -13.000946998596191
    6. 'true' → logprob: -13.875946998596191
    7. '
' → logprob: -15.000946998596191
    8. 'distance' → logprob: -15.500946998596191
    9. 'self' → logprob: -16.125947952270508
    10. 'not' → logprob: -16.625947952270508

Token 732: ' possible' (ID: 4149)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03275465592741966
    2. ' True' → logprob: -3.53275465965271
    3. 'possible' → logprob: -6.532754421234131
    4. 'allowed' → logprob: -6.907754421234131
    5. 'true' → logprob: -8.532754898071289
    6. ' possible' → logprob: -8.907754898071289
    7. 'successful' → logprob: -9.407754898071289
    8. ' allowed' → logprob: -9.782754898071289
    9. 'success' → logprob: -11.032754898071289
    10. 'allow' → logprob: -11.157754898071289

Token 733: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004310480318963528
    2. '
' → logprob: -5.754310607910156
    3. '.' → logprob: -7.379310607910156
    4. 'self' → logprob: -8.254310607910156
    5. ',' → logprob: -8.754310607910156
    6. '.
' → logprob: -10.504310607910156
    7. '        
' → logprob: -11.129310607910156
    8. ':' → logprob: -11.629310607910156
    9. ' self' → logprob: -11.879310607910156
    10. ' and' → logprob: -12.004310607910156

Token 734: 'no' (ID: 1750)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1608869880437851
    2. 'True' → logprob: -2.1608870029449463
    3. '       ' → logprob: -3.5358870029449463
    4. 'self' → logprob: -5.785886764526367
    5. ' return' → logprob: -7.410886764526367
    6. '
' → logprob: -8.035886764526367
    7. ' True' → logprob: -9.285886764526367
    8. 'true' → logprob: -9.535886764526367
    9. '#' → logprob: -10.410886764526367
    10. '           ' → logprob: -10.785886764526367

Token 735: ' obstacle' (ID: 57212)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.6578203439712524
    2. ' obstruction' → logprob: -0.7828203439712524
    3. ' obstacles' → logprob: -4.657820224761963
    4. ' ob' → logprob: -4.657820224761963
    5. '_' → logprob: -5.657820224761963
    6. ' obstacle' → logprob: -6.532820224761963
    7. ' return' → logprob: -8.282820701599121
    8. '_ob' → logprob: -8.407820701599121
    9. ')' → logprob: -9.407820701599121
    10. 'op' → logprob: -9.657820701599121

Token 736: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022642558440566063
    2. ').' → logprob: -3.8976426124572754
    3. ')
' → logprob: -7.022642612457275
    4. '       ' → logprob: -7.647642612457275
    5. '   ' → logprob: -8.022642135620117
    6. ').
' → logprob: -9.147642135620117
    7. '):
' → logprob: -9.272642135620117
    8. ' to' → logprob: -9.647642135620117
    9. '):

' → logprob: -9.897642135620117
    10. ')

' → logprob: -10.897642135620117

Token 737: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13154654204845428
    2. 'self' → logprob: -2.1315464973449707
    3. ' self' → logprob: -6.256546497344971
    4. 'new' → logprob: -6.756546497344971
    5. ' displacement' → logprob: -7.131546497344971
    6. 'move' → logprob: -8.256546974182129
    7. 'delta' → logprob: -9.256546974182129
    8. ' new' → logprob: -9.506546974182129
    9. 'movement' → logprob: -9.506546974182129
    10. 'dis' → logprob: -9.756546974182129

Token 738: ' delta' (ID: 18800)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.021383101120591164
    2. '       ' → logprob: -4.146383285522461
    3. 'new' → logprob: -5.521383285522461
    4. 'move' → logprob: -7.396383285522461
    5. 'delta' (adapté à ' delta') → logprob: -8.146383285522461
    6. 'movement' → logprob: -8.771383285522461
    7. 'dis' → logprob: -9.146383285522461
    8. ' self' → logprob: -9.646383285522461
    9. 'next' → logprob: -9.646383285522461
    10. ' displacement' → logprob: -10.646383285522461

Token 739: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061968132853507996
    2. '=' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.061967849731445
    4. '_' → logprob: -15.811967849731445
    5. ' ' → logprob: -18.311967849731445
    6. '=self' → logprob: -18.686967849731445
    7. ')' → logprob: -18.686967849731445
    8. 's' → logprob: -19.311967849731445
    9. ' =
' → logprob: -19.311967849731445
    10. '	' → logprob: -19.311967849731445

Token 740: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804952651262283
    2. ' self' → logprob: -3.2880494594573975
    3. '       ' → logprob: -12.163049697875977
    4. '   ' → logprob: -13.913049697875977
    5. 'Vector' → logprob: -13.913049697875977
    6. ' ' → logprob: -15.038049697875977
    7. '	self' → logprob: -15.288049697875977
    8. '(self' → logprob: -15.788049697875977
    9. '=self' → logprob: -16.413049697875977
    10. ' Vector' → logprob: -16.663049697875977

Token 741: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -5.383526149671525e-05
    2. '.' → logprob: -10.000053405761719
    3. 'f' → logprob: -11.875053405761719
    4. ' .' → logprob: -14.000053405761719
    5. '	f' → logprob: -15.500053405761719
    6. '.fac' → logprob: -16.37505340576172
    7. '
' → logprob: -16.87505340576172
    8. 'Facing' → logprob: -17.12505340576172
    9. ').' → logprob: -17.25005340576172
    10. '\.' → logprob: -17.25005340576172

Token 742: 'acing' (ID: 7997)
  Prédit: 'acing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -3.128163257315464e-07
    2. 'or' → logprob: -16.25
    3. 'ACING' → logprob: -16.625
    4. 'aced' → logprob: -17.5
    5. 'l' → logprob: -17.625
    6. 'a' → logprob: -17.875
    7. 'ace' → logprob: -18.0
    8. 'ac' → logprob: -18.0
    9. '
' → logprob: -18.375
    10. 'Facing' → logprob: -19.5

Token 743: '.scale' (ID: 35238)
  Prédit: '.scale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.scale' → logprob: -3.35706390615087e-05
    2. '.' → logprob: -11.000033378601074
    3. ' .' → logprob: -11.000033378601074
    4. '.scal' → logprob: -16.50003433227539
    5. '   ' → logprob: -18.50003433227539
    6. '	scale' → logprob: -18.87503433227539
    7. '.Scale' → logprob: -18.87503433227539
    8. 'scale' → logprob: -19.00003433227539
    9. ').' → logprob: -19.50003433227539
    10. '.multiply' → logprob: -20.25003433227539

Token 744: '(distance' (ID: 105203)
  Prédit: '(distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(distance' → logprob: -1.3856492842023727e-06
    2. 'distance' → logprob: -13.750000953674316
    3. '(' → logprob: -15.375000953674316
    4. '(dist' → logprob: -18.125001907348633
    5. '(
' → logprob: -19.000001907348633
    6. ' (' → logprob: -19.750001907348633
    7. ' distance' → logprob: -21.375001907348633
    8. '(dis' → logprob: -22.000001907348633
    9. 'Distance' → logprob: -22.250001907348633
    10. '   ' → logprob: -22.625001907348633

Token 745: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023332595825195312
    2. ')
' → logprob: -3.7733325958251953
    3. ' )' → logprob: -9.648332595825195
    4. '       ' → logprob: -12.023332595825195
    5. ' )
' → logprob: -12.148332595825195
    6. ')
' → logprob: -12.773332595825195
    7. ')

' → logprob: -13.023332595825195
    8. ')return' → logprob: -13.273332595825195
    9. '())' → logprob: -13.523332595825195
    10. '   ' → logprob: -14.023332595825195

Token 746: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04978318139910698
    2. 'self' → logprob: -3.049783229827881
    3. ' self' → logprob: -6.799783229827881
    4. '
' → logprob: -9.799782752990723
    5. '	self' → logprob: -10.799782752990723
    6. '        
' → logprob: -13.674782752990723
    7. '   ' → logprob: -13.674782752990723
    8. '[self' → logprob: -14.049782752990723
    9. '```' → logprob: -14.549782752990723
    10. '(self' → logprob: -14.799782752990723

Token 747: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0006217729533091187
    2. 'new' → logprob: -8.000621795654297
    3. ' self' → logprob: -8.750621795654297
    4. '       ' → logprob: -9.000621795654297
    5. 'next' → logprob: -13.000621795654297
    6. '	self' → logprob: -13.375621795654297
    7. ' new' → logprob: -15.375621795654297
    8. '   ' → logprob: -15.625621795654297
    9. '
' → logprob: -16.000621795654297
    10. '        
' → logprob: -16.250621795654297

Token 748: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.000754001026507467
    2. '.' → logprob: -7.250753879547119
    3. ' .' → logprob: -10.875754356384277
    4. '.pos' → logprob: -11.625754356384277
    5. '.user' → logprob: -12.125754356384277
    6. 'position' → logprob: -12.250754356384277
    7. ').' → logprob: -14.125754356384277
    8. '.x' → logprob: -14.500754356384277
    9. '.move' → logprob: -14.500754356384277
    10. '.location' → logprob: -14.625754356384277

Token 749: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043822165578603745
    2. ' =' → logprob: -3.1688220500946045
    3. '+=' → logprob: -7.418822288513184
    4. ' +=' → logprob: -8.418822288513184
    5. '+' → logprob: -13.418822288513184
    6. ' ' → logprob: -15.418822288513184
    7. '   ' → logprob: -15.793822288513184
    8. '=self' → logprob: -16.293821334838867
    9. '.=' → logprob: -16.293821334838867
    10. '=
' → logprob: -16.918821334838867

Token 750: ' delta' (ID: 18800)
  Prédit: ' delta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' delta' → logprob: -0.6931487321853638
    2. 'delta' → logprob: -0.6931487321853638
    3. '(delta' → logprob: -14.568148612976074
    4. '_delta' → logprob: -14.693148612976074
    5. ' ' → logprob: -15.693148612976074
    6. 'd' → logprob: -16.06814956665039
    7. '   ' → logprob: -16.19314956665039
    8. ' delt' → logprob: -16.44314956665039
    9. '.delta' → logprob: -16.56814956665039
    10. ' ' → logprob: -16.94314956665039

Token 751: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2880411148071289
    2. '
' → logprob: -1.538041114807129
    3. '<|end|>' → logprob: -3.413041114807129
    4. 'return' → logprob: -6.913041114807129
    5. '   ' → logprob: -8.288041114807129
    6. '  
' → logprob: -8.413041114807129
    7. '<|end|>' → logprob: -8.413041114807129
    8. ' return' → logprob: -8.663041114807129
    9. ' 
' → logprob: -9.038041114807129
    10. '#' → logprob: -9.663041114807129

Token 752: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.3464544432936236e-05
    2. '<|end|>' → logprob: -11.000043869018555
    3. 'return' → logprob: -11.125043869018555
    4. '   ' → logprob: -11.875043869018555
    5. ' return' → logprob: -13.000043869018555
    6. '	' → logprob: -13.875043869018555
    7. '```' → logprob: -15.125043869018555
    8. '           ' → logprob: -15.250043869018555
    9. '	return' → logprob: -15.375043869018555
    10. '<|end|>' → logprob: -15.625043869018555

Token 753: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0011978477705270052
    2. '       ' → logprob: -6.751197814941406
    3. ' return' → logprob: -10.501197814941406
    4. '	return' → logprob: -16.001197814941406
    5. '   ' → logprob: -17.376197814941406
    6. 'True' → logprob: -17.751197814941406
    7. 'true' → logprob: -18.501197814941406
    8. '{return' → logprob: -19.001197814941406
    9. 'Return' → logprob: -19.626197814941406
    10. '
' → logprob: -19.751197814941406

Token 754: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0031777136027812958
    2. ' True' → logprob: -5.753177642822266
    3. '(True' → logprob: -22.128177642822266
    4. '   ' → logprob: -22.878177642822266
    5. 'true' → logprob: -23.253177642822266
    6. 'Tr' → logprob: -23.378177642822266
    7. 'False' → logprob: -23.753177642822266
    8. '=True' → logprob: -24.003177642822266
    9. '
' → logprob: -25.628177642822266
    10. 'TRUE' → logprob: -26.128177642822266

Token 755: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 756: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 757: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001234428636962548
    2. '#' → logprob: -9.250123023986816
    3. '   ' → logprob: -11.250123023986816
    4. ' def' → logprob: -12.000123023986816
    5. 'class' → logprob: -12.500123023986816
    6. '<|end|>' → logprob: -13.250123023986816
    7. 'if' → logprob: -13.750123023986816
    8. ' ' → logprob: -14.625123023986816
    9. '  ' → logprob: -15.250123023986816
    10. '```' → logprob: -15.375123023986816

Token 758: ' perform' (ID: 3347)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -1.232823133468628
    2. 'navigate' → logprob: -1.232823133468628
    3. 'step' → logprob: -1.607823133468628
    4. 'simulate' → logprob: -2.982823133468628
    5. 'turn' → logprob: -3.107823133468628
    6. 'expl' → logprob: -3.607823133468628
    7. 'get' → logprob: -3.982823133468628
    8. 'perform' → logprob: -4.107823371887207
    9. 'execute' → logprob: -4.232823371887207
    10. 'jump' → logprob: -5.107823371887207

Token 759: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.02088915929198265
    2. '_steps' → logprob: -4.8958892822265625
    3. '_next' → logprob: -5.1458892822265625
    4. '_move' → logprob: -5.2708892822265625
    5. '_m' → logprob: -7.0208892822265625
    6. '_navigation' → logprob: -8.270889282226562
    7. '_walk' → logprob: -8.395889282226562
    8. '_path' → logprob: -8.645889282226562
    9. '_action' → logprob: -8.895889282226562
    10. 'step' → logprob: -9.270889282226562

Token 760: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001025895617203787
    2. '(' → logprob: -9.375102996826172
    3. ' (' → logprob: -11.125102996826172
    4. 'self' → logprob: -13.875102996826172
    5. '   ' → logprob: -14.375102996826172
    6. '(step' → logprob: -14.500102996826172
    7. '(
' → logprob: -14.750102996826172
    8. '(s' → logprob: -14.875102996826172
    9. '(se' → logprob: -16.750102996826172
    10. '()' → logprob: -17.000102996826172

Token 761: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008916903752833605
    2. 'self' → logprob: -7.12589168548584
    3. ',self' → logprob: -10.37589168548584
    4. ' ,' → logprob: -10.62589168548584
    5. ',index' → logprob: -11.50089168548584
    6. '   ' → logprob: -11.87589168548584
    7. '):' → logprob: -12.12589168548584
    8. '(self' → logprob: -12.62589168548584
    9. '       ' → logprob: -13.12589168548584
    10. ',
' → logprob: -14.50089168548584

Token 762: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04752904176712036
    2. 'direction' → logprob: -4.047529220581055
    3. ' direction' → logprob: -4.172529220581055
    4. '   ' → logprob: -5.047529220581055
    5. 'self' → logprob: -5.672529220581055
    6. ' self' → logprob: -6.547529220581055
    7. ' step' → logprob: -7.172529220581055
    8. 'step' → logprob: -7.422529220581055
    9. 'def' → logprob: -7.547529220581055
    10. '_direction' → logprob: -9.422529220581055

Token 763: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1968696266412735
    2. '       ' → logprob: -1.8218696117401123
    3. '#' (adapté à ' #') → logprob: -4.321869850158691
    4. 'direction' → logprob: -6.321869850158691
    5. ' self' → logprob: -6.571869850158691
    6. '   ' → logprob: -8.696869850158691
    7. 'step' → logprob: -8.946869850158691
    8. 'if' → logprob: -9.571869850158691
    9. 'current' → logprob: -9.696869850158691
    10. ' direction' → logprob: -10.446869850158691

Token 764: ' Turn' (ID: 18425)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03036172315478325
    2. '#' → logprob: -4.405361652374268
    3. 'direction' → logprob: -4.655361652374268
    4. '       ' → logprob: -5.155361652374268
    5. 'if' → logprob: -6.905361652374268
    6. 'step' → logprob: -7.155361652374268
    7. 'dir' → logprob: -8.530362129211426
    8. 'current' → logprob: -9.780362129211426
    9. 'vec' → logprob: -9.905362129211426
    10. ' self' → logprob: -9.905362129211426

Token 765: ' right' (ID: 1849)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0003100791363976896
    2. 'right' → logprob: -8.250309944152832
    3. '_' → logprob: -11.375309944152832
    4. '_left' → logprob: -11.500309944152832
    5. 'Right' → logprob: -11.750309944152832
    6. '_r' → logprob: -12.125309944152832
    7. ' right' → logprob: -12.250309944152832
    8. '   ' → logprob: -12.375309944152832
    9. '
' → logprob: -14.000309944152832
    10. '_RIGHT' → logprob: -14.250309944152832

Token 766: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00010342398309148848
    2. '90' → logprob: -9.250102996826172
    3. ' ' → logprob: -13.250102996826172
    4. '   ' → logprob: -13.500102996826172
    5. '       ' → logprob: -14.250102996826172
    6. '
' → logprob: -14.500102996826172
    7. '()
' → logprob: -14.625102996826172
    8. '()' → logprob: -14.625102996826172
    9. '```' → logprob: -15.000102996826172
    10. '(' → logprob: -15.250102996826172

Token 767: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.47426605224609375
    2. '_' → logprob: -0.9742660522460938
    3. ' ' → logprob: -8.849266052246094
    4. ' ninety' → logprob: -10.974266052246094
    5. '
' → logprob: -12.224266052246094
    6. '       ' → logprob: -12.599266052246094
    7. '   ' → logprob: -12.599266052246094
    8. '_n' → logprob: -12.724266052246094
    9. '```' → logprob: -12.849266052246094
    10. ',' → logprob: -12.849266052246094

Token 768: ' degrees' (ID: 18210)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 769: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005891818553209305
    2. '()' → logprob: -5.380891799926758
    3. '()
' → logprob: -6.755891799926758
    4. '<|end|>' → logprob: -10.505891799926758
    5. ',' → logprob: -10.630891799926758
    6. '   ' → logprob: -11.380891799926758
    7. '
' → logprob: -12.130891799926758
    8. '(' → logprob: -12.255891799926758
    9. ')' → logprob: -12.380891799926758
    10. '.' → logprob: -12.380891799926758

Token 770: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012320445966906846
    2. 'self' → logprob: -9.625123023986816
    3. '   ' → logprob: -11.125123023986816
    4. ' self' → logprob: -11.375123023986816
    5. ',' → logprob: -11.500123023986816
    6. '           ' → logprob: -12.375123023986816
    7. '.' → logprob: -12.500123023986816
    8. '
' → logprob: -12.750123023986816
    9. ' and' → logprob: -13.375123023986816
    10. ' ' → logprob: -13.875123023986816

Token 771: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.48097631335258484
    2. '       ' → logprob: -0.9809763431549072
    3. ' self' → logprob: -4.980976104736328
    4. '   ' → logprob: -11.855976104736328
    5. ' ' → logprob: -14.855976104736328
    6. '```' → logprob: -14.980976104736328
    7. '	self' → logprob: -15.480976104736328
    8. '(self' → logprob: -16.105976104736328
    9. ' ' → logprob: -17.605976104736328
    10. '           ' → logprob: -17.605976104736328

Token 772: '.turn' (ID: 89898)
  Prédit: '.turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.turn' → logprob: -0.0005771008436568081
    2. '.' → logprob: -7.750576972961426
    3. '.face' → logprob: -8.875576972961426
    4. ' .' → logprob: -12.375576972961426
    5. '.take' → logprob: -14.875576972961426
    6. '.flip' → logprob: -15.250576972961426
    7. '.perform' → logprob: -15.375576972961426
    8. '.move' → logprob: -15.625576972961426
    9. 'turn' → logprob: -16.125577926635742
    10. '   ' → logprob: -16.250577926635742

Token 773: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -3.292907877039397e-06
    2. '_r' → logprob: -12.75000286102295
    3. '_' → logprob: -16.000003814697266
    4. 'right' → logprob: -16.375003814697266
    5. ' _' → logprob: -16.375003814697266
    6. '_RIGHT' → logprob: -17.625003814697266
    7. '_Right' → logprob: -18.375003814697266
    8. '_left' → logprob: -19.125003814697266
    9. 'Right' → logprob: -19.250003814697266
    10. ')_' → logprob: -19.375003814697266

Token 774: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '90' → logprob: -17.125
    3. ' _' → logprob: -17.875
    4. ' ' → logprob: -19.5
    5. '_right' → logprob: -19.75
    6. '_
' → logprob: -20.0
    7. '```' → logprob: -20.5
    8. '__' → logprob: -21.25
    9. ')_' → logprob: -21.375
    10. '`' → logprob: -21.75

Token 775: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -15.750000953674316
    4. '_' → logprob: -16.875001907348633
    5. '`' → logprob: -17.250001907348633
    6. '9' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.875001907348633
    8. 'def' → logprob: -18.000001907348633
    9. '0' → logprob: -18.125001907348633
    10. '900' → logprob: -18.375001907348633

Token 776: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5764477252960205
    2. '()' → logprob: -0.8264477252960205
    3. '       ' → logprob: -7.701447486877441
    4. '()

' → logprob: -10.076447486877441
    5. '()
' → logprob: -11.951447486877441
    6. '()\' → logprob: -12.201447486877441
    7. '   ' → logprob: -14.701447486877441
    8. ')' → logprob: -14.951447486877441
    9. '<|end|>' → logprob: -15.076447486877441
    10. '();' → logprob: -15.076447486877441

Token 777: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0291739571839571
    2. 'self' → logprob: -3.7791738510131836
    3. '   ' → logprob: -5.779173851013184
    4. ' self' → logprob: -6.529173851013184
    5. '<|end|>' → logprob: -7.529173851013184
    6. '        
' → logprob: -8.654173851013184
    7. '
' → logprob: -8.779173851013184
    8. ')' → logprob: -9.529173851013184
    9. '#' → logprob: -9.654173851013184
    10. '           ' → logprob: -10.029173851013184

Token 778: ' #' (ID: 1069)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.39207014441490173
    2. 'self' → logprob: -1.6420701742172241
    3. '       ' → logprob: -2.7670700550079346
    4. 'success' → logprob: -3.1420700550079346
    5. 'if' → logprob: -4.017070293426514
    6. 'distance' → logprob: -5.767070293426514
    7. 'can' → logprob: -7.142070293426514
    8. ' moved' → logprob: -7.392070293426514
    9. ' self' → logprob: -7.392070293426514
    10. '#' (adapté à ' #') → logprob: -7.767070293426514

Token 779: ' Move' (ID: 25485)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16171877086162567
    2. 'm' → logprob: -2.2867188453674316
    3. 'if' → logprob: -3.9117188453674316
    4. '       ' → logprob: -4.161718845367432
    5. '#' → logprob: -5.536718845367432
    6. 'success' → logprob: -5.536718845367432
    7. ' self' → logprob: -7.036718845367432
    8. 'move' → logprob: -7.286718845367432
    9. 'return' → logprob: -7.661718845367432
    10. 'Moved' → logprob: -7.786718845367432

Token 780: ' ' (ID: 220)
  Prédit: '_forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_forward' → logprob: -0.10025929659605026
    2. 'forward' → logprob: -2.350259304046631
    3. ' forward' → logprob: -9.975258827209473
    4. '_' → logprob: -12.600258827209473
    5. 'self' → logprob: -13.725258827209473
    6. 'for' → logprob: -14.725258827209473
    7. '   ' → logprob: -15.100258827209473
    8. 'Forward' → logprob: -15.225258827209473
    9. '(' → logprob: -15.475258827209473
    10. '1' → logprob: -15.975258827209473

Token 781: '1' (ID: 16)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.029972974210977554
    2. '_forward' → logprob: -3.529973030090332
    3. ' forward' → logprob: -9.029973030090332
    4. '1' → logprob: -9.529973030090332
    5. 'self' → logprob: -10.654973030090332
    6. 'Forward' → logprob: -12.904973030090332
    7. '   ' → logprob: -13.904973030090332
    8. '10' → logprob: -14.779973030090332
    9. '_FORWARD' → logprob: -14.779973030090332
    10. '_' → logprob: -14.904973030090332

Token 782: 'm' (ID: 76)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -4.11996734328568e-05
    2. 'forward' → logprob: -10.750041007995605
    3. ' forward' → logprob: -11.875041007995605
    4. '0' → logprob: -12.000041007995605
    5. ')' → logprob: -12.625041007995605
    6. '.forward' → logprob: -13.750041007995605
    7. '_forward' → logprob: -14.500041007995605
    8. '```' → logprob: -14.500041007995605
    9. ' .' → logprob: -14.750041007995605
    10. '   ' → logprob: -15.750041007995605

Token 783: ' forward' (ID: 6687)
  Prédit: ' forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forward' → logprob: -0.8497951030731201
    2. 'forward' → logprob: -1.3497951030731201
    3. '_forward' → logprob: -1.3497951030731201
    4. '.' → logprob: -2.97479510307312
    5. '.forward' → logprob: -6.724795341491699
    6. '(self' → logprob: -7.099795341491699
    7. '       ' → logprob: -8.3497953414917
    8. ' (' → logprob: -9.7247953414917
    9. 'Forward' → logprob: -9.7247953414917
    10. '   ' → logprob: -9.7247953414917

Token 784: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001042574760504067
    2. 'self' → logprob: -7.001042366027832
    3. '
' → logprob: -10.251042366027832
    4. '()' → logprob: -10.626042366027832
    5. '        
' → logprob: -11.501042366027832
    6. 'return' → logprob: -11.626042366027832
    7. ' self' → logprob: -12.251042366027832
    8. 'result' → logprob: -12.376042366027832
    9. ',' → logprob: -12.501042366027832
    10. 'if' → logprob: -12.626042366027832

Token 785: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009426791220903397
    2. 'self' → logprob: -4.759426593780518
    3. 'success' → logprob: -8.384427070617676
    4. 'return' → logprob: -8.884427070617676
    5. ' self' → logprob: -9.259427070617676
    6. 'if' → logprob: -9.384427070617676
    7. 'result' → logprob: -9.884427070617676
    8. '()' → logprob: -10.384427070617676
    9. '(self' → logprob: -10.384427070617676
    10. ' if' → logprob: -10.634427070617676

Token 786: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003621212439611554
    2. ' self' → logprob: -5.7536211013793945
    3. 'return' → logprob: -8.378621101379395
    4. 'success' → logprob: -9.128621101379395
    5. '       ' → logprob: -9.253621101379395
    6. 'result' → logprob: -12.003621101379395
    7. ' return' → logprob: -14.003621101379395
    8. ' success' → logprob: -14.128621101379395
    9. 'if' → logprob: -14.878621101379395
    10. '   ' → logprob: -15.003621101379395

Token 787: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.0001239196863025427
    2. '.' → logprob: -9.000123977661133
    3. 'move' → logprob: -15.375123977661133
    4. ' .' → logprob: -15.750123977661133
    5. '.perform' → logprob: -17.000123977661133
    6. '.m' → logprob: -17.875123977661133
    7. ').' → logprob: -17.875123977661133
    8. '	move' → logprob: -19.000123977661133
    9. '._' → logprob: -19.125123977661133
    10. '.face' → logprob: -19.375123977661133

Token 788: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.250001907348633
    3. 'forward' → logprob: -15.250001907348633
    4. '_FORWARD' → logprob: -18.125001907348633
    5. '```' → logprob: -18.125001907348633
    6. '_f' → logprob: -18.625001907348633
    7. '_backward' → logprob: -19.625001907348633
    8. ')_' → logprob: -19.625001907348633
    9. '_for' → logprob: -19.750001907348633
    10. ' forward' → logprob: -19.875001907348633

Token 789: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00034297199454158545
    2. '1' → logprob: -8.000343322753906
    3. ' (' → logprob: -12.000343322753906
    4. '(
' → logprob: -13.625343322753906
    5. ' ' → logprob: -16.500343322753906
    6. '```' → logprob: -18.125343322753906
    7. '('' → logprob: -19.375343322753906
    8. '0' → logprob: -20.000343322753906
    9. '()' → logprob: -20.000343322753906
    10. '`' → logprob: -20.375343322753906

Token 790: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -17.75
    4. '
' → logprob: -18.5
    5. '```' → logprob: -19.75
    6. '۱' → logprob: -21.5
    7. '１' → logprob: -21.75
    8. '' → logprob: -22.125
    9. ')' → logprob: -22.125
    10. '0' → logprob: -22.375

Token 791: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01416750717908144
    2. ')' → logprob: -4.264167308807373
    3. ' )' → logprob: -13.014167785644531
    4. ')
' → logprob: -13.764167785644531
    5. '.)' → logprob: -14.889167785644531
    6. '0' → logprob: -15.014167785644531
    7. ')

' → logprob: -16.88916778564453
    8. ' .' → logprob: -17.63916778564453
    9. '   ' → logprob: -17.63916778564453
    10. 'e' → logprob: -18.13916778564453

Token 792: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ')' → logprob: -16.375
    3. ' ' → logprob: -19.625
    4. '   ' → logprob: -19.625
    5. '```' → logprob: -20.875
    6. '       ' → logprob: -21.0
    7. ')
' → logprob: -21.3125
    8. '           ' → logprob: -22.125
    9. 'm' → logprob: -22.1875
    10. '۰' → logprob: -22.4375

Token 793: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024931374937295914
    2. ')
' → logprob: -6.002492904663086
    3. ' )' → logprob: -11.252492904663086
    4. '()' → logprob: -13.252492904663086
    5. '())' → logprob: -13.377492904663086
    6. ')

' → logprob: -14.252492904663086
    7. ')
' → logprob: -15.752492904663086
    8. ')return' → logprob: -16.127492904663086
    9. '))' → logprob: -16.377492904663086
    10. '       ' → logprob: -16.877492904663086

Token 794: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 795: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 796: ' Face' (ID: 29049)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008775161695666611
    2. '#' → logprob: -7.250877380371094
    3. ' self' → logprob: -9.125877380371094
    4. '       ' → logprob: -10.375877380371094
    5. 'return' → logprob: -10.750877380371094
    6. 'if' → logprob: -12.750877380371094
    7. '   ' → logprob: -14.250877380371094
    8. 'print' → logprob: -14.375877380371094
    9. 'Self' → logprob: -14.875877380371094
    10. 'After' → logprob: -15.750877380371094

Token 797: ' well' (ID: 1775)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.4498052223643754e-05
    2. 'well' → logprob: -11.625014305114746
    3. 'self' → logprob: -12.625014305114746
    4. 'w' → logprob: -13.375014305114746
    5. 'the' → logprob: -14.375014305114746
    6. ' well' → logprob: -17.000015258789062
    7. '_' → logprob: -17.250015258789062
    8. '_the' → logprob: -17.625015258789062
    9. 'Well' → logprob: -18.000015258789062
    10. '   ' → logprob: -18.500015258789062

Token 798: ' again' (ID: 2418)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.7944735288619995
    2. '       ' → logprob: -1.2944735288619995
    3. '()' → logprob: -1.2944735288619995
    4. '()\' → logprob: -10.169473648071289
    5. '();' → logprob: -11.044473648071289
    6. '()

' → logprob: -11.669473648071289
    7. '   ' → logprob: -11.794473648071289
    8. '()
' → logprob: -12.169473648071289
    9. '().' → logprob: -12.544473648071289
    10. '();
' → logprob: -12.544473648071289

Token 799: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.5649528298527e-05
    2. 'self' → logprob: -9.875075340270996
    3. '
' → logprob: -11.375075340270996
    4. '   ' → logprob: -11.750075340270996
    5. '()
' → logprob: -12.750075340270996
    6. '()' → logprob: -14.500075340270996
    7. '(self' → logprob: -14.875075340270996
    8. '        
' → logprob: -15.000075340270996
    9. '<|end|>' → logprob: -15.750075340270996
    10. ' self' → logprob: -16.125076293945312

Token 800: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.8444881536415778e-05
    2. 'self' → logprob: -10.750028610229492
    3. '   ' → logprob: -12.000028610229492
    4. '
' → logprob: -14.500028610229492
    5. '        
' → logprob: -16.500028610229492
    6. ' self' → logprob: -16.625028610229492
    7. '```' → logprob: -18.000028610229492
    8. '           ' → logprob: -18.000028610229492
    9. '(self' → logprob: -18.125028610229492
    10. '      ' → logprob: -18.750028610229492

Token 801: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003222987288609147
    2. '       ' → logprob: -5.753222942352295
    3. ' self' → logprob: -10.003223419189453
    4. '   ' → logprob: -18.378223419189453
    5. '	self' → logprob: -18.878223419189453
    6. '(self' → logprob: -19.253223419189453
    7. '[self' → logprob: -20.128223419189453
    8. '        
' → logprob: -21.753223419189453
    9. '```' → logprob: -21.878223419189453
    10. ' ' → logprob: -22.003223419189453

Token 802: '.face' (ID: 92193)
  Prédit: '.face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.face' → logprob: -2.1008713702030946e-06
    2. '.' → logprob: -13.750001907348633
    3. 'face' → logprob: -14.500001907348633
    4. '.fac' → logprob: -15.375001907348633
    5. ' .' → logprob: -15.500001907348633
    6. ' face' → logprob: -17.250001907348633
    7. '.Face' → logprob: -17.375001907348633
    8. '.faces' → logprob: -17.875001907348633
    9. '(face' → logprob: -19.500001907348633
    10. '.focus' → logprob: -19.875001907348633

Token 803: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.4855663721391466e-05
    2. '_' → logprob: -11.125015258789062
    3. ' _' → logprob: -17.500015258789062
    4. '\' → logprob: -20.125015258789062
    5. '_
' → logprob: -20.250015258789062
    6. 'w' → logprob: -20.625015258789062
    7. '_we' → logprob: -20.875015258789062
    8. '_f' → logprob: -21.250015258789062
    9. '```' → logprob: -21.250015258789062
    10. '_wall' → logprob: -21.500015258789062

Token 804: 'ell' (ID: 596)
  Prédit: 'ell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ell' → logprob: -0.0036190778482705355
    2. 'well' → logprob: -5.628619194030762
    3. ' well' → logprob: -12.253619194030762
    4. 'el' → logprob: -12.753619194030762
    5. 'all' → logprob: -12.753619194030762
    6. '_w' → logprob: -13.003619194030762
    7. 'Well' → logprob: -13.378619194030762
    8. '_' → logprob: -13.378619194030762
    9. 'w' → logprob: -14.003619194030762
    10. 'e' → logprob: -14.878619194030762

Token 805: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012259430950507522
    2. '()
' → logprob: -6.75122594833374
    3. '()\' → logprob: -9.876225471496582
    4. '()

' → logprob: -13.001225471496582
    5. '()<' → logprob: -14.126225471496582
    6. ' ()' → logprob: -15.001225471496582
    7. '<|end|>' → logprob: -15.001225471496582
    8. '(' → logprob: -15.626225471496582
    9. '()
' → logprob: -15.626225471496582
    10. '()`' → logprob: -16.1262264251709

Token 806: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 807: ' Treasure' (ID: 98185)
  Prédit: 'Simulator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Simulator' → logprob: -1.633545994758606
    2. 'Navigator' → logprob: -1.758545994758606
    3. 'Well' → logprob: -1.883545994758606
    4. 'Simulation' → logprob: -2.2585458755493164
    5. ' Simulator' → logprob: -2.7585458755493164
    6. ' Well' → logprob: -2.8835458755493164
    7. 'System' → logprob: -3.3835458755493164
    8. 'Main' → logprob: -3.5085458755493164
    9. 'main' → logprob: -3.6335458755493164
    10. 'Vector' → logprob: -3.7585458755493164

Token 808: 'Hunter' (ID: 132008)
  Prédit: 'Hunter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hunter' → logprob: -0.03862499073147774
    2. 'H' → logprob: -3.2886250019073486
    3. 'Se' → logprob: -8.53862476348877
    4. 'Finder' → logprob: -8.78862476348877
    5. ' Hunter' → logprob: -9.53862476348877
    6. 'Navigator' → logprob: -9.66362476348877
    7. 'Locator' → logprob: -10.41362476348877
    8. 'Searcher' → logprob: -11.53862476348877
    9. 'Hun' → logprob: -11.66362476348877
    10. 'Map' → logprob: -11.66362476348877

Token 809: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00640815868973732
    2. '(' → logprob: -5.256408214569092
    3. '(N' → logprob: -6.881408214569092
    4. ':
' → logprob: -9.381407737731934
    5. '():' → logprob: -10.631407737731934
    6. ' :' → logprob: -12.006407737731934
    7. '(Abstract' → logprob: -12.381407737731934
    8. '(Vector' → logprob: -12.631407737731934
    9. '(object' → logprob: -12.631407737731934
    10. '(T' → logprob: -13.006407737731934

Token 810: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015252856246661395
    2. ' def' → logprob: -9.250152587890625
    3. 'def' → logprob: -10.875152587890625
    4. 'class' → logprob: -11.500152587890625
    5. ':
' → logprob: -11.750152587890625
    6. ':' → logprob: -11.875152587890625
    7. '```' → logprob: -12.750152587890625
    8. '(' → logprob: -13.500152587890625
    9. '<|end|>' → logprob: -13.500152587890625
    10. '):
' → logprob: -13.500152587890625

Token 811: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3656458258628845
    2. 'def' (adapté à ' def') → logprob: -1.6156458854675293
    3. '   ' → logprob: -2.2406458854675293
    4. 'class' → logprob: -6.865645885467529
    5. '    ' → logprob: -10.865645408630371
    6. '	def' → logprob: -10.990645408630371
    7. ' class' → logprob: -11.990645408630371
    8. '```' → logprob: -12.115645408630371
    9. ' ' → logprob: -13.365645408630371
    10. ':def' → logprob: -13.365645408630371

Token 812: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6980676651000977
    2. '__' → logprob: -1.0730676651000977
    3. ' def' → logprob: -2.1980676651000977
    4. 'init' → logprob: -3.3230676651000977
    5. ' __' → logprob: -4.573067665100098
    6. '```' → logprob: -6.698067665100098
    7. 'classmethod' → logprob: -7.698067665100098
    8. 'python' → logprob: -8.073067665100098
    9. '_init' → logprob: -8.073067665100098
    10. '___' → logprob: -8.573067665100098

Token 813: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'def' → logprob: -18.375
    3. ' init' → logprob: -18.375
    4. '_init' → logprob: -19.625
    5. '(init' → logprob: -20.125
    6. '```' → logprob: -20.125
    7. 'new' → logprob: -21.5
    8. '	init' → logprob: -22.125
    9. 'in' → logprob: -22.125
    10. 'initi' → logprob: -22.375

Token 814: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.002237447304651141
    2. '(self' → logprob: -7.002237319946289
    3. '__' → logprob: -7.127237319946289
    4. '__(
' → logprob: -8.002237319946289
    5. '(' → logprob: -8.752237319946289
    6. '_(' → logprob: -10.877237319946289
    7. '__((' → logprob: -12.627237319946289
    8. 'self' → logprob: -13.252237319946289
    9. '_' → logprob: -13.502237319946289
    10. '<>(' → logprob: -14.127237319946289

Token 815: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00023250321100931615
    2. ' self' → logprob: -8.500232696533203
    3. '(self' → logprob: -10.875232696533203
    4. ',' → logprob: -12.875232696533203
    5. ',self' → logprob: -13.250232696533203
    6. '<|end|>' → logprob: -13.375232696533203
    7. '...' → logprob: -13.500232696533203
    8. '0' → logprob: -14.000232696533203
    9. '
' → logprob: -14.500232696533203
    10. '	self' → logprob: -15.000232696533203

Token 816: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007548353751190007
    2. '(self' → logprob: -7.7507548332214355
    3. 'self' → logprob: -8.125755310058594
    4. '__(' → logprob: -11.375755310058594
    5. ' (' → logprob: -12.625755310058594
    6. ',self' → logprob: -12.750755310058594
    7. '(' → logprob: -12.750755310058594
    8. '__,' → logprob: -13.000755310058594
    9. ' ,' → logprob: -13.375755310058594
    10. ',
' → logprob: -13.375755310058594

Token 817: ' n' (ID: 297)
  Prédit: 'navigator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'navigator' → logprob: -0.13819190859794617
    2. 'direction' → logprob: -2.3881919384002686
    3. ' navigator' → logprob: -3.5131919384002686
    4. ' direction' → logprob: -5.6381916999816895
    5. 'well' → logprob: -6.8881916999816895
    6. 'position' → logprob: -7.0131916999816895
    7. 'start' → logprob: -7.3881916999816895
    8. 'initial' → logprob: -8.138192176818848
    9. 'starting' → logprob: -8.138192176818848
    10. 'navigation' → logprob: -8.263192176818848

Token 818: ':' (ID: 25)
  Prédit: '_steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -0.19179204106330872
    2. ':' → logprob: -2.6917920112609863
    3. '=' → logprob: -2.8167920112609863
    4. 'um' → logprob: -4.316792011260986
    5. '):
' → logprob: -4.441792011260986
    6. 'avigation' → logprob: -4.941792011260986
    7. 'steps' → logprob: -6.316792011260986
    8. 'umber' → logprob: -6.316792011260986
    9. '_st' → logprob: -6.691792011260986
    10. '_' → logprob: -6.691792011260986

Token 819: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0006747855222783983
    2. ' int' → logprob: -7.875674724578857
    3. 'float' → logprob: -9.250675201416016
    4. '[int' → logprob: -9.500675201416016
    5. '10' → logprob: -10.125675201416016
    6. '=int' → logprob: -10.500675201416016
    7. 't' → logprob: -11.500675201416016
    8. ')' → logprob: -11.500675201416016
    9. ':int' → logprob: -12.000675201416016
    10. '100' → logprob: -12.625675201416016

Token 820: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7339185476303101
    2. '):' → logprob: -0.7339185476303101
    3. '):
' → logprob: -3.2339186668395996
    4. ')' → logprob: -8.233918190002441
    5. ' ):' → logprob: -9.483918190002441
    6. ' ,' → logprob: -9.608918190002441
    7. '):
' → logprob: -9.983918190002441
    8. ':' → logprob: -10.108918190002441
    9. '   ' → logprob: -11.233918190002441
    10. '=' → logprob: -11.483918190002441

Token 821: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37608668208122253
    2. 'self' → logprob: -1.251086711883545
    3. ' self' → logprob: -3.751086711883545
    4. '   ' → logprob: -5.876086711883545
    5. ',' → logprob: -7.001086711883545
    6. 'n' → logprob: -11.376086235046387
    7. ' ' → logprob: -11.501086235046387
    8. 'def' → logprob: -11.751086235046387
    9. '      ' → logprob: -12.001086235046387
    10. '(self' → logprob: -12.626086235046387

Token 822: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003364158037584275
    2. ' self' → logprob: -8.250336647033691
    3. '       ' → logprob: -9.500336647033691
    4. 'import' → logprob: -15.625336647033691
    5. '   ' → logprob: -16.250335693359375
    6. '
' → logprob: -18.500335693359375
    7. '	self' → logprob: -18.500335693359375
    8. ' ' → logprob: -18.750335693359375
    9. 'from' → logprob: -19.125335693359375
    10. '(self' → logprob: -20.000335693359375

Token 823: ' not' (ID: 625)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.38825199007987976
    2. 'n' → logprob: -1.1382520198822021
    3. ' not' → logprob: -6.638251781463623
    4. 'not' → logprob: -9.638252258300781
    5. '   ' → logprob: -13.263252258300781
    6. '	n' → logprob: -13.638252258300781
    7. ' isinstance' → logprob: -14.263252258300781
    8. 'n't' → logprob: -14.388252258300781
    9. 'type' → logprob: -15.013252258300781
    10. '(n' → logprob: -15.388252258300781

Token 824: ' (' (ID: 350)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.27475130558013916
    2. '(' → logprob: -1.7747513055801392
    3. ' isinstance' → logprob: -3.0247511863708496
    4. '(is' → logprob: -4.27475118637085
    5. '1' → logprob: -5.27475118637085
    6. '0' → logprob: -6.14975118637085
    7. ' (' → logprob: -7.39975118637085
    8. '(n' → logprob: -8.149751663208008
    9. 'n' → logprob: -10.899751663208008
    10. ' ' → logprob: -11.149751663208008

Token 825: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10785962641239166
    2. '0' → logprob: -2.4828596115112305
    3. 'is' → logprob: -4.4828596115112305
    4. '2' → logprob: -5.9828596115112305
    5. '3' → logprob: -6.1078596115112305
    6. ' ' → logprob: -6.9828596115112305
    7. 'n' → logprob: -7.1078596115112305
    8. ' isinstance' → logprob: -7.4828596115112305
    9. '10' → logprob: -9.23285961151123
    10. '5' → logprob: -9.35785961151123

Token 826: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03805285319685936
    2. '<=' → logprob: -3.288052797317505
    3. ',' → logprob: -13.413052558898926
    4. ' ≤' → logprob: -13.538052558898926
    5. ' ' → logprob: -13.788052558898926
    6. '<|end|>' → logprob: -13.788052558898926
    7. '0' → logprob: -13.913052558898926
    8. '   ' → logprob: -14.163052558898926
    9. ' <' → logprob: -14.288052558898926
    10. '**' → logprob: -14.413052558898926

Token 827: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.306760805164231e-05
    2. ' n' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.87501335144043
    4. '	n' → logprob: -18.62501335144043
    5. '_n' → logprob: -19.37501335144043
    6. '
' → logprob: -19.50001335144043
    7. '  ' → logprob: -19.62501335144043
    8. '       ' → logprob: -20.00001335144043
    9. ')n' → logprob: -20.37501335144043
    10. '```' → logprob: -20.50001335144043

Token 828: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.038044363260269165
    2. ' <=' → logprob: -3.2880444526672363
    3. 'and' → logprob: -13.413043975830078
    4. ' and' → logprob: -14.788043975830078
    5. '<' → logprob: -15.163043975830078
    6. '[' → logprob: -15.163043975830078
    7. '≤' → logprob: -15.413043975830078
    8. ' ' → logprob: -16.538043975830078
    9. '   ' → logprob: -17.288043975830078
    10. '=' → logprob: -17.413043975830078

Token 829: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4998810887336731
    2. '10' → logprob: -1.2498810291290283
    3. '20' → logprob: -3.4998810291290283
    4. '50' → logprob: -3.9998810291290283
    5. 'sys' → logprob: -4.499881267547607
    6. '99' → logprob: -5.374881267547607
    7. '30' → logprob: -5.499881267547607
    8. '200' → logprob: -5.749881267547607
    9. '15' → logprob: -5.749881267547607
    10. '9' → logprob: -5.749881267547607

Token 830: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.465469628572464
    2. '10' → logprob: -1.3404695987701416
    3. '50' → logprob: -3.4654695987701416
    4. '20' → logprob: -3.4654695987701416
    5. '30' → logprob: -5.340469837188721
    6. '200' → logprob: -5.465469837188721
    7. '8' → logprob: -5.465469837188721
    8. 'sys' → logprob: -5.465469837188721
    9. '500' → logprob: -5.590469837188721
    10. '15' → logprob: -5.715469837188721

Token 831: '0' (ID: 15)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6941430568695068
    2. '):' → logprob: -0.6941430568695068
    3. '0' → logprob: -7.944143295288086
    4. ' and' → logprob: -7.944143295288086
    5. ')' → logprob: -8.319143295288086
    6. '):
' → logprob: -10.819143295288086
    7. ' ):
' → logprob: -11.444143295288086
    8. ' ):' → logprob: -11.819143295288086
    9. 'and' → logprob: -13.569143295288086
    10. '):

' → logprob: -13.819143295288086

Token 832: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02849525399506092
    2. '):' → logprob: -4.1534953117370605
    3. ' and' → logprob: -4.4034953117370605
    4. ')' → logprob: -9.278494834899902
    5. 'and' → logprob: -10.278494834899902
    6. '):
' → logprob: -11.278494834899902
    7. ' ):
' → logprob: -12.403494834899902
    8. '0' → logprob: -13.903494834899902
    9. ':' → logprob: -14.153494834899902
    10. ':
' → logprob: -14.403494834899902

Token 833: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.035969629883766174
    2. '       ' → logprob: -3.6609697341918945
    3. ' raise' → logprob: -5.4109697341918945
    4. 'raise' → logprob: -5.6609697341918945
    5. ' self' → logprob: -8.160969734191895
    6. 'self' → logprob: -8.285969734191895
    7. ',' → logprob: -8.660969734191895
    8. '	       ' → logprob: -8.910969734191895
    9. '	raise' → logprob: -9.535969734191895
    10. '   ' → logprob: -9.660969734191895

Token 834: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.005413873586803675
    2. ' raise' → logprob: -6.005414009094238
    3. 'sys' → logprob: -6.005414009094238
    4. 'print' → logprob: -7.755414009094238
    5. '       ' → logprob: -10.380414009094238
    6. '           ' → logprob: -12.505414009094238
    7. ' sys' → logprob: -12.880414009094238
    8. '   ' → logprob: -13.005414009094238
    9. ' print' → logprob: -15.130414009094238
    10. '    ' → logprob: -15.880414009094238

Token 835: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -9.491498531133402e-06
    2. ' Value' → logprob: -11.750009536743164
    3. 'Assertion' → logprob: -13.375009536743164
    4. 'Runtime' → logprob: -17.125009536743164
    5. '(Value' → logprob: -18.000009536743164
    6. 'System' → logprob: -18.375009536743164
    7. '	Value' → logprob: -18.875009536743164
    8. 'Exception' → logprob: -19.250009536743164
    9. 'value' → logprob: -19.250009536743164
    10. '_value' → logprob: -19.500009536743164

Token 836: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.011051828041672707
    2. 'rror' → logprob: -4.511051654815674
    3. 'r' → logprob: -13.136052131652832
    4. 'ror' → logprob: -13.136052131652832
    5. 'n' → logprob: -17.261051177978516
    6. 'rr' → logprob: -18.886051177978516
    7. 'error' → logprob: -19.636051177978516
    8. 'Er' → logprob: -19.761051177978516
    9. 'or' → logprob: -20.011051177978516
    10. 'SError' → logprob: -20.386051177978516

Token 837: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -5.8961017202818766e-05
    2. '(' → logprob: -10.250059127807617
    3. '('' → logprob: -10.750059127807617
    4. '(f' → logprob: -13.250059127807617
    5. '(
' → logprob: -15.875059127807617
    6. '("'' → logprob: -16.375059127807617
    7. '()' → logprob: -18.875059127807617
    8. '"' → logprob: -19.000059127807617
    9. '(",' → logprob: -19.000059127807617
    10. '("\' → logprob: -19.500059127807617

Token 838: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05094994232058525
    2. 'Number' → logprob: -3.300950050354004
    3. '"' → logprob: -4.675950050354004
    4. 'The' → logprob: -7.175950050354004
    5. 'Invalid' → logprob: -7.550950050354004
    6. 'N' → logprob: -7.925950050354004
    7. 'Minimum' → logprob: -8.175950050354004
    8. ''' → logprob: -8.300950050354004
    9. 'Grid' → logprob: -8.675950050354004
    10. 'Value' → logprob: -8.675950050354004

Token 839: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.021647131070494652
    2. ' <' → logprob: -4.896646976470947
    3. ' >=' → logprob: -5.646646976470947
    4. ' should' → logprob: -5.771646976470947
    5. 'must' → logprob: -5.771646976470947
    6. ' <=' → logprob: -6.146646976470947
    7. ' >' → logprob: -6.646646976470947
    8. ' not' → logprob: -8.396647453308105
    9. '>' → logprob: -9.646647453308105
    10. ' ' → logprob: -9.646647453308105

Token 840: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -7.672236824873835e-05
    2. '<|end|>' → logprob: -10.875076293945312
    3. '>=' → logprob: -10.875076293945312
    4. ' >=' → logprob: -11.000076293945312
    5. ' not' → logprob: -11.500076293945312
    6. ' have' → logprob: -13.125076293945312
    7. '2' → logprob: -13.500076293945312
    8. ' ' → logprob: -13.750076293945312
    9. ' between' → logprob: -14.000076293945312
    10. '    ' → logprob: -14.250076293945312

Token 841: ' between' (ID: 2870)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.044316187500953674
    2. ' ' → logprob: -3.419316291809082
    3. 'int' → logprob: -4.919316291809082
    4. ' between' → logprob: -6.419316291809082
    5. ' an' → logprob: -7.669316291809082
    6. 'between' → logprob: -7.669316291809082
    7. 'an' → logprob: -8.419316291809082
    8. ' at' → logprob: -8.419316291809082
    9. '
' → logprob: -9.419316291809082
    10. ' int' → logprob: -9.544316291809082

Token 842: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000804745068307966
    2. ' ' → logprob: -7.125804901123047
    3. '
' → logprob: -16.250804901123047
    4. '   ' → logprob: -16.250804901123047
    5. '```' → logprob: -17.375804901123047
    6. '  ' → logprob: -18.250804901123047
    7. '1' → logprob: -18.625804901123047
    8. '    ' → logprob: -18.875804901123047
    9. '"' → logprob: -20.500804901123047
    10. '0' → logprob: -20.750804901123047

Token 843: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '
' → logprob: -17.0
    4. '```' → logprob: -17.75
    5. '   ' → logprob: -19.3125
    6. '۲' → logprob: -19.9375
    7. '1' → logprob: -20.0
    8. '  ' → logprob: -20.5
    9. '２' → logprob: -20.75
    10. '"' → logprob: -21.25

Token 844: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3132629990577698
    2. 'and' → logprob: -1.313262939453125
    3. 'inclusive' → logprob: -14.688262939453125
    4. ',' → logprob: -14.938262939453125
    5. '100' → logprob: -16.188262939453125
    6. '	and' → logprob: -16.313262939453125
    7. ' ' → logprob: -16.688262939453125
    8. ')' → logprob: -16.688262939453125
    9. '<|end|>' → logprob: -16.938262939453125
    10. '```' → logprob: -16.938262939453125

Token 845: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.02633036859333515
    2. ' ' → logprob: -3.6513304710388184
    3. '10' → logprob: -10.90132999420166
    4. '   ' → logprob: -12.27632999420166
    5. '999' → logprob: -12.90132999420166
    6. '  ' → logprob: -13.40132999420166
    7. 'n' → logprob: -14.71382999420166
    8. '1' → logprob: -14.90132999420166
    9. '
' → logprob: -15.40132999420166
    10. '```' → logprob: -15.65132999420166

Token 846: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00246614427305758
    2. '10' → logprob: -6.127466201782227
    3. ' ' → logprob: -9.627466201782227
    4. '500' → logprob: -10.002466201782227
    5. '999' → logprob: -10.002466201782227
    6. '200' → logprob: -10.377466201782227
    7. '50' → logprob: -11.252466201782227
    8. '300' → logprob: -11.252466201782227
    9. '20' → logprob: -11.627466201782227
    10. 'sys' → logprob: -11.627466201782227

Token 847: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. '1' → logprob: -11.250015258789062
    3. ')' → logprob: -14.500015258789062
    4. '00' → logprob: -14.625015258789062
    5. '3' → logprob: -15.375015258789062
    6. '       ' → logprob: -15.875015258789062
    7. '```' → logprob: -16.375015258789062
    8. ')
' → logprob: -16.625015258789062
    9. '   ' → logprob: -16.625015258789062
    10. 'inclusive' → logprob: -16.875015258789062

Token 848: ' inclusive' (ID: 29482)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.12209992855787277
    2. ')")' → logprob: -2.2470998764038086
    3. ')")
' → logprob: -5.122099876403809
    4. '")
' → logprob: -6.622099876403809
    5. ' inclusive' → logprob: -7.122099876403809
    6. ')' → logprob: -7.497099876403809
    7. ',' → logprob: -8.247099876403809
    8. '.")' → logprob: -8.997099876403809
    9. 'inclusive' → logprob: -9.247099876403809
    10. '}")' → logprob: -10.247099876403809

Token 849: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.03949318453669548
    2. '")' → logprob: -3.5394930839538574
    3. ')")
' → logprob: -4.789493083953857
    4. '.")
' → logprob: -7.164493083953857
    5. '")
' → logprob: -7.539493083953857
    6. ')")' → logprob: -9.914493560791016
    7. ')' → logprob: -11.789493560791016
    8. '.")' → logprob: -11.789493560791016
    9. ']")
' → logprob: -12.539493560791016
    10. '')")
' → logprob: -13.289493560791016

Token 850: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017213537357747555
    2. 'self' → logprob: -6.376721382141113
    3. ' self' → logprob: -11.626721382141113
    4. '   ' → logprob: -12.001721382141113
    5. '<|end|>' → logprob: -13.876721382141113
    6. 'import' → logprob: -14.001721382141113
    7. '
' → logprob: -14.126721382141113
    8. '```' → logprob: -14.751721382141113
    9. ' ' → logprob: -15.376721382141113
    10. 'def' → logprob: -15.751721382141113

Token 851: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007010532543063164
    2. '       ' → logprob: -5.007010459899902
    3. ' self' → logprob: -8.132010459899902
    4. '	self' → logprob: -14.382010459899902
    5. '   ' → logprob: -15.007010459899902
    6. 'import' → logprob: -16.00701141357422
    7. 'super' → logprob: -17.25701141357422
    8. '
' → logprob: -17.50701141357422
    9. 'def' → logprob: -17.63201141357422
    10. ' ' → logprob: -17.63201141357422

Token 852: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.002354360418394208
    2. 'n' → logprob: -6.127354145050049
    3. '.' → logprob: -9.627354621887207
    4. '.num' → logprob: -10.627354621887207
    5. '.size' → logprob: -11.127354621887207
    6. '._' → logprob: -11.377354621887207
    7. ' .' → logprob: -11.502354621887207
    8. '.steps' → logprob: -11.502354621887207
    9. '.count' → logprob: -11.877354621887207
    10. '.number' → logprob: -12.252354621887207

Token 853: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740828275680542
    2. ' =' → logprob: -0.9740828275680542
    3. '=n' → logprob: -12.599082946777344
    4. ' ' → logprob: -14.599082946777344
    5. '=int' → logprob: -15.099082946777344
    6. 's' → logprob: -15.224082946777344
    7. '	' → logprob: -15.474082946777344
    8. '   ' → logprob: -15.474082946777344
    9. 'n' → logprob: -15.474082946777344
    10. '_' → logprob: -15.849082946777344

Token 854: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004078758880496025
    2. ' n' → logprob: -5.5040788650512695
    3. '
' → logprob: -15.12907886505127
    4. '	n' → logprob: -16.004077911376953
    5. '   ' → logprob: -20.129077911376953
    6. '_n' → logprob: -20.879077911376953
    7. 'int' → logprob: -21.504077911376953
    8. '
    
' → logprob: -21.879077911376953
    9. ')n' → logprob: -22.004077911376953
    10. '    ' → logprob: -22.254077911376953

Token 855: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.515339195728302
    2. '   ' → logprob: -1.3903391361236572
    3. '
' → logprob: -2.0153391361236572
    4. '<|end|>' → logprob: -4.390339374542236
    5. 'def' → logprob: -5.015339374542236
    6. ' def' → logprob: -7.515339374542236
    7. '<|end|>' → logprob: -7.890339374542236
    8. ',' → logprob: -8.890338897705078
    9. '	def' → logprob: -9.515338897705078
    10. ' ' → logprob: -9.765338897705078

Token 856: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6547194719314575
    2. 'def' → logprob: -1.0297194719314575
    3. '       ' → logprob: -2.779719352722168
    4. ' def' → logprob: -3.529719352722168
    5. '<|end|>' → logprob: -3.654719352722168
    6. '
' → logprob: -5.529719352722168
    7. '	def' → logprob: -6.779719352722168
    8. ' ' → logprob: -8.154719352722168
    9. '<|end|>' → logprob: -8.654719352722168
    10. ',' → logprob: -8.904719352722168

Token 857: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0003132976416964084
    2. 'def' → logprob: -8.250313758850098
    3. '       ' → logprob: -10.000313758850098
    4. ' self' → logprob: -12.375313758850098
    5. 'from' → logprob: -13.750313758850098
    6. 'class' → logprob: -14.625313758850098
    7. '   ' → logprob: -14.875313758850098
    8. '
' → logprob: -15.000313758850098
    9. 'import' → logprob: -15.750313758850098
    10. '#' → logprob: -17.25031280517578

Token 858: '.navigator' (ID: 178671)
  Prédit: '.navigator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.navigator' → logprob: -0.14493046700954437
    2. '.steps' → logprob: -2.519930362701416
    3. '.positions' → logprob: -4.769930362701416
    4. '.position' → logprob: -4.769930362701416
    5. '.navigation' → logprob: -4.894930362701416
    6. '.n' → logprob: -5.019930362701416
    7. 'avigator' → logprob: -5.019930362701416
    8. '.current' → logprob: -5.519930362701416
    9. '.' → logprob: -5.769930362701416
    10. '.w' → logprob: -6.144930362701416

Token 859: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408992052078247
    2. '=' → logprob: -0.9740899205207825
    3. 's' → logprob: -12.099089622497559
    4. ':' → logprob: -12.599089622497559
    5. ' ' → logprob: -13.474089622497559
    6. '=None' → logprob: -14.099089622497559
    7. '_' → logprob: -14.599089622497559
    8. '   ' → logprob: -14.974089622497559
    9. '.' → logprob: -15.224089622497559
    10. ' =
' → logprob: -16.224090576171875

Token 860: ' Navigator' (ID: 47790)
  Prédit: 'Navigator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Navigator' → logprob: -0.006723302416503429
    2. ' Navigator' → logprob: -5.006723403930664
    3. 'Navig' → logprob: -12.256723403930664
    4. 'navigator' → logprob: -13.006723403930664
    5. '.Navigator' → logprob: -15.506723403930664
    6. '   ' → logprob: -15.756723403930664
    7. 'N' → logprob: -15.881723403930664
    8. 'Navigate' → logprob: -15.881723403930664
    9. 'Explorer' → logprob: -16.631723403930664
    10. 'Nav' → logprob: -16.631723403930664

Token 861: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010688089241739362
    2. 'Well' → logprob: -10.000106811523438
    3. '(
' → logprob: -10.125106811523438
    4. '(W' → logprob: -11.625106811523438
    5. '((' → logprob: -12.375106811523438
    6. '   ' → logprob: -13.250106811523438
    7. ' (' → logprob: -13.250106811523438
    8. '(

' → logprob: -13.750106811523438
    9. '       ' → logprob: -15.000106811523438
    10. '(self' → logprob: -15.125106811523438

Token 862: 'Well' (ID: 16936)
  Prédit: 'Well'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Well' → logprob: -6.153795766294934e-06
    2. ' Well' → logprob: -12.125005722045898
    3. 'W' → logprob: -15.125005722045898
    4. 'Wel' → logprob: -15.875005722045898
    5. '
' → logprob: -16.8750057220459
    6. 'We' → logprob: -17.2500057220459
    7. '   ' → logprob: -17.3750057220459
    8. 'Wall' → logprob: -17.5000057220459
    9. '_W' → logprob: -18.0000057220459
    10. '(' → logprob: -18.0000057220459

Token 863: 'Direction' (ID: 14084)
  Prédit: 'Direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: 0.0
    2. '_direction' → logprob: -20.75
    3. 'direction' → logprob: -20.875
    4. 'Directional' → logprob: -20.875
    5. 'Distance' → logprob: -22.125
    6. 'Dire' → logprob: -22.375
    7. 'Direct' → logprob: -22.375
    8. 'Position' → logprob: -22.625
    9. 'Directions' → logprob: -22.625
    10. ' Direction' → logprob: -22.625

Token 864: 'Provider' (ID: 5999)
  Prédit: 'Provider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Provider' → logprob: 0.0
    2. 'provider' → logprob: -17.75
    3. 'Provide' → logprob: -18.375
    4. '_provider' → logprob: -18.5
    5. 'Provid' → logprob: -19.0
    6. '.Provider' → logprob: -20.125
    7. ' Provider' → logprob: -20.375
    8. 'Provided' → logprob: -20.375
    9. '_PROVIDER' → logprob: -20.625
    10. 'Pro' → logprob: -21.25

Token 865: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -6.360996485454962e-05
    2. '())
' → logprob: -10.6250638961792
    3. '()' → logprob: -10.8750638961792
    4. ' ())' → logprob: -11.1250638961792
    5. '(' → logprob: -12.5000638961792
    6. '()))' → logprob: -14.5000638961792
    7. '())

' → logprob: -14.8750638961792
    8. '(W' → logprob: -15.6250638961792
    9. '());' → logprob: -16.250062942504883
    10. '(n' → logprob: -16.250062942504883

Token 866: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06537345796823502
    2. 'def' → logprob: -2.815373420715332
    3. ' def' → logprob: -5.940373420715332
    4. '<|end|>' → logprob: -7.315373420715332
    5. '
' → logprob: -10.690373420715332
    6. '	def' → logprob: -10.690373420715332
    7. '<|end|>' → logprob: -10.940373420715332
    8. '    
' → logprob: -11.565373420715332
    9. '```' → logprob: -11.565373420715332
    10. ' ' → logprob: -11.690373420715332

Token 867: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.566264295950532e-05
    2. ' def' → logprob: -9.375085830688477
    3. '   ' → logprob: -14.375085830688477
    4. 'self' → logprob: -15.750085830688477
    5. 'import' → logprob: -17.375085830688477
    6. 'from' → logprob: -18.750085830688477
    7. 'current' → logprob: -19.000085830688477
    8. '```' → logprob: -19.250085830688477
    9. '	def' → logprob: -20.000085830688477
    10. 'de' → logprob: -20.375085830688477

Token 868: ' find' (ID: 1646)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.6277307271957397
    2. 'perform' → logprob: -1.8777307271957397
    3. 'run' → logprob: -2.1277308464050293
    4. 'hunt' → logprob: -2.3777308464050293
    5. 'start' → logprob: -3.5027308464050293
    6. 'simulate' → logprob: -3.7527308464050293
    7. 'find' → logprob: -4.752730846405029
    8. 'expl' → logprob: -5.252730846405029
    9. ' search' → logprob: -5.377730846405029
    10. 'execute' → logprob: -5.377730846405029

Token 869: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.17496897280216217
    2. '_path' → logprob: -1.924968957901001
    3. 'tre' → logprob: -5.17496919631958
    4. '(self' → logprob: -6.54996919631958
    5. '_location' → logprob: -6.92496919631958
    6. '()' → logprob: -7.29996919631958
    7. '_' → logprob: -7.42496919631958
    8. '_solution' → logprob: -7.79996919631958
    9. '_sp' → logprob: -7.92496919631958
    10. '_exit' → logprob: -8.049968719482422

Token 870: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -2.522638169466518e-05
    2. 'r' → logprob: -11.875024795532227
    3. 'arget' → logprob: -11.875024795532227
    4. 'race' → logprob: -12.000024795532227
    5. 'rea' → logprob: -13.125024795532227
    6. 'h' → logprob: -14.125024795532227
    7. 'reas' → logprob: -14.250024795532227
    8. '_re' → logprob: -14.375024795532227
    9. 'he' → logprob: -14.625024795532227
    10. 'res' → logprob: -15.250024795532227

Token 871: 'asure' (ID: 5450)
  Prédit: 'asure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asure' → logprob: -2.7133641196996905e-05
    2. 'a' → logprob: -10.87502670288086
    3. 'sure' → logprob: -12.37502670288086
    4. 'as' → logprob: -13.25002670288086
    5. '_' → logprob: -14.25002670288086
    6. 'ASURE' → logprob: -14.37502670288086
    7. 'asury' → logprob: -14.87502670288086
    8. 'asurer' → logprob: -16.00002670288086
    9. 'asures' → logprob: -16.25002670288086
    10. '
' → logprob: -17.12502670288086

Token 872: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011205670423805714
    2. '(' → logprob: -4.511205673217773
    3. '()' → logprob: -10.261205673217773
    4. 'self' → logprob: -10.261205673217773
    5. '_location' → logprob: -10.636205673217773
    6. '_position' → logprob: -10.761205673217773
    7. '_(' → logprob: -11.136205673217773
    8. '_path' → logprob: -12.011205673217773
    9. '_' → logprob: -12.136205673217773
    10. '_at' → logprob: -12.886205673217773

Token 873: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4663746654987335
    2. '):' → logprob: -1.4663746356964111
    3. 'self' → logprob: -2.091374635696411
    4. ',' → logprob: -4.71637487411499
    5. '(self' → logprob: -5.59137487411499
    6. ')' → logprob: -5.84137487411499
    7. '):
' → logprob: -7.34137487411499
    8. ')(' → logprob: -7.34137487411499
    9. '   ' → logprob: -7.71637487411499
    10. '       ' → logprob: -7.96637487411499

Token 874: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00031377444975078106
    2. 'self' → logprob: -8.375313758850098
    3. '(' → logprob: -10.000313758850098
    4. '   ' → logprob: -11.375313758850098
    5. '       ' → logprob: -11.375313758850098
    6. ':' → logprob: -12.375313758850098
    7. ':
' → logprob: -12.875313758850098
    8. 'def' → logprob: -12.875313758850098
    9. ' self' → logprob: -13.500313758850098
    10. '():
' → logprob: -13.750313758850098

Token 875: ' Vector' (ID: 8764)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.2514028549194336
    2. 'int' → logprob: -1.6264028549194336
    3. 'bool' → logprob: -1.6264028549194336
    4. 'Vector' → logprob: -1.8764028549194336
    5. 'list' → logprob: -2.6264028549194336
    6. 'float' → logprob: -2.6264028549194336
    7. 'str' → logprob: -4.126402854919434
    8. 'tuple' → logprob: -5.251402854919434
    9. 'vector' → logprob: -8.626402854919434
    10. '[' → logprob: -8.751402854919434

Token 876: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '[' → logprob: -18.25
    3. '```' → logprob: -19.0
    4. 'Vector' → logprob: -19.625
    5. ' ' → logprob: -22.625
    6. '۲' → logprob: -22.75
    7. '   ' → logprob: -23.0
    8. '``' → logprob: -23.25
    9. 'The' → logprob: -23.375
    10. '(Vector' → logprob: -23.5

Token 877: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -6.704273118884885e-07
    2. 'Vector' → logprob: -14.250000953674316
    3. '2' → logprob: -19.0
    4. '_D' → logprob: -20.125
    5. '   ' → logprob: -20.5
    6. ' D' → logprob: -20.625
    7. 'vector' → logprob: -21.125
    8. '[' → logprob: -21.5
    9. '{' → logprob: -21.5
    10. '0' → logprob: -22.0

Token 878: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.010133789852261543
    2. '():
' → logprob: -5.510133743286133
    3. '():' → logprob: -5.885133743286133
    4. '(' → logprob: -6.010133743286133
    5. '   ' → logprob: -8.010133743286133
    6. '       ' → logprob: -8.385133743286133
    7. ':' → logprob: -9.260133743286133
    8. '()' → logprob: -10.010133743286133
    9. ' (' → logprob: -10.510133743286133
    10. '(
' → logprob: -10.635133743286133

Token 879: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003983760252594948
    2. 'position' → logprob: -8.625398635864258
    3. 'pos' → logprob: -9.375398635864258
    4. '   ' → logprob: -10.125398635864258
    5. ' position' → logprob: -10.250398635864258
    6. 'current' → logprob: -10.375398635864258
    7. '```' → logprob: -12.000398635864258
    8. ' for' → logprob: -12.625398635864258
    9. ' current' → logprob: -12.750398635864258
    10. ' pos' → logprob: -13.250398635864258

Token 880: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019463682547211647
    2. 'self' → logprob: -6.751946449279785
    3. '       ' → logprob: -7.501946449279785
    4. ' for' → logprob: -8.876946449279785
    5. 'pos' → logprob: -9.876946449279785
    6. 'position' → logprob: -11.001946449279785
    7. 'current' → logprob: -11.876946449279785
    8. 'while' → logprob: -12.876946449279785
    9. 'prev' → logprob: -13.251946449279785
    10. 'positions' → logprob: -13.376946449279785

Token 881: ' Initial' (ID: 9209)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09224338829517365
    2. 'for' → logprob: -3.2172434329986572
    3. 'pos' → logprob: -3.3422434329986572
    4. '       ' → logprob: -5.217243194580078
    5. 'position' → logprob: -5.967243194580078
    6. 'current' → logprob: -6.092243194580078
    7. '#' → logprob: -6.342243194580078
    8. ' self' → logprob: -7.967243194580078
    9. 'start' → logprob: -9.467243194580078
    10. 'step' → logprob: -9.592243194580078

Token 882: ' step' (ID: 5983)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.022994687780737877
    2. '       ' → logprob: -4.647994518280029
    3. 'position' → logprob: -5.022994518280029
    4. ' self' → logprob: -5.647994518280029
    5. '#' → logprob: -6.522994518280029
    6. 'pos' → logprob: -7.147994518280029
    7. 'result' → logprob: -8.772994995117188
    8. '
' → logprob: -8.897994995117188
    9. 'step' → logprob: -9.522994995117188
    10. 's' → logprob: -9.897994995117188

Token 883: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0052899690344929695
    2. 'self' → logprob: -5.6302900314331055
    3. ' for' → logprob: -7.1302900314331055
    4. ' self' → logprob: -8.505290031433105
    5. 'position' → logprob: -9.255290031433105
    6. 'for' → logprob: -9.380290031433105
    7. ' =' → logprob: -9.505290031433105
    8. ':' → logprob: -9.505290031433105
    9. '   ' → logprob: -9.755290031433105
    10. ',' → logprob: -10.255290031433105

Token 884: ' from' (ID: 591)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008516347035765648
    2. ' self' → logprob: -4.883516311645508
    3. '       ' → logprob: -7.258516311645508
    4. 'for' → logprob: -8.633516311645508
    5. ' for' → logprob: -11.633516311645508
    6. '#' → logprob: -11.758516311645508
    7. 'current' → logprob: -12.258516311645508
    8. 'result' → logprob: -13.383516311645508
    9. 'position' → logprob: -13.633516311645508
    10. '
' → logprob: -14.008516311645508

Token 885: ' well' (ID: 1775)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.46584585309028625
    2. 'self' → logprob: -1.2158458232879639
    3. '(Vector' → logprob: -3.465845823287964
    4. '(' → logprob: -4.215846061706543
    5. 'position' → logprob: -4.840846061706543
    6. 'origin' → logprob: -5.090846061706543
    7. 'start' → logprob: -5.090846061706543
    8. 'current' → logprob: -5.715846061706543
    9. 'starting' → logprob: -6.090846061706543
    10. '(self' → logprob: -6.090846061706543

Token 886: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2622213363647461
    2. 'self' → logprob: -2.137221336364746
    3. ',' → logprob: -2.512221336364746
    4. ' (' → logprob: -4.762221336364746
    5. ' to' → logprob: -5.012221336364746
    6. ' self' → logprob: -5.512221336364746
    7. '(' → logprob: -6.012221336364746
    8. '(self' → logprob: -6.137221336364746
    9. ' at' → logprob: -6.262221336364746
    10. 'position' → logprob: -6.262221336364746

Token 887: ' go' (ID: 810)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11741434782743454
    2. ' self' → logprob: -2.8674142360687256
    3. 'for' → logprob: -3.2424142360687256
    4. '#' → logprob: -4.992414474487305
    5. ' for' → logprob: -5.242414474487305
    6. 'perform' → logprob: -7.742414474487305
    7. '0' → logprob: -7.992414474487305
    8. '       ' → logprob: -8.117414474487305
    9. 'face' → logprob: -8.242414474487305
    10. ' perform' → logprob: -8.367414474487305

Token 888: ' east' (ID: 23557)
  Prédit: ' east'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' east' → logprob: -1.106153130531311
    2. 'east' → logprob: -1.231153130531311
    3. 'forward' → logprob: -1.981153130531311
    4. 'right' → logprob: -2.8561530113220215
    5. ' forward' → logprob: -3.1061530113220215
    6. 'north' → logprob: -3.7311530113220215
    7. '   ' → logprob: -3.9811530113220215
    8. 'straight' → logprob: -4.1061530113220215
    9. ' straight' → logprob: -4.4811530113220215
    10. ' right' → logprob: -4.7311530113220215

Token 889: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0211124699562788
    2. 'self' → logprob: -4.271112442016602
    3. ' and' → logprob: -6.646112442016602
    4. '
' → logprob: -6.646112442016602
    5. ' (' → logprob: -6.771112442016602
    6. '(' → logprob: -6.896112442016602
    7. ',' → logprob: -7.521112442016602
    8. '(self' → logprob: -8.396112442016602
    9. ' self' → logprob: -8.396112442016602
    10. ' for' → logprob: -8.521112442016602

Token 890: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.42263859510421753
    2. '
' → logprob: -2.2976386547088623
    3. 'and' → logprob: -2.6726386547088623
    4. '1' → logprob: -2.9226386547088623
    5. '       ' → logprob: -3.1726386547088623
    6. '(' → logprob: -3.4226386547088623
    7. 'for' → logprob: -3.7976386547088623
    8. '(self' → logprob: -4.547638416290283
    9. ' self' → logprob: -5.672638416290283
    10. ',' → logprob: -6.172638416290283

Token 891: 'm' (ID: 76)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0072218081913888454
    2. 'm' → logprob: -5.132221698760986
    3. '       ' → logprob: -7.757221698760986
    4. ' step' → logprob: -8.507222175598145
    5. '<|end|>' → logprob: -9.007222175598145
    6. '
' → logprob: -9.257222175598145
    7. '   ' → logprob: -9.632222175598145
    8. ',' → logprob: -9.882222175598145
    9. '        
' → logprob: -10.007222175598145
    10. '<|end|>' → logprob: -10.007222175598145

Token 892: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1021067425608635
    2. 'self' → logprob: -2.352106809616089
    3. '
' → logprob: -7.10210657119751
    4. ' self' → logprob: -7.60210657119751
    5. ',' → logprob: -8.477107048034668
    6. '(self' → logprob: -9.852107048034668
    7. '        
' → logprob: -9.977107048034668
    8. '   ' → logprob: -10.227107048034668
    9. '#' → logprob: -10.477107048034668
    10. 'vector' → logprob: -10.602107048034668

Token 893: ' face' (ID: 4950)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009890188463032246
    2. '       ' → logprob: -5.384890079498291
    3. ' self' → logprob: -6.009890079498291
    4. 'then' → logprob: -6.009890079498291
    5. ' then' → logprob: -8.38489055633545
    6. 'current' → logprob: -10.13489055633545
    7. '#' → logprob: -11.25989055633545
    8. 'for' → logprob: -11.38489055633545
    9. 'and' → logprob: -12.00989055633545
    10. 'this' → logprob: -12.00989055633545

Token 894: ' well' (ID: 1775)
  Prédit: 'well'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'well' → logprob: -0.43502679467201233
    2. '_w' → logprob: -1.06002676486969
    3. ' well' → logprob: -5.3100266456604
    4. 'w' → logprob: -8.060027122497559
    5. 'west' → logprob: -8.060027122497559
    6. 'the' → logprob: -8.560027122497559
    7. 'tow' → logprob: -8.810027122497559
    8. '_' → logprob: -9.060027122497559
    9. 'north' → logprob: -9.185027122497559
    10. ' ' → logprob: -10.185027122497559

Token 895: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018197467550635338
    2. 'self' → logprob: -4.768197536468506
    3. '
' → logprob: -5.393197536468506
    4. '()
' → logprob: -5.643197536468506
    5. '()' → logprob: -7.268197536468506
    6. ',' → logprob: -7.768197536468506
    7. '(self' → logprob: -8.893197059631348
    8. ' self' → logprob: -10.393197059631348
    9. '(' → logprob: -10.393197059631348
    10. '        
' → logprob: -10.643197059631348

Token 896: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030029671266674995
    2. 'self' → logprob: -3.530029773712158
    3. '
' → logprob: -9.905029296875
    4. '   ' → logprob: -10.405029296875
    5. 'current' → logprob: -10.405029296875
    6. 'next' → logprob: -10.405029296875
    7. 'start' → logprob: -10.530029296875
    8. '```' → logprob: -10.530029296875
    9. 'result' → logprob: -11.155029296875
    10. '        
' → logprob: -11.280029296875

Token 897: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01655966229736805
    2. ' self' → logprob: -4.766559600830078
    3. '       ' → logprob: -5.766559600830078
    4. 'start' → logprob: -5.766559600830078
    5. 'initial' → logprob: -6.891559600830078
    6. 'step' → logprob: -8.016559600830078
    7. 'pos' → logprob: -9.516559600830078
    8. 'delta' → logprob: -10.141559600830078
    9. 'next' → logprob: -10.391559600830078
    10. 'starting' → logprob: -10.516559600830078

Token 898: '.navigator' (ID: 178671)
  Prédit: '.navigator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.navigator' → logprob: -0.0008274946012534201
    2. '.' → logprob: -7.500827312469482
    3. '.navigate' → logprob: -9.25082778930664
    4. '.navigation' → logprob: -9.75082778930664
    5. 'navigator' → logprob: -9.75082778930664
    6. '.Navigator' → logprob: -11.00082778930664
    7. '.n' → logprob: -11.75082778930664
    8. '.nav' → logprob: -11.87582778930664
    9. '   ' → logprob: -12.25082778930664
    10. ' .' → logprob: -12.37582778930664

Token 899: '.position' (ID: 13130)
  Prédit: '.move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.01399436965584755
    2. '.position' → logprob: -4.513994216918945
    3. '.f' → logprob: -6.138994216918945
    4. '.face' → logprob: -7.513994216918945
    5. '.' → logprob: -9.138994216918945
    6. '.turn' → logprob: -9.513994216918945
    7. '.fac' → logprob: -11.263994216918945
    8. 'move' → logprob: -11.513994216918945
    9. '.perform' → logprob: -11.888994216918945
    10. 'f' → logprob: -12.513994216918945

Token 900: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02104243077337742
    2. '+=' → logprob: -4.521042346954346
    3. ' =' → logprob: -4.646042346954346
    4. ' +=' → logprob: -8.146042823791504
    5. '.=' → logprob: -10.021042823791504
    6. '.' → logprob: -12.021042823791504
    7. '+' → logprob: -13.146042823791504
    8. '.x' → logprob: -13.396042823791504
    9. '=self' → logprob: -15.146042823791504
    10. '＝' → logprob: -15.521042823791504

Token 901: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -2.117345684382599e-05
    2. ' Vector' → logprob: -11.125020980834961
    3. 'self' → logprob: -12.000020980834961
    4. '(Vector' → logprob: -16.37502098083496
    5. '	Vector' → logprob: -16.50002098083496
    6. '<Vector' → logprob: -19.12502098083496
    7. '  ' → logprob: -19.37502098083496
    8. '   ' → logprob: -19.50002098083496
    9. 'vector' → logprob: -20.25002098083496
    10. '.Vector' → logprob: -20.25002098083496

Token 902: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004341261519584805
    2. 'Vector' → logprob: -7.750433921813965
    3. '(Vector' → logprob: -13.125433921813965
    4. '.Vector' → logprob: -14.125433921813965
    5. '(' → logprob: -14.500433921813965
    6. ' Vector' → logprob: -15.625433921813965
    7. 'D' → logprob: -17.75043487548828
    8. '<Vector' → logprob: -17.87543487548828
    9. 'vector' → logprob: -18.50043487548828
    10. 'To' → logprob: -18.62543487548828

Token 903: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00526316836476326
    2. 'Vector' → logprob: -5.255263328552246
    3. '(Vector' → logprob: -11.255263328552246
    4. ' Vector' → logprob: -11.880263328552246
    5. '(' → logprob: -11.880263328552246
    6. '2' → logprob: -13.380263328552246
    7. '.Vector' → logprob: -14.630263328552246
    8. '4' → logprob: -15.880263328552246
    9. '0' → logprob: -16.00526237487793
    10. 'F' → logprob: -16.88026237487793

Token 904: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.981667537620524e-06
    2. '1' → logprob: -13.250001907348633
    3. ' (' → logprob: -16.125001907348633
    4. '(
' → logprob: -20.000001907348633
    5. '(self' → logprob: -21.125001907348633
    6. '((' → logprob: -22.500001907348633
    7. '   ' → logprob: -23.125001907348633
    8. '(-' → logprob: -23.375001907348633
    9. '()' → logprob: -23.750001907348633
    10. '(n' → logprob: -23.875001907348633

Token 905: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021557629224844277
    2. '0' → logprob: -8.500215530395508
    3. '-' → logprob: -12.250215530395508
    4. ' ' → logprob: -12.500215530395508
    5. '(' → logprob: -13.312715530395508
    6. '   ' → logprob: -14.750215530395508
    7. '

' → logprob: -15.500215530395508
    8. '  ' → logprob: -15.937715530395508
    9. '```' → logprob: -16.000215530395508
    10. '100' → logprob: -16.250215530395508

Token 906: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.9146995327901095e-05
    2. ',' → logprob: -11.000019073486328
    3. '.,' → logprob: -13.875019073486328
    4. '0' → logprob: -14.000019073486328
    5. ' .' → logprob: -15.250019073486328
    6. 'e' → logprob: -16.625019073486328
    7. '.
' → logprob: -16.750019073486328
    8. '```' → logprob: -17.250019073486328
    9. ' ,' → logprob: -17.875019073486328
    10. '٫' → logprob: -18.000019073486328

Token 907: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.625
    3. '00' → logprob: -17.25
    4. '000' → logprob: -18.0625
    5. ',' → logprob: -18.25
    6. '```' → logprob: -18.8125
    7. ')' → logprob: -19.25
    8. '   ' → logprob: -20.0
    9. 'f' → logprob: -20.0
    10. '  ' → logprob: -20.375

Token 908: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.847109812544659e-05
    2. ' ,' → logprob: -10.375048637390137
    3. '0' → logprob: -11.125048637390137
    4. ',
' → logprob: -13.250048637390137
    5. ')' → logprob: -15.000048637390137
    6. 'f' → logprob: -15.500048637390137
    7. '
' → logprob: -16.62504768371582
    8. ' ' → logprob: -17.12504768371582
    9. '```' → logprob: -17.12504768371582
    10. '),' → logprob: -18.00004768371582

Token 909: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.875096321105957
    4. '  ' → logprob: -17.125097274780273
    5. ' ' → logprob: -18.062597274780273
    6. '1' → logprob: -18.500097274780273
    7. '00' → logprob: -18.625097274780273
    8. '    ' → logprob: -19.750097274780273
    9. '```' → logprob: -19.875097274780273
    10. '.' → logprob: -19.937597274780273

Token 910: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.875036239624023
    4. '  ' → logprob: -18.187536239624023
    5. '00' → logprob: -18.625036239624023
    6. '1' → logprob: -19.062536239624023
    7. ' ' → logprob: -19.187536239624023
    8. '۰' → logprob: -19.812536239624023
    9. '﻿' → logprob: -20.437536239624023
    10. '000' → logprob: -20.500036239624023

Token 911: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003981376066803932
    2. ',' → logprob: -8.000397682189941
    3. '0' → logprob: -9.750397682189941
    4. ')' → logprob: -12.625397682189941
    5. ' .' → logprob: -14.375397682189941
    6. '.,' → logprob: -15.000397682189941
    7. '       ' → logprob: -17.000398635864258
    8. ' ,' → logprob: -17.250398635864258
    9. '   ' → logprob: -17.375398635864258
    10. ' ' → logprob: -17.875398635864258

Token 912: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.625000953674316
    3. ' ' → logprob: -16.125
    4. ')' → logprob: -16.375
    5. '       ' → logprob: -16.625
    6. 'f' → logprob: -17.75
    7. 'float' → logprob: -18.8125
    8. '```' → logprob: -19.0625
    9. ',' → logprob: -19.1875
    10. '  ' → logprob: -19.375

Token 913: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07893925160169601
    2. ')' → logprob: -2.578939199447632
    3. ')
' → logprob: -10.578939437866211
    4. '       ' → logprob: -10.703939437866211
    5. ')

' → logprob: -14.078939437866211
    6. ' )
' → logprob: -14.828939437866211
    7. '   ' → logprob: -15.453939437866211
    8. ')`
' → logprob: -16.82893943786621
    9. '),' → logprob: -17.32893943786621
    10. ')#' → logprob: -17.57893943786621

Token 914: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06202549487352371
    2. 'self' → logprob: -2.812025547027588
    3. ' self' → logprob: -10.18702507019043
    4. '   ' → logprob: -10.93702507019043
    5. '
' → logprob: -14.18702507019043
    6. '           ' → logprob: -15.31202507019043
    7. '        
' → logprob: -15.43702507019043
    8. ' ' → logprob: -15.81202507019043
    9. '```' → logprob: -15.81202507019043
    10. '      ' → logprob: -16.06202507019043

Token 915: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0233287513256073
    2. '       ' → logprob: -3.7733287811279297
    3. ' self' → logprob: -9.39832878112793
    4. '   ' → logprob: -15.39832878112793
    5. '	self' → logprob: -15.89832878112793
    6. '```' → logprob: -17.77332878112793
    7. '[self' → logprob: -17.89832878112793
    8. ' ' → logprob: -17.89832878112793
    9. 'Self' → logprob: -19.39832878112793
    10. '(self' → logprob: -19.39832878112793

Token 916: '.navigator' (ID: 178671)
  Prédit: '.navigator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.navigator' → logprob: -9.531813702778891e-05
    2. 'navigator' → logprob: -9.37509536743164
    3. 'avigator' → logprob: -12.75009536743164
    4. '.Navigator' → logprob: -13.12509536743164
    5. '.' → logprob: -13.37509536743164
    6. '.navigate' → logprob: -13.87509536743164
    7. ' .' → logprob: -14.25009536743164
    8. '.navigation' → logprob: -14.37509536743164
    9. '.nav' → logprob: -14.62509536743164
    10. '.face' → logprob: -15.25009536743164

Token 917: '.face' (ID: 92193)
  Prédit: '.face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.face' → logprob: -7.941850526549388e-06
    2. 'face' → logprob: -12.250007629394531
    3. '.' → logprob: -13.375007629394531
    4. ' .' → logprob: -13.750007629394531
    5. '.fac' → logprob: -15.375007629394531
    6. ' face' → logprob: -16.12500762939453
    7. '.faces' → logprob: -16.25000762939453
    8. '.Face' → logprob: -17.75000762939453
    9. '​.' → logprob: -19.12500762939453
    10. '_face' → logprob: -19.50000762939453

Token 918: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: 0.0
    2. 'w' → logprob: -18.625
    3. '_' → logprob: -19.25
    4. '\' → logprob: -19.75
    5. '```' → logprob: -20.25
    6. 'well' → logprob: -20.5
    7. '_
' → logprob: -21.875
    8. '_t' → logprob: -22.5
    9. '	w' → logprob: -22.75
    10. '"_' → logprob: -22.75

Token 919: 'ell' (ID: 596)
  Prédit: 'ell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ell' → logprob: -3.4121114822482923e-06
    2. 'well' → logprob: -12.750003814697266
    3. '_' → logprob: -15.875003814697266
    4. 'all' → logprob: -16.125003814697266
    5. '
' → logprob: -17.375003814697266
    6. '...' → logprob: -17.375003814697266
    7. 'e' → logprob: -17.375003814697266
    8. '```' → logprob: -17.750003814697266
    9. 'el' → logprob: -18.125003814697266
    10. '   ' → logprob: -18.375003814697266

Token 920: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01651698164641857
    2. ' for' → logprob: -4.891517162322998
    3. 'for' → logprob: -5.016517162322998
    4. '
' → logprob: -6.266517162322998
    5. '<|end|>' → logprob: -8.89151668548584
    6. '        
' → logprob: -9.26651668548584
    7. '<|end|>' → logprob: -10.39151668548584
    8. ',' → logprob: -10.89151668548584
    9. '```' → logprob: -11.01651668548584
    10. '#' → logprob: -12.14151668548584

Token 921: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017707353690639138
    2. 'for' → logprob: -7.001770973205566
    3. ' for' → logprob: -7.251770973205566
    4. '   ' → logprob: -9.001770973205566
    5. '```' → logprob: -11.126770973205566
    6. 'current' → logprob: -12.751770973205566
    7. '
' → logprob: -13.251770973205566
    8. 'next' → logprob: -13.501770973205566
    9. '        
' → logprob: -13.751770973205566
    10. '           ' → logprob: -14.501770973205566

Token 922: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20254822075366974
    2. '       ' → logprob: -1.7025482654571533
    3. ' for' → logprob: -6.827548027038574
    4. '   ' → logprob: -10.202548027038574
    5. '	for' → logprob: -11.952548027038574
    6. '```' → logprob: -12.327548027038574
    7. 'current' → logprob: -13.702548027038574
    8. 'step' → logprob: -14.702548027038574
    9. 'steps' → logprob: -15.702548027038574
    10. 'next' → logprob: -15.952548027038574

Token 923: ' Then' (ID: 7801)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005405236734077334
    2. '       ' → logprob: -8.000540733337402
    3. ' for' → logprob: -8.500540733337402
    4. 'steps' → logprob: -14.125540733337402
    5. 'step' → logprob: -15.375540733337402
    6. 'current' → logprob: -15.875540733337402
    7. '   ' → logprob: -16.250539779663086
    8. '#' → logprob: -16.375539779663086
    9. 'positions' → logprob: -16.500539779663086
    10. 'previous' → logprob: -16.625539779663086

Token 924: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25387197732925415
    2. ' for' → logprob: -1.5038719177246094
    3. '       ' → logprob: -6.253871917724609
    4. '
' → logprob: -11.12887191772461
    5. '   ' → logprob: -13.12887191772461
    6. '	for' → logprob: -14.50387191772461
    7. '        
' → logprob: -15.37887191772461
    8. '    ' → logprob: -15.87887191772461
    9. '```' → logprob: -16.50387191772461
    10. ' 
' → logprob: -16.62887191772461

Token 925: ' n' (ID: 297)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6596445441246033
    2. 'step' → logprob: -1.534644603729248
    3. 'i' → logprob: -1.659644603729248
    4. '_step' → logprob: -3.659644603729248
    5. ' step' → logprob: -3.659644603729248
    6. '_i' → logprob: -4.409644603729248
    7. ' i' → logprob: -4.784644603729248
    8. ' _' → logprob: -5.284644603729248
    9. '_steps' → logprob: -9.65964412689209
    10. '	step' → logprob: -11.15964412689209

Token 926: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.36883050203323364
    2. 'in' → logprob: -2.118830442428589
    3. ' in' → logprob: -2.368830442428589
    4. ' -' → logprob: -2.618830442428589
    5. '_' → logprob: -3.993830442428589
    6. ' _' → logprob: -7.743830680847168
    7. ' ' → logprob: -7.743830680847168
    8. 'i' → logprob: -8.118830680847168
    9. '_in' → logprob: -8.118830680847168
    10. '_steps' → logprob: -8.118830680847168

Token 927: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003945688367821276
    2. ' ' → logprob: -8.000394821166992
    3. '2' → logprob: -9.750394821166992
    4. '   ' → logprob: -14.375394821166992
    5. '```' → logprob: -16.750394821166992
    6. '  ' → logprob: -17.000394821166992
    7. '
' → logprob: -17.125394821166992
    8. '-' → logprob: -17.250394821166992
    9. '    ' → logprob: -18.250394821166992
    10. 'self' → logprob: -18.375394821166992

Token 928: ' times' (ID: 4238)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.8878018260002136
    2. ' times' → logprob: -1.6378018856048584
    3. '_steps' → logprob: -1.6378018856048584
    4. 'steps' → logprob: -1.8878018856048584
    5. ' _' → logprob: -3.3878018856048584
    6. '_' → logprob: -4.762801647186279
    7. 'times' → logprob: -5.887801647186279
    8. '_times' → logprob: -6.887801647186279
    9. ' step' → logprob: -7.512801647186279
    10. '_step' → logprob: -7.637801647186279

Token 929: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053676724433898926
    2. ' for' → logprob: -3.0536766052246094
    3. ':' → logprob: -5.553676605224609
    4. 'for' → logprob: -7.678676605224609
    5. ':
' → logprob: -8.42867660522461
    6. ' in' → logprob: -8.42867660522461
    7. ',' → logprob: -9.42867660522461
    8. '           ' → logprob: -9.42867660522461
    9. '   ' → logprob: -10.17867660522461
    10. ' range' → logprob: -11.05367660522461

Token 930: ' turn' (ID: 3716)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5646795034408569
    2. '       ' → logprob: -1.314679503440857
    3. ' for' → logprob: -1.814679503440857
    4. '   ' → logprob: -12.814679145812988
    5. '```' → logprob: -12.939679145812988
    6. '	for' → logprob: -13.689679145812988
    7. '           ' → logprob: -14.814679145812988
    8. ' ' → logprob: -16.689680099487305
    9. '<|end|>' → logprob: -16.689680099487305
    10. '	' → logprob: -16.814680099487305

Token 931: ' right' (ID: 1849)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.04964299127459526
    2. 'right' → logprob: -3.174643039703369
    3. ' right' → logprob: -5.049643039703369
    4. '_' → logprob: -8.924642562866211
    5. '   ' → logprob: -10.299642562866211
    6. ' _' → logprob: -10.799642562866211
    7. 'Right' → logprob: -11.924642562866211
    8. 'self' → logprob: -12.549642562866211
    9. '	right' → logprob: -12.924642562866211
    10. ' ' → logprob: -13.424642562866211

Token 932: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20347148180007935
    2. '90' → logprob: -1.7034714221954346
    3. ' ' → logprob: -6.578471660614014
    4. '_n' → logprob: -8.578471183776855
    5. ',' → logprob: -8.703471183776855
    6. ' and' → logprob: -9.078471183776855
    7. ' ninety' → logprob: -9.203471183776855
    8. ' _' → logprob: -10.078471183776855
    9. 'and' → logprob: -10.953471183776855
    10. '```' → logprob: -11.328471183776855

Token 933: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -2.2200749754119897e-06
    2. 'and' → logprob: -13.625001907348633
    3. ' ninety' → logprob: -14.000001907348633
    4. ',' → logprob: -16.500001907348633
    5. '_' → logprob: -16.500001907348633
    6. ' ' → logprob: -17.750001907348633
    7. '```' → logprob: -18.375001907348633
    8. 'nin' → logprob: -18.625001907348633
    9. 'n' → logprob: -18.750001907348633
    10. '900' → logprob: -20.250001907348633

Token 934: ',' (ID: 11)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degrees' → logprob: -0.740460216999054
    2. '_de' → logprob: -1.1154601573944092
    3. ' degrees' → logprob: -1.7404601573944092
    4. '_degree' → logprob: -5.115460395812988
    5. ',' → logprob: -5.490460395812988
    6. '_' → logprob: -5.615460395812988
    7. '   ' → logprob: -6.365460395812988
    8. '_deg' → logprob: -7.115460395812988
    9. 'degree' → logprob: -7.365460395812988
    10. '```' → logprob: -7.740460395812988

Token 935: ' move' (ID: 5275)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31920427083969116
    2. 'move' → logprob: -1.444204330444336
    3. ' self' → logprob: -3.819204330444336
    4. ' move' → logprob: -4.319204330444336
    5. '       ' → logprob: -6.319204330444336
    6. '#' → logprob: -9.069204330444336
    7. 'perform' → logprob: -9.944204330444336
    8. '   ' → logprob: -10.319204330444336
    9. '           ' → logprob: -11.319204330444336
    10. 'go' → logprob: -11.944204330444336

Token 936: ' ' (ID: 220)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.06090875342488289
    2. ' forward' → logprob: -3.185908794403076
    3. '_forward' → logprob: -4.560908794403076
    4. '1' → logprob: -4.935908794403076
    5. ' ' → logprob: -9.560908317565918
    6. 'Forward' → logprob: -11.185908317565918
    7. '_' → logprob: -11.810908317565918
    8. '```' → logprob: -12.060908317565918
    9. 'one' → logprob: -12.310908317565918
    10. ' one' → logprob: -12.560908317565918

Token 937: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28490135073661804
    2. 'forward' → logprob: -1.4099013805389404
    3. ' forward' → logprob: -5.659901142120361
    4. ' ' → logprob: -8.53490161895752
    5. '_forward' → logprob: -10.03490161895752
    6. 'Forward' → logprob: -11.90990161895752
    7. '```' → logprob: -12.53490161895752
    8. 'one' → logprob: -12.65990161895752
    9. '.forward' → logprob: -12.78490161895752
    10. '   ' → logprob: -14.03490161895752

Token 938: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00015812745550647378
    2. 'm' → logprob: -9.000158309936523
    3. '_forward' → logprob: -11.250158309936523
    4. '_' → logprob: -12.125158309936523
    5. '.forward' → logprob: -12.375158309936523
    6. '```' → logprob: -13.250158309936523
    7. ' .' → logprob: -13.875158309936523
    8. '\.' → logprob: -14.000158309936523
    9. '<|end|>' → logprob: -14.125158309936523
    10. ' forward' → logprob: -14.125158309936523

Token 939: ' face' (ID: 4950)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08184615522623062
    2. ' self' → logprob: -2.581846237182617
    3. 'face' → logprob: -6.331846237182617
    4. '       ' → logprob: -6.956846237182617
    5. 'and' → logprob: -9.081846237182617
    6. ' and' → logprob: -9.831846237182617
    7. ' face' → logprob: -10.206846237182617
    8. 'then' → logprob: -12.206846237182617
    9. ' then' → logprob: -12.581846237182617
    10. '   ' → logprob: -12.706846237182617

Token 940: ' well' (ID: 1775)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.038198936730623245
    2. 'well' → logprob: -3.288198947906494
    3. ' well' → logprob: -9.413198471069336
    4. 'w' → logprob: -9.538198471069336
    5. 'Well' → logprob: -13.538198471069336
    6. '_' → logprob: -13.788198471069336
    7. '```' → logprob: -14.038198471069336
    8. '_t' → logprob: -15.038198471069336
    9. '_n' → logprob: -16.538198471069336
    10. 'wel' → logprob: -16.538198471069336

Token 941: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5821387767791748
    2. '
' → logprob: -0.8321387767791748
    3. '<|end|>' → logprob: -5.957139015197754
    4. ' for' → logprob: -6.207139015197754
    5. 'for' → logprob: -7.332139015197754
    6. '
' → logprob: -8.082139015197754
    7. '<|end|>' → logprob: -8.582139015197754
    8. '        
' → logprob: -8.707139015197754
    9. ',' → logprob: -9.332139015197754
    10. '```' → logprob: -9.457139015197754

Token 942: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024524700711481273
    2. 'for' → logprob: -8.625245094299316
    3. ' for' → logprob: -10.125245094299316
    4. '```' → logprob: -11.000245094299316
    5. '   ' → logprob: -12.250245094299316
    6. '
' → logprob: -13.750245094299316
    7. '	' → logprob: -13.875245094299316
    8. '<|end|>' → logprob: -14.250245094299316
    9. '        
' → logprob: -14.875245094299316
    10. '           ' → logprob: -16.000246047973633

Token 943: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20846551656723022
    2. ' for' → logprob: -1.708465576171875
    3. '       ' → logprob: -4.958465576171875
    4. '```' → logprob: -13.583465576171875
    5. '   ' → logprob: -13.708465576171875
    6. '	for' → logprob: -13.833465576171875
    7. '
' → logprob: -15.458465576171875
    8. '``' → logprob: -17.833465576171875
    9. '	' → logprob: -17.958465576171875
    10. 'For' → logprob: -18.458465576171875

Token 944: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02500232309103012
    2. ' _' → logprob: -4.025002479553223
    3. ' i' → logprob: -5.275002479553223
    4. 'i' → logprob: -7.025002479553223
    5. ' step' → logprob: -7.775002479553223
    6. '_step' → logprob: -8.525002479553223
    7. '_i' → logprob: -8.900002479553223
    8. 'step' → logprob: -9.650002479553223
    9. '_=' → logprob: -14.400002479553223
    10. ' ' → logprob: -14.775002479553223

Token 945: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016054075211286545
    2. 'in' → logprob: -4.141054153442383
    3. 'i' → logprob: -11.391054153442383
    4. ' ' → logprob: -12.641054153442383
    5. ' i' → logprob: -13.141054153442383
    6. 'range' → logprob: -13.641054153442383
    7. 'step' → logprob: -14.516054153442383
    8. '  ' → logprob: -14.891054153442383
    9. 'import' → logprob: -15.266054153442383
    10. '	in' → logprob: -15.266054153442383

Token 946: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. ' ' → logprob: -17.875431060791016
    4. '   ' → logprob: -17.875431060791016
    5. '(range' → logprob: -17.875431060791016
    6. '  ' → logprob: -18.250431060791016
    7. '	range' → logprob: -18.625431060791016
    8. '    ' → logprob: -19.125431060791016
    9. 'rang' → logprob: -19.625431060791016
    10. 'ange' → logprob: -20.250431060791016

Token 947: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011049704626202583
    2. '(' → logprob: -4.511049747467041
    3. '(s' → logprob: -13.886049270629883
    4. 'self' → logprob: -14.511049270629883
    5. '1' → logprob: -14.886049270629883
    6. '((' → logprob: -16.511049270629883
    7. '(
' → logprob: -17.136049270629883
    8. ' (' → logprob: -17.261049270629883
    9. '(n' → logprob: -18.511049270629883
    10. '(sel' → logprob: -18.886049270629883

Token 948: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -1.5451681974809617e-05
    2. '.' → logprob: -11.250015258789062
    3. 'n' → logprob: -13.125015258789062
    4. 'self' → logprob: -15.875015258789062
    5. '<n' → logprob: -16.750015258789062
    6. ' .' → logprob: -16.875015258789062
    7. ').' → logprob: -17.250015258789062
    8. '-' → logprob: -17.500015258789062
    9. '
' → logprob: -18.000015258789062
    10. '1' → logprob: -18.125015258789062

Token 949: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4289487898349762
    2. ' -' → logprob: -1.0539487600326538
    3. '1' → logprob: -9.053948402404785
    4. ')' → logprob: -9.178948402404785
    5. '):
' → logprob: -11.303948402404785
    6. '   ' → logprob: -13.053948402404785
    7. ' ' → logprob: -13.303948402404785
    8. '[' → logprob: -13.303948402404785
    9. '-)' → logprob: -13.553948402404785
    10. '):' → logprob: -13.678948402404785

Token 950: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.500017166137695
    4. '2' → logprob: -19.375017166137695
    5. '<|end|>' → logprob: -19.625017166137695
    6. '```' → logprob: -21.125017166137695
    7. ')' → logprob: -21.750017166137695
    8. '۱' → logprob: -22.125017166137695
    9. '0' → logprob: -22.250017166137695
    10. '       ' → logprob: -22.500017166137695

Token 951: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5240230560302734
    2. '):
' → logprob: -0.8990230560302734
    3. ':' → logprob: -7.899023056030273
    4. ' ):' → logprob: -8.024023056030273
    5. ' ):
' → logprob: -9.149023056030273
    6. '):
' → logprob: -10.649023056030273
    7. ')' → logprob: -10.899023056030273
    8. '():
' → logprob: -11.399023056030273
    9. '():' → logprob: -11.649023056030273
    10. '       ' → logprob: -11.899023056030273

Token 952: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014164921827614307
    2. '       ' → logprob: -4.639164924621582
    3. 'self' → logprob: -5.514164924621582
    4. ' self' → logprob: -8.514164924621582
    5. '	       ' → logprob: -9.389164924621582
    6. '```' → logprob: -9.889164924621582
    7. '<|end|>' → logprob: -11.764164924621582
    8. '   ' → logprob: -11.889164924621582
    9. '<|end|>' → logprob: -11.889164924621582
    10. '
' → logprob: -13.514164924621582

Token 953: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07236768305301666
    2. '           ' → logprob: -2.8223676681518555
    3. ' self' → logprob: -4.5723676681518555
    4. '   ' → logprob: -12.072367668151855
    5. '       ' → logprob: -12.572367668151855
    6. '	self' → logprob: -12.947367668151855
    7. '[self' → logprob: -14.822367668151855
    8. '```' → logprob: -15.447367668151855
    9. '(self' → logprob: -15.697367668151855
    10. '	       ' → logprob: -15.697367668151855

Token 954: '.navigator' (ID: 178671)
  Prédit: '.navigator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.navigator' → logprob: -0.003376026637852192
    2. '.perform' → logprob: -6.503376007080078
    3. 'navigator' → logprob: -6.628376007080078
    4. '.navigate' → logprob: -8.128376007080078
    5. '.' → logprob: -9.253376007080078
    6. ' .' → logprob: -10.128376007080078
    7. 'perform' → logprob: -10.128376007080078
    8. '.n' → logprob: -10.503376007080078
    9. '.navigation' → logprob: -11.378376007080078
    10. '   ' → logprob: -11.753376007080078

Token 955: '.perform' (ID: 54724)
  Prédit: '.perform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.perform' → logprob: -1.9361264946837764e-07
    2. '.' → logprob: -16.5
    3. 'perform' → logprob: -17.75
    4. ' .' → logprob: -18.0
    5. '.Perform' → logprob: -19.25
    6. '.performance' → logprob: -21.5
    7. '.execute' → logprob: -22.125
    8. '.move' → logprob: -22.5
    9. '.process' → logprob: -22.75
    10. '.per' → logprob: -22.875

Token 956: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: 0.0
    2. 'step' → logprob: -17.625
    3. '_' → logprob: -18.5
    4. '_steps' → logprob: -19.5
    5. '\' → logprob: -20.625
    6. '_STEP' → logprob: -20.75
    7. 's' → logprob: -21.375
    8. '__' → logprob: -21.375
    9. 'Step' → logprob: -21.375
    10. '_s' → logprob: -21.375

Token 957: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021860685665160418
    2. '
' → logprob: -7.002186298370361
    3. 'return' → logprob: -7.502186298370361
    4. '<|end|>' → logprob: -7.627186298370361
    5. ' return' → logprob: -9.127185821533203
    6. '        
' → logprob: -9.877185821533203
    7. '```' → logprob: -10.377185821533203
    8. '<|end|>' → logprob: -10.877185821533203
    9. '  
' → logprob: -12.002185821533203
    10. '    
' → logprob: -13.127185821533203

Token 958: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003580945311114192
    2. 'return' → logprob: -5.7535810470581055
    3. ' return' → logprob: -7.8785810470581055
    4. '   ' → logprob: -11.753581047058105
    5. '```' → logprob: -11.878581047058105
    6. '
' → logprob: -12.753581047058105
    7. '	return' → logprob: -13.003581047058105
    8. '        
' → logprob: -13.378581047058105
    9. '           ' → logprob: -14.253581047058105
    10. '	' → logprob: -14.753581047058105

Token 959: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06211937591433525
    2. '       ' → logprob: -2.812119483947754
    3. ' return' → logprob: -8.812119483947754
    4. '```' → logprob: -13.687119483947754
    5. '   ' → logprob: -14.312119483947754
    6. '{return' → logprob: -14.687119483947754
    7. '
' → logprob: -15.062119483947754
    8. '	return' → logprob: -15.187119483947754
    9. ':return' → logprob: -17.687118530273438
    10. '        
' → logprob: -17.812118530273438

Token 960: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.686778503237292e-05
    2. ' self' → logprob: -9.250097274780273
    3. 'Vector' → logprob: -14.250097274780273
    4. '(self' → logprob: -18.750097274780273
    5. '   ' → logprob: -20.000097274780273
    6. '       ' → logprob: -20.500097274780273
    7. '
' → logprob: -21.125097274780273
    8. ' Vector' → logprob: -21.125097274780273
    9. '	self' → logprob: -21.500097274780273
    10. 'vector' → logprob: -21.750097274780273

Token 961: '.navigator' (ID: 178671)
  Prédit: '.navigator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.navigator' → logprob: -1.3782830137643032e-05
    2. 'navigator' → logprob: -11.75001335144043
    3. ' .' → logprob: -13.37501335144043
    4. '.navigation' → logprob: -13.50001335144043
    5. 'avigator' → logprob: -13.75001335144043
    6. '.Navigator' → logprob: -14.25001335144043
    7. '.nav' → logprob: -15.12501335144043
    8. '`.' → logprob: -15.87501335144043
    9. '.navigate' → logprob: -16.00001335144043
    10. '>.' → logprob: -16.25001335144043

Token 962: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.010223117657005787
    2. '.' → logprob: -4.635222911834717
    3. ' .' → logprob: -7.760222911834717
    4. '.vector' → logprob: -12.260223388671875
    5. '.status' → logprob: -12.385223388671875
    6. '.pos' → logprob: -12.885223388671875
    7. '.return' → logprob: -13.010223388671875
    8. '.positions' → logprob: -13.010223388671875
    9. '.navigation' → logprob: -13.385223388671875
    10. '.location' → logprob: -13.510223388671875

Token 963: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 964: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.35342931747436523
    2. '<|end|>' → logprob: -1.2284293174743652
    3. '```' → logprob: -6.478429317474365
    4. ')' → logprob: -6.853429317474365
    5. '<|end|>' → logprob: -6.853429317474365
    6. '
' → logprob: -7.353429317474365
    7. '.' → logprob: -7.728429317474365
    8. '[' → logprob: -10.103429794311523
    9. '...' → logprob: -10.228429794311523
    10. '%' → logprob: -10.478429794311523

Token 965: ' main' (ID: 2758)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.37272584438323975
    2. '__' → logprob: -1.8727258443832397
    3. '_' → logprob: -3.3727259635925293
    4. ' def' → logprob: -3.4977259635925293
    5. ' if' → logprob: -3.4977259635925293
    6. ' test' → logprob: -4.372725963592529
    7. ' main' → logprob: -4.747725963592529
    8. ' _' → logprob: -4.872725963592529
    9. ' ' → logprob: -5.247725963592529
    10. 'if' → logprob: -5.497725963592529

Token 966: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00024203950306400657
    2. '():
' → logprob: -8.375242233276367
    3. ' ():' → logprob: -11.625242233276367
    4. '()' → logprob: -13.125242233276367
    5. '():
' → logprob: -14.750242233276367
    6. '():

' → logprob: -17.250242233276367
    7. '(' → logprob: -17.875242233276367
    8. '()>' → logprob: -18.000242233276367
    9. ':' → logprob: -18.500242233276367
    10. '().' → logprob: -18.500242233276367

Token 967: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.224603533744812
    2. 'import' → logprob: -2.0996036529541016
    3. 'if' → logprob: -2.8496036529541016
    4. ' n' → logprob: -4.724603652954102
    5. '   ' → logprob: -5.099603652954102
    6. ' if' → logprob: -5.724603652954102
    7. '```' → logprob: -6.474603652954102
    8. ' import' → logprob: -7.224603652954102
    9. 'try' → logprob: -9.349603652954102
    10. 't' → logprob: -9.474603652954102

Token 968: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.021873194724321365
    2. 'try' → logprob: -4.5218729972839355
    3. 'import' → logprob: -4.7718729972839355
    4. ' n' → logprob: -6.2718729972839355
    5. '   ' → logprob: -8.521873474121094
    6. 'input' (adapté à ' input') → logprob: -8.771873474121094
    7. ' import' → logprob: -10.771873474121094
    8. ' try' → logprob: -10.896873474121094
    9. 'if' → logprob: -11.021873474121094
    10. ' input' → logprob: -12.896873474121094

Token 969: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38844698667526245
    2. '_line' → logprob: -1.2634470462799072
    3. '_data' → logprob: -4.013446807861328
    4. '_' → logprob: -4.638446807861328
    5. '_str' → logprob: -5.013446807861328
    6. '_text' → logprob: -7.138446807861328
    7. '_num' → logprob: -7.138446807861328
    8. '_value' → logprob: -7.513446807861328
    9. '_number' → logprob: -7.638446807861328
    10. '(' → logprob: -7.888446807861328

Token 970: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35268715023994446
    2. ' =' → logprob: -1.227687120437622
    3. '()' → logprob: -5.477687358856201
    4. '   ' → logprob: -10.977686882019043
    5. '=[]' → logprob: -11.477686882019043
    6. '(' → logprob: -12.352686882019043
    7. '[' → logprob: -12.602686882019043
    8. '=input' → logprob: -12.977686882019043
    9. '().' → logprob: -13.102686882019043
    10. '.' → logprob: -13.227686882019043

Token 971: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011047814972698689
    2. ' sys' → logprob: -4.511047840118408
    3. '[' → logprob: -17.76104736328125
    4. '	sys' → logprob: -18.01104736328125
    5. '=sys' → logprob: -19.13604736328125
    6. '(sys' → logprob: -19.76104736328125
    7. ' [' → logprob: -19.88604736328125
    8. 'list' → logprob: -23.01104736328125
    9. '[]' → logprob: -23.01104736328125
    10. '   ' → logprob: -23.26104736328125

Token 972: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.980854959692806e-05
    2. 'stdin' → logprob: -9.875069618225098
    3. '.' → logprob: -11.375069618225098
    4. '.argv' → logprob: -12.625069618225098
    5. '.stdout' → logprob: -13.250069618225098
    6. '(stdin' → logprob: -13.875069618225098
    7. ' stdin' → logprob: -15.125069618225098
    8. '.std' → logprob: -15.250069618225098
    9. '.st' → logprob: -15.875069618225098
    10. '.readline' → logprob: -16.500070571899414

Token 973: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.03637147322297096
    2. 'read' → logprob: -3.5363714694976807
    3. '.readlines' → logprob: -5.53637170791626
    4. '.read' → logprob: -6.28637170791626
    5. '.' → logprob: -7.16137170791626
    6. ' readline' → logprob: -11.411371231079102
    7. '_read' → logprob: -12.036371231079102
    8. 'rea' → logprob: -13.661371231079102
    9. '=' → logprob: -15.036371231079102
    10. '	read' → logprob: -15.161371231079102

Token 974: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018159545958042145
    2. '()' → logprob: -4.01815938949585
    3. '()
' → logprob: -12.893159866333008
    4. '(' → logprob: -13.018159866333008
    5. '_lines' → logprob: -13.768159866333008
    6. ' ().' → logprob: -14.018159866333008
    7. '())' → logprob: -14.393159866333008
    8. '()`' → logprob: -14.518159866333008
    9. 'lines' → logprob: -15.018159866333008
    10. '()

' → logprob: -15.018159866333008

Token 975: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.20143809914588928
    2. 'split' → logprob: -1.701438069343567
    3. 'lines' → logprob: -11.201437950134277
    4. 'read' → logprob: -11.701437950134277
    5. 'rstrip' → logprob: -12.826437950134277
    6. 'decode' → logprob: -15.826437950134277
    7. '(split' → logprob: -16.951438903808594
    8. 'line' → logprob: -17.576438903808594
    9. '_lines' → logprob: -17.826438903808594
    10. ' split' → logprob: -17.826438903808594

Token 976: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03805170953273773
    2. '()' → logprob: -3.2880516052246094
    3. '(' → logprob: -12.28805160522461
    4. '()
' → logprob: -12.66305160522461
    5. 'split' → logprob: -13.78805160522461
    6. '()\' → logprob: -14.28805160522461
    7. '()`' → logprob: -15.78805160522461
    8. '()

' → logprob: -15.91305160522461
    9. '()[' → logprob: -16.16305160522461
    10. '().'' → logprob: -16.78805160522461

Token 977: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -18.5
    3. '(split' → logprob: -18.75
    4. 'spl' → logprob: -19.375
    5. 'lines' → logprob: -21.5
    6. 'sp' → logprob: -23.875
    7. 'strip' → logprob: -24.25
    8. 's' → logprob: -24.375
    9. '_split' → logprob: -24.5
    10. '.split' → logprob: -25.0

Token 978: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3613123893737793
    2. '('\' → logprob: -1.3613123893737793
    3. 'lines' → logprob: -3.1113123893737793
    4. '()
' → logprob: -6.861312389373779
    5. '()\' → logprob: -6.986312389373779
    6. '("\' → logprob: -8.111312866210938
    7. '()[' → logprob: -9.861312866210938
    8. '(' → logprob: -10.361312866210938
    9. '('' → logprob: -11.986312866210938
    10. '()

' → logprob: -12.861312866210938

Token 979: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0012315383646637201
    2. '\n' → logprob: -6.751231670379639
    3. 'lines' → logprob: -9.87623119354248
    4. 'newline' → logprob: -11.62623119354248
    5. ''\' → logprob: -15.00123119354248
    6. '\' → logprob: -15.00123119354248
    7. '
' → logprob: -16.001232147216797
    8. '('\' → logprob: -16.501232147216797
    9. 'line' → logprob: -16.626232147216797
    10. 'nl' → logprob: -17.876232147216797

Token 980: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007480498868972063
    2. ')
' → logprob: -5.257480621337891
    3. '')' → logprob: -6.132480621337891
    4. '   ' → logprob: -10.50748062133789
    5. '')
' → logprob: -10.50748062133789
    6. '[' → logprob: -11.63248062133789
    7. '")' → logprob: -12.75748062133789
    8. ')
' → logprob: -12.88248062133789
    9. ']' → logprob: -13.75748062133789
    10. '`)' → logprob: -13.88248062133789

Token 981: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002183449687436223
    2. '   ' → logprob: -6.752183437347412
    3. ' n' → logprob: -7.127183437347412
    4. 'for' → logprob: -8.62718391418457
    5. ' for' → logprob: -10.62718391418457
    6. 'if' → logprob: -12.37718391418457
    7. '	n' → logprob: -14.37718391418457
    8. 'try' → logprob: -14.50218391418457
    9. '```' → logprob: -15.00218391418457
    10. 't' → logprob: -15.37718391418457

Token 982: ' count' (ID: 3605)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000783899100497365
    2. 't' → logprob: -7.250783920288086
    3. 'for' → logprob: -9.875783920288086
    4. 'try' → logprob: -11.125783920288086
    5. 'if' → logprob: -12.000783920288086
    6. '   ' → logprob: -14.000783920288086
    7. ' n' → logprob: -14.875783920288086
    8. 'num' → logprob: -15.125783920288086
    9. 'T' → logprob: -16.125783920288086
    10. 'q' → logprob: -16.125783920288086

Token 983: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03498084843158722
    2. '=' → logprob: -3.4099807739257812
    3. '=int' → logprob: -7.284980773925781
    4. 's' → logprob: -7.909980773925781
    5. '_tokens' → logprob: -9.159980773925781
    6. '_' → logprob: -9.659980773925781
    7. '_lines' → logprob: -10.784980773925781
    8. '_n' → logprob: -11.034980773925781
    9. '_str' → logprob: -11.659980773925781
    10. '_of' → logprob: -11.659980773925781

Token 984: ' ' (ID: 220)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.505351095460355e-05
    2. ' int' → logprob: -9.500075340270996
    3. 'len' → logprob: -16.00007438659668
    4. '   ' → logprob: -22.12507438659668
    5. '1' → logprob: -22.37507438659668
    6. '0' → logprob: -22.62507438659668
    7. '(int' → logprob: -22.87507438659668
    8. '  ' → logprob: -23.12507438659668
    9. '[int' → logprob: -23.25007438659668
    10. ' ' → logprob: -23.37507438659668

Token 985: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.128163257315464e-07
    2. 'len' → logprob: -15.25
    3. ' int' → logprob: -20.75
    4. '1' → logprob: -24.125
    5. '[int' → logprob: -24.375
    6. '   ' → logprob: -24.625
    7. '  ' → logprob: -25.125
    8. '
' → logprob: -25.125
    9. '0' → logprob: -25.75
    10. '(int' → logprob: -26.0

Token 986: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5509501099586487
    2. '   ' → logprob: -1.425950050354004
    3. 'for' → logprob: -1.800950050354004
    4. '
' → logprob: -4.550950050354004
    5. ' while' → logprob: -5.800950050354004
    6. 'while' → logprob: -6.175950050354004
    7. ' ' → logprob: -7.550950050354004
    8. '<|end|>' → logprob: -7.675950050354004
    9. ' 
' → logprob: -7.925950050354004
    10. '    ' → logprob: -8.425950050354004

Token 987: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8076140880584717
    2. 'for' → logprob: -0.8076140880584717
    3. '   ' → logprob: -2.4326140880584717
    4. 'while' → logprob: -4.432614326477051
    5. ' while' → logprob: -5.057614326477051
    6. ' n' → logprob: -6.557614326477051
    7. 'n' → logprob: -7.807614326477051
    8. ' ' → logprob: -9.80761432647705
    9. '
' → logprob: -10.68261432647705
    10. 'results' → logprob: -10.80761432647705

Token 988: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2302408516407013
    2. 'while' → logprob: -1.730240821838379
    3. ' for' → logprob: -3.730240821838379
    4. ' while' → logprob: -5.605240821838379
    5. 'n' → logprob: -7.980240821838379
    6. 'results' → logprob: -8.480240821838379
    7. 'result' → logprob: -9.605240821838379
    8. 'i' → logprob: -10.355240821838379
    9. ' n' → logprob: -10.605240821838379
    10. '   ' → logprob: -11.480240821838379

Token 989: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.10025865584611893
    2. 'line' → logprob: -2.3502585887908936
    3. ' i' → logprob: -11.225258827209473
    4. ' input' → logprob: -11.225258827209473
    5. 'i' → logprob: -11.600258827209473
    6. 'input' → logprob: -11.975258827209473
    7. '	line' → logprob: -12.350258827209473
    8. 'l' → logprob: -13.975258827209473
    9. ' ' → logprob: -14.225258827209473
    10. '_line' → logprob: -14.475258827209473

Token 990: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0023316475562751293
    2. 'in' → logprob: -6.127331733703613
    3. '   ' → logprob: -9.127331733703613
    4. ' ' → logprob: -11.627331733703613
    5. ',' → logprob: -11.877331733703613
    6. '    ' → logprob: -12.002331733703613
    7. ' =' → logprob: -12.377331733703613
    8. ':
' → logprob: -13.252331733703613
    9. '	in' → logprob: -13.502331733703613
    10. ':' → logprob: -13.627331733703613

Token 991: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10020904988050461
    2. ' input' → logprob: -2.3502089977264404
    3. 'sys' → logprob: -13.85020923614502
    4. ' ' → logprob: -15.22520923614502
    5. '<input' → logprob: -15.35020923614502
    6. '(input' → logprob: -15.60020923614502
    7. ' sys' → logprob: -15.60020923614502
    8. '   ' → logprob: -15.60020923614502
    9. 'in' → logprob: -16.350208282470703
    10. '	input' → logprob: -16.475208282470703

Token 992: '_lines' (ID: 42980)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06729985773563385
    2. 'in' → logprob: -2.8172998428344727
    3. '_' → logprob: -5.692299842834473
    4. '_lines' → logprob: -7.817299842834473
    5. '   ' → logprob: -7.942299842834473
    6. '_in' → logprob: -7.942299842834473
    7. ':' → logprob: -8.192299842834473
    8. ' ' → logprob: -9.192299842834473
    9. '.' → logprob: -9.567299842834473
    10. '_line' → logprob: -9.817299842834473

Token 993: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.059753961861133575
    2. ':
' → logprob: -3.434753894805908
    3. '       ' → logprob: -4.184753894805908
    4. ',' → logprob: -4.934753894805908
    5. '   ' → logprob: -6.684753894805908
    6. ' =' → logprob: -7.559753894805908
    7. '<|end|>' → logprob: -7.684753894805908
    8. '=' → logprob: -7.809753894805908
    9. ' :' → logprob: -9.434754371643066
    10. '):
' → logprob: -9.434754371643066

Token 994: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019066639652010053
    2. '   ' → logprob: -8.750190734863281
    3. ' if' → logprob: -10.750190734863281
    4. ',' → logprob: -12.375190734863281
    5. '<|end|>' → logprob: -13.750190734863281
    6. '```' → logprob: -13.875190734863281
    7. '    ' → logprob: -14.250190734863281
    8. '        
' → logprob: -14.250190734863281
    9. 'if' → logprob: -14.500190734863281
    10. 'tokens' → logprob: -14.750190734863281

Token 995: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.27979397773742676
    2. 'n' → logprob: -1.5297939777374268
    3. ' if' → logprob: -3.7797939777374268
    4. 'try' → logprob: -6.654793739318848
    5. 'line' → logprob: -6.779793739318848
    6. ' n' → logprob: -7.029793739318848
    7. '       ' → logprob: -7.154793739318848
    8. 'count' → logprob: -8.029793739318848
    9. '           ' → logprob: -8.904793739318848
    10. '   ' → logprob: -10.279793739318848

Token 996: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2780073881149292
    2. 'not' → logprob: -2.2780075073242188
    3. ' not' → logprob: -2.2780075073242188
    4. ' line' → logprob: -3.2780075073242188
    5. 'count' → logprob: -11.153007507324219
    6. 'len' → logprob: -11.653007507324219
    7. '(line' → logprob: -13.403007507324219
    8. '   ' → logprob: -13.528007507324219
    9. '=line' → logprob: -13.778007507324219
    10. ' count' → logprob: -14.403007507324219

Token 997: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0471101775765419
    2. '.' → logprob: -3.422110080718994
    3. '==' → logprob: -4.422110080718994
    4. ':' → logprob: -7.547110080718994
    5. ' ==' → logprob: -7.672110080718994
    6. '=' → logprob: -8.172110557556152
    7. '.startswith' → logprob: -10.922110557556152
    8. 'strip' → logprob: -11.172110557556152
    9. ':
' → logprob: -11.297110557556152
    10. '.trim' → logprob: -11.422110557556152

Token 998: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5676498413085938
    2. '():' → logprob: -1.3176498413085938
    3. '()==' → logprob: -1.8176498413085938
    4. '()!=' → logprob: -6.442649841308594
    5. '():
' → logprob: -6.942649841308594
    6. '==' → logprob: -8.192649841308594
    7. '()>' → logprob: -9.067649841308594
    8. ':' → logprob: -12.192649841308594
    9. '()=="' → logprob: -12.567649841308594
    10. '()<' → logprob: -13.067649841308594

Token 999: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.003369850106537342
    2. ':' → logprob: -6.0033698081970215
    3. ' ==' → logprob: -7.7533698081970215
    4. '!=' → logprob: -8.25337028503418
    5. 'and' → logprob: -9.62837028503418
    6. '=' → logprob: -10.37837028503418
    7. '):' → logprob: -10.75337028503418
    8. '===' → logprob: -10.75337028503418
    9. ']==' → logprob: -11.37837028503418
    10. '()==' → logprob: -11.37837028503418

Token 1000: ' '-' (ID: 17489)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.513788104057312
    2. ''' → logprob: -1.263788104057312
    3. '"":' → logprob: -2.2637882232666016
    4. '"' → logprob: -4.763788223266602
    5. '""' → logprob: -5.013788223266602
    6. ''ex' → logprob: -10.138788223266602
    7. ''end' → logprob: -12.138788223266602
    8. ''t' → logprob: -13.513788223266602
    9. '''.' → logprob: -13.513788223266602
    10. ''s' → logprob: -13.638788223266602

Token 1001: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.546478935983032e-05
    2. '-' → logprob: -10.625025749206543
    3. '0' → logprob: -14.625025749206543
    4. ' ' → logprob: -15.750025749206543
    5. ''' → logprob: -16.000024795532227
    6. '':' → logprob: -16.250024795532227
    7. 'end' → logprob: -16.375024795532227
    8. ''):' → logprob: -16.375024795532227
    9. '2' → logprob: -16.750024795532227
    10. 'END' → logprob: -17.375024795532227

Token 1002: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.8519991636276245
    2. ':' → logprob: -1.1019991636276245
    3. '':
' → logprob: -2.351999282836914
    4. ':
' → logprob: -2.351999282836914
    5. ':return' → logprob: -3.726999282836914
    6. '\n' → logprob: -5.351999282836914
    7. '):' → logprob: -5.476999282836914
    8. '       ' → logprob: -5.601999282836914
    9. '<|end|>' → logprob: -5.851999282836914
    10. ''):
' → logprob: -5.851999282836914

Token 1003: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00041458409396000206
    2. ':' → logprob: -8.000414848327637
    3. '       ' → logprob: -10.000414848327637
    4. ':
' → logprob: -11.625414848327637
    5. '          ' → logprob: -11.750414848327637
    6. '               ' → logprob: -12.500414848327637
    7. ' break' → logprob: -12.875414848327637
    8. '		' → logprob: -13.625414848327637
    9. '	       ' → logprob: -13.625414848327637
    10. '<|end|>' → logprob: -13.625414848327637

Token 1004: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.08416026085615158
    2. '           ' → logprob: -2.584160327911377
    3. ' break' → logprob: -5.334160327911377
    4. '               ' → logprob: -8.334159851074219
    5. '	break' → logprob: -9.334159851074219
    6. 'return' → logprob: -9.709159851074219
    7. '       ' → logprob: -10.209159851074219
    8. '_break' → logprob: -12.959159851074219
    9. '		' → logprob: -13.459159851074219
    10. '	       ' → logprob: -14.209159851074219

Token 1005: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007063677534461021
    2. '<|end|>' → logprob: -5.257063865661621
    3. '        
' → logprob: -7.007063865661621
    4. ':' → logprob: -8.007063865661621
    5. '   ' → logprob: -9.132063865661621
    6. ',' → logprob: -9.507063865661621
    7. '
' → logprob: -9.757063865661621
    8. '        ' → logprob: -9.882063865661621
    9. '<|end|>' → logprob: -9.882063865661621
    10. '[' → logprob: -10.132063865661621

Token 1006: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000297685619443655
    2. '        
' → logprob: -8.250297546386719
    3. '
' → logprob: -11.125297546386719
    4. '<|end|>' → logprob: -11.750297546386719
    5. '   ' → logprob: -12.250297546386719
    6. '        ' → logprob: -12.750297546386719
    7. '      ' → logprob: -13.375297546386719
    8. '       
' → logprob: -14.125297546386719
    9. '```' → logprob: -14.125297546386719
    10. '    ' → logprob: -14.375297546386719

Token 1007: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.09776709228754044
    2. '       ' → logprob: -3.0977671146392822
    3. 'try' → logprob: -3.0977671146392822
    4. 'count' → logprob: -5.972766876220703
    5. '   ' → logprob: -8.722766876220703
    6. ' n' → logprob: -9.097766876220703
    7. ' try' → logprob: -11.972766876220703
    8. 'if' → logprob: -12.097766876220703
    9. '        
' → logprob: -13.347766876220703
    10. '```' → logprob: -13.472766876220703

Token 1008: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16026850044727325
    2. '=' → logprob: -1.9102685451507568
    3. '=int' → logprob: -10.035268783569336
    4. '＝' → logprob: -15.785268783569336
    5. ' ' → logprob: -15.910268783569336
    6. ',' → logprob: -16.160268783569336
    7. ' =
' → logprob: -16.660268783569336
    8. 'int' → logprob: -17.160268783569336
    9. '	' → logprob: -17.410268783569336
    10. ')' → logprob: -17.535268783569336

Token 1009: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001584850688232109
    2. ' int' → logprob: -8.750158309936523
    3. '(int' → logprob: -21.250158309936523
    4. '[int' → logprob: -22.125158309936523
    5. '=int' → logprob: -22.125158309936523
    6. '<int' → logprob: -24.000158309936523
    7. '	int' → logprob: -25.000158309936523
    8. '   ' → logprob: -25.125158309936523
    9. '```' → logprob: -25.750158309936523
    10. ':int' → logprob: -25.875158309936523

Token 1010: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00020568605395965278
    2. '(' → logprob: -8.500205993652344
    3. 'line' → logprob: -13.125205993652344
    4. '(n' → logprob: -15.875205993652344
    5. ' line' → logprob: -17.250205993652344
    6. '=line' → logprob: -17.250205993652344
    7. '(
' → logprob: -17.375205993652344
    8. '#line' → logprob: -18.000205993652344
    9. ' (' → logprob: -18.125205993652344
    10. '[line' → logprob: -19.125205993652344

Token 1011: '.strip' (ID: 40613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004109034780412912
    2. '.strip' → logprob: -5.504108905792236
    3. ')
' → logprob: -10.754109382629395
    4. ' )' → logprob: -12.754109382629395
    5. '[' → logprob: -12.879109382629395
    6. '.rstrip' → logprob: -13.754109382629395
    7. '       ' → logprob: -14.879109382629395
    8. '),' → logprob: -14.879109382629395
    9. '   ' → logprob: -15.129109382629395
    10. '))' → logprob: -15.254109382629395

Token 1012: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06229233741760254
    2. '())' → logprob: -2.8122923374176025
    3. '()' → logprob: -8.062292098999023
    4. ' )' → logprob: -12.062292098999023
    5. ')
' → logprob: -13.562292098999023
    6. '())
' → logprob: -13.937292098999023
    7. '(' → logprob: -13.937292098999023
    8. '))' → logprob: -15.562292098999023
    9. ' ())' → logprob: -16.062292098999023
    10. '()
' → logprob: -16.437292098999023

Token 1013: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002277530962601304
    2. '<|end|>' → logprob: -6.627277374267578
    3. '        
' → logprob: -7.752277374267578
    4. '   ' → logprob: -8.002277374267578
    5. '```' → logprob: -9.252277374267578
    6. '        ' → logprob: -11.127277374267578
    7. '           ' → logprob: -11.377277374267578
    8. '
' → logprob: -11.627277374267578
    9. ' ' → logprob: -11.627277374267578
    10. '<|end|>' → logprob: -11.752277374267578

Token 1014: ' hunter' (ID: 78242)
  Prédit: 'hunter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hunter' (adapté à ' hunter') → logprob: -0.5691607594490051
    2. 'th' → logprob: -1.1941606998443604
    3. 'tre' → logprob: -2.0691606998443604
    4. '       ' → logprob: -6.4441609382629395
    5. 'result' → logprob: -6.9441609382629395
    6. 'if' → logprob: -6.9441609382629395
    7. 't' → logprob: -7.8191609382629395
    8. 'h' → logprob: -8.569160461425781
    9. 'try' → logprob: -8.694160461425781
    10. '   ' → logprob: -9.319160461425781

Token 1015: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0006096287979744375
    2. '=' → logprob: -7.625609397888184
    3. '.' → logprob: -10.000609397888184
    4. '=find' → logprob: -10.125609397888184
    5. '.find' → logprob: -10.625609397888184
    6. '	' → logprob: -13.000609397888184
    7. '   ' → logprob: -13.250609397888184
    8. '       ' → logprob: -13.875609397888184
    9. '<|end|>' → logprob: -14.000609397888184
    10. '.perform' → logprob: -14.250609397888184

Token 1016: ' Treasure' (ID: 98185)
  Prédit: 'Tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tre' → logprob: -7.302704761968926e-05
    2. ' Treasure' → logprob: -10.000073432922363
    3. 'Treas' → logprob: -10.500073432922363
    4. '   ' → logprob: -18.125072479248047
    5. 'T' → logprob: -18.375072479248047
    6. ' treasure' → logprob: -19.375072479248047
    7. 'Tres' → logprob: -19.875072479248047
    8. 'TRE' → logprob: -20.000072479248047
    9. '```' → logprob: -20.125072479248047
    10. '
' → logprob: -20.625072479248047

Token 1017: 'Hunter' (ID: 132008)
  Prédit: 'Hunter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hunter' → logprob: -6.704273118884885e-07
    2. 'Hun' → logprob: -15.250000953674316
    3. 'hunter' → logprob: -15.250000953674316
    4. ' Hunter' → logprob: -16.5
    5. 'H' → logprob: -16.75
    6. '
' → logprob: -17.5
    7. '(H' → logprob: -17.625
    8. '`' → logprob: -18.0
    9. '```' → logprob: -18.0
    10. '_H' → logprob: -19.0

Token 1018: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.021958107128739357
    2. '(' → logprob: -3.896958112716675
    3. '(
' → logprob: -6.771957874298096
    4. ' (' → logprob: -8.396958351135254
    5. '       ' → logprob: -11.271958351135254
    6. '<|end|>' → logprob: -11.771958351135254
    7. ')' → logprob: -12.146958351135254
    8. 'n' → logprob: -12.396958351135254
    9. ')(' → logprob: -13.396958351135254
    10. ')(
' → logprob: -13.771958351135254

Token 1019: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006752309389412403
    2. ')
' → logprob: -5.0067524909973145
    3. '       ' → logprob: -10.881752014160156
    4. ')
' → logprob: -12.506752014160156
    5. '<|end|>' → logprob: -12.506752014160156
    6. '<|end|>' → logprob: -12.881752014160156
    7. ').' → logprob: -13.006752014160156
    8. '   ' → logprob: -13.256752014160156
    9. ')n' → logprob: -14.006752014160156
    10. '(n' → logprob: -14.256752014160156

Token 1020: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01261571142822504
    2. 'position' → logprob: -5.01261568069458
    3. 'result' → logprob: -5.38761568069458
    4. 'pos' → logprob: -6.76261568069458
    5. '   ' → logprob: -10.012616157531738
    6. '```' → logprob: -10.512616157531738
    7. ' position' → logprob: -10.762616157531738
    8. ' result' → logprob: -10.887616157531738
    9. '
' → logprob: -11.262616157531738
    10. 'next' → logprob: -11.637616157531738

Token 1021: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.6705280542373657
    2. 'result' → logprob: -0.9205280542373657
    3. 'position' → logprob: -2.420527935028076
    4. 'res' → logprob: -6.670527935028076
    5. 'print' → logprob: -9.670528411865234
    6. 'answer' → logprob: -11.045528411865234
    7. 'tre' → logprob: -11.420528411865234
    8. 'final' → logprob: -11.795528411865234
    9. 'output' → logprob: -12.920528411865234
    10. 'location' → logprob: -13.545528411865234

Token 1022: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06784024834632874
    2. '=' → logprob: -3.067840337753296
    3. 'ition' → logprob: -4.067840099334717
    4. '   ' → logprob: -6.817840099334717
    5. 'itor' → logprob: -8.317840576171875
    6. '.' → logprob: -8.442840576171875
    7. 'itioner' → logprob: -8.942840576171875
    8. ' ' → logprob: -9.192840576171875
    9. 'itions' → logprob: -9.942840576171875
    10. '=u' → logprob: -11.817840576171875

Token 1023: ' hunter' (ID: 78242)
  Prédit: 'hunter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hunter' → logprob: -0.008616108447313309
    2. ' hunter' → logprob: -4.758615970611572
    3. 'hun' → logprob: -13.38361644744873
    4. 'hunt' → logprob: -17.383615493774414
    5. 'Hunter' → logprob: -17.758615493774414
    6. 'h' → logprob: -19.258615493774414
    7. 'hopper' → logprob: -19.383615493774414
    8. ' Hunter' → logprob: -19.508615493774414
    9. '	h' → logprob: -20.008615493774414
    10. ' ' → logprob: -20.258615493774414

Token 1024: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0014561859425157309
    2. 'find' → logprob: -7.126456260681152
    3. '.' → logprob: -7.376456260681152
    4. '.findall' → logprob: -11.001456260681152
    5. '.position' → logprob: -12.876456260681152
    6. '=find' → logprob: -13.126456260681152
    7. ' .' → logprob: -13.626456260681152
    8. ' find' → logprob: -13.876456260681152
    9. '.
' → logprob: -14.501456260681152
    10. '_find' → logprob: -15.126456260681152

Token 1025: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00015002528380136937
    2. 'tre' → logprob: -9.125149726867676
    3. 'Tre' → logprob: -10.500149726867676
    4. '_' → logprob: -11.500149726867676
    5. 't' → logprob: -13.250149726867676
    6. 'Treas' → logprob: -14.875149726867676
    7. '_
' → logprob: -15.000149726867676
    8. '`' → logprob: -15.875149726867676
    9. '```' → logprob: -16.125150680541992
    10. 'er' → logprob: -16.375150680541992

Token 1026: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.2694101333618164
    2. 'e' → logprob: -1.8944101333618164
    3. 'asure' → logprob: -2.7694101333618164
    4. 'es' → logprob: -4.269410133361816
    5. 'res' → logprob: -5.394410133361816
    6. '_re' → logprob: -6.394410133361816
    7. 'reas' → logprob: -7.894410133361816
    8. 'r' → logprob: -8.019410133361816
    9. 'er' → logprob: -8.269410133361816
    10. 'tre' → logprob: -8.394410133361816

Token 1027: 'asure' (ID: 5450)
  Prédit: 'asure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asure' → logprob: -0.3870469629764557
    2. 'sure' → logprob: -1.1370469331741333
    3. 's' → logprob: -10.137046813964844
    4. 'as' → logprob: -10.262046813964844
    5. '_' → logprob: -10.387046813964844
    6. 'a' → logprob: -10.887046813964844
    7. 'Sure' → logprob: -10.887046813964844
    8. 'ure' → logprob: -12.637046813964844
    9. '2' → logprob: -13.262046813964844
    10. 'ature' → logprob: -13.512046813964844

Token 1028: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01728353090584278
    2. 'print' → logprob: -4.3922834396362305
    3. '```' → logprob: -6.8922834396362305
    4. '
' → logprob: -7.1422834396362305
    5. '()' → logprob: -7.3922834396362305
    6. '()
' → logprob: -7.3922834396362305
    7. '<|end|>' → logprob: -7.3922834396362305
    8. ' print' → logprob: -7.6422834396362305
    9. '(' → logprob: -8.76728343963623
    10. '<|end|>' → logprob: -9.51728343963623

Token 1029: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002844576956704259
    2. 'print' → logprob: -8.500284194946289
    3. '   ' → logprob: -9.750284194946289
    4. '```' → logprob: -11.125284194946289
    5. '        
' → logprob: -12.750284194946289
    6. '<|end|>' → logprob: -13.125284194946289
    7. '
' → logprob: -13.625284194946289
    8. ' print' → logprob: -14.500284194946289
    9. '           ' → logprob: -15.250284194946289
    10. '``' → logprob: -15.625284194946289

Token 1030: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00011212585377506912
    2. ' print' → logprob: -9.500112533569336
    3. '       ' → logprob: -10.250112533569336
    4. '```' → logprob: -13.500112533569336
    5. '   ' → logprob: -14.750112533569336
    6. '	print' → logprob: -16.250112533569336
    7. '``' → logprob: -17.750112533569336
    8. '#print' → logprob: -18.000112533569336
    9. '.print' → logprob: -18.625112533569336
    10. 'printf' → logprob: -18.625112533569336

Token 1031: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.008150570094585419
    2. '(pos' → logprob: -5.008150577545166
    3. 'f' → logprob: -6.758150577545166
    4. 'pos' → logprob: -8.508150100708008
    5. '(int' → logprob: -10.133150100708008
    6. '(round' → logprob: -10.758150100708008
    7. 'int' → logprob: -12.008150100708008
    8. 'round' → logprob: -12.883150100708008
    9. '(' → logprob: -14.133150100708008
    10. '(float' → logprob: -14.758150100708008

Token 1032: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.23612931370735168
    2. '{' → logprob: -1.7361292839050293
    3. '({' → logprob: -4.361129283905029
    4. '"' → logprob: -4.486129283905029
    5. '("{' → logprob: -4.861129283905029
    6. '(f' → logprob: -7.111129283905029
    7. 'Vector' → logprob: -7.611129283905029
    8. '(Vector' → logprob: -7.611129283905029
    9. '(' → logprob: -9.111129760742188
    10. 'pos' → logprob: -9.236129760742188

Token 1033: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -9.436450636712834e-05
    2. 'int' → logprob: -9.625094413757324
    3. 'round' → logprob: -10.625094413757324
    4. 'abs' → logprob: -13.000094413757324
    5. '{' → logprob: -14.750094413757324
    6. 'float' → logprob: -14.875094413757324
    7. ' pos' → logprob: -15.500094413757324
    8. 'format' → logprob: -15.750094413757324
    9. 'f' → logprob: -15.875094413757324
    10. '(pos' → logprob: -16.125093460083008

Token 1034: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -6.988221684878226e-06
    2. '.' → logprob: -12.000006675720215
    3. ' .' → logprob: -14.250006675720215
    4. '}.' → logprob: -16.50000762939453
    5. ').' → logprob: -19.62500762939453
    6. ' ' → logprob: -19.62500762939453
    7. 'x' → logprob: -20.25000762939453
    8. '```' → logprob: -20.25000762939453
    9. '`.' → logprob: -20.50000762939453
    10. '.y' → logprob: -20.62500762939453

Token 1035: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.5280172824859619
    2. '}' → logprob: -0.9030172824859619
    3. ' :.' → logprob: -5.903017044067383
    4. ' }' → logprob: -6.278017044067383
    5. ' {:.' → logprob: -9.778017044067383
    6. ':' → logprob: -9.903017044067383
    7. ' ' → logprob: -10.653017044067383
    8. '},{' → logprob: -10.653017044067383
    9. ' ,' → logprob: -10.778017044067383
    10. '"' → logprob: -10.903017044067383

Token 1036: '2' (ID: 17)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.1648576408624649
    2. '3' → logprob: -3.0398576259613037
    3. '4' → logprob: -3.4148576259613037
    4. '2' → logprob: -3.6648576259613037
    5. '10' → logprob: -4.289857864379883
    6. '8' → logprob: -4.539857864379883
    7. '7' → logprob: -4.914857864379883
    8. '5' → logprob: -4.914857864379883
    9. '9' → logprob: -5.539857864379883
    10. '1' → logprob: -6.664857864379883

Token 1037: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00023452966706827283
    2. '6' → logprob: -8.500234603881836
    3. '3' → logprob: -10.750234603881836
    4. '2' → logprob: -12.250234603881836
    5. 'lf' → logprob: -12.875234603881836
    6. '7' → logprob: -14.500234603881836
    7. '```' → logprob: -14.875234603881836
    8. '4' → logprob: -15.000234603881836
    9. 'd' → logprob: -15.125234603881836
    10. '1' → logprob: -15.750234603881836

Token 1038: '}")
' (ID: 23577)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -4.3226136767771095e-05
    2. ' }' → logprob: -10.500042915344238
    3. ' {' → logprob: -11.500042915344238
    4. '{' → logprob: -12.625042915344238
    5. '}{' → logprob: -13.625042915344238
    6. '},' → logprob: -14.000042915344238
    7. '},{' → logprob: -16.625043869018555
    8. ' ' → logprob: -16.875043869018555
    9. 'f' → logprob: -17.375043869018555
    10. ',' → logprob: -17.750043869018555

Token 1039: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5966172218322754
    2. ',' → logprob: -1.7216172218322754
    3. 'print' → logprob: -2.0966172218322754
    4. ' print' → logprob: -2.7216172218322754
    5. ' ,' → logprob: -3.3466172218322754
    6. '<|end|>' → logprob: -3.4716172218322754
    7. '   ' → logprob: -5.221617221832275
    8. '    ' → logprob: -5.471617221832275
    9. '        ' → logprob: -6.596617221832275
    10. ',
' → logprob: -7.221617221832275

Token 1040: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0025750671047717333
    2. ' print' → logprob: -6.002574920654297
    3. '       ' → logprob: -9.252574920654297
    4. ',' → logprob: -13.252574920654297
    5. '	print' → logprob: -14.252574920654297
    6. '<|end|>' → logprob: -14.877574920654297
    7. '```' → logprob: -15.252574920654297
    8. '.print' → logprob: -15.752574920654297
    9. '   ' → logprob: -16.002574920654297
    10. '#print' → logprob: -16.252574920654297

Token 1041: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.625000953674316
    3. 'f' → logprob: -15.000000953674316
    4. '()' → logprob: -17.75
    5. '(F' → logprob: -18.125
    6. '((' → logprob: -20.0
    7. '	f' → logprob: -20.0
    8. '('' → logprob: -20.5
    9. '("' → logprob: -20.625
    10. '(
' → logprob: -20.875

Token 1042: '"{' (ID: 27510)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.5803073644638062
    2. '{' → logprob: -0.8303073644638062
    3. 'f' → logprob: -5.455307483673096
    4. '"{' → logprob: -9.455307006835938
    5. '{"' → logprob: -13.205307006835938
    6. '(' → logprob: -13.705307006835938
    7. '("{' → logprob: -14.205307006835938
    8. '[f' → logprob: -14.455307006835938
    9. '=f' → logprob: -14.580307006835938
    10. ' f' → logprob: -14.705307006835938

Token 1043: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.009292387403547764
    2. '{' → logprob: -5.2592926025390625
    3. 'f' → logprob: -5.5092926025390625
    4. '"{' → logprob: -13.634292602539062
    5. ' pos' → logprob: -17.009292602539062
    6. '(pos' → logprob: -17.259292602539062
    7. '-pos' → logprob: -18.134292602539062
    8. '	pos' → logprob: -18.634292602539062
    9. '[pos' → logprob: -18.759292602539062
    10. ' f' → logprob: -18.884292602539062

Token 1044: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0006389308837242424
    2. '{' → logprob: -8.000638961791992
    3. '.x' → logprob: -8.250638961791992
    4. '.f' → logprob: -10.500638961791992
    5. '.' → logprob: -11.750638961791992
    6. 'f' → logprob: -13.500638961791992
    7. ' .' → logprob: -13.500638961791992
    8. '.{' → logprob: -13.625638961791992
    9. 'y' → logprob: -14.250638961791992
    10. ' ' → logprob: -14.250638961791992

Token 1045: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -3.4121114822482923e-06
    2. '{' → logprob: -13.000003814697266
    3. ' :.' → logprob: -14.375003814697266
    4. '.' → logprob: -15.125003814697266
    5. '   ' → logprob: -15.750003814697266
    6. '}' → logprob: -16.750003814697266
    7. ' {:.' → logprob: -16.750003814697266
    8. '.:' → logprob: -18.000003814697266
    9. '(.' → logprob: -18.625003814697266
    10. '=.' → logprob: -19.250003814697266

Token 1046: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '02' → logprob: -18.625
    4. 'f' → logprob: -21.125
    5. '```' → logprob: -22.125
    6. '{' → logprob: -23.625
    7. '>' → logprob: -25.25
    8. '22' → logprob: -25.5
    9. '   ' → logprob: -25.75
    10. '``' → logprob: -26.0

Token 1047: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04931488633155823
    2. '2' → logprob: -3.0493149757385254
    3. '.' → logprob: -7.299314975738525
    4. '.f' → logprob: -10.549314498901367
    5. ' ' → logprob: -11.424314498901367
    6. '{' → logprob: -12.424314498901367
    7. '```' → logprob: -12.424314498901367
    8. ' f' → logprob: -12.549314498901367
    9. '}' → logprob: -14.549314498901367
    10. '   ' → logprob: -14.799314498901367

Token 1048: '}")
' (ID: 23577)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.030023768544197083
    2. '}")' → logprob: -3.5300238132476807
    3. ')")' → logprob: -8.905023574829102
    4. ')' → logprob: -9.280023574829102
    5. '")
' → logprob: -10.405023574829102
    6. '}' → logprob: -11.530023574829102
    7. '}")
' → logprob: -13.280023574829102
    8. '")}' → logprob: -13.405023574829102
    9. '')' → logprob: -15.530023574829102
    10. '"}' → logprob: -15.655023574829102

Token 1049: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16661670804023743
    2. '
' → logprob: -2.166616678237915
    3. '<|end|>' → logprob: -3.291616678237915
    4. ' if' → logprob: -6.791616916656494
    5. '```' → logprob: -8.041616439819336
    6. '\n' → logprob: -9.166616439819336
    7. '

' → logprob: -10.041616439819336
    8. '<|end|>' → logprob: -10.416616439819336
    9. '#' → logprob: -11.291616439819336
    10. '[' → logprob: -11.416616439819336

Token 1050: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5273151993751526
    2. 'count' (adapté à ' count') → logprob: -0.9023151993751526
    3. '<|end|>' → logprob: -6.277315139770508
    4. '        
' → logprob: -7.402315139770508
    5. '```' → logprob: -8.277315139770508
    6. '$count' → logprob: -8.402315139770508
    7. '	count' → logprob: -8.652315139770508
    8. ' count' → logprob: -8.652315139770508
    9. '
' → logprob: -9.027315139770508
    10. '[count' → logprob: -9.152315139770508

Token 1051: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.34189802408218384
    2. ' +=' → logprob: -1.341897964477539
    3. '+' → logprob: -3.591897964477539
    4. '=' → logprob: -7.341897964477539
    5. ' +' → logprob: -10.716897964477539
    6. '++' → logprob: -12.341897964477539
    7. ' =' → logprob: -12.591897964477539
    8. '(' → logprob: -13.841897964477539
    9. '+="' → logprob: -13.966897964477539
    10. '[' → logprob: -14.466897964477539

Token 1052: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '<|end|>' → logprob: -22.375
    4. '```' → logprob: -23.25
    5. '   ' → logprob: -24.0
    6. '۱' → logprob: -24.625
    7. '+' → logprob: -24.75
    8. '
' → logprob: -25.0
    9. '`' → logprob: -25.0
    10. '100' → logprob: -25.125

Token 1053: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '<|end|>' → logprob: -20.5
    4. '+' → logprob: -20.625
    5. '```' → logprob: -20.75
    6. 'count' → logprob: -21.125
    7. '   ' → logprob: -21.5
    8. '
' → logprob: -21.5
    9. '۱' → logprob: -22.125
    10. '100' → logprob: -22.25

Token 1054: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1055: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23029369115829468
    2. '<|end|>' → logprob: -1.7302937507629395
    3. '
' → logprob: -3.7302937507629395
    4. ' if' → logprob: -5.7302937507629395
    5. '```' → logprob: -7.2302937507629395
    6. '#' → logprob: -8.230293273925781
    7. '<|end|>' → logprob: -9.355293273925781
    8. '\n' → logprob: -9.730293273925781
    9. '...' → logprob: -11.480293273925781
    10. '[' → logprob: -11.730293273925781

Token 1056: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0003740694955922663
    2. ' if' → logprob: -8.500373840332031
    3. '       ' → logprob: -8.750373840332031
    4. '```' → logprob: -12.875373840332031
    5. '#' → logprob: -13.000373840332031
    6. '<|end|>' → logprob: -13.000373840332031
    7. '   ' → logprob: -13.625373840332031
    8. 'If' → logprob: -13.875373840332031
    9. 'sys' → logprob: -14.250373840332031
    10. '           ' → logprob: -14.625373840332031

Token 1057: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.005233882926404476
    2. ' count' → logprob: -5.2552337646484375
    3. '	count' → logprob: -16.255233764648438
    4. '(count' → logprob: -17.505233764648438
    5. '   ' → logprob: -18.630233764648438
    6. '  ' → logprob: -18.755233764648438
    7. '<count' → logprob: -18.755233764648438
    8. ' ' → logprob: -18.880233764648438
    9. '=count' → logprob: -18.880233764648438
    10. 'c' → logprob: -19.255233764648438

Token 1058: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.990824818611145
    2. '>=' → logprob: -0.990824818611145
    3. ' >=' → logprob: -1.990824818611145
    4. ' ==' → logprob: -2.1158246994018555
    5. '<|end|>' → logprob: -9.365824699401855
    6. ')>=' → logprob: -10.115824699401855
    7. '%' → logprob: -10.240824699401855
    8. '   ' → logprob: -10.365824699401855
    9. '≥' → logprob: -10.490824699401855
    10. '>' → logprob: -10.740824699401855

Token 1059: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5437095761299133
    2. '100' → logprob: -0.9187095761299133
    3. '50' → logprob: -5.043709754943848
    4. '20' → logprob: -5.418709754943848
    5. '5' → logprob: -5.543709754943848
    6. '1' → logprob: -5.793709754943848
    7. '25' → logprob: -7.793709754943848
    8. '3' → logprob: -8.043709754943848
    9. '500' → logprob: -8.043709754943848
    10. '200' → logprob: -8.043709754943848

Token 1060: '50' (ID: 1434)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3857700526714325
    2. '10' → logprob: -1.2607700824737549
    3. '50' → logprob: -4.135769844055176
    4. '20' → logprob: -4.760769844055176
    5. '5' → logprob: -5.760769844055176
    6. '1' → logprob: -6.135769844055176
    7. '200' → logprob: -6.635769844055176
    8. '500' → logprob: -7.010769844055176
    9. '25' → logprob: -7.135769844055176
    10. '3' → logprob: -7.635769844055176

Token 1061: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4772970676422119
    2. ':
' → logprob: -1.727297067642212
    3. '       ' → logprob: -2.227297067642212
    4. '           ' → logprob: -2.602297067642212
    5. '   ' → logprob: -3.977297067642212
    6. '	break' → logprob: -7.727296829223633
    7. '	' → logprob: -9.352296829223633
    8. '<|end|>' → logprob: -9.352296829223633
    9. '.' → logprob: -9.977296829223633
    10. '		' → logprob: -10.102296829223633

Token 1062: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.309382373117842e-05
    2. '		' → logprob: -11.250033378601074
    3. 'break' → logprob: -11.500033378601074
    4. ' break' → logprob: -11.875033378601074
    5. '       ' → logprob: -14.125033378601074
    6. '               ' → logprob: -14.250033378601074
    7. '	break' → logprob: -14.750033378601074
    8. '   ' → logprob: -15.250033378601074
    9. '	       ' → logprob: -15.500033378601074
    10. '          ' → logprob: -15.500033378601074

Token 1063: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -3.368984107510187e-05
    2. ' break' → logprob: -10.500033378601074
    3. '           ' → logprob: -12.250033378601074
    4. '	break' → logprob: -14.000033378601074
    5. 'return' → logprob: -15.375033378601074
    6. '       ' → logprob: -15.625033378601074
    7. '```' → logprob: -18.25003433227539
    8. '               ' → logprob: -18.62503433227539
    9. 'br' → logprob: -20.12503433227539
    10. '   ' → logprob: -20.25003433227539

Token 1064: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03846875950694084
    2. '<|end|>' → logprob: -3.663468837738037
    3. '
' → logprob: -4.538468837738037
    4. ' if' → logprob: -7.038468837738037
    5. '```' → logprob: -7.663468837738037
    6. '\n' → logprob: -10.788468360900879
    7. '<|end|>' → logprob: -11.288468360900879
    8. '#' → logprob: -11.413468360900879
    9. '...' → logprob: -12.663468360900879
    10. '[' → logprob: -13.288468360900879

Token 1065: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0009278989746235311
    2. '<|end|>' → logprob: -7.750927925109863
    3. '
' → logprob: -8.125927925109863
    4. '```' → logprob: -8.875927925109863
    5. ' if' → logprob: -9.750927925109863
    6. '#' → logprob: -14.500927925109863
    7. '<|end|>' → logprob: -14.750927925109863
    8. '  
' → logprob: -14.750927925109863
    9. '\n' → logprob: -14.875927925109863
    10. '    
' → logprob: -15.125927925109863

Token 1066: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1602519452571869
    2. '__' → logprob: -1.9102519750595093
    3. '_name' → logprob: -11.28525161743164
    4. '_' → logprob: -12.16025161743164
    5. 'name' → logprob: -12.28525161743164
    6. '___' → logprob: -12.66025161743164
    7. '```' → logprob: -14.66025161743164
    8. ' ' → logprob: -15.03525161743164
    9. 'if' → logprob: -15.16025161743164
    10. 'Name' → logprob: -15.16025161743164

Token 1067: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005877125076949596
    2. '==' → logprob: -5.5058770179748535
    3. ' ==' → logprob: -6.7558770179748535
    4. '__.__' → logprob: -8.505877494812012
    5. 'if' → logprob: -9.005877494812012
    6. 'name' → logprob: -9.255877494812012
    7. ' __' → logprob: -10.130877494812012
    8. '.__' → logprob: -10.255877494812012
    9. '=="' → logprob: -10.380877494812012
    10. '=='' → logprob: -10.755877494812012

Token 1068: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.014684110297821e-06
    2. '__.__' → logprob: -11.750008583068848
    3. '==' → logprob: -14.375008583068848
    4. '__
' → logprob: -16.125009536743164
    5. '__.' → logprob: -16.125009536743164
    6. '__('' → logprob: -16.250009536743164
    7. '__["' → logprob: -16.500009536743164
    8. '____' → logprob: -17.000009536743164
    9. '___' → logprob: -17.125009536743164
    10. '=="' → logprob: -17.125009536743164

Token 1069: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6499983668327332
    2. '==' → logprob: -0.7749983668327332
    3. '=="' → logprob: -4.774998188018799
    4. ' ==' → logprob: -4.899998188018799
    5. '=='' → logprob: -6.649998188018799
    6. '==
' → logprob: -10.399998664855957
    7. '_' → logprob: -11.899998664855957
    8. '__.__' → logprob: -11.899998664855957
    9. '===' → logprob: -12.149998664855957
    10. '=' → logprob: -12.399998664855957

Token 1070: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02326248399913311
    2. ''' → logprob: -3.7732625007629395
    3. '__' → logprob: -11.023262023925781
    4. ' "__' → logprob: -14.398262023925781
    5. '"user' → logprob: -16.14826202392578
    6. '"name' → logprob: -17.39826202392578
    7. ' '__' → logprob: -18.52326202392578
    8. ''"' → logprob: -19.02326202392578
    9. '("__' → logprob: -19.02326202392578
    10. '"is' → logprob: -19.64826202392578

Token 1071: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0008136780234053731
    2. '__' → logprob: -7.1258134841918945
    3. 'name' → logprob: -12.125813484191895
    4. '"' → logprob: -12.875813484191895
    5. '_main' → logprob: -14.375813484191895
    6. ' main' → logprob: -15.625813484191895
    7. 'built' → logprob: -15.875813484191895
    8. ''' → logprob: -16.12581443786621
    9. '-main' → logprob: -17.12581443786621
    10. '主' → logprob: -17.25081443786621

Token 1072: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16221970319747925
    2. '__' → logprob: -1.912219762802124
    3. '__':
' → logprob: -6.287219524383545
    4. '__.' → logprob: -10.037220001220703
    5. '__.__' → logprob: -10.287220001220703
    6. '__
' → logprob: -10.287220001220703
    7. '__
' → logprob: -11.537220001220703
    8. '__["' → logprob: -11.662220001220703
    9. '__",' → logprob: -13.787220001220703
    10. '__:' → logprob: -14.662220001220703

Token 1073: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.001058771857060492
    2. '   ' → logprob: -7.001058578491211
    3. '	main' → logprob: -9.501058578491211
    4. ' main' → logprob: -9.751058578491211
    5. '_main' → logprob: -12.251058578491211
    6. '```' → logprob: -12.501058578491211
    7. '    
' → logprob: -13.126058578491211
    8. '__' → logprob: -13.251058578491211
    9. '(main' → logprob: -13.876058578491211
    10. '
' → logprob: -15.501058578491211

Token 1074: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.625
    3. '	main' → logprob: -18.0
    4. '   ' → logprob: -19.75
    5. 'import' → logprob: -19.75
    6. '(main' → logprob: -22.625
    7. '.main' → logprob: -23.375
    8. '_main' → logprob: -24.125
    9. '    
' → logprob: -24.75
    10. 'maine' → logprob: -25.125

Token 1075: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1073
Tokens correctement prédits (1ère position, stricte): 501
Tokens correctement prédits (1ère position, avec adaptation): 548
Tokens correctement prédits (top 10): 884
Précision stricte (1ère position): 46.69%
Précision adaptée (1ère position): 51.07%
Précision (top 10): 82.39%
================================================================================
